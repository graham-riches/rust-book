
v5_rcp.elf:     file format elf32-littlearm

SYMBOL TABLE:
08020000 l    d  .vectors	00000000 .vectors
080201ac l    d  .init	00000000 .init
080203e4 l    d  .text	00000000 .text
080420b8 l    d  .ctors	00000000 .ctors
08042114 l    d  .rodata	00000000 .rodata
0804bdf8 l    d  .ARM.exidx	00000000 .ARM.exidx
20000000 l    d  .fast_run	00000000 .fast_run
20000000 l    d  .data	00000000 .data
20000000 l    d  .data_run	00000000 .data_run
20002504 l    d  .bss	00000000 .bss
200124f0 l    d  .tbss	00000000 .tbss
200124f4 l    d  .tdata_run	00000000 .tdata_run
200124f4 l    d  .heap	00000000 .heap
200128f8 l    d  .stack	00000000 .stack
200148f8 l    d  .stack_process	00000000 .stack_process
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .ARM.attributes	00000000 .ARM.attributes
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    df *ABS*	00000000 v5_rcp Beta - Release/STM32_StartupTx.o
080201ac l       .vectors	00000000 _vectors_end
0a037a00 l       *ABS*	00000000 SYSTEM_CLOCK
0002903f l       *ABS*	00000000 SYSTICK_CYCLES
00000000 l    df *ABS*	00000000 v5_rcp Beta - Release/thumb_crt0.o
08020342 l     F .init	00000000 memory_copy
08020358 l     F .init	00000000 memory_set
08020322 l       .init	00000000 ctor_loop
08020332 l       .init	00000000 ctor_end
08020338 l     F .init	00000000 start
08020340 l       .init	00000000 exit_loop
00000000 l    df *ABS*	00000000 network.c
080203e4 l     F .text	00000010 udpReceiveFromDiagnostic
080203f4 l     F .text	00000010 udpReceiveFromCcp
08020404 l     F .text	00000010 udpReceiveFromMc
08020414 l     F .text	00000104 udpReceive
20002528 l     O .bss	0000003c NETWORK_pkt_data_pool
20002618 l     O .bss	00000004 nx_first_unused_memory
20002dc4 l     O .bss	000005dc udpRxBuffer
200033a0 l     O .bss	000001bc udpSocketList
00000000 l    df *ABS*	00000000 system.cpp
08020af8 l     F .text	000000c4 checkStackUsage()
20003634 l     O .bss	00000064 threadMonitor
20003698 l     O .bss	00000001 stackOverflowFlag
2000369c l     O .bss	00000004 allThreadsRunningFlag
0804278c l     O .rodata	00000098 scbFaults
00000000 l    df *ABS*	00000000 command_line.cpp
200036a0 l     O .bss	00000078 CLI_menuCommands
00000000 l    df *ABS*	00000000 debug_menu.cpp
08021550 l     F .text	0000009c udpFunc(int, char**)
080215ec l     F .text	0000004c mutexFunc(int, char**)
08021638 l     F .text	0000001c debugLogPopHandler()
08021660 l     F .text	000001b4 wheelCalFunc(int, char**)
08021820 l     F .text	00000014 debugBoot(int, char**)
08021840 l     F .text	0000000e binMain(int, char**)
0802185c l     F .text	00000070 sramtestMain(int, char**)
080218cc l     F .text	00000028 framtestMain(int, char**)
080218f4 l     F .text	00000014 framinitMain(int, char**)
08021914 l     F .text	00000058 recoveryFunc(int, char**)
0802196c l     F .text	000000ec moveFunc(int, char**)
08021a58 l     F .text	00000014 articulationFunc(int, char**)
08021a78 l     F .text	0000000a helpFunc(int, char**)
08021a90 l     F .text	000000f0 navigationFunc(int, char**)
08021b80 l     F .text	00000048 systemFunc(int, char**)
08021bc8 l     F .text	00000020 waPosFunc(int, char**)
08021be8 l     F .text	0000009c nvmFunc(int, char**)
08021c84 l     F .text	0000003c logFunc(int, char**)
08021cc0 l     F .text	0000003c ccpUart(int, char**)
08021cfc l     F .text	000000dc imuMain(int, char**)
08021dd8 l     F .text	0000010c iocfgMain(int, char**)
08021ee4 l     F .text	000000a0 ioreadMain(int, char**)
08021f84 l     F .text	000000c4 iosetMain(int, char**)
08022048 l     F .text	00000244 cdm_main(int, char**)
0802228c l     F .text	00000072 pickFunc(int, char**)
08022300 l     F .text	0000004a homeFunc(int, char**)
0802234c l     F .text	0000003e launchFunc(int, char**)
0802238c l     F .text	00000062 prelaunchFunc(int, char**)
080223f0 l     F .text	000000c8 camFunc(int, char**)
080224b8 l     F .text	0000012c robotFunc(int, char**)
200037f0 l     O .bss	00000010 cliRingBuff
20003800 l     O .bss	00000200 cliRxBuffer
20003a00 l     O .bss	00000080 debugLogBuffer
20003a80 l     O .bss	00000080 CLI_enterThread::commandBuffer
20003b00 l     O .bss	00000008 iocfgMain(int, char**)::gpio
20003b08 l     O .bss	00000004 iocfgMain(int, char**)::GPIOx
20000000 l     O .data	00000078 MENU_commandsList
08043aa8 l     O .rodata	00000010 help
08043ac8 l     O .rodata	00000010 move
08043c78 l     O .rodata	00000010 prelaunch
08043b48 l     O .rodata	00000010 launch
08043ab8 l     O .rodata	00000010 home
08043a98 l     O .rodata	00000010 cam
08043ad8 l     O .rodata	00000010 pick
08043a0c l     O .rodata	00000010 articulation
08043c1c l     O .rodata	00000010 recovery
08043af8 l     O .rodata	00000010 cmdCdm
08043bb8 l     O .rodata	00000010 cmdIoset
08043c3c l     O .rodata	00000010 cmdIoread
08043ba8 l     O .rodata	00000010 cmdIocfg
080439cc l     O .rodata	00000010 cmdFraminit
080439dc l     O .rodata	00000010 cmdFramtest
080439ec l     O .rodata	00000010 cmdSramtest
08043b08 l     O .rodata	00000010 cmdImu
080439a0 l     O .rodata	00000010 cmdCcpuart
08043c2c l     O .rodata	00000010 robotCmd
08043ae8 l     O .rodata	00000010 cmdBin
08043b18 l     O .rodata	00000010 cmdLog
08043a1c l     O .rodata	00000010 cmdDebugBoot
08043b28 l     O .rodata	00000010 cmdNvm
08043bd8 l     O .rodata	00000010 cmdWaPos
080439fc l     O .rodata	00000010 cmdWheelCal
08043c4c l     O .rodata	00000010 cmdSystem
08043a58 l     O .rodata	00000010 cmdNavigation
08043bc8 l     O .rodata	00000010 cmdMutex
08043b38 l     O .rodata	00000010 cmdUdp
08043b80 l     O .rodata	00000008 ccpArgs
080439b0 l     O .rodata	0000000c ioreadArgs
080439bc l     O .rodata	00000008 launchArgs
080439c4 l     O .rodata	00000008 systemArgs
08043a2c l     O .rodata	00000004 framinitArgs
08043a30 l     O .rodata	00000008 framtestArgs
08043a40 l     O .rodata	00000008 sramtestArgs
08043a48 l     O .rodata	00000010 wheelCalArgs
08043a90 l     O .rodata	00000008 articulationArgs
08043a68 l     O .rodata	00000008 debugBootArgs
08043a38 l     O .rodata	00000008 recoveryArgs
08043a88 l     O .rodata	00000008 navigationArgs
08043a70 l     O .rodata	00000008 prelaunchArgs
08043a78 l     O .rodata	00000010 cdm_usage_list
08043b60 l     O .rodata	00000020 camArgs
08043be8 l     O .rodata	00000008 helpArgs
08043bf0 l     O .rodata	00000008 homeArgs
08043bf8 l     O .rodata	0000000c moveArgs
08043c04 l     O .rodata	00000018 pickArgs
08043b58 l     O .rodata	00000008 binArgs
08043b88 l     O .rodata	00000008 imuArgs
08043b90 l     O .rodata	00000008 logArgs
08043b98 l     O .rodata	00000008 nvmArgs
08043ba0 l     O .rodata	00000008 udpArgs
08043c5c l     O .rodata	0000000c iocfgArgs
08043c68 l     O .rodata	0000000c iosetArgs
08043c74 l     O .rodata	00000004 mutexArgs
08043c98 l     O .rodata	00000008 waPosArgs
08043c88 l     O .rodata	00000010 robotArgs
08043ca0 l     O .rodata	00000024 selectGpioPort(char*)::portArray
00000000 l    df *ABS*	00000000 debug_log.c
20003b0c l     O .bss	00000200 debugLogBuffer
20003d58 l     O .bss	00000004 printFunction
20003dc4 l     O .bss	00000004 subtaskSendFunction
20003dc8 l     O .bss	00000001 systemVerboseLevel
00000000 l    df *ABS*	00000000 log_buffer.c
00000000 l    df *ABS*	00000000 robot.cpp
00000000 l    df *ABS*	00000000 axis_base.cpp
00000000 l    df *ABS*	00000000 axis_multi_servo.cpp
00000000 l    df *ABS*	00000000 axis_single_servo.cpp
08023260 l     F .text	00000050 SingleServoAxis::executeCommand(unsigned char, unsigned char*, unsigned short) [clone .part.0]
00000000 l    df *ABS*	00000000 axis_multi_stepper.cpp
00000000 l    df *ABS*	00000000 axis_single_stepper.cpp
080238f4 l     F .text	0000002c SingleStepperAxis::executeCommand(unsigned char, unsigned char*, unsigned short) [clone .part.0]
00000000 l    df *ABS*	00000000 articulation.cpp
08044038 l     O .rodata	00000070 transitionTable
00000000 l    df *ABS*	00000000 ccp.cpp
08024020 l     F .text	0000002c CCP_processDataRequest.part.0
20003dcc l     O .bss	00000015 ccpCommand
20003de4 l     O .bss	0000000c ccpStateData
20003df0 l     O .bss	00000084 rcpStateData
20003e74 l     O .bss	00000005 responseMessage
20003e7c l     O .bss	000007e2 handler
08044164 l     O .rodata	00000007 CSWTCH.15
0804416c l     O .rodata	00000007 CSWTCH.16
00000000 l    df *ABS*	00000000 mcm.cpp
200046ac l     O .bss	00000092 handler
00000000 l    df *ABS*	00000000 cdm.cpp
20004740 l     O .bss	00000008 versionCdm
20004748 l     O .bss	00000001 flagVersion
2000474c l     O .bss	0000004c mutex
00000000 l    df *ABS*	00000000 nav_comms.c
20004798 l     O .bss	00000105 rxMessage
00000000 l    df *ABS*	00000000 bsb.c
200048a0 l     O .bss	00000001 flagVersion
200048a4 l     O .bss	0000004c mutex
200048f0 l     O .bss	00000008 versionBsb
00000000 l    df *ABS*	00000000 diagnostics.cpp
08025108 l     F .text	00000034 _GLOBAL__sub_I__Z21DIAGNOSTIC_initializev
200048f8 l     O .bss	0000012c handler
080442b8 l     O .rodata	0000001c CSWTCH.12
080442d4 l     O .rodata	00000007 CSWTCH.13
00000000 l    df *ABS*	00000000 diagnostic_message_functions.cpp
00000000 l    df *ABS*	00000000 comm.cpp
08025258 l     F .text	0000000a unsigned short endianSwapIfRequired<unsigned short>(unsigned short, COMM_endianOrder_e) [clone .part.0]
00000000 l    df *ABS*	00000000 antctrl.cpp
0802580c l     F .text	00000030 _GLOBAL__sub_I_ANTCTRL_thread
20004afc l     O .bss	00000034 taskManager
00000000 l    df *ABS*	00000000 attic_entry.cpp
0802583c l     F .text	0000016c ATTIC_ENTRY_errorStateMachine(unsigned long)
080259a8 l     F .text	0000029c ATTIC_ENTRY_mainStateMachine(unsigned long)
08025c44 l     F .text	000000d0 ATTIC_ENTRY_setup()
20004b4c l     O .bss	00000010 atticPositions
20004b5c l     O .bss	00000010 dynamicHomingTorque
20004b6c l     O .bss	00000004 staticHomingPosition
20004b70 l     O .bss	00000004 dynamicHomingPosition
20004b74 l     O .bss	00000014 handler
2000007c l     O .data	000000c0 stateTable
2000013c l     O .data	00000030 errorStateTable
2000016c l     O .data	00000020 config
00000000 l    df *ABS*	00000000 pick_bin.cpp
08025d34 l     F .text	000001bc PICK_BIN_mainStateMachine(unsigned long)
08025ef0 l     F .text	000000c4 PICK_BIN_setup()
08025fb4 l     F .text	0000006c logOverTorque(unsigned long, char const*) [clone .part.0]
08026020 l     F .text	0000029c PICK_BIN_errorStateMachine(unsigned long)
20004b88 l     O .bss	00000004 expectedBinState
20004b8c l     O .bss	00000006 pickRetryCounters
20004b94 l     O .bss	00000004 binDirectionPartialMask
20004b98 l     O .bss	00000004 secondChanceBinStateMask
20004b9c l     O .bss	00000014 config
20004bb0 l     O .bss	00000014 handler
20004bc4 l     O .bss	00000001 retryType
2000018c l     O .data	00000110 stateTable
2000029c l     O .data	00000030 errorStateTable
200002cc l     O .data	00000020 smConfig
00000000 l    df *ABS*	00000000 pick_bin_retries.cpp
0802630c l     F .text	00000100 PICK_BIN_RETRIES_errorStateMachine(unsigned long)
0802640c l     F .text	00000184 PICK_BIN_RETRIES_mainStateMachine(unsigned long)
08026630 l     F .text	00000010 _GLOBAL__sub_I__Z24PICK_BIN_RETRIES_runTask23PICK_BIN_RETRIES_type_tmP17PICK_BIN_config_tb
20004bc8 l     O .bss	00000008 retryHandler
20004bd0 l     O .bss	00000014 handler
200002ec l     O .data	00000060 returnAbort
2000034c l     O .data	00000050 highCenterPick
2000039c l     O .data	00000010 errorStateTable
200003ac l     O .data	00000040 retractAndAbort
200003ec l     O .data	00000040 secondChancePick
2000042c l     O .data	00000030 wideGrooveRobotStrike
2000045c l     O .data	00000060 ribPick
200004bc l     O .data	00000020 smConfig
08044c04 l     O .rodata	00000018 stateTable
08044c1c l     O .rodata	00000018 errorHandlerStrings
00000000 l    df *ABS*	00000000 placepick.cpp
08026640 l     F .text	00000090 PLACEPICK_errorStateMachine(unsigned long)
080266d0 l     F .text	000003dc PLACEPICK_mainStateMachine(unsigned long)
08026aac l     F .text	00000034 PLACEPICK_setup()
08026ddc l     F .text	00000010 _GLOBAL__sub_I_binTransactionRecord
20004be4 l     O .bss	0000003c pickHandler
20004c20 l     O .bss	00000004 cachedErrorCode
20004c24 l     O .bss	00000014 handler
200004dc l     O .data	00000030 errorStateTable
2000050c l     O .data	00000020 config
2000052c l     O .data	000000a0 soloPut
200005cc l     O .data	000000e0 fullPick
200006ac l     O .data	000000a0 soloPick
2000074c l     O .data	00000060 onAntPick
08044f04 l     O .rodata	00000010 stateTables
08044f14 l     O .rodata	00000010 turretCCPMapping
00000000 l    df *ABS*	00000000 place_bin.cpp
08026dec l     F .text	00000018 PLACE_BIN_setup()
08026e04 l     F .text	00000184 PLACE_BIN_errorStateMachine(unsigned long)
08026f88 l     F .text	0000014c PLACE_BIN_mainStateMachine(unsigned long)
080270d4 l     F .text	00000044 PLACE_BIN_teardown()
0802716c l     F .text	00000028 _GLOBAL__sub_I__Z17PLACE_BIN_runTaskm18PLACE_BIN_config_tb
20004c3a l     O .bss	00000001 retryHandler
20004c3c l     O .bss	00000010 binPullbackMonitor
20004c4c l     O .bss	00000001 torqueSpikeDetected
20004c50 l     O .bss	00000018 config
20004c68 l     O .bss	00000014 handler
200007ac l     O .data	000000b0 stateTable
2000085c l     O .data	00000030 errorStateTable
2000088c l     O .data	00000020 smConfig
00000000 l    df *ABS*	00000000 place_bin_retries.cpp
08027194 l     F .text	00000124 PLACE_BIN_RETRIES_mainStateMachine(unsigned long)
080272b8 l     F .text	0000013c PLACE_BIN_RETRIES_errorStateMachine(unsigned long)
08027494 l     F .text	00000010 _GLOBAL__sub_I__Z25PLACE_BIN_RETRIES_runTask24PLACE_BIN_RETRIES_type_tmP18PLACE_BIN_config_tb
20004c7c l     O .bss	00000008 retryHandler
20004c84 l     O .bss	00000014 handler
200008ac l     O .data	00000080 binPullback
2000092c l     O .data	00000050 shelfStrike
2000097c l     O .data	00000030 retractAbort
200009ac l     O .data	00000020 errorStateTable
200009cc l     O .data	00000040 binOnBin
20000a0c l     O .data	00000020 smConfig
08045180 l     O .rodata	00000010 stateTable
08045190 l     O .rodata	00000010 errorHandlerStrings
00000000 l    df *ABS*	00000000 attic_entry_homing_error.cpp
080274a4 l     F .text	00000098 ATTIC_ENTRY_homingErrorHandler(unsigned long)
20004c98 l     O .bss	00000010 atticPositions
20004ca8 l     O .bss	00000014 handler
20004cbc l     O .bss	00000001 errorAxis
20000a2c l     O .data	00000030 staticFailedStateTable
20000a5c l     O .data	00000040 dynamicFailedStateTable
20000a9c l     O .data	00000020 config
00000000 l    df *ABS*	00000000 robot_actions_api.cpp
08045214 l     O .rodata	00000004 powerAllAxes
00000000 l    df *ABS*	00000000 sm_runner.cpp
08027da0 l     F .text	000000b4 SM_RUNNER_setTimeout(SM_RUNNER_config_t*, SM_RUNNER_handler_t*) [clone .isra.0]
08027e54 l     F .text	0000005c SM_RUNNER_cleanupTimer(SM_RUNNER_handler_t*) [clone .isra.0]
00000000 l    df *ABS*	00000000 attic_exit.cpp
0802831c l     F .text	0000016c ATTIC_EXIT_mainStateMachine(unsigned long)
08028488 l     F .text	00000054 ATTIC_EXIT_setup()
080284dc l     F .text	00000150 ATTIC_EXIT_errorStateMachine(unsigned long)
20004cbd l     O .bss	00000001 retryHandler
20004cc0 l     O .bss	00000010 atticPositions
20004cd0 l     O .bss	00000014 handler
20000abc l     O .data	00000040 errorStateTable
20000afc l     O .data	00000090 dynamicsRaisedRoutine
20000b8c l     O .data	00000070 dynamicsLoweredRoutine
20000bfc l     O .data	00000020 config
00000000 l    df *ABS*	00000000 movexy.cpp
08028674 l     F .text	00000328 MOVEXY_mainStateMachine(unsigned long)
0802899c l     F .text	00000030 MOVEXY_teardown()
080289cc l     F .text	00000008 MOVEXY_squareProgressEventHandler(void*)
080289d4 l     F .text	000002a8 MOVEXY_setup()
08028c88 l     F .text	00000124 MOVEXY_errorStateMachine(unsigned long)
08028df8 l     F .text	0000000c _GLOBAL__sub_I__Z14MOVEXY_runTaskP17COMM_CCP_moveXY_tmb
20004ce4 l     O .bss	0000001c cameraData
20004d00 l     O .bss	00000030 moveParams
20004d30 l     O .bss	00000001 cachedErrorCode
20004d34 l     O .bss	0000002c squareProgressMonitor
20004d60 l     O .bss	00000014 handler
20004d74 l     O .bss	0000000d moveCmd
20000c1c l     O .data	00000030 errorStateTable
20000c4c l     O .data	000000b0 moveWithCorrection
20000cfc l     O .data	00000080 moveWithNoCorrection
20000d7c l     O .data	00000020 config
00000000 l    df *ABS*	00000000 movexy_transition.cpp
08028e04 l     F .text	0000000c longDurationAlarmTimerCallback(unsigned int, void*)
08028e10 l     F .text	00000020 MOVE_transitionSetup()
08028e30 l     F .text	00000318 MOVE_transitionErrorStateMachine(unsigned long)
08029148 l     F .text	00000090 MOVE_transitionStateMachine(unsigned long)
20004d84 l     O .bss	00000004 cachedErrorCode
20004d88 l     O .bss	00000010 transitionHandler
20004d98 l     O .bss	00000001 movementDirectionAxis
20004d9c l     O .bss	00000014 handler
20000d9c l     O .data	00000040 stateTable
20000ddc l     O .data	00000090 errorStateTable
20000e6c l     O .data	00000020 config
00000000 l    df *ABS*	00000000 movexy_wheel_calibration.cpp
20000e8c l     O .data	00000004 xWheelConvergence
20000e90 l     O .data	00000004 yWheelConvergence
00000000 l    df *ABS*	00000000 bsmnt_exit.cpp
0802949c l     F .text	00000018 BASEMENT_EXIT_setup()
080294b4 l     F .text	0000017c BASEMENT_EXIT_errorStateMachine(unsigned long)
08029630 l     F .text	0000023c BASEMENT_EXIT_mainStateMachine(unsigned long)
20004db0 l     O .bss	00000001 cachedErrorCode
20004db1 l     O .bss	00000001 enableTurretMove
20004db4 l     O .bss	00000010 basementPositions
20004dc4 l     O .bss	00000014 handler
20000e94 l     O .data	000000d0 stateTable
20000f64 l     O .data	00000020 errorStateTable
20000f84 l     O .data	00000020 config
00000000 l    df *ABS*	00000000 configure.cpp
08029900 l     F .text	000001b4 CONFIGURE_mainStateMachine(unsigned long)
20004dd8 l     O .bss	00000002 stateHandler
20004ddc l     O .bss	00000014 handler
20000fa4 l     O .data	00000050 stateTable
20000ff4 l     O .data	00000020 config
00000000 l    df *ABS*	00000000 home.cpp
08029af0 l     F .text	000000a4 HOME_mainStateMachine(unsigned long)
20004df0 l     O .bss	00000003 ccpCommandFrame
20004df4 l     O .bss	00000014 handler
20001014 l     O .data	00000020 homingStateTable
20001034 l     O .data	00000020 config
08045b8c l     O .rodata	00000020 homingSequence
00000000 l    df *ABS*	00000000 full_home.cpp
08029c08 l     F .text	000000c8 FULL_HOME_mainStateMachine(unsigned long)
08029cd0 l     F .text	000000d0 FULL_HOME_topAssemblyStateMachine(unsigned long)
08029da0 l     F .text	000001ac FULL_HOME_bottomAssemblyStateMachine(unsigned long)
20004e08 l     O .bss	00000014 topAssemblyHandler
20004e1c l     O .bss	00000014 bottomAssemblyHandler
20004e30 l     O .bss	00000014 handler
20001054 l     O .data	00000050 fullHoming
200010a4 l     O .data	00000020 fullHomingConfig
200010c4 l     O .data	00000020 topAssemblyConfig
200010e4 l     O .data	00000060 topAssemblyHoming
20001144 l     O .data	00000020 bottomAssemblyConfig
20001244 l     O .data	000000d0 bottomAssemblyDefaultHoming
20001164 l     O .data	000000e0 bottomAssemblySafeHoming
00000000 l    df *ABS*	00000000 instant_home.cpp
08029fa8 l     F .text	00000178 INSTANT_HOME_mainStateMachine(unsigned long)
0802a168 l     F .text	00000024 _GLOBAL__sub_I__Z16INSTANT_HOME_run22COMM_CCP_homingModes_tmb
20004e44 l     O .bss	00000001 homingMode
20004e48 l     O .bss	00000014 handler
20001314 l     O .data	00000090 positionMap
200013a4 l     O .data	000000a0 instantHoming
20001444 l     O .data	00000020 config
00000000 l    df *ABS*	00000000 locate.cpp
0802a18c l     F .text	000000ac LOCATE_mainStateMachine(unsigned long)
20004e5c l     O .bss	00000003 deadReckoning
20004e60 l     O .bss	00000014 handler
20001464 l     O .data	00000050 stateTable
200014b4 l     O .data	00000020 config
00000000 l    df *ABS*	00000000 prelaunch.cpp
0802a2c8 l     F .text	00000198 PRELAUNCH_mainStateMachine(unsigned long)
0802a4dc l     F .text	00000010 _GLOBAL__sub_I__Z17PRELAUNCH_runTaskPvmb
20004e74 l     O .bss	00000002 prelaunchCmd
20004e78 l     O .bss	00000003 compoundMoveTypes
20004e7c l     O .bss	0000000c compoundMoveDistances
20004e88 l     O .bss	00000014 handler
200014d4 l     O .data	00000060 prelaunchOne
20001534 l     O .data	00000020 prelaunchTwo
20001554 l     O .data	00000050 prelaunchAbort
200015a4 l     O .data	00000040 prelaunchDirectToStageTwo
200015e4 l     O .data	00000020 config
08045efc l     O .rodata	00000010 CSWTCH.6
08045f0c l     O .rodata	00000010 stateTable
08045f1c l     O .rodata	00000003 compoundMoveAxes
00000000 l    df *ABS*	00000000 launch.cpp
0802a4ec l     F .text	0000003c LAUNCH_errorStateMachine(unsigned long)
0802a528 l     F .text	00000134 LAUNCH_mainStateMachine(unsigned long)
0802a65c l     F .text	000000c8 LAUNCH_setup()
20004e9c l     O .bss	00000010 atticPositions
20004eac l     O .bss	00000004 cachedErrorCode
20004eb0 l     O .bss	00000004 ccpCmd
20004eb4 l     O .bss	00000014 handler
20001604 l     O .data	00000010 errorStateTable
20001614 l     O .data	00000090 stateTableFromLAL
200016a4 l     O .data	00000070 stateTableFromSelfLift
20001714 l     O .data	00000020 config
00000000 l    df *ABS*	00000000 recovery.cpp
0802a77c l     F .text	000000a4 RECOVERY_mainStateMachine(unsigned long)
20004ec8 l     O .bss	00000001 recoveryTaskId
20004ec9 l     O .bss	00000001 recoveryDirection
20004ecc l     O .bss	00000014 handler
20001734 l     O .data	00000020 stateTable
20001754 l     O .data	00000020 config
08046010 l     O .rodata	00000008 taskFunctions
00000000 l    df *ABS*	00000000 recovery_move.cpp
0802a8c8 l     F .text	000001b8 RECOVERY_moveMainStateMachine(unsigned long)
0802aa80 l     F .text	000000fc RECOVERY_setup()
20004ee0 l     O .bss	0000001c cameraData
20004efc l     O .bss	00000018 recoveryHandler
20004f14 l     O .bss	00000001 recoveryDirection
20004f18 l     O .bss	00000014 handler
20001774 l     O .data	000000d0 stateTable
20001844 l     O .data	00000020 config
00000000 l    df *ABS*	00000000 recovery_no_move.cpp
0802aba8 l     F .text	00000124 RECOVERY_noMoveMainStateMachine(unsigned long)
20004f2c l     O .bss	0000001c cameraData
20004f48 l     O .bss	00000014 handler
20001864 l     O .data	000000a0 stateTable
20001904 l     O .data	00000020 config
00000000 l    df *ABS*	00000000 camera_calibration.cpp
0802ad08 l     F .text	00000004 CAMERA_CALIBRATION_cameraTriggerCallback(void*)
0802ad0c l     F .text	00000058 CAMERA_CALIBRATION_calibrateDirection(CAMERA_CALIBRATION_direction_t, unsigned long, bool)
0802ad64 l     F .text	000001b4 CAMERA_CALIBRATION_singleDirectionStateMachine(unsigned long)
0802af18 l     F .text	00000308 CAMERA_CALIBRATION_mainStateMachine(unsigned long)
0802b220 l     F .text	00000060 CAMERA_CALIBRATION_errorStateMachine(unsigned long)
0802b2a0 l     F .text	0000000c _GLOBAL__sub_I__Z26CAMERA_CALIBRATION_runTaskPvmb
20004f5c l     O .bss	00000014 mainHandler
20004f70 l     O .bss	00000014 currentDirection
20004f84 l     O .bss	00000020 measuredCalibrations
20004fa4 l     O .bss	0000002c distanceTravelledMonitor
20004fd0 l     O .bss	00000014 calibrateDirectionHandler
20001924 l     O .data	00000020 mainConfig
20001944 l     O .data	000000b0 mainStateTable
200019f4 l     O .data	00000020 errorStateTable
20001a14 l     O .data	00000050 movementConfiguration
20001a64 l     O .data	00000020 calibrateDirectionConfig
20001a84 l     O .data	00000070 calibrateDirectionStateTable
00000000 l    df *ABS*	00000000 torque_sharing.cpp
0802b2ac l     F .text	000000c8 TORQUE_SHARING_mainStateMachine(unsigned long)
0802b374 l     F .text	0000001c __tcf_0
0802b390 l     F .text	00000050 TORQUE_SHARING_tearDown()
0802b3e0 l     F .text	000000a4 TORQUE_SHARING_setup()
0802b604 l     F .text	00000074 _GLOBAL__sub_I__Z22TORQUE_SHARING_runTask17ROBOT_axisIndex_tmb
20004fe4 l     O .bss	00000001 calculationValid
20004fe8 l     O .bss	00000004 primaryTorqueAxes
20004fec l     O .bss	00000004 secondaryTorqueAxes
20004ff0 l     O .bss	00000010 secondaryAxisHomingTorque
20005000 l     O .bss	00000014 handler
20005014 l     O .bss	00000040 monitors
20005054 l     O .bss	00000001 multiAxis
20001af4 l     O .data	00000040 stateTable
20001b34 l     O .data	00000020 config
00000000 l    df *ABS*	00000000 self_lift.cpp
0802b698 l     F .text	00000098 SELF_LIFT_errorStateMachine(unsigned long)
0802b730 l     F .text	00000278 SELF_LIFT_mainStateMachine(unsigned long)
0802b9a8 l     F .text	000000dc SELF_LIFT_setup()
20005058 l     O .bss	00000002 selfLiftCommand
2000505c l     O .bss	00000004 staticHomeOffset
20005060 l     O .bss	00000010 staticHomeTorque
20005070 l     O .bss	00000010 basementPositions
20005080 l     O .bss	00000004 dynamicHomeOffset
20005084 l     O .bss	00000014 handler
20001b54 l     O .data	00000020 abortStateTable
20001b74 l     O .data	00000020 errorStateTable
20001b94 l     O .data	000000b0 insertionStateTable
20001c44 l     O .data	00000020 config
00000000 l    df *ABS*	00000000 self_lift_homing_error_handler.cpp
20005098 l     O .bss	00000004 z8HomePosition
2000509c l     O .bss	00000010 basementPositions
200050ac l     O .bss	00000014 handler
20001c64 l     O .data	00000050 staticHomingFailedStateTable
20001cb4 l     O .data	00000080 dynamicHomingFailedStateTable
20001d34 l     O .data	00000020 config
00000000 l    df *ABS*	00000000 task_status.cpp
00000000 l    df *ABS*	00000000 task_manager.cpp
080467dc l     O .rodata	0000026c taskTable
00000000 l    df *ABS*	00000000 power_mode.cpp
0802bfec l     F .text	00000120 POWERMODE_mainStateMachine(unsigned long)
0802c10c l     F .text	00000054 POWERMODE_setup()
200050c0 l     O .bss	00000004 endArticulation
200050c4 l     O .bss	00000014 handler
200050d8 l     O .bss	00000001 powerMode
20001d54 l     O .data	00000050 runModeStateTable
20001da4 l     O .data	00000040 chargeModeStateTable
20001de4 l     O .data	00000020 config
00000000 l    df *ABS*	00000000 upgrader_metaData.cpp
0802c1b8 l     F .text	00000078 UPGRADER_metadataMainStateMachine(unsigned long)
200050dc l     O .bss	00000003 tag
200050e0 l     O .bss	00000014 handler
200050f8 l     O .bss	00000008 tickStat
20001e04 l     O .data	00000020 stateTable
20001e24 l     O .data	00000020 config
00000000 l    df *ABS*	00000000 upgrader_startUpgrade.cpp
0802c29c l     F .text	000000d0 UPGRADER_startUpgradeMainStateMachine(unsigned long)
20005100 l     O .bss	00000004 tickStarted_ms
20005104 l     O .bss	00000014 handler
20001e44 l     O .data	00000050 stateTable
20001e94 l     O .data	00000020 config
00000000 l    df *ABS*	00000000 upgrader_verify.cpp
0802c400 l     F .text	000001b0 UPGRADER_verifyMainStateMachine(unsigned long)
20005118 l     O .bss	00000004 tickStarted_ms
2000511c l     O .bss	00000003 tag
20005120 l     O .bss	00000014 handler
20005134 l     O .bss	00000004 tickStat
20001eb4 l     O .data	00000080 stateTable
20001f34 l     O .data	00000020 config
00000000 l    df *ABS*	00000000 upgrader_dataBlock.cpp
0802c660 l     F .text	00000070 UPGRADER_datablockMainStateMachine(unsigned long)
20005138 l     O .bss	00000003 tag
2000513c l     O .bss	00000014 handler
20005150 l     O .bss	00000004 tickStat
20001f54 l     O .data	00000020 stateTable
20001f74 l     O .data	00000020 config
00000000 l    df *ABS*	00000000 set_config.cpp
00000000 l    df *ABS*	00000000 camera_image_transfer.cpp
0802c7e8 l     F .text	00000002 sendDiagnosticMetadata(unsigned char*, unsigned short)
0802c7ec l     F .text	00000208 CAMERA_IMAGE_TRANSFER_mainStateMachine(unsigned long)
0802c9f4 l     F .text	00000084 CAMERA_IMAGE_TRANSFER_setup()
0802ca84 l     F .text	0000000a sendCCPImageBlock(unsigned char*, unsigned short)
0802ca78 l     F .text	0000000a sendCCPMetadata(unsigned char*, unsigned short)
0802ca90 l     F .text	00000002 sendDiagnosticImageBlock(unsigned char*, unsigned short)
20005154 l     O .bss	00000008 sendHandler
2000515c l     O .bss	00000003 searchHandler
20005160 l     O .bss	00000004 blocksToTransfer
20005164 l     O .bss	00000004 blocksTransferred
20005168 l     O .bss	00000008 image
20005170 l     O .bss	00000014 handler
20005184 l     O .bss	00000010 metaData
20001f94 l     O .data	00000060 stateTable
20001ff4 l     O .data	00000020 config
08046f40 l     O .rodata	0000002d binarySearchTree
00000000 l    df *ABS*	00000000 diagnostic_task_runner.cpp
00000000 l    df *ABS*	00000000 diagnostic_tasks.cpp
0802cafc l     F .text	0000000e readDriveLimitsTask(COMM_DIAGNOSTIC_commandMessage_t*, unsigned long, bool)
0802cb0c l     F .text	00000088 enableMotorAsyncDataTask(COMM_DIAGNOSTIC_commandMessage_t*, unsigned long, bool)
0802cb94 l     F .text	00000038 readStatusTask(COMM_DIAGNOSTIC_commandMessage_t*, unsigned long, bool)
0802cbcc l     F .text	00000070 stopMotorTask(COMM_DIAGNOSTIC_commandMessage_t*, unsigned long, bool)
0802cc3c l     F .text	000000a8 moveMotorTask(COMM_DIAGNOSTIC_commandMessage_t*, unsigned long, bool)
0802cce4 l     F .text	00000034 homeTask(COMM_DIAGNOSTIC_commandMessage_t*, unsigned long, bool)
0802cd18 l     F .text	00000080 powerMotorTask(COMM_DIAGNOSTIC_commandMessage_t*, unsigned long, bool)
0802cd98 l     F .text	00000070 resetMotorTask(COMM_DIAGNOSTIC_commandMessage_t*, unsigned long, bool)
0802ce08 l     F .text	000000f4 getSensorStateTask(COMM_DIAGNOSTIC_commandMessage_t*, unsigned long, bool)
20005194 l     O .bss	00000001 activeAxis
20005198 l     O .bss	00000004 pActiveTask
2000519c l     O .bss	0000001b commandBuffer
200051b7 l     O .bss	00000001 axisId
20002014 l     O .data	00000090 tasks
08046f70 l     O .rodata	00000008 CSWTCH.18
00000000 l    df *ABS*	00000000 no_task.cpp
00000000 l    df *ABS*	00000000 buffer_pick_place.cpp
0802cf80 l     F .text	00000018 BUFFER_PICKPLACE_errorStateMachine(unsigned long)
0802cf98 l     F .text	000000a4 BUFFER_PICKPLACE_setup()
0802d03c l     F .text	000001ec BUFFER_PICKPLACE_mainStateMachine(unsigned long)
200051b8 l     O .bss	00000014 pickConfig
200051cc l     O .bss	00000018 placeConfig
200051e4 l     O .bss	00000004 commandMessage
200051e8 l     O .bss	00000004 turretPosition
200051ec l     O .bss	00000001 cachedErrorCode
200051f0 l     O .bss	00000004 initialLiftPosition
200051f4 l     O .bss	00000014 handler
200020a4 l     O .data	00000090 stateTable
20002134 l     O .data	00000010 errorStateTable
20002144 l     O .data	00000020 config
08047020 l     O .rodata	00000010 turretCCPMapping
00000000 l    df *ABS*	00000000 timer.c
200052bc l     O .bss	00000230 timeout_h
00000000 l    df *ABS*	00000000 software_timer.c
00000000 l    df *ABS*	00000000 imu_pitchroll.c
0802d3e0 l     F .text	000000f4 calculateRawPitchRoll
00000000 l    df *ABS*	00000000 imu_calib.c
200054ec l     O .bss	00000024 accelerometerManager
00000000 l    df *ABS*	00000000 imu.cpp
0802d720 l     F .text	00000020 average(float*) [clone .part.0] [clone .constprop.0]
0802d740 l     F .text	000002f8 imuCheckAllAlarms()
0802de84 l     F .text	000001c8 _GLOBAL__sub_I_IMU_thread
200055e8 l     O .bss	000000f0 imuAlarmList
200056d8 l     O .bss	00000030 processedData
20005708 l     O .bss	00000048 gyroHighpassFilter
20005750 l     O .bss	00000018 gyroIntegralFilter
20005768 l     O .bss	00000001 pitchRollRequested
2000576c l     O .bss	00000100 processData()::axisBuff
08047078 l     O .rodata	00000010 CSWTCH.50
00000000 l    df *ABS*	00000000 imu_driver_bmi270.c
0802e04c l     F .text	00000014 imuDelayUs
0802e060 l     F .text	00000040 imuSPIWrite
0802e0a0 l     F .text	0000004c imuSPIRead
0802e0ec l     F .text	0000007c extIntCallback
20005870 l     O .bss	00000068 dev_config
200058d8 l     O .bss	00000006 handler
200058e0 l     O .bss	00000600 imuBuff
00000000 l    df *ABS*	00000000 utilities.c
00000000 l    df *ABS*	00000000 camera.cpp
0802e408 l     F .text	000000b8 saveCameraCalibration()
0802e4f0 l     F .text	00000030 prepareCognexCommand(char*, char const*, ...) [clone .constprop.0]
0802e52c l     F .text	00000288 programFromReset(unsigned int, void*)
0802e7b4 l     F .text	000000a4 CAMERA_activateProfile(CAMERA_configProfile_t) [clone .part.0]
20005f08 l     O .bss	00003b34 cameraHandler
0802e858 l     F .text	00000078 trigger()
20005ee0 l     O .bss	00000028 calibration
20009a3c l     O .bss	0000001c processedData
20009a58 l     O .bss	00000064 configProfiles
20009abc l     O .bss	00000010 cameraRingBuffer
20009acc l     O .bss	00000080 rxBuffer
20009b4c l     O .bss	00000080 txBuffer
08047708 l     O .rodata	0000000c exposureTableUs
08047714 l     O .rodata	0000000c defaultXCalibrationCoefficients
08047720 l     O .rodata	0000000c defaultYCalibrationCoefficients
00000000 l    df *ABS*	00000000 msgmngr.cpp
00000000 l    df *ABS*	00000000 messageManager.cpp
00000000 l    df *ABS*	00000000 ccp_hardware_network.cpp
0802fc80 l     F .text	00000006 HARDWARE_NETWORK_notifyReceivedNewCCPMessage()
0802fc88 l     F .text	0000000a HARDWARE_NETWORK_ccpSendMessage(unsigned char*, unsigned short)
0802fd58 l     F .text	00000060 _GLOBAL__sub_I_HARDWARE_NETWORK_initializeCCP
20009c80 l     O .bss	00000218 ccpManager
00000000 l    df *ABS*	00000000 hardware_network.cpp
00000000 l    df *ABS*	00000000 mcm_hardware_network.cpp
0802fdf4 l     F .text	00000006 HARDWARE_NETWORK_notifyReceivedNewMCMMessage()
0802fdfc l     F .text	0000000a HARDWARE_NETWORK_mcmSendMessage(unsigned char*, unsigned short)
0802fea4 l     F .text	00000060 _GLOBAL__sub_I_HARDWARE_NETWORK_initializeMCM
20009ec0 l     O .bss	00000218 mcmManager
00000000 l    df *ABS*	00000000 diagnostic_hardware_network.cpp
0802ff04 l     F .text	00000008 HARDWARE_NETWORK_notifyReceivedNewDiagnosticMessage()
0802ff0c l     F .text	0000000a HARDWARE_NETWORK_diagnosticSendMessage(unsigned char*, unsigned short)
0802ffb4 l     F .text	00000060 _GLOBAL__sub_I_HARDWARE_NETWORK_initializeDiagnostic
2000a0d8 l     O .bss	00000218 diagnosticManager
00000000 l    df *ABS*	00000000 nest.cpp
00000000 l    df *ABS*	00000000 canmngr.cpp
08030370 l     F .text	000001c0 CANMNGR_sendMsgs.part.0
08030530 l     F .text	00000084 addFilterMsgSrc(CAN_handlerIndex_t, CAN_fifo_t, COMM_CAN_deviceType_e) [clone .constprop.0]
2000a3c8 l     O .bss	000009d8 msgControl
2000ada0 l     O .bss	0000004c mutex
2000adec l     O .bss	00000528 txQueues
00000000 l    df *ABS*	00000000 sto.c
00000000 l    df *ABS*	00000000 publisher.cpp
00000000 l    df *ABS*	00000000 progress_monitor.cpp
00000000 l    df *ABS*	00000000 axis_telemetry_monitor.cpp
00000000 l    df *ABS*	00000000 torque_monitor.cpp
00000000 l    df *ABS*	00000000 bin_sensor.cpp
00000000 l    df *ABS*	00000000 bin_manager.cpp
08047b54 l     O .rodata	00000044 debugStateStrings
00000000 l    df *ABS*	00000000 hardware_bin_manager.cpp
08047bc4 l     O .rodata	00000008 negx_negy_pin
08047bcc l     O .rodata	00000008 negx_posy_pin
08047bd4 l     O .rodata	00000008 posx_negy_pin
08047bdc l     O .rodata	00000008 posx_posy_pin
00000000 l    df *ABS*	00000000 application_memory_pool.cpp
2000b318 l     O .bss	00002af8 applicationBytePool
2000de10 l     O .bss	00000004 totalAllocatedBytes
20002164 l     O .data	00000001 allocationPoolUnlocked
00000000 l    df *ABS*	00000000 nvm_manager.c
00000000 l    df *ABS*	00000000 awareness.cpp
2000e230 l     O .bss	00000030 alarmData
00000000 l    df *ABS*	00000000 main.cpp
00000000 l    df *ABS*	00000000 upgrader.c
08031e20 l     F .text	000000ac eraseCRCregion
08047eb0 l     O .rodata	0000001a __FUNCTION__.15174
08047ecc l     O .rodata	0000000e __FUNCTION__.15182
08047edc l     O .rodata	0000000f __FUNCTION__.15191
00000000 l    df *ABS*	00000000 upgrader_comm.c
2000e260 l     O .bss	00000060 dataBuf
2000e2c0 l     O .bss	00000070 multiFrameMngr
2000e330 l     O .bss	00000010 rxRingBuf
2000e340 l     O .bss	00000004 tickSendLast_ms
00000000 l    df *ABS*	00000000 upgrader_manager.c
2000e344 l     O .bss	0000000a dataRxBuf
2000e350 l     O .bss	00000004 funcCallbackResponseReceived
2000e358 l     O .bss	000000c8 upgMngr
2000e420 l     O .bss	00000060 upgStat
080483f0 l     O .rodata	00000020 CSWTCH.171
08048410 l     O .rodata	00000010 CSWTCH.173
00000000 l    df *ABS*	00000000 statusLed.cpp
08033d78 l     F .text	000000f4 statusLed_timerCallback(unsigned int, void*)
2000e484 l     O .bss	00000002 max_update_period_cycles
2000e486 l     O .bss	00000001 previousSubperiodColours
2000e487 l     O .bss	00000001 previousSubperiodDuration
2000216c l     O .data	00000001 requestStoState
2000216d l     O .data	00000001 statusled_autoUpdateEnable
00000000 l    df *ABS*	00000000 drive_wheel_config.cpp
08033e98 l     F .text	00000168 AXIS_loadYWheelDiameter()
08034010 l     F .text	00000168 AXIS_loadXWheelDiameter()
08034184 l     F .text	00000040 AXIS_saveYWheelDiameter(float)
080341c4 l     F .text	00000040 AXIS_saveXWheelDiameter(float)
08034204 l     F .text	0000022c _GLOBAL__sub_I_g_dynamicAxis_1
2000e488 l     O .bss	00000090 staticAxis_1
2000e518 l     O .bss	00000090 staticAxis_2
2000e5a8 l     O .bss	00000090 staticAxis_3
2000e638 l     O .bss	00000090 staticAxis_4
2000e6c8 l     O .bss	00000090 dynamicAxis_1
2000e758 l     O .bss	00000090 dynamicAxis_2
2000e7e8 l     O .bss	00000090 dynamicAxis_3
2000e878 l     O .bss	00000090 dynamicAxis_4
2000e908 l     O .bss	00000098 xAxis
2000e9a0 l     O .bss	00000098 yAxis
2000ea38 l     O .bss	00000098 z8Axis
2000ead0 l     O .bss	00000098 z4DAxis
2000eb68 l     O .bss	00000098 z4SAxis
20002170 l     O .data	00000010 xAxisNodes
20002180 l     O .data	00000010 yAxisNodes
20002190 l     O .data	00000020 z8AxisNodes
200021b0 l     O .data	00000010 z4DAxisNodes
200021c0 l     O .data	00000010 z4SAxisNodes
200021d0 l     O .data	00000028 verticalAxisConfig
200021f8 l     O .data	00000028 horizontalAxisConfig
20002220 l     O .data	00000024 driveWheelServoConfig
20002244 l     O .data	00000010 verticalMotionProfiles
080485d8 l     O .rodata	0000003c verticalDefaultMotionProfile
08048560 l     O .rodata	0000003c verticalSafeMotionProfile
20002254 l     O .data	00000010 horizontalMotionProfiles
08048614 l     O .rodata	0000003c horizontalDefaultMotionProfile
0804859c l     O .rodata	0000003c horizontalSafeMotionProfile
08048650 l     O .rodata	0000003c horizontalRecoveryMotionProfile
0804868c l     O .rodata	0000003c horizontalCalibrationMotionProfile
00000000 l    df *ABS*	00000000 lift_config.cpp
08034430 l     F .text	00000098 _GLOBAL__sub_I_g_liftAxisYNeg
2000ec00 l     O .bss	00000090 liftAxisYNeg
2000ec90 l     O .bss	00000090 liftAxisYPos
2000ed20 l     O .bss	00000098 liftAxis
20002298 l     O .data	00000008 liftAxisNodes
200022a0 l     O .data	00000028 liftAxisConfig
200022c8 l     O .data	00000024 liftServoConfig
200022ec l     O .data	00000010 liftMotionProfiles
08048728 l     O .rodata	0000003c liftDefaultMotionProfile
080486ec l     O .rodata	0000003c liftSafeMotionProfile
00000000 l    df *ABS*	00000000 pickarm_config.cpp
080344c8 l     F .text	00000044 _GLOBAL__sub_I_g_pickarmAxis
2000edb8 l     O .bss	00000090 pickarmAxis
20002308 l     O .data	00000028 pickarmAxisConfig
20002330 l     O .data	00000024 pickarmServoConfig
20002354 l     O .data	00000010 pickarmMotionProfiles
080487a8 l     O .rodata	0000003c pickarmDefaultMotionProfile
0804876c l     O .rodata	0000003c pickarmSafeMotionProfile
00000000 l    df *ABS*	00000000 turret_config.cpp
0803450c l     F .text	00000040 _GLOBAL__sub_I_g_turretAxis
2000ee48 l     O .bss	00000090 turretAxis
20002368 l     O .data	00000028 turretAxisConfig
20002390 l     O .data	00000024 turretServoConfig
200023b4 l     O .data	00000010 turretMotionProfiles
080487ec l     O .rodata	0000003c turretDefaultMotionProfile
00000000 l    df *ABS*	00000000 wheel_articulation_config.cpp
0803454c l     F .text	00000188 _GLOBAL__sub_I_g_wheelArticulationAxis_yNegRight
2000eed8 l     O .bss	000000a0 staticWheelArticulationAxis
2000ef78 l     O .bss	000000a0 dynamicWheelArticulationAxis
2000f018 l     O .bss	00000098 wheelArticulationAxis_xNegLeft
2000f0b0 l     O .bss	00000098 wheelArticulationAxis_xPosLeft
2000f148 l     O .bss	00000098 wheelArticulationAxis_yNegLeft
2000f1e0 l     O .bss	00000098 wheelArticulationAxis_yPosLeft
2000f278 l     O .bss	00000098 wheelArticulationAxis_xNegRight
2000f310 l     O .bss	00000098 wheelArticulationAxis_xPosRight
2000f3a8 l     O .bss	00000098 wheelArticulationAxis_yNegRight
2000f440 l     O .bss	00000098 wheelArticulationAxis_yPosRight
200023c8 l     O .data	00000028 wheelArtAxisConfig
200023f0 l     O .data	00000006 wheelArtControlSettings
200023f8 l     O .data	00000010 staticWheelArticulationAxes
20002408 l     O .data	00000010 dynamicWheelArticulationNodes
20002418 l     O .data	00000010 wheelArticulationMotionProfiles
08048880 l     O .rodata	0000003c wheelArticulationDefaultMotionProfile
00000000 l    df *ABS*	00000000 bin_manger_config.cpp
08034704 l     F .text	0000008c binStateChangeCallback(void*)
08034790 l     F .text	00000038 _GLOBAL__sub_I_binManager
00000000 l    df *ABS*	00000000 robot_config.cpp
080347c8 l     F .text	00000140 _GLOBAL__sub_I_robot
2000f5bc l     O .bss	00000004 robotSensors
2000f5c0 l     O .bss	00000070 axes
00000000 l    df *ABS*	00000000 usart.cpp
08034908 l     F .text	0000009c handleIRQ(USART_TypeDef*)
2000f640 l     O .bss	00000bd8 txFifoList
20010218 l     O .bss	00000200 ccpReceiveBuffer
20010418 l     O .bss	00000200 ccpTransmitBuffer
20010618 l     O .bss	00000010 ccpReceiveRingBuffer
20010628 l     O .bss	00000010 ccpTransmitRingBuffer
20010638 l     O .bss	00000020 handler
00000000 l    df *ABS*	00000000 hwm.c
00000000 l    df *ABS*	00000000 gpio.c
08034e40 l     F .text	00000048 defaultCallback
08034e88 l     F .text	000000e0 setupInterrupt
20010658 l     O .bss	00000140 handles
08048970 l     O .rodata	0000003c configMap
080489ac l     O .rodata	0000002c gpioPorts
00000000 l    df *ABS*	00000000 spi.c
20010798 l     O .bss	00000020 handler
00000000 l    df *ABS*	00000000 can.c
08035524 l     F .text	0000006c receiveMsg
200107b8 l     O .bss	000000f0 handler
200108a8 l     O .bss	00000cd0 queues
080489d8 l     O .rodata	00000014 canRxEventFlags
080489ec l     O .rodata	00000008 fifoInterrupts
080489f4 l     O .rodata	00000002 maxFilters
00000000 l    df *ABS*	00000000 crc.c
00000000 l    df *ABS*	00000000 nx_driver_stm32f4xx.c
200115c4 l     O .bss	00000b68 nx_driver_information
00000000 l    df *ABS*	00000000 stm32f4x9_eth.c
00000000 l    df *ABS*	00000000 stm32f4x9_eth_bsp.c
00000000 l    df *ABS*	00000000 nx_arp_enable.c
00000000 l    df *ABS*	00000000 nx_arp_entry_allocate.c
00000000 l    df *ABS*	00000000 nx_arp_packet_deferred_receive.c
00000000 l    df *ABS*	00000000 nx_arp_packet_receive.c
00000000 l    df *ABS*	00000000 nx_arp_packet_send.c
00000000 l    df *ABS*	00000000 nx_arp_periodic_update.c
00000000 l    df *ABS*	00000000 nx_arp_queue_process.c
00000000 l    df *ABS*	00000000 nx_icmp_enable.c
00000000 l    df *ABS*	00000000 nx_icmp_packet_process.c
00000000 l    df *ABS*	00000000 nx_icmp_packet_receive.c
00000000 l    df *ABS*	00000000 nx_icmp_queue_process.c
00000000 l    df *ABS*	00000000 nx_igmp_multicast_check.c
00000000 l    df *ABS*	00000000 nx_ip_create.c
00000000 l    df *ABS*	00000000 nx_ip_deferred_link_status_process.c
00000000 l    df *ABS*	00000000 nx_ip_driver_deferred_processing.c
00000000 l    df *ABS*	00000000 nx_ip_initialize.c
00000000 l    df *ABS*	00000000 nx_ip_loopback_send.c
00000000 l    df *ABS*	00000000 nx_ip_packet_deferred_receive.c
00000000 l    df *ABS*	00000000 nx_ip_packet_receive.c
00000000 l    df *ABS*	00000000 nx_ip_packet_send.c
00000000 l    df *ABS*	00000000 nx_ip_periodic_timer_entry.c
00000000 l    df *ABS*	00000000 nx_ip_route_find.c
00000000 l    df *ABS*	00000000 nx_ip_thread_entry.c
00000000 l    df *ABS*	00000000 nx_packet_allocate.c
00000000 l    df *ABS*	00000000 nx_packet_copy.c
00000000 l    df *ABS*	00000000 nx_packet_data_append.c
00000000 l    df *ABS*	00000000 nx_packet_data_retrieve.c
00000000 l    df *ABS*	00000000 nx_packet_length_get.c
00000000 l    df *ABS*	00000000 nx_packet_pool_cleanup.c
00000000 l    df *ABS*	00000000 nx_packet_pool_create.c
00000000 l    df *ABS*	00000000 nx_packet_pool_initialize.c
00000000 l    df *ABS*	00000000 nx_packet_release.c
00000000 l    df *ABS*	00000000 nx_packet_transmit_release.c
00000000 l    df *ABS*	00000000 nx_rarp_packet_deferred_receive.c
00000000 l    df *ABS*	00000000 nx_system_initialize.c
00000000 l    df *ABS*	00000000 nx_udp_bind_cleanup.c
00000000 l    df *ABS*	00000000 nx_udp_enable.c
00000000 l    df *ABS*	00000000 nx_udp_free_port_find.c
00000000 l    df *ABS*	00000000 nx_udp_packet_receive.c
00000000 l    df *ABS*	00000000 nx_udp_receive_cleanup.c
00000000 l    df *ABS*	00000000 nx_udp_socket_bind.c
00000000 l    df *ABS*	00000000 nx_udp_socket_create.c
00000000 l    df *ABS*	00000000 nx_udp_socket_receive.c
00000000 l    df *ABS*	00000000 nx_udp_socket_receive_notify.c
00000000 l    df *ABS*	00000000 nx_udp_socket_send.c
00000000 l    df *ABS*	00000000 nx_udp_source_extract.c
00000000 l    df *ABS*	00000000 tx_event_flags_cleanup.c
00000000 l    df *ABS*	00000000 tx_event_flags_create.c
00000000 l    df *ABS*	00000000 tx_event_flags_delete.c
00000000 l    df *ABS*	00000000 tx_event_flags_get.c
00000000 l    df *ABS*	00000000 tx_event_flags_set.c
00000000 l    df *ABS*	00000000 tx_initialize_high_level.c
00000000 l    df *ABS*	00000000 tx_initialize_kernel_enter.c
00000000 l    df *ABS*	00000000 tx_mutex_cleanup.c
00000000 l    df *ABS*	00000000 tx_mutex_create.c
00000000 l    df *ABS*	00000000 tx_mutex_delete.c
00000000 l    df *ABS*	00000000 tx_mutex_get.c
00000000 l    df *ABS*	00000000 tx_mutex_prioritize.c
00000000 l    df *ABS*	00000000 tx_mutex_priority_change.c
00000000 l    df *ABS*	00000000 tx_mutex_put.c
00000000 l    df *ABS*	00000000 v5_rcp Beta - Release/tx_thread_context_restore.o
00000000 l    df *ABS*	00000000 v5_rcp Beta - Release/tx_thread_context_save.o
00000000 l    df *ABS*	00000000 tx_thread_create.c
00000000 l    df *ABS*	00000000 tx_thread_delete.c
00000000 l    df *ABS*	00000000 tx_thread_initialize.c
00000000 l    df *ABS*	00000000 v5_rcp Beta - Release/tx_thread_interrupt_control.o
00000000 l    df *ABS*	00000000 v5_rcp Beta - Release/tx_thread_schedule.o
08039e28 l     F .text	00000000 __tx_ts_handler
08039e64 l       .text	00000000 __tx_ts_new
08039e4c l       .text	00000000 __tx_dont_save_fpu
08039ea6 l       .text	00000000 __tx_ts_wait
08039e6e l       .text	00000000 __tx_ts_restore
08039e98 l       .text	00000000 __tx_dont_restore_fpu
08039eb6 l       .text	00000000 __tx_ts_ready
08039eb0 l       .text	00000000 __tx_ts_ISB
08039eda l       .text	00000000 __tx_no_thread_to_enable
08039eee l       .text	00000000 __tx_no_thread_to_disable
00000000 l    df *ABS*	00000000 tx_thread_shell_entry.c
00000000 l    df *ABS*	00000000 tx_thread_sleep.c
00000000 l    df *ABS*	00000000 tx_thread_stack_analyze.c
00000000 l    df *ABS*	00000000 v5_rcp Beta - Release/tx_thread_stack_build.o
00000000 l    df *ABS*	00000000 tx_thread_stack_error_handler.c
00000000 l    df *ABS*	00000000 tx_thread_stack_error_notify.c
00000000 l    df *ABS*	00000000 tx_thread_system_preempt_check.c
00000000 l    df *ABS*	00000000 tx_thread_system_resume.c
00000000 l    df *ABS*	00000000 v5_rcp Beta - Release/tx_thread_system_return.o
00000000 l    df *ABS*	00000000 tx_thread_system_suspend.c
00000000 l    df *ABS*	00000000 tx_thread_terminate.c
00000000 l    df *ABS*	00000000 tx_thread_time_slice.c
00000000 l    df *ABS*	00000000 tx_thread_timeout.c
00000000 l    df *ABS*	00000000 tx_time_get.c
00000000 l    df *ABS*	00000000 tx_timer_create.c
00000000 l    df *ABS*	00000000 tx_timer_expiration_process.c
00000000 l    df *ABS*	00000000 tx_timer_initialize.c
00000000 l    df *ABS*	00000000 v5_rcp Beta - Release/tx_timer_interrupt.o
0803aa14 l       .text	00000000 __tx_timer_no_time_slice
0803aa28 l       .text	00000000 __tx_timer_no_timer
0803aa3a l       .text	00000000 __tx_timer_done
0803aa38 l       .text	00000000 __tx_timer_skip_wrap
0803aa4a l       .text	00000000 __tx_something_expired
0803aa6a l       .text	00000000 __tx_timer_nothing_expired
0803aa5a l       .text	00000000 __tx_timer_dont_activate
0803aa66 l       .text	00000000 __tx_timer_not_ts_expiration
00000000 l    df *ABS*	00000000 tx_timer_system_activate.c
00000000 l    df *ABS*	00000000 tx_timer_system_deactivate.c
00000000 l    df *ABS*	00000000 misc.c
00000000 l    df *ABS*	00000000 stm32f4xx_can.c
00000000 l    df *ABS*	00000000 stm32f4xx_exti.c
00000000 l    df *ABS*	00000000 stm32f4xx_flash.c
00000000 l    df *ABS*	00000000 stm32f4xx_gpio.c
00000000 l    df *ABS*	00000000 stm32f4xx_rcc.c
200024cc l     O .data	00000010 APBAHBPrescTable
00000000 l    df *ABS*	00000000 stm32f4xx_spi.c
00000000 l    df *ABS*	00000000 stm32f4xx_syscfg.c
00000000 l    df *ABS*	00000000 stm32f4xx_usart.c
00000000 l    df *ABS*	00000000 fifo.c
00000000 l    df *ABS*	00000000 fram.c
00000000 l    df *ABS*	00000000 sram.c
00000000 l    df *ABS*	00000000 comm_bootloader_error_codes.c
08049778 l     O .rodata	000000bc bootErrorMsg
00000000 l    df *ABS*	00000000 bmi2.c
0803c9d8 l     F .text	000000ae get_remapped_data
0803cb30 l     F .text	0000002e cfg_error_status
0803cbcc l     F .text	00000040 upload_file
0803cc0c l     F .text	00000042 set_config_load
0803cc50 l     F .text	000000bc set_accel_config
0803cd0c l     F .text	000000d8 set_gyro_config
0803d360 l     F .text	0000006a get_gyro_gain_update_status
00000000 l    df *ABS*	00000000 bmi270.c
0803da30 l     F .text	000000de select_sensor
0803db10 l     F .text	00000068 set_sig_motion
0803db78 l     F .text	0000006c set_any_motion
0803dbe4 l     F .text	0000006a set_no_motion
0803dc50 l     F .text	0000006a set_step_detector
0803dcbc l     F .text	0000006a set_step_counter
0803dd28 l     F .text	0000006a set_step_activity
0803dd94 l     F .text	0000006a set_gyro_user_gain
0803de00 l     F .text	00000066 set_gyro_self_offset_corr
0803de68 l     F .text	00000066 set_wrist_gesture
0803ded0 l     F .text	00000066 set_wrist_wear_wake_up
00000000 l    df *ABS*	00000000 CMSIS_DSP_unity.c
00000000 l    df *ABS*	00000000 libm_asm.o
00000000 l    df *ABS*	00000000 libm2.c
0804b884 l     O .rodata	00000010 atanf_a
00000000 l    df *ABS*	00000000 libm2_asm.o
00000000 l    df *ABS*	00000000 fdlibm.c
00000000 l    df *ABS*	00000000 libc2.c
0803ec84 l     F .text	0000001c __RAL_ascii_isctype
0803eca0 l     F .text	0000000c __RAL_ascii_toupper
0803ecac l     F .text	0000000c __RAL_ascii_tolower
0803ecb8 l     F .text	0000001c __RAL_ascii_iswctype
0803ecd4 l     F .text	0000000c __RAL_ascii_towupper
0803ece0 l     F .text	0000000c __RAL_ascii_towlower
2001244c l     O .bss	00000080 __atexitfns
200124d4 l     O .bss	00000004 atexitfn_count
0804b91c l     O .rodata	0000000d __RAL_ascii_ctype_mask
0804baf4 l     O .rodata	00000018 powerf
00000000 l       .tbss	00000004 errno_val
00000000 l       .tbss	00000000 .LANCHOR16
00000000 l    df *ABS*	00000000 libc2_asm.o
00000000 l    df *ABS*	00000000 libc.c
00000000 l    df *ABS*	00000000 cxa_exception.cpp
0803f7d8 l     F .text	00000050 __cxa_end_cleanup_impl
00000000 l    df *ABS*	00000000 cxa_exception_storage.cpp
200124d8 l     O .bss	0000000c __cxxabiv1::eh_globals
00000000 l    df *ABS*	00000000 cxa_handlers.cpp
00000000 l    df *ABS*	00000000 cxa_personality.cpp
0803f938 l     F .text	00000024 readULEB128
0803f95c l     F .text	00000038 readSLEB128
0803f998 l     F .text	00000028 get_thrown_object_ptr
0803f9c0 l     F .text	0000001c call_terminate
0803f9dc l     F .text	0000005c set_registers
0803fa38 l     F .text	00000108 readEncodedPointer
0803fb40 l     F .text	00000054 exception_spec_can_catch
0803fb94 l     F .text	0000035c scan_eh_tab
00000000 l    df *ABS*	00000000 cxa_virtual.cpp
00000000 l    df *ABS*	00000000 stdlib_new_delete.cpp
00000000 l    df *ABS*	00000000 Unwind-EHABI.cpp
080400e0 l     F .text	000000b4 unwind_phase2(unw_context_t*, unw_cursor_t*, _Unwind_Control_Block*, bool)
0804021a l     F .text	0000002e (anonymous namespace)::unwindOneFrame(unsigned int, _Unwind_Control_Block*, _Unwind_Context*)
00000000 l    df *ABS*	00000000 UnwindRegistersSave.o
00000000 l    df *ABS*	00000000 abort_message.cpp
00000000 l    df *ABS*	00000000 cxa_default_handlers.cpp
08040798 l     F .text	00000020 _GLOBAL__sub_I___cxa_terminate_handler
00000000 l    df *ABS*	00000000 libunwind.cpp
00000000 l    df *ABS*	00000000 UnwindRegistersRestore.o
00000000 l    df *ABS*	00000000 libvfprintf.c
0804bd58 l     O .rodata	000000a0 ipow10
00000000 l    df *ABS*	00000000 
00000000 l       .tbss	00000000 _TLS_MODULE_BASE_
0802fca0 g     F .text	0000000c HARDWARE_NETWORK_sendCCPMessage
08020230  w    F .init	00000000 LTDC_ER_IRQHandler
0804b9f8 g     O .rodata	0000000f __RAL_c_locale_date_time_format
08031aec g     F .text	0000003c main
2000e17c g     O .bss	000000b4 AWARENESS_thread
200124e4 g     O .bss	00000004 __cxa_terminate_handler
08023060 g     F .text	00000040 MultiServoAxis::MultiServoAxis(char const*, unsigned char, AXIS_config_t*, SingleServoAxis::Config const*, AXIS_motionProfile_t const* const*, unsigned char, SingleServoAxis**, unsigned char, bool (*)(unsigned char, unsigned char, unsigned char*, unsigned short), void (*)(float), float (*)())
0802448c g     F .text	00000050 CDM_sendDevMulticast
0802d3cc g     F .text	00000010 SOFTWARE_TIMER_disable
20000000 g       .fast_run	00000000 __fast_run_load_end__
08035290 g     F .text	00000230 SPI_setup
08038158 g     F .text	0000011e _nx_packet_data_append
0802f1bc g     F .text	00000030 CAMERA_getVersion()
0803a0a4 g     F .text	0000001c _tx_thread_stack_error_notify
0802eb08 g     F .text	0000000c CAMERA_setSimMode(bool)
0802020c  w    F .init	00000000 DMA2_Stream5_IRQHandler
08039548 g     F .text	00000060 _tx_mutex_create
0803e9e4  w    F .text	00000058 modf(float, float*)
0802021a  w    F .init	00000000 OTG_HS_WKUP_IRQHandler
20005534 g     O .bss	000000b4 IMU_thread
0802accc g     F .text	0000003c RECOVERY_noMoveRecovery(unsigned long, bool, COMM_CCP_recoveryDirection_t)
08038634 g     F .text	00000010 _nx_udp_enable
0802bd0c g     F .text	0000002e TaskStatus::operator&=(TaskStatus const&)
00000000 g       *ABS*	00000000 __STACKSIZE_SVC__
0803efd8  w    F .text	00000222 qsort
08030e30 g     F .text	0000002e BinManager::reset()
0802bd3c g     F .text	00000020 TaskManager::TaskManager()
080407c8  w    F .text	0000000e .hidden libunwind::UnwindCursor<libunwind::LocalAddressSpace, libunwind::Registers_arm>::validFloatReg(int)
08042114 g       *ABS*	00000000 __rodata_load_start__
080308ac g     F .text	00000066 Publisher::subscribe(SubscriberBase*)
0802ff30 g     F .text	0000000c HARDWARE_NETWORK_getNumDiagnosticMessagesToSend
08040ce4  w    F .text	00000008 .hidden libunwind::UnwindCursor<libunwind::LocalAddressSpace, libunwind::Registers_arm>::saveVFPAsX()
08034e04 g     F .text	00000030 HWM_init
200124f4 g       .tdata_run	00000000 __tdata_run_load_end__
0802ed04 g     F .text	00000020 CAMERA_getResponseData()
08040ee0 g     F .text	00000064 unw_init_local
08032958 g     F .text	00000024 UPG_MNGR_prepareForUpgrade
08038dec  w    F .text	00000000 EXTI1_IRQHandler
0802da44 g     F .text	00000400 IMU_enterThread
08022be4 g     F .text	00000092 Robot::processMsg(COMM_source_t, unsigned char, unsigned char*, unsigned short)
08036cf0 g     F .text	000000b8 _nx_arp_entry_allocate
0803551c g     F .text	00000002 SPI2_IRQ_handler
08036a28 g     F .text	00000228 ETH_BSP_Config
08038f04  w    F .text	00000000 abort
080250cc g     F .text	0000003c DIAGNOSTIC_enableDiagnosticMode(void*, unsigned long, bool)
0803b050 g     F .text	000000cc CAN_Receive
00000238 g       *ABS*	00000000 __init_size__
08039e20 g     F .text	00000000 _tx_thread_schedule
080384d0 g     F .text	00000042 _nx_packet_transmit_release
0802ff24 g     F .text	0000000c HARDWARE_NETWORK_sendDiagnosticMessage
08022fac g     F .text	00000006 AxisBase::addDataSubscriber(SubscriberBase*)
080309a8 g     F .text	00000018 ProgressMonitor::ProgressMonitor()
20012308 g     O .bss	00000004 _tx_timer_created_count
0804caa8 g       .ARM.exidx	00000000 __ARM.exidx_load_end__
0802bccc g     F .text	0000000a TaskStatus::TaskStatus(TaskStatus::Result_e)
080407ba  w    F .text	00000002 .hidden libunwind::UnwindCursor<libunwind::LocalAddressSpace, libunwind::Registers_arm>::~UnwindCursor()
08034b08 g     F .text	00000108 USART_initCcpUSART
080201f0  w    F .init	00000000 TIM8_UP_TIM13_IRQHandler
00000000 g       *ABS*	00000000 __STACKSIZE_IRQ__
2001231c g     O .bss	00000004 _tx_timer_expired_timer_ptr
0803f8a0 g     F .text	00000008 __cxa_get_globals_fast
08027c20 g     F .text	000000a0 ACTIONS_stop(bool, ROBOT_axisIndex_t)
08023378 g     F .text	00000036 SingleServoAxis::power(AXIS_powerState_t)
08038dd0  w    F .text	00000000 USART6_IRQHandler
080407b8  w    F .text	00000002 .hidden libunwind::UnwindCursor<libunwind::LocalAddressSpace, libunwind::Registers_arm>::~UnwindCursor()
08023860 g     F .text	00000040 MultiStepperAxis::MultiStepperAxis(char const*, unsigned char, AXIS_config_t*, COMM_CDM_MOTOR_torqueSettings_t const*, AXIS_motionProfile_t const* const*, unsigned char, SingleStepperAxis**, unsigned char, bool (*)(unsigned char, unsigned char, unsigned char*, unsigned short), void (*)(float), float (*)())
0802f888 g     F .text	000000f0 MessageManager::pushSendMessage(unsigned char*, unsigned short, TX_MUTEX_STRUCT*, RingBuffer<unsigned char>*)
08032efc g     F .text	000000a4 UPG_MNGR_requestAppVersion
080310d4 g     F .text	00000008 HardwareBinManager::pollBinSensors(unsigned int, void*)
2001223c g     O .bss	00000004 _tx_mutex_performance_priority_inversion_count
0803e880  w    F .text	00000000 __float32_signbit
0803e368  w    F .text	00000000 __aeabi_ui2d
0802f9f8 g     F .text	00000046 MessageManager::pushStandardSendMessage(unsigned char*, unsigned short)
080479f4 g     O .rodata	00000010 vtable for AxisTelemetryMonitor
200123a4 g     O .bss	00000004 _tx_timer_list_start
08036980 g     F .text	00000030 ETH_Start
08022abc g     F .text	00000024 Robot::updateArticulation(Articulation::State_e)
080237b4 g     F .text	00000066 MultiStepperAxis::move(float, AXIS_moveType_t, unsigned char, float, float, float)
080238c4 g     F .text	0000000e SingleStepperAxis::isOvertorque()
08030e60 g     F .text	0000006a BinManager::getTelemBinState()
08031834 g     F .text	000001ac AWARENESS_enterThread(unsigned long)
080232b0 g     F .text	000000bc SingleServoAxis::home(AXIS_homeType_t, float, float, float, float)
00000000 g       *ABS*	00000000 __init_rodata_size__
08043d40  w    O .rodata	0000003c vtable for AxisBase
08039be0 g     F .text	00000000 _tx_thread_context_save
2001c000 g       *ABS*	00000000 __SRAM1_segment_end__
0803e42e  w    F .text	00000000 __float64_to_uint32
08020210  w    F .init	00000000 DMA2_Stream7_IRQHandler
0802fc94 g     F .text	0000000c HARDWARE_NETWORK_initializeCCP
08041004 g     F .text	0000000a unw_step
08039fb0 g     F .text	00000090 _tx_thread_stack_analyze
08040cec  w    F .text	00000038 .hidden libunwind::UnwindCursor<libunwind::LocalAddressSpace, libunwind::Registers_arm>::setReg(int, unsigned int)
08022cec g     F .text	00000064 AxisBase::AxisBase(char const*, unsigned char, AXIS_config_t*, AXIS_motionProfile_t const* const*, unsigned char, bool (*)(unsigned char, unsigned char, unsigned char*, unsigned short), void (*)(float), float (*)())
08026590 g     F .text	000000a0 PICK_BIN_RETRIES_runTask(PICK_BIN_RETRIES_type_t, unsigned long, PICK_BIN_config_t*, bool)
08038dc2  w    F .text	00000000 UART4_IRQHandler
90000000 g       *ABS*	00000000 __PCCARD_segment_end__
080201ec  w    F .init	00000000 OTG_FS_WKUP_IRQHandler
08040284 g     F .text	00000070 _Unwind_VRS_Set
20012274 g     O .bss	00000004 _tx_thread_highest_priority
08035798 g     F .text	00000078 CAN_addFilter
080329a0 g     F .text	00000070 UPG_MNGR_confirmMetaData
0802d6c4 g     F .text	0000005c IMU_CALIB_accelToMetric
e0000000 g       *ABS*	00000000 __PPB_segment_start__
080201f4  w    F .init	00000000 TIM8_CC_IRQHandler
08022f3c g     F .text	00000030 AxisBase::checkWithinLimits(float)
08038404 g     F .text	00000014 _nx_packet_pool_initialize
080251f8 g     F .text	00000002 DIAGNOSTIC_endianSwapReadDriveLimitsCommand(COMM_DIAGNSOTIC_readDriveLimits_t*)
2000e354 g     O .bss	00000001 msgNo
0803c498 g     F .text	000000c8 FRAM_read
60000000 g       *ABS*	00000000 __NOR_PSRAM1_segment_end__
08040780 g     F .text	00000000 .hidden libunwind::Registers_arm::saveVFPWithFSTMX(unsigned long long*)
0803df38 g     F .text	00000080 bmi270_init
0803d238 g     F .text	0000006c bmi2_sec_init
08028314 g     F .text	00000006 SM_RUNNER_abort
080420b8 g       .ctors	00000000 __ctors_start__
0803e88a  w    F .text	00000000 __float32_isinf
08038d8a  w    F .text	00000000 ETH_IRQHandler
0802fa48 g     F .text	00000006 MessageManager::numMessagesToSend() const
08038e4e  w    F .text	00000000 SPI2_IRQHandler
0804bdf8 g       *ABS*	00000000 __ARM.exidx_load_start__
08031148 g     F .text	00000024 HardwareBinManager::readPosXNegY()
080420b8 g       .ctors	00000000 __dtors_start__
080244dc g     F .text	000000cc CDM_getFwVersion
400a0000 g       *ABS*	00000000 __AHB1_segment_end__
0803d1c0 g     F .text	00000078 bmi2_soft_reset
08037e14 g     F .text	00000208 _nx_ip_thread_entry
08040dd2  w    F .text	0000006e .hidden libunwind::UnwindCursor<libunwind::LocalAddressSpace, libunwind::Registers_arm>::setFloatReg(int, unsigned long long)
0804bac8 g     O .rodata	00000001 __RAL_data_empty_string
0803aec8 g     F .text	00000058 CAN_SlaveStartBank
2001224c g     O .bss	00000004 _tx_queue_created_count
20004b30 g     O .bss	0000001c nest
08021530 g     F .text	00000020 CLI_listCommands
0802bcd8 g     F .text	00000010 TaskStatus::TaskStatus(TaskStatus::Result_e, unsigned int)
2000b314 g     O .bss	00000002 STO_handler
08020c00 g     F .text	00000114 SYSTEM_enterThread
08038e24  w    F .text	00000000 EXTI9_5_IRQHandler
0803eebc g     F .text	000000dc __strtoul
0802e3fc g     F .text	0000000a UTILITIES_isDataAvailable
080279dc g     F .text	00000070 ACTIONS_moveList(bool, ROBOT_axisIndex_t const*, float*, AXIS_moveType_t*, unsigned char, unsigned int, AXIS_mode_t)
0803a780 g     F .text	00000044 _tx_thread_timeout
080407bc  w    F .text	0000000c .hidden libunwind::UnwindCursor<libunwind::LocalAddressSpace, libunwind::Registers_arm>::validReg(int)
0803c904 g     F .text	000000bc SRAM_writeTest
080354c0 g     F .text	00000058 SPI_readWrite
0803b57c g     F .text	000000d4 GPIO_ReadInputDataBit
0803f21c  w    F .text	00000028 snprintf
08036e04 g     F .text	00000346 _nx_arp_packet_receive
00000008 g       *ABS*	00000000 __OPTION_segment_size__
0802f40c g     F .text	00000030 MessageManager::~MessageManager()
0802de50 g     F .text	00000024 IMU_getProcData
70000000 g       *ABS*	00000000 __NAND1_segment_start__
08039e10 g     F .text	00000000 _tx_thread_interrupt_control
080203e4 g       .text	00000000 __text_start__
08038d8a g       .text	00000000 __nx_driver_stm32f4xx_ethernet_isr
080385c4 g     F .text	00000070 _nx_udp_bind_cleanup
0803b3c0 g     F .text	0000006c FLASH_ProgramByte
200022fc g     O .data	00000004 g_liftAxis
0804baf0 g     O .rodata	00000004 __aeabi_EDOM
0804bae0 g     O .rodata	00000010 __RAL_hex_uc
0802bfd8 g     F .text	00000004 TaskManager::getLastTaskPayload()
200124f4 g       .tdata_run	00000000 __tdata_run_end__
0802359c g     F .text	000000d6 SingleServoAxis::move(float, AXIS_moveType_t, unsigned char, float, float, float)
90000000 g       *ABS*	00000000 __PCCARD_segment_start__
0803cb60 g     F .text	0000006c bmi2_set_regs
0803eb40  w    F .text	00000000 floor(float)
00002504 g       *ABS*	00000000 __data_run_size__
080201ac g       *ABS*	00000000 __init_load_start__
08042114 g       .rodata	00000000 __rodata_start__
080374dc g     F .text	0000002c _nx_icmp_queue_process
080380cc g     F .text	0000008c _nx_packet_copy
080239d0 g     F .text	00000080 SingleStepperAxis::configure()
0803b11c g     F .text	00000098 CAN_ITConfig
20012238 g     O .bss	00000004 _tx_mutex_performance_get_count
200121f4 g     O .bss	00000004 _nx_packet_pool_created_count
080382c0 g     F .text	00000008 _nx_packet_length_get
200148f8 g       *ABS*	00000000 __RAM_segment_used_end__
20020000 g       *ABS*	00000000 __SRAM2_segment_end__
08026ae0 g     F .text	000002f0 PLACEPICK_runTask(COMM_CCP_pick_t*, unsigned long, bool)
08049838 g     O .rodata	00002000 bmi270_config_file
0803c828 g     F .text	00000074 SRAM_setOpMode
0803ec38  w    F .text	0000004c roundf
080234bc g     F .text	000000d4 SingleServoAxis::move(float, AXIS_moveType_t, unsigned char, AXIS_mode_t)
08038e40  w    F .text	00000000 SPI1_IRQHandler
0803f6ba  w    F .text	00000000 strcmp
0802514c g     F .text	0000007c DIAGNOSTIC_endianSwapMoveMotorCommand(COMM_DIAGNOSTIC_moveMotor_t*)
080201ba  w    F .init	00000000 PVD_IRQHandler
08020234 g     F .init	00000000 reset_handler
0802288c g     F .text	00000044 assert_failed
080201fa  w    F .init	00000000 TIM5_IRQHandler
0802404c g     F .text	00000068 CCP_sendProgressMessage
0802fdec g     F .text	00000006 HARDWARE_NETWORK_priorityMessageQueueFullDelay
0803b98c g     F .text	00000050 RCC_AHB1PeriphClockCmd
08024c78 g     F .text	000000bc BSB_resetFwVersion
08031458 g     F .text	000000dc NVM_deleteEntry
0804bdf8 g       .ARM.exidx	00000000 __ARM.exidx_start__
080358b0 g     F .text	0000002c CAN1_RX1_IRQ_Handler
0802f3dc g     F .text	00000030 MessageManager::initialize()
00001000 g       *ABS*	00000000 __FSMC_segment_size__
080388ec g     F .text	0000006c _nx_udp_receive_cleanup
20002564 g     O .bss	000000b4 NETWORK_udpThread
0803eb40  w    F .text	00000000 floorf
08022ae0 g     F .text	00000008 Robot::start()
0804bdf8 g       .ARM.exidx	00000000 __exidx_start
0000ffe9 g       *ABS*	00000000 __bss_size__
0803b8fc g     F .text	00000090 RCC_GetClocksFreq
0802277c g     F .text	0000000c DEBUG_registerSubtaskSendFunction
20002504 g       *ABS*	00000000 __bss_load_start__
08038f90 g     F .text	00000050 _tx_event_flags_create
0803f654  w    F .text	00000000 memset
08039ee0 g     F .text	00000000 tx_thread_fpu_disable
0804b92c g     O .rodata	0000000c __RAL_c_locale
0803f768  w    F .text	00000002 __printf_lock
0803e38a  w    F .text	00000000 __floatdisf
080201d2  w    F .init	00000000 ADC_IRQHandler
08030dec g     F .text	0000001a BinManager::isBinState(BinManager::BinState)
08028300 g     F .text	00000004 SM_RUNNER_setComplete
0803e66c  w    F .text	00000000 __aeabi_ddiv
08035138 g     F .text	0000001c GPIO_readPin
50060c00 g       *ABS*	00000000 __AHB2_segment_end__
0802e328 g     F .text	00000024 UTILITIES_initRingBuff
40008000 g       *ABS*	00000000 __APB1_segment_end__
0802e294 g     F .text	00000018 IMU_DRIVER_getDataBuff
0803ed98 g     F .text	0000001c __RAL_print_padding
0802bd5c g     F .text	00000004 TaskManager::setState(TaskManager::State_e)
08025d14 g     F .text	00000020 ATTIC_ENTRY_runTask(unsigned long, bool)
00000000 g       *ABS*	00000000 __NAND2_segment_size__
200123b0 g     O .bss	00000004 _tx_timer_time_slice
08035884 g     F .text	0000002c CAN1_RX0_IRQ_Handler
0802ba84 g     F .text	00000088 SELF_LIFT_runTask(void*, unsigned long, bool)
0803b280 g     F .text	00000020 FLASH_Unlock
08030a3c g     F .text	00000018 AxisTelemetryMonitor::AxisTelemetryMonitor()
20012264 g     O .bss	00000004 _tx_thread_created_count
08047e44 g     O .rodata	00000010 AHBPrescTable
0802a820 g     F .text	000000a8 RECOVERY_runTask(COMM_CCP_recovery_t*, unsigned long, bool)
0802416c g     F .text	00000048 CCP_processRxUsartMessage
0802fa40 g     F .text	00000006 MessageManager::numMessagesToReceive() const
0803e45a  w    F .text	00000000 __extendsfdf2
080420b8 g       .ctors	00000000 __dtors_end__
08020d54 g     F .text	0000013c SYSTEM_printStackInformation
0803ea3c  w    F .text	000000fc fmodf
0804bdf8 g       .rodata	00000000 __rodata_load_end__
08032eb4 g     F .text	00000018 UPG_MNGR_getCurrentTarget
2000e480 g     O .bss	00000001 STATUSLED_activeMotionCommand
08022a90 g     F .text	00000024 Robot::Robot(AxisBase**, unsigned char, Robot::Sensors)
08022994 g     F .text	000000fc LOG_pop
08020220  w    F .init	00000000 CRYP_IRQHandler
080307a0 g     F .text	00000010 CANMNGR_sendMsg
200023c4 g     O .data	00000004 g_turretAxis
0802d368 g     F .text	00000038 SOFTWARE_TIMER_update
08023700 g     F .text	0000005e MultiStepperAxis::getStatus()
20002270 g     O .data	00000004 g_dynamicAxis_4
08040202 g     F .text	00000018 _Unwind_GetLanguageSpecificData
20004c38 g     O .bss	00000002 binTransactionRecord
08031a2c g     F .text	00000050 SystemInit
0001c000 g       *ABS*	00000000 __SRAM1_segment_size__
20002264 g     O .data	00000004 g_dynamicAxis_1
20002268 g     O .data	00000004 g_dynamicAxis_2
0803b758 g     F .text	000000f0 GPIO_WriteBit
0803507c g     F .text	0000002c GPIO_getPinSourceVal
08037d74 g     F .text	0000000c _nx_ip_periodic_timer_entry
200123b4 g     O .bss	0000004c fram_mutex
08025458 g     F .text	00000016 COMM_checkSequenceNumber
08032cec g     F .text	0000015c UPG_MNGR_isRespReceived
080249bc g     F .text	000001a4 NAVCOMMS_processMessage
200124f4 g       .tdata_run	00000000 __tdata_end__
20002304 g     O .data	00000004 g_liftAxisYPos
200124f4 g       *ABS*	00000000 __heap_load_start__
08040194 g     F .text	0000004a decode_eht_entry
0802bce8 g     F .text	00000010 TaskStatus::TaskStatus(TaskStatus const&)
080412c4 g     F .text	00000000 __vfprintf
080305b4 g     F .text	000001ec CANMNGR_enterThread
0802f0cc g     F .text	0000001c CAMERA_adjustPixelCenterOffset(int, int)
0802ff8c g     F .text	00000028 HARDWARE_NETWORK_dequeueReceivedDiagnosticMessage
2000226c g     O .data	00000004 g_dynamicAxis_3
00000000 g       *ABS*	00000000 __STACKSIZE_FIQ__
0803e264 g     F .text	00000096 arm_abs_f32
0803c810 g     F .text	00000018 SRAM_init
080201d0  w    F .init	00000000 DMA1_Stream6_IRQHandler
0803ee26  w    F .text	0000000a islower
08022770 g     F .text	0000000c DEBUG_registerPrintFunction
08035280 g     F .text	00000010 SPI_init
08020000 g       *ABS*	00000000 __vectors_load_start__
0803734c g     F .text	00000014 _nx_icmp_enable
080311c0 g     F .text	00000044 operator new(unsigned int)
00000010 g       *ABS*	00000000 __DBG_segment_size__
00002000 g       *ABS*	00000000 __STACKSIZE__
08034d18 g     F .text	0000000c UART4_IRQ_handler
080201c6  w    F .init	00000000 DMA1_Stream1_IRQHandler
0803f1fc  w    F .text	00000020 rand
0802ca94 g     F .text	00000020 CAMERA_IMAGE_TRANSFER_runTask(void*, unsigned long, bool)
0802f40c g     F .text	00000030 MessageManager::~MessageManager()
00000004 g       *ABS*	00000000 __tbss_size__
0803f2d2  w    F .text	0000003a strncmp
0802522c g     F .text	0000002a DIAGNOSTIC_endianSwapCameraSensorStateData(COMM_DIAGNOSTIC_cameraSensorState_t*)
08034c7c g     F .text	0000000c USART_readCcpUsartData
08023d20 g     F .text	0000007e Articulation::toNexusArticulation(Articulation::State_e)
00000000 g       *ABS*	00000000 __NOR_PSRAM3_segment_size__
08022d60 g     F .text	00000004 AxisBase::setCommandStatus(AXIS_commandStatus_t)
080351c0 g     F .text	00000024 EXTI3_IRQ_Handler
0803f60e  w    F .text	00000000 __aeabi_memcpy4
080201b8  w    F .init	00000000 WWDG_IRQHandler
0802f27c g     F .text	00000134 MessageManager::MessageManager(char const*, COMM_endianOrder_e, void (*)(unsigned char*, unsigned short), void (*)(), void (*)(), void (*)(), unsigned short, unsigned int, unsigned long long)
0802f00c g     F .text	00000084 CAMERA_trigger()
200124ed g       .bss	00000000 __bss_load_end__
08022fb4 g     F .text	00000006 AxisBase::removeDataSubscriber(SubscriberBase*)
08038bf8 g     F .text	00000016 _nx_udp_socket_receive_notify
0803ba78 g     F .text	00000050 RCC_AHB1PeriphResetCmd
08030d2c g     F .text	0000003c BinSensor::readNewData()
0802fe54 g     F .text	0000001c HARDWARE_NETWORK_enqueueReceivedMCMMessage
0802c230 g     F .text	0000006c UPGRADER_runTaskCcpCmdMetaData(void*, unsigned long, bool)
0802f714 g     F .text	00000174 MessageManager::pushReceivedMessage(unsigned char*, unsigned short)
08020232  w    F .init	00000000 DMA2D_IRQHandler
080241c8 g     F .text	0000006c CCP_sendLogLine
0802cab4 g     F .text	00000048 DIAGNOSTIC_TASK_RUNNER_runTask(DIAGNOSTIC_TASK_config_t*, COMM_DIAGNOSTIC_commandMessage_t*, unsigned long, bool)
08031ecc g     F .text	00000120 UPGRADER_eraseCRCKeyIfAny
0803b2f0 g     F .text	00000024 FLASH_WaitForLastOperation
00000000 g       *ABS*	00000000 __dtors_size__
080201ac g       .vectors	00000000 __vectors_load_end__
08038514 g     F .text	0000005a _nx_rarp_packet_deferred_receive
20012280 g     O .bss	00000080 _tx_thread_priority_list
080201fe  w    F .init	00000000 DMA2_Stream0_IRQHandler
0802a120 g     F .text	00000048 INSTANT_HOME_run(COMM_CCP_homingModes_t, unsigned long, bool)
0803f602  w    F .text	00000000 __aeabi_memcpy
20012220 g     O .bss	00000004 _tx_event_flags_created_count
00000000 g       *ABS*	00000000 __PCCARD_segment_size__
0803f60e  w    F .text	00000000 __aeabi_memcpy8
08030d68 g     F .text	00000006 BinSensor::getBufferedState()
0803f35e  w    F .text	00000030 strrchr
08023b00 g     F .text	00000004 Articulation::Articulation(Articulation::State_e)
68000000 g       *ABS*	00000000 __NOR_PSRAM3_segment_end__
0803a974 g     F .text	00000070 _tx_timer_initialize
200124f0 g       *ABS*	00000000 __tbss_load_start__
08030014 g     F .text	0000001c Nest::Nest(float, float (*)(), float (*)())
08020212  w    F .init	00000000 I2C3_EV_IRQHandler
080312a4 g     F .text	0000000c MEMORY_lockAllocationPool()
20009bcc g     O .bss	000000b4 MSGMNGR_thread
00000000 g       *ABS*	00000000 __fast_run_size__
08035208 g     F .text	00000038 EXTI9_5_IRQ_Handler
08020226  w    F .init	00000000 SPI4_IRQHandler
08038cfc g     F .text	00000018 _nx_udp_source_extract
08037804 g     F .text	00000294 _nx_ip_packet_receive
00000000 g       *ABS*	00000000 __non_init_size__
0803087c g     F .text	00000030 Publisher::Publisher()
00004000 g       *ABS*	00000000 __SRAM2_segment_size__
0803d018 g     F .text	0000003a bmi2_get_internal_status
0802c5b0 g     F .text	000000b0 UPGRADER_runTaskCcpCmdFinalize(void*, unsigned long, bool)
08035518 g     F .text	00000002 SPI1_IRQ_handler
1fff7a10 g       *ABS*	00000000 __SYSTEM_segment_end__
0802d698 g     F .text	0000002c IMU_CALIB_zeroAccelerometer
200124ec g     O .bss	00000001 .hidden libunwind::LocalAddressSpace::sThisAddressSpace
0803e89e  w    F .text	00000000 __float32_isnan
080201c8  w    F .init	00000000 DMA1_Stream2_IRQHandler
0803bf04 g     F .text	00000090 USART_Cmd
0802986c g     F .text	00000094 BASEMENT_EXIT_runTask(unsigned long, BASEMENT_EXIT_turretState_t, bool)
0803b2b0 g     F .text	00000040 FLASH_GetStatus
080201c2  w    F .init	00000000 RCC_IRQHandler
080201e4  w    F .init	00000000 I2C1_ER_IRQHandler
08028dac g     F .text	0000004c MOVEXY_runTask(COMM_CCP_moveXY_t*, unsigned long, bool)
08038b34 g     F .text	000000c4 _nx_udp_socket_receive
0803aadc g     F .text	0000002c _tx_timer_system_deactivate
08020bbc g     F .text	00000044 SYSTEM_init
0803f33c  w    F .text	00000022 strnlen
08043d7c g     O .rodata	0000003c vtable for MultiServoAxis
080231f8 g     F .text	00000068 SingleServoAxis::processData(unsigned char, unsigned char*, unsigned short)
20000000 g       .ARM.exidx	00000000 __fast_start__
00000000 g       *ABS*	00000000 __STACKSIZE_ABT__
0803eb38  w    F .text	00000000 fabs(float)
0802cefc g     F .text	00000074 DIAGNOSTIC_TASK_runAsyncTask(void*, unsigned long, bool)
08023440 g     F .text	00000034 SingleServoAxis::SingleServoAxis(char const*, unsigned char, AXIS_config_t*, SingleServoAxis::Config const*, AXIS_motionProfile_t const* const*, unsigned char, bool (*)(unsigned char, unsigned char, unsigned char*, unsigned short), void (*)(float), float (*)())
2001225c g     O .bss	00000004 _tx_build_options
08041010 g     F .text	0000001c unw_get_proc_info
08024374 g     F .text	00000050 MCM_processResponseMessage(COMM_rxMessagePtrs_t)
200124f4 g       .tdata_run	00000000 __non_init_load_end__
20012204 g     O .bss	00000004 _nx_system_build_options_3
200121fc g     O .bss	00000004 _nx_system_build_options_1
20012200 g     O .bss	00000004 _nx_system_build_options_2
0804025c g     F .text	00000008 __aeabi_unwind_cpp_pr1
08037540 g     F .text	000001d8 _nx_ip_create
08030dd4 g     F .text	00000016 BinManager::getNexusBinState()
2001227c g     O .bss	00000004 _tx_thread_preempt_disable
08040270 g     F .text	00000008 __aeabi_unwind_cpp_pr2
08030c5c g     F .text	0000009a BinSensor::processData(void*)
0802ab7c g     F .text	0000002c RECOVERY_moveRecovery(unsigned long, bool, COMM_CCP_recoveryDirection_t)
08040fa8 g     F .text	0000002c unw_get_fpreg
08043e6c g     O .rodata	0000003c vtable for MultiStepperAxis
080412bc g     F .text	00000000 .hidden libunwind::Registers_arm::restoreVFPv3(unsigned long long*)
2000e481 g     O .bss	00000001 STATUSLED_eStop
0802fe08 g     F .text	0000000c HARDWARE_NETWORK_initializeMCM
08034f68 g     F .text	00000114 GPIO_init
08020204  w    F .init	00000000 DMA2_Stream3_IRQHandler
080228d0 g     F .text	00000018 __putchar
08038c10 g     F .text	000000ec _nx_udp_socket_send
080201d6  w    F .init	00000000 TIM1_UP_TIM10_IRQHandler
0803ee3a g     F .text	0000003c __digit
200124f0 g       .tbss	00000000 __tbss_start__
0803ebac  w    F .text	00000000 ldexpf
08040248 g     F .text	00000008 __aeabi_unwind_cpp_pr0
10000000 g       *ABS*	00000000 __DATA_SRAM_segment_start__
0803e368  w    F .text	00000000 __floatunsidf
20002274 g     O .data	00000004 g_staticAxis_1
0802b484 g     F .text	0000004c TORQUE_SHARING_runTask(ROBOT_axisIndex_t, unsigned long, bool)
08036da8 g     F .text	0000005a _nx_arp_packet_deferred_receive
200121f0 g     O .bss	00000004 _nx_ip_created_ptr
0803e9e4  w    F .text	00000058 modff
080238d4 g     F .text	0000001c SingleStepperAxis::getStatus()
0803e41e  w    F .text	00000000 __floatundisf
08032144 g     F .text	00000066 UPG_COMM_packPacket
08035934 g     F .text	00000064 CRC_calculate
0803e45a  w    F .text	00000000 __aeabi_f2d
08033e88 g     F .text	0000000c STATUSLED_IsAutoUpdateEnabled
08030f9c g     F .text	0000010c BinManager::BinManager(BinSensor::State (*)(), BinSensor::State (*)(), BinSensor::State (*)(), BinSensor::State (*)(), void (*)(void*), void*, unsigned short)
40000000 g       *ABS*	00000000 __APB1_segment_start__
20012268 g     O .bss	00000004 _tx_thread_created_ptr
08030cf8 g     F .text	00000034 BinSensor::BinSensor(BinSensor::State (*)(), void (*)(void*), void*, unsigned short)
2001221c g     O .bss	00000004 _tx_byte_pool_created_ptr
2000242c g     O .data	00000004 g_staticWheelArticulationAxis
20002504 g       .data_run	00000000 __data_run_end__
08020216  w    F .init	00000000 OTG_HS_EP1_OUT_IRQHandler
08038d20 g     F .text	00000000 _tx_initialize_low_level
080320c0 g     F .text	00000048 UPG_COMM_init
08039e28 g     F .text	00000000 __tx_PendSVHandler
080238bc g     F .text	00000004 SingleStepperAxis::reset()
20002278 g     O .data	00000004 g_staticAxis_2
080351e4 g     F .text	00000024 EXTI4_IRQ_Handler
200124f4 g       .tdata_run	00000000 __non_init_end__
08023fb0 g     F .text	00000038 CCP_sendDataMessage
080254e8 g     F .text	00000040 ANTCTRL_startTask
0803a0c0 g     F .text	000000ac _tx_thread_system_preempt_check
20012224 g     O .bss	00000004 _tx_event_flags_created_ptr
20000000 g       *ABS*	00000000 __SRAM1_segment_start__
08035880 g     F .text	00000002 CAN1_SCE_IRQ_Handler
08038418 g     F .text	000000b8 _nx_packet_release
0803e42e  w    F .text	00000000 __aeabi_d2uiz
08020206  w    F .init	00000000 DMA2_Stream4_IRQHandler
080309c8 g     F .text	00000004 ProgressMonitor::getIntervals()
08025528 g     F .text	000002ac ANTCTRL_enterThread
200123a8 g     O .bss	00000004 _tx_timer_processing_active
0803c788 g     F .text	00000088 SRAM_write
0803d6a0 g     F .text	00000354 bmi2_set_sensor_config
08024664 g     F .text	00000150 CDM_updateFwVersion
200128f8 g       *ABS*	00000000 __stack_load_start__
08023418 g     F .text	00000028 SingleServoAxis::reset()
0803edce  w    F .text	00000008 abs
08024254 g     F .text	0000002c CCP_setMirrorData
08030964 g     F .text	00000030 Publisher::update(unsigned char*, unsigned short)
08042114 g       .ctors	00000000 __ctors_end__
08040742 g     F .text	00000012 __gnu_unwind_frame
0802381c g     F .text	00000044 MultiStepperAxis::home(AXIS_homeType_t, float)
200124f4 g       .heap	00000000 __heap_start__
0802e3f0 g     F .text	0000000a UTILITIES_isEmptyRx
0803c41c g     F .text	0000007c FRAM_init
08040790 g     F .text	00000008 .hidden abort_message
20002280 g     O .data	00000004 g_staticAxis_4
0802143c g     F .text	0000005c CLI_printCommandHelp(CLI_command_t const*)
200124f4 g       .tdata_run	00000000 __non_init_start__
08029f4c g     F .text	0000005c FULL_HOME_run(COMM_CCP_homingModes_t, unsigned long, bool)
0802fa50 g     F .text	00000230 MessageManager::sendMessage()
080228e8 g     F .text	00000026 LOG_init
08039d98 g     F .text	00000078 _tx_thread_initialize
08030030 g     F .text	000000d4 Nest::setHeight_bins(unsigned char)
0802e4c0 g     F .text	00000030 CAMERA_rxInterruptCallback(unsigned char)
080407b8  w    F .text	00000002 .hidden libunwind::UnwindCursor<libunwind::LocalAddressSpace, libunwind::Registers_arm>::~UnwindCursor()
0802022c  w    F .init	00000000 SAI1_IRQHandler
2000228c g     O .data	00000004 g_z4DAxis
200121ec g     O .bss	00000004 _nx_ip_created_count
08037788 g     F .text	00000036 _nx_ip_loopback_send
0802fcb8 g     F .text	0000001c HARDWARE_NETWORK_enqueuePriorityCCPMessage
0804b958 g     O .rodata	00000031 __RAL_c_locale_abbrev_month_names
08030a54 g     F .text	00000008 AxisTelemetryMonitor::setUpdateInterval(unsigned int)
20012270 g     O .bss	00000004 _tx_thread_execute_ptr
0802ed24 g     F .text	000002dc CAMERA_processResponse()
2000227c g     O .data	00000004 g_staticAxis_3
0802fe2c g     F .text	0000001c HARDWARE_NETWORK_enqueuePriorityMCMMessage
20002290 g     O .data	00000004 g_z4SAxis
00030000 g       *ABS*	00000000 __RAM_segment_size__
08020000 g       .vectors	00000000 __vectors_start__
08024234 g     F .text	0000001e CCP_sendSubtask
08030878  w    F .text	00000002 SubscriberBase::update(unsigned char*, unsigned short)
080276b8 g     F .text	000000d0 ACTIONS_home(bool, ROBOT_axisIndex_t, AXIS_homeType_t, float, float, float, float)
0803e492  w    F .text	00000000 __float64_to_float32
080201e6  w    F .init	00000000 I2C2_EV_IRQHandler
0802c6d0 g     F .text	00000074 UPGRADER_runTaskCcpCmdDataBlock(void*, unsigned long, bool)
0803f780 g     F .text	00000058 __cxa_begin_cleanup
08030b14 g     F .text	00000040 TorqueMonitor::getAverage()
08020000 g       .vectors	00000000 _vectors
08024f20 g     F .text	0000005c DIAGNOSTIC_sendCommandResponse(COMM_DIAGNOSTIC_messageId_e, COMM_responseCodes_t, COMM_DIAGNOSTIC_errorCode_e)
08025470 g     F .text	00000030 ANTCTRL_getXTireDiameter
08038e78  w    F .text	00000000 CAN1_RX0_IRQHandler
1fffc000 g       *ABS*	00000000 __OPTION_segment_start__
08047a04 g     O .rodata	0000000c vtable for TorqueMonitor
e0042010 g       *ABS*	00000000 __DBG_segment_end__
08020e90 g     F .text	000004e8 SYSTEM_checkCrashLog
0804129c g     F .text	00000000 .hidden libunwind::Registers_arm::restoreCoreAndJumpTo()
0803e8b4  w    F .text	00000130 atan(float)
0803a360 g     F .text	00000000 _tx_thread_system_return
08039178 g     F .text	00000214 _tx_event_flags_set
080420b8 g       .text	00000000 __text_load_end__
0802bccc g     F .text	0000000a TaskStatus::TaskStatus(TaskStatus::Result_e)
080201de  w    F .init	00000000 TIM3_IRQHandler
080238a4 g     F .text	00000006 SingleStepperAxis::home(AXIS_homeType_t, float, float, float, float)
0803610c g     F .text	000006c0 ETH_Init
08030914 g     F .text	00000050 Publisher::unsubscribe(SubscriberBase*)
0803f244  w    F .text	00000058 strncasecmp
0802f978 g     F .text	0000007e MessageManager::pushPrioritySendMessage(unsigned char*, unsigned short)
080257d4 g     F .text	00000010 ANTCTRL_setEvent
0802022a  w    F .init	00000000 SPI6_IRQHandler
0802fce0 g     F .text	0000001c HARDWARE_NETWORK_enqueueStandardCCPMessage
0802f1a4 g     F .text	00000010 CAMERA_getImage()
0803eea8  w    F .text	00000014 __aeabi_errno_addr
0803ba28 g     F .text	00000050 RCC_APB2PeriphClockCmd
0804ba08 g     O .rodata	0000003a __RAL_c_locale_day_names
08032bf8 g     F .text	00000058 UPG_MNGR_doFinalConfirm
0803b2a0 g     F .text	00000010 FLASH_Lock
08040e40  w    F .text	00000036 .hidden libunwind::UnwindCursor<libunwind::LocalAddressSpace, libunwind::Registers_arm>::getReg(int)
20002168 g     O .data	00000004 SystemCoreClock
08037a98 g     F .text	000002dc _nx_ip_packet_send
080368d0 g     F .text	00000010 ETH_GetSoftwareResetStatus
20002430 g     O .data	00000004 g_wheelArticulationAxis_xNegLeft
0802b280 g     F .text	00000020 CAMERA_CALIBRATION_runTask(void*, unsigned long, bool)
08037310 g     F .text	0000003a _nx_arp_queue_process
200121e8 g     O .bss	00000004 EthStatus
080349a4 g     F .text	00000024 USART_init
0803c35c g     F .text	000000c0 FIFO_getData
080420b8 g       *ABS*	00000000 __ctors_load_start__
00000400 g       *ABS*	00000000 __heap_size__
0803a860 g     F .text	00000114 _tx_timer_expiration_process
08023b04 g     F .text	00000004 Articulation::get()
0803a9f0 g     F .text	00000000 _tx_timer_interrupt
08022718 g     F .text	00000006 sramRead
0803ca88 g     F .text	000000a6 bmi2_get_regs
080254ac g     F .text	00000030 ANTCTRL_getYTireDiameter
08036010 g     F .text	00000044 nx_driver_stm32f4xx_ethernet_isr
20012320 g     O .bss	00000080 _tx_timer_list
080309a0 g     F .text	00000006 ProgressMonitor::reset()
0803a610 g     F .text	00000170 _tx_thread_time_slice
08023ad8 g     F .text	0000001a SingleStepperAxis::processResponse(unsigned char, unsigned char*, unsigned short)
08039668 g     F .text	00000170 _tx_mutex_get
08038da6  w    F .text	00000000 USART2_IRQHandler
08022fc8 g     F .text	00000014 AxisBase::loadDynamicConfiguration()
080302a4 g     F .text	000000c0 Nest::getBasementPositions()
00000000 g       *ABS*	00000000 __tdata_size__
080201c4  w    F .init	00000000 DMA1_Stream0_IRQHandler
0802753c g     F .text	000000b8 ATTIC_ENTRY_homingErrorHandler(ROBOT_axisIndex_t, unsigned long, bool)
6c000000 g       *ABS*	00000000 __NOR_PSRAM4_segment_start__
08023a50 g     F .text	00000034 SingleStepperAxis::SingleStepperAxis(char const*, unsigned char, AXIS_config_t*, COMM_CDM_MOTOR_torqueSettings_t const*, AXIS_motionProfile_t const* const*, unsigned char, bool (*)(unsigned char, unsigned char, unsigned char*, unsigned short), void (*)(float), float (*)())
08030abc g     F .text	0000002c TorqueMonitor::TorqueMonitor(unsigned short)
20002300 g     O .data	00000004 g_liftAxisYNeg
08037360 g     F .text	00000140 _nx_icmp_packet_process
0804b994 g     O .rodata	00000058 __RAL_c_locale_data
20012240 g     O .bss	00000004 _tx_mutex_performance_put_count
08032108 g     F .text	0000003c UPG_COMM_packPacketNoOptData
080369ec g     F .text	0000003c ETH_DMAReceptionCmd
20000000 g       .vectors	00000000 __vectors_ram_start__
0803519c g     F .text	00000024 EXTI2_IRQ_Handler
08022cec g     F .text	00000064 AxisBase::AxisBase(char const*, unsigned char, AXIS_config_t*, AXIS_motionProfile_t const* const*, unsigned char, bool (*)(unsigned char, unsigned char, unsigned char*, unsigned short), void (*)(float), float (*)())
00000000  w      *UND*	00000000 DMA1_Stream7_IRQHandler
0802fdc8 g     F .text	00000024 HARDWARE_NETWORK_waitMessagesToSend
080240b4 g     F .text	000000b8 CCP_processMessage
08032e48 g     F .text	0000006a UPG_MNGR_processCANRxMessage
0803ef98  w    F .text	00000040 printf
080201ae  w    F .init	00000000 HardFault_Handler
08030ef4 g     F .text	00000026 BinManager::measureBinState()
20012258 g     O .bss	00000004 _tx_semaphore_created_ptr
080291d8 g     F .text	00000038 MOVEXY_transition(ROBOT_axisIndex_t, float, unsigned long, bool)
0803a558 g     F .text	000000b8 _tx_thread_terminate
0803ab08 g     F .text	000000a0 NVIC_Init
0803297c g     F .text	00000018 UPG_MNGR_postProcessUpgrade
00000000  w      *UND*	00000000 TIM6_DAC_IRQHandler
0803dfb8 g     F .text	000002ac bmi270_sensor_enable
080309cc g     F .text	00000010 AxisTelemetryMonitor::reset()
080201cc  w    F .init	00000000 DMA1_Stream4_IRQHandler
08022ae8 g     F .text	0000001a Robot::getAxis(ROBOT_axisIndex_t)
08025148 g     F .text	00000002 DIAGNOSTIC_endianSwapHomeMotorCommand(COMM_DIAGNOSTIC_home_t*)
0803af20 g     F .text	00000130 CAN_Transmit
080245a8 g     F .text	000000bc CDM_resetFwVersion
080201f2  w    F .init	00000000 TIM8_TRG_COM_TIM14_IRQHandler
08031e1c g     F .text	00000004 TX_USER_thread_completed_handler
08023a50 g     F .text	00000034 SingleStepperAxis::SingleStepperAxis(char const*, unsigned char, AXIS_config_t*, COMM_CDM_MOTOR_torqueSettings_t const*, AXIS_motionProfile_t const* const*, unsigned char, bool (*)(unsigned char, unsigned char, unsigned char*, unsigned short), void (*)(float), float (*)())
0802bfdc g     F .text	0000000e TaskManager::isTaskActive()
08020518 g     F .text	00000094 NETWORK_enterUdpThread
0804caa8 g       *ABS*	00000000 __fast_load_start__
0803fef0 g     F .text	000001d0 __gxx_personality_v0
08030abc g     F .text	0000002c TorqueMonitor::TorqueMonitor(unsigned short)
08033e7c g     F .text	0000000c STATUSLED_autoUpdateEnable
080282dc g     F .text	00000022 SM_RUNNER_setError
080203e4 g       .init	00000000 __init_end__
08023f6c g     F .text	00000044 CCP_sendCmdResponse
08035810 g     F .text	00000028 CAN_sendMsg
08025800 g     F .text	0000000c ANTCTRL_getLastTaskPayload
20002288 g     O .data	00000004 g_yAxis
0803b9dc g     F .text	0000004c RCC_APB1PeriphClockCmd
0804ba44 g     O .rodata	00000057 __RAL_c_locale_month_names
20012230 g     O .bss	00000004 _tx_mutex_created_ptr
20003718 g     O .bss	00000024 CLI_events
08020290 g     F .init	00000000 _start
08029ab4 g     F .text	0000003c CONFIGURE_runTask(void*, unsigned long, bool)
08027f1c g     F .text	000003c0 SM_RUNNER_runStateMachine
080309a8 g     F .text	00000018 ProgressMonitor::ProgressMonitor()
080386ac g     F .text	00000240 _nx_udp_packet_receive
0802fcac g     F .text	0000000c HARDWARE_NETWORK_getNumCCPMessagesToSend
50000000 g       *ABS*	00000000 __AHB2_segment_start__
08031a00 g     F .text	00000002 AWARENESS_submitPitchRollData(IMU_pitchRoll_data_t const*)
0802022e  w    F .init	00000000 LTDC_IRQHandler
08035240 g     F .text	00000040 EXTI15_10_IRQ_Handler
08038644 g     F .text	00000066 _nx_udp_free_port_find
08032310 g     F .text	00000508 UPG_COMM_recvCallbackCAN
08035630 g     F .text	00000168 CAN_setup
080247b4 g     F .text	00000104 CDM_processMessage
080278ec g     F .text	000000e4 ACTIONS_move(bool, ROBOT_axisIndex_t, float, AXIS_moveType_t, float, float, float)
0802a284 g     F .text	00000044 LOCATE_updateDeadReckoningRunTask(void*, unsigned long, bool)
08030ae8 g     F .text	00000018 TorqueMonitor::~TorqueMonitor()
20002448 g     O .data	00000004 g_wheelArticulationAxis_yPosLeft
08022a90 g     F .text	00000024 Robot::Robot(AxisBase**, unsigned char, Robot::Sensors)
080201f6  w    F .init	00000000 FMC_IRQHandler
0802bfd0 g     F .text	00000004 TaskManager::getTask()
0803a374 g     F .text	000001e4 _tx_thread_system_suspend
08038e94  w    F .text	00000000 CAN2_TX_IRQHandler
08032edc g     F .text	00000010 UPG_MNGR_setStatusFinalConfirmed
0804035e g     F .text	0000012e _Unwind_VRS_Pop
0803f30c  w    F .text	00000030 strncpy
20000000 g       *ABS*	00000000 __RAM_segment_start__
080349c8 g     F .text	00000140 USART_setup
08024424 g     F .text	00000066 CDM_sendAxis
00000400 g       *ABS*	00000000 __HEAPSIZE__
0802d5f0 g     F .text	00000098 IMU_CALIB_updateAccelerometerBias
080201c0  w    F .init	00000000 FLASH_IRQHandler
200148f8 g       .stack_process	00000000 __stack_process_load_end__
20012218 g     O .bss	00000004 _tx_byte_pool_created_count
6c000000 g       *ABS*	00000000 __NOR_PSRAM4_segment_end__
08038e6a  w    F .text	00000000 CAN1_TX_IRQHandler
08023920 g     F .text	00000064 SingleStepperAxis::home(AXIS_homeType_t, float)
2000244c g     O .data	00000004 g_wheelArticulationAxis_yPosRight
20012250 g     O .bss	00000004 _tx_queue_created_ptr
0803c1cc g     F .text	000000e4 USART_GetFlagStatus
0004efac g       *ABS*	00000000 __FLASH_segment_used_size__
08039500 g     F .text	00000048 _tx_mutex_thread_release
08035998 g     F .text	00000678 nx_driver_stm32f4xx
00000000 g       *ABS*	00000000 __NOR_PSRAM4_segment_size__
00008000 g       *ABS*	00000000 __APB2_segment_size__
20002504 g       .data_run	00000000 __data_run_load_end__
20012210 g     O .bss	00000004 _tx_block_pool_created_count
08038278 g     F .text	00000046 _nx_packet_data_retrieve
00021cd4 g       *ABS*	00000000 __text_size__
080225f0 g     F .text	000000f0 CLI_enterThread
0802bc34 g     F .text	00000098 SELF_LIFT_homingErrorHandler(SELF_LIFT_errorHandler_t, unsigned long, bool)
080201f8  w    F .init	00000000 SDIO_IRQHandler
20002428 g     O .data	00000004 g_dynamicWheelArticulationAxis
0802f0f4 g     F .text	000000b0 CAMERA_requestImage(CAMERA_imageFormat_t, CAMERA_imageSize_t, CAMERA_imageQuality_t)
080203e4 g       *ABS*	00000000 __init_rodata_load_start__
0803e38a  w    F .text	00000000 __int64_to_float32
08027cfc g     F .text	000000a4 ACTIONS_enableTelemetry(bool, ROBOT_axisIndex_t, bool, unsigned int)
08022cac g     F .text	0000003e Robot::isInAttic()
0802bb0c g     F .text	00000128 SELF_LIFT_homingErrorStateMachine(unsigned long)
08025200 g     F .text	0000002a DIAGNOSTIC_endianSwapResponseMessage(COMM_standardResponsePayload_t*)
08038d7c  w    F .text	00000000 __tx_SysTickHandler
080374a0 g     F .text	0000003c _nx_icmp_packet_receive
080236d4 g     F .text	0000002c MultiStepperAxis::configure()
08038e32  w    F .text	00000000 EXTI15_10_IRQHandler
080201ee  w    F .init	00000000 TIM8_BRK_TIM12_IRQHandler
60000000 g       *ABS*	00000000 __NOR_PSRAM1_segment_start__
0802f1ec g     F .text	00000084 MSGMNGR_enterThread
08027bf0 g     F .text	0000002e ACTIONS_resetAll(bool)
08038d98  w    F .text	00000000 USART1_IRQHandler
080201be  w    F .init	00000000 RTC_WKUP_IRQHandler
080203e4 g       .init	00000000 __init_load_end__
08021498 g     F .text	00000098 CLI_executeCommand
08039e28 g     F .text	00000000 __tx_SVCallHandler
08035590 g     F .text	000000a0 CAN_init
20004a24 g     O .bss	00000024 ANTCTRL_events
0803c89c g     F .text	00000068 SRAM_getOpMode
08022ca8 g     F .text	00000004 Robot::setBusVoltage(unsigned char)
0803d3cc g     F .text	00000290 bmi2_get_sensor_data
0804caa8 g       .ARM.exidx	00000000 __exidx_end
08023860 g     F .text	00000040 MultiStepperAxis::MultiStepperAxis(char const*, unsigned char, AXIS_config_t*, COMM_CDM_MOTOR_torqueSettings_t const*, AXIS_motionProfile_t const* const*, unsigned char, SingleStepperAxis**, unsigned char, bool (*)(unsigned char, unsigned char, unsigned char*, unsigned short), void (*)(float), float (*)())
08020340  w    F .init	00000000 exit
0803801c g     F .text	000000b0 _nx_packet_allocate
080201dc  w    F .init	00000000 TIM2_IRQHandler
080201ac g       .vectors	00000000 __vectors_end__
080309c0 g     F .text	00000006 ProgressMonitor::registerUpdateCallback(void (*)(void*), void*)
08030198 g     F .text	00000010 Nest::getStructureHeight()
080248b8 g     F .text	00000102 NAVCOMMS_sendMessage
0803edfc  w    F .text	0000000a __aeabi_atexit
080420b8 g       *ABS*	00000000 __dtors_load_start__
080407f8  w    F .text	00000010 .hidden libunwind::UnwindCursor<libunwind::LocalAddressSpace, libunwind::Registers_arm>::getFunctionName(char*, unsigned int, unsigned int*)
08024ee0 g     F .text	00000040 DIAGNOSTIC_initialize()
08031e18 g     F .text	00000004 TX_USER_thread_started_handler
20002284 g     O .data	00000004 g_xAxis
08030dc8 g     F .text	00000002 BinManager::start()
c0000000 g       *ABS*	00000000 __SDRAM1_segment_end__
0802de74 g     F .text	00000010 IMU_clearIntegratedGyro
0802513c g     F .text	00000002 DIAGNOSTIC_endianSwapReadMotorStatusCommand(COMM_DIAGNOSTIC_readMotorStatus_t*)
08031534 g     F .text	00000222 NVM_write
08030ecc g     F .text	00000026 BinManager::readSensors()
00000000 g       *ABS*	00000000 __stack_process_size__
0802d340 g     F .text	00000004 TIME_getTimeMsec
08030b10 g     F .text	00000004 TorqueMonitor::isFull()
08040808  w    F .text	000004dc .hidden libunwind::UnwindCursor<libunwind::LocalAddressSpace, libunwind::Registers_arm>::getRegisterName(int)
0803e492  w    F .text	00000000 __aeabi_d2f
00000000 g       *ABS*	00000000 __NAND1_segment_size__
0803c560 g     F .text	000000e4 FRAM_write
08037718 g     F .text	0000004c _nx_ip_deferred_link_status_process
0803c01c g     F .text	0000006c USART_ReceiveData
0803c700 g     F .text	00000088 SRAM_read
08020d3c g     F .text	00000018 SYSTEM_registerThread
0802d4d4 g     F .text	000000a4 IMU_PITCHROLL_calculate
0803bac8 g     F .text	00000154 SPI_Init
08032a98 g     F .text	00000054 UPG_MNGR_getItEnterUpgradeMode
200148f8 g       *ABS*	00000000 __stack_process_load_start__
08022f14 g     F .text	00000028 AxisBase::getPosition()
2000243c g     O .data	00000004 g_wheelArticulationAxis_xPosRight
0804b86c g     O .rodata	00000015 bmi270_feat_out
080331a0 g     F .text	00000078 UPG_MNGR_submitTimeStamp
08038e86  w    F .text	00000000 CAN1_SCE_IRQHandler
080233b0 g     F .text	0000002c SingleServoAxis::enableTelemetry(bool, unsigned int)
0802ff3c g     F .text	0000001c HARDWARE_NETWORK_enqueueStandardDiagnosticMessage
080203e4 g       .text	00000000 __init_rodata_end__
0803eb38  w    F .text	00000000 fabsf
08038fe0 g     F .text	000000a4 _tx_event_flags_delete
0803e42e  w    F .text	00000000 __fixunsdfsi
08023060 g     F .text	00000040 MultiServoAxis::MultiServoAxis(char const*, unsigned char, AXIS_config_t*, SingleServoAxis::Config const*, AXIS_motionProfile_t const* const*, unsigned char, SingleServoAxis**, unsigned char, bool (*)(unsigned char, unsigned char, unsigned char*, unsigned short), void (*)(float), float (*)())
08040f44 g     F .text	00000028 unw_get_reg
080201b2  w    F .init	00000000 BusFault_Handler
0802bd3c g     F .text	00000020 TaskManager::TaskManager()
08040778 g     F .text	00000000 .hidden libunwind::Registers_arm::saveVFPWithFSTMD(unsigned long long*)
080201bc  w    F .init	00000000 TAMP_STAMP_IRQHandler
0804048c g     F .text	0000029e _Unwind_VRS_Interpret
20000000 g       .vectors	00000000 __vectors_ram_load_end__
08034d00 g     F .text	0000000c UART2_IRQ_handler
200124cc g     O .bss	00000004 .hidden __dso_handle
08020222  w    F .init	00000000 HASH_RNG_IRQHandler
08021378 g     F .text	00000090 recordFault(SYSTEM_stackState_t*)
080238f0 g     F .text	00000004 SingleStepperAxis::processData(unsigned char, unsigned char*, unsigned short)
08040d24  w    F .text	0000003a .hidden libunwind::UnwindCursor<libunwind::LocalAddressSpace, libunwind::Registers_arm>::jumpto()
1fff0000 g       *ABS*	00000000 __SYSTEM_segment_start__
08032fa0 g     F .text	00000200 UPG_MNGR_confirmAppVersion
08032818 g     F .text	00000044 UPG_COMM_readPacket
08039d40 g     F .text	00000058 _tx_thread_delete
0803b42c g     F .text	00000150 GPIO_Init
20012304 g     O .bss	00000004 _tx_thread_system_stack_ptr
0803f898 g     F .text	00000008 __cxa_get_globals
00000000 g       *ABS*	00000000 __STACKSIZE_UND__
0804103c g     F .text	0000000a unw_save_vfp_as_X
0803a7c4 g     F .text	00000018 _tx_time_get
08040d5e  w    F .text	00000074 .hidden libunwind::UnwindCursor<libunwind::LocalAddressSpace, libunwind::Registers_arm>::step()
80000000 g       *ABS*	00000000 __NAND2_segment_start__
0802020e  w    F .init	00000000 DMA2_Stream6_IRQHandler
0803c2bc g     F .text	0000009e FIFO_addData
0804b89c g     O .rodata	00000080 __RAL_ascii_ctype_map
0803f29c  w    F .text	00000036 strncat
08027808 g     F .text	000000d8 ACTIONS_move(bool, ROBOT_axisIndex_t, float, AXIS_moveType_t, AXIS_mode_t)
0803e500  w    F .text	00000000 __aeabi_dmul
08047be4 g     O .rodata	0000002c vtable for HardwareBinManager
08029210 g     F .text	00000280 MOVEXY_autoWheelCalibration(ROBOT_axisIndex_t, float, float)
0803a080 g     F .text	00000024 _tx_thread_stack_error_handler
08025144 g     F .text	00000002 DIAGNOSTIC_endianSwapPowerMotorCommand(COMM_DIAGNOSTIC_powerMotor_t*)
0802a724 g     F .text	00000058 LAUNCH_runTask(void*, unsigned long, bool)
20012278 g     O .bss	00000004 _tx_thread_mutex_release
20012234 g     O .bss	00000004 _tx_mutex_performance__priority_inheritance_count
0803d2a4 g     F .text	000000ba bmi2_get_feat_config
080238bc g     F .text	00000004 SingleStepperAxis::stop()
2001226c g     O .bss	00000004 _tx_thread_current_ptr
080201b6  w    F .init	00000000 DebugMon_Handler
08022eec g     F .text	00000028 AxisBase::convertToEncoderCounts(float)
200124d0 g     O .bss	00000004 __user_format_extender
080203e4 g       .text	00000000 __init_rodata_load_end__
0803116c g     F .text	00000014 HardwareBinManager::start()
08037508 g     F .text	00000038 _nx_igmp_multicast_check
000001ac g       *ABS*	00000000 __vectors_size__
0803c2b0 g     F .text	0000000c FIFO_initBuffer
0803c088 g     F .text	00000144 USART_ITConfig
0803bf94 g     F .text	00000088 USART_SendData
08038338 g     F .text	000000cc _nx_packet_pool_create
0804efac g       *ABS*	00000000 __tdata_load_start__
0803938c g     F .text	000000a0 _tx_initialize_high_level
0802141c g     F .text	00000020 CLI_init
0803ec30  w    F .text	00000000 sqrtf
200124f4 g       *ABS*	00000000 __non_init_load_start__
08031124 g     F .text	00000024 HardwareBinManager::readNegXNegY()
080400c0 g     F .text	0000000c __cxa_pure_virtual
0803bd18 g     F .text	000001ec USART_Init
20000078 g     O .data	00000004 wheelArtOutPosition
0802f1b4 g     F .text	00000008 CAMERA_getImageQualityInt(CAMERA_imageQuality_t)
08032cb0 g     F .text	0000003c UPG_MNGR_reboot
00000000 g       *ABS*	00000000 __fast_size__
0802fd30 g     F .text	00000028 HARDWARE_NETWORK_dequeueReceivedCCPMessage
a0001000 g       *ABS*	00000000 __FSMC_segment_end__
00080000 g       *ABS*	00000000 __AHB1_segment_size__
0803285c g     F .text	000000fc UPG_MNGR_initManager
0803ed64 g     F .text	00000034 __putc
08038a9c g     F .text	00000098 _nx_udp_socket_create
0802e2cc g     F .text	0000005a UTILITIES_strSplit
0803942c g     F .text	0000003c _tx_initialize_kernel_enter
080420b8 g       .text	00000000 __text_end__
08030f1c g     F .text	00000080 BinManager::processBinState(void*)
08038570 g     F .text	00000054 _nx_system_initialize
0802d344 g     F .text	0000000c TIME_getElapsedTimeMsec
0803082c g     F .text	00000020 CANMNGR_NumMsgSrcPending
080397d8 g     F .text	000000c0 _tx_mutex_prioritize
200128f4 g       .heap	00000000 __heap_end__
20012318 g     O .bss	00000004 _tx_timer_expired_time_slice
0802bcd8 g     F .text	00000010 TaskStatus::TaskStatus(TaskStatus::Result_e, unsigned int)
080233dc g     F .text	0000003c SingleServoAxis::stop()
2001212c g     O .bss	000000bc ETH_InitStructure
10010000 g       *ABS*	00000000 __DATA_SRAM_segment_end__
20012300 g     O .bss	00000004 _tx_thread_priority_maps
08027794 g     F .text	00000074 ACTIONS_homeList(bool, ROBOT_axisIndex_t const*, AXIS_homeType_t*, float*, float*, float*, float*, unsigned char)
0803b1b4 g     F .text	000000cc EXTI_Init
08031a7c g     F .text	00000070 SystemCoreClockUpdate
08031fec g     F .text	000000d4 UPGRADER_enterUpdateMode
00000cb0 g       *ABS*	00000000 __ARM.exidx_size__
08033e6c g     F .text	00000010 STATUSLED_autoUpdateInitialize
08030a88 g     F .text	00000032 TorqueMonitor::update(unsigned char*, unsigned short)
080236c0 g     F .text	00000012 SingleServoAxis::configure()
080203e4 g       .text	00000000 __init_rodata_start__
0804b98c g     O .rodata	00000007 __RAL_c_locale_am_pm_indicator
08039b90 g     F .text	00000000 _tx_thread_context_restore
080407f2  w    F .text	00000006 .hidden libunwind::UnwindCursor<libunwind::LocalAddressSpace, libunwind::Registers_arm>::isSignalFrame()
0804ba9c g     O .rodata	00000009 __RAL_c_locale_time_format
0803e500  w    F .text	00000000 __muldf3
0803cde4 g     F .text	0000006e bmi2_set_adv_power_save
08036054 g     F .text	0000001a ETH_DeInit
20000000 g       .ARM.exidx	00000000 __fast_end__
0802d688 g     F .text	00000010 IMU_CALIB_getPitchRollBias
08020218  w    F .init	00000000 OTG_HS_EP1_IN_IRQHandler
08031204 g     F .text	00000002 operator delete[](void*)
0803087c g     F .text	00000030 Publisher::Publisher()
08029b94 g     F .text	00000074 HOME_runTask(COMM_CCP_home_t*, unsigned long, bool)
0802433c g     F .text	00000038 MCM_send
0802e34c g     F .text	0000005a UTILITIES_popRingBuff
20030000 g       *ABS*	00000000 __SRAM3_segment_end__
08022b08 g     F .text	0000008c Robot::getAxisStatus(ROBOT_axisIndex_t, AXIS_status_t*)
0802cf70 g     F .text	0000000e NO_TASK_respondComplete(void*, unsigned long, bool)
08022910 g     F .text	00000082 LOG_write
080395a8 g     F .text	000000c0 _tx_mutex_delete
20000000 g       .fast_run	00000000 __fast_run_start__
08034c48 g     F .text	00000034 USART_sendCcpUsartData
08023760 g     F .text	00000052 MultiStepperAxis::move(float, AXIS_moveType_t, unsigned char, AXIS_mode_t)
08035878 g     F .text	00000002 CAN1_TX_IRQ_Handler
0802a238 g     F .text	0000004c LOCATE_runTask(void*, unsigned long, bool)
08023da0 g     F .text	00000004 Articulation::operator unsigned int() const
08032eec g     F .text	00000010 UPG_MNGR_setStatusUpgradeDone
0802d228 g     F .text	00000048 BUFFER_PICKPLACE_runTask(void*, unsigned long, bool)
080412b4 g     F .text	00000000 .hidden libunwind::Registers_arm::restoreVFPWithFLDMX(unsigned long long*)
08032a10 g     F .text	00000088 UPG_MNGR_storeDataBlock
08037228 g     F .text	000000e8 _nx_arp_periodic_update
08025084 g     F .text	00000048 DIAGNOSTIC_sendDataMessage(COMM_DIAGNOSTIC_messageId_e, unsigned char*, unsigned short)
08022c78 g     F .text	00000018 Robot::getAxisName(ROBOT_axisIndex_t)
0803ed20 g     F .text	00000044 __RAL_pow10f
00009ce4 g       *ABS*	00000000 __rodata_size__
08027b34 g     F .text	0000001c ACTIONS_powerAllAxis(bool, AXIS_powerState_t)
20012244 g     O .bss	00000004 _tx_mutex_performance_suspension_count
080479e4 g     O .rodata	00000010 vtable for ProgressMonitor
00007a10 g       *ABS*	00000000 __SYSTEM_segment_size__
200124f4 g       .tbss	00000000 __tbss_end__
080367cc g     F .text	00000064 ETH_MACTransmissionCmd
08030b00 g     F .text	00000010 TorqueMonitor::reset()
080350a8 g     F .text	00000084 GPIO_setupExtiInterrupt
080205ac g     F .text	00000404 NETWORK_init
0802f0e8 g     F .text	0000000a CAMERA_activateProfile(CAMERA_configProfile_t)
20011578 g     O .bss	0000004c crc_mutex
08022710 g     F .text	00000006 sramWrite
0803d054 g     F .text	0000016c bmi2_write_config_file
08027eb0 g     F .text	0000006c SM_RUNNER_timeoutCallback
0802ff18 g     F .text	0000000c HARDWARE_NETWORK_initializeDiagnostic
0804072a g     F .text	00000018 _Unwind_GetRegionStart
08036070 g     F .text	0000009c ETH_StructInit
08031758 g     F .text	00000080 NVM_load
08020208  w    F .init	00000000 ETH_WKUP_IRQHandler
08032994 g     F .text	0000000c UPG_MNGR_updateTargetDevicePorts
08030e08 g     F .text	00000028 BinManager::getStateString(BinManager::BinState)
00000000 g       *ABS*	00000000 __SDRAM2_segment_size__
0804b938 g     O .rodata	0000001d __RAL_c_locale_abbrev_day_names
08040f6c g     F .text	0000003c unw_set_reg
20012314 g     O .bss	00000004 _tx_timer_expired
08022b04 g     F .text	00000004 Robot::getStatus()
080275f4 g     F .text	000000b8 ACTIONS_home(bool, ROBOT_axisIndex_t, AXIS_homeType_t, float)
0802fdb8 g     F .text	00000010 HARDWARE_NETWORK_notifyMessagesToSend
08038dfa  w    F .text	00000000 EXTI2_IRQHandler
00002000 g       *ABS*	00000000 __stack_size__
08039468 g     F .text	00000098 _tx_mutex_cleanup
0803bc1c g     F .text	00000018 SPI_StructInit
20012310 g     O .bss	00000004 _tx_timer_current_ptr
08023a84 g     F .text	00000052 SingleStepperAxis::processStatusResponse(COMM_CDM_response_t*)
70000000 g       *ABS*	00000000 __NAND1_segment_end__
0803e2fc g     F .text	0000006c arm_mean_f32
20005510 g     O .bss	00000024 IMU_events
20002440 g     O .data	00000004 g_wheelArticulationAxis_yNegLeft
08040788 g     F .text	00000000 .hidden libunwind::Registers_arm::saveVFPv3(unsigned long long*)
0802020a  w    F .init	00000000 OTG_FS_IRQHandler
0802d578 g     F .text	00000078 IMU_PITCHROLL_computeBias
08028304 g     F .text	0000000e SM_RUNNER_restart
00000000 g     F *ABS*	00000000 __vfscanf
40010000 g       *ABS*	00000000 __APB2_segment_start__
00000000  w      *UND*	00000000 UART5_IRQHandler
08031208 g     F .text	00000090 MEMORY_viewPoolStatistics()
08040fd4 g     F .text	00000030 unw_set_fpreg
08043ea8 g     O .rodata	0000003c vtable for SingleStepperAxis
080226e0 g     F .text	00000030 CLI_dataReadyCallback
0803512c g     F .text	0000000a GPIO_setPins
080262bc g     F .text	00000050 PICK_BIN_runTask(unsigned long, PICK_BIN_config_t, bool)
08022d64 g     F .text	00000004 AxisBase::setCommandExtraStatus(unsigned int)
40020000 g       *ABS*	00000000 __AHB1_segment_start__
0803ecec g     F .text	0000000e __RAL_ascii_wctomb
0803ee30  w    F .text	0000000a isdigit
080201ce  w    F .init	00000000 DMA1_Stream5_IRQHandler
00000000  w      *UND*	00000000 UART8_IRQHandler
200148f8 g       .stack	00000000 __stack_end__
08031180 g     F .text	00000040 HardwareBinManager::HardwareBinManager(void (*)(void*), void*, unsigned short, unsigned int)
00000000 g       *ABS*	00000000 __NOR_PSRAM1_segment_size__
08027af0 g     F .text	00000044 ACTIONS_powerList(bool, ROBOT_axisIndex_t const*, unsigned char, AXIS_powerState_t)
08023b08 g     F .text	00000128 Articulation::toString(Articulation::State_e)
080368e0 g     F .text	00000058 ETH_DMAITConfig
0803ec38  w    F .text	0000004c round(float)
0803f900 g     F .text	00000038 std::terminate()
08023990 g     F .text	0000003e SingleStepperAxis::move(float, AXIS_moveType_t, unsigned char, AXIS_mode_t)
e0100000 g       *ABS*	00000000 __PPB_segment_end__
08030cf8 g     F .text	00000034 BinSensor::BinSensor(BinSensor::State (*)(), void (*)(void*), void*, unsigned short)
08022798 g     F .text	000000f4 DEBUG_logMsg
080400cc  w    F .text	00000008 operator new[](unsigned int)
08036938 g     F .text	00000048 ETH_FlushTransmitFIFO
08039f50 g     F .text	00000060 _tx_thread_sleep
08039898 g     F .text	000000bc _tx_mutex_priority_change
20002434 g     O .data	00000004 g_wheelArticulationAxis_xNegRight
08027a4c g     F .text	000000a4 ACTIONS_power(bool, ROBOT_axisIndex_t, AXIS_powerState_t)
080201e0  w    F .init	00000000 TIM4_IRQHandler
08042114 g       .ctors	00000000 __ctors_load_end__
08038db4  w    F .text	00000000 USART3_IRQHandler
20002504 g       .bss	00000000 __bss_start__
2000f630 g     O .bss	00000010 robot
080230a0 g     F .text	00000016 SingleServoAxis::home(AXIS_homeType_t, float)
08023680 g     F .text	00000040 SingleServoAxis::setTorqueLimits()
08020d14 g     F .text	00000018 SYSTEM_areThreadsRunning
20012260 g     O .bss	00000004 _tx_thread_application_stack_error_handler
08022c90 g     F .text	00000004 Robot::getBusVoltage()
0804caa8 g       .ARM.exidx	00000000 __ARM.exidx_end__
2000245c g     O .data	0000006b _nx_version_id
08040760 g     F .text	00000000 unw_getcontext
08027cc0 g     F .text	0000003a ACTIONS_stopList(bool, ROBOT_axisIndex_t const*, unsigned char)
200124f4 g       .tdata_run	00000000 __tdata_run_start__
2001222c g     O .bss	00000004 _tx_mutex_created_count
08037764 g     F .text	0000000e _nx_ip_driver_deferred_processing
0804baa8 g     O .rodata	00000020 __RAL_codeset_ascii
08036830 g     F .text	00000064 ETH_MACReceptionCmd
00000000  w      *UND*	00000000 UART7_IRQHandler
0803f828 g     F .text	00000070 __cxa_begin_catch
0803a040 g     F .text	00000000 _tx_thread_stack_build
0803ec30  w    F .text	00000000 sqrt(float)
08030d70 g     F .text	00000056 BinSensor::reset()
64000000 g       *ABS*	00000000 __NOR_PSRAM2_segment_start__
0803e368  w    F .text	00000000 __uint32_to_float64
08031100 g     F .text	00000024 HardwareBinManager::readNegXPosY()
c0000000 g       *ABS*	00000000 __SDRAM1_segment_start__
20002438 g     O .data	00000004 g_wheelArticulationAxis_xPosLeft
0804b9ec g     O .rodata	00000009 __RAL_c_locale_date_format
08030a68 g     F .text	00000006 AxisTelemetryMonitor::resetOnUpdate()
0802bfd4 g     F .text	00000004 TaskManager::getLastTask()
08022720 g     F .text	00000050 DEBUG_init
08000000 g       *ABS*	00000000 __FLASH_segment_start__
200148f8 g       .stack	00000000 __stack_load_end__
00008000 g       *ABS*	00000000 __APB1_segment_size__
080201d8  w    F .init	00000000 TIM1_TRG_COM_TIM11_IRQHandler
0802fd08 g     F .text	0000001c HARDWARE_NETWORK_enqueueReceivedCCPMessage
0802d324 g     F .text	0000001c TIME_disableTimer
08034e34 g     F .text	0000000c HWM_getRandomNum
08020214  w    F .init	00000000 I2C3_ER_IRQHandler
080201ac  w    F .init	00000000 NMI_Handler
08036c50 g     F .text	000000a0 _nx_arp_enable
080230c8 g     F .text	0000001c SingleServoAxis::getStatus()
2000f4d8 g     O .bss	000000e4 binManager
08039bf8 g     F .text	00000148 _tx_thread_create
08022fbc g     F .text	0000000a AxisBase::updateDynamicMechanicalRatio(float)
0802a460 g     F .text	0000007c PRELAUNCH_runTask(void*, unsigned long, bool)
00000000 g       *ABS*	00000000 __vectors_ram_size__
08023fe8 g     F .text	00000038 CCP_sendPriorityMessage
08032c50 g     F .text	00000060 UPG_MNGR_activateNewImage
08035154 g     F .text	00000024 EXTI0_IRQ_Handler
0804efac g       *ABS*	00000000 __FLASH_segment_used_end__
0802eb14 g     F .text	00000014 CAMERA_isDataAvailable()
00060c00 g       *ABS*	00000000 __AHB2_segment_size__
080201ac g       .init	00000000 __init_start__
0802ff64 g     F .text	0000001c HARDWARE_NETWORK_enqueueReceivedDiagnosticMessage
200024c8 g     O .data	00000004 _tx_thread_system_state
0803f5e6  w    F .text	0000001c vsnprintf
08040e76  w    F .text	00000068 .hidden libunwind::UnwindCursor<libunwind::LocalAddressSpace, libunwind::Registers_arm>::getFloatReg(int)
20002444 g     O .data	00000004 g_wheelArticulationAxis_yNegRight
08022ab4 g     F .text	00000006 Robot::getArticulation()
08200000 g       *ABS*	00000000 __FLASH_segment_end__
0802f090 g     F .text	0000000c CAMERA_stop()
0802432c g     F .text	00000010 MCM_init
0803e66c  w    F .text	00000000 __float64_div
20000000 g       .vectors	00000000 __vectors_ram_end__
08034d24 g     F .text	0000000c UART6_IRQ_handler
0803edd8  w    F .text	00000024 atexit
200123a0 g     O .bss	00000004 _tx_timer_list_end
080201d4  w    F .init	00000000 TIM1_BRK_TIM9_IRQHandler
08022d5c g     F .text	00000004 AxisBase::getID()
0802eb34 g     F .text	000001d0 CAMERA_processRxEvent()
0803ee80  w    F .text	00000014 tolower
20000000 g       .fast_run	00000000 __fast_run_end__
080243c4 g     F .text	00000060 MCM_processMessage
0803b848 g     F .text	000000b4 GPIO_PinAFConfig
080321ac g     F .text	00000164 UPG_COMM_sendPacket
080230b8 g     F .text	00000010 SingleServoAxis::isOvertorque()
08035908 g     F .text	0000002c CAN2_RX1_IRQ_Handler
200024ec g     O .data	00000014 __RAL_global_locale
200128f8 g       .stack	00000000 __stack_start__
20002294 g     O .data	00000004 g_z8Axis
080382c8 g     F .text	00000070 _nx_packet_pool_cleanup
00100000 g       *ABS*	00000000 __PPB_segment_size__
080309dc g     F .text	0000005e AxisTelemetryMonitor::update(unsigned char*, unsigned short)
08030a3c g     F .text	00000018 AxisTelemetryMonitor::AxisTelemetryMonitor()
08031180 g     F .text	00000040 HardwareBinManager::HardwareBinManager(void (*)(void*), void*, unsigned short, unsigned int)
080238ac g     F .text	00000010 SingleStepperAxis::move(float, AXIS_moveType_t, unsigned char, float, float, float)
d0000000 g       *ABS*	00000000 __SDRAM2_segment_start__
0803b650 g     F .text	00000084 GPIO_SetBits
08031a04 g     F .text	00000028 AWARENESS_getAlarmData(IMU_unsolictedAlarm_t)
0802c36c g     F .text	00000094 UPGRADER_runTaskCcpCmdStartUpgrade(void*, unsigned long, bool)
08024f7c g     F .text	00000108 DIAGNOSTIC_processCommandMessage()
08025140 g     F .text	00000002 DIAGNOSTIC_endianSwapResetMotorCommand(COMM_DIAGNOSTIC_resetMotor_t*)
08022d74 g     F .text	0000016c AxisBase::estimateMoveTime(float, unsigned char, AXIS_mode_t)
080307b0 g     F .text	0000007c CANMNGR_readMsgSrc
08032aec g     F .text	00000080 UPG_MNGR_sendMetaData
08023440 g     F .text	00000034 SingleServoAxis::SingleServoAxis(char const*, unsigned char, AXIS_config_t*, SingleServoAxis::Config const*, AXIS_motionProfile_t const* const*, unsigned char, bool (*)(unsigned char, unsigned char, unsigned char*, unsigned short), void (*)(float), float (*)())
080346d4  w    F .text	00000030 HardwareBinManager::~HardwareBinManager()
08038e08  w    F .text	00000000 EXTI3_IRQHandler
0802fe14 g     F .text	0000000c HARDWARE_NETWORK_sendMCMMessage
080412c4 g     F .text	00000df4 __vfprintf_short_float_long
20000000 g       .data	00000000 __data_start__
080201e8  w    F .init	00000000 I2C2_ER_IRQHandler
08039084 g     F .text	000000f4 _tx_event_flags_get
200124e8 g     O .bss	00000004 __cxa_unexpected_handler
20000000 g       *ABS*	00000000 __vectors_ram_load_start__
20003d0c g     O .bss	0000004c debug_mutex
0804bcdc  w    O .rodata	00000048 .hidden vtable for libunwind::UnwindCursor<libunwind::LocalAddressSpace, libunwind::Registers_arm>
08024d34 g     F .text	00000150 BSB_updateFwVersion
0803c644 g     F .text	000000bc FRAM_writeTest
0803ee1c  w    F .text	0000000a isupper
200024dc g     O .data	00000010 bmi270_map_int
080257e4 g     F .text	00000010 ANTCTRL_getLastTaskId
08038eb0  w    F .text	00000000 CAN2_RX0_IRQHandler
080407d6  w    F .text	0000001c .hidden libunwind::UnwindCursor<libunwind::LocalAddressSpace, libunwind::Registers_arm>::getInfo(unw_proc_info_t*)
0804bad0 g     O .rodata	00000010 __RAL_hex_lc
20012214 g     O .bss	00000004 _tx_block_pool_created_ptr
0802862c g     F .text	00000048 ATTIC_EXIT_runTask(unsigned long, ATTIC_EXIT_stage_t, bool)
20004a48 g     O .bss	000000b4 ANTCTRL_thread
20012208 g     O .bss	00000004 _nx_system_build_options_4
0803ee08 g     F .text	00000014 __RAL_isctype
08024e84 g     F .text	0000005a BSB_processMessage
08038f08 g     F .text	00000088 _tx_event_flags_cleanup
0802d2cc g     F .text	00000058 TIME_setTimeout
2001220c g     O .bss	00000004 _nx_system_build_options_5
00000000 g       *ABS*	00000000 __STACKSIZE_PROCESS__
08021408 g     F .text	00000014 SYSTEM_stackFaultHandler
0803ee94  w    F .text	00000014 toupper
08030a70  w    F .text	00000016 int algorithms::helpers::sort_descending<int>(void const*, void const*)
080238a0 g     F .text	00000004 SingleStepperAxis::enableTelemetry(bool, unsigned int)
08030a5c g     F .text	0000000c AxisTelemetryMonitor::setEncoderCount(int)
20002504 g       .data	00000000 __data_end__
08020d2c g     F .text	00000010 SYSTEM_setThreadFlag
0803ce54 g     F .text	000000fc bmi2_set_int_pin_config
0802e2ac g     F .text	00000020 IMU_DRIVER_resume
08024280 g     F .text	0000007c CCP_pushMirrorData
08020202  w    F .init	00000000 DMA2_Stream2_IRQHandler
2001230c g     O .bss	00000004 _tx_timer_created_ptr
080358dc g     F .text	0000002c CAN2_RX0_IRQ_Handler
08043e30 g     O .rodata	0000003c vtable for SingleServoAxis
200148f8 g       .stack_process	00000000 __stack_process_end__
0803cf74 g     F .text	000000a4 bmi2_map_data_int
08022f6c g     F .text	00000040 AxisBase::getMotionProfile(unsigned char, AXIS_mode_t)
0803f5c6  w    F .text	00000020 atoi
0804efac g       *ABS*	00000000 __data_load_end__
000148f8 g       *ABS*	00000000 __RAM_segment_used_size__
08030104 g     F .text	0000000a Nest::setAtticOffset(float)
08020200  w    F .init	00000000 DMA2_Stream1_IRQHandler
080203e4 g       *ABS*	00000000 __text_load_start__
08041254  w    F .text	00000048 .hidden libunwind::UnwindCursor<libunwind::LocalAddressSpace, libunwind::Registers_arm>::setInfoBasedOnIPRegister(bool)
80000000 g       *ABS*	00000000 __NAND2_segment_end__
00002504 g       *ABS*	00000000 __data_size__
0803e66c  w    F .text	00000000 __divdf3
080312b0 g     F .text	000000b4 NVM_format
08025364 g     F .text	000000f4 COMM_packNetworkMsg
08023030 g     F .text	00000030 MultiServoAxis::configure()
0802d350 g     F .text	00000016 SOFTWARE_TIMER_initialize
0803a7dc g     F .text	00000084 _tx_timer_create
08030014 g     F .text	0000001c Nest::Nest(float, float (*)(), float (*)())
08037774 g     F .text	00000014 _nx_ip_initialize
080301a8 g     F .text	000000f0 Nest::getAtticPositions()
0804bdf8 g       .rodata	00000000 __rodata_end__
08039efc g     F .text	00000054 _tx_thread_shell_entry
08027118 g     F .text	00000054 PLACE_BIN_runTask(unsigned long, PLACE_BIN_config_t, bool)
08022fdc g     F .text	00000052 MultiServoAxis::getStatus()
08020224  w    F .init	00000000 FPU_IRQHandler
0803bca4 g     F .text	00000054 SYSCFG_EXTILineConfig
2000261c g     O .bss	000007a8 nx_ip0
0802021e  w    F .init	00000000 DCMI_IRQHandler
2000a314 g     O .bss	000000b4 CANMNGR_thread
2001c000 g       *ABS*	00000000 __SRAM2_segment_start__
0802bd60 g     F .text	0000025c TaskManager::startTask(COMM_source_t, unsigned char, unsigned char*, unsigned short, Articulation::State_e, unsigned char)
080346d4  w    F .text	00000030 HardwareBinManager::~HardwareBinManager()
08034d0c g     F .text	0000000c UART3_IRQ_handler
08047b98 g     O .rodata	0000002c vtable for BinManager
08022d6c g     F .text	00000006 AxisBase::getMechanicalRatio()
08030110 g     F .text	00000088 Nest::getShelfHeight(unsigned char)
0804bacc g     O .rodata	00000002 __RAL_data_utf8_period
08038ebe  w    F .text	00000000 CAN2_RX1_IRQHandler
08035178 g     F .text	00000024 EXTI1_IRQ_Handler
08037d80 g     F .text	00000094 _nx_ip_route_find
0802f43c g     F .text	000002d8 MessageManager::popReceivedMessage(unsigned char*, unsigned short, unsigned short*)
080201e2  w    F .init	00000000 I2C1_EV_IRQHandler
2000e482 g     O .bss	00000001 STATUSLED_lowPower
080201da  w    F .init	00000000 TIM1_CC_IRQHandler
0803b6d4 g     F .text	00000084 GPIO_ResetBits
0803aa88 g     F .text	00000054 _tx_timer_system_activate
0802c160 g     F .text	00000058 POWERMODE_runTask(void*, unsigned long, bool)
200148f8 g       .stack_process	00000000 __stack_process_start__
080402f4 g     F .text	0000006a _Unwind_VRS_Get
00010000 g       *ABS*	00000000 __DATA_SRAM_segment_size__
00000000 g       *ABS*	00000000 __NOR_PSRAM2_segment_size__
0803ad74 g     F .text	00000154 CAN_FilterInit
0803e3aa  w    F .text	00000000 __int64_to_float32_common
0803ebf4  w    F .text	00000000 frexpf
080401de g     F .text	00000024 _Unwind_Resume
08034c10 g     F .text	00000038 USART_send
20020000 g       *ABS*	00000000 __SRAM3_segment_start__
0802bcf8 g     F .text	00000012 TaskStatus::operator=(TaskStatus const&)
0803ee76  w    F .text	0000000a isspace
08035838 g     F .text	00000040 CAN_readMessage
20003d5c g     O .bss	00000068 sramLogBuffer
08038e5c  w    F .text	00000000 SPI3_IRQHandler
08031b34 g     F .text	000002e4 tx_application_define
0803f390  w    F .text	00000190 strtof
08030dcc g     F .text	00000006 BinManager::getBinState()
080420b8 g       .ctors	00000000 __dtors_load_end__
08025264 g     F .text	00000100 COMM_unpackNetworkMsg
200123ac g     O .bss	00000004 _tx_timer_system_clock
080201b4  w    F .init	00000000 UsageFault_Handler
08023c30 g     F .text	000000f0 Articulation::transition(Articulation::State_e)
0802d270 g     F .text	0000005c TIME_enterThread
0803bcf8 g     F .text	00000020 SYSCFG_ETH_MediaInterfaceConfig
00000000 g       *ABS*	00000000 __SDRAM1_segment_size__
200124ed g       .bss	00000000 __bss_end__
0803e500  w    F .text	00000000 __float64_mul
08035520 g     F .text	00000002 SPI3_IRQ_handler
0000005c g       *ABS*	00000000 __ctors_size__
080251cc g     F .text	0000002a DIAGNOSTIC_endianSwapEnableMotorAsyncDataCommand(COMM_DIAGNOSTIC_enableMotorAsyncData_t*)
0803f8a8 g     F .text	00000020 std::get_terminate()
08034d30 g     F .text	000000d4 HWM_pwrp
080230e4 g     F .text	00000114 SingleServoAxis::processResponse(unsigned char, unsigned char*, unsigned short)
0802f000 g     F .text	0000000c CAMERA_isImageRequested()
0802021c  w    F .init	00000000 OTG_HS_IRQHandler
0802b4d0 g     F .text	00000128 TORQUE_SHARING_getSecondaryAxisHomingTorque(ROBOT_axisIndex_t)
080201ca  w    F .init	00000000 DMA1_Stream3_IRQHandler
20002450 g     O .data	00000004 gBinManager
080319e0 g     F .text	00000020 AWARENESS_submitAlarmData(IMU_unsolictedAlarm_t, IMU_f_xyz_t*, unsigned int)
08038efc  w      .text	00000000 __aeabi_read_tp
20003610 g     O .bss	00000024 SYSTEM_threadsRunningEvent
0803ebf4  w    F .text	00000000 frexp(float, int*)
a0000000 g       *ABS*	00000000 __FSMC_segment_start__
08022ba4 g     F .text	0000000a Robot::getAxisMechanicalRatio(ROBOT_axisIndex_t)
08020228  w    F .init	00000000 SPI5_IRQHandler
20012400 g     O .bss	0000004c sram_mutex
0804efac g       *ABS*	00000000 __tdata_load_end__
080201fc  w    F .init	00000000 TIM7_IRQHandler
20012248 g     O .bss	00000004 _tx_mutex_performance_timeout_count
d0000000 g       *ABS*	00000000 __SDRAM2_segment_end__
0802e3a8 g     F .text	00000048 UTILITIES_pushRingBuff
08023da4 g     F .text	000001c8 CCP_init
080251fc g     F .text	00000002 DIAGNOSTIC_endianSwapReadSensorStateCommand(COMM_DIAGNOSTIC_getSensorState_t*)
0803f76c g     F .text	00000000 __cxa_end_cleanup
00010000 g       *ABS*	00000000 __SRAM3_segment_size__
08022c94 g     F .text	00000014 Robot::estimateMoveTime(ROBOT_axisIndex_t, float, AXIS_mode_t)
080201b0  w    F .init	00000000 MemManage_Handler
08041048  w    F .text	0000020c .hidden libunwind::UnwindCursor<libunwind::LocalAddressSpace, libunwind::Registers_arm>::getInfoFromEHABISection(unsigned int, libunwind::UnwindInfoSections const&)
08038dde  w    F .text	00000000 EXTI0_IRQHandler
08032b6c g     F .text	0000008c UPG_MNGR_sendDataBlock
08027b50 g     F .text	000000a0 ACTIONS_reset(bool, ROBOT_axisIndex_t)
0803cf50 g     F .text	00000022 bmi2_get_status
1fffc008 g       *ABS*	00000000 __OPTION_segment_end__
0802e168 g     F .text	0000012c IMU_DRIVER_init
08030f9c g     F .text	0000010c BinManager::BinManager(BinSensor::State (*)(), BinSensor::State (*)(), BinSensor::State (*)(), BinSensor::State (*)(), void (*)(void*), void*, unsigned short)
0803b314 g     F .text	000000ac FLASH_EraseSector
0803f602  w    F .text	00000000 memcpy
0802d3a0 g     F .text	0000002a SOFTWARE_TIMER_setTimeout
2000355c g     O .bss	000000b4 SYSTEM_thread
0803d65c g     F .text	00000044 bmi2_get_gyro_cross_sense
200128f4 g       .heap	00000000 __heap_load_end__
0804caa8 g       *ABS*	00000000 __fast_load_end__
080317d8 g     F .text	0000005c NVM_viewStats
08030b54 g     F .text	00000108 TorqueMonitor::sumTorqueAboveAverageThreshold(int)
08024bb0 g     F .text	000000c8 BSB_getFwVersion
20002454 g     O .data	00000006 _nx_driver_hardware_address
200124f4 g       .tdata_run	00000000 __tdata_start__
080209b0 g     F .text	00000148 NETWORK_writeUdp
08022b94 g     F .text	00000010 Robot::updateStatus(ROBOT_status_t)
20012254 g     O .bss	00000004 _tx_semaphore_created_count
20002500 g     O .data	00000004 __RAL_rand_next
08032ecc g     F .text	00000010 UPG_MNGR_setStatusMetaDataSent
0803e38a  w    F .text	00000000 __aeabi_l2f
20030000 g       *ABS*	00000000 __RAM_segment_end__
0802f09c g     F .text	00000030 CAMERA_setPixelCenterOffsets(int, int)
080377c0 g     F .text	00000042 _nx_ip_packet_deferred_receive
080201ea  w    F .init	00000000 RTC_Alarm_IRQHandler
0803a16c g     F .text	000001f0 _tx_thread_system_resume
0803e8b4  w    F .text	00000130 atanf
0802fe20 g     F .text	0000000c HARDWARE_NETWORK_getNumMCMMessagesToSend
20012228 g     O .bss	00000004 _tx_initialize_unused_memory
0803587c g     F .text	00000002 CAN2_TX_IRQ_Handler
0803d9f4 g     F .text	0000003a bmi2_extract_input_feat_config
0803f708  w    F .text	00000000 strlen
080273f4 g     F .text	000000a0 PLACE_BIN_RETRIES_runTask(PLACE_BIN_RETRIES_type_t, unsigned long, PLACE_BIN_config_t*, bool)
080313c0 g     F .text	00000098 NVM_createEntry
2000373c g     O .bss	000000b4 CLI_thread
0803aba8 g     F .text	000001cc CAN_Init
08039ec6 g     F .text	00000000 tx_thread_fpu_enable
0804caa8 g       *ABS*	00000000 __data_load_start__
08038e16  w    F .text	00000000 EXTI4_IRQHandler
40018000 g       *ABS*	00000000 __APB2_segment_end__
08038ea2  w    F .text	00000000 CAN1_RX1_IRQHandler
08038958 g     F .text	00000144 _nx_udp_socket_bind
08034c88 g     F .text	00000078 UART1_IRQ_handler
e0042000 g       *ABS*	00000000 __DBG_segment_start__
20000000 g       .data_run	00000000 __data_run_start__
0803f520  w    F .text	000000a6 strtol
080368c0 g     F .text	00000010 ETH_SoftwareReset
0803edb4 g     F .text	0000001a __RAL_pre_padding
0803bc34 g     F .text	00000070 SPI_Cmd
080241b4 g     F .text	00000014 CCP_getMirrorData
0803e492  w    F .text	00000000 __truncdfsf2
08030994 g     F .text	0000000a ProgressMonitor::update(unsigned char*, unsigned short)
0804102c g     F .text	00000010 unw_resume
0802bfbc g     F .text	00000012 TaskManager::runTask(unsigned int)
0803714c g     F .text	000000dc _nx_arp_packet_send
0803c9c0 g     F .text	00000018 COMM_BOOT_getErrorMsg
0803ebac  w    F .text	00000000 ldexp(float, int)
080251c8 g     F .text	00000002 DIAGNOSTIC_endianSwapStopMotorCommand(COMM_DIAGNOSTIC_stopMotor_t*)
2000de14 g     O .bss	00000344 framManager
0803e41e  w    F .text	00000000 __uint64_to_float32
0803ea3c  w    F .text	000000fc fmod(float, float)
08023474 g     F .text	00000046 SingleServoAxis::executeCommand(unsigned char, unsigned char*, unsigned short)
08022788 g     F .text	00000010 DEBUG_subtaskSend
20005208 g     O .bss	000000b4 TIME_thread
08030ae8 g     F .text	00000018 TorqueMonitor::~TorqueMonitor()
08038ecc  w    F .text	00000000 CAN2_SCE_IRQHandler
0803f76a  w    F .text	00000002 __printf_unlock
0803084c g     F .text	0000002c STO_setState
080242fc g     F .text	00000030 CCP_handleDataRequest
20002504 g     O .bss	00000024 NETWORK_events
080238c0 g     F .text	00000004 SingleStepperAxis::power(AXIS_powerState_t)
68000000 g       *ABS*	00000000 __NOR_PSRAM3_segment_start__
080369b0 g     F .text	0000003c ETH_DMATransmissionCmd
0803f8c8 g     F .text	0000001c .hidden std::__terminate(void (*)())
00000000 g       *ABS*	00000000 __tdata_run_size__
080310dc g     F .text	00000024 HardwareBinManager::readPosXPosY()
2000a2f0 g     O .bss	00000024 CANMNGR_events
200124f4 g       .tbss	00000000 __tbss_load_end__
64000000 g       *ABS*	00000000 __NOR_PSRAM2_segment_end__
08022bb0 g     F .text	00000034 Robot::getAxisIndex(unsigned char)
20004660 g     O .bss	0000004c ccpLogBufferLock
08024b60 g     F .text	00000050 BSB_sendDevMulticast
08033218 g     F .text	00000b60 UPG_MNGR_printOutStatistics
20009e98 g     O .bss	00000024 HARDWARE_NETWORK_eventFlags
08039954 g     F .text	0000023c _tx_mutex_put
0803ecfa g     F .text	00000024 __RAL_ascii_mbtowc
2000e158 g     O .bss	00000024 AWARENESS_events
08022d68 g     F .text	00000004 AxisBase::getName()
0802e8d0 g     F .text	00000238 CAMERA_init()
0802fe7c g     F .text	00000028 HARDWARE_NETWORK_dequeueReceivedMCMMessage
080412ac g     F .text	00000000 .hidden libunwind::Registers_arm::restoreVFPWithFLDMD(unsigned long long*)
0802f27c g     F .text	00000134 MessageManager::MessageManager(char const*, COMM_endianOrder_e, void (*)(unsigned char*, unsigned short), void (*)(), void (*)(), void (*)(), unsigned short, unsigned int, unsigned long long)
0802c744 g     F .text	00000098 SET_CONFIG_runTask(void*, unsigned long, bool)
0803e45a  w    F .text	00000000 __float32_to_float64
0804b838 g     O .rodata	00000033 bmi270_feat_in
200121f8 g     O .bss	00000004 _nx_packet_pool_created_ptr
20002364 g     O .data	00000004 g_pickarmAxis
08023b00 g     F .text	00000004 Articulation::Articulation(Articulation::State_e)
00200000 g       *ABS*	00000000 __FLASH_segment_size__
08036894 g     F .text	0000002c ETH_MACAddressConfig
0803e41e  w    F .text	00000000 __aeabi_ul2f
0802bce8 g     F .text	00000010 TaskStatus::TaskStatus(TaskStatus const&)
08031364 g     F .text	0000005c NVM_init



Disassembly of section .vectors:

08020000 <__vectors_start__>:
 8020000:	200148f8 	.word	0x200148f8
 8020004:	08020235 	.word	0x08020235
 8020008:	080201ad 	.word	0x080201ad
 802000c:	080201af 	.word	0x080201af
 8020010:	080201b1 	.word	0x080201b1
 8020014:	080201b3 	.word	0x080201b3
 8020018:	080201b5 	.word	0x080201b5
	...
 802002c:	08039e29 	.word	0x08039e29
 8020030:	080201b7 	.word	0x080201b7
 8020034:	00000000 	.word	0x00000000
 8020038:	08039e29 	.word	0x08039e29
 802003c:	08038d7d 	.word	0x08038d7d
 8020040:	080201b9 	.word	0x080201b9
 8020044:	080201bb 	.word	0x080201bb
 8020048:	080201bd 	.word	0x080201bd
 802004c:	080201bf 	.word	0x080201bf
 8020050:	080201c1 	.word	0x080201c1
 8020054:	080201c3 	.word	0x080201c3
 8020058:	08038ddf 	.word	0x08038ddf
 802005c:	08038ded 	.word	0x08038ded
 8020060:	08038dfb 	.word	0x08038dfb
 8020064:	08038e09 	.word	0x08038e09
 8020068:	08038e17 	.word	0x08038e17
 802006c:	080201c5 	.word	0x080201c5
 8020070:	080201c7 	.word	0x080201c7
 8020074:	080201c9 	.word	0x080201c9
 8020078:	080201cb 	.word	0x080201cb
 802007c:	080201cd 	.word	0x080201cd
 8020080:	080201cf 	.word	0x080201cf
 8020084:	080201d1 	.word	0x080201d1
 8020088:	080201d3 	.word	0x080201d3
 802008c:	08038e6b 	.word	0x08038e6b
 8020090:	08038e79 	.word	0x08038e79
 8020094:	08038ea3 	.word	0x08038ea3
 8020098:	08038e87 	.word	0x08038e87
 802009c:	08038e25 	.word	0x08038e25
 80200a0:	080201d5 	.word	0x080201d5
 80200a4:	080201d7 	.word	0x080201d7
 80200a8:	080201d9 	.word	0x080201d9
 80200ac:	080201db 	.word	0x080201db
 80200b0:	080201dd 	.word	0x080201dd
 80200b4:	080201df 	.word	0x080201df
 80200b8:	080201e1 	.word	0x080201e1
 80200bc:	080201e3 	.word	0x080201e3
 80200c0:	080201e5 	.word	0x080201e5
 80200c4:	080201e7 	.word	0x080201e7
 80200c8:	080201e9 	.word	0x080201e9
 80200cc:	08038e41 	.word	0x08038e41
 80200d0:	08038e4f 	.word	0x08038e4f
 80200d4:	08038d99 	.word	0x08038d99
 80200d8:	08038da7 	.word	0x08038da7
 80200dc:	08038db5 	.word	0x08038db5
 80200e0:	08038e33 	.word	0x08038e33
 80200e4:	080201eb 	.word	0x080201eb
 80200e8:	080201ed 	.word	0x080201ed
 80200ec:	080201ef 	.word	0x080201ef
 80200f0:	080201f1 	.word	0x080201f1
 80200f4:	080201f3 	.word	0x080201f3
 80200f8:	080201f5 	.word	0x080201f5
 80200fc:	00000000 	.word	0x00000000
 8020100:	080201f7 	.word	0x080201f7
 8020104:	080201f9 	.word	0x080201f9
 8020108:	080201fb 	.word	0x080201fb
 802010c:	08038e5d 	.word	0x08038e5d
 8020110:	08038dc3 	.word	0x08038dc3
	...
 802011c:	080201fd 	.word	0x080201fd
 8020120:	080201ff 	.word	0x080201ff
 8020124:	08020201 	.word	0x08020201
 8020128:	08020203 	.word	0x08020203
 802012c:	08020205 	.word	0x08020205
 8020130:	08020207 	.word	0x08020207
 8020134:	08038d8b 	.word	0x08038d8b
 8020138:	08020209 	.word	0x08020209
 802013c:	08038e95 	.word	0x08038e95
 8020140:	08038eb1 	.word	0x08038eb1
 8020144:	08038ebf 	.word	0x08038ebf
 8020148:	08038ecd 	.word	0x08038ecd
 802014c:	0802020b 	.word	0x0802020b
 8020150:	0802020d 	.word	0x0802020d
 8020154:	0802020f 	.word	0x0802020f
 8020158:	08020211 	.word	0x08020211
 802015c:	08038dd1 	.word	0x08038dd1
 8020160:	08020213 	.word	0x08020213
 8020164:	08020215 	.word	0x08020215
 8020168:	08020217 	.word	0x08020217
 802016c:	08020219 	.word	0x08020219
 8020170:	0802021b 	.word	0x0802021b
 8020174:	0802021d 	.word	0x0802021d
 8020178:	0802021f 	.word	0x0802021f
 802017c:	08020221 	.word	0x08020221
 8020180:	08020223 	.word	0x08020223
 8020184:	08020225 	.word	0x08020225
	...
 8020190:	08020227 	.word	0x08020227
 8020194:	08020229 	.word	0x08020229
 8020198:	0802022b 	.word	0x0802022b
 802019c:	0802022d 	.word	0x0802022d
 80201a0:	0802022f 	.word	0x0802022f
 80201a4:	08020231 	.word	0x08020231
 80201a8:	08020233 	.word	0x08020233

Disassembly of section .init:

080201ac <NMI_Handler>:
 80201ac:	e7fe      	b.n	80201ac <NMI_Handler>

080201ae <HardFault_Handler>:
 80201ae:	e7fe      	b.n	80201ae <HardFault_Handler>

080201b0 <MemManage_Handler>:
 80201b0:	e7fe      	b.n	80201b0 <MemManage_Handler>

080201b2 <BusFault_Handler>:
 80201b2:	e7fe      	b.n	80201b2 <BusFault_Handler>

080201b4 <UsageFault_Handler>:
 80201b4:	e7fe      	b.n	80201b4 <UsageFault_Handler>

080201b6 <DebugMon_Handler>:
 80201b6:	e7fe      	b.n	80201b6 <DebugMon_Handler>

080201b8 <WWDG_IRQHandler>:
 80201b8:	e7fe      	b.n	80201b8 <WWDG_IRQHandler>

080201ba <PVD_IRQHandler>:
 80201ba:	e7fe      	b.n	80201ba <PVD_IRQHandler>

080201bc <TAMP_STAMP_IRQHandler>:
 80201bc:	e7fe      	b.n	80201bc <TAMP_STAMP_IRQHandler>

080201be <RTC_WKUP_IRQHandler>:
 80201be:	e7fe      	b.n	80201be <RTC_WKUP_IRQHandler>

080201c0 <FLASH_IRQHandler>:
 80201c0:	e7fe      	b.n	80201c0 <FLASH_IRQHandler>

080201c2 <RCC_IRQHandler>:
 80201c2:	e7fe      	b.n	80201c2 <RCC_IRQHandler>

080201c4 <DMA1_Stream0_IRQHandler>:
 80201c4:	e7fe      	b.n	80201c4 <DMA1_Stream0_IRQHandler>

080201c6 <DMA1_Stream1_IRQHandler>:
 80201c6:	e7fe      	b.n	80201c6 <DMA1_Stream1_IRQHandler>

080201c8 <DMA1_Stream2_IRQHandler>:
 80201c8:	e7fe      	b.n	80201c8 <DMA1_Stream2_IRQHandler>

080201ca <DMA1_Stream3_IRQHandler>:
 80201ca:	e7fe      	b.n	80201ca <DMA1_Stream3_IRQHandler>

080201cc <DMA1_Stream4_IRQHandler>:
 80201cc:	e7fe      	b.n	80201cc <DMA1_Stream4_IRQHandler>

080201ce <DMA1_Stream5_IRQHandler>:
 80201ce:	e7fe      	b.n	80201ce <DMA1_Stream5_IRQHandler>

080201d0 <DMA1_Stream6_IRQHandler>:
 80201d0:	e7fe      	b.n	80201d0 <DMA1_Stream6_IRQHandler>

080201d2 <ADC_IRQHandler>:
 80201d2:	e7fe      	b.n	80201d2 <ADC_IRQHandler>

080201d4 <TIM1_BRK_TIM9_IRQHandler>:
 80201d4:	e7fe      	b.n	80201d4 <TIM1_BRK_TIM9_IRQHandler>

080201d6 <TIM1_UP_TIM10_IRQHandler>:
 80201d6:	e7fe      	b.n	80201d6 <TIM1_UP_TIM10_IRQHandler>

080201d8 <TIM1_TRG_COM_TIM11_IRQHandler>:
 80201d8:	e7fe      	b.n	80201d8 <TIM1_TRG_COM_TIM11_IRQHandler>

080201da <TIM1_CC_IRQHandler>:
 80201da:	e7fe      	b.n	80201da <TIM1_CC_IRQHandler>

080201dc <TIM2_IRQHandler>:
 80201dc:	e7fe      	b.n	80201dc <TIM2_IRQHandler>

080201de <TIM3_IRQHandler>:
 80201de:	e7fe      	b.n	80201de <TIM3_IRQHandler>

080201e0 <TIM4_IRQHandler>:
 80201e0:	e7fe      	b.n	80201e0 <TIM4_IRQHandler>

080201e2 <I2C1_EV_IRQHandler>:
 80201e2:	e7fe      	b.n	80201e2 <I2C1_EV_IRQHandler>

080201e4 <I2C1_ER_IRQHandler>:
 80201e4:	e7fe      	b.n	80201e4 <I2C1_ER_IRQHandler>

080201e6 <I2C2_EV_IRQHandler>:
 80201e6:	e7fe      	b.n	80201e6 <I2C2_EV_IRQHandler>

080201e8 <I2C2_ER_IRQHandler>:
 80201e8:	e7fe      	b.n	80201e8 <I2C2_ER_IRQHandler>

080201ea <RTC_Alarm_IRQHandler>:
 80201ea:	e7fe      	b.n	80201ea <RTC_Alarm_IRQHandler>

080201ec <OTG_FS_WKUP_IRQHandler>:
 80201ec:	e7fe      	b.n	80201ec <OTG_FS_WKUP_IRQHandler>

080201ee <TIM8_BRK_TIM12_IRQHandler>:
 80201ee:	e7fe      	b.n	80201ee <TIM8_BRK_TIM12_IRQHandler>

080201f0 <TIM8_UP_TIM13_IRQHandler>:
 80201f0:	e7fe      	b.n	80201f0 <TIM8_UP_TIM13_IRQHandler>

080201f2 <TIM8_TRG_COM_TIM14_IRQHandler>:
 80201f2:	e7fe      	b.n	80201f2 <TIM8_TRG_COM_TIM14_IRQHandler>

080201f4 <TIM8_CC_IRQHandler>:
 80201f4:	e7fe      	b.n	80201f4 <TIM8_CC_IRQHandler>

080201f6 <FMC_IRQHandler>:
 80201f6:	e7fe      	b.n	80201f6 <FMC_IRQHandler>

080201f8 <SDIO_IRQHandler>:
 80201f8:	e7fe      	b.n	80201f8 <SDIO_IRQHandler>

080201fa <TIM5_IRQHandler>:
 80201fa:	e7fe      	b.n	80201fa <TIM5_IRQHandler>

080201fc <TIM7_IRQHandler>:
 80201fc:	e7fe      	b.n	80201fc <TIM7_IRQHandler>

080201fe <DMA2_Stream0_IRQHandler>:
 80201fe:	e7fe      	b.n	80201fe <DMA2_Stream0_IRQHandler>

08020200 <DMA2_Stream1_IRQHandler>:
 8020200:	e7fe      	b.n	8020200 <DMA2_Stream1_IRQHandler>

08020202 <DMA2_Stream2_IRQHandler>:
 8020202:	e7fe      	b.n	8020202 <DMA2_Stream2_IRQHandler>

08020204 <DMA2_Stream3_IRQHandler>:
 8020204:	e7fe      	b.n	8020204 <DMA2_Stream3_IRQHandler>

08020206 <DMA2_Stream4_IRQHandler>:
 8020206:	e7fe      	b.n	8020206 <DMA2_Stream4_IRQHandler>

08020208 <ETH_WKUP_IRQHandler>:
 8020208:	e7fe      	b.n	8020208 <ETH_WKUP_IRQHandler>

0802020a <OTG_FS_IRQHandler>:
 802020a:	e7fe      	b.n	802020a <OTG_FS_IRQHandler>

0802020c <DMA2_Stream5_IRQHandler>:
 802020c:	e7fe      	b.n	802020c <DMA2_Stream5_IRQHandler>

0802020e <DMA2_Stream6_IRQHandler>:
 802020e:	e7fe      	b.n	802020e <DMA2_Stream6_IRQHandler>

08020210 <DMA2_Stream7_IRQHandler>:
 8020210:	e7fe      	b.n	8020210 <DMA2_Stream7_IRQHandler>

08020212 <I2C3_EV_IRQHandler>:
 8020212:	e7fe      	b.n	8020212 <I2C3_EV_IRQHandler>

08020214 <I2C3_ER_IRQHandler>:
 8020214:	e7fe      	b.n	8020214 <I2C3_ER_IRQHandler>

08020216 <OTG_HS_EP1_OUT_IRQHandler>:
 8020216:	e7fe      	b.n	8020216 <OTG_HS_EP1_OUT_IRQHandler>

08020218 <OTG_HS_EP1_IN_IRQHandler>:
 8020218:	e7fe      	b.n	8020218 <OTG_HS_EP1_IN_IRQHandler>

0802021a <OTG_HS_WKUP_IRQHandler>:
 802021a:	e7fe      	b.n	802021a <OTG_HS_WKUP_IRQHandler>

0802021c <OTG_HS_IRQHandler>:
 802021c:	e7fe      	b.n	802021c <OTG_HS_IRQHandler>

0802021e <DCMI_IRQHandler>:
 802021e:	e7fe      	b.n	802021e <DCMI_IRQHandler>

08020220 <CRYP_IRQHandler>:
 8020220:	e7fe      	b.n	8020220 <CRYP_IRQHandler>

08020222 <HASH_RNG_IRQHandler>:
 8020222:	e7fe      	b.n	8020222 <HASH_RNG_IRQHandler>

08020224 <FPU_IRQHandler>:
 8020224:	e7fe      	b.n	8020224 <FPU_IRQHandler>

08020226 <SPI4_IRQHandler>:
 8020226:	e7fe      	b.n	8020226 <SPI4_IRQHandler>

08020228 <SPI5_IRQHandler>:
 8020228:	e7fe      	b.n	8020228 <SPI5_IRQHandler>

0802022a <SPI6_IRQHandler>:
 802022a:	e7fe      	b.n	802022a <SPI6_IRQHandler>

0802022c <SAI1_IRQHandler>:
 802022c:	e7fe      	b.n	802022c <SAI1_IRQHandler>

0802022e <LTDC_IRQHandler>:
 802022e:	e7fe      	b.n	802022e <LTDC_IRQHandler>

08020230 <LTDC_ER_IRQHandler>:
 8020230:	e7fe      	b.n	8020230 <LTDC_ER_IRQHandler>

08020232 <DMA2D_IRQHandler>:
 8020232:	e7fe      	b.n	8020232 <DMA2D_IRQHandler>

08020234 <reset_handler>:
 8020234:	4813      	ldr	r0, [pc, #76]	; (8020284 <reset_handler+0x50>)
 8020236:	4685      	mov	sp, r0
 8020238:	f011 fbf8 	bl	8031a2c <SystemInit>
 802023c:	f64e 5088 	movw	r0, #60808	; 0xed88
 8020240:	f2ce 0000 	movt	r0, #57344	; 0xe000
 8020244:	6801      	ldr	r1, [r0, #0]
 8020246:	f451 0170 	orrs.w	r1, r1, #15728640	; 0xf00000
 802024a:	6001      	str	r1, [r0, #0]
 802024c:	f3bf 8f6f 	isb	sy
 8020250:	f3bf 8f4f 	dsb	sy
 8020254:	eef1 0a10 	vmrs	r0, fpscr
 8020258:	f050 7040 	orrs.w	r0, r0, #50331648	; 0x3000000
 802025c:	eee1 0a10 	vmsr	fpscr, r0
 8020260:	f04f 0000 	mov.w	r0, #0
 8020264:	f380 8814 	msr	CONTROL, r0
 8020268:	f64e 713c 	movw	r1, #61244	; 0xef3c
 802026c:	f2ce 0100 	movt	r1, #57344	; 0xe000
 8020270:	6808      	ldr	r0, [r1, #0]
 8020272:	f050 7040 	orrs.w	r0, r0, #50331648	; 0x3000000
 8020276:	6008      	str	r0, [r1, #0]
 8020278:	4803      	ldr	r0, [pc, #12]	; (8020288 <reset_handler+0x54>)
 802027a:	4904      	ldr	r1, [pc, #16]	; (802028c <reset_handler+0x58>)
 802027c:	6001      	str	r1, [r0, #0]
 802027e:	f000 b807 	b.w	8020290 <_start>
 8020282:	4770      	bx	lr
 8020284:	20030000 	.word	0x20030000
 8020288:	e000ed08 	.word	0xe000ed08
 802028c:	08020000 	.word	0x08020000

08020290 <_start>:
 8020290:	4934      	ldr	r1, [pc, #208]	; (8020364 <memory_set+0xc>)
 8020292:	4835      	ldr	r0, [pc, #212]	; (8020368 <memory_set+0x10>)
 8020294:	1a0a      	subs	r2, r1, r0
 8020296:	d002      	beq.n	802029e <_start+0xe>
 8020298:	2207      	movs	r2, #7
 802029a:	4391      	bics	r1, r2
 802029c:	468d      	mov	sp, r1
 802029e:	4933      	ldr	r1, [pc, #204]	; (802036c <memory_set+0x14>)
 80202a0:	4833      	ldr	r0, [pc, #204]	; (8020370 <memory_set+0x18>)
 80202a2:	1a0a      	subs	r2, r1, r0
 80202a4:	d006      	beq.n	80202b4 <_start+0x24>
 80202a6:	2207      	movs	r2, #7
 80202a8:	4391      	bics	r1, r2
 80202aa:	f381 8809 	msr	PSP, r1
 80202ae:	2202      	movs	r2, #2
 80202b0:	f382 8814 	msr	CONTROL, r2
 80202b4:	482f      	ldr	r0, [pc, #188]	; (8020374 <memory_set+0x1c>)
 80202b6:	4930      	ldr	r1, [pc, #192]	; (8020378 <memory_set+0x20>)
 80202b8:	4a30      	ldr	r2, [pc, #192]	; (802037c <memory_set+0x24>)
 80202ba:	f000 f842 	bl	8020342 <memory_copy>
 80202be:	4830      	ldr	r0, [pc, #192]	; (8020380 <memory_set+0x28>)
 80202c0:	4930      	ldr	r1, [pc, #192]	; (8020384 <memory_set+0x2c>)
 80202c2:	4a31      	ldr	r2, [pc, #196]	; (8020388 <memory_set+0x30>)
 80202c4:	f000 f83d 	bl	8020342 <memory_copy>
 80202c8:	4830      	ldr	r0, [pc, #192]	; (802038c <memory_set+0x34>)
 80202ca:	4931      	ldr	r1, [pc, #196]	; (8020390 <memory_set+0x38>)
 80202cc:	4a31      	ldr	r2, [pc, #196]	; (8020394 <memory_set+0x3c>)
 80202ce:	f000 f838 	bl	8020342 <memory_copy>
 80202d2:	4831      	ldr	r0, [pc, #196]	; (8020398 <memory_set+0x40>)
 80202d4:	4931      	ldr	r1, [pc, #196]	; (802039c <memory_set+0x44>)
 80202d6:	4a32      	ldr	r2, [pc, #200]	; (80203a0 <memory_set+0x48>)
 80202d8:	f000 f833 	bl	8020342 <memory_copy>
 80202dc:	4831      	ldr	r0, [pc, #196]	; (80203a4 <memory_set+0x4c>)
 80202de:	4932      	ldr	r1, [pc, #200]	; (80203a8 <memory_set+0x50>)
 80202e0:	4a32      	ldr	r2, [pc, #200]	; (80203ac <memory_set+0x54>)
 80202e2:	f000 f82e 	bl	8020342 <memory_copy>
 80202e6:	4832      	ldr	r0, [pc, #200]	; (80203b0 <memory_set+0x58>)
 80202e8:	4932      	ldr	r1, [pc, #200]	; (80203b4 <memory_set+0x5c>)
 80202ea:	4a33      	ldr	r2, [pc, #204]	; (80203b8 <memory_set+0x60>)
 80202ec:	f000 f829 	bl	8020342 <memory_copy>
 80202f0:	4832      	ldr	r0, [pc, #200]	; (80203bc <memory_set+0x64>)
 80202f2:	4933      	ldr	r1, [pc, #204]	; (80203c0 <memory_set+0x68>)
 80202f4:	4a33      	ldr	r2, [pc, #204]	; (80203c4 <memory_set+0x6c>)
 80202f6:	f000 f824 	bl	8020342 <memory_copy>
 80202fa:	4833      	ldr	r0, [pc, #204]	; (80203c8 <memory_set+0x70>)
 80202fc:	4933      	ldr	r1, [pc, #204]	; (80203cc <memory_set+0x74>)
 80202fe:	2200      	movs	r2, #0
 8020300:	f000 f82a 	bl	8020358 <memory_set>
 8020304:	4832      	ldr	r0, [pc, #200]	; (80203d0 <memory_set+0x78>)
 8020306:	4933      	ldr	r1, [pc, #204]	; (80203d4 <memory_set+0x7c>)
 8020308:	2200      	movs	r2, #0
 802030a:	f000 f825 	bl	8020358 <memory_set>
 802030e:	4832      	ldr	r0, [pc, #200]	; (80203d8 <memory_set+0x80>)
 8020310:	4932      	ldr	r1, [pc, #200]	; (80203dc <memory_set+0x84>)
 8020312:	1a09      	subs	r1, r1, r0
 8020314:	2908      	cmp	r1, #8
 8020316:	db02      	blt.n	802031e <_start+0x8e>
 8020318:	2200      	movs	r2, #0
 802031a:	6002      	str	r2, [r0, #0]
 802031c:	6041      	str	r1, [r0, #4]
 802031e:	481f      	ldr	r0, [pc, #124]	; (802039c <memory_set+0x44>)
 8020320:	491f      	ldr	r1, [pc, #124]	; (80203a0 <memory_set+0x48>)

08020322 <ctor_loop>:
 8020322:	4288      	cmp	r0, r1
 8020324:	d005      	beq.n	8020332 <ctor_end>
 8020326:	6802      	ldr	r2, [r0, #0]
 8020328:	3004      	adds	r0, #4
 802032a:	b403      	push	{r0, r1}
 802032c:	4790      	blx	r2
 802032e:	bc03      	pop	{r0, r1}
 8020330:	e7f7      	b.n	8020322 <ctor_loop>

08020332 <ctor_end>:
 8020332:	2000      	movs	r0, #0
 8020334:	4686      	mov	lr, r0
 8020336:	46ec      	mov	ip, sp

08020338 <start>:
 8020338:	2000      	movs	r0, #0
 802033a:	2100      	movs	r1, #0
 802033c:	4a28      	ldr	r2, [pc, #160]	; (80203e0 <memory_set+0x88>)
 802033e:	4790      	blx	r2

08020340 <exit>:
 8020340:	e7fe      	b.n	8020340 <exit>

08020342 <memory_copy>:
 8020342:	4288      	cmp	r0, r1
 8020344:	d007      	beq.n	8020356 <memory_copy+0x14>
 8020346:	1a52      	subs	r2, r2, r1
 8020348:	d005      	beq.n	8020356 <memory_copy+0x14>
 802034a:	7803      	ldrb	r3, [r0, #0]
 802034c:	3001      	adds	r0, #1
 802034e:	700b      	strb	r3, [r1, #0]
 8020350:	3101      	adds	r1, #1
 8020352:	3a01      	subs	r2, #1
 8020354:	d1f9      	bne.n	802034a <memory_copy+0x8>
 8020356:	4770      	bx	lr

08020358 <memory_set>:
 8020358:	4288      	cmp	r0, r1
 802035a:	d002      	beq.n	8020362 <memory_set+0xa>
 802035c:	7002      	strb	r2, [r0, #0]
 802035e:	3001      	adds	r0, #1
 8020360:	e7fa      	b.n	8020358 <memory_set>
 8020362:	4770      	bx	lr
 8020364:	200148f8 	.word	0x200148f8
 8020368:	200128f8 	.word	0x200128f8
 802036c:	200148f8 	.word	0x200148f8
 8020370:	200148f8 	.word	0x200148f8
 8020374:	0804caa8 	.word	0x0804caa8
 8020378:	20000000 	.word	0x20000000
 802037c:	20002504 	.word	0x20002504
 8020380:	080203e4 	.word	0x080203e4
 8020384:	080203e4 	.word	0x080203e4
 8020388:	080420b8 	.word	0x080420b8
 802038c:	0804caa8 	.word	0x0804caa8
 8020390:	20000000 	.word	0x20000000
 8020394:	20000000 	.word	0x20000000
 8020398:	080420b8 	.word	0x080420b8
 802039c:	080420b8 	.word	0x080420b8
 80203a0:	08042114 	.word	0x08042114
 80203a4:	080420b8 	.word	0x080420b8
 80203a8:	080420b8 	.word	0x080420b8
 80203ac:	080420b8 	.word	0x080420b8
 80203b0:	08042114 	.word	0x08042114
 80203b4:	08042114 	.word	0x08042114
 80203b8:	0804bdf8 	.word	0x0804bdf8
 80203bc:	0804efac 	.word	0x0804efac
 80203c0:	200124f4 	.word	0x200124f4
 80203c4:	200124f4 	.word	0x200124f4
 80203c8:	20002504 	.word	0x20002504
 80203cc:	200124ed 	.word	0x200124ed
 80203d0:	200124f0 	.word	0x200124f0
 80203d4:	200124f4 	.word	0x200124f4
 80203d8:	200124f4 	.word	0x200124f4
 80203dc:	200128f4 	.word	0x200128f4
 80203e0:	08031aed 	.word	0x08031aed

Disassembly of section .text:

080203e4 <udpReceiveFromDiagnostic>:
 80203e4:	4802      	ldr	r0, [pc, #8]	; (80203f0 <udpReceiveFromDiagnostic+0xc>)
 80203e6:	2200      	movs	r2, #0
 80203e8:	2104      	movs	r1, #4
 80203ea:	f018 bec5 	b.w	8039178 <_tx_event_flags_set>
 80203ee:	bf00      	nop
 80203f0:	20002504 	.word	0x20002504

080203f4 <udpReceiveFromCcp>:
 80203f4:	4802      	ldr	r0, [pc, #8]	; (8020400 <udpReceiveFromCcp+0xc>)
 80203f6:	2200      	movs	r2, #0
 80203f8:	2102      	movs	r1, #2
 80203fa:	f018 bebd 	b.w	8039178 <_tx_event_flags_set>
 80203fe:	bf00      	nop
 8020400:	20002504 	.word	0x20002504

08020404 <udpReceiveFromMc>:
 8020404:	4802      	ldr	r0, [pc, #8]	; (8020410 <udpReceiveFromMc+0xc>)
 8020406:	2200      	movs	r2, #0
 8020408:	2101      	movs	r1, #1
 802040a:	f018 beb5 	b.w	8039178 <_tx_event_flags_set>
 802040e:	bf00      	nop
 8020410:	20002504 	.word	0x20002504

08020414 <udpReceive>:
 8020414:	b5f0      	push	{r4, r5, r6, r7, lr}
 8020416:	2694      	movs	r6, #148	; 0x94
 8020418:	fb06 f600 	mul.w	r6, r6, r0
 802041c:	4f3a      	ldr	r7, [pc, #232]	; (8020508 <udpReceive+0xf4>)
 802041e:	f106 0410 	add.w	r4, r6, #16
 8020422:	b087      	sub	sp, #28
 8020424:	443c      	add	r4, r7
 8020426:	4605      	mov	r5, r0
 8020428:	a902      	add	r1, sp, #8
 802042a:	4620      	mov	r0, r4
 802042c:	2200      	movs	r2, #0
 802042e:	f018 fb81 	bl	8038b34 <_nx_udp_socket_receive>
 8020432:	2800      	cmp	r0, #0
 8020434:	d157      	bne.n	80204e6 <udpReceive+0xd2>
 8020436:	443e      	add	r6, r7
 8020438:	e01f      	b.n	802047a <udpReceive+0x66>
 802043a:	4834      	ldr	r0, [pc, #208]	; (802050c <udpReceive+0xf8>)
 802043c:	212f      	movs	r1, #47	; 0x2f
 802043e:	f01e ff8e 	bl	803f35e <strrchr>
 8020442:	2800      	cmp	r0, #0
 8020444:	d044      	beq.n	80204d0 <udpReceive+0xbc>
 8020446:	212f      	movs	r1, #47	; 0x2f
 8020448:	4830      	ldr	r0, [pc, #192]	; (802050c <udpReceive+0xf8>)
 802044a:	f01e ff88 	bl	803f35e <strrchr>
 802044e:	1c41      	adds	r1, r0, #1
 8020450:	9b03      	ldr	r3, [sp, #12]
 8020452:	9300      	str	r3, [sp, #0]
 8020454:	f240 53dc 	movw	r3, #1500	; 0x5dc
 8020458:	9301      	str	r3, [sp, #4]
 802045a:	f44f 7205 	mov.w	r2, #532	; 0x214
 802045e:	4b2c      	ldr	r3, [pc, #176]	; (8020510 <udpReceive+0xfc>)
 8020460:	2000      	movs	r0, #0
 8020462:	f002 f999 	bl	8022798 <DEBUG_logMsg>
 8020466:	9802      	ldr	r0, [sp, #8]
 8020468:	f017 ffd6 	bl	8038418 <_nx_packet_release>
 802046c:	2200      	movs	r2, #0
 802046e:	a902      	add	r1, sp, #8
 8020470:	4620      	mov	r0, r4
 8020472:	f018 fb5f 	bl	8038b34 <_nx_udp_socket_receive>
 8020476:	2800      	cmp	r0, #0
 8020478:	d135      	bne.n	80204e6 <udpReceive+0xd2>
 802047a:	9802      	ldr	r0, [sp, #8]
 802047c:	a903      	add	r1, sp, #12
 802047e:	f017 ff1f 	bl	80382c0 <_nx_packet_length_get>
 8020482:	9a03      	ldr	r2, [sp, #12]
 8020484:	f240 53dc 	movw	r3, #1500	; 0x5dc
 8020488:	429a      	cmp	r2, r3
 802048a:	d8d6      	bhi.n	802043a <udpReceive+0x26>
 802048c:	4921      	ldr	r1, [pc, #132]	; (8020514 <udpReceive+0x100>)
 802048e:	9802      	ldr	r0, [sp, #8]
 8020490:	aa03      	add	r2, sp, #12
 8020492:	f017 fef1 	bl	8038278 <_nx_packet_data_retrieve>
 8020496:	2800      	cmp	r0, #0
 8020498:	d1e5      	bne.n	8020466 <udpReceive+0x52>
 802049a:	2d01      	cmp	r5, #1
 802049c:	d02d      	beq.n	80204fa <udpReceive+0xe6>
 802049e:	2d02      	cmp	r5, #2
 80204a0:	d125      	bne.n	80204ee <udpReceive+0xda>
 80204a2:	f8bd 100c 	ldrh.w	r1, [sp, #12]
 80204a6:	481b      	ldr	r0, [pc, #108]	; (8020514 <udpReceive+0x100>)
 80204a8:	f00f fd5c 	bl	802ff64 <HARDWARE_NETWORK_enqueueReceivedDiagnosticMessage>
 80204ac:	7b33      	ldrb	r3, [r6, #12]
 80204ae:	2b00      	cmp	r3, #0
 80204b0:	d0d9      	beq.n	8020466 <udpReceive+0x52>
 80204b2:	2300      	movs	r3, #0
 80204b4:	9802      	ldr	r0, [sp, #8]
 80204b6:	aa05      	add	r2, sp, #20
 80204b8:	a904      	add	r1, sp, #16
 80204ba:	e9cd 3304 	strd	r3, r3, [sp, #16]
 80204be:	f018 fc1d 	bl	8038cfc <_nx_udp_source_extract>
 80204c2:	2800      	cmp	r0, #0
 80204c4:	d1cf      	bne.n	8020466 <udpReceive+0x52>
 80204c6:	e9dd 3204 	ldrd	r3, r2, [sp, #16]
 80204ca:	8132      	strh	r2, [r6, #8]
 80204cc:	6073      	str	r3, [r6, #4]
 80204ce:	e7ca      	b.n	8020466 <udpReceive+0x52>
 80204d0:	480e      	ldr	r0, [pc, #56]	; (802050c <udpReceive+0xf8>)
 80204d2:	215c      	movs	r1, #92	; 0x5c
 80204d4:	f01e ff43 	bl	803f35e <strrchr>
 80204d8:	b138      	cbz	r0, 80204ea <udpReceive+0xd6>
 80204da:	215c      	movs	r1, #92	; 0x5c
 80204dc:	480b      	ldr	r0, [pc, #44]	; (802050c <udpReceive+0xf8>)
 80204de:	f01e ff3e 	bl	803f35e <strrchr>
 80204e2:	1c41      	adds	r1, r0, #1
 80204e4:	e7b4      	b.n	8020450 <udpReceive+0x3c>
 80204e6:	b007      	add	sp, #28
 80204e8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80204ea:	4908      	ldr	r1, [pc, #32]	; (802050c <udpReceive+0xf8>)
 80204ec:	e7b0      	b.n	8020450 <udpReceive+0x3c>
 80204ee:	f8bd 100c 	ldrh.w	r1, [sp, #12]
 80204f2:	4808      	ldr	r0, [pc, #32]	; (8020514 <udpReceive+0x100>)
 80204f4:	f00f fcae 	bl	802fe54 <HARDWARE_NETWORK_enqueueReceivedMCMMessage>
 80204f8:	e7d8      	b.n	80204ac <udpReceive+0x98>
 80204fa:	f8bd 100c 	ldrh.w	r1, [sp, #12]
 80204fe:	4805      	ldr	r0, [pc, #20]	; (8020514 <udpReceive+0x100>)
 8020500:	f00f fc02 	bl	802fd08 <HARDWARE_NETWORK_enqueueReceivedCCPMessage>
 8020504:	e7d2      	b.n	80204ac <udpReceive+0x98>
 8020506:	bf00      	nop
 8020508:	200033a0 	.word	0x200033a0
 802050c:	08042114 	.word	0x08042114
 8020510:	0804214c 	.word	0x0804214c
 8020514:	20002dc4 	.word	0x20002dc4

08020518 <NETWORK_enterUdpThread>:
 8020518:	b570      	push	{r4, r5, r6, lr}
 802051a:	2001      	movs	r0, #1
 802051c:	b084      	sub	sp, #16
 802051e:	f000 fc05 	bl	8020d2c <SYSTEM_setThreadFlag>
 8020522:	e001      	b.n	8020528 <NETWORK_enterUdpThread+0x10>
 8020524:	f019 fd14 	bl	8039f50 <_tx_thread_sleep>
 8020528:	f000 fbf4 	bl	8020d14 <SYSTEM_areThreadsRunning>
 802052c:	4603      	mov	r3, r0
 802052e:	200a      	movs	r0, #10
 8020530:	2b00      	cmp	r3, #0
 8020532:	d0f7      	beq.n	8020524 <NETWORK_enterUdpThread+0xc>
 8020534:	4d1c      	ldr	r5, [pc, #112]	; (80205a8 <NETWORK_enterUdpThread+0x90>)
 8020536:	f44f 76fa 	mov.w	r6, #500	; 0x1f4
 802053a:	e010      	b.n	802055e <NETWORK_enterUdpThread+0x46>
 802053c:	079a      	lsls	r2, r3, #30
 802053e:	d427      	bmi.n	8020590 <NETWORK_enterUdpThread+0x78>
 8020540:	075b      	lsls	r3, r3, #29
 8020542:	f04f 0202 	mov.w	r2, #2
 8020546:	f06f 0104 	mvn.w	r1, #4
 802054a:	4628      	mov	r0, r5
 802054c:	d504      	bpl.n	8020558 <NETWORK_enterUdpThread+0x40>
 802054e:	f018 fe13 	bl	8039178 <_tx_event_flags_set>
 8020552:	2002      	movs	r0, #2
 8020554:	f7ff ff5e 	bl	8020414 <udpReceive>
 8020558:	2001      	movs	r0, #1
 802055a:	f000 fbe7 	bl	8020d2c <SYSTEM_setThreadFlag>
 802055e:	9600      	str	r6, [sp, #0]
 8020560:	ab03      	add	r3, sp, #12
 8020562:	2201      	movs	r2, #1
 8020564:	2107      	movs	r1, #7
 8020566:	4628      	mov	r0, r5
 8020568:	f018 fd8c 	bl	8039084 <_tx_event_flags_get>
 802056c:	4604      	mov	r4, r0
 802056e:	2800      	cmp	r0, #0
 8020570:	d1f2      	bne.n	8020558 <NETWORK_enterUdpThread+0x40>
 8020572:	9b03      	ldr	r3, [sp, #12]
 8020574:	07d9      	lsls	r1, r3, #31
 8020576:	d5e1      	bpl.n	802053c <NETWORK_enterUdpThread+0x24>
 8020578:	2202      	movs	r2, #2
 802057a:	f06f 0101 	mvn.w	r1, #1
 802057e:	4628      	mov	r0, r5
 8020580:	f018 fdfa 	bl	8039178 <_tx_event_flags_set>
 8020584:	4620      	mov	r0, r4
 8020586:	f7ff ff45 	bl	8020414 <udpReceive>
 802058a:	9b03      	ldr	r3, [sp, #12]
 802058c:	079a      	lsls	r2, r3, #30
 802058e:	d5d7      	bpl.n	8020540 <NETWORK_enterUdpThread+0x28>
 8020590:	2202      	movs	r2, #2
 8020592:	f06f 0102 	mvn.w	r1, #2
 8020596:	4628      	mov	r0, r5
 8020598:	f018 fdee 	bl	8039178 <_tx_event_flags_set>
 802059c:	2001      	movs	r0, #1
 802059e:	f7ff ff39 	bl	8020414 <udpReceive>
 80205a2:	9b03      	ldr	r3, [sp, #12]
 80205a4:	e7cc      	b.n	8020540 <NETWORK_enterUdpThread+0x28>
 80205a6:	bf00      	nop
 80205a8:	20002504 	.word	0x20002504

080205ac <NETWORK_init>:
 80205ac:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80205b0:	b087      	sub	sp, #28
 80205b2:	2800      	cmp	r0, #0
 80205b4:	f000 80cd 	beq.w	8020752 <NETWORK_init+0x1a6>
 80205b8:	4bbd      	ldr	r3, [pc, #756]	; (80208b0 <NETWORK_init+0x304>)
 80205ba:	4604      	mov	r4, r0
 80205bc:	6018      	str	r0, [r3, #0]
 80205be:	4dbd      	ldr	r5, [pc, #756]	; (80208b4 <NETWORK_init+0x308>)
 80205c0:	49bd      	ldr	r1, [pc, #756]	; (80208b8 <NETWORK_init+0x30c>)
 80205c2:	f44f 5340 	mov.w	r3, #12288	; 0x3000
 80205c6:	9300      	str	r3, [sp, #0]
 80205c8:	4628      	mov	r0, r5
 80205ca:	4623      	mov	r3, r4
 80205cc:	2260      	movs	r2, #96	; 0x60
 80205ce:	f017 feb3 	bl	8038338 <_nx_packet_pool_create>
 80205d2:	2800      	cmp	r0, #0
 80205d4:	f040 80aa 	bne.w	802072c <NETWORK_init+0x180>
 80205d8:	4bb8      	ldr	r3, [pc, #736]	; (80208bc <NETWORK_init+0x310>)
 80205da:	9500      	str	r5, [sp, #0]
 80205dc:	2001      	movs	r0, #1
 80205de:	f44f 6100 	mov.w	r1, #2048	; 0x800
 80205e2:	f504 5240 	add.w	r2, r4, #12288	; 0x3000
 80205e6:	e9cd 1003 	strd	r1, r0, [sp, #12]
 80205ea:	e9cd 3201 	strd	r3, r2, [sp, #4]
 80205ee:	49b4      	ldr	r1, [pc, #720]	; (80208c0 <NETWORK_init+0x314>)
 80205f0:	4bb4      	ldr	r3, [pc, #720]	; (80208c4 <NETWORK_init+0x318>)
 80205f2:	4ab5      	ldr	r2, [pc, #724]	; (80208c8 <NETWORK_init+0x31c>)
 80205f4:	48b5      	ldr	r0, [pc, #724]	; (80208cc <NETWORK_init+0x320>)
 80205f6:	f016 ffa3 	bl	8037540 <_nx_ip_create>
 80205fa:	2800      	cmp	r0, #0
 80205fc:	f040 8083 	bne.w	8020706 <NETWORK_init+0x15a>
 8020600:	48b2      	ldr	r0, [pc, #712]	; (80208cc <NETWORK_init+0x320>)
 8020602:	f504 5160 	add.w	r1, r4, #14336	; 0x3800
 8020606:	f44f 6280 	mov.w	r2, #1024	; 0x400
 802060a:	f016 fb21 	bl	8036c50 <_nx_arp_enable>
 802060e:	2800      	cmp	r0, #0
 8020610:	f040 80bd 	bne.w	802078e <NETWORK_init+0x1e2>
 8020614:	48ad      	ldr	r0, [pc, #692]	; (80208cc <NETWORK_init+0x320>)
 8020616:	f016 fe99 	bl	803734c <_nx_icmp_enable>
 802061a:	2800      	cmp	r0, #0
 802061c:	f040 809c 	bne.w	8020758 <NETWORK_init+0x1ac>
 8020620:	48aa      	ldr	r0, [pc, #680]	; (80208cc <NETWORK_init+0x320>)
 8020622:	f018 f807 	bl	8038634 <_nx_udp_enable>
 8020626:	2800      	cmp	r0, #0
 8020628:	f040 811c 	bne.w	8020864 <NETWORK_init+0x2b8>
 802062c:	68ab      	ldr	r3, [r5, #8]
 802062e:	2b1f      	cmp	r3, #31
 8020630:	f240 80f8 	bls.w	8020824 <NETWORK_init+0x278>
 8020634:	4ba6      	ldr	r3, [pc, #664]	; (80208d0 <NETWORK_init+0x324>)
 8020636:	4da7      	ldr	r5, [pc, #668]	; (80208d4 <NETWORK_init+0x328>)
 8020638:	4ca7      	ldr	r4, [pc, #668]	; (80208d8 <NETWORK_init+0x32c>)
 802063a:	601d      	str	r5, [r3, #0]
 802063c:	605c      	str	r4, [r3, #4]
 802063e:	4da7      	ldr	r5, [pc, #668]	; (80208dc <NETWORK_init+0x330>)
 8020640:	4ca7      	ldr	r4, [pc, #668]	; (80208e0 <NETWORK_init+0x334>)
 8020642:	49a8      	ldr	r1, [pc, #672]	; (80208e4 <NETWORK_init+0x338>)
 8020644:	48a8      	ldr	r0, [pc, #672]	; (80208e8 <NETWORK_init+0x33c>)
 8020646:	4ea9      	ldr	r6, [pc, #676]	; (80208ec <NETWORK_init+0x340>)
 8020648:	6099      	str	r1, [r3, #8]
 802064a:	f8c3 0094 	str.w	r0, [r3, #148]	; 0x94
 802064e:	49a8      	ldr	r1, [pc, #672]	; (80208f0 <NETWORK_init+0x344>)
 8020650:	48a8      	ldr	r0, [pc, #672]	; (80208f4 <NETWORK_init+0x348>)
 8020652:	f8c3 6124 	str.w	r6, [r3, #292]	; 0x124
 8020656:	f8c3 5098 	str.w	r5, [r3, #152]	; 0x98
 802065a:	2602      	movs	r6, #2
 802065c:	3d0a      	subs	r5, #10
 802065e:	f8c3 409c 	str.w	r4, [r3, #156]	; 0x9c
 8020662:	4aa5      	ldr	r2, [pc, #660]	; (80208f8 <NETWORK_init+0x34c>)
 8020664:	4f99      	ldr	r7, [pc, #612]	; (80208cc <NETWORK_init+0x320>)
 8020666:	f8c3 1128 	str.w	r1, [r3, #296]	; 0x128
 802066a:	f104 1407 	add.w	r4, r4, #458759	; 0x70007
 802066e:	2100      	movs	r1, #0
 8020670:	e9c3 544b 	strd	r5, r4, [r3, #300]	; 0x12c
 8020674:	f8c3 01b8 	str.w	r0, [r3, #440]	; 0x1b8
 8020678:	f883 61b4 	strb.w	r6, [r3, #436]	; 0x1b4
 802067c:	2001      	movs	r0, #1
 802067e:	f103 0510 	add.w	r5, r3, #16
 8020682:	2600      	movs	r6, #0
 8020684:	f883 108c 	strb.w	r1, [r3, #140]	; 0x8c
 8020688:	7319      	strb	r1, [r3, #12]
 802068a:	f883 10a0 	strb.w	r1, [r3, #160]	; 0xa0
 802068e:	f883 0120 	strb.w	r0, [r3, #288]	; 0x120
 8020692:	f883 0134 	strb.w	r0, [r3, #308]	; 0x134
 8020696:	f8c3 2090 	str.w	r2, [r3, #144]	; 0x90
 802069a:	f503 74e6 	add.w	r4, r3, #460	; 0x1cc
 802069e:	f04f 0910 	mov.w	r9, #16
 80206a2:	f04f 0880 	mov.w	r8, #128	; 0x80
 80206a6:	4633      	mov	r3, r6
 80206a8:	4629      	mov	r1, r5
 80206aa:	4638      	mov	r0, r7
 80206ac:	b1f2      	cbz	r2, 80206ec <NETWORK_init+0x140>
 80206ae:	e9cd 8901 	strd	r8, r9, [sp, #4]
 80206b2:	9600      	str	r6, [sp, #0]
 80206b4:	f855 2c10 	ldr.w	r2, [r5, #-16]
 80206b8:	f018 f9f0 	bl	8038a9c <_nx_udp_socket_create>
 80206bc:	4603      	mov	r3, r0
 80206be:	f04f 32ff 	mov.w	r2, #4294967295
 80206c2:	4628      	mov	r0, r5
 80206c4:	2b00      	cmp	r3, #0
 80206c6:	f040 8081 	bne.w	80207cc <NETWORK_init+0x220>
 80206ca:	f835 1c06 	ldrh.w	r1, [r5, #-6]
 80206ce:	f018 f943 	bl	8038958 <_nx_udp_socket_bind>
 80206d2:	4603      	mov	r3, r0
 80206d4:	4628      	mov	r0, r5
 80206d6:	2b00      	cmp	r3, #0
 80206d8:	f040 8087 	bne.w	80207ea <NETWORK_init+0x23e>
 80206dc:	f8d5 1080 	ldr.w	r1, [r5, #128]	; 0x80
 80206e0:	f018 fa8a 	bl	8038bf8 <_nx_udp_socket_receive_notify>
 80206e4:	4606      	mov	r6, r0
 80206e6:	2800      	cmp	r0, #0
 80206e8:	f040 811a 	bne.w	8020920 <NETWORK_init+0x374>
 80206ec:	3594      	adds	r5, #148	; 0x94
 80206ee:	42a5      	cmp	r5, r4
 80206f0:	f000 8127 	beq.w	8020942 <NETWORK_init+0x396>
 80206f4:	f8d5 2080 	ldr.w	r2, [r5, #128]	; 0x80
 80206f8:	2600      	movs	r6, #0
 80206fa:	4633      	mov	r3, r6
 80206fc:	4629      	mov	r1, r5
 80206fe:	4638      	mov	r0, r7
 8020700:	2a00      	cmp	r2, #0
 8020702:	d1d4      	bne.n	80206ae <NETWORK_init+0x102>
 8020704:	e7f2      	b.n	80206ec <NETWORK_init+0x140>
 8020706:	487d      	ldr	r0, [pc, #500]	; (80208fc <NETWORK_init+0x350>)
 8020708:	212f      	movs	r1, #47	; 0x2f
 802070a:	f01e fe28 	bl	803f35e <strrchr>
 802070e:	2800      	cmp	r0, #0
 8020710:	d031      	beq.n	8020776 <NETWORK_init+0x1ca>
 8020712:	212f      	movs	r1, #47	; 0x2f
 8020714:	4879      	ldr	r0, [pc, #484]	; (80208fc <NETWORK_init+0x350>)
 8020716:	f01e fe22 	bl	803f35e <strrchr>
 802071a:	1c41      	adds	r1, r0, #1
 802071c:	4b78      	ldr	r3, [pc, #480]	; (8020900 <NETWORK_init+0x354>)
 802071e:	22b1      	movs	r2, #177	; 0xb1
 8020720:	2000      	movs	r0, #0
 8020722:	b007      	add	sp, #28
 8020724:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8020728:	f002 b836 	b.w	8022798 <DEBUG_logMsg>
 802072c:	4873      	ldr	r0, [pc, #460]	; (80208fc <NETWORK_init+0x350>)
 802072e:	212f      	movs	r1, #47	; 0x2f
 8020730:	f01e fe15 	bl	803f35e <strrchr>
 8020734:	2800      	cmp	r0, #0
 8020736:	d03d      	beq.n	80207b4 <NETWORK_init+0x208>
 8020738:	212f      	movs	r1, #47	; 0x2f
 802073a:	4870      	ldr	r0, [pc, #448]	; (80208fc <NETWORK_init+0x350>)
 802073c:	f01e fe0f 	bl	803f35e <strrchr>
 8020740:	1c41      	adds	r1, r0, #1
 8020742:	4b70      	ldr	r3, [pc, #448]	; (8020904 <NETWORK_init+0x358>)
 8020744:	22a6      	movs	r2, #166	; 0xa6
 8020746:	2000      	movs	r0, #0
 8020748:	b007      	add	sp, #28
 802074a:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
 802074e:	f002 b823 	b.w	8022798 <DEBUG_logMsg>
 8020752:	4b57      	ldr	r3, [pc, #348]	; (80208b0 <NETWORK_init+0x304>)
 8020754:	681c      	ldr	r4, [r3, #0]
 8020756:	e732      	b.n	80205be <NETWORK_init+0x12>
 8020758:	4868      	ldr	r0, [pc, #416]	; (80208fc <NETWORK_init+0x350>)
 802075a:	212f      	movs	r1, #47	; 0x2f
 802075c:	f01e fdff 	bl	803f35e <strrchr>
 8020760:	2800      	cmp	r0, #0
 8020762:	f000 808d 	beq.w	8020880 <NETWORK_init+0x2d4>
 8020766:	212f      	movs	r1, #47	; 0x2f
 8020768:	4864      	ldr	r0, [pc, #400]	; (80208fc <NETWORK_init+0x350>)
 802076a:	f01e fdf8 	bl	803f35e <strrchr>
 802076e:	1c41      	adds	r1, r0, #1
 8020770:	4b65      	ldr	r3, [pc, #404]	; (8020908 <NETWORK_init+0x35c>)
 8020772:	22c3      	movs	r2, #195	; 0xc3
 8020774:	e7e7      	b.n	8020746 <NETWORK_init+0x19a>
 8020776:	4861      	ldr	r0, [pc, #388]	; (80208fc <NETWORK_init+0x350>)
 8020778:	215c      	movs	r1, #92	; 0x5c
 802077a:	f01e fdf0 	bl	803f35e <strrchr>
 802077e:	2800      	cmp	r0, #0
 8020780:	d041      	beq.n	8020806 <NETWORK_init+0x25a>
 8020782:	215c      	movs	r1, #92	; 0x5c
 8020784:	485d      	ldr	r0, [pc, #372]	; (80208fc <NETWORK_init+0x350>)
 8020786:	f01e fdea 	bl	803f35e <strrchr>
 802078a:	1c41      	adds	r1, r0, #1
 802078c:	e7c6      	b.n	802071c <NETWORK_init+0x170>
 802078e:	485b      	ldr	r0, [pc, #364]	; (80208fc <NETWORK_init+0x350>)
 8020790:	212f      	movs	r1, #47	; 0x2f
 8020792:	f01e fde4 	bl	803f35e <strrchr>
 8020796:	2800      	cmp	r0, #0
 8020798:	d058      	beq.n	802084c <NETWORK_init+0x2a0>
 802079a:	212f      	movs	r1, #47	; 0x2f
 802079c:	4857      	ldr	r0, [pc, #348]	; (80208fc <NETWORK_init+0x350>)
 802079e:	f01e fdde 	bl	803f35e <strrchr>
 80207a2:	1c41      	adds	r1, r0, #1
 80207a4:	4b59      	ldr	r3, [pc, #356]	; (802090c <NETWORK_init+0x360>)
 80207a6:	22ba      	movs	r2, #186	; 0xba
 80207a8:	2000      	movs	r0, #0
 80207aa:	b007      	add	sp, #28
 80207ac:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80207b0:	f001 bff2 	b.w	8022798 <DEBUG_logMsg>
 80207b4:	4851      	ldr	r0, [pc, #324]	; (80208fc <NETWORK_init+0x350>)
 80207b6:	215c      	movs	r1, #92	; 0x5c
 80207b8:	f01e fdd1 	bl	803f35e <strrchr>
 80207bc:	2800      	cmp	r0, #0
 80207be:	d043      	beq.n	8020848 <NETWORK_init+0x29c>
 80207c0:	215c      	movs	r1, #92	; 0x5c
 80207c2:	484e      	ldr	r0, [pc, #312]	; (80208fc <NETWORK_init+0x350>)
 80207c4:	f01e fdcb 	bl	803f35e <strrchr>
 80207c8:	1c41      	adds	r1, r0, #1
 80207ca:	e7ba      	b.n	8020742 <NETWORK_init+0x196>
 80207cc:	484b      	ldr	r0, [pc, #300]	; (80208fc <NETWORK_init+0x350>)
 80207ce:	212f      	movs	r1, #47	; 0x2f
 80207d0:	f01e fdc5 	bl	803f35e <strrchr>
 80207d4:	2800      	cmp	r0, #0
 80207d6:	d05f      	beq.n	8020898 <NETWORK_init+0x2ec>
 80207d8:	212f      	movs	r1, #47	; 0x2f
 80207da:	4848      	ldr	r0, [pc, #288]	; (80208fc <NETWORK_init+0x350>)
 80207dc:	f01e fdbf 	bl	803f35e <strrchr>
 80207e0:	1c41      	adds	r1, r0, #1
 80207e2:	4b4b      	ldr	r3, [pc, #300]	; (8020910 <NETWORK_init+0x364>)
 80207e4:	f240 12e5 	movw	r2, #485	; 0x1e5
 80207e8:	e7ad      	b.n	8020746 <NETWORK_init+0x19a>
 80207ea:	4844      	ldr	r0, [pc, #272]	; (80208fc <NETWORK_init+0x350>)
 80207ec:	212f      	movs	r1, #47	; 0x2f
 80207ee:	f01e fdb6 	bl	803f35e <strrchr>
 80207f2:	b150      	cbz	r0, 802080a <NETWORK_init+0x25e>
 80207f4:	212f      	movs	r1, #47	; 0x2f
 80207f6:	4841      	ldr	r0, [pc, #260]	; (80208fc <NETWORK_init+0x350>)
 80207f8:	f01e fdb1 	bl	803f35e <strrchr>
 80207fc:	1c41      	adds	r1, r0, #1
 80207fe:	4b45      	ldr	r3, [pc, #276]	; (8020914 <NETWORK_init+0x368>)
 8020800:	f240 12ed 	movw	r2, #493	; 0x1ed
 8020804:	e79f      	b.n	8020746 <NETWORK_init+0x19a>
 8020806:	493d      	ldr	r1, [pc, #244]	; (80208fc <NETWORK_init+0x350>)
 8020808:	e788      	b.n	802071c <NETWORK_init+0x170>
 802080a:	483c      	ldr	r0, [pc, #240]	; (80208fc <NETWORK_init+0x350>)
 802080c:	215c      	movs	r1, #92	; 0x5c
 802080e:	f01e fda6 	bl	803f35e <strrchr>
 8020812:	2800      	cmp	r0, #0
 8020814:	f000 80b4 	beq.w	8020980 <NETWORK_init+0x3d4>
 8020818:	215c      	movs	r1, #92	; 0x5c
 802081a:	4838      	ldr	r0, [pc, #224]	; (80208fc <NETWORK_init+0x350>)
 802081c:	f01e fd9f 	bl	803f35e <strrchr>
 8020820:	1c41      	adds	r1, r0, #1
 8020822:	e7ec      	b.n	80207fe <NETWORK_init+0x252>
 8020824:	4835      	ldr	r0, [pc, #212]	; (80208fc <NETWORK_init+0x350>)
 8020826:	212f      	movs	r1, #47	; 0x2f
 8020828:	f01e fd99 	bl	803f35e <strrchr>
 802082c:	2800      	cmp	r0, #0
 802082e:	f000 808d 	beq.w	802094c <NETWORK_init+0x3a0>
 8020832:	212f      	movs	r1, #47	; 0x2f
 8020834:	4831      	ldr	r0, [pc, #196]	; (80208fc <NETWORK_init+0x350>)
 8020836:	f01e fd92 	bl	803f35e <strrchr>
 802083a:	1c41      	adds	r1, r0, #1
 802083c:	4b36      	ldr	r3, [pc, #216]	; (8020918 <NETWORK_init+0x36c>)
 802083e:	22d1      	movs	r2, #209	; 0xd1
 8020840:	2000      	movs	r0, #0
 8020842:	f001 ffa9 	bl	8022798 <DEBUG_logMsg>
 8020846:	e6f5      	b.n	8020634 <NETWORK_init+0x88>
 8020848:	492c      	ldr	r1, [pc, #176]	; (80208fc <NETWORK_init+0x350>)
 802084a:	e77a      	b.n	8020742 <NETWORK_init+0x196>
 802084c:	482b      	ldr	r0, [pc, #172]	; (80208fc <NETWORK_init+0x350>)
 802084e:	215c      	movs	r1, #92	; 0x5c
 8020850:	f01e fd85 	bl	803f35e <strrchr>
 8020854:	2800      	cmp	r0, #0
 8020856:	d077      	beq.n	8020948 <NETWORK_init+0x39c>
 8020858:	215c      	movs	r1, #92	; 0x5c
 802085a:	4828      	ldr	r0, [pc, #160]	; (80208fc <NETWORK_init+0x350>)
 802085c:	f01e fd7f 	bl	803f35e <strrchr>
 8020860:	1c41      	adds	r1, r0, #1
 8020862:	e79f      	b.n	80207a4 <NETWORK_init+0x1f8>
 8020864:	4825      	ldr	r0, [pc, #148]	; (80208fc <NETWORK_init+0x350>)
 8020866:	212f      	movs	r1, #47	; 0x2f
 8020868:	f01e fd79 	bl	803f35e <strrchr>
 802086c:	2800      	cmp	r0, #0
 802086e:	d07c      	beq.n	802096a <NETWORK_init+0x3be>
 8020870:	212f      	movs	r1, #47	; 0x2f
 8020872:	4822      	ldr	r0, [pc, #136]	; (80208fc <NETWORK_init+0x350>)
 8020874:	f01e fd73 	bl	803f35e <strrchr>
 8020878:	1c41      	adds	r1, r0, #1
 802087a:	4b28      	ldr	r3, [pc, #160]	; (802091c <NETWORK_init+0x370>)
 802087c:	22cb      	movs	r2, #203	; 0xcb
 802087e:	e762      	b.n	8020746 <NETWORK_init+0x19a>
 8020880:	481e      	ldr	r0, [pc, #120]	; (80208fc <NETWORK_init+0x350>)
 8020882:	215c      	movs	r1, #92	; 0x5c
 8020884:	f01e fd6b 	bl	803f35e <strrchr>
 8020888:	2800      	cmp	r0, #0
 802088a:	d06a      	beq.n	8020962 <NETWORK_init+0x3b6>
 802088c:	215c      	movs	r1, #92	; 0x5c
 802088e:	481b      	ldr	r0, [pc, #108]	; (80208fc <NETWORK_init+0x350>)
 8020890:	f01e fd65 	bl	803f35e <strrchr>
 8020894:	1c41      	adds	r1, r0, #1
 8020896:	e76b      	b.n	8020770 <NETWORK_init+0x1c4>
 8020898:	4818      	ldr	r0, [pc, #96]	; (80208fc <NETWORK_init+0x350>)
 802089a:	215c      	movs	r1, #92	; 0x5c
 802089c:	f01e fd5f 	bl	803f35e <strrchr>
 80208a0:	2800      	cmp	r0, #0
 80208a2:	d060      	beq.n	8020966 <NETWORK_init+0x3ba>
 80208a4:	215c      	movs	r1, #92	; 0x5c
 80208a6:	4815      	ldr	r0, [pc, #84]	; (80208fc <NETWORK_init+0x350>)
 80208a8:	f01e fd59 	bl	803f35e <strrchr>
 80208ac:	1c41      	adds	r1, r0, #1
 80208ae:	e798      	b.n	80207e2 <NETWORK_init+0x236>
 80208b0:	20002618 	.word	0x20002618
 80208b4:	20002528 	.word	0x20002528
 80208b8:	08042184 	.word	0x08042184
 80208bc:	08035999 	.word	0x08035999
 80208c0:	080421c4 	.word	0x080421c4
 80208c4:	ffff0000 	.word	0xffff0000
 80208c8:	c0a8013c 	.word	0xc0a8013c
 80208cc:	2000261c 	.word	0x2000261c
 80208d0:	200033a0 	.word	0x200033a0
 80208d4:	08042290 	.word	0x08042290
 80208d8:	c0a80103 	.word	0xc0a80103
 80208dc:	c0a80128 	.word	0xc0a80128
 80208e0:	7d027d02 	.word	0x7d027d02
 80208e4:	1f901f91 	.word	0x1f901f91
 80208e8:	08042294 	.word	0x08042294
 80208ec:	080203f5 	.word	0x080203f5
 80208f0:	08042298 	.word	0x08042298
 80208f4:	080203e5 	.word	0x080203e5
 80208f8:	08020405 	.word	0x08020405
 80208fc:	08042114 	.word	0x08042114
 8020900:	080421cc 	.word	0x080421cc
 8020904:	08042198 	.word	0x08042198
 8020908:	08042218 	.word	0x08042218
 802090c:	080421f8 	.word	0x080421f8
 8020910:	080422a4 	.word	0x080422a4
 8020914:	080422d0 	.word	0x080422d0
 8020918:	08042258 	.word	0x08042258
 802091c:	08042238 	.word	0x08042238
 8020920:	4821      	ldr	r0, [pc, #132]	; (80209a8 <NETWORK_init+0x3fc>)
 8020922:	212f      	movs	r1, #47	; 0x2f
 8020924:	f01e fd1b 	bl	803f35e <strrchr>
 8020928:	b360      	cbz	r0, 8020984 <NETWORK_init+0x3d8>
 802092a:	212f      	movs	r1, #47	; 0x2f
 802092c:	481e      	ldr	r0, [pc, #120]	; (80209a8 <NETWORK_init+0x3fc>)
 802092e:	f01e fd16 	bl	803f35e <strrchr>
 8020932:	1c41      	adds	r1, r0, #1
 8020934:	4b1d      	ldr	r3, [pc, #116]	; (80209ac <NETWORK_init+0x400>)
 8020936:	9600      	str	r6, [sp, #0]
 8020938:	f240 12f5 	movw	r2, #501	; 0x1f5
 802093c:	2000      	movs	r0, #0
 802093e:	f001 ff2b 	bl	8022798 <DEBUG_logMsg>
 8020942:	b007      	add	sp, #28
 8020944:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8020948:	4917      	ldr	r1, [pc, #92]	; (80209a8 <NETWORK_init+0x3fc>)
 802094a:	e72b      	b.n	80207a4 <NETWORK_init+0x1f8>
 802094c:	4816      	ldr	r0, [pc, #88]	; (80209a8 <NETWORK_init+0x3fc>)
 802094e:	215c      	movs	r1, #92	; 0x5c
 8020950:	f01e fd05 	bl	803f35e <strrchr>
 8020954:	b308      	cbz	r0, 802099a <NETWORK_init+0x3ee>
 8020956:	215c      	movs	r1, #92	; 0x5c
 8020958:	4813      	ldr	r0, [pc, #76]	; (80209a8 <NETWORK_init+0x3fc>)
 802095a:	f01e fd00 	bl	803f35e <strrchr>
 802095e:	1c41      	adds	r1, r0, #1
 8020960:	e76c      	b.n	802083c <NETWORK_init+0x290>
 8020962:	4911      	ldr	r1, [pc, #68]	; (80209a8 <NETWORK_init+0x3fc>)
 8020964:	e704      	b.n	8020770 <NETWORK_init+0x1c4>
 8020966:	4910      	ldr	r1, [pc, #64]	; (80209a8 <NETWORK_init+0x3fc>)
 8020968:	e73b      	b.n	80207e2 <NETWORK_init+0x236>
 802096a:	480f      	ldr	r0, [pc, #60]	; (80209a8 <NETWORK_init+0x3fc>)
 802096c:	215c      	movs	r1, #92	; 0x5c
 802096e:	f01e fcf6 	bl	803f35e <strrchr>
 8020972:	b1a0      	cbz	r0, 802099e <NETWORK_init+0x3f2>
 8020974:	215c      	movs	r1, #92	; 0x5c
 8020976:	480c      	ldr	r0, [pc, #48]	; (80209a8 <NETWORK_init+0x3fc>)
 8020978:	f01e fcf1 	bl	803f35e <strrchr>
 802097c:	1c41      	adds	r1, r0, #1
 802097e:	e77c      	b.n	802087a <NETWORK_init+0x2ce>
 8020980:	4909      	ldr	r1, [pc, #36]	; (80209a8 <NETWORK_init+0x3fc>)
 8020982:	e73c      	b.n	80207fe <NETWORK_init+0x252>
 8020984:	4808      	ldr	r0, [pc, #32]	; (80209a8 <NETWORK_init+0x3fc>)
 8020986:	215c      	movs	r1, #92	; 0x5c
 8020988:	f01e fce9 	bl	803f35e <strrchr>
 802098c:	b148      	cbz	r0, 80209a2 <NETWORK_init+0x3f6>
 802098e:	215c      	movs	r1, #92	; 0x5c
 8020990:	4805      	ldr	r0, [pc, #20]	; (80209a8 <NETWORK_init+0x3fc>)
 8020992:	f01e fce4 	bl	803f35e <strrchr>
 8020996:	1c41      	adds	r1, r0, #1
 8020998:	e7cc      	b.n	8020934 <NETWORK_init+0x388>
 802099a:	4903      	ldr	r1, [pc, #12]	; (80209a8 <NETWORK_init+0x3fc>)
 802099c:	e74e      	b.n	802083c <NETWORK_init+0x290>
 802099e:	4902      	ldr	r1, [pc, #8]	; (80209a8 <NETWORK_init+0x3fc>)
 80209a0:	e76b      	b.n	802087a <NETWORK_init+0x2ce>
 80209a2:	4901      	ldr	r1, [pc, #4]	; (80209a8 <NETWORK_init+0x3fc>)
 80209a4:	e7c6      	b.n	8020934 <NETWORK_init+0x388>
 80209a6:	bf00      	nop
 80209a8:	08042114 	.word	0x08042114
 80209ac:	080422f8 	.word	0x080422f8

080209b0 <NETWORK_writeUdp>:
 80209b0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80209b2:	460c      	mov	r4, r1
 80209b4:	b085      	sub	sp, #20
 80209b6:	b1c9      	cbz	r1, 80209ec <NETWORK_writeUdp+0x3c>
 80209b8:	2802      	cmp	r0, #2
 80209ba:	4606      	mov	r6, r0
 80209bc:	d816      	bhi.n	80209ec <NETWORK_writeUdp+0x3c>
 80209be:	4615      	mov	r5, r2
 80209c0:	b9ba      	cbnz	r2, 80209f2 <NETWORK_writeUdp+0x42>
 80209c2:	2001      	movs	r0, #1
 80209c4:	b005      	add	sp, #20
 80209c6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80209c8:	4845      	ldr	r0, [pc, #276]	; (8020ae0 <NETWORK_writeUdp+0x130>)
 80209ca:	212f      	movs	r1, #47	; 0x2f
 80209cc:	f01e fcc7 	bl	803f35e <strrchr>
 80209d0:	2800      	cmp	r0, #0
 80209d2:	d068      	beq.n	8020aa6 <NETWORK_writeUdp+0xf6>
 80209d4:	212f      	movs	r1, #47	; 0x2f
 80209d6:	4842      	ldr	r0, [pc, #264]	; (8020ae0 <NETWORK_writeUdp+0x130>)
 80209d8:	f01e fcc1 	bl	803f35e <strrchr>
 80209dc:	1c41      	adds	r1, r0, #1
 80209de:	4b41      	ldr	r3, [pc, #260]	; (8020ae4 <NETWORK_writeUdp+0x134>)
 80209e0:	9400      	str	r4, [sp, #0]
 80209e2:	f240 1215 	movw	r2, #277	; 0x115
 80209e6:	2000      	movs	r0, #0
 80209e8:	f001 fed6 	bl	8022798 <DEBUG_logMsg>
 80209ec:	2000      	movs	r0, #0
 80209ee:	b005      	add	sp, #20
 80209f0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80209f2:	483d      	ldr	r0, [pc, #244]	; (8020ae8 <NETWORK_writeUdp+0x138>)
 80209f4:	f04f 33ff 	mov.w	r3, #4294967295
 80209f8:	222c      	movs	r2, #44	; 0x2c
 80209fa:	a903      	add	r1, sp, #12
 80209fc:	f017 fb0e 	bl	803801c <_nx_packet_allocate>
 8020a00:	4607      	mov	r7, r0
 8020a02:	2800      	cmp	r0, #0
 8020a04:	d131      	bne.n	8020a6a <NETWORK_writeUdp+0xba>
 8020a06:	f04f 33ff 	mov.w	r3, #4294967295
 8020a0a:	4621      	mov	r1, r4
 8020a0c:	9300      	str	r3, [sp, #0]
 8020a0e:	9803      	ldr	r0, [sp, #12]
 8020a10:	4b35      	ldr	r3, [pc, #212]	; (8020ae8 <NETWORK_writeUdp+0x138>)
 8020a12:	462a      	mov	r2, r5
 8020a14:	f017 fba0 	bl	8038158 <_nx_packet_data_append>
 8020a18:	4604      	mov	r4, r0
 8020a1a:	2800      	cmp	r0, #0
 8020a1c:	d1d4      	bne.n	80209c8 <NETWORK_writeUdp+0x18>
 8020a1e:	4833      	ldr	r0, [pc, #204]	; (8020aec <NETWORK_writeUdp+0x13c>)
 8020a20:	9903      	ldr	r1, [sp, #12]
 8020a22:	2394      	movs	r3, #148	; 0x94
 8020a24:	fb03 f606 	mul.w	r6, r3, r6
 8020a28:	1982      	adds	r2, r0, r6
 8020a2a:	3610      	adds	r6, #16
 8020a2c:	8913      	ldrh	r3, [r2, #8]
 8020a2e:	6852      	ldr	r2, [r2, #4]
 8020a30:	4430      	add	r0, r6
 8020a32:	f018 f8ed 	bl	8038c10 <_nx_udp_socket_send>
 8020a36:	4604      	mov	r4, r0
 8020a38:	2800      	cmp	r0, #0
 8020a3a:	d0c2      	beq.n	80209c2 <NETWORK_writeUdp+0x12>
 8020a3c:	9803      	ldr	r0, [sp, #12]
 8020a3e:	f017 fceb 	bl	8038418 <_nx_packet_release>
 8020a42:	4827      	ldr	r0, [pc, #156]	; (8020ae0 <NETWORK_writeUdp+0x130>)
 8020a44:	212f      	movs	r1, #47	; 0x2f
 8020a46:	f01e fc8a 	bl	803f35e <strrchr>
 8020a4a:	2800      	cmp	r0, #0
 8020a4c:	d03a      	beq.n	8020ac4 <NETWORK_writeUdp+0x114>
 8020a4e:	212f      	movs	r1, #47	; 0x2f
 8020a50:	4823      	ldr	r0, [pc, #140]	; (8020ae0 <NETWORK_writeUdp+0x130>)
 8020a52:	f01e fc84 	bl	803f35e <strrchr>
 8020a56:	1c41      	adds	r1, r0, #1
 8020a58:	2000      	movs	r0, #0
 8020a5a:	4b25      	ldr	r3, [pc, #148]	; (8020af0 <NETWORK_writeUdp+0x140>)
 8020a5c:	9400      	str	r4, [sp, #0]
 8020a5e:	f240 121d 	movw	r2, #285	; 0x11d
 8020a62:	f001 fe99 	bl	8022798 <DEBUG_logMsg>
 8020a66:	2000      	movs	r0, #0
 8020a68:	e7ac      	b.n	80209c4 <NETWORK_writeUdp+0x14>
 8020a6a:	481d      	ldr	r0, [pc, #116]	; (8020ae0 <NETWORK_writeUdp+0x130>)
 8020a6c:	212f      	movs	r1, #47	; 0x2f
 8020a6e:	f01e fc76 	bl	803f35e <strrchr>
 8020a72:	b168      	cbz	r0, 8020a90 <NETWORK_writeUdp+0xe0>
 8020a74:	212f      	movs	r1, #47	; 0x2f
 8020a76:	481a      	ldr	r0, [pc, #104]	; (8020ae0 <NETWORK_writeUdp+0x130>)
 8020a78:	f01e fc71 	bl	803f35e <strrchr>
 8020a7c:	1c41      	adds	r1, r0, #1
 8020a7e:	2000      	movs	r0, #0
 8020a80:	4b1c      	ldr	r3, [pc, #112]	; (8020af4 <NETWORK_writeUdp+0x144>)
 8020a82:	9700      	str	r7, [sp, #0]
 8020a84:	f44f 7287 	mov.w	r2, #270	; 0x10e
 8020a88:	f001 fe86 	bl	8022798 <DEBUG_logMsg>
 8020a8c:	2000      	movs	r0, #0
 8020a8e:	e799      	b.n	80209c4 <NETWORK_writeUdp+0x14>
 8020a90:	4813      	ldr	r0, [pc, #76]	; (8020ae0 <NETWORK_writeUdp+0x130>)
 8020a92:	215c      	movs	r1, #92	; 0x5c
 8020a94:	f01e fc63 	bl	803f35e <strrchr>
 8020a98:	b180      	cbz	r0, 8020abc <NETWORK_writeUdp+0x10c>
 8020a9a:	215c      	movs	r1, #92	; 0x5c
 8020a9c:	4810      	ldr	r0, [pc, #64]	; (8020ae0 <NETWORK_writeUdp+0x130>)
 8020a9e:	f01e fc5e 	bl	803f35e <strrchr>
 8020aa2:	1c41      	adds	r1, r0, #1
 8020aa4:	e7eb      	b.n	8020a7e <NETWORK_writeUdp+0xce>
 8020aa6:	480e      	ldr	r0, [pc, #56]	; (8020ae0 <NETWORK_writeUdp+0x130>)
 8020aa8:	215c      	movs	r1, #92	; 0x5c
 8020aaa:	f01e fc58 	bl	803f35e <strrchr>
 8020aae:	b138      	cbz	r0, 8020ac0 <NETWORK_writeUdp+0x110>
 8020ab0:	215c      	movs	r1, #92	; 0x5c
 8020ab2:	480b      	ldr	r0, [pc, #44]	; (8020ae0 <NETWORK_writeUdp+0x130>)
 8020ab4:	f01e fc53 	bl	803f35e <strrchr>
 8020ab8:	1c41      	adds	r1, r0, #1
 8020aba:	e790      	b.n	80209de <NETWORK_writeUdp+0x2e>
 8020abc:	4908      	ldr	r1, [pc, #32]	; (8020ae0 <NETWORK_writeUdp+0x130>)
 8020abe:	e7de      	b.n	8020a7e <NETWORK_writeUdp+0xce>
 8020ac0:	4907      	ldr	r1, [pc, #28]	; (8020ae0 <NETWORK_writeUdp+0x130>)
 8020ac2:	e78c      	b.n	80209de <NETWORK_writeUdp+0x2e>
 8020ac4:	4806      	ldr	r0, [pc, #24]	; (8020ae0 <NETWORK_writeUdp+0x130>)
 8020ac6:	215c      	movs	r1, #92	; 0x5c
 8020ac8:	f01e fc49 	bl	803f35e <strrchr>
 8020acc:	b128      	cbz	r0, 8020ada <NETWORK_writeUdp+0x12a>
 8020ace:	215c      	movs	r1, #92	; 0x5c
 8020ad0:	4803      	ldr	r0, [pc, #12]	; (8020ae0 <NETWORK_writeUdp+0x130>)
 8020ad2:	f01e fc44 	bl	803f35e <strrchr>
 8020ad6:	1c41      	adds	r1, r0, #1
 8020ad8:	e7be      	b.n	8020a58 <NETWORK_writeUdp+0xa8>
 8020ada:	4901      	ldr	r1, [pc, #4]	; (8020ae0 <NETWORK_writeUdp+0x130>)
 8020adc:	e7bc      	b.n	8020a58 <NETWORK_writeUdp+0xa8>
 8020ade:	bf00      	nop
 8020ae0:	08042114 	.word	0x08042114
 8020ae4:	08042360 	.word	0x08042360
 8020ae8:	20002528 	.word	0x20002528
 8020aec:	200033a0 	.word	0x200033a0
 8020af0:	0804238c 	.word	0x0804238c
 8020af4:	08042330 	.word	0x08042330

08020af8 <checkStackUsage()>:
 8020af8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8020afc:	4d2c      	ldr	r5, [pc, #176]	; (8020bb0 <checkStackUsage()+0xb8>)
 8020afe:	f895 3060 	ldrb.w	r3, [r5, #96]	; 0x60
 8020b02:	b08c      	sub	sp, #48	; 0x30
 8020b04:	2b00      	cmp	r3, #0
 8020b06:	d046      	beq.n	8020b96 <checkStackUsage()+0x9e>
 8020b08:	2600      	movs	r6, #0
 8020b0a:	f8df 80a8 	ldr.w	r8, [pc, #168]	; 8020bb4 <checkStackUsage()+0xbc>
 8020b0e:	f8df 90a8 	ldr.w	r9, [pc, #168]	; 8020bb8 <checkStackUsage()+0xc0>
 8020b12:	4633      	mov	r3, r6
 8020b14:	2764      	movs	r7, #100	; 0x64
 8020b16:	f855 a023 	ldr.w	sl, [r5, r3, lsl #2]
 8020b1a:	f103 000c 	add.w	r0, r3, #12
 8020b1e:	f8da 4010 	ldr.w	r4, [sl, #16]
 8020b22:	f8da 30ac 	ldr.w	r3, [sl, #172]	; 0xac
 8020b26:	f855 2020 	ldr.w	r2, [r5, r0, lsl #2]
 8020b2a:	f8da 1014 	ldr.w	r1, [sl, #20]
 8020b2e:	1ae4      	subs	r4, r4, r3
 8020b30:	fb07 f404 	mul.w	r4, r7, r4
 8020b34:	fbb4 f4f1 	udiv	r4, r4, r1
 8020b38:	42a2      	cmp	r2, r4
 8020b3a:	d226      	bcs.n	8020b8a <checkStackUsage()+0x92>
 8020b3c:	2c4a      	cmp	r4, #74	; 0x4a
 8020b3e:	f845 4020 	str.w	r4, [r5, r0, lsl #2]
 8020b42:	d922      	bls.n	8020b8a <checkStackUsage()+0x92>
 8020b44:	a803      	add	r0, sp, #12
 8020b46:	2220      	movs	r2, #32
 8020b48:	b1fb      	cbz	r3, 8020b8a <checkStackUsage()+0x92>
 8020b4a:	f8da 1028 	ldr.w	r1, [sl, #40]	; 0x28
 8020b4e:	f88d 402d 	strb.w	r4, [sp, #45]	; 0x2d
 8020b52:	f01e fbdb 	bl	803f30c <strncpy>
 8020b56:	a903      	add	r1, sp, #12
 8020b58:	2222      	movs	r2, #34	; 0x22
 8020b5a:	2004      	movs	r0, #4
 8020b5c:	f003 fa44 	bl	8023fe8 <CCP_sendPriorityMessage>
 8020b60:	212f      	movs	r1, #47	; 0x2f
 8020b62:	4640      	mov	r0, r8
 8020b64:	f01e fbfb 	bl	803f35e <strrchr>
 8020b68:	4603      	mov	r3, r0
 8020b6a:	212f      	movs	r1, #47	; 0x2f
 8020b6c:	4640      	mov	r0, r8
 8020b6e:	b1ab      	cbz	r3, 8020b9c <checkStackUsage()+0xa4>
 8020b70:	f01e fbf5 	bl	803f35e <strrchr>
 8020b74:	1c41      	adds	r1, r0, #1
 8020b76:	9401      	str	r4, [sp, #4]
 8020b78:	f8da 3028 	ldr.w	r3, [sl, #40]	; 0x28
 8020b7c:	9300      	str	r3, [sp, #0]
 8020b7e:	f240 2251 	movw	r2, #593	; 0x251
 8020b82:	2001      	movs	r0, #1
 8020b84:	464b      	mov	r3, r9
 8020b86:	f001 fe07 	bl	8022798 <DEBUG_logMsg>
 8020b8a:	f895 2060 	ldrb.w	r2, [r5, #96]	; 0x60
 8020b8e:	3601      	adds	r6, #1
 8020b90:	b2f3      	uxtb	r3, r6
 8020b92:	429a      	cmp	r2, r3
 8020b94:	d8bf      	bhi.n	8020b16 <checkStackUsage()+0x1e>
 8020b96:	b00c      	add	sp, #48	; 0x30
 8020b98:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8020b9c:	215c      	movs	r1, #92	; 0x5c
 8020b9e:	f01e fbde 	bl	803f35e <strrchr>
 8020ba2:	4603      	mov	r3, r0
 8020ba4:	215c      	movs	r1, #92	; 0x5c
 8020ba6:	4640      	mov	r0, r8
 8020ba8:	2b00      	cmp	r3, #0
 8020baa:	d1e1      	bne.n	8020b70 <checkStackUsage()+0x78>
 8020bac:	4641      	mov	r1, r8
 8020bae:	e7e2      	b.n	8020b76 <checkStackUsage()+0x7e>
 8020bb0:	20003634 	.word	0x20003634
 8020bb4:	080423b8 	.word	0x080423b8
 8020bb8:	080423f0 	.word	0x080423f0

08020bbc <SYSTEM_init>:
 8020bbc:	b508      	push	{r3, lr}
 8020bbe:	2264      	movs	r2, #100	; 0x64
 8020bc0:	2100      	movs	r1, #0
 8020bc2:	480c      	ldr	r0, [pc, #48]	; (8020bf4 <SYSTEM_init+0x38>)
 8020bc4:	f01e fd46 	bl	803f654 <memset>
 8020bc8:	4b0b      	ldr	r3, [pc, #44]	; (8020bf8 <SYSTEM_init+0x3c>)
 8020bca:	4a0c      	ldr	r2, [pc, #48]	; (8020bfc <SYSTEM_init+0x40>)
 8020bcc:	2100      	movs	r1, #0
 8020bce:	7011      	strb	r1, [r2, #0]
 8020bd0:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8020bd2:	f442 2280 	orr.w	r2, r2, #262144	; 0x40000
 8020bd6:	625a      	str	r2, [r3, #36]	; 0x24
 8020bd8:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8020bda:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
 8020bde:	625a      	str	r2, [r3, #36]	; 0x24
 8020be0:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8020be2:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 8020be6:	625a      	str	r2, [r3, #36]	; 0x24
 8020be8:	695a      	ldr	r2, [r3, #20]
 8020bea:	f042 0210 	orr.w	r2, r2, #16
 8020bee:	615a      	str	r2, [r3, #20]
 8020bf0:	bd08      	pop	{r3, pc}
 8020bf2:	bf00      	nop
 8020bf4:	20003634 	.word	0x20003634
 8020bf8:	e000ed00 	.word	0xe000ed00
 8020bfc:	20003698 	.word	0x20003698

08020c00 <SYSTEM_enterThread>:
 8020c00:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020c04:	4f36      	ldr	r7, [pc, #216]	; (8020ce0 <SYSTEM_enterThread+0xe0>)
 8020c06:	b085      	sub	sp, #20
 8020c08:	2600      	movs	r6, #0
 8020c0a:	603e      	str	r6, [r7, #0]
 8020c0c:	9603      	str	r6, [sp, #12]
 8020c0e:	f001 fd87 	bl	8022720 <DEBUG_init>
 8020c12:	4834      	ldr	r0, [pc, #208]	; (8020ce4 <SYSTEM_enterThread+0xe4>)
 8020c14:	f001 fdac 	bl	8022770 <DEBUG_registerPrintFunction>
 8020c18:	4833      	ldr	r0, [pc, #204]	; (8020ce8 <SYSTEM_enterThread+0xe8>)
 8020c1a:	f001 fdaf 	bl	802277c <DEBUG_registerSubtaskSendFunction>
 8020c1e:	4833      	ldr	r0, [pc, #204]	; (8020cec <SYSTEM_enterThread+0xec>)
 8020c20:	f01e f9ba 	bl	803ef98 <printf>
 8020c24:	4832      	ldr	r0, [pc, #200]	; (8020cf0 <SYSTEM_enterThread+0xf0>)
 8020c26:	f01e f9b7 	bl	803ef98 <printf>
 8020c2a:	4832      	ldr	r0, [pc, #200]	; (8020cf4 <SYSTEM_enterThread+0xf4>)
 8020c2c:	f01e f9b4 	bl	803ef98 <printf>
 8020c30:	4b31      	ldr	r3, [pc, #196]	; (8020cf8 <SYSTEM_enterThread+0xf8>)
 8020c32:	9300      	str	r3, [sp, #0]
 8020c34:	4632      	mov	r2, r6
 8020c36:	4631      	mov	r1, r6
 8020c38:	232b      	movs	r3, #43	; 0x2b
 8020c3a:	4830      	ldr	r0, [pc, #192]	; (8020cfc <SYSTEM_enterThread+0xfc>)
 8020c3c:	f01e f9ac 	bl	803ef98 <printf>
 8020c40:	482f      	ldr	r0, [pc, #188]	; (8020d00 <SYSTEM_enterThread+0x100>)
 8020c42:	f01e f9a9 	bl	803ef98 <printf>
 8020c46:	482f      	ldr	r0, [pc, #188]	; (8020d04 <SYSTEM_enterThread+0x104>)
 8020c48:	f01e f9a6 	bl	803ef98 <printf>
 8020c4c:	f014 f8da 	bl	8034e04 <HWM_init>
 8020c50:	f241 3288 	movw	r2, #5000	; 0x1388
 8020c54:	9200      	str	r2, [sp, #0]
 8020c56:	482c      	ldr	r0, [pc, #176]	; (8020d08 <SYSTEM_enterThread+0x108>)
 8020c58:	ab03      	add	r3, sp, #12
 8020c5a:	2203      	movs	r2, #3
 8020c5c:	21ff      	movs	r1, #255	; 0xff
 8020c5e:	f018 fa11 	bl	8039084 <_tx_event_flags_get>
 8020c62:	2807      	cmp	r0, #7
 8020c64:	d102      	bne.n	8020c6c <SYSTEM_enterThread+0x6c>
 8020c66:	4b29      	ldr	r3, [pc, #164]	; (8020d0c <SYSTEM_enterThread+0x10c>)
 8020c68:	2204      	movs	r2, #4
 8020c6a:	831a      	strh	r2, [r3, #24]
 8020c6c:	f013 f8fe 	bl	8033e6c <STATUSLED_autoUpdateInitialize>
 8020c70:	f00c fb66 	bl	802d340 <TIME_getTimeMsec>
 8020c74:	f8df 9090 	ldr.w	r9, [pc, #144]	; 8020d08 <SYSTEM_enterThread+0x108>
 8020c78:	4b25      	ldr	r3, [pc, #148]	; (8020d10 <SYSTEM_enterThread+0x110>)
 8020c7a:	f8df 8090 	ldr.w	r8, [pc, #144]	; 8020d0c <SYSTEM_enterThread+0x10c>
 8020c7e:	603b      	str	r3, [r7, #0]
 8020c80:	4606      	mov	r6, r0
 8020c82:	f04f 0a00 	mov.w	sl, #0
 8020c86:	f241 3388 	movw	r3, #5000	; 0x1388
 8020c8a:	9300      	str	r3, [sp, #0]
 8020c8c:	2202      	movs	r2, #2
 8020c8e:	ab03      	add	r3, sp, #12
 8020c90:	21ff      	movs	r1, #255	; 0xff
 8020c92:	4648      	mov	r0, r9
 8020c94:	f018 f9f6 	bl	8039084 <_tx_event_flags_get>
 8020c98:	2807      	cmp	r0, #7
 8020c9a:	f04f 0b00 	mov.w	fp, #0
 8020c9e:	d01c      	beq.n	8020cda <SYSTEM_enterThread+0xda>
 8020ca0:	2202      	movs	r2, #2
 8020ca2:	2100      	movs	r1, #0
 8020ca4:	4648      	mov	r0, r9
 8020ca6:	f018 fa67 	bl	8039178 <_tx_event_flags_set>
 8020caa:	f8d8 3014 	ldr.w	r3, [r8, #20]
 8020cae:	f083 0308 	eor.w	r3, r3, #8
 8020cb2:	f8c8 3014 	str.w	r3, [r8, #20]
 8020cb6:	f00c fb43 	bl	802d340 <TIME_getTimeMsec>
 8020cba:	1b84      	subs	r4, r0, r6
 8020cbc:	eb6b 050a 	sbc.w	r5, fp, sl
 8020cc0:	2300      	movs	r3, #0
 8020cc2:	f242 7210 	movw	r2, #10000	; 0x2710
 8020cc6:	42ab      	cmp	r3, r5
 8020cc8:	bf08      	it	eq
 8020cca:	42a2      	cmpeq	r2, r4
 8020ccc:	4607      	mov	r7, r0
 8020cce:	d2da      	bcs.n	8020c86 <SYSTEM_enterThread+0x86>
 8020cd0:	f7ff ff12 	bl	8020af8 <checkStackUsage()>
 8020cd4:	463e      	mov	r6, r7
 8020cd6:	46da      	mov	sl, fp
 8020cd8:	e7d5      	b.n	8020c86 <SYSTEM_enterThread+0x86>
 8020cda:	f7ff ff0d 	bl	8020af8 <checkStackUsage()>
 8020cde:	e7df      	b.n	8020ca0 <SYSTEM_enterThread+0xa0>
 8020ce0:	2000369c 	.word	0x2000369c
 8020ce4:	080241c9 	.word	0x080241c9
 8020ce8:	08024235 	.word	0x08024235
 8020cec:	08042418 	.word	0x08042418
 8020cf0:	08042444 	.word	0x08042444
 8020cf4:	08042468 	.word	0x08042468
 8020cf8:	080424a8 	.word	0x080424a8
 8020cfc:	08042490 	.word	0x08042490
 8020d00:	080424b8 	.word	0x080424b8
 8020d04:	08047478 	.word	0x08047478
 8020d08:	20003610 	.word	0x20003610
 8020d0c:	40021c00 	.word	0x40021c00
 8020d10:	07572f08 	.word	0x07572f08

08020d14 <SYSTEM_areThreadsRunning>:
 8020d14:	4a03      	ldr	r2, [pc, #12]	; (8020d24 <SYSTEM_areThreadsRunning+0x10>)
 8020d16:	4b04      	ldr	r3, [pc, #16]	; (8020d28 <SYSTEM_areThreadsRunning+0x14>)
 8020d18:	6810      	ldr	r0, [r2, #0]
 8020d1a:	1ac0      	subs	r0, r0, r3
 8020d1c:	fab0 f080 	clz	r0, r0
 8020d20:	0940      	lsrs	r0, r0, #5
 8020d22:	4770      	bx	lr
 8020d24:	2000369c 	.word	0x2000369c
 8020d28:	07572f08 	.word	0x07572f08

08020d2c <SYSTEM_setThreadFlag>:
 8020d2c:	4601      	mov	r1, r0
 8020d2e:	2200      	movs	r2, #0
 8020d30:	4801      	ldr	r0, [pc, #4]	; (8020d38 <SYSTEM_setThreadFlag+0xc>)
 8020d32:	f018 ba21 	b.w	8039178 <_tx_event_flags_set>
 8020d36:	bf00      	nop
 8020d38:	20003610 	.word	0x20003610

08020d3c <SYSTEM_registerThread>:
 8020d3c:	4a04      	ldr	r2, [pc, #16]	; (8020d50 <SYSTEM_registerThread+0x14>)
 8020d3e:	f892 3060 	ldrb.w	r3, [r2, #96]	; 0x60
 8020d42:	f842 0023 	str.w	r0, [r2, r3, lsl #2]
 8020d46:	3301      	adds	r3, #1
 8020d48:	f882 3060 	strb.w	r3, [r2, #96]	; 0x60
 8020d4c:	4770      	bx	lr
 8020d4e:	bf00      	nop
 8020d50:	20003634 	.word	0x20003634

08020d54 <SYSTEM_printStackInformation>:
 8020d54:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8020d58:	4e49      	ldr	r6, [pc, #292]	; (8020e80 <SYSTEM_printStackInformation+0x12c>)
 8020d5a:	b084      	sub	sp, #16
 8020d5c:	f896 3060 	ldrb.w	r3, [r6, #96]	; 0x60
 8020d60:	2800      	cmp	r0, #0
 8020d62:	d141      	bne.n	8020de8 <SYSTEM_printStackInformation+0x94>
 8020d64:	2b00      	cmp	r3, #0
 8020d66:	d03c      	beq.n	8020de2 <SYSTEM_printStackInformation+0x8e>
 8020d68:	2500      	movs	r5, #0
 8020d6a:	4f46      	ldr	r7, [pc, #280]	; (8020e84 <SYSTEM_printStackInformation+0x130>)
 8020d6c:	f8df 811c 	ldr.w	r8, [pc, #284]	; 8020e8c <SYSTEM_printStackInformation+0x138>
 8020d70:	462b      	mov	r3, r5
 8020d72:	e021      	b.n	8020db8 <SYSTEM_printStackInformation+0x64>
 8020d74:	f01e faf3 	bl	803f35e <strrchr>
 8020d78:	1c41      	adds	r1, r0, #1
 8020d7a:	6920      	ldr	r0, [r4, #16]
 8020d7c:	f8d4 c0ac 	ldr.w	ip, [r4, #172]	; 0xac
 8020d80:	f8d4 e014 	ldr.w	lr, [r4, #20]
 8020d84:	f8cd e008 	str.w	lr, [sp, #8]
 8020d88:	eba0 0c0c 	sub.w	ip, r0, ip
 8020d8c:	2364      	movs	r3, #100	; 0x64
 8020d8e:	fb03 f30c 	mul.w	r3, r3, ip
 8020d92:	fbb3 f3fe 	udiv	r3, r3, lr
 8020d96:	9303      	str	r3, [sp, #12]
 8020d98:	68e3      	ldr	r3, [r4, #12]
 8020d9a:	9301      	str	r3, [sp, #4]
 8020d9c:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 8020d9e:	9300      	str	r3, [sp, #0]
 8020da0:	f240 124b 	movw	r2, #331	; 0x14b
 8020da4:	4643      	mov	r3, r8
 8020da6:	2002      	movs	r0, #2
 8020da8:	f001 fcf6 	bl	8022798 <DEBUG_logMsg>
 8020dac:	3501      	adds	r5, #1
 8020dae:	f896 2060 	ldrb.w	r2, [r6, #96]	; 0x60
 8020db2:	b2eb      	uxtb	r3, r5
 8020db4:	429a      	cmp	r2, r3
 8020db6:	d914      	bls.n	8020de2 <SYSTEM_printStackInformation+0x8e>
 8020db8:	212f      	movs	r1, #47	; 0x2f
 8020dba:	4638      	mov	r0, r7
 8020dbc:	f856 4023 	ldr.w	r4, [r6, r3, lsl #2]
 8020dc0:	f01e facd 	bl	803f35e <strrchr>
 8020dc4:	4603      	mov	r3, r0
 8020dc6:	212f      	movs	r1, #47	; 0x2f
 8020dc8:	4638      	mov	r0, r7
 8020dca:	2b00      	cmp	r3, #0
 8020dcc:	d1d2      	bne.n	8020d74 <SYSTEM_printStackInformation+0x20>
 8020dce:	215c      	movs	r1, #92	; 0x5c
 8020dd0:	f01e fac5 	bl	803f35e <strrchr>
 8020dd4:	4603      	mov	r3, r0
 8020dd6:	215c      	movs	r1, #92	; 0x5c
 8020dd8:	4638      	mov	r0, r7
 8020dda:	2b00      	cmp	r3, #0
 8020ddc:	d1ca      	bne.n	8020d74 <SYSTEM_printStackInformation+0x20>
 8020dde:	4639      	mov	r1, r7
 8020de0:	e7cb      	b.n	8020d7a <SYSTEM_printStackInformation+0x26>
 8020de2:	b004      	add	sp, #16
 8020de4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8020de8:	2b00      	cmp	r3, #0
 8020dea:	d0fa      	beq.n	8020de2 <SYSTEM_printStackInformation+0x8e>
 8020dec:	2500      	movs	r5, #0
 8020dee:	4f26      	ldr	r7, [pc, #152]	; (8020e88 <SYSTEM_printStackInformation+0x134>)
 8020df0:	462c      	mov	r4, r5
 8020df2:	e007      	b.n	8020e04 <SYSTEM_printStackInformation+0xb0>
 8020df4:	f019 f80c 	bl	8039e10 <_tx_thread_interrupt_control>
 8020df8:	3501      	adds	r5, #1
 8020dfa:	f896 3060 	ldrb.w	r3, [r6, #96]	; 0x60
 8020dfe:	b2ec      	uxtb	r4, r5
 8020e00:	42a3      	cmp	r3, r4
 8020e02:	d9af      	bls.n	8020d64 <SYSTEM_printStackInformation+0x10>
 8020e04:	2001      	movs	r0, #1
 8020e06:	f019 f803 	bl	8039e10 <_tx_thread_interrupt_control>
 8020e0a:	f856 3024 	ldr.w	r3, [r6, r4, lsl #2]
 8020e0e:	2b00      	cmp	r3, #0
 8020e10:	d0f0      	beq.n	8020df4 <SYSTEM_printStackInformation+0xa0>
 8020e12:	681a      	ldr	r2, [r3, #0]
 8020e14:	42ba      	cmp	r2, r7
 8020e16:	d1ed      	bne.n	8020df4 <SYSTEM_printStackInformation+0xa0>
 8020e18:	689a      	ldr	r2, [r3, #8]
 8020e1a:	f8d3 10ac 	ldr.w	r1, [r3, #172]	; 0xac
 8020e1e:	428a      	cmp	r2, r1
 8020e20:	bf38      	it	cc
 8020e22:	f8c3 20ac 	strcc.w	r2, [r3, #172]	; 0xac
 8020e26:	68da      	ldr	r2, [r3, #12]
 8020e28:	6811      	ldr	r1, [r2, #0]
 8020e2a:	f1b1 3fef 	cmp.w	r1, #4025479151	; 0xefefefef
 8020e2e:	d105      	bne.n	8020e3c <SYSTEM_printStackInformation+0xe8>
 8020e30:	6919      	ldr	r1, [r3, #16]
 8020e32:	f8d1 1001 	ldr.w	r1, [r1, #1]
 8020e36:	f1b1 3fef 	cmp.w	r1, #4025479151	; 0xefefefef
 8020e3a:	d01b      	beq.n	8020e74 <SYSTEM_printStackInformation+0x120>
 8020e3c:	f018 ffe8 	bl	8039e10 <_tx_thread_interrupt_control>
 8020e40:	f856 0024 	ldr.w	r0, [r6, r4, lsl #2]
 8020e44:	f019 f91c 	bl	803a080 <_tx_thread_stack_error_handler>
 8020e48:	2001      	movs	r0, #1
 8020e4a:	f018 ffe1 	bl	8039e10 <_tx_thread_interrupt_control>
 8020e4e:	f856 3024 	ldr.w	r3, [r6, r4, lsl #2]
 8020e52:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
 8020e56:	f853 3c04 	ldr.w	r3, [r3, #-4]
 8020e5a:	f1b3 3fef 	cmp.w	r3, #4025479151	; 0xefefefef
 8020e5e:	d0c9      	beq.n	8020df4 <SYSTEM_printStackInformation+0xa0>
 8020e60:	f018 ffd6 	bl	8039e10 <_tx_thread_interrupt_control>
 8020e64:	f856 0024 	ldr.w	r0, [r6, r4, lsl #2]
 8020e68:	f019 f8a2 	bl	8039fb0 <_tx_thread_stack_analyze>
 8020e6c:	2001      	movs	r0, #1
 8020e6e:	f018 ffcf 	bl	8039e10 <_tx_thread_interrupt_control>
 8020e72:	e7bf      	b.n	8020df4 <SYSTEM_printStackInformation+0xa0>
 8020e74:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
 8020e78:	429a      	cmp	r2, r3
 8020e7a:	d9ec      	bls.n	8020e56 <SYSTEM_printStackInformation+0x102>
 8020e7c:	e7de      	b.n	8020e3c <SYSTEM_printStackInformation+0xe8>
 8020e7e:	bf00      	nop
 8020e80:	20003634 	.word	0x20003634
 8020e84:	080423b8 	.word	0x080423b8
 8020e88:	54485244 	.word	0x54485244
 8020e8c:	080424d8 	.word	0x080424d8

08020e90 <SYSTEM_checkCrashLog>:
 8020e90:	b5f0      	push	{r4, r5, r6, r7, lr}
 8020e92:	b0e9      	sub	sp, #420	; 0x1a4
 8020e94:	49bb      	ldr	r1, [pc, #748]	; (8021184 <SYSTEM_checkCrashLog+0x2f4>)
 8020e96:	48bc      	ldr	r0, [pc, #752]	; (8021188 <SYSTEM_checkCrashLog+0x2f8>)
 8020e98:	aa0e      	add	r2, sp, #56	; 0x38
 8020e9a:	f44f 73b4 	mov.w	r3, #360	; 0x168
 8020e9e:	f010 fc5b 	bl	8031758 <NVM_load>
 8020ea2:	b108      	cbz	r0, 8020ea8 <SYSTEM_checkCrashLog+0x18>
 8020ea4:	b069      	add	sp, #420	; 0x1a4
 8020ea6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8020ea8:	48b8      	ldr	r0, [pc, #736]	; (802118c <SYSTEM_checkCrashLog+0x2fc>)
 8020eaa:	212f      	movs	r1, #47	; 0x2f
 8020eac:	f01e fa57 	bl	803f35e <strrchr>
 8020eb0:	2800      	cmp	r0, #0
 8020eb2:	f000 8159 	beq.w	8021168 <SYSTEM_checkCrashLog+0x2d8>
 8020eb6:	212f      	movs	r1, #47	; 0x2f
 8020eb8:	48b4      	ldr	r0, [pc, #720]	; (802118c <SYSTEM_checkCrashLog+0x2fc>)
 8020eba:	f01e fa50 	bl	803f35e <strrchr>
 8020ebe:	1c41      	adds	r1, r0, #1
 8020ec0:	2002      	movs	r0, #2
 8020ec2:	4bb3      	ldr	r3, [pc, #716]	; (8021190 <SYSTEM_checkCrashLog+0x300>)
 8020ec4:	f240 1275 	movw	r2, #373	; 0x175
 8020ec8:	f001 fc66 	bl	8022798 <DEBUG_logMsg>
 8020ecc:	48af      	ldr	r0, [pc, #700]	; (802118c <SYSTEM_checkCrashLog+0x2fc>)
 8020ece:	212f      	movs	r1, #47	; 0x2f
 8020ed0:	f01e fa45 	bl	803f35e <strrchr>
 8020ed4:	2800      	cmp	r0, #0
 8020ed6:	f000 813a 	beq.w	802114e <SYSTEM_checkCrashLog+0x2be>
 8020eda:	212f      	movs	r1, #47	; 0x2f
 8020edc:	48ab      	ldr	r0, [pc, #684]	; (802118c <SYSTEM_checkCrashLog+0x2fc>)
 8020ede:	f01e fa3e 	bl	803f35e <strrchr>
 8020ee2:	1c41      	adds	r1, r0, #1
 8020ee4:	9b3e      	ldr	r3, [sp, #248]	; 0xf8
 8020ee6:	9865      	ldr	r0, [sp, #404]	; 0x194
 8020ee8:	9a44      	ldr	r2, [sp, #272]	; 0x110
 8020eea:	9200      	str	r2, [sp, #0]
 8020eec:	1a18      	subs	r0, r3, r0
 8020eee:	2364      	movs	r3, #100	; 0x64
 8020ef0:	9a3f      	ldr	r2, [sp, #252]	; 0xfc
 8020ef2:	fb03 f000 	mul.w	r0, r3, r0
 8020ef6:	4ba7      	ldr	r3, [pc, #668]	; (8021194 <SYSTEM_checkCrashLog+0x304>)
 8020ef8:	fbb0 f0f2 	udiv	r0, r0, r2
 8020efc:	f44f 72bb 	mov.w	r2, #374	; 0x176
 8020f00:	9001      	str	r0, [sp, #4]
 8020f02:	2002      	movs	r0, #2
 8020f04:	f001 fc48 	bl	8022798 <DEBUG_logMsg>
 8020f08:	f89d 319c 	ldrb.w	r3, [sp, #412]	; 0x19c
 8020f0c:	489f      	ldr	r0, [pc, #636]	; (802118c <SYSTEM_checkCrashLog+0x2fc>)
 8020f0e:	212f      	movs	r1, #47	; 0x2f
 8020f10:	2b00      	cmp	r3, #0
 8020f12:	f040 80ef 	bne.w	80210f4 <SYSTEM_checkCrashLog+0x264>
 8020f16:	f01e fa22 	bl	803f35e <strrchr>
 8020f1a:	2800      	cmp	r0, #0
 8020f1c:	f000 81dd 	beq.w	80212da <SYSTEM_checkCrashLog+0x44a>
 8020f20:	212f      	movs	r1, #47	; 0x2f
 8020f22:	489a      	ldr	r0, [pc, #616]	; (802118c <SYSTEM_checkCrashLog+0x2fc>)
 8020f24:	f01e fa1b 	bl	803f35e <strrchr>
 8020f28:	1c41      	adds	r1, r0, #1
 8020f2a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8020f2c:	9300      	str	r3, [sp, #0]
 8020f2e:	2002      	movs	r0, #2
 8020f30:	4b99      	ldr	r3, [pc, #612]	; (8021198 <SYSTEM_checkCrashLog+0x308>)
 8020f32:	f44f 72c2 	mov.w	r2, #388	; 0x184
 8020f36:	f001 fc2f 	bl	8022798 <DEBUG_logMsg>
 8020f3a:	4894      	ldr	r0, [pc, #592]	; (802118c <SYSTEM_checkCrashLog+0x2fc>)
 8020f3c:	212f      	movs	r1, #47	; 0x2f
 8020f3e:	f01e fa0e 	bl	803f35e <strrchr>
 8020f42:	2800      	cmp	r0, #0
 8020f44:	f000 81e0 	beq.w	8021308 <SYSTEM_checkCrashLog+0x478>
 8020f48:	212f      	movs	r1, #47	; 0x2f
 8020f4a:	4890      	ldr	r0, [pc, #576]	; (802118c <SYSTEM_checkCrashLog+0x2fc>)
 8020f4c:	f01e fa07 	bl	803f35e <strrchr>
 8020f50:	1c41      	adds	r1, r0, #1
 8020f52:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8020f54:	9300      	str	r3, [sp, #0]
 8020f56:	2002      	movs	r0, #2
 8020f58:	4b90      	ldr	r3, [pc, #576]	; (802119c <SYSTEM_checkCrashLog+0x30c>)
 8020f5a:	f240 1285 	movw	r2, #389	; 0x185
 8020f5e:	f001 fc1b 	bl	8022798 <DEBUG_logMsg>
 8020f62:	488a      	ldr	r0, [pc, #552]	; (802118c <SYSTEM_checkCrashLog+0x2fc>)
 8020f64:	212f      	movs	r1, #47	; 0x2f
 8020f66:	f01e f9fa 	bl	803f35e <strrchr>
 8020f6a:	2800      	cmp	r0, #0
 8020f6c:	f000 819d 	beq.w	80212aa <SYSTEM_checkCrashLog+0x41a>
 8020f70:	212f      	movs	r1, #47	; 0x2f
 8020f72:	4886      	ldr	r0, [pc, #536]	; (802118c <SYSTEM_checkCrashLog+0x2fc>)
 8020f74:	f01e f9f3 	bl	803f35e <strrchr>
 8020f78:	1c41      	adds	r1, r0, #1
 8020f7a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8020f7c:	9300      	str	r3, [sp, #0]
 8020f7e:	2002      	movs	r0, #2
 8020f80:	4b87      	ldr	r3, [pc, #540]	; (80211a0 <SYSTEM_checkCrashLog+0x310>)
 8020f82:	f44f 72c3 	mov.w	r2, #390	; 0x186
 8020f86:	f001 fc07 	bl	8022798 <DEBUG_logMsg>
 8020f8a:	4880      	ldr	r0, [pc, #512]	; (802118c <SYSTEM_checkCrashLog+0x2fc>)
 8020f8c:	212f      	movs	r1, #47	; 0x2f
 8020f8e:	f01e f9e6 	bl	803f35e <strrchr>
 8020f92:	2800      	cmp	r0, #0
 8020f94:	f000 81c3 	beq.w	802131e <SYSTEM_checkCrashLog+0x48e>
 8020f98:	212f      	movs	r1, #47	; 0x2f
 8020f9a:	487c      	ldr	r0, [pc, #496]	; (802118c <SYSTEM_checkCrashLog+0x2fc>)
 8020f9c:	f01e f9df 	bl	803f35e <strrchr>
 8020fa0:	1c41      	adds	r1, r0, #1
 8020fa2:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8020fa4:	9300      	str	r3, [sp, #0]
 8020fa6:	2002      	movs	r0, #2
 8020fa8:	4b7e      	ldr	r3, [pc, #504]	; (80211a4 <SYSTEM_checkCrashLog+0x314>)
 8020faa:	f240 1287 	movw	r2, #391	; 0x187
 8020fae:	f001 fbf3 	bl	8022798 <DEBUG_logMsg>
 8020fb2:	4876      	ldr	r0, [pc, #472]	; (802118c <SYSTEM_checkCrashLog+0x2fc>)
 8020fb4:	212f      	movs	r1, #47	; 0x2f
 8020fb6:	f01e f9d2 	bl	803f35e <strrchr>
 8020fba:	2800      	cmp	r0, #0
 8020fbc:	f000 8181 	beq.w	80212c2 <SYSTEM_checkCrashLog+0x432>
 8020fc0:	212f      	movs	r1, #47	; 0x2f
 8020fc2:	4872      	ldr	r0, [pc, #456]	; (802118c <SYSTEM_checkCrashLog+0x2fc>)
 8020fc4:	f01e f9cb 	bl	803f35e <strrchr>
 8020fc8:	1c41      	adds	r1, r0, #1
 8020fca:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8020fcc:	9300      	str	r3, [sp, #0]
 8020fce:	2002      	movs	r0, #2
 8020fd0:	4b75      	ldr	r3, [pc, #468]	; (80211a8 <SYSTEM_checkCrashLog+0x318>)
 8020fd2:	f44f 72c4 	mov.w	r2, #392	; 0x188
 8020fd6:	f001 fbdf 	bl	8022798 <DEBUG_logMsg>
 8020fda:	486c      	ldr	r0, [pc, #432]	; (802118c <SYSTEM_checkCrashLog+0x2fc>)
 8020fdc:	212f      	movs	r1, #47	; 0x2f
 8020fde:	f01e f9be 	bl	803f35e <strrchr>
 8020fe2:	2800      	cmp	r0, #0
 8020fe4:	f000 8185 	beq.w	80212f2 <SYSTEM_checkCrashLog+0x462>
 8020fe8:	212f      	movs	r1, #47	; 0x2f
 8020fea:	4868      	ldr	r0, [pc, #416]	; (802118c <SYSTEM_checkCrashLog+0x2fc>)
 8020fec:	f01e f9b7 	bl	803f35e <strrchr>
 8020ff0:	1c41      	adds	r1, r0, #1
 8020ff2:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8020ff4:	9300      	str	r3, [sp, #0]
 8020ff6:	2002      	movs	r0, #2
 8020ff8:	4b6c      	ldr	r3, [pc, #432]	; (80211ac <SYSTEM_checkCrashLog+0x31c>)
 8020ffa:	f240 1289 	movw	r2, #393	; 0x189
 8020ffe:	f001 fbcb 	bl	8022798 <DEBUG_logMsg>
 8021002:	4862      	ldr	r0, [pc, #392]	; (802118c <SYSTEM_checkCrashLog+0x2fc>)
 8021004:	212f      	movs	r1, #47	; 0x2f
 8021006:	f01e f9aa 	bl	803f35e <strrchr>
 802100a:	2800      	cmp	r0, #0
 802100c:	f000 8141 	beq.w	8021292 <SYSTEM_checkCrashLog+0x402>
 8021010:	212f      	movs	r1, #47	; 0x2f
 8021012:	485e      	ldr	r0, [pc, #376]	; (802118c <SYSTEM_checkCrashLog+0x2fc>)
 8021014:	f01e f9a3 	bl	803f35e <strrchr>
 8021018:	1c41      	adds	r1, r0, #1
 802101a:	9b14      	ldr	r3, [sp, #80]	; 0x50
 802101c:	9300      	str	r3, [sp, #0]
 802101e:	2002      	movs	r0, #2
 8021020:	4b63      	ldr	r3, [pc, #396]	; (80211b0 <SYSTEM_checkCrashLog+0x320>)
 8021022:	f44f 72c5 	mov.w	r2, #394	; 0x18a
 8021026:	f001 fbb7 	bl	8022798 <DEBUG_logMsg>
 802102a:	4858      	ldr	r0, [pc, #352]	; (802118c <SYSTEM_checkCrashLog+0x2fc>)
 802102c:	212f      	movs	r1, #47	; 0x2f
 802102e:	f01e f996 	bl	803f35e <strrchr>
 8021032:	2800      	cmp	r0, #0
 8021034:	f000 8121 	beq.w	802127a <SYSTEM_checkCrashLog+0x3ea>
 8021038:	212f      	movs	r1, #47	; 0x2f
 802103a:	4854      	ldr	r0, [pc, #336]	; (802118c <SYSTEM_checkCrashLog+0x2fc>)
 802103c:	f01e f98f 	bl	803f35e <strrchr>
 8021040:	1c41      	adds	r1, r0, #1
 8021042:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8021044:	9300      	str	r3, [sp, #0]
 8021046:	2002      	movs	r0, #2
 8021048:	4b5a      	ldr	r3, [pc, #360]	; (80211b4 <SYSTEM_checkCrashLog+0x324>)
 802104a:	f240 128b 	movw	r2, #395	; 0x18b
 802104e:	f001 fba3 	bl	8022798 <DEBUG_logMsg>
 8021052:	484e      	ldr	r0, [pc, #312]	; (802118c <SYSTEM_checkCrashLog+0x2fc>)
 8021054:	212f      	movs	r1, #47	; 0x2f
 8021056:	f01e f982 	bl	803f35e <strrchr>
 802105a:	2800      	cmp	r0, #0
 802105c:	f000 8101 	beq.w	8021262 <SYSTEM_checkCrashLog+0x3d2>
 8021060:	212f      	movs	r1, #47	; 0x2f
 8021062:	484a      	ldr	r0, [pc, #296]	; (802118c <SYSTEM_checkCrashLog+0x2fc>)
 8021064:	f01e f97b 	bl	803f35e <strrchr>
 8021068:	1c41      	adds	r1, r0, #1
 802106a:	9b16      	ldr	r3, [sp, #88]	; 0x58
 802106c:	4c52      	ldr	r4, [pc, #328]	; (80211b8 <SYSTEM_checkCrashLog+0x328>)
 802106e:	9300      	str	r3, [sp, #0]
 8021070:	f44f 72c6 	mov.w	r2, #396	; 0x18c
 8021074:	4b51      	ldr	r3, [pc, #324]	; (80211bc <SYSTEM_checkCrashLog+0x32c>)
 8021076:	4e45      	ldr	r6, [pc, #276]	; (802118c <SYSTEM_checkCrashLog+0x2fc>)
 8021078:	4f51      	ldr	r7, [pc, #324]	; (80211c0 <SYSTEM_checkCrashLog+0x330>)
 802107a:	2002      	movs	r0, #2
 802107c:	f001 fb8c 	bl	8022798 <DEBUG_logMsg>
 8021080:	f104 0590 	add.w	r5, r4, #144	; 0x90
 8021084:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8021086:	2301      	movs	r3, #1
 8021088:	e003      	b.n	8021092 <SYSTEM_checkCrashLog+0x202>
 802108a:	42a5      	cmp	r5, r4
 802108c:	d01a      	beq.n	80210c4 <SYSTEM_checkCrashLog+0x234>
 802108e:	f854 3f08 	ldr.w	r3, [r4, #8]!
 8021092:	4213      	tst	r3, r2
 8021094:	d0f9      	beq.n	802108a <SYSTEM_checkCrashLog+0x1fa>
 8021096:	212f      	movs	r1, #47	; 0x2f
 8021098:	4630      	mov	r0, r6
 802109a:	f01e f960 	bl	803f35e <strrchr>
 802109e:	4603      	mov	r3, r0
 80210a0:	212f      	movs	r1, #47	; 0x2f
 80210a2:	4630      	mov	r0, r6
 80210a4:	2b00      	cmp	r3, #0
 80210a6:	d048      	beq.n	802113a <SYSTEM_checkCrashLog+0x2aa>
 80210a8:	f01e f959 	bl	803f35e <strrchr>
 80210ac:	1c41      	adds	r1, r0, #1
 80210ae:	6863      	ldr	r3, [r4, #4]
 80210b0:	9300      	str	r3, [sp, #0]
 80210b2:	f240 1293 	movw	r2, #403	; 0x193
 80210b6:	2002      	movs	r0, #2
 80210b8:	463b      	mov	r3, r7
 80210ba:	f001 fb6d 	bl	8022798 <DEBUG_logMsg>
 80210be:	42a5      	cmp	r5, r4
 80210c0:	9a21      	ldr	r2, [sp, #132]	; 0x84
 80210c2:	d1e4      	bne.n	802108e <SYSTEM_checkCrashLog+0x1fe>
 80210c4:	0411      	lsls	r1, r2, #16
 80210c6:	f100 8092 	bmi.w	80211ee <SYSTEM_checkCrashLog+0x35e>
 80210ca:	0613      	lsls	r3, r2, #24
 80210cc:	d47c      	bmi.n	80211c8 <SYSTEM_checkCrashLog+0x338>
 80210ce:	a90f      	add	r1, sp, #60	; 0x3c
 80210d0:	a802      	add	r0, sp, #8
 80210d2:	2220      	movs	r2, #32
 80210d4:	f01e fa95 	bl	803f602 <__aeabi_memcpy>
 80210d8:	e9dd 2021 	ldrd	r2, r0, [sp, #132]	; 0x84
 80210dc:	e9dd 3424 	ldrd	r3, r4, [sp, #144]	; 0x90
 80210e0:	920a      	str	r2, [sp, #40]	; 0x28
 80210e2:	900b      	str	r0, [sp, #44]	; 0x2c
 80210e4:	a902      	add	r1, sp, #8
 80210e6:	2230      	movs	r2, #48	; 0x30
 80210e8:	2005      	movs	r0, #5
 80210ea:	e9cd 430c 	strd	r4, r3, [sp, #48]	; 0x30
 80210ee:	f002 ff7b 	bl	8023fe8 <CCP_sendPriorityMessage>
 80210f2:	e01c      	b.n	802112e <SYSTEM_checkCrashLog+0x29e>
 80210f4:	f01e f933 	bl	803f35e <strrchr>
 80210f8:	2800      	cmp	r0, #0
 80210fa:	f000 80a6 	beq.w	802124a <SYSTEM_checkCrashLog+0x3ba>
 80210fe:	212f      	movs	r1, #47	; 0x2f
 8021100:	4822      	ldr	r0, [pc, #136]	; (802118c <SYSTEM_checkCrashLog+0x2fc>)
 8021102:	f01e f92c 	bl	803f35e <strrchr>
 8021106:	1c41      	adds	r1, r0, #1
 8021108:	4b2e      	ldr	r3, [pc, #184]	; (80211c4 <SYSTEM_checkCrashLog+0x334>)
 802110a:	f240 1279 	movw	r2, #377	; 0x179
 802110e:	2002      	movs	r0, #2
 8021110:	f001 fb42 	bl	8022798 <DEBUG_logMsg>
 8021114:	9944      	ldr	r1, [sp, #272]	; 0x110
 8021116:	2220      	movs	r2, #32
 8021118:	a802      	add	r0, sp, #8
 802111a:	f01e f8f7 	bl	803f30c <strncpy>
 802111e:	2364      	movs	r3, #100	; 0x64
 8021120:	a902      	add	r1, sp, #8
 8021122:	2222      	movs	r2, #34	; 0x22
 8021124:	2004      	movs	r0, #4
 8021126:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 802112a:	f002 ff5d 	bl	8023fe8 <CCP_sendPriorityMessage>
 802112e:	4915      	ldr	r1, [pc, #84]	; (8021184 <SYSTEM_checkCrashLog+0x2f4>)
 8021130:	4815      	ldr	r0, [pc, #84]	; (8021188 <SYSTEM_checkCrashLog+0x2f8>)
 8021132:	f010 f991 	bl	8031458 <NVM_deleteEntry>
 8021136:	b069      	add	sp, #420	; 0x1a4
 8021138:	bdf0      	pop	{r4, r5, r6, r7, pc}
 802113a:	215c      	movs	r1, #92	; 0x5c
 802113c:	f01e f90f 	bl	803f35e <strrchr>
 8021140:	4603      	mov	r3, r0
 8021142:	215c      	movs	r1, #92	; 0x5c
 8021144:	4630      	mov	r0, r6
 8021146:	2b00      	cmp	r3, #0
 8021148:	d1ae      	bne.n	80210a8 <SYSTEM_checkCrashLog+0x218>
 802114a:	4631      	mov	r1, r6
 802114c:	e7af      	b.n	80210ae <SYSTEM_checkCrashLog+0x21e>
 802114e:	480f      	ldr	r0, [pc, #60]	; (802118c <SYSTEM_checkCrashLog+0x2fc>)
 8021150:	215c      	movs	r1, #92	; 0x5c
 8021152:	f01e f904 	bl	803f35e <strrchr>
 8021156:	2800      	cmp	r0, #0
 8021158:	f000 80ee 	beq.w	8021338 <SYSTEM_checkCrashLog+0x4a8>
 802115c:	215c      	movs	r1, #92	; 0x5c
 802115e:	480b      	ldr	r0, [pc, #44]	; (802118c <SYSTEM_checkCrashLog+0x2fc>)
 8021160:	f01e f8fd 	bl	803f35e <strrchr>
 8021164:	1c41      	adds	r1, r0, #1
 8021166:	e6bd      	b.n	8020ee4 <SYSTEM_checkCrashLog+0x54>
 8021168:	4808      	ldr	r0, [pc, #32]	; (802118c <SYSTEM_checkCrashLog+0x2fc>)
 802116a:	215c      	movs	r1, #92	; 0x5c
 802116c:	f01e f8f7 	bl	803f35e <strrchr>
 8021170:	2800      	cmp	r0, #0
 8021172:	f000 80df 	beq.w	8021334 <SYSTEM_checkCrashLog+0x4a4>
 8021176:	215c      	movs	r1, #92	; 0x5c
 8021178:	4804      	ldr	r0, [pc, #16]	; (802118c <SYSTEM_checkCrashLog+0x2fc>)
 802117a:	f01e f8f0 	bl	803f35e <strrchr>
 802117e:	1c41      	adds	r1, r0, #1
 8021180:	e69e      	b.n	8020ec0 <SYSTEM_checkCrashLog+0x30>
 8021182:	bf00      	nop
 8021184:	0804250c 	.word	0x0804250c
 8021188:	2000de14 	.word	0x2000de14
 802118c:	080423b8 	.word	0x080423b8
 8021190:	08042518 	.word	0x08042518
 8021194:	08042540 	.word	0x08042540
 8021198:	08042580 	.word	0x08042580
 802119c:	0804258c 	.word	0x0804258c
 80211a0:	08042598 	.word	0x08042598
 80211a4:	080425a4 	.word	0x080425a4
 80211a8:	080425b0 	.word	0x080425b0
 80211ac:	080425bc 	.word	0x080425bc
 80211b0:	080425c8 	.word	0x080425c8
 80211b4:	080425d4 	.word	0x080425d4
 80211b8:	0804278c 	.word	0x0804278c
 80211bc:	080425e0 	.word	0x080425e0
 80211c0:	080425ec 	.word	0x080425ec
 80211c4:	0804255c 	.word	0x0804255c
 80211c8:	4868      	ldr	r0, [pc, #416]	; (802136c <SYSTEM_checkCrashLog+0x4dc>)
 80211ca:	212f      	movs	r1, #47	; 0x2f
 80211cc:	f01e f8c7 	bl	803f35e <strrchr>
 80211d0:	b308      	cbz	r0, 8021216 <SYSTEM_checkCrashLog+0x386>
 80211d2:	212f      	movs	r1, #47	; 0x2f
 80211d4:	4865      	ldr	r0, [pc, #404]	; (802136c <SYSTEM_checkCrashLog+0x4dc>)
 80211d6:	f01e f8c2 	bl	803f35e <strrchr>
 80211da:	1c41      	adds	r1, r0, #1
 80211dc:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80211de:	9300      	str	r3, [sp, #0]
 80211e0:	f44f 72cf 	mov.w	r2, #414	; 0x19e
 80211e4:	4b62      	ldr	r3, [pc, #392]	; (8021370 <SYSTEM_checkCrashLog+0x4e0>)
 80211e6:	2002      	movs	r0, #2
 80211e8:	f001 fad6 	bl	8022798 <DEBUG_logMsg>
 80211ec:	e76f      	b.n	80210ce <SYSTEM_checkCrashLog+0x23e>
 80211ee:	485f      	ldr	r0, [pc, #380]	; (802136c <SYSTEM_checkCrashLog+0x4dc>)
 80211f0:	212f      	movs	r1, #47	; 0x2f
 80211f2:	f01e f8b4 	bl	803f35e <strrchr>
 80211f6:	b1d8      	cbz	r0, 8021230 <SYSTEM_checkCrashLog+0x3a0>
 80211f8:	212f      	movs	r1, #47	; 0x2f
 80211fa:	485c      	ldr	r0, [pc, #368]	; (802136c <SYSTEM_checkCrashLog+0x4dc>)
 80211fc:	f01e f8af 	bl	803f35e <strrchr>
 8021200:	1c41      	adds	r1, r0, #1
 8021202:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8021204:	9300      	str	r3, [sp, #0]
 8021206:	f44f 72cd 	mov.w	r2, #410	; 0x19a
 802120a:	4b5a      	ldr	r3, [pc, #360]	; (8021374 <SYSTEM_checkCrashLog+0x4e4>)
 802120c:	2002      	movs	r0, #2
 802120e:	f001 fac3 	bl	8022798 <DEBUG_logMsg>
 8021212:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8021214:	e759      	b.n	80210ca <SYSTEM_checkCrashLog+0x23a>
 8021216:	4855      	ldr	r0, [pc, #340]	; (802136c <SYSTEM_checkCrashLog+0x4dc>)
 8021218:	215c      	movs	r1, #92	; 0x5c
 802121a:	f01e f8a0 	bl	803f35e <strrchr>
 802121e:	2800      	cmp	r0, #0
 8021220:	f000 80a2 	beq.w	8021368 <SYSTEM_checkCrashLog+0x4d8>
 8021224:	215c      	movs	r1, #92	; 0x5c
 8021226:	4851      	ldr	r0, [pc, #324]	; (802136c <SYSTEM_checkCrashLog+0x4dc>)
 8021228:	f01e f899 	bl	803f35e <strrchr>
 802122c:	1c41      	adds	r1, r0, #1
 802122e:	e7d5      	b.n	80211dc <SYSTEM_checkCrashLog+0x34c>
 8021230:	484e      	ldr	r0, [pc, #312]	; (802136c <SYSTEM_checkCrashLog+0x4dc>)
 8021232:	215c      	movs	r1, #92	; 0x5c
 8021234:	f01e f893 	bl	803f35e <strrchr>
 8021238:	2800      	cmp	r0, #0
 802123a:	f000 8093 	beq.w	8021364 <SYSTEM_checkCrashLog+0x4d4>
 802123e:	215c      	movs	r1, #92	; 0x5c
 8021240:	484a      	ldr	r0, [pc, #296]	; (802136c <SYSTEM_checkCrashLog+0x4dc>)
 8021242:	f01e f88c 	bl	803f35e <strrchr>
 8021246:	1c41      	adds	r1, r0, #1
 8021248:	e7db      	b.n	8021202 <SYSTEM_checkCrashLog+0x372>
 802124a:	4848      	ldr	r0, [pc, #288]	; (802136c <SYSTEM_checkCrashLog+0x4dc>)
 802124c:	215c      	movs	r1, #92	; 0x5c
 802124e:	f01e f886 	bl	803f35e <strrchr>
 8021252:	2800      	cmp	r0, #0
 8021254:	d074      	beq.n	8021340 <SYSTEM_checkCrashLog+0x4b0>
 8021256:	215c      	movs	r1, #92	; 0x5c
 8021258:	4844      	ldr	r0, [pc, #272]	; (802136c <SYSTEM_checkCrashLog+0x4dc>)
 802125a:	f01e f880 	bl	803f35e <strrchr>
 802125e:	1c41      	adds	r1, r0, #1
 8021260:	e752      	b.n	8021108 <SYSTEM_checkCrashLog+0x278>
 8021262:	4842      	ldr	r0, [pc, #264]	; (802136c <SYSTEM_checkCrashLog+0x4dc>)
 8021264:	215c      	movs	r1, #92	; 0x5c
 8021266:	f01e f87a 	bl	803f35e <strrchr>
 802126a:	2800      	cmp	r0, #0
 802126c:	d06a      	beq.n	8021344 <SYSTEM_checkCrashLog+0x4b4>
 802126e:	215c      	movs	r1, #92	; 0x5c
 8021270:	483e      	ldr	r0, [pc, #248]	; (802136c <SYSTEM_checkCrashLog+0x4dc>)
 8021272:	f01e f874 	bl	803f35e <strrchr>
 8021276:	1c41      	adds	r1, r0, #1
 8021278:	e6f7      	b.n	802106a <SYSTEM_checkCrashLog+0x1da>
 802127a:	483c      	ldr	r0, [pc, #240]	; (802136c <SYSTEM_checkCrashLog+0x4dc>)
 802127c:	215c      	movs	r1, #92	; 0x5c
 802127e:	f01e f86e 	bl	803f35e <strrchr>
 8021282:	2800      	cmp	r0, #0
 8021284:	d066      	beq.n	8021354 <SYSTEM_checkCrashLog+0x4c4>
 8021286:	215c      	movs	r1, #92	; 0x5c
 8021288:	4838      	ldr	r0, [pc, #224]	; (802136c <SYSTEM_checkCrashLog+0x4dc>)
 802128a:	f01e f868 	bl	803f35e <strrchr>
 802128e:	1c41      	adds	r1, r0, #1
 8021290:	e6d7      	b.n	8021042 <SYSTEM_checkCrashLog+0x1b2>
 8021292:	4836      	ldr	r0, [pc, #216]	; (802136c <SYSTEM_checkCrashLog+0x4dc>)
 8021294:	215c      	movs	r1, #92	; 0x5c
 8021296:	f01e f862 	bl	803f35e <strrchr>
 802129a:	2800      	cmp	r0, #0
 802129c:	d056      	beq.n	802134c <SYSTEM_checkCrashLog+0x4bc>
 802129e:	215c      	movs	r1, #92	; 0x5c
 80212a0:	4832      	ldr	r0, [pc, #200]	; (802136c <SYSTEM_checkCrashLog+0x4dc>)
 80212a2:	f01e f85c 	bl	803f35e <strrchr>
 80212a6:	1c41      	adds	r1, r0, #1
 80212a8:	e6b7      	b.n	802101a <SYSTEM_checkCrashLog+0x18a>
 80212aa:	4830      	ldr	r0, [pc, #192]	; (802136c <SYSTEM_checkCrashLog+0x4dc>)
 80212ac:	215c      	movs	r1, #92	; 0x5c
 80212ae:	f01e f856 	bl	803f35e <strrchr>
 80212b2:	2800      	cmp	r0, #0
 80212b4:	d052      	beq.n	802135c <SYSTEM_checkCrashLog+0x4cc>
 80212b6:	215c      	movs	r1, #92	; 0x5c
 80212b8:	482c      	ldr	r0, [pc, #176]	; (802136c <SYSTEM_checkCrashLog+0x4dc>)
 80212ba:	f01e f850 	bl	803f35e <strrchr>
 80212be:	1c41      	adds	r1, r0, #1
 80212c0:	e65b      	b.n	8020f7a <SYSTEM_checkCrashLog+0xea>
 80212c2:	482a      	ldr	r0, [pc, #168]	; (802136c <SYSTEM_checkCrashLog+0x4dc>)
 80212c4:	215c      	movs	r1, #92	; 0x5c
 80212c6:	f01e f84a 	bl	803f35e <strrchr>
 80212ca:	2800      	cmp	r0, #0
 80212cc:	d03c      	beq.n	8021348 <SYSTEM_checkCrashLog+0x4b8>
 80212ce:	215c      	movs	r1, #92	; 0x5c
 80212d0:	4826      	ldr	r0, [pc, #152]	; (802136c <SYSTEM_checkCrashLog+0x4dc>)
 80212d2:	f01e f844 	bl	803f35e <strrchr>
 80212d6:	1c41      	adds	r1, r0, #1
 80212d8:	e677      	b.n	8020fca <SYSTEM_checkCrashLog+0x13a>
 80212da:	4824      	ldr	r0, [pc, #144]	; (802136c <SYSTEM_checkCrashLog+0x4dc>)
 80212dc:	215c      	movs	r1, #92	; 0x5c
 80212de:	f01e f83e 	bl	803f35e <strrchr>
 80212e2:	2800      	cmp	r0, #0
 80212e4:	d038      	beq.n	8021358 <SYSTEM_checkCrashLog+0x4c8>
 80212e6:	215c      	movs	r1, #92	; 0x5c
 80212e8:	4820      	ldr	r0, [pc, #128]	; (802136c <SYSTEM_checkCrashLog+0x4dc>)
 80212ea:	f01e f838 	bl	803f35e <strrchr>
 80212ee:	1c41      	adds	r1, r0, #1
 80212f0:	e61b      	b.n	8020f2a <SYSTEM_checkCrashLog+0x9a>
 80212f2:	481e      	ldr	r0, [pc, #120]	; (802136c <SYSTEM_checkCrashLog+0x4dc>)
 80212f4:	215c      	movs	r1, #92	; 0x5c
 80212f6:	f01e f832 	bl	803f35e <strrchr>
 80212fa:	b348      	cbz	r0, 8021350 <SYSTEM_checkCrashLog+0x4c0>
 80212fc:	215c      	movs	r1, #92	; 0x5c
 80212fe:	481b      	ldr	r0, [pc, #108]	; (802136c <SYSTEM_checkCrashLog+0x4dc>)
 8021300:	f01e f82d 	bl	803f35e <strrchr>
 8021304:	1c41      	adds	r1, r0, #1
 8021306:	e674      	b.n	8020ff2 <SYSTEM_checkCrashLog+0x162>
 8021308:	4818      	ldr	r0, [pc, #96]	; (802136c <SYSTEM_checkCrashLog+0x4dc>)
 802130a:	215c      	movs	r1, #92	; 0x5c
 802130c:	f01e f827 	bl	803f35e <strrchr>
 8021310:	b330      	cbz	r0, 8021360 <SYSTEM_checkCrashLog+0x4d0>
 8021312:	215c      	movs	r1, #92	; 0x5c
 8021314:	4815      	ldr	r0, [pc, #84]	; (802136c <SYSTEM_checkCrashLog+0x4dc>)
 8021316:	f01e f822 	bl	803f35e <strrchr>
 802131a:	1c41      	adds	r1, r0, #1
 802131c:	e619      	b.n	8020f52 <SYSTEM_checkCrashLog+0xc2>
 802131e:	4813      	ldr	r0, [pc, #76]	; (802136c <SYSTEM_checkCrashLog+0x4dc>)
 8021320:	215c      	movs	r1, #92	; 0x5c
 8021322:	f01e f81c 	bl	803f35e <strrchr>
 8021326:	b148      	cbz	r0, 802133c <SYSTEM_checkCrashLog+0x4ac>
 8021328:	215c      	movs	r1, #92	; 0x5c
 802132a:	4810      	ldr	r0, [pc, #64]	; (802136c <SYSTEM_checkCrashLog+0x4dc>)
 802132c:	f01e f817 	bl	803f35e <strrchr>
 8021330:	1c41      	adds	r1, r0, #1
 8021332:	e636      	b.n	8020fa2 <SYSTEM_checkCrashLog+0x112>
 8021334:	490d      	ldr	r1, [pc, #52]	; (802136c <SYSTEM_checkCrashLog+0x4dc>)
 8021336:	e5c3      	b.n	8020ec0 <SYSTEM_checkCrashLog+0x30>
 8021338:	490c      	ldr	r1, [pc, #48]	; (802136c <SYSTEM_checkCrashLog+0x4dc>)
 802133a:	e5d3      	b.n	8020ee4 <SYSTEM_checkCrashLog+0x54>
 802133c:	490b      	ldr	r1, [pc, #44]	; (802136c <SYSTEM_checkCrashLog+0x4dc>)
 802133e:	e630      	b.n	8020fa2 <SYSTEM_checkCrashLog+0x112>
 8021340:	490a      	ldr	r1, [pc, #40]	; (802136c <SYSTEM_checkCrashLog+0x4dc>)
 8021342:	e6e1      	b.n	8021108 <SYSTEM_checkCrashLog+0x278>
 8021344:	4909      	ldr	r1, [pc, #36]	; (802136c <SYSTEM_checkCrashLog+0x4dc>)
 8021346:	e690      	b.n	802106a <SYSTEM_checkCrashLog+0x1da>
 8021348:	4908      	ldr	r1, [pc, #32]	; (802136c <SYSTEM_checkCrashLog+0x4dc>)
 802134a:	e63e      	b.n	8020fca <SYSTEM_checkCrashLog+0x13a>
 802134c:	4907      	ldr	r1, [pc, #28]	; (802136c <SYSTEM_checkCrashLog+0x4dc>)
 802134e:	e664      	b.n	802101a <SYSTEM_checkCrashLog+0x18a>
 8021350:	4906      	ldr	r1, [pc, #24]	; (802136c <SYSTEM_checkCrashLog+0x4dc>)
 8021352:	e64e      	b.n	8020ff2 <SYSTEM_checkCrashLog+0x162>
 8021354:	4905      	ldr	r1, [pc, #20]	; (802136c <SYSTEM_checkCrashLog+0x4dc>)
 8021356:	e674      	b.n	8021042 <SYSTEM_checkCrashLog+0x1b2>
 8021358:	4904      	ldr	r1, [pc, #16]	; (802136c <SYSTEM_checkCrashLog+0x4dc>)
 802135a:	e5e6      	b.n	8020f2a <SYSTEM_checkCrashLog+0x9a>
 802135c:	4903      	ldr	r1, [pc, #12]	; (802136c <SYSTEM_checkCrashLog+0x4dc>)
 802135e:	e60c      	b.n	8020f7a <SYSTEM_checkCrashLog+0xea>
 8021360:	4902      	ldr	r1, [pc, #8]	; (802136c <SYSTEM_checkCrashLog+0x4dc>)
 8021362:	e5f6      	b.n	8020f52 <SYSTEM_checkCrashLog+0xc2>
 8021364:	4901      	ldr	r1, [pc, #4]	; (802136c <SYSTEM_checkCrashLog+0x4dc>)
 8021366:	e74c      	b.n	8021202 <SYSTEM_checkCrashLog+0x372>
 8021368:	4900      	ldr	r1, [pc, #0]	; (802136c <SYSTEM_checkCrashLog+0x4dc>)
 802136a:	e737      	b.n	80211dc <SYSTEM_checkCrashLog+0x34c>
 802136c:	080423b8 	.word	0x080423b8
 8021370:	0804260c 	.word	0x0804260c
 8021374:	080425fc 	.word	0x080425fc

08021378 <recordFault(SYSTEM_stackState_t*)>:
 8021378:	b530      	push	{r4, r5, lr}
 802137a:	b0db      	sub	sp, #364	; 0x16c
 802137c:	6801      	ldr	r1, [r0, #0]
 802137e:	6844      	ldr	r4, [r0, #4]
 8021380:	6883      	ldr	r3, [r0, #8]
 8021382:	68c2      	ldr	r2, [r0, #12]
 8021384:	9101      	str	r1, [sp, #4]
 8021386:	6901      	ldr	r1, [r0, #16]
 8021388:	9000      	str	r0, [sp, #0]
 802138a:	9402      	str	r4, [sp, #8]
 802138c:	6945      	ldr	r5, [r0, #20]
 802138e:	9303      	str	r3, [sp, #12]
 8021390:	69c3      	ldr	r3, [r0, #28]
 8021392:	6984      	ldr	r4, [r0, #24]
 8021394:	9204      	str	r2, [sp, #16]
 8021396:	9105      	str	r1, [sp, #20]
 8021398:	228c      	movs	r2, #140	; 0x8c
 802139a:	4914      	ldr	r1, [pc, #80]	; (80213ec <recordFault(SYSTEM_stackState_t*)+0x74>)
 802139c:	9506      	str	r5, [sp, #24]
 802139e:	a809      	add	r0, sp, #36	; 0x24
 80213a0:	e9cd 4307 	strd	r4, r3, [sp, #28]
 80213a4:	f01e f92d 	bl	803f602 <__aeabi_memcpy>
 80213a8:	4b11      	ldr	r3, [pc, #68]	; (80213f0 <recordFault(SYSTEM_stackState_t*)+0x78>)
 80213aa:	22b4      	movs	r2, #180	; 0xb4
 80213ac:	6819      	ldr	r1, [r3, #0]
 80213ae:	a82c      	add	r0, sp, #176	; 0xb0
 80213b0:	f01e f927 	bl	803f602 <__aeabi_memcpy>
 80213b4:	4b0f      	ldr	r3, [pc, #60]	; (80213f4 <recordFault(SYSTEM_stackState_t*)+0x7c>)
 80213b6:	4910      	ldr	r1, [pc, #64]	; (80213f8 <recordFault(SYSTEM_stackState_t*)+0x80>)
 80213b8:	781b      	ldrb	r3, [r3, #0]
 80213ba:	4810      	ldr	r0, [pc, #64]	; (80213fc <recordFault(SYSTEM_stackState_t*)+0x84>)
 80213bc:	f88d 3164 	strb.w	r3, [sp, #356]	; 0x164
 80213c0:	f00f fffe 	bl	80313c0 <NVM_createEntry>
 80213c4:	2801      	cmp	r0, #1
 80213c6:	d908      	bls.n	80213da <recordFault(SYSTEM_stackState_t*)+0x62>
 80213c8:	4a0d      	ldr	r2, [pc, #52]	; (8021400 <recordFault(SYSTEM_stackState_t*)+0x88>)
 80213ca:	4b0e      	ldr	r3, [pc, #56]	; (8021404 <recordFault(SYSTEM_stackState_t*)+0x8c>)
 80213cc:	2104      	movs	r1, #4
 80213ce:	8311      	strh	r1, [r2, #24]
 80213d0:	681b      	ldr	r3, [r3, #0]
 80213d2:	07db      	lsls	r3, r3, #31
 80213d4:	d500      	bpl.n	80213d8 <recordFault(SYSTEM_stackState_t*)+0x60>
 80213d6:	be01      	bkpt	0x0001
 80213d8:	e7fe      	b.n	80213d8 <recordFault(SYSTEM_stackState_t*)+0x60>
 80213da:	4907      	ldr	r1, [pc, #28]	; (80213f8 <recordFault(SYSTEM_stackState_t*)+0x80>)
 80213dc:	4807      	ldr	r0, [pc, #28]	; (80213fc <recordFault(SYSTEM_stackState_t*)+0x84>)
 80213de:	466a      	mov	r2, sp
 80213e0:	f44f 73b4 	mov.w	r3, #360	; 0x168
 80213e4:	f010 f8a6 	bl	8031534 <NVM_write>
 80213e8:	e7ee      	b.n	80213c8 <recordFault(SYSTEM_stackState_t*)+0x50>
 80213ea:	bf00      	nop
 80213ec:	e000ed00 	.word	0xe000ed00
 80213f0:	2001226c 	.word	0x2001226c
 80213f4:	20003698 	.word	0x20003698
 80213f8:	0804250c 	.word	0x0804250c
 80213fc:	2000de14 	.word	0x2000de14
 8021400:	40021c00 	.word	0x40021c00
 8021404:	e000edf0 	.word	0xe000edf0

08021408 <SYSTEM_stackFaultHandler>:
 8021408:	b500      	push	{lr}
 802140a:	4b03      	ldr	r3, [pc, #12]	; (8021418 <SYSTEM_stackFaultHandler+0x10>)
 802140c:	b089      	sub	sp, #36	; 0x24
 802140e:	2201      	movs	r2, #1
 8021410:	4668      	mov	r0, sp
 8021412:	701a      	strb	r2, [r3, #0]
 8021414:	f7ff ffb0 	bl	8021378 <recordFault(SYSTEM_stackState_t*)>
 8021418:	20003698 	.word	0x20003698

0802141c <CLI_init>:
 802141c:	b150      	cbz	r0, 8021434 <CLI_init+0x18>
 802141e:	6803      	ldr	r3, [r0, #0]
 8021420:	b133      	cbz	r3, 8021430 <CLI_init+0x14>
 8021422:	4a05      	ldr	r2, [pc, #20]	; (8021438 <CLI_init+0x1c>)
 8021424:	f842 3b04 	str.w	r3, [r2], #4
 8021428:	f850 3f04 	ldr.w	r3, [r0, #4]!
 802142c:	2b00      	cmp	r3, #0
 802142e:	d1f9      	bne.n	8021424 <CLI_init+0x8>
 8021430:	2001      	movs	r0, #1
 8021432:	4770      	bx	lr
 8021434:	4770      	bx	lr
 8021436:	bf00      	nop
 8021438:	200036a0 	.word	0x200036a0

0802143c <CLI_printCommandHelp(CLI_command_t const*)>:
 802143c:	b570      	push	{r4, r5, r6, lr}
 802143e:	4605      	mov	r5, r0
 8021440:	4810      	ldr	r0, [pc, #64]	; (8021484 <CLI_printCommandHelp(CLI_command_t const*)+0x48>)
 8021442:	6829      	ldr	r1, [r5, #0]
 8021444:	f01d fda8 	bl	803ef98 <printf>
 8021448:	6869      	ldr	r1, [r5, #4]
 802144a:	480f      	ldr	r0, [pc, #60]	; (8021488 <CLI_printCommandHelp(CLI_command_t const*)+0x4c>)
 802144c:	f01d fda4 	bl	803ef98 <printf>
 8021450:	480e      	ldr	r0, [pc, #56]	; (802148c <CLI_printCommandHelp(CLI_command_t const*)+0x50>)
 8021452:	f01d fda1 	bl	803ef98 <printf>
 8021456:	68eb      	ldr	r3, [r5, #12]
 8021458:	6819      	ldr	r1, [r3, #0]
 802145a:	b169      	cbz	r1, 8021478 <CLI_printCommandHelp(CLI_command_t const*)+0x3c>
 802145c:	4e0c      	ldr	r6, [pc, #48]	; (8021490 <CLI_printCommandHelp(CLI_command_t const*)+0x54>)
 802145e:	2404      	movs	r4, #4
 8021460:	4630      	mov	r0, r6
 8021462:	f01d fd99 	bl	803ef98 <printf>
 8021466:	200a      	movs	r0, #10
 8021468:	f018 fd72 	bl	8039f50 <_tx_thread_sleep>
 802146c:	68eb      	ldr	r3, [r5, #12]
 802146e:	5919      	ldr	r1, [r3, r4]
 8021470:	3404      	adds	r4, #4
 8021472:	b109      	cbz	r1, 8021478 <CLI_printCommandHelp(CLI_command_t const*)+0x3c>
 8021474:	2c30      	cmp	r4, #48	; 0x30
 8021476:	d1f3      	bne.n	8021460 <CLI_printCommandHelp(CLI_command_t const*)+0x24>
 8021478:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 802147c:	4805      	ldr	r0, [pc, #20]	; (8021494 <CLI_printCommandHelp(CLI_command_t const*)+0x58>)
 802147e:	f01d bd8b 	b.w	803ef98 <printf>
 8021482:	bf00      	nop
 8021484:	08042824 	.word	0x08042824
 8021488:	08042834 	.word	0x08042834
 802148c:	08042844 	.word	0x08042844
 8021490:	08042850 	.word	0x08042850
 8021494:	08047478 	.word	0x08047478

08021498 <CLI_executeCommand>:
 8021498:	b570      	push	{r4, r5, r6, lr}
 802149a:	4d20      	ldr	r5, [pc, #128]	; (802151c <CLI_executeCommand+0x84>)
 802149c:	b08a      	sub	sp, #40	; 0x28
 802149e:	466b      	mov	r3, sp
 80214a0:	220a      	movs	r2, #10
 80214a2:	2120      	movs	r1, #32
 80214a4:	682c      	ldr	r4, [r5, #0]
 80214a6:	f00c ff11 	bl	802e2cc <UTILITIES_strSplit>
 80214aa:	b320      	cbz	r0, 80214f6 <CLI_executeCommand+0x5e>
 80214ac:	4606      	mov	r6, r0
 80214ae:	b954      	cbnz	r4, 80214c6 <CLI_executeCommand+0x2e>
 80214b0:	481b      	ldr	r0, [pc, #108]	; (8021520 <CLI_executeCommand+0x88>)
 80214b2:	f01d fd71 	bl	803ef98 <printf>
 80214b6:	2500      	movs	r5, #0
 80214b8:	4628      	mov	r0, r5
 80214ba:	b00a      	add	sp, #40	; 0x28
 80214bc:	bd70      	pop	{r4, r5, r6, pc}
 80214be:	f855 4f04 	ldr.w	r4, [r5, #4]!
 80214c2:	2c00      	cmp	r4, #0
 80214c4:	d0f4      	beq.n	80214b0 <CLI_executeCommand+0x18>
 80214c6:	9900      	ldr	r1, [sp, #0]
 80214c8:	6820      	ldr	r0, [r4, #0]
 80214ca:	2280      	movs	r2, #128	; 0x80
 80214cc:	f01d feba 	bl	803f244 <strncasecmp>
 80214d0:	2800      	cmp	r0, #0
 80214d2:	d1f4      	bne.n	80214be <CLI_executeCommand+0x26>
 80214d4:	68a3      	ldr	r3, [r4, #8]
 80214d6:	4669      	mov	r1, sp
 80214d8:	4630      	mov	r0, r6
 80214da:	4798      	blx	r3
 80214dc:	2801      	cmp	r0, #1
 80214de:	4605      	mov	r5, r0
 80214e0:	d015      	beq.n	802150e <CLI_executeCommand+0x76>
 80214e2:	2802      	cmp	r0, #2
 80214e4:	d00b      	beq.n	80214fe <CLI_executeCommand+0x66>
 80214e6:	b170      	cbz	r0, 8021506 <CLI_executeCommand+0x6e>
 80214e8:	480e      	ldr	r0, [pc, #56]	; (8021524 <CLI_executeCommand+0x8c>)
 80214ea:	f01d fd55 	bl	803ef98 <printf>
 80214ee:	4620      	mov	r0, r4
 80214f0:	f7ff ffa4 	bl	802143c <CLI_printCommandHelp(CLI_command_t const*)>
 80214f4:	e000      	b.n	80214f8 <CLI_executeCommand+0x60>
 80214f6:	2501      	movs	r5, #1
 80214f8:	4628      	mov	r0, r5
 80214fa:	b00a      	add	sp, #40	; 0x28
 80214fc:	bd70      	pop	{r4, r5, r6, pc}
 80214fe:	480a      	ldr	r0, [pc, #40]	; (8021528 <CLI_executeCommand+0x90>)
 8021500:	f01d fd4a 	bl	803ef98 <printf>
 8021504:	e7f8      	b.n	80214f8 <CLI_executeCommand+0x60>
 8021506:	4809      	ldr	r0, [pc, #36]	; (802152c <CLI_executeCommand+0x94>)
 8021508:	f01d fd46 	bl	803ef98 <printf>
 802150c:	e7f4      	b.n	80214f8 <CLI_executeCommand+0x60>
 802150e:	4804      	ldr	r0, [pc, #16]	; (8021520 <CLI_executeCommand+0x88>)
 8021510:	f01d fd42 	bl	803ef98 <printf>
 8021514:	4620      	mov	r0, r4
 8021516:	f7ff ff91 	bl	802143c <CLI_printCommandHelp(CLI_command_t const*)>
 802151a:	e7ed      	b.n	80214f8 <CLI_executeCommand+0x60>
 802151c:	200036a0 	.word	0x200036a0
 8021520:	08042870 	.word	0x08042870
 8021524:	080428a0 	.word	0x080428a0
 8021528:	08042888 	.word	0x08042888
 802152c:	0804285c 	.word	0x0804285c

08021530 <CLI_listCommands>:
 8021530:	b510      	push	{r4, lr}
 8021532:	4c06      	ldr	r4, [pc, #24]	; (802154c <CLI_listCommands+0x1c>)
 8021534:	6820      	ldr	r0, [r4, #0]
 8021536:	b140      	cbz	r0, 802154a <CLI_listCommands+0x1a>
 8021538:	f7ff ff80 	bl	802143c <CLI_printCommandHelp(CLI_command_t const*)>
 802153c:	2014      	movs	r0, #20
 802153e:	f018 fd07 	bl	8039f50 <_tx_thread_sleep>
 8021542:	f854 0f04 	ldr.w	r0, [r4, #4]!
 8021546:	2800      	cmp	r0, #0
 8021548:	d1f6      	bne.n	8021538 <CLI_listCommands+0x8>
 802154a:	bd10      	pop	{r4, pc}
 802154c:	200036a0 	.word	0x200036a0

08021550 <udpFunc(int, char**)>:
 8021550:	b570      	push	{r4, r5, r6, lr}
 8021552:	2804      	cmp	r0, #4
 8021554:	b088      	sub	sp, #32
 8021556:	d01e      	beq.n	8021596 <udpFunc(int, char**)+0x46>
 8021558:	4b1e      	ldr	r3, [pc, #120]	; (80215d4 <udpFunc(int, char**)+0x84>)
 802155a:	f8d3 5418 	ldr.w	r5, [r3, #1048]	; 0x418
 802155e:	b1bd      	cbz	r5, 8021590 <udpFunc(int, char**)+0x40>
 8021560:	481d      	ldr	r0, [pc, #116]	; (80215d8 <udpFunc(int, char**)+0x88>)
 8021562:	4e1e      	ldr	r6, [pc, #120]	; (80215dc <udpFunc(int, char**)+0x8c>)
 8021564:	f01d fd18 	bl	803ef98 <printf>
 8021568:	462c      	mov	r4, r5
 802156a:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 802156c:	6923      	ldr	r3, [r4, #16]
 802156e:	e9d4 1201 	ldrd	r1, r2, [r4, #4]
 8021572:	9004      	str	r0, [sp, #16]
 8021574:	6a60      	ldr	r0, [r4, #36]	; 0x24
 8021576:	9003      	str	r0, [sp, #12]
 8021578:	69e0      	ldr	r0, [r4, #28]
 802157a:	9002      	str	r0, [sp, #8]
 802157c:	69a0      	ldr	r0, [r4, #24]
 802157e:	9001      	str	r0, [sp, #4]
 8021580:	6960      	ldr	r0, [r4, #20]
 8021582:	9000      	str	r0, [sp, #0]
 8021584:	4630      	mov	r0, r6
 8021586:	f01d fd07 	bl	803ef98 <printf>
 802158a:	6ea4      	ldr	r4, [r4, #104]	; 0x68
 802158c:	42a5      	cmp	r5, r4
 802158e:	d1ec      	bne.n	802156a <udpFunc(int, char**)+0x1a>
 8021590:	2000      	movs	r0, #0
 8021592:	b008      	add	sp, #32
 8021594:	bd70      	pop	{r4, r5, r6, pc}
 8021596:	460c      	mov	r4, r1
 8021598:	4911      	ldr	r1, [pc, #68]	; (80215e0 <udpFunc(int, char**)+0x90>)
 802159a:	6860      	ldr	r0, [r4, #4]
 802159c:	f01e f88d 	bl	803f6ba <strcmp>
 80215a0:	2800      	cmp	r0, #0
 80215a2:	d1d9      	bne.n	8021558 <udpFunc(int, char**)+0x8>
 80215a4:	68a0      	ldr	r0, [r4, #8]
 80215a6:	f01e f80e 	bl	803f5c6 <atoi>
 80215aa:	68e1      	ldr	r1, [r4, #12]
 80215ac:	9107      	str	r1, [sp, #28]
 80215ae:	4605      	mov	r5, r0
 80215b0:	4608      	mov	r0, r1
 80215b2:	f01e f8a9 	bl	803f708 <strlen>
 80215b6:	9907      	ldr	r1, [sp, #28]
 80215b8:	4602      	mov	r2, r0
 80215ba:	b2e8      	uxtb	r0, r5
 80215bc:	f7ff f9f8 	bl	80209b0 <NETWORK_writeUdp>
 80215c0:	b120      	cbz	r0, 80215cc <udpFunc(int, char**)+0x7c>
 80215c2:	68e1      	ldr	r1, [r4, #12]
 80215c4:	4807      	ldr	r0, [pc, #28]	; (80215e4 <udpFunc(int, char**)+0x94>)
 80215c6:	f01d fce7 	bl	803ef98 <printf>
 80215ca:	e7c5      	b.n	8021558 <udpFunc(int, char**)+0x8>
 80215cc:	4806      	ldr	r0, [pc, #24]	; (80215e8 <udpFunc(int, char**)+0x98>)
 80215ce:	f01d fce3 	bl	803ef98 <printf>
 80215d2:	e7c1      	b.n	8021558 <udpFunc(int, char**)+0x8>
 80215d4:	2000261c 	.word	0x2000261c
 80215d8:	080428e4 	.word	0x080428e4
 80215dc:	08042940 	.word	0x08042940
 80215e0:	080428bc 	.word	0x080428bc
 80215e4:	080428c4 	.word	0x080428c4
 80215e8:	080428d0 	.word	0x080428d0

080215ec <mutexFunc(int, char**)>:
 80215ec:	b5f0      	push	{r4, r5, r6, r7, lr}
 80215ee:	4b0e      	ldr	r3, [pc, #56]	; (8021628 <mutexFunc(int, char**)+0x3c>)
 80215f0:	4e0e      	ldr	r6, [pc, #56]	; (802162c <mutexFunc(int, char**)+0x40>)
 80215f2:	480f      	ldr	r0, [pc, #60]	; (8021630 <mutexFunc(int, char**)+0x44>)
 80215f4:	681c      	ldr	r4, [r3, #0]
 80215f6:	b083      	sub	sp, #12
 80215f8:	f01d fcce 	bl	803ef98 <printf>
 80215fc:	6833      	ldr	r3, [r6, #0]
 80215fe:	b183      	cbz	r3, 8021622 <mutexFunc(int, char**)+0x36>
 8021600:	4f0c      	ldr	r7, [pc, #48]	; (8021634 <mutexFunc(int, char**)+0x48>)
 8021602:	2500      	movs	r5, #0
 8021604:	6c20      	ldr	r0, [r4, #64]	; 0x40
 8021606:	6861      	ldr	r1, [r4, #4]
 8021608:	e9d4 230d 	ldrd	r2, r3, [r4, #52]	; 0x34
 802160c:	9001      	str	r0, [sp, #4]
 802160e:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 8021610:	9000      	str	r0, [sp, #0]
 8021612:	4638      	mov	r0, r7
 8021614:	f01d fcc0 	bl	803ef98 <printf>
 8021618:	6833      	ldr	r3, [r6, #0]
 802161a:	6a24      	ldr	r4, [r4, #32]
 802161c:	3501      	adds	r5, #1
 802161e:	42ab      	cmp	r3, r5
 8021620:	d8f0      	bhi.n	8021604 <mutexFunc(int, char**)+0x18>
 8021622:	2000      	movs	r0, #0
 8021624:	b003      	add	sp, #12
 8021626:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8021628:	20012230 	.word	0x20012230
 802162c:	2001222c 	.word	0x2001222c
 8021630:	08042968 	.word	0x08042968
 8021634:	080429b0 	.word	0x080429b0

08021638 <debugLogPopHandler()>:
 8021638:	b508      	push	{r3, lr}
 802163a:	4904      	ldr	r1, [pc, #16]	; (802164c <debugLogPopHandler()+0x14>)
 802163c:	4804      	ldr	r0, [pc, #16]	; (8021650 <debugLogPopHandler()+0x18>)
 802163e:	f01d fcab 	bl	803ef98 <printf>
 8021642:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8021646:	200f      	movs	r0, #15
 8021648:	f018 bc82 	b.w	8039f50 <_tx_thread_sleep>
 802164c:	20003a00 	.word	0x20003a00
 8021650:	08044000 	.word	0x08044000
 8021654:	8101b108 	.word	0x8101b108
 8021658:	8400b0b0 	.word	0x8400b0b0
 802165c:	00000000 	.word	0x00000000

08021660 <wheelCalFunc(int, char**)>:
 8021660:	b570      	push	{r4, r5, r6, lr}
 8021662:	ed2d 8b02 	vpush	{d8}
 8021666:	460c      	mov	r4, r1
 8021668:	b088      	sub	sp, #32
 802166a:	4605      	mov	r5, r0
 802166c:	6849      	ldr	r1, [r1, #4]
 802166e:	485a      	ldr	r0, [pc, #360]	; (80217d8 <wheelCalFunc(int, char**)+0x178>)
 8021670:	2280      	movs	r2, #128	; 0x80
 8021672:	f01d fe2e 	bl	803f2d2 <strncmp>
 8021676:	bb48      	cbnz	r0, 80216cc <wheelCalFunc(int, char**)+0x6c>
 8021678:	f003 fefa 	bl	8025470 <ANTCTRL_getXTireDiameter>
 802167c:	ee10 5a10 	vmov	r5, s0
 8021680:	f003 ff14 	bl	80254ac <ANTCTRL_getYTireDiameter>
 8021684:	4855      	ldr	r0, [pc, #340]	; (80217dc <wheelCalFunc(int, char**)+0x17c>)
 8021686:	212f      	movs	r1, #47	; 0x2f
 8021688:	ee10 4a10 	vmov	r4, s0
 802168c:	f01d fe67 	bl	803f35e <strrchr>
 8021690:	b350      	cbz	r0, 80216e8 <wheelCalFunc(int, char**)+0x88>
 8021692:	4852      	ldr	r0, [pc, #328]	; (80217dc <wheelCalFunc(int, char**)+0x17c>)
 8021694:	212f      	movs	r1, #47	; 0x2f
 8021696:	f01d fe62 	bl	803f35e <strrchr>
 802169a:	1c46      	adds	r6, r0, #1
 802169c:	4620      	mov	r0, r4
 802169e:	f01c fedc 	bl	803e45a <__aeabi_f2d>
 80216a2:	4602      	mov	r2, r0
 80216a4:	460b      	mov	r3, r1
 80216a6:	4628      	mov	r0, r5
 80216a8:	e9cd 2302 	strd	r2, r3, [sp, #8]
 80216ac:	f01c fed5 	bl	803e45a <__aeabi_f2d>
 80216b0:	4b4b      	ldr	r3, [pc, #300]	; (80217e0 <wheelCalFunc(int, char**)+0x180>)
 80216b2:	e9cd 0100 	strd	r0, r1, [sp]
 80216b6:	f240 42f4 	movw	r2, #1268	; 0x4f4
 80216ba:	2002      	movs	r0, #2
 80216bc:	4631      	mov	r1, r6
 80216be:	f001 f86b 	bl	8022798 <DEBUG_logMsg>
 80216c2:	2000      	movs	r0, #0
 80216c4:	b008      	add	sp, #32
 80216c6:	ecbd 8b02 	vpop	{d8}
 80216ca:	bd70      	pop	{r4, r5, r6, pc}
 80216cc:	6861      	ldr	r1, [r4, #4]
 80216ce:	4845      	ldr	r0, [pc, #276]	; (80217e4 <wheelCalFunc(int, char**)+0x184>)
 80216d0:	2280      	movs	r2, #128	; 0x80
 80216d2:	f01d fdfe 	bl	803f2d2 <strncmp>
 80216d6:	4606      	mov	r6, r0
 80216d8:	b990      	cbnz	r0, 8021700 <wheelCalFunc(int, char**)+0xa0>
 80216da:	2d04      	cmp	r5, #4
 80216dc:	d02a      	beq.n	8021734 <wheelCalFunc(int, char**)+0xd4>
 80216de:	2001      	movs	r0, #1
 80216e0:	b008      	add	sp, #32
 80216e2:	ecbd 8b02 	vpop	{d8}
 80216e6:	bd70      	pop	{r4, r5, r6, pc}
 80216e8:	483c      	ldr	r0, [pc, #240]	; (80217dc <wheelCalFunc(int, char**)+0x17c>)
 80216ea:	215c      	movs	r1, #92	; 0x5c
 80216ec:	f01d fe37 	bl	803f35e <strrchr>
 80216f0:	2800      	cmp	r0, #0
 80216f2:	d064      	beq.n	80217be <wheelCalFunc(int, char**)+0x15e>
 80216f4:	4839      	ldr	r0, [pc, #228]	; (80217dc <wheelCalFunc(int, char**)+0x17c>)
 80216f6:	215c      	movs	r1, #92	; 0x5c
 80216f8:	f01d fe31 	bl	803f35e <strrchr>
 80216fc:	1c46      	adds	r6, r0, #1
 80216fe:	e7cd      	b.n	802169c <wheelCalFunc(int, char**)+0x3c>
 8021700:	6861      	ldr	r1, [r4, #4]
 8021702:	4839      	ldr	r0, [pc, #228]	; (80217e8 <wheelCalFunc(int, char**)+0x188>)
 8021704:	2280      	movs	r2, #128	; 0x80
 8021706:	f01d fde4 	bl	803f2d2 <strncmp>
 802170a:	4606      	mov	r6, r0
 802170c:	2800      	cmp	r0, #0
 802170e:	d151      	bne.n	80217b4 <wheelCalFunc(int, char**)+0x154>
 8021710:	2d03      	cmp	r5, #3
 8021712:	d1e4      	bne.n	80216de <wheelCalFunc(int, char**)+0x7e>
 8021714:	68a3      	ldr	r3, [r4, #8]
 8021716:	7818      	ldrb	r0, [r3, #0]
 8021718:	f01d fbb2 	bl	803ee80 <tolower>
 802171c:	4a33      	ldr	r2, [pc, #204]	; (80217ec <wheelCalFunc(int, char**)+0x18c>)
 802171e:	4b34      	ldr	r3, [pc, #208]	; (80217f0 <wheelCalFunc(int, char**)+0x190>)
 8021720:	4601      	mov	r1, r0
 8021722:	2978      	cmp	r1, #120	; 0x78
 8021724:	bf0c      	ite	eq
 8021726:	4611      	moveq	r1, r2
 8021728:	4619      	movne	r1, r3
 802172a:	4832      	ldr	r0, [pc, #200]	; (80217f4 <wheelCalFunc(int, char**)+0x194>)
 802172c:	f00f fe94 	bl	8031458 <NVM_deleteEntry>
 8021730:	4630      	mov	r0, r6
 8021732:	e7c7      	b.n	80216c4 <wheelCalFunc(int, char**)+0x64>
 8021734:	68a3      	ldr	r3, [r4, #8]
 8021736:	7818      	ldrb	r0, [r3, #0]
 8021738:	f01d fba2 	bl	803ee80 <tolower>
 802173c:	2878      	cmp	r0, #120	; 0x78
 802173e:	bf0c      	ite	eq
 8021740:	2208      	moveq	r2, #8
 8021742:	2209      	movne	r2, #9
 8021744:	68e0      	ldr	r0, [r4, #12]
 8021746:	9205      	str	r2, [sp, #20]
 8021748:	4631      	mov	r1, r6
 802174a:	f01d fe21 	bl	803f390 <strtof>
 802174e:	9a05      	ldr	r2, [sp, #20]
 8021750:	4929      	ldr	r1, [pc, #164]	; (80217f8 <wheelCalFunc(int, char**)+0x198>)
 8021752:	a806      	add	r0, sp, #24
 8021754:	eeb0 8a40 	vmov.f32	s16, s0
 8021758:	f001 f9c6 	bl	8022ae8 <Robot::getAxis(ROBOT_axisIndex_t)>
 802175c:	f89d 301c 	ldrb.w	r3, [sp, #28]
 8021760:	b343      	cbz	r3, 80217b4 <wheelCalFunc(int, char**)+0x154>
 8021762:	eddf 7a26 	vldr	s15, [pc, #152]	; 80217fc <wheelCalFunc(int, char**)+0x19c>
 8021766:	9c06      	ldr	r4, [sp, #24]
 8021768:	eeb4 8ae7 	vcmpe.f32	s16, s15
 802176c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8021770:	d927      	bls.n	80217c2 <wheelCalFunc(int, char**)+0x162>
 8021772:	eddf 7a23 	vldr	s15, [pc, #140]	; 8021800 <wheelCalFunc(int, char**)+0x1a0>
 8021776:	eeb4 8ae7 	vcmpe.f32	s16, s15
 802177a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802177e:	da23      	bge.n	80217c8 <wheelCalFunc(int, char**)+0x168>
 8021780:	ee18 0a10 	vmov	r0, s16
 8021784:	f01c fe69 	bl	803e45a <__aeabi_f2d>
 8021788:	4b1e      	ldr	r3, [pc, #120]	; (8021804 <wheelCalFunc(int, char**)+0x1a4>)
 802178a:	2200      	movs	r2, #0
 802178c:	f01c ff6e 	bl	803e66c <__aeabi_ddiv>
 8021790:	a30f      	add	r3, pc, #60	; (adr r3, 80217d0 <wheelCalFunc(int, char**)+0x170>)
 8021792:	e9d3 2300 	ldrd	r2, r3, [r3]
 8021796:	f01c feb3 	bl	803e500 <__aeabi_dmul>
 802179a:	4602      	mov	r2, r0
 802179c:	460b      	mov	r3, r1
 802179e:	2000      	movs	r0, #0
 80217a0:	4919      	ldr	r1, [pc, #100]	; (8021808 <wheelCalFunc(int, char**)+0x1a8>)
 80217a2:	f01c ff63 	bl	803e66c <__aeabi_ddiv>
 80217a6:	f01c fe74 	bl	803e492 <__aeabi_d2f>
 80217aa:	ee00 0a10 	vmov	s0, r0
 80217ae:	4620      	mov	r0, r4
 80217b0:	f001 fc04 	bl	8022fbc <AxisBase::updateDynamicMechanicalRatio(float)>
 80217b4:	2000      	movs	r0, #0
 80217b6:	b008      	add	sp, #32
 80217b8:	ecbd 8b02 	vpop	{d8}
 80217bc:	bd70      	pop	{r4, r5, r6, pc}
 80217be:	4e07      	ldr	r6, [pc, #28]	; (80217dc <wheelCalFunc(int, char**)+0x17c>)
 80217c0:	e76c      	b.n	802169c <wheelCalFunc(int, char**)+0x3c>
 80217c2:	ed9f 0a12 	vldr	s0, [pc, #72]	; 802180c <wheelCalFunc(int, char**)+0x1ac>
 80217c6:	e7f2      	b.n	80217ae <wheelCalFunc(int, char**)+0x14e>
 80217c8:	ed9f 0a11 	vldr	s0, [pc, #68]	; 8021810 <wheelCalFunc(int, char**)+0x1b0>
 80217cc:	e7ef      	b.n	80217ae <wheelCalFunc(int, char**)+0x14e>
 80217ce:	bf00      	nop
 80217d0:	60000000 	.word	0x60000000
 80217d4:	400921fb 	.word	0x400921fb
 80217d8:	08042a20 	.word	0x08042a20
 80217dc:	080429cc 	.word	0x080429cc
 80217e0:	08042a28 	.word	0x08042a28
 80217e4:	08042a48 	.word	0x08042a48
 80217e8:	08042a4c 	.word	0x08042a4c
 80217ec:	08042a08 	.word	0x08042a08
 80217f0:	08042a14 	.word	0x08042a14
 80217f4:	2000de14 	.word	0x2000de14
 80217f8:	2000f630 	.word	0x2000f630
 80217fc:	42de0000 	.word	0x42de0000
 8021800:	42e40000 	.word	0x42e40000
 8021804:	408f4000 	.word	0x408f4000
 8021808:	3ff00000 	.word	0x3ff00000
 802180c:	403787af 	.word	0x403787af
 8021810:	4032b346 	.word	0x4032b346
 8021814:	810107c9 	.word	0x810107c9
 8021818:	80aab0b0 	.word	0x80aab0b0
 802181c:	00000000 	.word	0x00000000

08021820 <debugBoot(int, char**)>:
 8021820:	b508      	push	{r3, lr}
 8021822:	4803      	ldr	r0, [pc, #12]	; (8021830 <debugBoot(int, char**)+0x10>)
 8021824:	f01d fbb8 	bl	803ef98 <printf>
 8021828:	f010 fb50 	bl	8031ecc <UPGRADER_eraseCRCKeyIfAny>
 802182c:	2000      	movs	r0, #0
 802182e:	bd08      	pop	{r3, pc}
 8021830:	08042a54 	.word	0x08042a54
 8021834:	8101b108 	.word	0x8101b108
 8021838:	8400b0b0 	.word	0x8400b0b0
 802183c:	00000000 	.word	0x00000000

08021840 <binMain(int, char**)>:
 8021840:	b508      	push	{r3, lr}
 8021842:	f44f 7000 	mov.w	r0, #512	; 0x200
 8021846:	f003 ffc5 	bl	80257d4 <ANTCTRL_setEvent>
 802184a:	2000      	movs	r0, #0
 802184c:	bd08      	pop	{r3, pc}
 802184e:	bf00      	nop
 8021850:	8101b108 	.word	0x8101b108
 8021854:	8400b0b0 	.word	0x8400b0b0
 8021858:	00000000 	.word	0x00000000

0802185c <sramtestMain(int, char**)>:
 802185c:	b510      	push	{r4, lr}
 802185e:	f01b f81d 	bl	803c89c <SRAM_getOpMode>
 8021862:	4604      	mov	r4, r0
 8021864:	4812      	ldr	r0, [pc, #72]	; (80218b0 <sramtestMain(int, char**)+0x54>)
 8021866:	f01d fb97 	bl	803ef98 <printf>
 802186a:	2c01      	cmp	r4, #1
 802186c:	d01c      	beq.n	80218a8 <sramtestMain(int, char**)+0x4c>
 802186e:	2c02      	cmp	r4, #2
 8021870:	d016      	beq.n	80218a0 <sramtestMain(int, char**)+0x44>
 8021872:	b18c      	cbz	r4, 8021898 <sramtestMain(int, char**)+0x3c>
 8021874:	480f      	ldr	r0, [pc, #60]	; (80218b4 <sramtestMain(int, char**)+0x58>)
 8021876:	f01d fb8f 	bl	803ef98 <printf>
 802187a:	f01b f843 	bl	803c904 <SRAM_writeTest>
 802187e:	4604      	mov	r4, r0
 8021880:	b920      	cbnz	r0, 802188c <sramtestMain(int, char**)+0x30>
 8021882:	480d      	ldr	r0, [pc, #52]	; (80218b8 <sramtestMain(int, char**)+0x5c>)
 8021884:	f01d fb88 	bl	803ef98 <printf>
 8021888:	4620      	mov	r0, r4
 802188a:	bd10      	pop	{r4, pc}
 802188c:	4601      	mov	r1, r0
 802188e:	480b      	ldr	r0, [pc, #44]	; (80218bc <sramtestMain(int, char**)+0x60>)
 8021890:	f01d fb82 	bl	803ef98 <printf>
 8021894:	2002      	movs	r0, #2
 8021896:	bd10      	pop	{r4, pc}
 8021898:	4809      	ldr	r0, [pc, #36]	; (80218c0 <sramtestMain(int, char**)+0x64>)
 802189a:	f01d fb7d 	bl	803ef98 <printf>
 802189e:	e7ec      	b.n	802187a <sramtestMain(int, char**)+0x1e>
 80218a0:	4808      	ldr	r0, [pc, #32]	; (80218c4 <sramtestMain(int, char**)+0x68>)
 80218a2:	f01d fb79 	bl	803ef98 <printf>
 80218a6:	e7e8      	b.n	802187a <sramtestMain(int, char**)+0x1e>
 80218a8:	4807      	ldr	r0, [pc, #28]	; (80218c8 <sramtestMain(int, char**)+0x6c>)
 80218aa:	f01d fb75 	bl	803ef98 <printf>
 80218ae:	e7e4      	b.n	802187a <sramtestMain(int, char**)+0x1e>
 80218b0:	08042a94 	.word	0x08042a94
 80218b4:	08042ad0 	.word	0x08042ad0
 80218b8:	08042adc 	.word	0x08042adc
 80218bc:	08042b00 	.word	0x08042b00
 80218c0:	08042aa4 	.word	0x08042aa4
 80218c4:	08042abc 	.word	0x08042abc
 80218c8:	08042ab0 	.word	0x08042ab0

080218cc <framtestMain(int, char**)>:
 80218cc:	b510      	push	{r4, lr}
 80218ce:	f01a feb9 	bl	803c644 <FRAM_writeTest>
 80218d2:	4604      	mov	r4, r0
 80218d4:	b920      	cbnz	r0, 80218e0 <framtestMain(int, char**)+0x14>
 80218d6:	4805      	ldr	r0, [pc, #20]	; (80218ec <framtestMain(int, char**)+0x20>)
 80218d8:	f01d fb5e 	bl	803ef98 <printf>
 80218dc:	4620      	mov	r0, r4
 80218de:	bd10      	pop	{r4, pc}
 80218e0:	4601      	mov	r1, r0
 80218e2:	4803      	ldr	r0, [pc, #12]	; (80218f0 <framtestMain(int, char**)+0x24>)
 80218e4:	f01d fb58 	bl	803ef98 <printf>
 80218e8:	2002      	movs	r0, #2
 80218ea:	bd10      	pop	{r4, pc}
 80218ec:	08042b30 	.word	0x08042b30
 80218f0:	08042b54 	.word	0x08042b54

080218f4 <framinitMain(int, char**)>:
 80218f4:	b508      	push	{r3, lr}
 80218f6:	f01a fd91 	bl	803c41c <FRAM_init>
 80218fa:	4802      	ldr	r0, [pc, #8]	; (8021904 <framinitMain(int, char**)+0x10>)
 80218fc:	f01d fb4c 	bl	803ef98 <printf>
 8021900:	2000      	movs	r0, #0
 8021902:	bd08      	pop	{r3, pc}
 8021904:	08042b84 	.word	0x08042b84
 8021908:	8101b108 	.word	0x8101b108
 802190c:	8400b0b0 	.word	0x8400b0b0
 8021910:	00000000 	.word	0x00000000

08021914 <recoveryFunc(int, char**)>:
 8021914:	b530      	push	{r4, r5, lr}
 8021916:	b083      	sub	sp, #12
 8021918:	f44f 43aa 	mov.w	r3, #21760	; 0x5500
 802191c:	2802      	cmp	r0, #2
 802191e:	f8ad 3004 	strh.w	r3, [sp, #4]
 8021922:	d008      	beq.n	8021936 <recoveryFunc(int, char**)+0x22>
 8021924:	2302      	movs	r3, #2
 8021926:	aa01      	add	r2, sp, #4
 8021928:	210d      	movs	r1, #13
 802192a:	2006      	movs	r0, #6
 802192c:	f003 fddc 	bl	80254e8 <ANTCTRL_startTask>
 8021930:	2000      	movs	r0, #0
 8021932:	b003      	add	sp, #12
 8021934:	bd30      	pop	{r4, r5, pc}
 8021936:	4604      	mov	r4, r0
 8021938:	460d      	mov	r5, r1
 802193a:	480a      	ldr	r0, [pc, #40]	; (8021964 <recoveryFunc(int, char**)+0x50>)
 802193c:	6849      	ldr	r1, [r1, #4]
 802193e:	2280      	movs	r2, #128	; 0x80
 8021940:	f01d fc80 	bl	803f244 <strncasecmp>
 8021944:	b918      	cbnz	r0, 802194e <recoveryFunc(int, char**)+0x3a>
 8021946:	2301      	movs	r3, #1
 8021948:	f88d 3004 	strb.w	r3, [sp, #4]
 802194c:	e7ea      	b.n	8021924 <recoveryFunc(int, char**)+0x10>
 802194e:	6869      	ldr	r1, [r5, #4]
 8021950:	4805      	ldr	r0, [pc, #20]	; (8021968 <recoveryFunc(int, char**)+0x54>)
 8021952:	2280      	movs	r2, #128	; 0x80
 8021954:	f01d fc76 	bl	803f244 <strncasecmp>
 8021958:	2800      	cmp	r0, #0
 802195a:	d1e3      	bne.n	8021924 <recoveryFunc(int, char**)+0x10>
 802195c:	f88d 4004 	strb.w	r4, [sp, #4]
 8021960:	e7e0      	b.n	8021924 <recoveryFunc(int, char**)+0x10>
 8021962:	bf00      	nop
 8021964:	08042b98 	.word	0x08042b98
 8021968:	08042ba0 	.word	0x08042ba0

0802196c <moveFunc(int, char**)>:
 802196c:	b570      	push	{r4, r5, r6, lr}
 802196e:	b084      	sub	sp, #16
 8021970:	4604      	mov	r4, r0
 8021972:	460d      	mov	r5, r1
 8021974:	4668      	mov	r0, sp
 8021976:	220d      	movs	r2, #13
 8021978:	2100      	movs	r1, #0
 802197a:	f01d fe6b 	bl	803f654 <memset>
 802197e:	2c02      	cmp	r4, #2
 8021980:	dd3a      	ble.n	80219f8 <moveFunc(int, char**)+0x8c>
 8021982:	686b      	ldr	r3, [r5, #4]
 8021984:	781e      	ldrb	r6, [r3, #0]
 8021986:	4630      	mov	r0, r6
 8021988:	f01d fa7a 	bl	803ee80 <tolower>
 802198c:	2878      	cmp	r0, #120	; 0x78
 802198e:	d13a      	bne.n	8021a06 <moveFunc(int, char**)+0x9a>
 8021990:	2301      	movs	r3, #1
 8021992:	2c03      	cmp	r4, #3
 8021994:	f88d 3000 	strb.w	r3, [sp]
 8021998:	d040      	beq.n	8021a1c <moveFunc(int, char**)+0xb0>
 802199a:	68eb      	ldr	r3, [r5, #12]
 802199c:	7818      	ldrb	r0, [r3, #0]
 802199e:	f01d fa6f 	bl	803ee80 <tolower>
 80219a2:	386e      	subs	r0, #110	; 0x6e
 80219a4:	bf18      	it	ne
 80219a6:	2001      	movne	r0, #1
 80219a8:	2c04      	cmp	r4, #4
 80219aa:	f88d 0002 	strb.w	r0, [sp, #2]
 80219ae:	d143      	bne.n	8021a38 <moveFunc(int, char**)+0xcc>
 80219b0:	2001      	movs	r0, #1
 80219b2:	2c05      	cmp	r4, #5
 80219b4:	f88d 0007 	strb.w	r0, [sp, #7]
 80219b8:	dd48      	ble.n	8021a4c <moveFunc(int, char**)+0xe0>
 80219ba:	6968      	ldr	r0, [r5, #20]
 80219bc:	220a      	movs	r2, #10
 80219be:	2100      	movs	r1, #0
 80219c0:	f01d fdae 	bl	803f520 <strtol>
 80219c4:	b2c3      	uxtb	r3, r0
 80219c6:	220a      	movs	r2, #10
 80219c8:	68a8      	ldr	r0, [r5, #8]
 80219ca:	f88d 3008 	strb.w	r3, [sp, #8]
 80219ce:	2100      	movs	r1, #0
 80219d0:	f01d fda6 	bl	803f520 <strtol>
 80219d4:	f89d 3000 	ldrb.w	r3, [sp]
 80219d8:	f8ad 0003 	strh.w	r0, [sp, #3]
 80219dc:	2237      	movs	r2, #55	; 0x37
 80219de:	2bff      	cmp	r3, #255	; 0xff
 80219e0:	f88d 200c 	strb.w	r2, [sp, #12]
 80219e4:	d008      	beq.n	80219f8 <moveFunc(int, char**)+0x8c>
 80219e6:	466a      	mov	r2, sp
 80219e8:	230d      	movs	r3, #13
 80219ea:	2101      	movs	r1, #1
 80219ec:	2006      	movs	r0, #6
 80219ee:	f003 fd7b 	bl	80254e8 <ANTCTRL_startTask>
 80219f2:	2000      	movs	r0, #0
 80219f4:	b004      	add	sp, #16
 80219f6:	bd70      	pop	{r4, r5, r6, pc}
 80219f8:	4915      	ldr	r1, [pc, #84]	; (8021a50 <moveFunc(int, char**)+0xe4>)
 80219fa:	4816      	ldr	r0, [pc, #88]	; (8021a54 <moveFunc(int, char**)+0xe8>)
 80219fc:	f01d facc 	bl	803ef98 <printf>
 8021a00:	2001      	movs	r0, #1
 8021a02:	b004      	add	sp, #16
 8021a04:	bd70      	pop	{r4, r5, r6, pc}
 8021a06:	4630      	mov	r0, r6
 8021a08:	f01d fa3a 	bl	803ee80 <tolower>
 8021a0c:	2879      	cmp	r0, #121	; 0x79
 8021a0e:	bf0c      	ite	eq
 8021a10:	2302      	moveq	r3, #2
 8021a12:	23ff      	movne	r3, #255	; 0xff
 8021a14:	2c03      	cmp	r4, #3
 8021a16:	f88d 3000 	strb.w	r3, [sp]
 8021a1a:	d1be      	bne.n	802199a <moveFunc(int, char**)+0x2e>
 8021a1c:	2059      	movs	r0, #89	; 0x59
 8021a1e:	f01d fa2f 	bl	803ee80 <tolower>
 8021a22:	386e      	subs	r0, #110	; 0x6e
 8021a24:	f04f 0301 	mov.w	r3, #1
 8021a28:	bf18      	it	ne
 8021a2a:	2001      	movne	r0, #1
 8021a2c:	f88d 3007 	strb.w	r3, [sp, #7]
 8021a30:	f88d 0002 	strb.w	r0, [sp, #2]
 8021a34:	2300      	movs	r3, #0
 8021a36:	e7c6      	b.n	80219c6 <moveFunc(int, char**)+0x5a>
 8021a38:	6928      	ldr	r0, [r5, #16]
 8021a3a:	220a      	movs	r2, #10
 8021a3c:	2100      	movs	r1, #0
 8021a3e:	f01d fd6f 	bl	803f520 <strtol>
 8021a42:	2c05      	cmp	r4, #5
 8021a44:	b2c0      	uxtb	r0, r0
 8021a46:	f88d 0007 	strb.w	r0, [sp, #7]
 8021a4a:	dcb6      	bgt.n	80219ba <moveFunc(int, char**)+0x4e>
 8021a4c:	2300      	movs	r3, #0
 8021a4e:	e7ba      	b.n	80219c6 <moveFunc(int, char**)+0x5a>
 8021a50:	08042bac 	.word	0x08042bac
 8021a54:	08044000 	.word	0x08044000

08021a58 <articulationFunc(int, char**)>:
 8021a58:	b508      	push	{r3, lr}
 8021a5a:	f44f 4180 	mov.w	r1, #16384	; 0x4000
 8021a5e:	4802      	ldr	r0, [pc, #8]	; (8021a68 <articulationFunc(int, char**)+0x10>)
 8021a60:	f001 f82c 	bl	8022abc <Robot::updateArticulation(Articulation::State_e)>
 8021a64:	2000      	movs	r0, #0
 8021a66:	bd08      	pop	{r3, pc}
 8021a68:	2000f630 	.word	0x2000f630
 8021a6c:	8101b108 	.word	0x8101b108
 8021a70:	8400b0b0 	.word	0x8400b0b0
 8021a74:	00000000 	.word	0x00000000

08021a78 <helpFunc(int, char**)>:
 8021a78:	b508      	push	{r3, lr}
 8021a7a:	f7ff fd59 	bl	8021530 <CLI_listCommands>
 8021a7e:	2000      	movs	r0, #0
 8021a80:	bd08      	pop	{r3, pc}
 8021a82:	bf00      	nop
 8021a84:	8101b108 	.word	0x8101b108
 8021a88:	8400b0b0 	.word	0x8400b0b0
 8021a8c:	00000000 	.word	0x00000000

08021a90 <navigationFunc(int, char**)>:
 8021a90:	2801      	cmp	r0, #1
 8021a92:	dd2d      	ble.n	8021af0 <navigationFunc(int, char**)+0x60>
 8021a94:	b530      	push	{r4, r5, lr}
 8021a96:	4834      	ldr	r0, [pc, #208]	; (8021b68 <navigationFunc(int, char**)+0xd8>)
 8021a98:	b08f      	sub	sp, #60	; 0x3c
 8021a9a:	460d      	mov	r5, r1
 8021a9c:	2280      	movs	r2, #128	; 0x80
 8021a9e:	6849      	ldr	r1, [r1, #4]
 8021aa0:	f01d fc17 	bl	803f2d2 <strncmp>
 8021aa4:	4604      	mov	r4, r0
 8021aa6:	b998      	cbnz	r0, 8021ad0 <navigationFunc(int, char**)+0x40>
 8021aa8:	68a9      	ldr	r1, [r5, #8]
 8021aaa:	4830      	ldr	r0, [pc, #192]	; (8021b6c <navigationFunc(int, char**)+0xdc>)
 8021aac:	2280      	movs	r2, #128	; 0x80
 8021aae:	f01d fc10 	bl	803f2d2 <strncmp>
 8021ab2:	2301      	movs	r3, #1
 8021ab4:	2800      	cmp	r0, #0
 8021ab6:	bf0c      	ite	eq
 8021ab8:	461d      	moveq	r5, r3
 8021aba:	2502      	movne	r5, #2
 8021abc:	4619      	mov	r1, r3
 8021abe:	4618      	mov	r0, r3
 8021ac0:	466a      	mov	r2, sp
 8021ac2:	f88d 5000 	strb.w	r5, [sp]
 8021ac6:	f002 fef7 	bl	80248b8 <NAVCOMMS_sendMessage>
 8021aca:	4620      	mov	r0, r4
 8021acc:	b00f      	add	sp, #60	; 0x3c
 8021ace:	bd30      	pop	{r4, r5, pc}
 8021ad0:	6869      	ldr	r1, [r5, #4]
 8021ad2:	4827      	ldr	r0, [pc, #156]	; (8021b70 <navigationFunc(int, char**)+0xe0>)
 8021ad4:	2280      	movs	r2, #128	; 0x80
 8021ad6:	f01d fbfc 	bl	803f2d2 <strncmp>
 8021ada:	4604      	mov	r4, r0
 8021adc:	b150      	cbz	r0, 8021af4 <navigationFunc(int, char**)+0x64>
 8021ade:	6869      	ldr	r1, [r5, #4]
 8021ae0:	4824      	ldr	r0, [pc, #144]	; (8021b74 <navigationFunc(int, char**)+0xe4>)
 8021ae2:	2280      	movs	r2, #128	; 0x80
 8021ae4:	f01d fbf5 	bl	803f2d2 <strncmp>
 8021ae8:	b168      	cbz	r0, 8021b06 <navigationFunc(int, char**)+0x76>
 8021aea:	2000      	movs	r0, #0
 8021aec:	b00f      	add	sp, #60	; 0x3c
 8021aee:	bd30      	pop	{r4, r5, pc}
 8021af0:	2001      	movs	r0, #1
 8021af2:	4770      	bx	lr
 8021af4:	4603      	mov	r3, r0
 8021af6:	4602      	mov	r2, r0
 8021af8:	2102      	movs	r1, #2
 8021afa:	2001      	movs	r0, #1
 8021afc:	f002 fedc 	bl	80248b8 <NAVCOMMS_sendMessage>
 8021b00:	4620      	mov	r0, r4
 8021b02:	b00f      	add	sp, #60	; 0x3c
 8021b04:	bd30      	pop	{r4, r5, pc}
 8021b06:	68a9      	ldr	r1, [r5, #8]
 8021b08:	481b      	ldr	r0, [pc, #108]	; (8021b78 <navigationFunc(int, char**)+0xe8>)
 8021b0a:	2280      	movs	r2, #128	; 0x80
 8021b0c:	f01d fbe1 	bl	803f2d2 <strncmp>
 8021b10:	4604      	mov	r4, r0
 8021b12:	b978      	cbnz	r0, 8021b34 <navigationFunc(int, char**)+0xa4>
 8021b14:	68e8      	ldr	r0, [r5, #12]
 8021b16:	220a      	movs	r2, #10
 8021b18:	4621      	mov	r1, r4
 8021b1a:	f01d fd01 	bl	803f520 <strtol>
 8021b1e:	2301      	movs	r3, #1
 8021b20:	4605      	mov	r5, r0
 8021b22:	466a      	mov	r2, sp
 8021b24:	4618      	mov	r0, r3
 8021b26:	2104      	movs	r1, #4
 8021b28:	f88d 5000 	strb.w	r5, [sp]
 8021b2c:	f002 fec4 	bl	80248b8 <NAVCOMMS_sendMessage>
 8021b30:	4620      	mov	r0, r4
 8021b32:	e7cb      	b.n	8021acc <navigationFunc(int, char**)+0x3c>
 8021b34:	68a9      	ldr	r1, [r5, #8]
 8021b36:	4811      	ldr	r0, [pc, #68]	; (8021b7c <navigationFunc(int, char**)+0xec>)
 8021b38:	2280      	movs	r2, #128	; 0x80
 8021b3a:	f01d fbca 	bl	803f2d2 <strncmp>
 8021b3e:	2800      	cmp	r0, #0
 8021b40:	d1d3      	bne.n	8021aea <navigationFunc(int, char**)+0x5a>
 8021b42:	2302      	movs	r3, #2
 8021b44:	f88d 3000 	strb.w	r3, [sp]
 8021b48:	ab0e      	add	r3, sp, #56	; 0x38
 8021b4a:	eb03 0380 	add.w	r3, r3, r0, lsl #2
 8021b4e:	f843 0c37 	str.w	r0, [r3, #-55]
 8021b52:	3001      	adds	r0, #1
 8021b54:	280d      	cmp	r0, #13
 8021b56:	d1f7      	bne.n	8021b48 <navigationFunc(int, char**)+0xb8>
 8021b58:	2335      	movs	r3, #53	; 0x35
 8021b5a:	466a      	mov	r2, sp
 8021b5c:	2103      	movs	r1, #3
 8021b5e:	2001      	movs	r0, #1
 8021b60:	f002 feaa 	bl	80248b8 <NAVCOMMS_sendMessage>
 8021b64:	e7c1      	b.n	8021aea <navigationFunc(int, char**)+0x5a>
 8021b66:	bf00      	nop
 8021b68:	080438b0 	.word	0x080438b0
 8021b6c:	08042cd8 	.word	0x08042cd8
 8021b70:	08042ce0 	.word	0x08042ce0
 8021b74:	08042cec 	.word	0x08042cec
 8021b78:	08047da8 	.word	0x08047da8
 8021b7c:	08042cf8 	.word	0x08042cf8

08021b80 <systemFunc(int, char**)>:
 8021b80:	2802      	cmp	r0, #2
 8021b82:	d001      	beq.n	8021b88 <systemFunc(int, char**)+0x8>
 8021b84:	2001      	movs	r0, #1
 8021b86:	4770      	bx	lr
 8021b88:	b538      	push	{r3, r4, r5, lr}
 8021b8a:	480d      	ldr	r0, [pc, #52]	; (8021bc0 <systemFunc(int, char**)+0x40>)
 8021b8c:	460d      	mov	r5, r1
 8021b8e:	2280      	movs	r2, #128	; 0x80
 8021b90:	6849      	ldr	r1, [r1, #4]
 8021b92:	f01d fb9e 	bl	803f2d2 <strncmp>
 8021b96:	4604      	mov	r4, r0
 8021b98:	b158      	cbz	r0, 8021bb2 <systemFunc(int, char**)+0x32>
 8021b9a:	6869      	ldr	r1, [r5, #4]
 8021b9c:	4809      	ldr	r0, [pc, #36]	; (8021bc4 <systemFunc(int, char**)+0x44>)
 8021b9e:	2280      	movs	r2, #128	; 0x80
 8021ba0:	f01d fb97 	bl	803f2d2 <strncmp>
 8021ba4:	4604      	mov	r4, r0
 8021ba6:	b948      	cbnz	r0, 8021bbc <systemFunc(int, char**)+0x3c>
 8021ba8:	f04f 4360 	mov.w	r3, #3758096384	; 0xe0000000
 8021bac:	4798      	blx	r3
 8021bae:	4620      	mov	r0, r4
 8021bb0:	bd38      	pop	{r3, r4, r5, pc}
 8021bb2:	2001      	movs	r0, #1
 8021bb4:	f7ff f8ce 	bl	8020d54 <SYSTEM_printStackInformation>
 8021bb8:	4620      	mov	r0, r4
 8021bba:	bd38      	pop	{r3, r4, r5, pc}
 8021bbc:	2000      	movs	r0, #0
 8021bbe:	bd38      	pop	{r3, r4, r5, pc}
 8021bc0:	08042d00 	.word	0x08042d00
 8021bc4:	08042d08 	.word	0x08042d08

08021bc8 <waPosFunc(int, char**)>:
 8021bc8:	2802      	cmp	r0, #2
 8021bca:	d001      	beq.n	8021bd0 <waPosFunc(int, char**)+0x8>
 8021bcc:	2001      	movs	r0, #1
 8021bce:	4770      	bx	lr
 8021bd0:	b508      	push	{r3, lr}
 8021bd2:	6848      	ldr	r0, [r1, #4]
 8021bd4:	2100      	movs	r1, #0
 8021bd6:	f01d fbdb 	bl	803f390 <strtof>
 8021bda:	4b02      	ldr	r3, [pc, #8]	; (8021be4 <waPosFunc(int, char**)+0x1c>)
 8021bdc:	2000      	movs	r0, #0
 8021bde:	ed83 0a00 	vstr	s0, [r3]
 8021be2:	bd08      	pop	{r3, pc}
 8021be4:	20000078 	.word	0x20000078

08021be8 <nvmFunc(int, char**)>:
 8021be8:	2801      	cmp	r0, #1
 8021bea:	dd18      	ble.n	8021c1e <nvmFunc(int, char**)+0x36>
 8021bec:	b530      	push	{r4, r5, lr}
 8021bee:	4820      	ldr	r0, [pc, #128]	; (8021c70 <nvmFunc(int, char**)+0x88>)
 8021bf0:	b083      	sub	sp, #12
 8021bf2:	460d      	mov	r5, r1
 8021bf4:	2280      	movs	r2, #128	; 0x80
 8021bf6:	6849      	ldr	r1, [r1, #4]
 8021bf8:	f01d fb6b 	bl	803f2d2 <strncmp>
 8021bfc:	4604      	mov	r4, r0
 8021bfe:	b928      	cbnz	r0, 8021c0c <nvmFunc(int, char**)+0x24>
 8021c00:	481c      	ldr	r0, [pc, #112]	; (8021c74 <nvmFunc(int, char**)+0x8c>)
 8021c02:	f00f fde9 	bl	80317d8 <NVM_viewStats>
 8021c06:	4620      	mov	r0, r4
 8021c08:	b003      	add	sp, #12
 8021c0a:	bd30      	pop	{r4, r5, pc}
 8021c0c:	6869      	ldr	r1, [r5, #4]
 8021c0e:	481a      	ldr	r0, [pc, #104]	; (8021c78 <nvmFunc(int, char**)+0x90>)
 8021c10:	2280      	movs	r2, #128	; 0x80
 8021c12:	f01d fb5e 	bl	803f2d2 <strncmp>
 8021c16:	b120      	cbz	r0, 8021c22 <nvmFunc(int, char**)+0x3a>
 8021c18:	2000      	movs	r0, #0
 8021c1a:	b003      	add	sp, #12
 8021c1c:	bd30      	pop	{r4, r5, pc}
 8021c1e:	2001      	movs	r0, #1
 8021c20:	4770      	bx	lr
 8021c22:	68a9      	ldr	r1, [r5, #8]
 8021c24:	4813      	ldr	r0, [pc, #76]	; (8021c74 <nvmFunc(int, char**)+0x8c>)
 8021c26:	f00f fc17 	bl	8031458 <NVM_deleteEntry>
 8021c2a:	4604      	mov	r4, r0
 8021c2c:	2800      	cmp	r0, #0
 8021c2e:	d0f3      	beq.n	8021c18 <nvmFunc(int, char**)+0x30>
 8021c30:	4812      	ldr	r0, [pc, #72]	; (8021c7c <nvmFunc(int, char**)+0x94>)
 8021c32:	212f      	movs	r1, #47	; 0x2f
 8021c34:	f01d fb93 	bl	803f35e <strrchr>
 8021c38:	b160      	cbz	r0, 8021c54 <nvmFunc(int, char**)+0x6c>
 8021c3a:	212f      	movs	r1, #47	; 0x2f
 8021c3c:	480f      	ldr	r0, [pc, #60]	; (8021c7c <nvmFunc(int, char**)+0x94>)
 8021c3e:	f01d fb8e 	bl	803f35e <strrchr>
 8021c42:	1c41      	adds	r1, r0, #1
 8021c44:	4b0e      	ldr	r3, [pc, #56]	; (8021c80 <nvmFunc(int, char**)+0x98>)
 8021c46:	9400      	str	r4, [sp, #0]
 8021c48:	f240 42c2 	movw	r2, #1218	; 0x4c2
 8021c4c:	2002      	movs	r0, #2
 8021c4e:	f000 fda3 	bl	8022798 <DEBUG_logMsg>
 8021c52:	e7e1      	b.n	8021c18 <nvmFunc(int, char**)+0x30>
 8021c54:	4809      	ldr	r0, [pc, #36]	; (8021c7c <nvmFunc(int, char**)+0x94>)
 8021c56:	215c      	movs	r1, #92	; 0x5c
 8021c58:	f01d fb81 	bl	803f35e <strrchr>
 8021c5c:	b128      	cbz	r0, 8021c6a <nvmFunc(int, char**)+0x82>
 8021c5e:	215c      	movs	r1, #92	; 0x5c
 8021c60:	4806      	ldr	r0, [pc, #24]	; (8021c7c <nvmFunc(int, char**)+0x94>)
 8021c62:	f01d fb7c 	bl	803f35e <strrchr>
 8021c66:	1c41      	adds	r1, r0, #1
 8021c68:	e7ec      	b.n	8021c44 <nvmFunc(int, char**)+0x5c>
 8021c6a:	4904      	ldr	r1, [pc, #16]	; (8021c7c <nvmFunc(int, char**)+0x94>)
 8021c6c:	e7ea      	b.n	8021c44 <nvmFunc(int, char**)+0x5c>
 8021c6e:	bf00      	nop
 8021c70:	08042d18 	.word	0x08042d18
 8021c74:	2000de14 	.word	0x2000de14
 8021c78:	08042a4c 	.word	0x08042a4c
 8021c7c:	080429cc 	.word	0x080429cc
 8021c80:	08042d20 	.word	0x08042d20

08021c84 <logFunc(int, char**)>:
 8021c84:	2800      	cmp	r0, #0
 8021c86:	dd09      	ble.n	8021c9c <logFunc(int, char**)+0x18>
 8021c88:	b510      	push	{r4, lr}
 8021c8a:	6849      	ldr	r1, [r1, #4]
 8021c8c:	4808      	ldr	r0, [pc, #32]	; (8021cb0 <logFunc(int, char**)+0x2c>)
 8021c8e:	2280      	movs	r2, #128	; 0x80
 8021c90:	f01d fb1f 	bl	803f2d2 <strncmp>
 8021c94:	4604      	mov	r4, r0
 8021c96:	b118      	cbz	r0, 8021ca0 <logFunc(int, char**)+0x1c>
 8021c98:	2000      	movs	r0, #0
 8021c9a:	bd10      	pop	{r4, pc}
 8021c9c:	2001      	movs	r0, #1
 8021c9e:	4770      	bx	lr
 8021ca0:	4b04      	ldr	r3, [pc, #16]	; (8021cb4 <logFunc(int, char**)+0x30>)
 8021ca2:	4905      	ldr	r1, [pc, #20]	; (8021cb8 <logFunc(int, char**)+0x34>)
 8021ca4:	4805      	ldr	r0, [pc, #20]	; (8021cbc <logFunc(int, char**)+0x38>)
 8021ca6:	227f      	movs	r2, #127	; 0x7f
 8021ca8:	f000 fe74 	bl	8022994 <LOG_pop>
 8021cac:	4620      	mov	r0, r4
 8021cae:	bd10      	pop	{r4, pc}
 8021cb0:	08042d40 	.word	0x08042d40
 8021cb4:	08021639 	.word	0x08021639
 8021cb8:	20003a00 	.word	0x20003a00
 8021cbc:	20003d5c 	.word	0x20003d5c

08021cc0 <ccpUart(int, char**)>:
 8021cc0:	2801      	cmp	r0, #1
 8021cc2:	dc01      	bgt.n	8021cc8 <ccpUart(int, char**)+0x8>
 8021cc4:	2001      	movs	r0, #1
 8021cc6:	4770      	bx	lr
 8021cc8:	b510      	push	{r4, lr}
 8021cca:	460c      	mov	r4, r1
 8021ccc:	6849      	ldr	r1, [r1, #4]
 8021cce:	b082      	sub	sp, #8
 8021cd0:	4608      	mov	r0, r1
 8021cd2:	9101      	str	r1, [sp, #4]
 8021cd4:	f01d fd18 	bl	803f708 <strlen>
 8021cd8:	9901      	ldr	r1, [sp, #4]
 8021cda:	4602      	mov	r2, r0
 8021cdc:	4806      	ldr	r0, [pc, #24]	; (8021cf8 <ccpUart(int, char**)+0x38>)
 8021cde:	f01d f95b 	bl	803ef98 <printf>
 8021ce2:	6864      	ldr	r4, [r4, #4]
 8021ce4:	4620      	mov	r0, r4
 8021ce6:	f01d fd0f 	bl	803f708 <strlen>
 8021cea:	b281      	uxth	r1, r0
 8021cec:	4620      	mov	r0, r4
 8021cee:	f012 ffab 	bl	8034c48 <USART_sendCcpUsartData>
 8021cf2:	2000      	movs	r0, #0
 8021cf4:	b002      	add	sp, #8
 8021cf6:	bd10      	pop	{r4, pc}
 8021cf8:	08042d48 	.word	0x08042d48

08021cfc <imuMain(int, char**)>:
 8021cfc:	2801      	cmp	r0, #1
 8021cfe:	dc01      	bgt.n	8021d04 <imuMain(int, char**)+0x8>
 8021d00:	2001      	movs	r0, #1
 8021d02:	4770      	bx	lr
 8021d04:	b5f0      	push	{r4, r5, r6, r7, lr}
 8021d06:	6849      	ldr	r1, [r1, #4]
 8021d08:	482f      	ldr	r0, [pc, #188]	; (8021dc8 <imuMain(int, char**)+0xcc>)
 8021d0a:	b09f      	sub	sp, #124	; 0x7c
 8021d0c:	f01d fcd5 	bl	803f6ba <strcmp>
 8021d10:	b110      	cbz	r0, 8021d18 <imuMain(int, char**)+0x1c>
 8021d12:	2001      	movs	r0, #1
 8021d14:	b01f      	add	sp, #124	; 0x7c
 8021d16:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8021d18:	482c      	ldr	r0, [pc, #176]	; (8021dcc <imuMain(int, char**)+0xd0>)
 8021d1a:	4d2d      	ldr	r5, [pc, #180]	; (8021dd0 <imuMain(int, char**)+0xd4>)
 8021d1c:	4c2d      	ldr	r4, [pc, #180]	; (8021dd4 <imuMain(int, char**)+0xd8>)
 8021d1e:	f01d f93b 	bl	803ef98 <printf>
 8021d22:	a812      	add	r0, sp, #72	; 0x48
 8021d24:	f00c f894 	bl	802de50 <IMU_getProcData>
 8021d28:	9815      	ldr	r0, [sp, #84]	; 0x54
 8021d2a:	f01c fb96 	bl	803e45a <__aeabi_f2d>
 8021d2e:	4602      	mov	r2, r0
 8021d30:	460b      	mov	r3, r1
 8021d32:	981d      	ldr	r0, [sp, #116]	; 0x74
 8021d34:	e9cd 2310 	strd	r2, r3, [sp, #64]	; 0x40
 8021d38:	f01c fb8f 	bl	803e45a <__aeabi_f2d>
 8021d3c:	4606      	mov	r6, r0
 8021d3e:	460f      	mov	r7, r1
 8021d40:	981c      	ldr	r0, [sp, #112]	; 0x70
 8021d42:	e9cd 670e 	strd	r6, r7, [sp, #56]	; 0x38
 8021d46:	f01c fb88 	bl	803e45a <__aeabi_f2d>
 8021d4a:	4606      	mov	r6, r0
 8021d4c:	460f      	mov	r7, r1
 8021d4e:	981b      	ldr	r0, [sp, #108]	; 0x6c
 8021d50:	e9cd 670c 	strd	r6, r7, [sp, #48]	; 0x30
 8021d54:	f01c fb81 	bl	803e45a <__aeabi_f2d>
 8021d58:	4606      	mov	r6, r0
 8021d5a:	460f      	mov	r7, r1
 8021d5c:	981a      	ldr	r0, [sp, #104]	; 0x68
 8021d5e:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
 8021d62:	f01c fb7a 	bl	803e45a <__aeabi_f2d>
 8021d66:	4606      	mov	r6, r0
 8021d68:	460f      	mov	r7, r1
 8021d6a:	9819      	ldr	r0, [sp, #100]	; 0x64
 8021d6c:	e9cd 6708 	strd	r6, r7, [sp, #32]
 8021d70:	f01c fb73 	bl	803e45a <__aeabi_f2d>
 8021d74:	4606      	mov	r6, r0
 8021d76:	460f      	mov	r7, r1
 8021d78:	9818      	ldr	r0, [sp, #96]	; 0x60
 8021d7a:	e9cd 6706 	strd	r6, r7, [sp, #24]
 8021d7e:	f01c fb6c 	bl	803e45a <__aeabi_f2d>
 8021d82:	4606      	mov	r6, r0
 8021d84:	460f      	mov	r7, r1
 8021d86:	9817      	ldr	r0, [sp, #92]	; 0x5c
 8021d88:	e9cd 6704 	strd	r6, r7, [sp, #16]
 8021d8c:	f01c fb65 	bl	803e45a <__aeabi_f2d>
 8021d90:	4606      	mov	r6, r0
 8021d92:	460f      	mov	r7, r1
 8021d94:	9816      	ldr	r0, [sp, #88]	; 0x58
 8021d96:	e9cd 6702 	strd	r6, r7, [sp, #8]
 8021d9a:	f01c fb5e 	bl	803e45a <__aeabi_f2d>
 8021d9e:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
 8021da2:	e9cd 0100 	strd	r0, r1, [sp]
 8021da6:	4628      	mov	r0, r5
 8021da8:	f01d f8f6 	bl	803ef98 <printf>
 8021dac:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 8021db0:	f018 f8ce 	bl	8039f50 <_tx_thread_sleep>
 8021db4:	2008      	movs	r0, #8
 8021db6:	f7fe ffb9 	bl	8020d2c <SYSTEM_setThreadFlag>
 8021dba:	4620      	mov	r0, r4
 8021dbc:	f00c fb18 	bl	802e3f0 <UTILITIES_isEmptyRx>
 8021dc0:	2800      	cmp	r0, #0
 8021dc2:	d1ae      	bne.n	8021d22 <imuMain(int, char**)+0x26>
 8021dc4:	b01f      	add	sp, #124	; 0x7c
 8021dc6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8021dc8:	08042d74 	.word	0x08042d74
 8021dcc:	08042d7c 	.word	0x08042d7c
 8021dd0:	08042d94 	.word	0x08042d94
 8021dd4:	200037f0 	.word	0x200037f0

08021dd8 <iocfgMain(int, char**)>:
 8021dd8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8021ddc:	4d39      	ldr	r5, [pc, #228]	; (8021ec4 <iocfgMain(int, char**)+0xec>)
 8021dde:	2301      	movs	r3, #1
 8021de0:	2600      	movs	r6, #0
 8021de2:	2803      	cmp	r0, #3
 8021de4:	716b      	strb	r3, [r5, #5]
 8021de6:	80ee      	strh	r6, [r5, #6]
 8021de8:	dc02      	bgt.n	8021df0 <iocfgMain(int, char**)+0x18>
 8021dea:	2001      	movs	r0, #1
 8021dec:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8021df0:	e9d1 8001 	ldrd	r8, r0, [r1, #4]
 8021df4:	460c      	mov	r4, r1
 8021df6:	220a      	movs	r2, #10
 8021df8:	4631      	mov	r1, r6
 8021dfa:	f01d fb91 	bl	803f520 <strtol>
 8021dfe:	f898 3000 	ldrb.w	r3, [r8]
 8021e02:	68e2      	ldr	r2, [r4, #12]
 8021e04:	f1a3 0161 	sub.w	r1, r3, #97	; 0x61
 8021e08:	b2c9      	uxtb	r1, r1
 8021e0a:	2908      	cmp	r1, #8
 8021e0c:	f892 9000 	ldrb.w	r9, [r2]
 8021e10:	4607      	mov	r7, r0
 8021e12:	d920      	bls.n	8021e56 <iocfgMain(int, char**)+0x7e>
 8021e14:	3b41      	subs	r3, #65	; 0x41
 8021e16:	b2db      	uxtb	r3, r3
 8021e18:	2b08      	cmp	r3, #8
 8021e1a:	d827      	bhi.n	8021e6c <iocfgMain(int, char**)+0x94>
 8021e1c:	4a2a      	ldr	r2, [pc, #168]	; (8021ec8 <iocfgMain(int, char**)+0xf0>)
 8021e1e:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8021e22:	4c2a      	ldr	r4, [pc, #168]	; (8021ecc <iocfgMain(int, char**)+0xf4>)
 8021e24:	6023      	str	r3, [r4, #0]
 8021e26:	b31b      	cbz	r3, 8021e70 <iocfgMain(int, char**)+0x98>
 8021e28:	2f0f      	cmp	r7, #15
 8021e2a:	d818      	bhi.n	8021e5e <iocfgMain(int, char**)+0x86>
 8021e2c:	f04f 0a01 	mov.w	sl, #1
 8021e30:	fa0a fa07 	lsl.w	sl, sl, r7
 8021e34:	f009 06df 	and.w	r6, r9, #223	; 0xdf
 8021e38:	2e49      	cmp	r6, #73	; 0x49
 8021e3a:	d001      	beq.n	8021e40 <iocfgMain(int, char**)+0x68>
 8021e3c:	2e4f      	cmp	r6, #79	; 0x4f
 8021e3e:	d12b      	bne.n	8021e98 <iocfgMain(int, char**)+0xc0>
 8021e40:	6820      	ldr	r0, [r4, #0]
 8021e42:	2800      	cmp	r0, #0
 8021e44:	d0d1      	beq.n	8021dea <iocfgMain(int, char**)+0x12>
 8021e46:	2f0f      	cmp	r7, #15
 8021e48:	d8cf      	bhi.n	8021dea <iocfgMain(int, char**)+0x12>
 8021e4a:	2e49      	cmp	r6, #73	; 0x49
 8021e4c:	d015      	beq.n	8021e7a <iocfgMain(int, char**)+0xa2>
 8021e4e:	2e4f      	cmp	r6, #79	; 0x4f
 8021e50:	d027      	beq.n	8021ea2 <iocfgMain(int, char**)+0xca>
 8021e52:	2000      	movs	r0, #0
 8021e54:	e7ca      	b.n	8021dec <iocfgMain(int, char**)+0x14>
 8021e56:	4b1c      	ldr	r3, [pc, #112]	; (8021ec8 <iocfgMain(int, char**)+0xf0>)
 8021e58:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
 8021e5c:	e7e1      	b.n	8021e22 <iocfgMain(int, char**)+0x4a>
 8021e5e:	481c      	ldr	r0, [pc, #112]	; (8021ed0 <iocfgMain(int, char**)+0xf8>)
 8021e60:	4639      	mov	r1, r7
 8021e62:	f01d f899 	bl	803ef98 <printf>
 8021e66:	f04f 0a00 	mov.w	sl, #0
 8021e6a:	e7e3      	b.n	8021e34 <iocfgMain(int, char**)+0x5c>
 8021e6c:	4c17      	ldr	r4, [pc, #92]	; (8021ecc <iocfgMain(int, char**)+0xf4>)
 8021e6e:	6026      	str	r6, [r4, #0]
 8021e70:	4641      	mov	r1, r8
 8021e72:	4818      	ldr	r0, [pc, #96]	; (8021ed4 <iocfgMain(int, char**)+0xfc>)
 8021e74:	f01d f890 	bl	803ef98 <printf>
 8021e78:	e7d6      	b.n	8021e28 <iocfgMain(int, char**)+0x50>
 8021e7a:	4912      	ldr	r1, [pc, #72]	; (8021ec4 <iocfgMain(int, char**)+0xec>)
 8021e7c:	f8c5 a000 	str.w	sl, [r5]
 8021e80:	2400      	movs	r4, #0
 8021e82:	712c      	strb	r4, [r5, #4]
 8021e84:	f019 fad2 	bl	803b42c <GPIO_Init>
 8021e88:	f898 1000 	ldrb.w	r1, [r8]
 8021e8c:	4812      	ldr	r0, [pc, #72]	; (8021ed8 <iocfgMain(int, char**)+0x100>)
 8021e8e:	463a      	mov	r2, r7
 8021e90:	f01d f882 	bl	803ef98 <printf>
 8021e94:	4620      	mov	r0, r4
 8021e96:	e7a9      	b.n	8021dec <iocfgMain(int, char**)+0x14>
 8021e98:	4649      	mov	r1, r9
 8021e9a:	4810      	ldr	r0, [pc, #64]	; (8021edc <iocfgMain(int, char**)+0x104>)
 8021e9c:	f01d f87c 	bl	803ef98 <printf>
 8021ea0:	e7ce      	b.n	8021e40 <iocfgMain(int, char**)+0x68>
 8021ea2:	f898 1000 	ldrb.w	r1, [r8]
 8021ea6:	480e      	ldr	r0, [pc, #56]	; (8021ee0 <iocfgMain(int, char**)+0x108>)
 8021ea8:	463a      	mov	r2, r7
 8021eaa:	f01d f875 	bl	803ef98 <printf>
 8021eae:	6820      	ldr	r0, [r4, #0]
 8021eb0:	4904      	ldr	r1, [pc, #16]	; (8021ec4 <iocfgMain(int, char**)+0xec>)
 8021eb2:	f8c5 a000 	str.w	sl, [r5]
 8021eb6:	2301      	movs	r3, #1
 8021eb8:	712b      	strb	r3, [r5, #4]
 8021eba:	f019 fab7 	bl	803b42c <GPIO_Init>
 8021ebe:	2000      	movs	r0, #0
 8021ec0:	e794      	b.n	8021dec <iocfgMain(int, char**)+0x14>
 8021ec2:	bf00      	nop
 8021ec4:	20003b00 	.word	0x20003b00
 8021ec8:	08043ca0 	.word	0x08043ca0
 8021ecc:	20003b08 	.word	0x20003b08
 8021ed0:	08042e10 	.word	0x08042e10
 8021ed4:	08042dd8 	.word	0x08042dd8
 8021ed8:	08042e84 	.word	0x08042e84
 8021edc:	08042e48 	.word	0x08042e48
 8021ee0:	08042ea0 	.word	0x08042ea0

08021ee4 <ioreadMain(int, char**)>:
 8021ee4:	2802      	cmp	r0, #2
 8021ee6:	dc01      	bgt.n	8021eec <ioreadMain(int, char**)+0x8>
 8021ee8:	2001      	movs	r0, #1
 8021eea:	4770      	bx	lr
 8021eec:	b538      	push	{r3, r4, r5, lr}
 8021eee:	460c      	mov	r4, r1
 8021ef0:	210a      	movs	r1, #10
 8021ef2:	6860      	ldr	r0, [r4, #4]
 8021ef4:	f01d fa22 	bl	803f33c <strnlen>
 8021ef8:	2801      	cmp	r0, #1
 8021efa:	d904      	bls.n	8021f06 <ioreadMain(int, char**)+0x22>
 8021efc:	481c      	ldr	r0, [pc, #112]	; (8021f70 <ioreadMain(int, char**)+0x8c>)
 8021efe:	f01d f84b 	bl	803ef98 <printf>
 8021f02:	2001      	movs	r0, #1
 8021f04:	bd38      	pop	{r3, r4, r5, pc}
 8021f06:	e9d4 5001 	ldrd	r5, r0, [r4, #4]
 8021f0a:	2100      	movs	r1, #0
 8021f0c:	220a      	movs	r2, #10
 8021f0e:	f01d fb07 	bl	803f520 <strtol>
 8021f12:	782b      	ldrb	r3, [r5, #0]
 8021f14:	f1a3 0161 	sub.w	r1, r3, #97	; 0x61
 8021f18:	b2c9      	uxtb	r1, r1
 8021f1a:	2908      	cmp	r1, #8
 8021f1c:	4604      	mov	r4, r0
 8021f1e:	d812      	bhi.n	8021f46 <ioreadMain(int, char**)+0x62>
 8021f20:	4b14      	ldr	r3, [pc, #80]	; (8021f74 <ioreadMain(int, char**)+0x90>)
 8021f22:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 8021f26:	b190      	cbz	r0, 8021f4e <ioreadMain(int, char**)+0x6a>
 8021f28:	2c0f      	cmp	r4, #15
 8021f2a:	d816      	bhi.n	8021f5a <ioreadMain(int, char**)+0x76>
 8021f2c:	2101      	movs	r1, #1
 8021f2e:	40a1      	lsls	r1, r4
 8021f30:	b289      	uxth	r1, r1
 8021f32:	f019 fb23 	bl	803b57c <GPIO_ReadInputDataBit>
 8021f36:	7829      	ldrb	r1, [r5, #0]
 8021f38:	4603      	mov	r3, r0
 8021f3a:	4622      	mov	r2, r4
 8021f3c:	480e      	ldr	r0, [pc, #56]	; (8021f78 <ioreadMain(int, char**)+0x94>)
 8021f3e:	f01d f82b 	bl	803ef98 <printf>
 8021f42:	2000      	movs	r0, #0
 8021f44:	bd38      	pop	{r3, r4, r5, pc}
 8021f46:	3b41      	subs	r3, #65	; 0x41
 8021f48:	b2db      	uxtb	r3, r3
 8021f4a:	2b08      	cmp	r3, #8
 8021f4c:	d90b      	bls.n	8021f66 <ioreadMain(int, char**)+0x82>
 8021f4e:	480b      	ldr	r0, [pc, #44]	; (8021f7c <ioreadMain(int, char**)+0x98>)
 8021f50:	4629      	mov	r1, r5
 8021f52:	f01d f821 	bl	803ef98 <printf>
 8021f56:	2c0f      	cmp	r4, #15
 8021f58:	d903      	bls.n	8021f62 <ioreadMain(int, char**)+0x7e>
 8021f5a:	4809      	ldr	r0, [pc, #36]	; (8021f80 <ioreadMain(int, char**)+0x9c>)
 8021f5c:	4621      	mov	r1, r4
 8021f5e:	f01d f81b 	bl	803ef98 <printf>
 8021f62:	2001      	movs	r0, #1
 8021f64:	bd38      	pop	{r3, r4, r5, pc}
 8021f66:	4a03      	ldr	r2, [pc, #12]	; (8021f74 <ioreadMain(int, char**)+0x90>)
 8021f68:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 8021f6c:	e7db      	b.n	8021f26 <ioreadMain(int, char**)+0x42>
 8021f6e:	bf00      	nop
 8021f70:	08042ec0 	.word	0x08042ec0
 8021f74:	08043ca0 	.word	0x08043ca0
 8021f78:	08042f0c 	.word	0x08042f0c
 8021f7c:	08042dd8 	.word	0x08042dd8
 8021f80:	08042e10 	.word	0x08042e10

08021f84 <iosetMain(int, char**)>:
 8021f84:	2803      	cmp	r0, #3
 8021f86:	dc01      	bgt.n	8021f8c <iosetMain(int, char**)+0x8>
 8021f88:	2001      	movs	r0, #1
 8021f8a:	4770      	bx	lr
 8021f8c:	b5f0      	push	{r4, r5, r6, r7, lr}
 8021f8e:	460c      	mov	r4, r1
 8021f90:	b083      	sub	sp, #12
 8021f92:	6860      	ldr	r0, [r4, #4]
 8021f94:	210a      	movs	r1, #10
 8021f96:	f01d f9d1 	bl	803f33c <strnlen>
 8021f9a:	2801      	cmp	r0, #1
 8021f9c:	d905      	bls.n	8021faa <iosetMain(int, char**)+0x26>
 8021f9e:	4824      	ldr	r0, [pc, #144]	; (8022030 <iosetMain(int, char**)+0xac>)
 8021fa0:	f01c fffa 	bl	803ef98 <printf>
 8021fa4:	2001      	movs	r0, #1
 8021fa6:	b003      	add	sp, #12
 8021fa8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8021faa:	e9d4 6001 	ldrd	r6, r0, [r4, #4]
 8021fae:	220a      	movs	r2, #10
 8021fb0:	2100      	movs	r1, #0
 8021fb2:	f01d fab5 	bl	803f520 <strtol>
 8021fb6:	2100      	movs	r1, #0
 8021fb8:	4603      	mov	r3, r0
 8021fba:	220a      	movs	r2, #10
 8021fbc:	68e0      	ldr	r0, [r4, #12]
 8021fbe:	461c      	mov	r4, r3
 8021fc0:	f01d faae 	bl	803f520 <strtol>
 8021fc4:	7831      	ldrb	r1, [r6, #0]
 8021fc6:	f1a1 0361 	sub.w	r3, r1, #97	; 0x61
 8021fca:	b2db      	uxtb	r3, r3
 8021fcc:	2b08      	cmp	r3, #8
 8021fce:	4605      	mov	r5, r0
 8021fd0:	d904      	bls.n	8021fdc <iosetMain(int, char**)+0x58>
 8021fd2:	f1a1 0341 	sub.w	r3, r1, #65	; 0x41
 8021fd6:	b2db      	uxtb	r3, r3
 8021fd8:	2b08      	cmp	r3, #8
 8021fda:	d816      	bhi.n	802200a <iosetMain(int, char**)+0x86>
 8021fdc:	4a15      	ldr	r2, [pc, #84]	; (8022034 <iosetMain(int, char**)+0xb0>)
 8021fde:	f852 7023 	ldr.w	r7, [r2, r3, lsl #2]
 8021fe2:	b197      	cbz	r7, 802200a <iosetMain(int, char**)+0x86>
 8021fe4:	2c0f      	cmp	r4, #15
 8021fe6:	d816      	bhi.n	8022016 <iosetMain(int, char**)+0x92>
 8021fe8:	2d01      	cmp	r5, #1
 8021fea:	d81a      	bhi.n	8022022 <iosetMain(int, char**)+0x9e>
 8021fec:	2601      	movs	r6, #1
 8021fee:	40a6      	lsls	r6, r4
 8021ff0:	4622      	mov	r2, r4
 8021ff2:	4633      	mov	r3, r6
 8021ff4:	4810      	ldr	r0, [pc, #64]	; (8022038 <iosetMain(int, char**)+0xb4>)
 8021ff6:	9500      	str	r5, [sp, #0]
 8021ff8:	f01c ffce 	bl	803ef98 <printf>
 8021ffc:	4638      	mov	r0, r7
 8021ffe:	b2b1      	uxth	r1, r6
 8022000:	b2ea      	uxtb	r2, r5
 8022002:	f019 fba9 	bl	803b758 <GPIO_WriteBit>
 8022006:	2000      	movs	r0, #0
 8022008:	e7cd      	b.n	8021fa6 <iosetMain(int, char**)+0x22>
 802200a:	480c      	ldr	r0, [pc, #48]	; (802203c <iosetMain(int, char**)+0xb8>)
 802200c:	4631      	mov	r1, r6
 802200e:	f01c ffc3 	bl	803ef98 <printf>
 8022012:	2c0f      	cmp	r4, #15
 8022014:	d903      	bls.n	802201e <iosetMain(int, char**)+0x9a>
 8022016:	480a      	ldr	r0, [pc, #40]	; (8022040 <iosetMain(int, char**)+0xbc>)
 8022018:	4621      	mov	r1, r4
 802201a:	f01c ffbd 	bl	803ef98 <printf>
 802201e:	2d01      	cmp	r5, #1
 8022020:	d9c0      	bls.n	8021fa4 <iosetMain(int, char**)+0x20>
 8022022:	4808      	ldr	r0, [pc, #32]	; (8022044 <iosetMain(int, char**)+0xc0>)
 8022024:	4629      	mov	r1, r5
 8022026:	f01c ffb7 	bl	803ef98 <printf>
 802202a:	2001      	movs	r0, #1
 802202c:	e7bb      	b.n	8021fa6 <iosetMain(int, char**)+0x22>
 802202e:	bf00      	nop
 8022030:	08042ec0 	.word	0x08042ec0
 8022034:	08043ca0 	.word	0x08043ca0
 8022038:	08042f48 	.word	0x08042f48
 802203c:	08042dd8 	.word	0x08042dd8
 8022040:	08042e10 	.word	0x08042e10
 8022044:	08042f1c 	.word	0x08042f1c

08022048 <cdm_main(int, char**)>:
 8022048:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 802204c:	2801      	cmp	r0, #1
 802204e:	b082      	sub	sp, #8
 8022050:	dc04      	bgt.n	802205c <cdm_main(int, char**)+0x14>
 8022052:	2401      	movs	r4, #1
 8022054:	4620      	mov	r0, r4
 8022056:	b002      	add	sp, #8
 8022058:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802205c:	460e      	mov	r6, r1
 802205e:	220a      	movs	r2, #10
 8022060:	2100      	movs	r1, #0
 8022062:	4605      	mov	r5, r0
 8022064:	68b0      	ldr	r0, [r6, #8]
 8022066:	f01d fa5b 	bl	803f520 <strtol>
 802206a:	6871      	ldr	r1, [r6, #4]
 802206c:	4607      	mov	r7, r0
 802206e:	4876      	ldr	r0, [pc, #472]	; (8022248 <cdm_main(int, char**)+0x200>)
 8022070:	f01d fb23 	bl	803f6ba <strcmp>
 8022074:	b2ff      	uxtb	r7, r7
 8022076:	4604      	mov	r4, r0
 8022078:	bb00      	cbnz	r0, 80220bc <cdm_main(int, char**)+0x74>
 802207a:	2d05      	cmp	r5, #5
 802207c:	d007      	beq.n	802208e <cdm_main(int, char**)+0x46>
 802207e:	4873      	ldr	r0, [pc, #460]	; (802224c <cdm_main(int, char**)+0x204>)
 8022080:	f01c ff8a 	bl	803ef98 <printf>
 8022084:	2401      	movs	r4, #1
 8022086:	4620      	mov	r0, r4
 8022088:	b002      	add	sp, #8
 802208a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802208e:	4601      	mov	r1, r0
 8022090:	220a      	movs	r2, #10
 8022092:	68f0      	ldr	r0, [r6, #12]
 8022094:	f01d fa44 	bl	803f520 <strtol>
 8022098:	4621      	mov	r1, r4
 802209a:	4603      	mov	r3, r0
 802209c:	220a      	movs	r2, #10
 802209e:	6930      	ldr	r0, [r6, #16]
 80220a0:	f88d 3000 	strb.w	r3, [sp]
 80220a4:	f01d fa3c 	bl	803f520 <strtol>
 80220a8:	462b      	mov	r3, r5
 80220aa:	4606      	mov	r6, r0
 80220ac:	466a      	mov	r2, sp
 80220ae:	4638      	mov	r0, r7
 80220b0:	2111      	movs	r1, #17
 80220b2:	f8cd 6001 	str.w	r6, [sp, #1]
 80220b6:	f002 f9b5 	bl	8024424 <CDM_sendAxis>
 80220ba:	e7cb      	b.n	8022054 <cdm_main(int, char**)+0xc>
 80220bc:	6871      	ldr	r1, [r6, #4]
 80220be:	4864      	ldr	r0, [pc, #400]	; (8022250 <cdm_main(int, char**)+0x208>)
 80220c0:	f01d fafb 	bl	803f6ba <strcmp>
 80220c4:	4604      	mov	r4, r0
 80220c6:	b928      	cbnz	r0, 80220d4 <cdm_main(int, char**)+0x8c>
 80220c8:	2d05      	cmp	r5, #5
 80220ca:	d00f      	beq.n	80220ec <cdm_main(int, char**)+0xa4>
 80220cc:	4861      	ldr	r0, [pc, #388]	; (8022254 <cdm_main(int, char**)+0x20c>)
 80220ce:	f01c ff63 	bl	803ef98 <printf>
 80220d2:	e7bf      	b.n	8022054 <cdm_main(int, char**)+0xc>
 80220d4:	6871      	ldr	r1, [r6, #4]
 80220d6:	4860      	ldr	r0, [pc, #384]	; (8022258 <cdm_main(int, char**)+0x210>)
 80220d8:	f01d faef 	bl	803f6ba <strcmp>
 80220dc:	4604      	mov	r4, r0
 80220de:	b9e0      	cbnz	r0, 802211a <cdm_main(int, char**)+0xd2>
 80220e0:	2d03      	cmp	r5, #3
 80220e2:	d026      	beq.n	8022132 <cdm_main(int, char**)+0xea>
 80220e4:	485d      	ldr	r0, [pc, #372]	; (802225c <cdm_main(int, char**)+0x214>)
 80220e6:	f01c ff57 	bl	803ef98 <printf>
 80220ea:	e7b3      	b.n	8022054 <cdm_main(int, char**)+0xc>
 80220ec:	4601      	mov	r1, r0
 80220ee:	220a      	movs	r2, #10
 80220f0:	68f0      	ldr	r0, [r6, #12]
 80220f2:	f01d fa15 	bl	803f520 <strtol>
 80220f6:	4621      	mov	r1, r4
 80220f8:	4603      	mov	r3, r0
 80220fa:	220a      	movs	r2, #10
 80220fc:	6930      	ldr	r0, [r6, #16]
 80220fe:	f88d 3000 	strb.w	r3, [sp]
 8022102:	f01d fa0d 	bl	803f520 <strtol>
 8022106:	462b      	mov	r3, r5
 8022108:	4606      	mov	r6, r0
 802210a:	466a      	mov	r2, sp
 802210c:	4638      	mov	r0, r7
 802210e:	2112      	movs	r1, #18
 8022110:	f8cd 6001 	str.w	r6, [sp, #1]
 8022114:	f002 f986 	bl	8024424 <CDM_sendAxis>
 8022118:	e79c      	b.n	8022054 <cdm_main(int, char**)+0xc>
 802211a:	6871      	ldr	r1, [r6, #4]
 802211c:	4850      	ldr	r0, [pc, #320]	; (8022260 <cdm_main(int, char**)+0x218>)
 802211e:	f01d facc 	bl	803f6ba <strcmp>
 8022122:	4604      	mov	r4, r0
 8022124:	b960      	cbnz	r0, 8022140 <cdm_main(int, char**)+0xf8>
 8022126:	2d04      	cmp	r5, #4
 8022128:	d01d      	beq.n	8022166 <cdm_main(int, char**)+0x11e>
 802212a:	484e      	ldr	r0, [pc, #312]	; (8022264 <cdm_main(int, char**)+0x21c>)
 802212c:	f01c ff34 	bl	803ef98 <printf>
 8022130:	e790      	b.n	8022054 <cdm_main(int, char**)+0xc>
 8022132:	4638      	mov	r0, r7
 8022134:	4623      	mov	r3, r4
 8022136:	4622      	mov	r2, r4
 8022138:	2113      	movs	r1, #19
 802213a:	f002 f973 	bl	8024424 <CDM_sendAxis>
 802213e:	e789      	b.n	8022054 <cdm_main(int, char**)+0xc>
 8022140:	6871      	ldr	r1, [r6, #4]
 8022142:	4849      	ldr	r0, [pc, #292]	; (8022268 <cdm_main(int, char**)+0x220>)
 8022144:	f01d fab9 	bl	803f6ba <strcmp>
 8022148:	4601      	mov	r1, r0
 802214a:	b9d8      	cbnz	r0, 8022184 <cdm_main(int, char**)+0x13c>
 802214c:	2d03      	cmp	r5, #3
 802214e:	d061      	beq.n	8022214 <cdm_main(int, char**)+0x1cc>
 8022150:	2d05      	cmp	r5, #5
 8022152:	d11c      	bne.n	802218e <cdm_main(int, char**)+0x146>
 8022154:	f1a7 030d 	sub.w	r3, r7, #13
 8022158:	2b07      	cmp	r3, #7
 802215a:	d920      	bls.n	802219e <cdm_main(int, char**)+0x156>
 802215c:	4843      	ldr	r0, [pc, #268]	; (802226c <cdm_main(int, char**)+0x224>)
 802215e:	460c      	mov	r4, r1
 8022160:	f01c ff1a 	bl	803ef98 <printf>
 8022164:	e776      	b.n	8022054 <cdm_main(int, char**)+0xc>
 8022166:	4621      	mov	r1, r4
 8022168:	68f0      	ldr	r0, [r6, #12]
 802216a:	220a      	movs	r2, #10
 802216c:	f01d f9d8 	bl	803f520 <strtol>
 8022170:	2301      	movs	r3, #1
 8022172:	4605      	mov	r5, r0
 8022174:	466a      	mov	r2, sp
 8022176:	4638      	mov	r0, r7
 8022178:	2115      	movs	r1, #21
 802217a:	f88d 5000 	strb.w	r5, [sp]
 802217e:	f002 f951 	bl	8024424 <CDM_sendAxis>
 8022182:	e767      	b.n	8022054 <cdm_main(int, char**)+0xc>
 8022184:	483a      	ldr	r0, [pc, #232]	; (8022270 <cdm_main(int, char**)+0x228>)
 8022186:	f01c ff07 	bl	803ef98 <printf>
 802218a:	2401      	movs	r4, #1
 802218c:	e762      	b.n	8022054 <cdm_main(int, char**)+0xc>
 802218e:	4839      	ldr	r0, [pc, #228]	; (8022274 <cdm_main(int, char**)+0x22c>)
 8022190:	f01c ff02 	bl	803ef98 <printf>
 8022194:	4838      	ldr	r0, [pc, #224]	; (8022278 <cdm_main(int, char**)+0x230>)
 8022196:	f01c feff 	bl	803ef98 <printf>
 802219a:	2400      	movs	r4, #0
 802219c:	e75a      	b.n	8022054 <cdm_main(int, char**)+0xc>
 802219e:	e9d6 6003 	ldrd	r6, r0, [r6, #12]
 80221a2:	220a      	movs	r2, #10
 80221a4:	f01d f9bc 	bl	803f520 <strtol>
 80221a8:	1e43      	subs	r3, r0, #1
 80221aa:	2bfe      	cmp	r3, #254	; 0xfe
 80221ac:	4680      	mov	r8, r0
 80221ae:	d841      	bhi.n	8022234 <cdm_main(int, char**)+0x1ec>
 80221b0:	2400      	movs	r4, #0
 80221b2:	f8df 90d4 	ldr.w	r9, [pc, #212]	; 8022288 <cdm_main(int, char**)+0x240>
 80221b6:	2504      	movs	r5, #4
 80221b8:	f04f 0a00 	mov.w	sl, #0
 80221bc:	7830      	ldrb	r0, [r6, #0]
 80221be:	282d      	cmp	r0, #45	; 0x2d
 80221c0:	d026      	beq.n	8022210 <cdm_main(int, char**)+0x1c8>
 80221c2:	f01c fe67 	bl	803ee94 <toupper>
 80221c6:	b2c3      	uxtb	r3, r0
 80221c8:	2b52      	cmp	r3, #82	; 0x52
 80221ca:	d031      	beq.n	8022230 <cdm_main(int, char**)+0x1e8>
 80221cc:	2b59      	cmp	r3, #89	; 0x59
 80221ce:	d038      	beq.n	8022242 <cdm_main(int, char**)+0x1fa>
 80221d0:	2b47      	cmp	r3, #71	; 0x47
 80221d2:	d034      	beq.n	802223e <cdm_main(int, char**)+0x1f6>
 80221d4:	4648      	mov	r0, r9
 80221d6:	f01c fedf 	bl	803ef98 <printf>
 80221da:	2401      	movs	r4, #1
 80221dc:	2300      	movs	r3, #0
 80221de:	7872      	ldrb	r2, [r6, #1]
 80221e0:	ea43 038a 	orr.w	r3, r3, sl, lsl #2
 80221e4:	fa5f fa83 	uxtb.w	sl, r3
 80221e8:	b102      	cbz	r2, 80221ec <cdm_main(int, char**)+0x1a4>
 80221ea:	3601      	adds	r6, #1
 80221ec:	3d01      	subs	r5, #1
 80221ee:	b2ad      	uxth	r5, r5
 80221f0:	2d00      	cmp	r5, #0
 80221f2:	d1e3      	bne.n	80221bc <cdm_main(int, char**)+0x174>
 80221f4:	4628      	mov	r0, r5
 80221f6:	f011 fe41 	bl	8033e7c <STATUSLED_autoUpdateEnable>
 80221fa:	4638      	mov	r0, r7
 80221fc:	2302      	movs	r3, #2
 80221fe:	466a      	mov	r2, sp
 8022200:	2117      	movs	r1, #23
 8022202:	f88d a000 	strb.w	sl, [sp]
 8022206:	f88d 8001 	strb.w	r8, [sp, #1]
 802220a:	f002 f90b 	bl	8024424 <CDM_sendAxis>
 802220e:	e721      	b.n	8022054 <cdm_main(int, char**)+0xc>
 8022210:	2300      	movs	r3, #0
 8022212:	e7e4      	b.n	80221de <cdm_main(int, char**)+0x196>
 8022214:	68b1      	ldr	r1, [r6, #8]
 8022216:	4819      	ldr	r0, [pc, #100]	; (802227c <cdm_main(int, char**)+0x234>)
 8022218:	f01d fa4f 	bl	803f6ba <strcmp>
 802221c:	4604      	mov	r4, r0
 802221e:	2800      	cmp	r0, #0
 8022220:	d1b5      	bne.n	802218e <cdm_main(int, char**)+0x146>
 8022222:	4817      	ldr	r0, [pc, #92]	; (8022280 <cdm_main(int, char**)+0x238>)
 8022224:	f01c feb8 	bl	803ef98 <printf>
 8022228:	2001      	movs	r0, #1
 802222a:	f011 fe27 	bl	8033e7c <STATUSLED_autoUpdateEnable>
 802222e:	e711      	b.n	8022054 <cdm_main(int, char**)+0xc>
 8022230:	2301      	movs	r3, #1
 8022232:	e7d4      	b.n	80221de <cdm_main(int, char**)+0x196>
 8022234:	4813      	ldr	r0, [pc, #76]	; (8022284 <cdm_main(int, char**)+0x23c>)
 8022236:	f01c feaf 	bl	803ef98 <printf>
 802223a:	2401      	movs	r4, #1
 802223c:	e7b9      	b.n	80221b2 <cdm_main(int, char**)+0x16a>
 802223e:	2303      	movs	r3, #3
 8022240:	e7cd      	b.n	80221de <cdm_main(int, char**)+0x196>
 8022242:	2302      	movs	r3, #2
 8022244:	e7cb      	b.n	80221de <cdm_main(int, char**)+0x196>
 8022246:	bf00      	nop
 8022248:	08046250 	.word	0x08046250
 802224c:	08042f68 	.word	0x08042f68
 8022250:	08042fa8 	.word	0x08042fa8
 8022254:	08042fb0 	.word	0x08042fb0
 8022258:	08042fd8 	.word	0x08042fd8
 802225c:	08042fe0 	.word	0x08042fe0
 8022260:	08042ffc 	.word	0x08042ffc
 8022264:	08043004 	.word	0x08043004
 8022268:	08043424 	.word	0x08043424
 802226c:	080430bc 	.word	0x080430bc
 8022270:	08043170 	.word	0x08043170
 8022274:	08043034 	.word	0x08043034
 8022278:	08043068 	.word	0x08043068
 802227c:	0804302c 	.word	0x0804302c
 8022280:	08043080 	.word	0x08043080
 8022284:	080430e8 	.word	0x080430e8
 8022288:	0804312c 	.word	0x0804312c

0802228c <pickFunc(int, char**)>:
 802228c:	2806      	cmp	r0, #6
 802228e:	d001      	beq.n	8022294 <pickFunc(int, char**)+0x8>
 8022290:	2001      	movs	r0, #1
 8022292:	4770      	bx	lr
 8022294:	b530      	push	{r4, r5, lr}
 8022296:	460d      	mov	r5, r1
 8022298:	b083      	sub	sp, #12
 802229a:	4604      	mov	r4, r0
 802229c:	220a      	movs	r2, #10
 802229e:	6868      	ldr	r0, [r5, #4]
 80222a0:	2100      	movs	r1, #0
 80222a2:	f01d f93d 	bl	803f520 <strtol>
 80222a6:	220a      	movs	r2, #10
 80222a8:	4603      	mov	r3, r0
 80222aa:	2100      	movs	r1, #0
 80222ac:	68a8      	ldr	r0, [r5, #8]
 80222ae:	f88d 3000 	strb.w	r3, [sp]
 80222b2:	f01d f935 	bl	803f520 <strtol>
 80222b6:	220a      	movs	r2, #10
 80222b8:	4603      	mov	r3, r0
 80222ba:	2100      	movs	r1, #0
 80222bc:	68e8      	ldr	r0, [r5, #12]
 80222be:	f88d 3001 	strb.w	r3, [sp, #1]
 80222c2:	f01d f92d 	bl	803f520 <strtol>
 80222c6:	220a      	movs	r2, #10
 80222c8:	4603      	mov	r3, r0
 80222ca:	2100      	movs	r1, #0
 80222cc:	6928      	ldr	r0, [r5, #16]
 80222ce:	f88d 3002 	strb.w	r3, [sp, #2]
 80222d2:	f01d f925 	bl	803f520 <strtol>
 80222d6:	220a      	movs	r2, #10
 80222d8:	4603      	mov	r3, r0
 80222da:	2100      	movs	r1, #0
 80222dc:	6968      	ldr	r0, [r5, #20]
 80222de:	f88d 3003 	strb.w	r3, [sp, #3]
 80222e2:	f01d f91d 	bl	803f520 <strtol>
 80222e6:	2307      	movs	r3, #7
 80222e8:	4605      	mov	r5, r0
 80222ea:	466a      	mov	r2, sp
 80222ec:	4620      	mov	r0, r4
 80222ee:	2102      	movs	r1, #2
 80222f0:	f88d 5004 	strb.w	r5, [sp, #4]
 80222f4:	f003 f8f8 	bl	80254e8 <ANTCTRL_startTask>
 80222f8:	2000      	movs	r0, #0
 80222fa:	b003      	add	sp, #12
 80222fc:	bd30      	pop	{r4, r5, pc}
 80222fe:	bf00      	nop

08022300 <homeFunc(int, char**)>:
 8022300:	2803      	cmp	r0, #3
 8022302:	d001      	beq.n	8022308 <homeFunc(int, char**)+0x8>
 8022304:	2001      	movs	r0, #1
 8022306:	4770      	bx	lr
 8022308:	b530      	push	{r4, r5, lr}
 802230a:	460d      	mov	r5, r1
 802230c:	b083      	sub	sp, #12
 802230e:	4604      	mov	r4, r0
 8022310:	220a      	movs	r2, #10
 8022312:	6868      	ldr	r0, [r5, #4]
 8022314:	2100      	movs	r1, #0
 8022316:	f01d f903 	bl	803f520 <strtol>
 802231a:	2807      	cmp	r0, #7
 802231c:	4603      	mov	r3, r0
 802231e:	dd02      	ble.n	8022326 <homeFunc(int, char**)+0x26>
 8022320:	2001      	movs	r0, #1
 8022322:	b003      	add	sp, #12
 8022324:	bd30      	pop	{r4, r5, pc}
 8022326:	68a8      	ldr	r0, [r5, #8]
 8022328:	f88d 3004 	strb.w	r3, [sp, #4]
 802232c:	220a      	movs	r2, #10
 802232e:	2100      	movs	r1, #0
 8022330:	f01d f8f6 	bl	803f520 <strtol>
 8022334:	4623      	mov	r3, r4
 8022336:	4605      	mov	r5, r0
 8022338:	aa01      	add	r2, sp, #4
 802233a:	210c      	movs	r1, #12
 802233c:	2006      	movs	r0, #6
 802233e:	f88d 5005 	strb.w	r5, [sp, #5]
 8022342:	f003 f8d1 	bl	80254e8 <ANTCTRL_startTask>
 8022346:	2000      	movs	r0, #0
 8022348:	e7eb      	b.n	8022322 <homeFunc(int, char**)+0x22>
 802234a:	bf00      	nop

0802234c <launchFunc(int, char**)>:
 802234c:	2801      	cmp	r0, #1
 802234e:	dc01      	bgt.n	8022354 <launchFunc(int, char**)+0x8>
 8022350:	2001      	movs	r0, #1
 8022352:	4770      	bx	lr
 8022354:	b530      	push	{r4, r5, lr}
 8022356:	6848      	ldr	r0, [r1, #4]
 8022358:	b083      	sub	sp, #12
 802235a:	220a      	movs	r2, #10
 802235c:	2100      	movs	r1, #0
 802235e:	f01d f8df 	bl	803f520 <strtol>
 8022362:	b2c4      	uxtb	r4, r0
 8022364:	2c32      	cmp	r4, #50	; 0x32
 8022366:	f04f 0304 	mov.w	r3, #4
 802236a:	bf28      	it	cs
 802236c:	2432      	movcs	r4, #50	; 0x32
 802236e:	2537      	movs	r5, #55	; 0x37
 8022370:	eb0d 0203 	add.w	r2, sp, r3
 8022374:	2100      	movs	r1, #0
 8022376:	2006      	movs	r0, #6
 8022378:	f88d 4004 	strb.w	r4, [sp, #4]
 802237c:	f88d 5007 	strb.w	r5, [sp, #7]
 8022380:	f003 f8b2 	bl	80254e8 <ANTCTRL_startTask>
 8022384:	2000      	movs	r0, #0
 8022386:	b003      	add	sp, #12
 8022388:	bd30      	pop	{r4, r5, pc}
 802238a:	bf00      	nop

0802238c <prelaunchFunc(int, char**)>:
 802238c:	2801      	cmp	r0, #1
 802238e:	dc01      	bgt.n	8022394 <prelaunchFunc(int, char**)+0x8>
 8022390:	2001      	movs	r0, #1
 8022392:	4770      	bx	lr
 8022394:	b500      	push	{lr}
 8022396:	6848      	ldr	r0, [r1, #4]
 8022398:	b083      	sub	sp, #12
 802239a:	220a      	movs	r2, #10
 802239c:	2100      	movs	r1, #0
 802239e:	f01d f8bf 	bl	803f520 <strtol>
 80223a2:	b968      	cbnz	r0, 80223c0 <prelaunchFunc(int, char**)+0x34>
 80223a4:	f44f 535c 	mov.w	r3, #14080	; 0x3700
 80223a8:	f8ad 3004 	strh.w	r3, [sp, #4]
 80223ac:	2302      	movs	r3, #2
 80223ae:	aa01      	add	r2, sp, #4
 80223b0:	2105      	movs	r1, #5
 80223b2:	2006      	movs	r0, #6
 80223b4:	f003 f898 	bl	80254e8 <ANTCTRL_startTask>
 80223b8:	2000      	movs	r0, #0
 80223ba:	b003      	add	sp, #12
 80223bc:	f85d fb04 	ldr.w	pc, [sp], #4
 80223c0:	2801      	cmp	r0, #1
 80223c2:	d005      	beq.n	80223d0 <prelaunchFunc(int, char**)+0x44>
 80223c4:	2802      	cmp	r0, #2
 80223c6:	d008      	beq.n	80223da <prelaunchFunc(int, char**)+0x4e>
 80223c8:	2803      	cmp	r0, #3
 80223ca:	d00b      	beq.n	80223e4 <prelaunchFunc(int, char**)+0x58>
 80223cc:	2001      	movs	r0, #1
 80223ce:	e7f4      	b.n	80223ba <prelaunchFunc(int, char**)+0x2e>
 80223d0:	f243 7301 	movw	r3, #14081	; 0x3701
 80223d4:	f8ad 3004 	strh.w	r3, [sp, #4]
 80223d8:	e7e8      	b.n	80223ac <prelaunchFunc(int, char**)+0x20>
 80223da:	f243 7302 	movw	r3, #14082	; 0x3702
 80223de:	f8ad 3004 	strh.w	r3, [sp, #4]
 80223e2:	e7e3      	b.n	80223ac <prelaunchFunc(int, char**)+0x20>
 80223e4:	f243 7303 	movw	r3, #14083	; 0x3703
 80223e8:	f8ad 3004 	strh.w	r3, [sp, #4]
 80223ec:	e7de      	b.n	80223ac <prelaunchFunc(int, char**)+0x20>
 80223ee:	bf00      	nop

080223f0 <camFunc(int, char**)>:
 80223f0:	2801      	cmp	r0, #1
 80223f2:	dc01      	bgt.n	80223f8 <camFunc(int, char**)+0x8>
 80223f4:	2001      	movs	r0, #1
 80223f6:	4770      	bx	lr
 80223f8:	b570      	push	{r4, r5, r6, lr}
 80223fa:	482a      	ldr	r0, [pc, #168]	; (80224a4 <camFunc(int, char**)+0xb4>)
 80223fc:	460d      	mov	r5, r1
 80223fe:	2280      	movs	r2, #128	; 0x80
 8022400:	6849      	ldr	r1, [r1, #4]
 8022402:	f01c ff66 	bl	803f2d2 <strncmp>
 8022406:	4604      	mov	r4, r0
 8022408:	b928      	cbnz	r0, 8022416 <camFunc(int, char**)+0x26>
 802240a:	f00c fe6d 	bl	802f0e8 <CAMERA_activateProfile(CAMERA_configProfile_t)>
 802240e:	f00c fdfd 	bl	802f00c <CAMERA_trigger()>
 8022412:	4620      	mov	r0, r4
 8022414:	bd70      	pop	{r4, r5, r6, pc}
 8022416:	6869      	ldr	r1, [r5, #4]
 8022418:	4823      	ldr	r0, [pc, #140]	; (80224a8 <camFunc(int, char**)+0xb8>)
 802241a:	2280      	movs	r2, #128	; 0x80
 802241c:	f01c ff59 	bl	803f2d2 <strncmp>
 8022420:	4604      	mov	r4, r0
 8022422:	b170      	cbz	r0, 8022442 <camFunc(int, char**)+0x52>
 8022424:	6869      	ldr	r1, [r5, #4]
 8022426:	4821      	ldr	r0, [pc, #132]	; (80224ac <camFunc(int, char**)+0xbc>)
 8022428:	2280      	movs	r2, #128	; 0x80
 802242a:	f01c ff52 	bl	803f2d2 <strncmp>
 802242e:	4604      	mov	r4, r0
 8022430:	b998      	cbnz	r0, 802245a <camFunc(int, char**)+0x6a>
 8022432:	4603      	mov	r3, r0
 8022434:	4602      	mov	r2, r0
 8022436:	210e      	movs	r1, #14
 8022438:	2006      	movs	r0, #6
 802243a:	f003 f855 	bl	80254e8 <ANTCTRL_startTask>
 802243e:	4620      	mov	r0, r4
 8022440:	bd70      	pop	{r4, r5, r6, pc}
 8022442:	220a      	movs	r2, #10
 8022444:	4621      	mov	r1, r4
 8022446:	68a8      	ldr	r0, [r5, #8]
 8022448:	f01d f86a 	bl	803f520 <strtol>
 802244c:	3800      	subs	r0, #0
 802244e:	bf18      	it	ne
 8022450:	2001      	movne	r0, #1
 8022452:	f00c fb59 	bl	802eb08 <CAMERA_setSimMode(bool)>
 8022456:	4620      	mov	r0, r4
 8022458:	bd70      	pop	{r4, r5, r6, pc}
 802245a:	6869      	ldr	r1, [r5, #4]
 802245c:	4814      	ldr	r0, [pc, #80]	; (80224b0 <camFunc(int, char**)+0xc0>)
 802245e:	2280      	movs	r2, #128	; 0x80
 8022460:	f01c ff37 	bl	803f2d2 <strncmp>
 8022464:	4604      	mov	r4, r0
 8022466:	b140      	cbz	r0, 802247a <camFunc(int, char**)+0x8a>
 8022468:	6869      	ldr	r1, [r5, #4]
 802246a:	4812      	ldr	r0, [pc, #72]	; (80224b4 <camFunc(int, char**)+0xc4>)
 802246c:	2280      	movs	r2, #128	; 0x80
 802246e:	f01c ff30 	bl	803f2d2 <strncmp>
 8022472:	4604      	mov	r4, r0
 8022474:	b190      	cbz	r0, 802249c <camFunc(int, char**)+0xac>
 8022476:	2001      	movs	r0, #1
 8022478:	bd70      	pop	{r4, r5, r6, pc}
 802247a:	4601      	mov	r1, r0
 802247c:	220a      	movs	r2, #10
 802247e:	68a8      	ldr	r0, [r5, #8]
 8022480:	f01d f84e 	bl	803f520 <strtol>
 8022484:	220a      	movs	r2, #10
 8022486:	4606      	mov	r6, r0
 8022488:	4621      	mov	r1, r4
 802248a:	68a8      	ldr	r0, [r5, #8]
 802248c:	f01d f848 	bl	803f520 <strtol>
 8022490:	4601      	mov	r1, r0
 8022492:	4630      	mov	r0, r6
 8022494:	f00c fe02 	bl	802f09c <CAMERA_setPixelCenterOffsets(int, int)>
 8022498:	4620      	mov	r0, r4
 802249a:	bd70      	pop	{r4, r5, r6, pc}
 802249c:	f00c fe8e 	bl	802f1bc <CAMERA_getVersion()>
 80224a0:	4620      	mov	r0, r4
 80224a2:	bd70      	pop	{r4, r5, r6, pc}
 80224a4:	080431a4 	.word	0x080431a4
 80224a8:	080431ac 	.word	0x080431ac
 80224ac:	080431b0 	.word	0x080431b0
 80224b0:	08042a48 	.word	0x08042a48
 80224b4:	080431bc 	.word	0x080431bc

080224b8 <robotFunc(int, char**)>:
 80224b8:	2802      	cmp	r0, #2
 80224ba:	dc01      	bgt.n	80224c0 <robotFunc(int, char**)+0x8>
 80224bc:	2002      	movs	r0, #2
 80224be:	4770      	bx	lr
 80224c0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80224c2:	ed2d 8b02 	vpush	{d8}
 80224c6:	460e      	mov	r6, r1
 80224c8:	b083      	sub	sp, #12
 80224ca:	220a      	movs	r2, #10
 80224cc:	2100      	movs	r1, #0
 80224ce:	4604      	mov	r4, r0
 80224d0:	68b0      	ldr	r0, [r6, #8]
 80224d2:	f01d f825 	bl	803f520 <strtol>
 80224d6:	b2c1      	uxtb	r1, r0
 80224d8:	483c      	ldr	r0, [pc, #240]	; (80225cc <robotFunc(int, char**)+0x114>)
 80224da:	f000 fb69 	bl	8022bb0 <Robot::getAxisIndex(unsigned char)>
 80224de:	493b      	ldr	r1, [pc, #236]	; (80225cc <robotFunc(int, char**)+0x114>)
 80224e0:	4602      	mov	r2, r0
 80224e2:	4668      	mov	r0, sp
 80224e4:	f000 fb00 	bl	8022ae8 <Robot::getAxis(ROBOT_axisIndex_t)>
 80224e8:	f89d 3004 	ldrb.w	r3, [sp, #4]
 80224ec:	b923      	cbnz	r3, 80224f8 <robotFunc(int, char**)+0x40>
 80224ee:	2001      	movs	r0, #1
 80224f0:	b003      	add	sp, #12
 80224f2:	ecbd 8b02 	vpop	{d8}
 80224f6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80224f8:	6871      	ldr	r1, [r6, #4]
 80224fa:	4835      	ldr	r0, [pc, #212]	; (80225d0 <robotFunc(int, char**)+0x118>)
 80224fc:	9f00      	ldr	r7, [sp, #0]
 80224fe:	2280      	movs	r2, #128	; 0x80
 8022500:	f01c fee7 	bl	803f2d2 <strncmp>
 8022504:	4605      	mov	r5, r0
 8022506:	b9f8      	cbnz	r0, 8022548 <robotFunc(int, char**)+0x90>
 8022508:	2c03      	cmp	r4, #3
 802250a:	d042      	beq.n	8022592 <robotFunc(int, char**)+0xda>
 802250c:	68f1      	ldr	r1, [r6, #12]
 802250e:	4831      	ldr	r0, [pc, #196]	; (80225d4 <robotFunc(int, char**)+0x11c>)
 8022510:	2280      	movs	r2, #128	; 0x80
 8022512:	f01c fede 	bl	803f2d2 <strncmp>
 8022516:	4629      	mov	r1, r5
 8022518:	4604      	mov	r4, r0
 802251a:	220a      	movs	r2, #10
 802251c:	6930      	ldr	r0, [r6, #16]
 802251e:	f01c ffff 	bl	803f520 <strtol>
 8022522:	683a      	ldr	r2, [r7, #0]
 8022524:	4603      	mov	r3, r0
 8022526:	4829      	ldr	r0, [pc, #164]	; (80225cc <robotFunc(int, char**)+0x114>)
 8022528:	6916      	ldr	r6, [r2, #16]
 802252a:	ee08 3a10 	vmov	s16, r3
 802252e:	f000 fbaf 	bl	8022c90 <Robot::getBusVoltage()>
 8022532:	1e21      	subs	r1, r4, #0
 8022534:	4602      	mov	r2, r0
 8022536:	eeb8 0ac8 	vcvt.f32.s32	s0, s16
 802253a:	462b      	mov	r3, r5
 802253c:	bf18      	it	ne
 802253e:	2101      	movne	r1, #1
 8022540:	4638      	mov	r0, r7
 8022542:	47b0      	blx	r6
 8022544:	4628      	mov	r0, r5
 8022546:	e7d3      	b.n	80224f0 <robotFunc(int, char**)+0x38>
 8022548:	6871      	ldr	r1, [r6, #4]
 802254a:	4823      	ldr	r0, [pc, #140]	; (80225d8 <robotFunc(int, char**)+0x120>)
 802254c:	2280      	movs	r2, #128	; 0x80
 802254e:	f01c fec0 	bl	803f2d2 <strncmp>
 8022552:	bb00      	cbnz	r0, 8022596 <robotFunc(int, char**)+0xde>
 8022554:	2c03      	cmp	r4, #3
 8022556:	d01c      	beq.n	8022592 <robotFunc(int, char**)+0xda>
 8022558:	68f3      	ldr	r3, [r6, #12]
 802255a:	6930      	ldr	r0, [r6, #16]
 802255c:	7819      	ldrb	r1, [r3, #0]
 802255e:	292d      	cmp	r1, #45	; 0x2d
 8022560:	bf1c      	itt	ne
 8022562:	f1a1 042b 	subne.w	r4, r1, #43	; 0x2b
 8022566:	fab4 f484 	clzne	r4, r4
 802256a:	f04f 020a 	mov.w	r2, #10
 802256e:	f04f 0100 	mov.w	r1, #0
 8022572:	bf14      	ite	ne
 8022574:	0964      	lsrne	r4, r4, #5
 8022576:	2402      	moveq	r4, #2
 8022578:	f01c ffd2 	bl	803f520 <strtol>
 802257c:	683b      	ldr	r3, [r7, #0]
 802257e:	ee07 0a90 	vmov	s15, r0
 8022582:	689b      	ldr	r3, [r3, #8]
 8022584:	eeb8 0ae7 	vcvt.f32.s32	s0, s15
 8022588:	4621      	mov	r1, r4
 802258a:	4638      	mov	r0, r7
 802258c:	4798      	blx	r3
 802258e:	2000      	movs	r0, #0
 8022590:	e7ae      	b.n	80224f0 <robotFunc(int, char**)+0x38>
 8022592:	2002      	movs	r0, #2
 8022594:	e7ac      	b.n	80224f0 <robotFunc(int, char**)+0x38>
 8022596:	6871      	ldr	r1, [r6, #4]
 8022598:	4810      	ldr	r0, [pc, #64]	; (80225dc <robotFunc(int, char**)+0x124>)
 802259a:	2280      	movs	r2, #128	; 0x80
 802259c:	f01c fe99 	bl	803f2d2 <strncmp>
 80225a0:	4604      	mov	r4, r0
 80225a2:	b958      	cbnz	r0, 80225bc <robotFunc(int, char**)+0x104>
 80225a4:	220a      	movs	r2, #10
 80225a6:	4621      	mov	r1, r4
 80225a8:	68f0      	ldr	r0, [r6, #12]
 80225aa:	f01c ffb9 	bl	803f520 <strtol>
 80225ae:	683b      	ldr	r3, [r7, #0]
 80225b0:	b2c1      	uxtb	r1, r0
 80225b2:	6a1b      	ldr	r3, [r3, #32]
 80225b4:	4638      	mov	r0, r7
 80225b6:	4798      	blx	r3
 80225b8:	4620      	mov	r0, r4
 80225ba:	e799      	b.n	80224f0 <robotFunc(int, char**)+0x38>
 80225bc:	6871      	ldr	r1, [r6, #4]
 80225be:	4808      	ldr	r0, [pc, #32]	; (80225e0 <robotFunc(int, char**)+0x128>)
 80225c0:	2280      	movs	r2, #128	; 0x80
 80225c2:	f01c fe86 	bl	803f2d2 <strncmp>
 80225c6:	2000      	movs	r0, #0
 80225c8:	e792      	b.n	80224f0 <robotFunc(int, char**)+0x38>
 80225ca:	bf00      	nop
 80225cc:	2000f630 	.word	0x2000f630
 80225d0:	08046250 	.word	0x08046250
 80225d4:	080431c4 	.word	0x080431c4
 80225d8:	08042fa8 	.word	0x08042fa8
 80225dc:	080431c8 	.word	0x080431c8
 80225e0:	08043630 	.word	0x08043630
 80225e4:	810102c9 	.word	0x810102c9
 80225e8:	80abb0b0 	.word	0x80abb0b0
 80225ec:	00000000 	.word	0x00000000

080225f0 <CLI_enterThread>:
 80225f0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80225f4:	2008      	movs	r0, #8
 80225f6:	b085      	sub	sp, #20
 80225f8:	f7fe fb98 	bl	8020d2c <SYSTEM_setThreadFlag>
 80225fc:	e001      	b.n	8022602 <CLI_enterThread+0x12>
 80225fe:	f017 fca7 	bl	8039f50 <_tx_thread_sleep>
 8022602:	f7fe fb87 	bl	8020d14 <SYSTEM_areThreadsRunning>
 8022606:	4603      	mov	r3, r0
 8022608:	2064      	movs	r0, #100	; 0x64
 802260a:	2b00      	cmp	r3, #0
 802260c:	d0f7      	beq.n	80225fe <CLI_enterThread+0xe>
 802260e:	482f      	ldr	r0, [pc, #188]	; (80226cc <CLI_enterThread+0xdc>)
 8022610:	4b2f      	ldr	r3, [pc, #188]	; (80226d0 <CLI_enterThread+0xe0>)
 8022612:	4d30      	ldr	r5, [pc, #192]	; (80226d4 <CLI_enterThread+0xe4>)
 8022614:	4f30      	ldr	r7, [pc, #192]	; (80226d8 <CLI_enterThread+0xe8>)
 8022616:	2201      	movs	r2, #1
 8022618:	f44f 7100 	mov.w	r1, #512	; 0x200
 802261c:	4606      	mov	r6, r0
 802261e:	f00b fe83 	bl	802e328 <UTILITIES_initRingBuff>
 8022622:	482e      	ldr	r0, [pc, #184]	; (80226dc <CLI_enterThread+0xec>)
 8022624:	f7fe fefa 	bl	802141c <CLI_init>
 8022628:	46a8      	mov	r8, r5
 802262a:	2400      	movs	r4, #0
 802262c:	e00f      	b.n	802264e <CLI_enterThread+0x5e>
 802262e:	079b      	lsls	r3, r3, #30
 8022630:	d507      	bpl.n	8022642 <CLI_enterThread+0x52>
 8022632:	2202      	movs	r2, #2
 8022634:	f06f 0102 	mvn.w	r1, #2
 8022638:	4638      	mov	r0, r7
 802263a:	f016 fd9d 	bl	8039178 <_tx_event_flags_set>
 802263e:	f001 fd95 	bl	802416c <CCP_processRxUsartMessage>
 8022642:	2008      	movs	r0, #8
 8022644:	f7fe fb72 	bl	8020d2c <SYSTEM_setThreadFlag>
 8022648:	2064      	movs	r0, #100	; 0x64
 802264a:	f017 fc81 	bl	8039f50 <_tx_thread_sleep>
 802264e:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8022652:	9300      	str	r3, [sp, #0]
 8022654:	2200      	movs	r2, #0
 8022656:	ab03      	add	r3, sp, #12
 8022658:	2103      	movs	r1, #3
 802265a:	4638      	mov	r0, r7
 802265c:	f016 fd12 	bl	8039084 <_tx_event_flags_get>
 8022660:	2800      	cmp	r0, #0
 8022662:	d1ee      	bne.n	8022642 <CLI_enterThread+0x52>
 8022664:	9b03      	ldr	r3, [sp, #12]
 8022666:	07da      	lsls	r2, r3, #31
 8022668:	d5e1      	bpl.n	802262e <CLI_enterThread+0x3e>
 802266a:	1929      	adds	r1, r5, r4
 802266c:	4630      	mov	r0, r6
 802266e:	f00b fe6d 	bl	802e34c <UTILITIES_popRingBuff>
 8022672:	2800      	cmp	r0, #0
 8022674:	db14      	blt.n	80226a0 <CLI_enterThread+0xb0>
 8022676:	5d2b      	ldrb	r3, [r5, r4]
 8022678:	2b0d      	cmp	r3, #13
 802267a:	d0f6      	beq.n	802266a <CLI_enterThread+0x7a>
 802267c:	2b0a      	cmp	r3, #10
 802267e:	d017      	beq.n	80226b0 <CLI_enterThread+0xc0>
 8022680:	3401      	adds	r4, #1
 8022682:	f5b4 7f00 	cmp.w	r4, #512	; 0x200
 8022686:	d3f0      	bcc.n	802266a <CLI_enterThread+0x7a>
 8022688:	2280      	movs	r2, #128	; 0x80
 802268a:	2100      	movs	r1, #0
 802268c:	4640      	mov	r0, r8
 802268e:	2400      	movs	r4, #0
 8022690:	f01c ffe0 	bl	803f654 <memset>
 8022694:	1929      	adds	r1, r5, r4
 8022696:	4630      	mov	r0, r6
 8022698:	f00b fe58 	bl	802e34c <UTILITIES_popRingBuff>
 802269c:	2800      	cmp	r0, #0
 802269e:	daea      	bge.n	8022676 <CLI_enterThread+0x86>
 80226a0:	2202      	movs	r2, #2
 80226a2:	f06f 0101 	mvn.w	r1, #1
 80226a6:	4638      	mov	r0, r7
 80226a8:	f016 fd66 	bl	8039178 <_tx_event_flags_set>
 80226ac:	9b03      	ldr	r3, [sp, #12]
 80226ae:	e7be      	b.n	802262e <CLI_enterThread+0x3e>
 80226b0:	f04f 0900 	mov.w	r9, #0
 80226b4:	4640      	mov	r0, r8
 80226b6:	f805 9004 	strb.w	r9, [r5, r4]
 80226ba:	f7fe feed 	bl	8021498 <CLI_executeCommand>
 80226be:	4622      	mov	r2, r4
 80226c0:	4649      	mov	r1, r9
 80226c2:	4640      	mov	r0, r8
 80226c4:	464c      	mov	r4, r9
 80226c6:	f01c ffc5 	bl	803f654 <memset>
 80226ca:	e7ce      	b.n	802266a <CLI_enterThread+0x7a>
 80226cc:	200037f0 	.word	0x200037f0
 80226d0:	20003800 	.word	0x20003800
 80226d4:	20003a80 	.word	0x20003a80
 80226d8:	20003718 	.word	0x20003718
 80226dc:	20000000 	.word	0x20000000

080226e0 <CLI_dataReadyCallback>:
 80226e0:	b500      	push	{lr}
 80226e2:	b083      	sub	sp, #12
 80226e4:	4603      	mov	r3, r0
 80226e6:	f10d 0107 	add.w	r1, sp, #7
 80226ea:	2201      	movs	r2, #1
 80226ec:	4806      	ldr	r0, [pc, #24]	; (8022708 <CLI_dataReadyCallback+0x28>)
 80226ee:	f88d 3007 	strb.w	r3, [sp, #7]
 80226f2:	f00b fe59 	bl	802e3a8 <UTILITIES_pushRingBuff>
 80226f6:	2200      	movs	r2, #0
 80226f8:	2101      	movs	r1, #1
 80226fa:	4804      	ldr	r0, [pc, #16]	; (802270c <CLI_dataReadyCallback+0x2c>)
 80226fc:	f016 fd3c 	bl	8039178 <_tx_event_flags_set>
 8022700:	b003      	add	sp, #12
 8022702:	f85d fb04 	ldr.w	pc, [sp], #4
 8022706:	bf00      	nop
 8022708:	200037f0 	.word	0x200037f0
 802270c:	20003718 	.word	0x20003718

08022710 <sramWrite>:
 8022710:	b292      	uxth	r2, r2
 8022712:	f01a b839 	b.w	803c788 <SRAM_write>
 8022716:	bf00      	nop

08022718 <sramRead>:
 8022718:	b292      	uxth	r2, r2
 802271a:	f019 bff1 	b.w	803c700 <SRAM_read>
 802271e:	bf00      	nop

08022720 <DEBUG_init>:
 8022720:	b510      	push	{r4, lr}
 8022722:	4b0d      	ldr	r3, [pc, #52]	; (8022758 <DEBUG_init+0x38>)
 8022724:	490d      	ldr	r1, [pc, #52]	; (802275c <DEBUG_init+0x3c>)
 8022726:	b082      	sub	sp, #8
 8022728:	2402      	movs	r4, #2
 802272a:	2000      	movs	r0, #0
 802272c:	701c      	strb	r4, [r3, #0]
 802272e:	f012 f94b 	bl	80349c8 <USART_setup>
 8022732:	f01a f86d 	bl	803c810 <SRAM_init>
 8022736:	4620      	mov	r0, r4
 8022738:	f01a f876 	bl	803c828 <SRAM_setOpMode>
 802273c:	2300      	movs	r3, #0
 802273e:	f44f 3280 	mov.w	r2, #65536	; 0x10000
 8022742:	e9cd 3200 	strd	r3, r2, [sp]
 8022746:	4906      	ldr	r1, [pc, #24]	; (8022760 <DEBUG_init+0x40>)
 8022748:	4b06      	ldr	r3, [pc, #24]	; (8022764 <DEBUG_init+0x44>)
 802274a:	4a07      	ldr	r2, [pc, #28]	; (8022768 <DEBUG_init+0x48>)
 802274c:	4807      	ldr	r0, [pc, #28]	; (802276c <DEBUG_init+0x4c>)
 802274e:	f000 f8cb 	bl	80228e8 <LOG_init>
 8022752:	b002      	add	sp, #8
 8022754:	bd10      	pop	{r4, pc}
 8022756:	bf00      	nop
 8022758:	20003dc8 	.word	0x20003dc8
 802275c:	080226e1 	.word	0x080226e1
 8022760:	08043cc4 	.word	0x08043cc4
 8022764:	08022719 	.word	0x08022719
 8022768:	08022711 	.word	0x08022711
 802276c:	20003d5c 	.word	0x20003d5c

08022770 <DEBUG_registerPrintFunction>:
 8022770:	4b01      	ldr	r3, [pc, #4]	; (8022778 <DEBUG_registerPrintFunction+0x8>)
 8022772:	6018      	str	r0, [r3, #0]
 8022774:	4770      	bx	lr
 8022776:	bf00      	nop
 8022778:	20003d58 	.word	0x20003d58

0802277c <DEBUG_registerSubtaskSendFunction>:
 802277c:	4b01      	ldr	r3, [pc, #4]	; (8022784 <DEBUG_registerSubtaskSendFunction+0x8>)
 802277e:	6018      	str	r0, [r3, #0]
 8022780:	4770      	bx	lr
 8022782:	bf00      	nop
 8022784:	20003dc4 	.word	0x20003dc4

08022788 <DEBUG_subtaskSend>:
 8022788:	4b02      	ldr	r3, [pc, #8]	; (8022794 <DEBUG_subtaskSend+0xc>)
 802278a:	681b      	ldr	r3, [r3, #0]
 802278c:	b103      	cbz	r3, 8022790 <DEBUG_subtaskSend+0x8>
 802278e:	4718      	bx	r3
 8022790:	4770      	bx	lr
 8022792:	bf00      	nop
 8022794:	20003dc4 	.word	0x20003dc4

08022798 <DEBUG_logMsg>:
 8022798:	b408      	push	{r3}
 802279a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802279e:	4b33      	ldr	r3, [pc, #204]	; (802286c <DEBUG_logMsg+0xd4>)
 80227a0:	781d      	ldrb	r5, [r3, #0]
 80227a2:	4285      	cmp	r5, r0
 80227a4:	b085      	sub	sp, #20
 80227a6:	d204      	bcs.n	80227b2 <DEBUG_logMsg+0x1a>
 80227a8:	b005      	add	sp, #20
 80227aa:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80227ae:	b001      	add	sp, #4
 80227b0:	4770      	bx	lr
 80227b2:	4604      	mov	r4, r0
 80227b4:	460f      	mov	r7, r1
 80227b6:	482e      	ldr	r0, [pc, #184]	; (8022870 <DEBUG_logMsg+0xd8>)
 80227b8:	2105      	movs	r1, #5
 80227ba:	4616      	mov	r6, r2
 80227bc:	f016 ff54 	bl	8039668 <_tx_mutex_get>
 80227c0:	2800      	cmp	r0, #0
 80227c2:	d1f1      	bne.n	80227a8 <DEBUG_logMsg+0x10>
 80227c4:	f00a fdbc 	bl	802d340 <TIME_getTimeMsec>
 80227c8:	f8df 80b0 	ldr.w	r8, [pc, #176]	; 802287c <DEBUG_logMsg+0xe4>
 80227cc:	4a29      	ldr	r2, [pc, #164]	; (8022874 <DEBUG_logMsg+0xdc>)
 80227ce:	4603      	mov	r3, r0
 80227d0:	f44f 7100 	mov.w	r1, #512	; 0x200
 80227d4:	4640      	mov	r0, r8
 80227d6:	f01c fd21 	bl	803f21c <snprintf>
 80227da:	f5b0 7f00 	cmp.w	r0, #512	; 0x200
 80227de:	4605      	mov	r5, r0
 80227e0:	d21f      	bcs.n	8022822 <DEBUG_logMsg+0x8a>
 80227e2:	2c01      	cmp	r4, #1
 80227e4:	4440      	add	r0, r8
 80227e6:	d932      	bls.n	802284e <DEBUG_logMsg+0xb6>
 80227e8:	ab0c      	add	r3, sp, #48	; 0x30
 80227ea:	f5c5 7100 	rsb	r1, r5, #512	; 0x200
 80227ee:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80227f0:	9303      	str	r3, [sp, #12]
 80227f2:	f01c fef8 	bl	803f5e6 <vsnprintf>
 80227f6:	4405      	add	r5, r0
 80227f8:	f5b5 7f00 	cmp.w	r5, #512	; 0x200
 80227fc:	d211      	bcs.n	8022822 <DEBUG_logMsg+0x8a>
 80227fe:	4b1e      	ldr	r3, [pc, #120]	; (8022878 <DEBUG_logMsg+0xe0>)
 8022800:	681b      	ldr	r3, [r3, #0]
 8022802:	b11b      	cbz	r3, 802280c <DEBUG_logMsg+0x74>
 8022804:	491d      	ldr	r1, [pc, #116]	; (802287c <DEBUG_logMsg+0xe4>)
 8022806:	4620      	mov	r0, r4
 8022808:	b2aa      	uxth	r2, r5
 802280a:	4798      	blx	r3
 802280c:	f5c5 7100 	rsb	r1, r5, #512	; 0x200
 8022810:	eb08 0005 	add.w	r0, r8, r5
 8022814:	4a1a      	ldr	r2, [pc, #104]	; (8022880 <DEBUG_logMsg+0xe8>)
 8022816:	f01c fd01 	bl	803f21c <snprintf>
 802281a:	4405      	add	r5, r0
 802281c:	f5b5 7f00 	cmp.w	r5, #512	; 0x200
 8022820:	d307      	bcc.n	8022832 <DEBUG_logMsg+0x9a>
 8022822:	4813      	ldr	r0, [pc, #76]	; (8022870 <DEBUG_logMsg+0xd8>)
 8022824:	f017 f896 	bl	8039954 <_tx_mutex_put>
 8022828:	b005      	add	sp, #20
 802282a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 802282e:	b001      	add	sp, #4
 8022830:	4770      	bx	lr
 8022832:	b2aa      	uxth	r2, r5
 8022834:	4911      	ldr	r1, [pc, #68]	; (802287c <DEBUG_logMsg+0xe4>)
 8022836:	4813      	ldr	r0, [pc, #76]	; (8022884 <DEBUG_logMsg+0xec>)
 8022838:	f000 f86a 	bl	8022910 <LOG_write>
 802283c:	1c6a      	adds	r2, r5, #1
 802283e:	490f      	ldr	r1, [pc, #60]	; (802287c <DEBUG_logMsg+0xe4>)
 8022840:	2000      	movs	r0, #0
 8022842:	b292      	uxth	r2, r2
 8022844:	f808 0005 	strb.w	r0, [r8, r5]
 8022848:	f012 f9e2 	bl	8034c10 <USART_send>
 802284c:	e7e9      	b.n	8022822 <DEBUG_logMsg+0x8a>
 802284e:	f5c5 7100 	rsb	r1, r5, #512	; 0x200
 8022852:	4a0d      	ldr	r2, [pc, #52]	; (8022888 <DEBUG_logMsg+0xf0>)
 8022854:	9600      	str	r6, [sp, #0]
 8022856:	463b      	mov	r3, r7
 8022858:	f01c fce0 	bl	803f21c <snprintf>
 802285c:	4405      	add	r5, r0
 802285e:	f5b5 7f00 	cmp.w	r5, #512	; 0x200
 8022862:	d2de      	bcs.n	8022822 <DEBUG_logMsg+0x8a>
 8022864:	eb08 0005 	add.w	r0, r8, r5
 8022868:	e7be      	b.n	80227e8 <DEBUG_logMsg+0x50>
 802286a:	bf00      	nop
 802286c:	20003dc8 	.word	0x20003dc8
 8022870:	20003d0c 	.word	0x20003d0c
 8022874:	08043cd4 	.word	0x08043cd4
 8022878:	20003d58 	.word	0x20003d58
 802287c:	20003b0c 	.word	0x20003b0c
 8022880:	08047478 	.word	0x08047478
 8022884:	20003d5c 	.word	0x20003d5c
 8022888:	08043cdc 	.word	0x08043cdc

0802288c <assert_failed>:
 802288c:	b570      	push	{r4, r5, r6, lr}
 802288e:	460d      	mov	r5, r1
 8022890:	212f      	movs	r1, #47	; 0x2f
 8022892:	4604      	mov	r4, r0
 8022894:	f01c fd63 	bl	803f35e <strrchr>
 8022898:	b160      	cbz	r0, 80228b4 <assert_failed+0x28>
 802289a:	4620      	mov	r0, r4
 802289c:	212f      	movs	r1, #47	; 0x2f
 802289e:	f01c fd5e 	bl	803f35e <strrchr>
 80228a2:	1c44      	adds	r4, r0, #1
 80228a4:	462a      	mov	r2, r5
 80228a6:	4621      	mov	r1, r4
 80228a8:	4b08      	ldr	r3, [pc, #32]	; (80228cc <assert_failed+0x40>)
 80228aa:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80228ae:	2000      	movs	r0, #0
 80228b0:	f7ff bf72 	b.w	8022798 <DEBUG_logMsg>
 80228b4:	215c      	movs	r1, #92	; 0x5c
 80228b6:	4620      	mov	r0, r4
 80228b8:	f01c fd51 	bl	803f35e <strrchr>
 80228bc:	2800      	cmp	r0, #0
 80228be:	d0f1      	beq.n	80228a4 <assert_failed+0x18>
 80228c0:	4620      	mov	r0, r4
 80228c2:	215c      	movs	r1, #92	; 0x5c
 80228c4:	f01c fd4b 	bl	803f35e <strrchr>
 80228c8:	1c44      	adds	r4, r0, #1
 80228ca:	e7eb      	b.n	80228a4 <assert_failed+0x18>
 80228cc:	08043ce4 	.word	0x08043ce4

080228d0 <__putchar>:
 80228d0:	b500      	push	{lr}
 80228d2:	b083      	sub	sp, #12
 80228d4:	2201      	movs	r2, #1
 80228d6:	9001      	str	r0, [sp, #4]
 80228d8:	a901      	add	r1, sp, #4
 80228da:	2000      	movs	r0, #0
 80228dc:	f012 f998 	bl	8034c10 <USART_send>
 80228e0:	9801      	ldr	r0, [sp, #4]
 80228e2:	b003      	add	sp, #12
 80228e4:	f85d fb04 	ldr.w	pc, [sp], #4

080228e8 <LOG_init>:
 80228e8:	b470      	push	{r4, r5, r6}
 80228ea:	e9dd 6503 	ldrd	r6, r5, [sp, #12]
 80228ee:	b160      	cbz	r0, 802290a <LOG_init+0x22>
 80228f0:	2400      	movs	r4, #0
 80228f2:	e9c0 2300 	strd	r2, r3, [r0]
 80228f6:	e9c0 6502 	strd	r6, r5, [r0, #8]
 80228fa:	e9c0 4404 	strd	r4, r4, [r0, #16]
 80228fe:	7604      	strb	r4, [r0, #24]
 8022900:	4622      	mov	r2, r4
 8022902:	301c      	adds	r0, #28
 8022904:	bc70      	pop	{r4, r5, r6}
 8022906:	f016 be1f 	b.w	8039548 <_tx_mutex_create>
 802290a:	bc70      	pop	{r4, r5, r6}
 802290c:	4770      	bx	lr
 802290e:	bf00      	nop

08022910 <LOG_write>:
 8022910:	2900      	cmp	r1, #0
 8022912:	d03d      	beq.n	8022990 <LOG_write+0x80>
 8022914:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8022916:	4615      	mov	r5, r2
 8022918:	b1da      	cbz	r2, 8022952 <LOG_write+0x42>
 802291a:	4604      	mov	r4, r0
 802291c:	b1c8      	cbz	r0, 8022952 <LOG_write+0x42>
 802291e:	f100 071c 	add.w	r7, r0, #28
 8022922:	460e      	mov	r6, r1
 8022924:	4638      	mov	r0, r7
 8022926:	21c8      	movs	r1, #200	; 0xc8
 8022928:	f016 fe9e 	bl	8039668 <_tx_mutex_get>
 802292c:	bb58      	cbnz	r0, 8022986 <LOG_write+0x76>
 802292e:	e9d4 2003 	ldrd	r2, r0, [r4, #12]
 8022932:	1a12      	subs	r2, r2, r0
 8022934:	4295      	cmp	r5, r2
 8022936:	d80d      	bhi.n	8022954 <LOG_write+0x44>
 8022938:	68a2      	ldr	r2, [r4, #8]
 802293a:	6823      	ldr	r3, [r4, #0]
 802293c:	4410      	add	r0, r2
 802293e:	4631      	mov	r1, r6
 8022940:	462a      	mov	r2, r5
 8022942:	4798      	blx	r3
 8022944:	6922      	ldr	r2, [r4, #16]
 8022946:	7e23      	ldrb	r3, [r4, #24]
 8022948:	4415      	add	r5, r2
 802294a:	6125      	str	r5, [r4, #16]
 802294c:	b9d3      	cbnz	r3, 8022984 <LOG_write+0x74>
 802294e:	6965      	ldr	r5, [r4, #20]
 8022950:	e018      	b.n	8022984 <LOG_write+0x74>
 8022952:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8022954:	68a1      	ldr	r1, [r4, #8]
 8022956:	6823      	ldr	r3, [r4, #0]
 8022958:	f04f 0c01 	mov.w	ip, #1
 802295c:	4408      	add	r0, r1
 802295e:	f884 c018 	strb.w	ip, [r4, #24]
 8022962:	4631      	mov	r1, r6
 8022964:	4798      	blx	r3
 8022966:	e9d4 1203 	ldrd	r1, r2, [r4, #12]
 802296a:	eba5 0c01 	sub.w	ip, r5, r1
 802296e:	1a89      	subs	r1, r1, r2
 8022970:	6823      	ldr	r3, [r4, #0]
 8022972:	68a0      	ldr	r0, [r4, #8]
 8022974:	4462      	add	r2, ip
 8022976:	4431      	add	r1, r6
 8022978:	4798      	blx	r3
 802297a:	e9d4 2303 	ldrd	r2, r3, [r4, #12]
 802297e:	1aad      	subs	r5, r5, r2
 8022980:	441d      	add	r5, r3
 8022982:	6125      	str	r5, [r4, #16]
 8022984:	6165      	str	r5, [r4, #20]
 8022986:	4638      	mov	r0, r7
 8022988:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 802298c:	f016 bfe2 	b.w	8039954 <_tx_mutex_put>
 8022990:	4770      	bx	lr
 8022992:	bf00      	nop

08022994 <LOG_pop>:
 8022994:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8022998:	ed2d 8b02 	vpush	{d8}
 802299c:	4604      	mov	r4, r0
 802299e:	b083      	sub	sp, #12
 80229a0:	301c      	adds	r0, #28
 80229a2:	460d      	mov	r5, r1
 80229a4:	21c8      	movs	r1, #200	; 0xc8
 80229a6:	ee08 0a10 	vmov	s16, r0
 80229aa:	4616      	mov	r6, r2
 80229ac:	461f      	mov	r7, r3
 80229ae:	f016 fe5b 	bl	8039668 <_tx_mutex_get>
 80229b2:	bb28      	cbnz	r0, 8022a00 <LOG_pop+0x6c>
 80229b4:	6963      	ldr	r3, [r4, #20]
 80229b6:	f8d4 c010 	ldr.w	ip, [r4, #16]
 80229ba:	9301      	str	r3, [sp, #4]
 80229bc:	459c      	cmp	ip, r3
 80229be:	d028      	beq.n	8022a12 <LOG_pop+0x7e>
 80229c0:	9b01      	ldr	r3, [sp, #4]
 80229c2:	e015      	b.n	80229f0 <LOG_pop+0x5c>
 80229c4:	f01c fe46 	bl	803f654 <memset>
 80229c8:	e9d4 3004 	ldrd	r3, r0, [r4, #16]
 80229cc:	1a1b      	subs	r3, r3, r0
 80229ce:	68a1      	ldr	r1, [r4, #8]
 80229d0:	42b3      	cmp	r3, r6
 80229d2:	bf28      	it	cs
 80229d4:	4633      	movcs	r3, r6
 80229d6:	4698      	mov	r8, r3
 80229d8:	4408      	add	r0, r1
 80229da:	461a      	mov	r2, r3
 80229dc:	4629      	mov	r1, r5
 80229de:	6863      	ldr	r3, [r4, #4]
 80229e0:	4798      	blx	r3
 80229e2:	6963      	ldr	r3, [r4, #20]
 80229e4:	4443      	add	r3, r8
 80229e6:	6163      	str	r3, [r4, #20]
 80229e8:	2f00      	cmp	r7, #0
 80229ea:	d14e      	bne.n	8022a8a <LOG_pop+0xf6>
 80229ec:	f8d4 c010 	ldr.w	ip, [r4, #16]
 80229f0:	459c      	cmp	ip, r3
 80229f2:	4632      	mov	r2, r6
 80229f4:	4628      	mov	r0, r5
 80229f6:	f04f 0100 	mov.w	r1, #0
 80229fa:	d8e3      	bhi.n	80229c4 <LOG_pop+0x30>
 80229fc:	9b01      	ldr	r3, [sp, #4]
 80229fe:	6163      	str	r3, [r4, #20]
 8022a00:	ee18 0a10 	vmov	r0, s16
 8022a04:	b003      	add	sp, #12
 8022a06:	ecbd 8b02 	vpop	{d8}
 8022a0a:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8022a0e:	f016 bfa1 	b.w	8039954 <_tx_mutex_put>
 8022a12:	46b1      	mov	r9, r6
 8022a14:	9700      	str	r7, [sp, #0]
 8022a16:	4606      	mov	r6, r0
 8022a18:	e00a      	b.n	8022a30 <LOG_pop+0x9c>
 8022a1a:	4798      	blx	r3
 8022a1c:	6963      	ldr	r3, [r4, #20]
 8022a1e:	443b      	add	r3, r7
 8022a20:	443e      	add	r6, r7
 8022a22:	6163      	str	r3, [r4, #20]
 8022a24:	9b00      	ldr	r3, [sp, #0]
 8022a26:	b103      	cbz	r3, 8022a2a <LOG_pop+0x96>
 8022a28:	4798      	blx	r3
 8022a2a:	68e3      	ldr	r3, [r4, #12]
 8022a2c:	42b3      	cmp	r3, r6
 8022a2e:	d9e5      	bls.n	80229fc <LOG_pop+0x68>
 8022a30:	464a      	mov	r2, r9
 8022a32:	2100      	movs	r1, #0
 8022a34:	4628      	mov	r0, r5
 8022a36:	f01c fe0d 	bl	803f654 <memset>
 8022a3a:	f8d4 b00c 	ldr.w	fp, [r4, #12]
 8022a3e:	f8d4 a014 	ldr.w	sl, [r4, #20]
 8022a42:	ebab 0706 	sub.w	r7, fp, r6
 8022a46:	454f      	cmp	r7, r9
 8022a48:	e9d4 3001 	ldrd	r3, r0, [r4, #4]
 8022a4c:	bf28      	it	cs
 8022a4e:	464f      	movcs	r7, r9
 8022a50:	ebab 080a 	sub.w	r8, fp, sl
 8022a54:	45b8      	cmp	r8, r7
 8022a56:	4629      	mov	r1, r5
 8022a58:	463a      	mov	r2, r7
 8022a5a:	4450      	add	r0, sl
 8022a5c:	d2dd      	bcs.n	8022a1a <LOG_pop+0x86>
 8022a5e:	4642      	mov	r2, r8
 8022a60:	4798      	blx	r3
 8022a62:	eb08 0306 	add.w	r3, r8, r6
 8022a66:	68e6      	ldr	r6, [r4, #12]
 8022a68:	1af7      	subs	r7, r6, r3
 8022a6a:	eb08 0207 	add.w	r2, r8, r7
 8022a6e:	454a      	cmp	r2, r9
 8022a70:	d903      	bls.n	8022a7a <LOG_pop+0xe6>
 8022a72:	44ca      	add	sl, r9
 8022a74:	ebaa 070b 	sub.w	r7, sl, fp
 8022a78:	19de      	adds	r6, r3, r7
 8022a7a:	e9d4 3001 	ldrd	r3, r0, [r4, #4]
 8022a7e:	eb05 0108 	add.w	r1, r5, r8
 8022a82:	463a      	mov	r2, r7
 8022a84:	4798      	blx	r3
 8022a86:	6167      	str	r7, [r4, #20]
 8022a88:	e7cc      	b.n	8022a24 <LOG_pop+0x90>
 8022a8a:	47b8      	blx	r7
 8022a8c:	6963      	ldr	r3, [r4, #20]
 8022a8e:	e7ad      	b.n	80229ec <LOG_pop+0x58>

08022a90 <Robot::Robot(AxisBase**, unsigned char, Robot::Sensors)>:
 8022a90:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8022a92:	4604      	mov	r4, r0
 8022a94:	460f      	mov	r7, r1
 8022a96:	3004      	adds	r0, #4
 8022a98:	2101      	movs	r1, #1
 8022a9a:	4616      	mov	r6, r2
 8022a9c:	461d      	mov	r5, r3
 8022a9e:	f001 f82f 	bl	8023b00 <Articulation::Articulation(Articulation::State_e)>
 8022aa2:	2355      	movs	r3, #85	; 0x55
 8022aa4:	2200      	movs	r2, #0
 8022aa6:	7326      	strb	r6, [r4, #12]
 8022aa8:	73e3      	strb	r3, [r4, #15]
 8022aaa:	60a7      	str	r7, [r4, #8]
 8022aac:	6025      	str	r5, [r4, #0]
 8022aae:	7362      	strb	r2, [r4, #13]
 8022ab0:	4620      	mov	r0, r4
 8022ab2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08022ab4 <Robot::getArticulation()>:
 8022ab4:	3004      	adds	r0, #4
 8022ab6:	f001 b825 	b.w	8023b04 <Articulation::get()>
 8022aba:	bf00      	nop

08022abc <Robot::updateArticulation(Articulation::State_e)>:
 8022abc:	b538      	push	{r3, r4, r5, lr}
 8022abe:	3004      	adds	r0, #4
 8022ac0:	460d      	mov	r5, r1
 8022ac2:	f001 f8b5 	bl	8023c30 <Articulation::transition(Articulation::State_e)>
 8022ac6:	4604      	mov	r4, r0
 8022ac8:	b908      	cbnz	r0, 8022ace <Robot::updateArticulation(Articulation::State_e)+0x12>
 8022aca:	4620      	mov	r0, r4
 8022acc:	bd38      	pop	{r3, r4, r5, pc}
 8022ace:	4628      	mov	r0, r5
 8022ad0:	f001 f926 	bl	8023d20 <Articulation::toNexusArticulation(Articulation::State_e)>
 8022ad4:	4601      	mov	r1, r0
 8022ad6:	201e      	movs	r0, #30
 8022ad8:	f001 fbbc 	bl	8024254 <CCP_setMirrorData>
 8022adc:	4620      	mov	r0, r4
 8022ade:	bd38      	pop	{r3, r4, r5, pc}

08022ae0 <Robot::start()>:
 8022ae0:	6800      	ldr	r0, [r0, #0]
 8022ae2:	6803      	ldr	r3, [r0, #0]
 8022ae4:	681b      	ldr	r3, [r3, #0]
 8022ae6:	4718      	bx	r3

08022ae8 <Robot::getAxis(ROBOT_axisIndex_t)>:
 8022ae8:	2a1b      	cmp	r2, #27
 8022aea:	d806      	bhi.n	8022afa <Robot::getAxis(ROBOT_axisIndex_t)+0x12>
 8022aec:	6889      	ldr	r1, [r1, #8]
 8022aee:	2301      	movs	r3, #1
 8022af0:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 8022af4:	6002      	str	r2, [r0, #0]
 8022af6:	7103      	strb	r3, [r0, #4]
 8022af8:	4770      	bx	lr
 8022afa:	2300      	movs	r3, #0
 8022afc:	6003      	str	r3, [r0, #0]
 8022afe:	7103      	strb	r3, [r0, #4]
 8022b00:	4770      	bx	lr
 8022b02:	bf00      	nop

08022b04 <Robot::getStatus()>:
 8022b04:	7b40      	ldrb	r0, [r0, #13]
 8022b06:	4770      	bx	lr

08022b08 <Robot::getAxisStatus(ROBOT_axisIndex_t, AXIS_status_t*)>:
 8022b08:	b570      	push	{r4, r5, r6, lr}
 8022b0a:	291b      	cmp	r1, #27
 8022b0c:	b092      	sub	sp, #72	; 0x48
 8022b0e:	460c      	mov	r4, r1
 8022b10:	d818      	bhi.n	8022b44 <Robot::getAxisStatus(ROBOT_axisIndex_t, AXIS_status_t*)+0x3c>
 8022b12:	4615      	mov	r5, r2
 8022b14:	b34a      	cbz	r2, 8022b6a <Robot::getAxisStatus(ROBOT_axisIndex_t, AXIS_status_t*)+0x62>
 8022b16:	6883      	ldr	r3, [r0, #8]
 8022b18:	f853 1021 	ldr.w	r1, [r3, r1, lsl #2]
 8022b1c:	680b      	ldr	r3, [r1, #0]
 8022b1e:	a802      	add	r0, sp, #8
 8022b20:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8022b22:	ac02      	add	r4, sp, #8
 8022b24:	4798      	blx	r3
 8022b26:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8022b28:	ae0b      	add	r6, sp, #44	; 0x2c
 8022b2a:	c60f      	stmia	r6!, {r0, r1, r2, r3}
 8022b2c:	e894 0007 	ldmia.w	r4, {r0, r1, r2}
 8022b30:	e886 0007 	stmia.w	r6, {r0, r1, r2}
 8022b34:	4628      	mov	r0, r5
 8022b36:	221c      	movs	r2, #28
 8022b38:	a90b      	add	r1, sp, #44	; 0x2c
 8022b3a:	f01c fd62 	bl	803f602 <__aeabi_memcpy>
 8022b3e:	2000      	movs	r0, #0
 8022b40:	b012      	add	sp, #72	; 0x48
 8022b42:	bd70      	pop	{r4, r5, r6, pc}
 8022b44:	4811      	ldr	r0, [pc, #68]	; (8022b8c <Robot::getAxisStatus(ROBOT_axisIndex_t, AXIS_status_t*)+0x84>)
 8022b46:	212f      	movs	r1, #47	; 0x2f
 8022b48:	f01c fc09 	bl	803f35e <strrchr>
 8022b4c:	b180      	cbz	r0, 8022b70 <Robot::getAxisStatus(ROBOT_axisIndex_t, AXIS_status_t*)+0x68>
 8022b4e:	212f      	movs	r1, #47	; 0x2f
 8022b50:	480e      	ldr	r0, [pc, #56]	; (8022b8c <Robot::getAxisStatus(ROBOT_axisIndex_t, AXIS_status_t*)+0x84>)
 8022b52:	f01c fc04 	bl	803f35e <strrchr>
 8022b56:	1c41      	adds	r1, r0, #1
 8022b58:	4b0d      	ldr	r3, [pc, #52]	; (8022b90 <Robot::getAxisStatus(ROBOT_axisIndex_t, AXIS_status_t*)+0x88>)
 8022b5a:	9400      	str	r4, [sp, #0]
 8022b5c:	2275      	movs	r2, #117	; 0x75
 8022b5e:	2000      	movs	r0, #0
 8022b60:	f7ff fe1a 	bl	8022798 <DEBUG_logMsg>
 8022b64:	2001      	movs	r0, #1
 8022b66:	b012      	add	sp, #72	; 0x48
 8022b68:	bd70      	pop	{r4, r5, r6, pc}
 8022b6a:	4610      	mov	r0, r2
 8022b6c:	b012      	add	sp, #72	; 0x48
 8022b6e:	bd70      	pop	{r4, r5, r6, pc}
 8022b70:	4806      	ldr	r0, [pc, #24]	; (8022b8c <Robot::getAxisStatus(ROBOT_axisIndex_t, AXIS_status_t*)+0x84>)
 8022b72:	215c      	movs	r1, #92	; 0x5c
 8022b74:	f01c fbf3 	bl	803f35e <strrchr>
 8022b78:	b128      	cbz	r0, 8022b86 <Robot::getAxisStatus(ROBOT_axisIndex_t, AXIS_status_t*)+0x7e>
 8022b7a:	215c      	movs	r1, #92	; 0x5c
 8022b7c:	4803      	ldr	r0, [pc, #12]	; (8022b8c <Robot::getAxisStatus(ROBOT_axisIndex_t, AXIS_status_t*)+0x84>)
 8022b7e:	f01c fbee 	bl	803f35e <strrchr>
 8022b82:	1c41      	adds	r1, r0, #1
 8022b84:	e7e8      	b.n	8022b58 <Robot::getAxisStatus(ROBOT_axisIndex_t, AXIS_status_t*)+0x50>
 8022b86:	4901      	ldr	r1, [pc, #4]	; (8022b8c <Robot::getAxisStatus(ROBOT_axisIndex_t, AXIS_status_t*)+0x84>)
 8022b88:	e7e6      	b.n	8022b58 <Robot::getAxisStatus(ROBOT_axisIndex_t, AXIS_status_t*)+0x50>
 8022b8a:	bf00      	nop
 8022b8c:	08043cf4 	.word	0x08043cf4
 8022b90:	08043d2c 	.word	0x08043d2c

08022b94 <Robot::updateStatus(ROBOT_status_t)>:
 8022b94:	2901      	cmp	r1, #1
 8022b96:	d001      	beq.n	8022b9c <Robot::updateStatus(ROBOT_status_t)+0x8>
 8022b98:	7341      	strb	r1, [r0, #13]
 8022b9a:	4770      	bx	lr
 8022b9c:	7b43      	ldrb	r3, [r0, #13]
 8022b9e:	2b00      	cmp	r3, #0
 8022ba0:	d0fa      	beq.n	8022b98 <Robot::updateStatus(ROBOT_status_t)+0x4>
 8022ba2:	4770      	bx	lr

08022ba4 <Robot::getAxisMechanicalRatio(ROBOT_axisIndex_t)>:
 8022ba4:	6883      	ldr	r3, [r0, #8]
 8022ba6:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 8022baa:	f000 b8df 	b.w	8022d6c <AxisBase::getMechanicalRatio()>
 8022bae:	bf00      	nop

08022bb0 <Robot::getAxisIndex(unsigned char)>:
 8022bb0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8022bb2:	7b03      	ldrb	r3, [r0, #12]
 8022bb4:	b19b      	cbz	r3, 8022bde <Robot::getAxisIndex(unsigned char)+0x2e>
 8022bb6:	2400      	movs	r4, #0
 8022bb8:	4605      	mov	r5, r0
 8022bba:	460e      	mov	r6, r1
 8022bbc:	4623      	mov	r3, r4
 8022bbe:	e002      	b.n	8022bc6 <Robot::getAxisIndex(unsigned char)+0x16>
 8022bc0:	7b2a      	ldrb	r2, [r5, #12]
 8022bc2:	429a      	cmp	r2, r3
 8022bc4:	d90b      	bls.n	8022bde <Robot::getAxisIndex(unsigned char)+0x2e>
 8022bc6:	68aa      	ldr	r2, [r5, #8]
 8022bc8:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 8022bcc:	461f      	mov	r7, r3
 8022bce:	f000 f8c5 	bl	8022d5c <AxisBase::getID()>
 8022bd2:	3401      	adds	r4, #1
 8022bd4:	42b0      	cmp	r0, r6
 8022bd6:	b2e3      	uxtb	r3, r4
 8022bd8:	d1f2      	bne.n	8022bc0 <Robot::getAxisIndex(unsigned char)+0x10>
 8022bda:	4638      	mov	r0, r7
 8022bdc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8022bde:	27ff      	movs	r7, #255	; 0xff
 8022be0:	4638      	mov	r0, r7
 8022be2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08022be4 <Robot::processMsg(COMM_source_t, unsigned char, unsigned char*, unsigned short)>:
 8022be4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8022be6:	2903      	cmp	r1, #3
 8022be8:	f8bd 7018 	ldrh.w	r7, [sp, #24]
 8022bec:	4616      	mov	r6, r2
 8022bee:	461d      	mov	r5, r3
 8022bf0:	4604      	mov	r4, r0
 8022bf2:	d005      	beq.n	8022c00 <Robot::processMsg(COMM_source_t, unsigned char, unsigned char*, unsigned short)+0x1c>
 8022bf4:	2913      	cmp	r1, #19
 8022bf6:	d027      	beq.n	8022c48 <Robot::processMsg(COMM_source_t, unsigned char, unsigned char*, unsigned short)+0x64>
 8022bf8:	2902      	cmp	r1, #2
 8022bfa:	d013      	beq.n	8022c24 <Robot::processMsg(COMM_source_t, unsigned char, unsigned char*, unsigned short)+0x40>
 8022bfc:	2000      	movs	r0, #0
 8022bfe:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8022c00:	2f13      	cmp	r7, #19
 8022c02:	d1fb      	bne.n	8022bfc <Robot::processMsg(COMM_source_t, unsigned char, unsigned char*, unsigned short)+0x18>
 8022c04:	7819      	ldrb	r1, [r3, #0]
 8022c06:	f7ff ffd3 	bl	8022bb0 <Robot::getAxisIndex(unsigned char)>
 8022c0a:	28ff      	cmp	r0, #255	; 0xff
 8022c0c:	d0f6      	beq.n	8022bfc <Robot::processMsg(COMM_source_t, unsigned char, unsigned char*, unsigned short)+0x18>
 8022c0e:	68a3      	ldr	r3, [r4, #8]
 8022c10:	b200      	sxth	r0, r0
 8022c12:	462a      	mov	r2, r5
 8022c14:	f853 0020 	ldr.w	r0, [r3, r0, lsl #2]
 8022c18:	6804      	ldr	r4, [r0, #0]
 8022c1a:	463b      	mov	r3, r7
 8022c1c:	6aa4      	ldr	r4, [r4, #40]	; 0x28
 8022c1e:	4631      	mov	r1, r6
 8022c20:	47a0      	blx	r4
 8022c22:	e7eb      	b.n	8022bfc <Robot::processMsg(COMM_source_t, unsigned char, unsigned char*, unsigned short)+0x18>
 8022c24:	2f06      	cmp	r7, #6
 8022c26:	d1e9      	bne.n	8022bfc <Robot::processMsg(COMM_source_t, unsigned char, unsigned char*, unsigned short)+0x18>
 8022c28:	7819      	ldrb	r1, [r3, #0]
 8022c2a:	f7ff ffc1 	bl	8022bb0 <Robot::getAxisIndex(unsigned char)>
 8022c2e:	28ff      	cmp	r0, #255	; 0xff
 8022c30:	d0e4      	beq.n	8022bfc <Robot::processMsg(COMM_source_t, unsigned char, unsigned char*, unsigned short)+0x18>
 8022c32:	68a3      	ldr	r3, [r4, #8]
 8022c34:	b200      	sxth	r0, r0
 8022c36:	462a      	mov	r2, r5
 8022c38:	f853 0020 	ldr.w	r0, [r3, r0, lsl #2]
 8022c3c:	6804      	ldr	r4, [r0, #0]
 8022c3e:	463b      	mov	r3, r7
 8022c40:	6a64      	ldr	r4, [r4, #36]	; 0x24
 8022c42:	4631      	mov	r1, r6
 8022c44:	47a0      	blx	r4
 8022c46:	e7d9      	b.n	8022bfc <Robot::processMsg(COMM_source_t, unsigned char, unsigned char*, unsigned short)+0x18>
 8022c48:	2f0d      	cmp	r7, #13
 8022c4a:	d1d7      	bne.n	8022bfc <Robot::processMsg(COMM_source_t, unsigned char, unsigned char*, unsigned short)+0x18>
 8022c4c:	7899      	ldrb	r1, [r3, #2]
 8022c4e:	f3c1 0182 	ubfx	r1, r1, #2, #3
 8022c52:	310d      	adds	r1, #13
 8022c54:	b2c9      	uxtb	r1, r1
 8022c56:	f7ff ffab 	bl	8022bb0 <Robot::getAxisIndex(unsigned char)>
 8022c5a:	28ff      	cmp	r0, #255	; 0xff
 8022c5c:	d0ce      	beq.n	8022bfc <Robot::processMsg(COMM_source_t, unsigned char, unsigned char*, unsigned short)+0x18>
 8022c5e:	68a2      	ldr	r2, [r4, #8]
 8022c60:	792b      	ldrb	r3, [r5, #4]
 8022c62:	b200      	sxth	r0, r0
 8022c64:	f852 0020 	ldr.w	r0, [r2, r0, lsl #2]
 8022c68:	462a      	mov	r2, r5
 8022c6a:	6804      	ldr	r4, [r0, #0]
 8022c6c:	f812 1b05 	ldrb.w	r1, [r2], #5
 8022c70:	6a64      	ldr	r4, [r4, #36]	; 0x24
 8022c72:	47a0      	blx	r4
 8022c74:	e7c2      	b.n	8022bfc <Robot::processMsg(COMM_source_t, unsigned char, unsigned char*, unsigned short)+0x18>
 8022c76:	bf00      	nop

08022c78 <Robot::getAxisName(ROBOT_axisIndex_t)>:
 8022c78:	291b      	cmp	r1, #27
 8022c7a:	d901      	bls.n	8022c80 <Robot::getAxisName(ROBOT_axisIndex_t)+0x8>
 8022c7c:	4803      	ldr	r0, [pc, #12]	; (8022c8c <Robot::getAxisName(ROBOT_axisIndex_t)+0x14>)
 8022c7e:	4770      	bx	lr
 8022c80:	6883      	ldr	r3, [r0, #8]
 8022c82:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 8022c86:	f000 b86f 	b.w	8022d68 <AxisBase::getName()>
 8022c8a:	bf00      	nop
 8022c8c:	080471d0 	.word	0x080471d0

08022c90 <Robot::getBusVoltage()>:
 8022c90:	7bc0      	ldrb	r0, [r0, #15]
 8022c92:	4770      	bx	lr

08022c94 <Robot::estimateMoveTime(ROBOT_axisIndex_t, float, AXIS_mode_t)>:
 8022c94:	b410      	push	{r4}
 8022c96:	6883      	ldr	r3, [r0, #8]
 8022c98:	460c      	mov	r4, r1
 8022c9a:	7bc1      	ldrb	r1, [r0, #15]
 8022c9c:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
 8022ca0:	f85d 4b04 	ldr.w	r4, [sp], #4
 8022ca4:	f000 b866 	b.w	8022d74 <AxisBase::estimateMoveTime(float, unsigned char, AXIS_mode_t)>

08022ca8 <Robot::setBusVoltage(unsigned char)>:
 8022ca8:	73c1      	strb	r1, [r0, #15]
 8022caa:	4770      	bx	lr

08022cac <Robot::isInAttic()>:
 8022cac:	b510      	push	{r4, lr}
 8022cae:	1d04      	adds	r4, r0, #4
 8022cb0:	4620      	mov	r0, r4
 8022cb2:	f001 f875 	bl	8023da0 <Articulation::operator unsigned int() const>
 8022cb6:	f5b0 7f80 	cmp.w	r0, #256	; 0x100
 8022cba:	d101      	bne.n	8022cc0 <Robot::isInAttic()+0x14>
 8022cbc:	2001      	movs	r0, #1
 8022cbe:	bd10      	pop	{r4, pc}
 8022cc0:	4620      	mov	r0, r4
 8022cc2:	f001 f86d 	bl	8023da0 <Articulation::operator unsigned int() const>
 8022cc6:	f5b0 7f00 	cmp.w	r0, #512	; 0x200
 8022cca:	d0f7      	beq.n	8022cbc <Robot::isInAttic()+0x10>
 8022ccc:	4620      	mov	r0, r4
 8022cce:	f001 f867 	bl	8023da0 <Articulation::operator unsigned int() const>
 8022cd2:	f5b0 6f80 	cmp.w	r0, #1024	; 0x400
 8022cd6:	d0f1      	beq.n	8022cbc <Robot::isInAttic()+0x10>
 8022cd8:	4620      	mov	r0, r4
 8022cda:	f001 f861 	bl	8023da0 <Articulation::operator unsigned int() const>
 8022cde:	f5a0 6000 	sub.w	r0, r0, #2048	; 0x800
 8022ce2:	fab0 f080 	clz	r0, r0
 8022ce6:	0940      	lsrs	r0, r0, #5
 8022ce8:	bd10      	pop	{r4, pc}
 8022cea:	bf00      	nop

08022cec <AxisBase::AxisBase(char const*, unsigned char, AXIS_config_t*, AXIS_motionProfile_t const* const*, unsigned char, bool (*)(unsigned char, unsigned char, unsigned char*, unsigned short), void (*)(float), float (*)())>:
 8022cec:	e92d 49f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, fp, lr}
 8022cf0:	4c16      	ldr	r4, [pc, #88]	; (8022d4c <AxisBase::AxisBase(char const*, unsigned char, AXIS_config_t*, AXIS_motionProfile_t const* const*, unsigned char, bool (*)(unsigned char, unsigned char, unsigned char*, unsigned short), void (*)(float), float (*)())+0x60>)
 8022cf2:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8022cf4:	4680      	mov	r8, r0
 8022cf6:	f840 4b3c 	str.w	r4, [r0], #60
 8022cfa:	461d      	mov	r5, r3
 8022cfc:	460e      	mov	r6, r1
 8022cfe:	4693      	mov	fp, r2
 8022d00:	f89d 4024 	ldrb.w	r4, [sp, #36]	; 0x24
 8022d04:	f00d fdba 	bl	803087c <Publisher::Publisher()>
 8022d08:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8022d0a:	f8c8 3084 	str.w	r3, [r8, #132]	; 0x84
 8022d0e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8022d10:	686a      	ldr	r2, [r5, #4]
 8022d12:	f8c8 3088 	str.w	r3, [r8, #136]	; 0x88
 8022d16:	9b08      	ldr	r3, [sp, #32]
 8022d18:	f8c8 2030 	str.w	r2, [r8, #48]	; 0x30
 8022d1c:	f8c8 3038 	str.w	r3, [r8, #56]	; 0x38
 8022d20:	f8c8 7080 	str.w	r7, [r8, #128]	; 0x80
 8022d24:	f888 b004 	strb.w	fp, [r8, #4]
 8022d28:	f8c8 6008 	str.w	r6, [r8, #8]
 8022d2c:	f8c8 502c 	str.w	r5, [r8, #44]	; 0x2c
 8022d30:	f888 4034 	strb.w	r4, [r8, #52]	; 0x34
 8022d34:	f108 000c 	add.w	r0, r8, #12
 8022d38:	221c      	movs	r2, #28
 8022d3a:	2100      	movs	r1, #0
 8022d3c:	f01c fc8a 	bl	803f654 <memset>
 8022d40:	2300      	movs	r3, #0
 8022d42:	f888 3028 	strb.w	r3, [r8, #40]	; 0x28
 8022d46:	4640      	mov	r0, r8
 8022d48:	e8bd 89f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, fp, pc}
 8022d4c:	08043d48 	.word	0x08043d48
 8022d50:	8101b108 	.word	0x8101b108
 8022d54:	849fb0b0 	.word	0x849fb0b0
 8022d58:	00000000 	.word	0x00000000

08022d5c <AxisBase::getID()>:
 8022d5c:	7900      	ldrb	r0, [r0, #4]
 8022d5e:	4770      	bx	lr

08022d60 <AxisBase::setCommandStatus(AXIS_commandStatus_t)>:
 8022d60:	7501      	strb	r1, [r0, #20]
 8022d62:	4770      	bx	lr

08022d64 <AxisBase::setCommandExtraStatus(unsigned int)>:
 8022d64:	6101      	str	r1, [r0, #16]
 8022d66:	4770      	bx	lr

08022d68 <AxisBase::getName()>:
 8022d68:	6880      	ldr	r0, [r0, #8]
 8022d6a:	4770      	bx	lr

08022d6c <AxisBase::getMechanicalRatio()>:
 8022d6c:	ed90 0a0c 	vldr	s0, [r0, #48]	; 0x30
 8022d70:	4770      	bx	lr
 8022d72:	bf00      	nop

08022d74 <AxisBase::estimateMoveTime(float, unsigned char, AXIS_mode_t)>:
 8022d74:	b510      	push	{r4, lr}
 8022d76:	ed2d 8b06 	vpush	{d8-d10}
 8022d7a:	f890 3034 	ldrb.w	r3, [r0, #52]	; 0x34
 8022d7e:	6b84      	ldr	r4, [r0, #56]	; 0x38
 8022d80:	1e58      	subs	r0, r3, #1
 8022d82:	f854 4022 	ldr.w	r4, [r4, r2, lsl #2]
 8022d86:	b2c2      	uxtb	r2, r0
 8022d88:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 8022d8c:	f010 0fff 	tst.w	r0, #255	; 0xff
 8022d90:	b086      	sub	sp, #24
 8022d92:	eb04 0482 	add.w	r4, r4, r2, lsl #2
 8022d96:	eeb0 9a40 	vmov.f32	s18, s0
 8022d9a:	d00d      	beq.n	8022db8 <AxisBase::estimateMoveTime(float, unsigned char, AXIS_mode_t)+0x44>
 8022d9c:	3b02      	subs	r3, #2
 8022d9e:	b2db      	uxtb	r3, r3
 8022da0:	f06f 0213 	mvn.w	r2, #19
 8022da4:	fb03 2202 	mla	r2, r3, r2, r2
 8022da8:	4422      	add	r2, r4
 8022daa:	e002      	b.n	8022db2 <AxisBase::estimateMoveTime(float, unsigned char, AXIS_mode_t)+0x3e>
 8022dac:	3c14      	subs	r4, #20
 8022dae:	4294      	cmp	r4, r2
 8022db0:	d002      	beq.n	8022db8 <AxisBase::estimateMoveTime(float, unsigned char, AXIS_mode_t)+0x44>
 8022db2:	7823      	ldrb	r3, [r4, #0]
 8022db4:	428b      	cmp	r3, r1
 8022db6:	d8f9      	bhi.n	8022dac <AxisBase::estimateMoveTime(float, unsigned char, AXIS_mode_t)+0x38>
 8022db8:	edd4 6a01 	vldr	s13, [r4, #4]
 8022dbc:	ed94 7a02 	vldr	s14, [r4, #8]
 8022dc0:	edd4 7a03 	vldr	s15, [r4, #12]
 8022dc4:	ed8d 9a00 	vstr	s18, [sp]
 8022dc8:	eec6 9a87 	vdiv.f32	s19, s13, s14
 8022dcc:	2300      	movs	r3, #0
 8022dce:	2203      	movs	r2, #3
 8022dd0:	a903      	add	r1, sp, #12
 8022dd2:	4668      	mov	r0, sp
 8022dd4:	9303      	str	r3, [sp, #12]
 8022dd6:	9304      	str	r3, [sp, #16]
 8022dd8:	9305      	str	r3, [sp, #20]
 8022dda:	ee86 aaa7 	vdiv.f32	s20, s13, s15
 8022dde:	eeb6 8a00 	vmov.f32	s16, #96	; 0x3f000000  0.5
 8022de2:	ee67 8a08 	vmul.f32	s17, s14, s16
 8022de6:	ee27 8a88 	vmul.f32	s16, s15, s16
 8022dea:	ee68 8aa9 	vmul.f32	s17, s17, s19
 8022dee:	ee28 8a0a 	vmul.f32	s16, s16, s20
 8022df2:	ee68 8aa9 	vmul.f32	s17, s17, s19
 8022df6:	ee28 8a0a 	vmul.f32	s16, s16, s20
 8022dfa:	edcd 8a01 	vstr	s17, [sp, #4]
 8022dfe:	ed8d 8a02 	vstr	s16, [sp, #8]
 8022e02:	f01b fa2f 	bl	803e264 <arm_abs_f32>
 8022e06:	ed9d 7a04 	vldr	s14, [sp, #16]
 8022e0a:	eddd 7a05 	vldr	s15, [sp, #20]
 8022e0e:	eddd 6a03 	vldr	s13, [sp, #12]
 8022e12:	ee37 7a27 	vadd.f32	s14, s14, s15
 8022e16:	eeb4 7ae6 	vcmpe.f32	s14, s13
 8022e1a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8022e1e:	db39      	blt.n	8022e94 <AxisBase::estimateMoveTime(float, unsigned char, AXIS_mode_t)+0x120>
 8022e20:	ee68 8a89 	vmul.f32	s17, s17, s18
 8022e24:	edd4 6a02 	vldr	s13, [r4, #8]
 8022e28:	eec8 7a87 	vdiv.f32	s15, s17, s14
 8022e2c:	ee28 8a09 	vmul.f32	s16, s16, s18
 8022e30:	ee77 7aa7 	vadd.f32	s15, s15, s15
 8022e34:	eec8 8a07 	vdiv.f32	s17, s16, s14
 8022e38:	ee87 0aa6 	vdiv.f32	s0, s15, s13
 8022e3c:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8022e40:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8022e44:	db3e      	blt.n	8022ec4 <AxisBase::estimateMoveTime(float, unsigned char, AXIS_mode_t)+0x150>
 8022e46:	eeb5 0a40 	vcmp.f32	s0, #0.0
 8022e4a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8022e4e:	eeb1 8ac0 	vsqrt.f32	s16, s0
 8022e52:	d43d      	bmi.n	8022ed0 <AxisBase::estimateMoveTime(float, unsigned char, AXIS_mode_t)+0x15c>
 8022e54:	ee78 8aa8 	vadd.f32	s17, s17, s17
 8022e58:	edd4 7a03 	vldr	s15, [r4, #12]
 8022e5c:	ee88 0aa7 	vdiv.f32	s0, s17, s15
 8022e60:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8022e64:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8022e68:	db2f      	blt.n	8022eca <AxisBase::estimateMoveTime(float, unsigned char, AXIS_mode_t)+0x156>
 8022e6a:	eeb5 0a40 	vcmp.f32	s0, #0.0
 8022e6e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8022e72:	eef1 8ac0 	vsqrt.f32	s17, s0
 8022e76:	d42e      	bmi.n	8022ed6 <AxisBase::estimateMoveTime(float, unsigned char, AXIS_mode_t)+0x162>
 8022e78:	ee38 8a28 	vadd.f32	s16, s16, s17
 8022e7c:	eddf 7a17 	vldr	s15, [pc, #92]	; 8022edc <AxisBase::estimateMoveTime(float, unsigned char, AXIS_mode_t)+0x168>
 8022e80:	ee28 8a27 	vmul.f32	s16, s16, s15
 8022e84:	eefc 7ac8 	vcvt.u32.f32	s15, s16
 8022e88:	ee17 0a90 	vmov	r0, s15
 8022e8c:	b006      	add	sp, #24
 8022e8e:	ecbd 8b06 	vpop	{d8-d10}
 8022e92:	bd10      	pop	{r4, pc}
 8022e94:	ee76 8ae8 	vsub.f32	s17, s13, s17
 8022e98:	edd4 6a01 	vldr	s13, [r4, #4]
 8022e9c:	ed9f 7a0f 	vldr	s14, [pc, #60]	; 8022edc <AxisBase::estimateMoveTime(float, unsigned char, AXIS_mode_t)+0x168>
 8022ea0:	ee38 8ac8 	vsub.f32	s16, s17, s16
 8022ea4:	ee79 9a8a 	vadd.f32	s19, s19, s20
 8022ea8:	eec8 7a26 	vdiv.f32	s15, s16, s13
 8022eac:	ee77 7aa9 	vadd.f32	s15, s15, s19
 8022eb0:	ee67 7a87 	vmul.f32	s15, s15, s14
 8022eb4:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8022eb8:	ee17 0a90 	vmov	r0, s15
 8022ebc:	b006      	add	sp, #24
 8022ebe:	ecbd 8b06 	vpop	{d8-d10}
 8022ec2:	bd10      	pop	{r4, pc}
 8022ec4:	eeb2 8a04 	vmov.f32	s16, #36	; 0x41200000  10.0
 8022ec8:	e7c4      	b.n	8022e54 <AxisBase::estimateMoveTime(float, unsigned char, AXIS_mode_t)+0xe0>
 8022eca:	eef2 8a04 	vmov.f32	s17, #36	; 0x41200000  10.0
 8022ece:	e7d3      	b.n	8022e78 <AxisBase::estimateMoveTime(float, unsigned char, AXIS_mode_t)+0x104>
 8022ed0:	f01b feae 	bl	803ec30 <sqrt(float)>
 8022ed4:	e7be      	b.n	8022e54 <AxisBase::estimateMoveTime(float, unsigned char, AXIS_mode_t)+0xe0>
 8022ed6:	f01b feab 	bl	803ec30 <sqrt(float)>
 8022eda:	e7cd      	b.n	8022e78 <AxisBase::estimateMoveTime(float, unsigned char, AXIS_mode_t)+0x104>
 8022edc:	447a0000 	.word	0x447a0000
 8022ee0:	810105c9 	.word	0x810105c9
 8022ee4:	82a8b0b0 	.word	0x82a8b0b0
 8022ee8:	00000000 	.word	0x00000000

08022eec <AxisBase::convertToEncoderCounts(float)>:
 8022eec:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8022eee:	edd0 6a0c 	vldr	s13, [r0, #48]	; 0x30
 8022ef2:	ed93 7a02 	vldr	s14, [r3, #8]
 8022ef6:	edd3 7a00 	vldr	s15, [r3]
 8022efa:	ee20 0a26 	vmul.f32	s0, s0, s13
 8022efe:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8022f02:	ee20 0a07 	vmul.f32	s0, s0, s14
 8022f06:	ee20 0a27 	vmul.f32	s0, s0, s15
 8022f0a:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 8022f0e:	ee17 0a90 	vmov	r0, s15
 8022f12:	4770      	bx	lr

08022f14 <AxisBase::getPosition()>:
 8022f14:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8022f16:	ed90 7a0c 	vldr	s14, [r0, #48]	; 0x30
 8022f1a:	edd3 6a02 	vldr	s13, [r3, #8]
 8022f1e:	edd3 7a00 	vldr	s15, [r3]
 8022f22:	ed90 0a06 	vldr	s0, [r0, #24]
 8022f26:	ee27 7a26 	vmul.f32	s14, s14, s13
 8022f2a:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8022f2e:	eeb8 0ac0 	vcvt.f32.s32	s0, s0
 8022f32:	ee67 7a27 	vmul.f32	s15, s14, s15
 8022f36:	ee80 0a27 	vdiv.f32	s0, s0, s15
 8022f3a:	4770      	bx	lr

08022f3c <AxisBase::checkWithinLimits(float)>:
 8022f3c:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8022f3e:	7c1a      	ldrb	r2, [r3, #16]
 8022f40:	b182      	cbz	r2, 8022f64 <AxisBase::checkWithinLimits(float)+0x28>
 8022f42:	edd3 7a05 	vldr	s15, [r3, #20]
 8022f46:	eef4 7ac0 	vcmpe.f32	s15, s0
 8022f4a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8022f4e:	d80b      	bhi.n	8022f68 <AxisBase::checkWithinLimits(float)+0x2c>
 8022f50:	edd3 7a06 	vldr	s15, [r3, #24]
 8022f54:	eef4 7ac0 	vcmpe.f32	s15, s0
 8022f58:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8022f5c:	bfac      	ite	ge
 8022f5e:	2001      	movge	r0, #1
 8022f60:	2000      	movlt	r0, #0
 8022f62:	4770      	bx	lr
 8022f64:	2001      	movs	r0, #1
 8022f66:	4770      	bx	lr
 8022f68:	2000      	movs	r0, #0
 8022f6a:	4770      	bx	lr

08022f6c <AxisBase::getMotionProfile(unsigned char, AXIS_mode_t)>:
 8022f6c:	b410      	push	{r4}
 8022f6e:	f890 3034 	ldrb.w	r3, [r0, #52]	; 0x34
 8022f72:	6b80      	ldr	r0, [r0, #56]	; 0x38
 8022f74:	1e5c      	subs	r4, r3, #1
 8022f76:	f850 0022 	ldr.w	r0, [r0, r2, lsl #2]
 8022f7a:	b2e2      	uxtb	r2, r4
 8022f7c:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 8022f80:	f014 0fff 	tst.w	r4, #255	; 0xff
 8022f84:	eb00 0082 	add.w	r0, r0, r2, lsl #2
 8022f88:	d00d      	beq.n	8022fa6 <AxisBase::getMotionProfile(unsigned char, AXIS_mode_t)+0x3a>
 8022f8a:	3b02      	subs	r3, #2
 8022f8c:	b2db      	uxtb	r3, r3
 8022f8e:	f06f 0213 	mvn.w	r2, #19
 8022f92:	fb03 2202 	mla	r2, r3, r2, r2
 8022f96:	4402      	add	r2, r0
 8022f98:	e002      	b.n	8022fa0 <AxisBase::getMotionProfile(unsigned char, AXIS_mode_t)+0x34>
 8022f9a:	3814      	subs	r0, #20
 8022f9c:	4290      	cmp	r0, r2
 8022f9e:	d002      	beq.n	8022fa6 <AxisBase::getMotionProfile(unsigned char, AXIS_mode_t)+0x3a>
 8022fa0:	7803      	ldrb	r3, [r0, #0]
 8022fa2:	428b      	cmp	r3, r1
 8022fa4:	d8f9      	bhi.n	8022f9a <AxisBase::getMotionProfile(unsigned char, AXIS_mode_t)+0x2e>
 8022fa6:	f85d 4b04 	ldr.w	r4, [sp], #4
 8022faa:	4770      	bx	lr

08022fac <AxisBase::addDataSubscriber(SubscriberBase*)>:
 8022fac:	303c      	adds	r0, #60	; 0x3c
 8022fae:	f00d bc7d 	b.w	80308ac <Publisher::subscribe(SubscriberBase*)>
 8022fb2:	bf00      	nop

08022fb4 <AxisBase::removeDataSubscriber(SubscriberBase*)>:
 8022fb4:	303c      	adds	r0, #60	; 0x3c
 8022fb6:	f00d bcad 	b.w	8030914 <Publisher::unsubscribe(SubscriberBase*)>
 8022fba:	bf00      	nop

08022fbc <AxisBase::updateDynamicMechanicalRatio(float)>:
 8022fbc:	f8d0 3084 	ldr.w	r3, [r0, #132]	; 0x84
 8022fc0:	ed80 0a0c 	vstr	s0, [r0, #48]	; 0x30
 8022fc4:	4718      	bx	r3
 8022fc6:	bf00      	nop

08022fc8 <AxisBase::loadDynamicConfiguration()>:
 8022fc8:	f8d0 3088 	ldr.w	r3, [r0, #136]	; 0x88
 8022fcc:	b12b      	cbz	r3, 8022fda <AxisBase::loadDynamicConfiguration()+0x12>
 8022fce:	b510      	push	{r4, lr}
 8022fd0:	4604      	mov	r4, r0
 8022fd2:	4798      	blx	r3
 8022fd4:	ed84 0a0c 	vstr	s0, [r4, #48]	; 0x30
 8022fd8:	bd10      	pop	{r4, pc}
 8022fda:	4770      	bx	lr

08022fdc <MultiServoAxis::getStatus()>:
 8022fdc:	b570      	push	{r4, r5, r6, lr}
 8022fde:	f891 3094 	ldrb.w	r3, [r1, #148]	; 0x94
 8022fe2:	22ff      	movs	r2, #255	; 0xff
 8022fe4:	b088      	sub	sp, #32
 8022fe6:	460c      	mov	r4, r1
 8022fe8:	4606      	mov	r6, r0
 8022fea:	730a      	strb	r2, [r1, #12]
 8022fec:	b1a3      	cbz	r3, 8023018 <MultiServoAxis::getStatus()+0x3c>
 8022fee:	2500      	movs	r5, #0
 8022ff0:	462a      	mov	r2, r5
 8022ff2:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 8022ff6:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8022ffa:	680b      	ldr	r3, [r1, #0]
 8022ffc:	a801      	add	r0, sp, #4
 8022ffe:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8023000:	4798      	blx	r3
 8023002:	7b23      	ldrb	r3, [r4, #12]
 8023004:	f89d 2004 	ldrb.w	r2, [sp, #4]
 8023008:	f894 1094 	ldrb.w	r1, [r4, #148]	; 0x94
 802300c:	3501      	adds	r5, #1
 802300e:	4013      	ands	r3, r2
 8023010:	b2ea      	uxtb	r2, r5
 8023012:	4291      	cmp	r1, r2
 8023014:	7323      	strb	r3, [r4, #12]
 8023016:	d8ec      	bhi.n	8022ff2 <MultiServoAxis::getStatus()+0x16>
 8023018:	340c      	adds	r4, #12
 802301a:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 802301c:	4635      	mov	r5, r6
 802301e:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 8023020:	e894 0007 	ldmia.w	r4, {r0, r1, r2}
 8023024:	e885 0007 	stmia.w	r5, {r0, r1, r2}
 8023028:	4630      	mov	r0, r6
 802302a:	b008      	add	sp, #32
 802302c:	bd70      	pop	{r4, r5, r6, pc}
 802302e:	bf00      	nop

08023030 <MultiServoAxis::configure()>:
 8023030:	b538      	push	{r3, r4, r5, lr}
 8023032:	4605      	mov	r5, r0
 8023034:	f7ff ffc8 	bl	8022fc8 <AxisBase::loadDynamicConfiguration()>
 8023038:	f895 3094 	ldrb.w	r3, [r5, #148]	; 0x94
 802303c:	b173      	cbz	r3, 802305c <MultiServoAxis::configure()+0x2c>
 802303e:	2400      	movs	r4, #0
 8023040:	4623      	mov	r3, r4
 8023042:	f8d5 2090 	ldr.w	r2, [r5, #144]	; 0x90
 8023046:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 802304a:	6803      	ldr	r3, [r0, #0]
 802304c:	681b      	ldr	r3, [r3, #0]
 802304e:	4798      	blx	r3
 8023050:	3401      	adds	r4, #1
 8023052:	f895 2094 	ldrb.w	r2, [r5, #148]	; 0x94
 8023056:	b2e3      	uxtb	r3, r4
 8023058:	429a      	cmp	r2, r3
 802305a:	d8f2      	bhi.n	8023042 <MultiServoAxis::configure()+0x12>
 802305c:	2000      	movs	r0, #0
 802305e:	bd38      	pop	{r3, r4, r5, pc}

08023060 <MultiServoAxis::MultiServoAxis(char const*, unsigned char, AXIS_config_t*, SingleServoAxis::Config const*, AXIS_motionProfile_t const* const*, unsigned char, SingleServoAxis**, unsigned char, bool (*)(unsigned char, unsigned char, unsigned char*, unsigned short), void (*)(float), float (*)())>:
 8023060:	b570      	push	{r4, r5, r6, lr}
 8023062:	b086      	sub	sp, #24
 8023064:	e9dd 460a 	ldrd	r4, r6, [sp, #40]	; 0x28
 8023068:	f89d 5030 	ldrb.w	r5, [sp, #48]	; 0x30
 802306c:	9601      	str	r6, [sp, #4]
 802306e:	9502      	str	r5, [sp, #8]
 8023070:	9e10      	ldr	r6, [sp, #64]	; 0x40
 8023072:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8023074:	9400      	str	r4, [sp, #0]
 8023076:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8023078:	9403      	str	r4, [sp, #12]
 802307a:	e9cd 6504 	strd	r6, r5, [sp, #16]
 802307e:	4604      	mov	r4, r0
 8023080:	9e0d      	ldr	r6, [sp, #52]	; 0x34
 8023082:	f89d 5038 	ldrb.w	r5, [sp, #56]	; 0x38
 8023086:	f000 f9db 	bl	8023440 <SingleServoAxis::SingleServoAxis(char const*, unsigned char, AXIS_config_t*, SingleServoAxis::Config const*, AXIS_motionProfile_t const* const*, unsigned char, bool (*)(unsigned char, unsigned char, unsigned char*, unsigned short), void (*)(float), float (*)())>
 802308a:	4b04      	ldr	r3, [pc, #16]	; (802309c <MultiServoAxis::MultiServoAxis(char const*, unsigned char, AXIS_config_t*, SingleServoAxis::Config const*, AXIS_motionProfile_t const* const*, unsigned char, SingleServoAxis**, unsigned char, bool (*)(unsigned char, unsigned char, unsigned char*, unsigned short), void (*)(float), float (*)())+0x3c>)
 802308c:	f8c4 6090 	str.w	r6, [r4, #144]	; 0x90
 8023090:	4620      	mov	r0, r4
 8023092:	f884 5094 	strb.w	r5, [r4, #148]	; 0x94
 8023096:	6023      	str	r3, [r4, #0]
 8023098:	b006      	add	sp, #24
 802309a:	bd70      	pop	{r4, r5, r6, pc}
 802309c:	08043d84 	.word	0x08043d84

080230a0 <SingleServoAxis::home(AXIS_homeType_t, float)>:
 80230a0:	f8d0 208c 	ldr.w	r2, [r0, #140]	; 0x8c
 80230a4:	6803      	ldr	r3, [r0, #0]
 80230a6:	edd2 1a01 	vldr	s3, [r2, #4]
 80230aa:	68db      	ldr	r3, [r3, #12]
 80230ac:	ed92 1a00 	vldr	s2, [r2]
 80230b0:	edd2 0a02 	vldr	s1, [r2, #8]
 80230b4:	4718      	bx	r3
 80230b6:	bf00      	nop

080230b8 <SingleServoAxis::isOvertorque()>:
 80230b8:	6900      	ldr	r0, [r0, #16]
 80230ba:	f247 1321 	movw	r3, #28961	; 0x7121
 80230be:	1ac0      	subs	r0, r0, r3
 80230c0:	fab0 f080 	clz	r0, r0
 80230c4:	0940      	lsrs	r0, r0, #5
 80230c6:	4770      	bx	lr

080230c8 <SingleServoAxis::getStatus()>:
 80230c8:	b470      	push	{r4, r5, r6}
 80230ca:	f101 040c 	add.w	r4, r1, #12
 80230ce:	4606      	mov	r6, r0
 80230d0:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 80230d2:	4635      	mov	r5, r6
 80230d4:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 80230d6:	e894 0007 	ldmia.w	r4, {r0, r1, r2}
 80230da:	e885 0007 	stmia.w	r5, {r0, r1, r2}
 80230de:	4630      	mov	r0, r6
 80230e0:	bc70      	pop	{r4, r5, r6}
 80230e2:	4770      	bx	lr

080230e4 <SingleServoAxis::processResponse(unsigned char, unsigned char*, unsigned short)>:
 80230e4:	b570      	push	{r4, r5, r6, lr}
 80230e6:	4614      	mov	r4, r2
 80230e8:	b086      	sub	sp, #24
 80230ea:	b10a      	cbz	r2, 80230f0 <SingleServoAxis::processResponse(unsigned char, unsigned char*, unsigned short)+0xc>
 80230ec:	2b06      	cmp	r3, #6
 80230ee:	d002      	beq.n	80230f6 <SingleServoAxis::processResponse(unsigned char, unsigned char*, unsigned short)+0x12>
 80230f0:	2000      	movs	r0, #0
 80230f2:	b006      	add	sp, #24
 80230f4:	bd70      	pop	{r4, r5, r6, pc}
 80230f6:	f890 3028 	ldrb.w	r3, [r0, #40]	; 0x28
 80230fa:	428b      	cmp	r3, r1
 80230fc:	4605      	mov	r5, r0
 80230fe:	d1f7      	bne.n	80230f0 <SingleServoAxis::processResponse(unsigned char, unsigned char*, unsigned short)+0xc>
 8023100:	7853      	ldrb	r3, [r2, #1]
 8023102:	2b02      	cmp	r3, #2
 8023104:	d02c      	beq.n	8023160 <SingleServoAxis::processResponse(unsigned char, unsigned char*, unsigned short)+0x7c>
 8023106:	2b03      	cmp	r3, #3
 8023108:	d1f2      	bne.n	80230f0 <SingleServoAxis::processResponse(unsigned char, unsigned char*, unsigned short)+0xc>
 802310a:	4838      	ldr	r0, [pc, #224]	; (80231ec <SingleServoAxis::processResponse(unsigned char, unsigned char*, unsigned short)+0x108>)
 802310c:	212f      	movs	r1, #47	; 0x2f
 802310e:	f01c f926 	bl	803f35e <strrchr>
 8023112:	b378      	cbz	r0, 8023174 <SingleServoAxis::processResponse(unsigned char, unsigned char*, unsigned short)+0x90>
 8023114:	212f      	movs	r1, #47	; 0x2f
 8023116:	4835      	ldr	r0, [pc, #212]	; (80231ec <SingleServoAxis::processResponse(unsigned char, unsigned char*, unsigned short)+0x108>)
 8023118:	f01c f921 	bl	803f35e <strrchr>
 802311c:	1c41      	adds	r1, r0, #1
 802311e:	4628      	mov	r0, r5
 8023120:	9105      	str	r1, [sp, #20]
 8023122:	f7ff fe21 	bl	8022d68 <AxisBase::getName()>
 8023126:	f8d4 3002 	ldr.w	r3, [r4, #2]
 802312a:	9905      	ldr	r1, [sp, #20]
 802312c:	9000      	str	r0, [sp, #0]
 802312e:	f240 12af 	movw	r2, #431	; 0x1af
 8023132:	9301      	str	r3, [sp, #4]
 8023134:	2000      	movs	r0, #0
 8023136:	4b2e      	ldr	r3, [pc, #184]	; (80231f0 <SingleServoAxis::processResponse(unsigned char, unsigned char*, unsigned short)+0x10c>)
 8023138:	f7ff fb2e 	bl	8022798 <DEBUG_logMsg>
 802313c:	f8d4 1002 	ldr.w	r1, [r4, #2]
 8023140:	4628      	mov	r0, r5
 8023142:	f7ff fe0f 	bl	8022d64 <AxisBase::setCommandExtraStatus(unsigned int)>
 8023146:	2102      	movs	r1, #2
 8023148:	4628      	mov	r0, r5
 802314a:	f7ff fe09 	bl	8022d60 <AxisBase::setCommandStatus(AXIS_commandStatus_t)>
 802314e:	f8d4 3002 	ldr.w	r3, [r4, #2]
 8023152:	f247 1221 	movw	r2, #28961	; 0x7121
 8023156:	b29b      	uxth	r3, r3
 8023158:	4293      	cmp	r3, r2
 802315a:	d016      	beq.n	802318a <SingleServoAxis::processResponse(unsigned char, unsigned char*, unsigned short)+0xa6>
 802315c:	2001      	movs	r0, #1
 802315e:	e7c8      	b.n	80230f2 <SingleServoAxis::processResponse(unsigned char, unsigned char*, unsigned short)+0xe>
 8023160:	2100      	movs	r1, #0
 8023162:	f7ff fdfd 	bl	8022d60 <AxisBase::setCommandStatus(AXIS_commandStatus_t)>
 8023166:	4628      	mov	r0, r5
 8023168:	f8d4 1002 	ldr.w	r1, [r4, #2]
 802316c:	f7ff fdfa 	bl	8022d64 <AxisBase::setCommandExtraStatus(unsigned int)>
 8023170:	2001      	movs	r0, #1
 8023172:	e7be      	b.n	80230f2 <SingleServoAxis::processResponse(unsigned char, unsigned char*, unsigned short)+0xe>
 8023174:	481d      	ldr	r0, [pc, #116]	; (80231ec <SingleServoAxis::processResponse(unsigned char, unsigned char*, unsigned short)+0x108>)
 8023176:	215c      	movs	r1, #92	; 0x5c
 8023178:	f01c f8f1 	bl	803f35e <strrchr>
 802317c:	b330      	cbz	r0, 80231cc <SingleServoAxis::processResponse(unsigned char, unsigned char*, unsigned short)+0xe8>
 802317e:	215c      	movs	r1, #92	; 0x5c
 8023180:	481a      	ldr	r0, [pc, #104]	; (80231ec <SingleServoAxis::processResponse(unsigned char, unsigned char*, unsigned short)+0x108>)
 8023182:	f01c f8ec 	bl	803f35e <strrchr>
 8023186:	1c41      	adds	r1, r0, #1
 8023188:	e7c9      	b.n	802311e <SingleServoAxis::processResponse(unsigned char, unsigned char*, unsigned short)+0x3a>
 802318a:	4818      	ldr	r0, [pc, #96]	; (80231ec <SingleServoAxis::processResponse(unsigned char, unsigned char*, unsigned short)+0x108>)
 802318c:	212f      	movs	r1, #47	; 0x2f
 802318e:	f01c f8e6 	bl	803f35e <strrchr>
 8023192:	b1e8      	cbz	r0, 80231d0 <SingleServoAxis::processResponse(unsigned char, unsigned char*, unsigned short)+0xec>
 8023194:	4815      	ldr	r0, [pc, #84]	; (80231ec <SingleServoAxis::processResponse(unsigned char, unsigned char*, unsigned short)+0x108>)
 8023196:	212f      	movs	r1, #47	; 0x2f
 8023198:	f01c f8e1 	bl	803f35e <strrchr>
 802319c:	1c44      	adds	r4, r0, #1
 802319e:	4628      	mov	r0, r5
 80231a0:	68ae      	ldr	r6, [r5, #8]
 80231a2:	f7ff feb7 	bl	8022f14 <AxisBase::getPosition()>
 80231a6:	ee10 0a10 	vmov	r0, s0
 80231aa:	f01b f956 	bl	803e45a <__aeabi_f2d>
 80231ae:	4b11      	ldr	r3, [pc, #68]	; (80231f4 <SingleServoAxis::processResponse(unsigned char, unsigned char*, unsigned short)+0x110>)
 80231b0:	9600      	str	r6, [sp, #0]
 80231b2:	e9cd 0102 	strd	r0, r1, [sp, #8]
 80231b6:	f44f 72db 	mov.w	r2, #438	; 0x1b6
 80231ba:	4621      	mov	r1, r4
 80231bc:	2002      	movs	r0, #2
 80231be:	f7ff faeb 	bl	8022798 <DEBUG_logMsg>
 80231c2:	2010      	movs	r0, #16
 80231c4:	f002 fb06 	bl	80257d4 <ANTCTRL_setEvent>
 80231c8:	2001      	movs	r0, #1
 80231ca:	e792      	b.n	80230f2 <SingleServoAxis::processResponse(unsigned char, unsigned char*, unsigned short)+0xe>
 80231cc:	4907      	ldr	r1, [pc, #28]	; (80231ec <SingleServoAxis::processResponse(unsigned char, unsigned char*, unsigned short)+0x108>)
 80231ce:	e7a6      	b.n	802311e <SingleServoAxis::processResponse(unsigned char, unsigned char*, unsigned short)+0x3a>
 80231d0:	4806      	ldr	r0, [pc, #24]	; (80231ec <SingleServoAxis::processResponse(unsigned char, unsigned char*, unsigned short)+0x108>)
 80231d2:	215c      	movs	r1, #92	; 0x5c
 80231d4:	f01c f8c3 	bl	803f35e <strrchr>
 80231d8:	b128      	cbz	r0, 80231e6 <SingleServoAxis::processResponse(unsigned char, unsigned char*, unsigned short)+0x102>
 80231da:	4804      	ldr	r0, [pc, #16]	; (80231ec <SingleServoAxis::processResponse(unsigned char, unsigned char*, unsigned short)+0x108>)
 80231dc:	215c      	movs	r1, #92	; 0x5c
 80231de:	f01c f8be 	bl	803f35e <strrchr>
 80231e2:	1c44      	adds	r4, r0, #1
 80231e4:	e7db      	b.n	802319e <SingleServoAxis::processResponse(unsigned char, unsigned char*, unsigned short)+0xba>
 80231e6:	4c01      	ldr	r4, [pc, #4]	; (80231ec <SingleServoAxis::processResponse(unsigned char, unsigned char*, unsigned short)+0x108>)
 80231e8:	e7d9      	b.n	802319e <SingleServoAxis::processResponse(unsigned char, unsigned char*, unsigned short)+0xba>
 80231ea:	bf00      	nop
 80231ec:	08043db8 	.word	0x08043db8
 80231f0:	08043dfc 	.word	0x08043dfc
 80231f4:	08043e10 	.word	0x08043e10

080231f8 <SingleServoAxis::processData(unsigned char, unsigned char*, unsigned short)>:
 80231f8:	b510      	push	{r4, lr}
 80231fa:	4614      	mov	r4, r2
 80231fc:	b13a      	cbz	r2, 802320e <SingleServoAxis::processData(unsigned char, unsigned char*, unsigned short)+0x16>
 80231fe:	2903      	cmp	r1, #3
 8023200:	d805      	bhi.n	802320e <SingleServoAxis::processData(unsigned char, unsigned char*, unsigned short)+0x16>
 8023202:	e8df f001 	tbb	[pc, r1]
 8023206:	0c02      	.short	0x0c02
 8023208:	0612      	.short	0x0612
 802320a:	2b13      	cmp	r3, #19
 802320c:	d013      	beq.n	8023236 <SingleServoAxis::processData(unsigned char, unsigned char*, unsigned short)+0x3e>
 802320e:	2000      	movs	r0, #0
 8023210:	bd10      	pop	{r4, pc}
 8023212:	f1a3 0004 	sub.w	r0, r3, #4
 8023216:	fab0 f080 	clz	r0, r0
 802321a:	0940      	lsrs	r0, r0, #5
 802321c:	bd10      	pop	{r4, pc}
 802321e:	f1a3 0026 	sub.w	r0, r3, #38	; 0x26
 8023222:	fab0 f080 	clz	r0, r0
 8023226:	0940      	lsrs	r0, r0, #5
 8023228:	bd10      	pop	{r4, pc}
 802322a:	f1a3 0006 	sub.w	r0, r3, #6
 802322e:	fab0 f080 	clz	r0, r0
 8023232:	0940      	lsrs	r0, r0, #5
 8023234:	bd10      	pop	{r4, pc}
 8023236:	f8d4 2002 	ldr.w	r2, [r4, #2]
 802323a:	6182      	str	r2, [r0, #24]
 802323c:	f8d4 2006 	ldr.w	r2, [r4, #6]
 8023240:	61c2      	str	r2, [r0, #28]
 8023242:	7862      	ldrb	r2, [r4, #1]
 8023244:	7302      	strb	r2, [r0, #12]
 8023246:	f8d4 200a 	ldr.w	r2, [r4, #10]
 802324a:	6202      	str	r2, [r0, #32]
 802324c:	7ca2      	ldrb	r2, [r4, #18]
 802324e:	f880 2024 	strb.w	r2, [r0, #36]	; 0x24
 8023252:	4621      	mov	r1, r4
 8023254:	461a      	mov	r2, r3
 8023256:	303c      	adds	r0, #60	; 0x3c
 8023258:	f00d fb84 	bl	8030964 <Publisher::update(unsigned char*, unsigned short)>
 802325c:	2001      	movs	r0, #1
 802325e:	bd10      	pop	{r4, pc}

08023260 <SingleServoAxis::executeCommand(unsigned char, unsigned char*, unsigned short) [clone .part.0]>:
 8023260:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8023264:	4604      	mov	r4, r0
 8023266:	f880 1028 	strb.w	r1, [r0, #40]	; 0x28
 802326a:	460d      	mov	r5, r1
 802326c:	2101      	movs	r1, #1
 802326e:	4616      	mov	r6, r2
 8023270:	461f      	mov	r7, r3
 8023272:	f7ff fd75 	bl	8022d60 <AxisBase::setCommandStatus(AXIS_commandStatus_t)>
 8023276:	4620      	mov	r0, r4
 8023278:	2100      	movs	r1, #0
 802327a:	f7ff fd73 	bl	8022d64 <AxisBase::setCommandExtraStatus(unsigned int)>
 802327e:	f8d4 8080 	ldr.w	r8, [r4, #128]	; 0x80
 8023282:	f1b8 0f00 	cmp.w	r8, #0
 8023286:	d005      	beq.n	8023294 <SingleServoAxis::executeCommand(unsigned char, unsigned char*, unsigned short) [clone .part.0]+0x34>
 8023288:	7920      	ldrb	r0, [r4, #4]
 802328a:	463b      	mov	r3, r7
 802328c:	4632      	mov	r2, r6
 802328e:	4629      	mov	r1, r5
 8023290:	47c0      	blx	r8
 8023292:	b930      	cbnz	r0, 80232a2 <SingleServoAxis::executeCommand(unsigned char, unsigned char*, unsigned short) [clone .part.0]+0x42>
 8023294:	4620      	mov	r0, r4
 8023296:	2102      	movs	r1, #2
 8023298:	f7ff fd62 	bl	8022d60 <AxisBase::setCommandStatus(AXIS_commandStatus_t)>
 802329c:	2002      	movs	r0, #2
 802329e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80232a2:	4620      	mov	r0, r4
 80232a4:	2101      	movs	r1, #1
 80232a6:	f7ff fd5b 	bl	8022d60 <AxisBase::setCommandStatus(AXIS_commandStatus_t)>
 80232aa:	2000      	movs	r0, #0
 80232ac:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080232b0 <SingleServoAxis::home(AXIS_homeType_t, float, float, float, float)>:
 80232b0:	b530      	push	{r4, r5, lr}
 80232b2:	ed2d 8b04 	vpush	{d8-d9}
 80232b6:	b087      	sub	sp, #28
 80232b8:	460d      	mov	r5, r1
 80232ba:	eef0 9a40 	vmov.f32	s19, s0
 80232be:	eeb0 8a60 	vmov.f32	s16, s1
 80232c2:	eeb0 9a41 	vmov.f32	s18, s2
 80232c6:	eef0 8a61 	vmov.f32	s17, s3
 80232ca:	4604      	mov	r4, r0
 80232cc:	f7ff fe36 	bl	8022f3c <AxisBase::checkWithinLimits(float)>
 80232d0:	2800      	cmp	r0, #0
 80232d2:	d03f      	beq.n	8023354 <SingleServoAxis::home(AXIS_homeType_t, float, float, float, float)+0xa4>
 80232d4:	7923      	ldrb	r3, [r4, #4]
 80232d6:	f88d 3000 	strb.w	r3, [sp]
 80232da:	eeb0 0a69 	vmov.f32	s0, s19
 80232de:	4620      	mov	r0, r4
 80232e0:	f7ff fe04 	bl	8022eec <AxisBase::convertToEncoderCounts(float)>
 80232e4:	eeb0 0a49 	vmov.f32	s0, s18
 80232e8:	4603      	mov	r3, r0
 80232ea:	4620      	mov	r0, r4
 80232ec:	f8cd 3006 	str.w	r3, [sp, #6]
 80232f0:	f7ff fdfc 	bl	8022eec <AxisBase::convertToEncoderCounts(float)>
 80232f4:	eeb0 0a68 	vmov.f32	s0, s17
 80232f8:	4603      	mov	r3, r0
 80232fa:	4620      	mov	r0, r4
 80232fc:	f8cd 300a 	str.w	r3, [sp, #10]
 8023300:	f7ff fdf4 	bl	8022eec <AxisBase::convertToEncoderCounts(float)>
 8023304:	eddf 0a18 	vldr	s1, [pc, #96]	; 8023368 <SingleServoAxis::home(AXIS_homeType_t, float, float, float, float)+0xb8>
 8023308:	f8cd 000e 	str.w	r0, [sp, #14]
 802330c:	ee68 0a20 	vmul.f32	s1, s16, s1
 8023310:	2d02      	cmp	r5, #2
 8023312:	eefc 0ae0 	vcvt.u32.f32	s1, s1
 8023316:	ee10 3a90 	vmov	r3, s1
 802331a:	f8cd 3002 	str.w	r3, [sp, #2]
 802331e:	d017      	beq.n	8023350 <SingleServoAxis::home(AXIS_homeType_t, float, float, float, float)+0xa0>
 8023320:	2d01      	cmp	r5, #1
 8023322:	bf0c      	ite	eq
 8023324:	2202      	moveq	r2, #2
 8023326:	2203      	movne	r2, #3
 8023328:	f8d4 308c 	ldr.w	r3, [r4, #140]	; 0x8c
 802332c:	7d20      	ldrb	r0, [r4, #20]
 802332e:	68db      	ldr	r3, [r3, #12]
 8023330:	f88d 2001 	strb.w	r2, [sp, #1]
 8023334:	2801      	cmp	r0, #1
 8023336:	f8cd 3012 	str.w	r3, [sp, #18]
 802333a:	d005      	beq.n	8023348 <SingleServoAxis::home(AXIS_homeType_t, float, float, float, float)+0x98>
 802333c:	4620      	mov	r0, r4
 802333e:	2316      	movs	r3, #22
 8023340:	466a      	mov	r2, sp
 8023342:	210b      	movs	r1, #11
 8023344:	f7ff ff8c 	bl	8023260 <SingleServoAxis::executeCommand(unsigned char, unsigned char*, unsigned short) [clone .part.0]>
 8023348:	b007      	add	sp, #28
 802334a:	ecbd 8b04 	vpop	{d8-d9}
 802334e:	bd30      	pop	{r4, r5, pc}
 8023350:	2201      	movs	r2, #1
 8023352:	e7e9      	b.n	8023328 <SingleServoAxis::home(AXIS_homeType_t, float, float, float, float)+0x78>
 8023354:	4620      	mov	r0, r4
 8023356:	2102      	movs	r1, #2
 8023358:	f7ff fd02 	bl	8022d60 <AxisBase::setCommandStatus(AXIS_commandStatus_t)>
 802335c:	2005      	movs	r0, #5
 802335e:	b007      	add	sp, #28
 8023360:	ecbd 8b04 	vpop	{d8-d9}
 8023364:	bd30      	pop	{r4, r5, pc}
 8023366:	bf00      	nop
 8023368:	447a0000 	.word	0x447a0000
 802336c:	810106c9 	.word	0x810106c9
 8023370:	81a9b0b0 	.word	0x81a9b0b0
 8023374:	00000000 	.word	0x00000000

08023378 <SingleServoAxis::power(AXIS_powerState_t)>:
 8023378:	b500      	push	{lr}
 802337a:	7d03      	ldrb	r3, [r0, #20]
 802337c:	7902      	ldrb	r2, [r0, #4]
 802337e:	f1a1 0101 	sub.w	r1, r1, #1
 8023382:	b083      	sub	sp, #12
 8023384:	fab1 f181 	clz	r1, r1
 8023388:	0949      	lsrs	r1, r1, #5
 802338a:	2b01      	cmp	r3, #1
 802338c:	f88d 2004 	strb.w	r2, [sp, #4]
 8023390:	f88d 1005 	strb.w	r1, [sp, #5]
 8023394:	d007      	beq.n	80233a6 <SingleServoAxis::power(AXIS_powerState_t)+0x2e>
 8023396:	2302      	movs	r3, #2
 8023398:	aa01      	add	r2, sp, #4
 802339a:	2107      	movs	r1, #7
 802339c:	f7ff ff60 	bl	8023260 <SingleServoAxis::executeCommand(unsigned char, unsigned char*, unsigned short) [clone .part.0]>
 80233a0:	b003      	add	sp, #12
 80233a2:	f85d fb04 	ldr.w	pc, [sp], #4
 80233a6:	4618      	mov	r0, r3
 80233a8:	b003      	add	sp, #12
 80233aa:	f85d fb04 	ldr.w	pc, [sp], #4
 80233ae:	bf00      	nop

080233b0 <SingleServoAxis::enableTelemetry(bool, unsigned int)>:
 80233b0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80233b2:	b083      	sub	sp, #12
 80233b4:	460d      	mov	r5, r1
 80233b6:	4614      	mov	r4, r2
 80233b8:	4606      	mov	r6, r0
 80233ba:	f7ff fccf 	bl	8022d5c <AxisBase::getID()>
 80233be:	2306      	movs	r3, #6
 80233c0:	4607      	mov	r7, r0
 80233c2:	4619      	mov	r1, r3
 80233c4:	4630      	mov	r0, r6
 80233c6:	466a      	mov	r2, sp
 80233c8:	f88d 5001 	strb.w	r5, [sp, #1]
 80233cc:	f8cd 4002 	str.w	r4, [sp, #2]
 80233d0:	f88d 7000 	strb.w	r7, [sp]
 80233d4:	f7ff ff44 	bl	8023260 <SingleServoAxis::executeCommand(unsigned char, unsigned char*, unsigned short) [clone .part.0]>
 80233d8:	b003      	add	sp, #12
 80233da:	bdf0      	pop	{r4, r5, r6, r7, pc}

080233dc <SingleServoAxis::stop()>:
 80233dc:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
 80233de:	b500      	push	{lr}
 80233e0:	ed91 7a08 	vldr	s14, [r1, #32]
 80233e4:	edd1 7a09 	vldr	s15, [r1, #36]	; 0x24
 80233e8:	7902      	ldrb	r2, [r0, #4]
 80233ea:	eebc 7ac7 	vcvt.u32.f32	s14, s14
 80233ee:	b085      	sub	sp, #20
 80233f0:	ee17 ca10 	vmov	ip, s14
 80233f4:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 80233f8:	f8cd c005 	str.w	ip, [sp, #5]
 80233fc:	ee17 ca90 	vmov	ip, s15
 8023400:	f88d 2004 	strb.w	r2, [sp, #4]
 8023404:	2309      	movs	r3, #9
 8023406:	aa01      	add	r2, sp, #4
 8023408:	210c      	movs	r1, #12
 802340a:	f8cd c009 	str.w	ip, [sp, #9]
 802340e:	f7ff ff27 	bl	8023260 <SingleServoAxis::executeCommand(unsigned char, unsigned char*, unsigned short) [clone .part.0]>
 8023412:	b005      	add	sp, #20
 8023414:	f85d fb04 	ldr.w	pc, [sp], #4

08023418 <SingleServoAxis::reset()>:
 8023418:	b500      	push	{lr}
 802341a:	7d03      	ldrb	r3, [r0, #20]
 802341c:	7902      	ldrb	r2, [r0, #4]
 802341e:	b085      	sub	sp, #20
 8023420:	2b01      	cmp	r3, #1
 8023422:	f88d 2004 	strb.w	r2, [sp, #4]
 8023426:	d007      	beq.n	8023438 <SingleServoAxis::reset()+0x20>
 8023428:	2309      	movs	r3, #9
 802342a:	aa01      	add	r2, sp, #4
 802342c:	210d      	movs	r1, #13
 802342e:	f7ff ff17 	bl	8023260 <SingleServoAxis::executeCommand(unsigned char, unsigned char*, unsigned short) [clone .part.0]>
 8023432:	b005      	add	sp, #20
 8023434:	f85d fb04 	ldr.w	pc, [sp], #4
 8023438:	4618      	mov	r0, r3
 802343a:	b005      	add	sp, #20
 802343c:	f85d fb04 	ldr.w	pc, [sp], #4

08023440 <SingleServoAxis::SingleServoAxis(char const*, unsigned char, AXIS_config_t*, SingleServoAxis::Config const*, AXIS_motionProfile_t const* const*, unsigned char, bool (*)(unsigned char, unsigned char, unsigned char*, unsigned short), void (*)(float), float (*)())>:
 8023440:	b530      	push	{r4, r5, lr}
 8023442:	b087      	sub	sp, #28
 8023444:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8023446:	f89d 4030 	ldrb.w	r4, [sp, #48]	; 0x30
 802344a:	9500      	str	r5, [sp, #0]
 802344c:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 802344e:	9401      	str	r4, [sp, #4]
 8023450:	9502      	str	r5, [sp, #8]
 8023452:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8023454:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8023456:	9403      	str	r4, [sp, #12]
 8023458:	9504      	str	r5, [sp, #16]
 802345a:	4604      	mov	r4, r0
 802345c:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 802345e:	f7ff fc45 	bl	8022cec <AxisBase::AxisBase(char const*, unsigned char, AXIS_config_t*, AXIS_motionProfile_t const* const*, unsigned char, bool (*)(unsigned char, unsigned char, unsigned char*, unsigned short), void (*)(float), float (*)())>
 8023462:	4b03      	ldr	r3, [pc, #12]	; (8023470 <SingleServoAxis::SingleServoAxis(char const*, unsigned char, AXIS_config_t*, SingleServoAxis::Config const*, AXIS_motionProfile_t const* const*, unsigned char, bool (*)(unsigned char, unsigned char, unsigned char*, unsigned short), void (*)(float), float (*)())+0x30>)
 8023464:	f8c4 508c 	str.w	r5, [r4, #140]	; 0x8c
 8023468:	4620      	mov	r0, r4
 802346a:	6023      	str	r3, [r4, #0]
 802346c:	b007      	add	sp, #28
 802346e:	bd30      	pop	{r4, r5, pc}
 8023470:	08043e38 	.word	0x08043e38

08023474 <SingleServoAxis::executeCommand(unsigned char, unsigned char*, unsigned short)>:
 8023474:	b410      	push	{r4}
 8023476:	1ecc      	subs	r4, r1, #3
 8023478:	2c0c      	cmp	r4, #12
 802347a:	d812      	bhi.n	80234a2 <SingleServoAxis::executeCommand(unsigned char, unsigned char*, unsigned short)+0x2e>
 802347c:	e8df f004 	tbb	[pc, r4]
 8023480:	0a0a0707 	.word	0x0a0a0707
 8023484:	0e070707 	.word	0x0e070707
 8023488:	07070a07 	.word	0x07070a07
 802348c:	07          	.byte	0x07
 802348d:	00          	.byte	0x00
 802348e:	7d04      	ldrb	r4, [r0, #20]
 8023490:	2c01      	cmp	r4, #1
 8023492:	d010      	beq.n	80234b6 <SingleServoAxis::executeCommand(unsigned char, unsigned char*, unsigned short)+0x42>
 8023494:	f85d 4b04 	ldr.w	r4, [sp], #4
 8023498:	f7ff bee2 	b.w	8023260 <SingleServoAxis::executeCommand(unsigned char, unsigned char*, unsigned short) [clone .part.0]>
 802349c:	7d04      	ldrb	r4, [r0, #20]
 802349e:	2c01      	cmp	r4, #1
 80234a0:	d003      	beq.n	80234aa <SingleServoAxis::executeCommand(unsigned char, unsigned char*, unsigned short)+0x36>
 80234a2:	2007      	movs	r0, #7
 80234a4:	f85d 4b04 	ldr.w	r4, [sp], #4
 80234a8:	4770      	bx	lr
 80234aa:	f890 4028 	ldrb.w	r4, [r0, #40]	; 0x28
 80234ae:	3c08      	subs	r4, #8
 80234b0:	2c02      	cmp	r4, #2
 80234b2:	d8f6      	bhi.n	80234a2 <SingleServoAxis::executeCommand(unsigned char, unsigned char*, unsigned short)+0x2e>
 80234b4:	e7ee      	b.n	8023494 <SingleServoAxis::executeCommand(unsigned char, unsigned char*, unsigned short)+0x20>
 80234b6:	4620      	mov	r0, r4
 80234b8:	e7f4      	b.n	80234a4 <SingleServoAxis::executeCommand(unsigned char, unsigned char*, unsigned short)+0x30>
 80234ba:	bf00      	nop

080234bc <SingleServoAxis::move(float, AXIS_moveType_t, unsigned char, AXIS_mode_t)>:
 80234bc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80234c0:	ed2d 8b02 	vpush	{d8}
 80234c4:	b086      	sub	sp, #24
 80234c6:	460d      	mov	r5, r1
 80234c8:	4616      	mov	r6, r2
 80234ca:	461f      	mov	r7, r3
 80234cc:	eeb0 8a40 	vmov.f32	s16, s0
 80234d0:	4604      	mov	r4, r0
 80234d2:	f7ff fd33 	bl	8022f3c <AxisBase::checkWithinLimits(float)>
 80234d6:	2800      	cmp	r0, #0
 80234d8:	d04a      	beq.n	8023570 <SingleServoAxis::move(float, AXIS_moveType_t, unsigned char, AXIS_mode_t)+0xb4>
 80234da:	2d02      	cmp	r5, #2
 80234dc:	d03b      	beq.n	8023556 <SingleServoAxis::move(float, AXIS_moveType_t, unsigned char, AXIS_mode_t)+0x9a>
 80234de:	2d00      	cmp	r5, #0
 80234e0:	d13f      	bne.n	8023562 <SingleServoAxis::move(float, AXIS_moveType_t, unsigned char, AXIS_mode_t)+0xa6>
 80234e2:	f04f 0808 	mov.w	r8, #8
 80234e6:	463a      	mov	r2, r7
 80234e8:	4631      	mov	r1, r6
 80234ea:	4620      	mov	r0, r4
 80234ec:	f7ff fd3e 	bl	8022f6c <AxisBase::getMotionProfile(unsigned char, AXIS_mode_t)>
 80234f0:	7923      	ldrb	r3, [r4, #4]
 80234f2:	f88d 3000 	strb.w	r3, [sp]
 80234f6:	4605      	mov	r5, r0
 80234f8:	eeb0 0a48 	vmov.f32	s0, s16
 80234fc:	4620      	mov	r0, r4
 80234fe:	f7ff fcf5 	bl	8022eec <AxisBase::convertToEncoderCounts(float)>
 8023502:	ed95 0a01 	vldr	s0, [r5, #4]
 8023506:	f8cd 0001 	str.w	r0, [sp, #1]
 802350a:	4620      	mov	r0, r4
 802350c:	f7ff fcee 	bl	8022eec <AxisBase::convertToEncoderCounts(float)>
 8023510:	ed95 0a02 	vldr	s0, [r5, #8]
 8023514:	f8cd 0005 	str.w	r0, [sp, #5]
 8023518:	4620      	mov	r0, r4
 802351a:	f7ff fce7 	bl	8022eec <AxisBase::convertToEncoderCounts(float)>
 802351e:	ed95 0a03 	vldr	s0, [r5, #12]
 8023522:	f8cd 0009 	str.w	r0, [sp, #9]
 8023526:	4620      	mov	r0, r4
 8023528:	f7ff fce0 	bl	8022eec <AxisBase::convertToEncoderCounts(float)>
 802352c:	ed95 0a04 	vldr	s0, [r5, #16]
 8023530:	f8cd 000d 	str.w	r0, [sp, #13]
 8023534:	4620      	mov	r0, r4
 8023536:	f7ff fcd9 	bl	8022eec <AxisBase::convertToEncoderCounts(float)>
 802353a:	4641      	mov	r1, r8
 802353c:	4605      	mov	r5, r0
 802353e:	2315      	movs	r3, #21
 8023540:	4620      	mov	r0, r4
 8023542:	466a      	mov	r2, sp
 8023544:	f8cd 5011 	str.w	r5, [sp, #17]
 8023548:	f7ff ff94 	bl	8023474 <SingleServoAxis::executeCommand(unsigned char, unsigned char*, unsigned short)>
 802354c:	b006      	add	sp, #24
 802354e:	ecbd 8b02 	vpop	{d8}
 8023552:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8023556:	7d23      	ldrb	r3, [r4, #20]
 8023558:	2b01      	cmp	r3, #1
 802355a:	d113      	bne.n	8023584 <SingleServoAxis::move(float, AXIS_moveType_t, unsigned char, AXIS_mode_t)+0xc8>
 802355c:	f04f 080a 	mov.w	r8, #10
 8023560:	e7c1      	b.n	80234e6 <SingleServoAxis::move(float, AXIS_moveType_t, unsigned char, AXIS_mode_t)+0x2a>
 8023562:	2d01      	cmp	r5, #1
 8023564:	bf14      	ite	ne
 8023566:	f04f 080a 	movne.w	r8, #10
 802356a:	f04f 0809 	moveq.w	r8, #9
 802356e:	e7ba      	b.n	80234e6 <SingleServoAxis::move(float, AXIS_moveType_t, unsigned char, AXIS_mode_t)+0x2a>
 8023570:	4620      	mov	r0, r4
 8023572:	2102      	movs	r1, #2
 8023574:	f7ff fbf4 	bl	8022d60 <AxisBase::setCommandStatus(AXIS_commandStatus_t)>
 8023578:	2005      	movs	r0, #5
 802357a:	b006      	add	sp, #24
 802357c:	ecbd 8b02 	vpop	{d8}
 8023580:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8023584:	4620      	mov	r0, r4
 8023586:	4629      	mov	r1, r5
 8023588:	f7ff fbea 	bl	8022d60 <AxisBase::setCommandStatus(AXIS_commandStatus_t)>
 802358c:	2006      	movs	r0, #6
 802358e:	e7dd      	b.n	802354c <SingleServoAxis::move(float, AXIS_moveType_t, unsigned char, AXIS_mode_t)+0x90>
 8023590:	810105c9 	.word	0x810105c9
 8023594:	80acb0b0 	.word	0x80acb0b0
 8023598:	00000000 	.word	0x00000000

0802359c <SingleServoAxis::move(float, AXIS_moveType_t, unsigned char, float, float, float)>:
 802359c:	b5f0      	push	{r4, r5, r6, r7, lr}
 802359e:	ed2d 8b04 	vpush	{d8-d9}
 80235a2:	b087      	sub	sp, #28
 80235a4:	460d      	mov	r5, r1
 80235a6:	4616      	mov	r6, r2
 80235a8:	eef0 9a40 	vmov.f32	s19, s0
 80235ac:	eeb0 9a60 	vmov.f32	s18, s1
 80235b0:	eef0 8a41 	vmov.f32	s17, s2
 80235b4:	eeb0 8a61 	vmov.f32	s16, s3
 80235b8:	4604      	mov	r4, r0
 80235ba:	f7ff fcbf 	bl	8022f3c <AxisBase::checkWithinLimits(float)>
 80235be:	2800      	cmp	r0, #0
 80235c0:	d048      	beq.n	8023654 <SingleServoAxis::move(float, AXIS_moveType_t, unsigned char, float, float, float)+0xb8>
 80235c2:	2d02      	cmp	r5, #2
 80235c4:	d03c      	beq.n	8023640 <SingleServoAxis::move(float, AXIS_moveType_t, unsigned char, float, float, float)+0xa4>
 80235c6:	2d00      	cmp	r5, #0
 80235c8:	d13f      	bne.n	802364a <SingleServoAxis::move(float, AXIS_moveType_t, unsigned char, float, float, float)+0xae>
 80235ca:	2708      	movs	r7, #8
 80235cc:	4631      	mov	r1, r6
 80235ce:	2200      	movs	r2, #0
 80235d0:	4620      	mov	r0, r4
 80235d2:	f7ff fccb 	bl	8022f6c <AxisBase::getMotionProfile(unsigned char, AXIS_mode_t)>
 80235d6:	7923      	ldrb	r3, [r4, #4]
 80235d8:	f88d 3000 	strb.w	r3, [sp]
 80235dc:	4605      	mov	r5, r0
 80235de:	eeb0 0a69 	vmov.f32	s0, s19
 80235e2:	4620      	mov	r0, r4
 80235e4:	f7ff fc82 	bl	8022eec <AxisBase::convertToEncoderCounts(float)>
 80235e8:	eeb0 0a49 	vmov.f32	s0, s18
 80235ec:	4603      	mov	r3, r0
 80235ee:	4620      	mov	r0, r4
 80235f0:	f8cd 3001 	str.w	r3, [sp, #1]
 80235f4:	f7ff fc7a 	bl	8022eec <AxisBase::convertToEncoderCounts(float)>
 80235f8:	eeb0 0a68 	vmov.f32	s0, s17
 80235fc:	4603      	mov	r3, r0
 80235fe:	4620      	mov	r0, r4
 8023600:	f8cd 3005 	str.w	r3, [sp, #5]
 8023604:	f7ff fc72 	bl	8022eec <AxisBase::convertToEncoderCounts(float)>
 8023608:	eeb0 0a48 	vmov.f32	s0, s16
 802360c:	4603      	mov	r3, r0
 802360e:	4620      	mov	r0, r4
 8023610:	f8cd 3009 	str.w	r3, [sp, #9]
 8023614:	f7ff fc6a 	bl	8022eec <AxisBase::convertToEncoderCounts(float)>
 8023618:	ed95 0a04 	vldr	s0, [r5, #16]
 802361c:	f8cd 000d 	str.w	r0, [sp, #13]
 8023620:	4620      	mov	r0, r4
 8023622:	f7ff fc63 	bl	8022eec <AxisBase::convertToEncoderCounts(float)>
 8023626:	4639      	mov	r1, r7
 8023628:	4605      	mov	r5, r0
 802362a:	2315      	movs	r3, #21
 802362c:	4620      	mov	r0, r4
 802362e:	466a      	mov	r2, sp
 8023630:	f8cd 5011 	str.w	r5, [sp, #17]
 8023634:	f7ff ff1e 	bl	8023474 <SingleServoAxis::executeCommand(unsigned char, unsigned char*, unsigned short)>
 8023638:	b007      	add	sp, #28
 802363a:	ecbd 8b04 	vpop	{d8-d9}
 802363e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8023640:	7d23      	ldrb	r3, [r4, #20]
 8023642:	2b01      	cmp	r3, #1
 8023644:	d10f      	bne.n	8023666 <SingleServoAxis::move(float, AXIS_moveType_t, unsigned char, float, float, float)+0xca>
 8023646:	270a      	movs	r7, #10
 8023648:	e7c0      	b.n	80235cc <SingleServoAxis::move(float, AXIS_moveType_t, unsigned char, float, float, float)+0x30>
 802364a:	2d01      	cmp	r5, #1
 802364c:	bf14      	ite	ne
 802364e:	270a      	movne	r7, #10
 8023650:	2709      	moveq	r7, #9
 8023652:	e7bb      	b.n	80235cc <SingleServoAxis::move(float, AXIS_moveType_t, unsigned char, float, float, float)+0x30>
 8023654:	4620      	mov	r0, r4
 8023656:	2102      	movs	r1, #2
 8023658:	f7ff fb82 	bl	8022d60 <AxisBase::setCommandStatus(AXIS_commandStatus_t)>
 802365c:	2005      	movs	r0, #5
 802365e:	b007      	add	sp, #28
 8023660:	ecbd 8b04 	vpop	{d8-d9}
 8023664:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8023666:	4620      	mov	r0, r4
 8023668:	4629      	mov	r1, r5
 802366a:	f7ff fb79 	bl	8022d60 <AxisBase::setCommandStatus(AXIS_commandStatus_t)>
 802366e:	2006      	movs	r0, #6
 8023670:	e7e2      	b.n	8023638 <SingleServoAxis::move(float, AXIS_moveType_t, unsigned char, float, float, float)+0x9c>
 8023672:	bf00      	nop
 8023674:	810106c9 	.word	0x810106c9
 8023678:	81abb0b0 	.word	0x81abb0b0
 802367c:	00000000 	.word	0x00000000

08023680 <SingleServoAxis::setTorqueLimits()>:
 8023680:	b570      	push	{r4, r5, r6, lr}
 8023682:	4604      	mov	r4, r0
 8023684:	b086      	sub	sp, #24
 8023686:	f7ff fb69 	bl	8022d5c <AxisBase::getID()>
 802368a:	f8d4 308c 	ldr.w	r3, [r4, #140]	; 0x8c
 802368e:	f88d 0004 	strb.w	r0, [sp, #4]
 8023692:	e9d3 6507 	ldrd	r6, r5, [r3, #28]
 8023696:	7c19      	ldrb	r1, [r3, #16]
 8023698:	6958      	ldr	r0, [r3, #20]
 802369a:	699a      	ldr	r2, [r3, #24]
 802369c:	f8cd 0006 	str.w	r0, [sp, #6]
 80236a0:	f8cd 200a 	str.w	r2, [sp, #10]
 80236a4:	f88d 1005 	strb.w	r1, [sp, #5]
 80236a8:	4620      	mov	r0, r4
 80236aa:	2312      	movs	r3, #18
 80236ac:	aa01      	add	r2, sp, #4
 80236ae:	2105      	movs	r1, #5
 80236b0:	f8cd 6012 	str.w	r6, [sp, #18]
 80236b4:	f8cd 500e 	str.w	r5, [sp, #14]
 80236b8:	f7ff fdd2 	bl	8023260 <SingleServoAxis::executeCommand(unsigned char, unsigned char*, unsigned short) [clone .part.0]>
 80236bc:	b006      	add	sp, #24
 80236be:	bd70      	pop	{r4, r5, r6, pc}

080236c0 <SingleServoAxis::configure()>:
 80236c0:	b510      	push	{r4, lr}
 80236c2:	4604      	mov	r4, r0
 80236c4:	f7ff fc80 	bl	8022fc8 <AxisBase::loadDynamicConfiguration()>
 80236c8:	4620      	mov	r0, r4
 80236ca:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80236ce:	f7ff bfd7 	b.w	8023680 <SingleServoAxis::setTorqueLimits()>
 80236d2:	bf00      	nop

080236d4 <MultiStepperAxis::configure()>:
 80236d4:	b538      	push	{r3, r4, r5, lr}
 80236d6:	f890 309c 	ldrb.w	r3, [r0, #156]	; 0x9c
 80236da:	b17b      	cbz	r3, 80236fc <MultiStepperAxis::configure()+0x28>
 80236dc:	2400      	movs	r4, #0
 80236de:	4605      	mov	r5, r0
 80236e0:	4623      	mov	r3, r4
 80236e2:	f8d5 2098 	ldr.w	r2, [r5, #152]	; 0x98
 80236e6:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 80236ea:	6803      	ldr	r3, [r0, #0]
 80236ec:	681b      	ldr	r3, [r3, #0]
 80236ee:	4798      	blx	r3
 80236f0:	3401      	adds	r4, #1
 80236f2:	f895 209c 	ldrb.w	r2, [r5, #156]	; 0x9c
 80236f6:	b2e3      	uxtb	r3, r4
 80236f8:	429a      	cmp	r2, r3
 80236fa:	d8f2      	bhi.n	80236e2 <MultiStepperAxis::configure()+0xe>
 80236fc:	2000      	movs	r0, #0
 80236fe:	bd38      	pop	{r3, r4, r5, pc}

08023700 <MultiStepperAxis::getStatus()>:
 8023700:	b5f0      	push	{r4, r5, r6, r7, lr}
 8023702:	f891 309c 	ldrb.w	r3, [r1, #156]	; 0x9c
 8023706:	22ff      	movs	r2, #255	; 0xff
 8023708:	2500      	movs	r5, #0
 802370a:	b089      	sub	sp, #36	; 0x24
 802370c:	460c      	mov	r4, r1
 802370e:	4606      	mov	r6, r0
 8023710:	730a      	strb	r2, [r1, #12]
 8023712:	750d      	strb	r5, [r1, #20]
 8023714:	b1c3      	cbz	r3, 8023748 <MultiStepperAxis::getStatus()+0x48>
 8023716:	4629      	mov	r1, r5
 8023718:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
 802371c:	f853 1021 	ldr.w	r1, [r3, r1, lsl #2]
 8023720:	680b      	ldr	r3, [r1, #0]
 8023722:	a801      	add	r0, sp, #4
 8023724:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8023726:	4798      	blx	r3
 8023728:	7d23      	ldrb	r3, [r4, #20]
 802372a:	f89d 100c 	ldrb.w	r1, [sp, #12]
 802372e:	7b22      	ldrb	r2, [r4, #12]
 8023730:	f89d 7004 	ldrb.w	r7, [sp, #4]
 8023734:	f894 009c 	ldrb.w	r0, [r4, #156]	; 0x9c
 8023738:	3501      	adds	r5, #1
 802373a:	430b      	orrs	r3, r1
 802373c:	b2e9      	uxtb	r1, r5
 802373e:	403a      	ands	r2, r7
 8023740:	4288      	cmp	r0, r1
 8023742:	7322      	strb	r2, [r4, #12]
 8023744:	7523      	strb	r3, [r4, #20]
 8023746:	d8e7      	bhi.n	8023718 <MultiStepperAxis::getStatus()+0x18>
 8023748:	340c      	adds	r4, #12
 802374a:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 802374c:	4635      	mov	r5, r6
 802374e:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 8023750:	e894 0007 	ldmia.w	r4, {r0, r1, r2}
 8023754:	e885 0007 	stmia.w	r5, {r0, r1, r2}
 8023758:	4630      	mov	r0, r6
 802375a:	b009      	add	sp, #36	; 0x24
 802375c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 802375e:	bf00      	nop

08023760 <MultiStepperAxis::move(float, AXIS_moveType_t, unsigned char, AXIS_mode_t)>:
 8023760:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8023764:	ed2d 8b02 	vpush	{d8}
 8023768:	f890 609c 	ldrb.w	r6, [r0, #156]	; 0x9c
 802376c:	b1e6      	cbz	r6, 80237a8 <MultiStepperAxis::move(float, AXIS_moveType_t, unsigned char, AXIS_mode_t)+0x48>
 802376e:	2400      	movs	r4, #0
 8023770:	4607      	mov	r7, r0
 8023772:	4688      	mov	r8, r1
 8023774:	4691      	mov	r9, r2
 8023776:	469a      	mov	sl, r3
 8023778:	eeb0 8a40 	vmov.f32	s16, s0
 802377c:	4626      	mov	r6, r4
 802377e:	4625      	mov	r5, r4
 8023780:	f8d7 3098 	ldr.w	r3, [r7, #152]	; 0x98
 8023784:	f853 0025 	ldr.w	r0, [r3, r5, lsl #2]
 8023788:	6803      	ldr	r3, [r0, #0]
 802378a:	464a      	mov	r2, r9
 802378c:	691d      	ldr	r5, [r3, #16]
 802378e:	4641      	mov	r1, r8
 8023790:	4653      	mov	r3, sl
 8023792:	eeb0 0a48 	vmov.f32	s0, s16
 8023796:	47a8      	blx	r5
 8023798:	3401      	adds	r4, #1
 802379a:	f897 309c 	ldrb.w	r3, [r7, #156]	; 0x9c
 802379e:	b2e5      	uxtb	r5, r4
 80237a0:	4330      	orrs	r0, r6
 80237a2:	42ab      	cmp	r3, r5
 80237a4:	b206      	sxth	r6, r0
 80237a6:	d8eb      	bhi.n	8023780 <MultiStepperAxis::move(float, AXIS_moveType_t, unsigned char, AXIS_mode_t)+0x20>
 80237a8:	ecbd 8b02 	vpop	{d8}
 80237ac:	4630      	mov	r0, r6
 80237ae:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80237b2:	bf00      	nop

080237b4 <MultiStepperAxis::move(float, AXIS_moveType_t, unsigned char, float, float, float)>:
 80237b4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80237b8:	ed2d 8b04 	vpush	{d8-d9}
 80237bc:	f890 409c 	ldrb.w	r4, [r0, #156]	; 0x9c
 80237c0:	b334      	cbz	r4, 8023810 <MultiStepperAxis::move(float, AXIS_moveType_t, unsigned char, float, float, float)+0x5c>
 80237c2:	2500      	movs	r5, #0
 80237c4:	4606      	mov	r6, r0
 80237c6:	460f      	mov	r7, r1
 80237c8:	4690      	mov	r8, r2
 80237ca:	eeb0 8a40 	vmov.f32	s16, s0
 80237ce:	eef0 8a60 	vmov.f32	s17, s1
 80237d2:	eeb0 9a41 	vmov.f32	s18, s2
 80237d6:	eef0 9a61 	vmov.f32	s19, s3
 80237da:	462c      	mov	r4, r5
 80237dc:	462b      	mov	r3, r5
 80237de:	f8d6 2098 	ldr.w	r2, [r6, #152]	; 0x98
 80237e2:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 80237e6:	6803      	ldr	r3, [r0, #0]
 80237e8:	4642      	mov	r2, r8
 80237ea:	695b      	ldr	r3, [r3, #20]
 80237ec:	eef0 1a69 	vmov.f32	s3, s19
 80237f0:	eeb0 1a49 	vmov.f32	s2, s18
 80237f4:	eef0 0a68 	vmov.f32	s1, s17
 80237f8:	4639      	mov	r1, r7
 80237fa:	eeb0 0a48 	vmov.f32	s0, s16
 80237fe:	4798      	blx	r3
 8023800:	3501      	adds	r5, #1
 8023802:	f896 209c 	ldrb.w	r2, [r6, #156]	; 0x9c
 8023806:	b2eb      	uxtb	r3, r5
 8023808:	4320      	orrs	r0, r4
 802380a:	429a      	cmp	r2, r3
 802380c:	b204      	sxth	r4, r0
 802380e:	d8e6      	bhi.n	80237de <MultiStepperAxis::move(float, AXIS_moveType_t, unsigned char, float, float, float)+0x2a>
 8023810:	ecbd 8b04 	vpop	{d8-d9}
 8023814:	4620      	mov	r0, r4
 8023816:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802381a:	bf00      	nop

0802381c <MultiStepperAxis::home(AXIS_homeType_t, float)>:
 802381c:	f890 309c 	ldrb.w	r3, [r0, #156]	; 0x9c
 8023820:	b1e3      	cbz	r3, 802385c <MultiStepperAxis::home(AXIS_homeType_t, float)+0x40>
 8023822:	b570      	push	{r4, r5, r6, lr}
 8023824:	2400      	movs	r4, #0
 8023826:	ed2d 8b02 	vpush	{d8}
 802382a:	4605      	mov	r5, r0
 802382c:	460e      	mov	r6, r1
 802382e:	eeb0 8a40 	vmov.f32	s16, s0
 8023832:	4623      	mov	r3, r4
 8023834:	f8d5 2098 	ldr.w	r2, [r5, #152]	; 0x98
 8023838:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 802383c:	6803      	ldr	r3, [r0, #0]
 802383e:	eeb0 0a48 	vmov.f32	s0, s16
 8023842:	689b      	ldr	r3, [r3, #8]
 8023844:	4631      	mov	r1, r6
 8023846:	4798      	blx	r3
 8023848:	3401      	adds	r4, #1
 802384a:	f895 209c 	ldrb.w	r2, [r5, #156]	; 0x9c
 802384e:	b2e3      	uxtb	r3, r4
 8023850:	429a      	cmp	r2, r3
 8023852:	d8ef      	bhi.n	8023834 <MultiStepperAxis::home(AXIS_homeType_t, float)+0x18>
 8023854:	ecbd 8b02 	vpop	{d8}
 8023858:	2000      	movs	r0, #0
 802385a:	bd70      	pop	{r4, r5, r6, pc}
 802385c:	2000      	movs	r0, #0
 802385e:	4770      	bx	lr

08023860 <MultiStepperAxis::MultiStepperAxis(char const*, unsigned char, AXIS_config_t*, COMM_CDM_MOTOR_torqueSettings_t const*, AXIS_motionProfile_t const* const*, unsigned char, SingleStepperAxis**, unsigned char, bool (*)(unsigned char, unsigned char, unsigned char*, unsigned short), void (*)(float), float (*)())>:
 8023860:	b570      	push	{r4, r5, r6, lr}
 8023862:	b086      	sub	sp, #24
 8023864:	e9dd 460a 	ldrd	r4, r6, [sp, #40]	; 0x28
 8023868:	f89d 5030 	ldrb.w	r5, [sp, #48]	; 0x30
 802386c:	9601      	str	r6, [sp, #4]
 802386e:	9502      	str	r5, [sp, #8]
 8023870:	9e10      	ldr	r6, [sp, #64]	; 0x40
 8023872:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8023874:	9400      	str	r4, [sp, #0]
 8023876:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8023878:	9403      	str	r4, [sp, #12]
 802387a:	e9cd 6504 	strd	r6, r5, [sp, #16]
 802387e:	4604      	mov	r4, r0
 8023880:	9e0d      	ldr	r6, [sp, #52]	; 0x34
 8023882:	f89d 5038 	ldrb.w	r5, [sp, #56]	; 0x38
 8023886:	f000 f8e3 	bl	8023a50 <SingleStepperAxis::SingleStepperAxis(char const*, unsigned char, AXIS_config_t*, COMM_CDM_MOTOR_torqueSettings_t const*, AXIS_motionProfile_t const* const*, unsigned char, bool (*)(unsigned char, unsigned char, unsigned char*, unsigned short), void (*)(float), float (*)())>
 802388a:	4b04      	ldr	r3, [pc, #16]	; (802389c <MultiStepperAxis::MultiStepperAxis(char const*, unsigned char, AXIS_config_t*, COMM_CDM_MOTOR_torqueSettings_t const*, AXIS_motionProfile_t const* const*, unsigned char, SingleStepperAxis**, unsigned char, bool (*)(unsigned char, unsigned char, unsigned char*, unsigned short), void (*)(float), float (*)())+0x3c>)
 802388c:	f8c4 6098 	str.w	r6, [r4, #152]	; 0x98
 8023890:	4620      	mov	r0, r4
 8023892:	f884 509c 	strb.w	r5, [r4, #156]	; 0x9c
 8023896:	6023      	str	r3, [r4, #0]
 8023898:	b006      	add	sp, #24
 802389a:	bd70      	pop	{r4, r5, r6, pc}
 802389c:	08043e74 	.word	0x08043e74

080238a0 <SingleStepperAxis::enableTelemetry(bool, unsigned int)>:
 80238a0:	2000      	movs	r0, #0
 80238a2:	4770      	bx	lr

080238a4 <SingleStepperAxis::home(AXIS_homeType_t, float, float, float, float)>:
 80238a4:	6803      	ldr	r3, [r0, #0]
 80238a6:	689b      	ldr	r3, [r3, #8]
 80238a8:	4718      	bx	r3
 80238aa:	bf00      	nop

080238ac <SingleStepperAxis::move(float, AXIS_moveType_t, unsigned char, float, float, float)>:
 80238ac:	b410      	push	{r4}
 80238ae:	6804      	ldr	r4, [r0, #0]
 80238b0:	6924      	ldr	r4, [r4, #16]
 80238b2:	2300      	movs	r3, #0
 80238b4:	46a4      	mov	ip, r4
 80238b6:	f85d 4b04 	ldr.w	r4, [sp], #4
 80238ba:	4760      	bx	ip

080238bc <SingleStepperAxis::stop()>:
 80238bc:	2000      	movs	r0, #0
 80238be:	4770      	bx	lr

080238c0 <SingleStepperAxis::power(AXIS_powerState_t)>:
 80238c0:	2000      	movs	r0, #0
 80238c2:	4770      	bx	lr

080238c4 <SingleStepperAxis::isOvertorque()>:
 80238c4:	6900      	ldr	r0, [r0, #16]
 80238c6:	f1a0 0007 	sub.w	r0, r0, #7
 80238ca:	fab0 f080 	clz	r0, r0
 80238ce:	0940      	lsrs	r0, r0, #5
 80238d0:	4770      	bx	lr
 80238d2:	bf00      	nop

080238d4 <SingleStepperAxis::getStatus()>:
 80238d4:	b470      	push	{r4, r5, r6}
 80238d6:	f101 040c 	add.w	r4, r1, #12
 80238da:	4606      	mov	r6, r0
 80238dc:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 80238de:	4635      	mov	r5, r6
 80238e0:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 80238e2:	e894 0007 	ldmia.w	r4, {r0, r1, r2}
 80238e6:	e885 0007 	stmia.w	r5, {r0, r1, r2}
 80238ea:	4630      	mov	r0, r6
 80238ec:	bc70      	pop	{r4, r5, r6}
 80238ee:	4770      	bx	lr

080238f0 <SingleStepperAxis::processData(unsigned char, unsigned char*, unsigned short)>:
 80238f0:	2001      	movs	r0, #1
 80238f2:	4770      	bx	lr

080238f4 <SingleStepperAxis::executeCommand(unsigned char, unsigned char*, unsigned short) [clone .part.0]>:
 80238f4:	b538      	push	{r3, r4, r5, lr}
 80238f6:	f8d0 5080 	ldr.w	r5, [r0, #128]	; 0x80
 80238fa:	f880 1028 	strb.w	r1, [r0, #40]	; 0x28
 80238fe:	4604      	mov	r4, r0
 8023900:	b115      	cbz	r5, 8023908 <SingleStepperAxis::executeCommand(unsigned char, unsigned char*, unsigned short) [clone .part.0]+0x14>
 8023902:	7900      	ldrb	r0, [r0, #4]
 8023904:	47a8      	blx	r5
 8023906:	b928      	cbnz	r0, 8023914 <SingleStepperAxis::executeCommand(unsigned char, unsigned char*, unsigned short) [clone .part.0]+0x20>
 8023908:	4620      	mov	r0, r4
 802390a:	2102      	movs	r1, #2
 802390c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8023910:	f7ff ba26 	b.w	8022d60 <AxisBase::setCommandStatus(AXIS_commandStatus_t)>
 8023914:	4620      	mov	r0, r4
 8023916:	2101      	movs	r1, #1
 8023918:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 802391c:	f7ff ba20 	b.w	8022d60 <AxisBase::setCommandStatus(AXIS_commandStatus_t)>

08023920 <SingleStepperAxis::home(AXIS_homeType_t, float)>:
 8023920:	b530      	push	{r4, r5, lr}
 8023922:	ed2d 8b02 	vpush	{d8}
 8023926:	b083      	sub	sp, #12
 8023928:	460c      	mov	r4, r1
 802392a:	eeb0 8a40 	vmov.f32	s16, s0
 802392e:	4605      	mov	r5, r0
 8023930:	f7ff fb04 	bl	8022f3c <AxisBase::checkWithinLimits(float)>
 8023934:	b1e8      	cbz	r0, 8023972 <SingleStepperAxis::home(AXIS_homeType_t, float)+0x52>
 8023936:	2c02      	cmp	r4, #2
 8023938:	d904      	bls.n	8023944 <SingleStepperAxis::home(AXIS_homeType_t, float)+0x24>
 802393a:	2007      	movs	r0, #7
 802393c:	b003      	add	sp, #12
 802393e:	ecbd 8b02 	vpop	{d8}
 8023942:	bd30      	pop	{r4, r5, pc}
 8023944:	eeb0 0a48 	vmov.f32	s0, s16
 8023948:	4628      	mov	r0, r5
 802394a:	f88d 4000 	strb.w	r4, [sp]
 802394e:	f7ff facd 	bl	8022eec <AxisBase::convertToEncoderCounts(float)>
 8023952:	7d2b      	ldrb	r3, [r5, #20]
 8023954:	f8cd 0001 	str.w	r0, [sp, #1]
 8023958:	2b01      	cmp	r3, #1
 802395a:	d005      	beq.n	8023968 <SingleStepperAxis::home(AXIS_homeType_t, float)+0x48>
 802395c:	4628      	mov	r0, r5
 802395e:	2305      	movs	r3, #5
 8023960:	466a      	mov	r2, sp
 8023962:	2112      	movs	r1, #18
 8023964:	f7ff ffc6 	bl	80238f4 <SingleStepperAxis::executeCommand(unsigned char, unsigned char*, unsigned short) [clone .part.0]>
 8023968:	2000      	movs	r0, #0
 802396a:	b003      	add	sp, #12
 802396c:	ecbd 8b02 	vpop	{d8}
 8023970:	bd30      	pop	{r4, r5, pc}
 8023972:	4628      	mov	r0, r5
 8023974:	2102      	movs	r1, #2
 8023976:	f7ff f9f3 	bl	8022d60 <AxisBase::setCommandStatus(AXIS_commandStatus_t)>
 802397a:	2005      	movs	r0, #5
 802397c:	b003      	add	sp, #12
 802397e:	ecbd 8b02 	vpop	{d8}
 8023982:	bd30      	pop	{r4, r5, pc}
 8023984:	810102c9 	.word	0x810102c9
 8023988:	80a9b0b0 	.word	0x80a9b0b0
 802398c:	00000000 	.word	0x00000000

08023990 <SingleStepperAxis::move(float, AXIS_moveType_t, unsigned char, AXIS_mode_t)>:
 8023990:	b510      	push	{r4, lr}
 8023992:	4604      	mov	r4, r0
 8023994:	b082      	sub	sp, #8
 8023996:	b121      	cbz	r1, 80239a2 <SingleStepperAxis::move(float, AXIS_moveType_t, unsigned char, AXIS_mode_t)+0x12>
 8023998:	2901      	cmp	r1, #1
 802399a:	d002      	beq.n	80239a2 <SingleStepperAxis::move(float, AXIS_moveType_t, unsigned char, AXIS_mode_t)+0x12>
 802399c:	2007      	movs	r0, #7
 802399e:	b002      	add	sp, #8
 80239a0:	bd10      	pop	{r4, pc}
 80239a2:	4620      	mov	r0, r4
 80239a4:	f88d 1000 	strb.w	r1, [sp]
 80239a8:	f7ff faa0 	bl	8022eec <AxisBase::convertToEncoderCounts(float)>
 80239ac:	7d23      	ldrb	r3, [r4, #20]
 80239ae:	f8cd 0001 	str.w	r0, [sp, #1]
 80239b2:	2b01      	cmp	r3, #1
 80239b4:	d008      	beq.n	80239c8 <SingleStepperAxis::move(float, AXIS_moveType_t, unsigned char, AXIS_mode_t)+0x38>
 80239b6:	4620      	mov	r0, r4
 80239b8:	2305      	movs	r3, #5
 80239ba:	466a      	mov	r2, sp
 80239bc:	2111      	movs	r1, #17
 80239be:	f7ff ff99 	bl	80238f4 <SingleStepperAxis::executeCommand(unsigned char, unsigned char*, unsigned short) [clone .part.0]>
 80239c2:	2000      	movs	r0, #0
 80239c4:	b002      	add	sp, #8
 80239c6:	bd10      	pop	{r4, pc}
 80239c8:	2000      	movs	r0, #0
 80239ca:	b002      	add	sp, #8
 80239cc:	bd10      	pop	{r4, pc}
 80239ce:	bf00      	nop

080239d0 <SingleStepperAxis::configure()>:
 80239d0:	b510      	push	{r4, lr}
 80239d2:	7d03      	ldrb	r3, [r0, #20]
 80239d4:	2b01      	cmp	r3, #1
 80239d6:	b082      	sub	sp, #8
 80239d8:	4604      	mov	r4, r0
 80239da:	d005      	beq.n	80239e8 <SingleStepperAxis::configure()+0x18>
 80239dc:	f8d0 208c 	ldr.w	r2, [r0, #140]	; 0x8c
 80239e0:	2306      	movs	r3, #6
 80239e2:	2114      	movs	r1, #20
 80239e4:	f7ff ff86 	bl	80238f4 <SingleStepperAxis::executeCommand(unsigned char, unsigned char*, unsigned short) [clone .part.0]>
 80239e8:	2064      	movs	r0, #100	; 0x64
 80239ea:	f016 fab1 	bl	8039f50 <_tx_thread_sleep>
 80239ee:	2200      	movs	r2, #0
 80239f0:	2132      	movs	r1, #50	; 0x32
 80239f2:	4620      	mov	r0, r4
 80239f4:	f7ff faba 	bl	8022f6c <AxisBase::getMotionProfile(unsigned char, AXIS_mode_t)>
 80239f8:	ed90 7a02 	vldr	s14, [r0, #8]
 80239fc:	edd0 7a03 	vldr	s15, [r0, #12]
 8023a00:	edd0 5a01 	vldr	s11, [r0, #4]
 8023a04:	7d23      	ldrb	r3, [r4, #20]
 8023a06:	eeb2 6a04 	vmov.f32	s12, #36	; 0x41200000  10.0
 8023a0a:	eec7 6a06 	vdiv.f32	s13, s14, s12
 8023a0e:	2b01      	cmp	r3, #1
 8023a10:	ee87 7a86 	vdiv.f32	s14, s15, s12
 8023a14:	eec5 7a86 	vdiv.f32	s15, s11, s12
 8023a18:	eefc 6ae6 	vcvt.u32.f32	s13, s13
 8023a1c:	eebc 7ac7 	vcvt.u32.f32	s14, s14
 8023a20:	ee16 2a90 	vmov	r2, s13
 8023a24:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8023a28:	f8ad 2000 	strh.w	r2, [sp]
 8023a2c:	ee17 2a10 	vmov	r2, s14
 8023a30:	f8ad 2002 	strh.w	r2, [sp, #2]
 8023a34:	ee17 2a90 	vmov	r2, s15
 8023a38:	f8ad 2004 	strh.w	r2, [sp, #4]
 8023a3c:	d005      	beq.n	8023a4a <SingleStepperAxis::configure()+0x7a>
 8023a3e:	4620      	mov	r0, r4
 8023a40:	2306      	movs	r3, #6
 8023a42:	466a      	mov	r2, sp
 8023a44:	2121      	movs	r1, #33	; 0x21
 8023a46:	f7ff ff55 	bl	80238f4 <SingleStepperAxis::executeCommand(unsigned char, unsigned char*, unsigned short) [clone .part.0]>
 8023a4a:	2000      	movs	r0, #0
 8023a4c:	b002      	add	sp, #8
 8023a4e:	bd10      	pop	{r4, pc}

08023a50 <SingleStepperAxis::SingleStepperAxis(char const*, unsigned char, AXIS_config_t*, COMM_CDM_MOTOR_torqueSettings_t const*, AXIS_motionProfile_t const* const*, unsigned char, bool (*)(unsigned char, unsigned char, unsigned char*, unsigned short), void (*)(float), float (*)())>:
 8023a50:	b530      	push	{r4, r5, lr}
 8023a52:	b087      	sub	sp, #28
 8023a54:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8023a56:	f89d 4030 	ldrb.w	r4, [sp, #48]	; 0x30
 8023a5a:	9500      	str	r5, [sp, #0]
 8023a5c:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8023a5e:	9401      	str	r4, [sp, #4]
 8023a60:	9502      	str	r5, [sp, #8]
 8023a62:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8023a64:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8023a66:	9403      	str	r4, [sp, #12]
 8023a68:	9504      	str	r5, [sp, #16]
 8023a6a:	4604      	mov	r4, r0
 8023a6c:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8023a6e:	f7ff f93d 	bl	8022cec <AxisBase::AxisBase(char const*, unsigned char, AXIS_config_t*, AXIS_motionProfile_t const* const*, unsigned char, bool (*)(unsigned char, unsigned char, unsigned char*, unsigned short), void (*)(float), float (*)())>
 8023a72:	4b03      	ldr	r3, [pc, #12]	; (8023a80 <SingleStepperAxis::SingleStepperAxis(char const*, unsigned char, AXIS_config_t*, COMM_CDM_MOTOR_torqueSettings_t const*, AXIS_motionProfile_t const* const*, unsigned char, bool (*)(unsigned char, unsigned char, unsigned char*, unsigned short), void (*)(float), float (*)())+0x30>)
 8023a74:	f8c4 508c 	str.w	r5, [r4, #140]	; 0x8c
 8023a78:	4620      	mov	r0, r4
 8023a7a:	6023      	str	r3, [r4, #0]
 8023a7c:	b007      	add	sp, #28
 8023a7e:	bd30      	pop	{r4, r5, pc}
 8023a80:	08043eb0 	.word	0x08043eb0

08023a84 <SingleStepperAxis::processStatusResponse(COMM_CDM_response_t*)>:
 8023a84:	780b      	ldrb	r3, [r1, #0]
 8023a86:	f890 2028 	ldrb.w	r2, [r0, #40]	; 0x28
 8023a8a:	429a      	cmp	r2, r3
 8023a8c:	d000      	beq.n	8023a90 <SingleStepperAxis::processStatusResponse(COMM_CDM_response_t*)+0xc>
 8023a8e:	4770      	bx	lr
 8023a90:	b510      	push	{r4, lr}
 8023a92:	788b      	ldrb	r3, [r1, #2]
 8023a94:	78ca      	ldrb	r2, [r1, #3]
 8023a96:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8023a9a:	f8a0 3090 	strh.w	r3, [r0, #144]	; 0x90
 8023a9e:	784b      	ldrb	r3, [r1, #1]
 8023aa0:	2b02      	cmp	r3, #2
 8023aa2:	4604      	mov	r4, r0
 8023aa4:	d00c      	beq.n	8023ac0 <SingleStepperAxis::processStatusResponse(COMM_CDM_response_t*)+0x3c>
 8023aa6:	2b03      	cmp	r3, #3
 8023aa8:	d000      	beq.n	8023aac <SingleStepperAxis::processStatusResponse(COMM_CDM_response_t*)+0x28>
 8023aaa:	bd10      	pop	{r4, pc}
 8023aac:	6849      	ldr	r1, [r1, #4]
 8023aae:	b2c9      	uxtb	r1, r1
 8023ab0:	2907      	cmp	r1, #7
 8023ab2:	d00a      	beq.n	8023aca <SingleStepperAxis::processStatusResponse(COMM_CDM_response_t*)+0x46>
 8023ab4:	4620      	mov	r0, r4
 8023ab6:	2102      	movs	r1, #2
 8023ab8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8023abc:	f7ff b950 	b.w	8022d60 <AxisBase::setCommandStatus(AXIS_commandStatus_t)>
 8023ac0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8023ac4:	2100      	movs	r1, #0
 8023ac6:	f7ff b94b 	b.w	8022d60 <AxisBase::setCommandStatus(AXIS_commandStatus_t)>
 8023aca:	f7ff f94b 	bl	8022d64 <AxisBase::setCommandExtraStatus(unsigned int)>
 8023ace:	2010      	movs	r0, #16
 8023ad0:	f001 fe80 	bl	80257d4 <ANTCTRL_setEvent>
 8023ad4:	e7ee      	b.n	8023ab4 <SingleStepperAxis::processStatusResponse(COMM_CDM_response_t*)+0x30>
 8023ad6:	bf00      	nop

08023ad8 <SingleStepperAxis::processResponse(unsigned char, unsigned char*, unsigned short)>:
 8023ad8:	b10a      	cbz	r2, 8023ade <SingleStepperAxis::processResponse(unsigned char, unsigned char*, unsigned short)+0x6>
 8023ada:	290a      	cmp	r1, #10
 8023adc:	d001      	beq.n	8023ae2 <SingleStepperAxis::processResponse(unsigned char, unsigned char*, unsigned short)+0xa>
 8023ade:	2000      	movs	r0, #0
 8023ae0:	4770      	bx	lr
 8023ae2:	2b08      	cmp	r3, #8
 8023ae4:	d1fb      	bne.n	8023ade <SingleStepperAxis::processResponse(unsigned char, unsigned char*, unsigned short)+0x6>
 8023ae6:	b508      	push	{r3, lr}
 8023ae8:	4611      	mov	r1, r2
 8023aea:	f7ff ffcb 	bl	8023a84 <SingleStepperAxis::processStatusResponse(COMM_CDM_response_t*)>
 8023aee:	2001      	movs	r0, #1
 8023af0:	bd08      	pop	{r3, pc}
 8023af2:	bf00      	nop
 8023af4:	8101b108 	.word	0x8101b108
 8023af8:	8400b0b0 	.word	0x8400b0b0
 8023afc:	00000000 	.word	0x00000000

08023b00 <Articulation::Articulation(Articulation::State_e)>:
 8023b00:	6001      	str	r1, [r0, #0]
 8023b02:	4770      	bx	lr

08023b04 <Articulation::get()>:
 8023b04:	6800      	ldr	r0, [r0, #0]
 8023b06:	4770      	bx	lr

08023b08 <Articulation::toString(Articulation::State_e)>:
 8023b08:	f5b0 7f00 	cmp.w	r0, #512	; 0x200
 8023b0c:	d068      	beq.n	8023be0 <Articulation::toString(Articulation::State_e)+0xd8>
 8023b0e:	d824      	bhi.n	8023b5a <Articulation::toString(Articulation::State_e)+0x52>
 8023b10:	2820      	cmp	r0, #32
 8023b12:	d81b      	bhi.n	8023b4c <Articulation::toString(Articulation::State_e)+0x44>
 8023b14:	b1c0      	cbz	r0, 8023b48 <Articulation::toString(Articulation::State_e)+0x40>
 8023b16:	3801      	subs	r0, #1
 8023b18:	281f      	cmp	r0, #31
 8023b1a:	d815      	bhi.n	8023b48 <Articulation::toString(Articulation::State_e)+0x40>
 8023b1c:	e8df f000 	tbb	[pc, r0]
 8023b20:	58141012 	.word	0x58141012
 8023b24:	5a141414 	.word	0x5a141414
 8023b28:	14141414 	.word	0x14141414
 8023b2c:	5c141414 	.word	0x5c141414
 8023b30:	14141414 	.word	0x14141414
 8023b34:	14141414 	.word	0x14141414
 8023b38:	14141414 	.word	0x14141414
 8023b3c:	56141414 	.word	0x56141414
 8023b40:	4828      	ldr	r0, [pc, #160]	; (8023be4 <Articulation::toString(Articulation::State_e)+0xdc>)
 8023b42:	4770      	bx	lr
 8023b44:	4828      	ldr	r0, [pc, #160]	; (8023be8 <Articulation::toString(Articulation::State_e)+0xe0>)
 8023b46:	4770      	bx	lr
 8023b48:	4828      	ldr	r0, [pc, #160]	; (8023bec <Articulation::toString(Articulation::State_e)+0xe4>)
 8023b4a:	4770      	bx	lr
 8023b4c:	2880      	cmp	r0, #128	; 0x80
 8023b4e:	d039      	beq.n	8023bc4 <Articulation::toString(Articulation::State_e)+0xbc>
 8023b50:	f5b0 7f80 	cmp.w	r0, #256	; 0x100
 8023b54:	d10c      	bne.n	8023b70 <Articulation::toString(Articulation::State_e)+0x68>
 8023b56:	4826      	ldr	r0, [pc, #152]	; (8023bf0 <Articulation::toString(Articulation::State_e)+0xe8>)
 8023b58:	4770      	bx	lr
 8023b5a:	f5b0 4f80 	cmp.w	r0, #16384	; 0x4000
 8023b5e:	d03d      	beq.n	8023bdc <Articulation::toString(Articulation::State_e)+0xd4>
 8023b60:	d915      	bls.n	8023b8e <Articulation::toString(Articulation::State_e)+0x86>
 8023b62:	f5b0 3f80 	cmp.w	r0, #65536	; 0x10000
 8023b66:	d02b      	beq.n	8023bc0 <Articulation::toString(Articulation::State_e)+0xb8>
 8023b68:	1c43      	adds	r3, r0, #1
 8023b6a:	d108      	bne.n	8023b7e <Articulation::toString(Articulation::State_e)+0x76>
 8023b6c:	4821      	ldr	r0, [pc, #132]	; (8023bf4 <Articulation::toString(Articulation::State_e)+0xec>)
 8023b6e:	4770      	bx	lr
 8023b70:	4a1e      	ldr	r2, [pc, #120]	; (8023bec <Articulation::toString(Articulation::State_e)+0xe4>)
 8023b72:	4b21      	ldr	r3, [pc, #132]	; (8023bf8 <Articulation::toString(Articulation::State_e)+0xf0>)
 8023b74:	2840      	cmp	r0, #64	; 0x40
 8023b76:	bf14      	ite	ne
 8023b78:	4610      	movne	r0, r2
 8023b7a:	4618      	moveq	r0, r3
 8023b7c:	4770      	bx	lr
 8023b7e:	4a1b      	ldr	r2, [pc, #108]	; (8023bec <Articulation::toString(Articulation::State_e)+0xe4>)
 8023b80:	4b1e      	ldr	r3, [pc, #120]	; (8023bfc <Articulation::toString(Articulation::State_e)+0xf4>)
 8023b82:	f5b0 4f00 	cmp.w	r0, #32768	; 0x8000
 8023b86:	bf14      	ite	ne
 8023b88:	4610      	movne	r0, r2
 8023b8a:	4618      	moveq	r0, r3
 8023b8c:	4770      	bx	lr
 8023b8e:	f5b0 5f80 	cmp.w	r0, #4096	; 0x1000
 8023b92:	d019      	beq.n	8023bc8 <Articulation::toString(Articulation::State_e)+0xc0>
 8023b94:	d907      	bls.n	8023ba6 <Articulation::toString(Articulation::State_e)+0x9e>
 8023b96:	4a15      	ldr	r2, [pc, #84]	; (8023bec <Articulation::toString(Articulation::State_e)+0xe4>)
 8023b98:	4b19      	ldr	r3, [pc, #100]	; (8023c00 <Articulation::toString(Articulation::State_e)+0xf8>)
 8023b9a:	f5b0 5f00 	cmp.w	r0, #8192	; 0x2000
 8023b9e:	bf14      	ite	ne
 8023ba0:	4610      	movne	r0, r2
 8023ba2:	4618      	moveq	r0, r3
 8023ba4:	4770      	bx	lr
 8023ba6:	f5b0 6f80 	cmp.w	r0, #1024	; 0x400
 8023baa:	d007      	beq.n	8023bbc <Articulation::toString(Articulation::State_e)+0xb4>
 8023bac:	4a0f      	ldr	r2, [pc, #60]	; (8023bec <Articulation::toString(Articulation::State_e)+0xe4>)
 8023bae:	4b15      	ldr	r3, [pc, #84]	; (8023c04 <Articulation::toString(Articulation::State_e)+0xfc>)
 8023bb0:	f5b0 6f00 	cmp.w	r0, #2048	; 0x800
 8023bb4:	bf14      	ite	ne
 8023bb6:	4610      	movne	r0, r2
 8023bb8:	4618      	moveq	r0, r3
 8023bba:	4770      	bx	lr
 8023bbc:	4812      	ldr	r0, [pc, #72]	; (8023c08 <Articulation::toString(Articulation::State_e)+0x100>)
 8023bbe:	4770      	bx	lr
 8023bc0:	4812      	ldr	r0, [pc, #72]	; (8023c0c <Articulation::toString(Articulation::State_e)+0x104>)
 8023bc2:	4770      	bx	lr
 8023bc4:	4812      	ldr	r0, [pc, #72]	; (8023c10 <Articulation::toString(Articulation::State_e)+0x108>)
 8023bc6:	4770      	bx	lr
 8023bc8:	4812      	ldr	r0, [pc, #72]	; (8023c14 <Articulation::toString(Articulation::State_e)+0x10c>)
 8023bca:	4770      	bx	lr
 8023bcc:	4812      	ldr	r0, [pc, #72]	; (8023c18 <Articulation::toString(Articulation::State_e)+0x110>)
 8023bce:	4770      	bx	lr
 8023bd0:	4812      	ldr	r0, [pc, #72]	; (8023c1c <Articulation::toString(Articulation::State_e)+0x114>)
 8023bd2:	4770      	bx	lr
 8023bd4:	4812      	ldr	r0, [pc, #72]	; (8023c20 <Articulation::toString(Articulation::State_e)+0x118>)
 8023bd6:	4770      	bx	lr
 8023bd8:	4812      	ldr	r0, [pc, #72]	; (8023c24 <Articulation::toString(Articulation::State_e)+0x11c>)
 8023bda:	4770      	bx	lr
 8023bdc:	4812      	ldr	r0, [pc, #72]	; (8023c28 <Articulation::toString(Articulation::State_e)+0x120>)
 8023bde:	4770      	bx	lr
 8023be0:	4812      	ldr	r0, [pc, #72]	; (8023c2c <Articulation::toString(Articulation::State_e)+0x124>)
 8023be2:	4770      	bx	lr
 8023be4:	08043f2c 	.word	0x08043f2c
 8023be8:	08043ee4 	.word	0x08043ee4
 8023bec:	080471d0 	.word	0x080471d0
 8023bf0:	08043f24 	.word	0x08043f24
 8023bf4:	08043f70 	.word	0x08043f70
 8023bf8:	08043f64 	.word	0x08043f64
 8023bfc:	08043f9c 	.word	0x08043f9c
 8023c00:	08043f90 	.word	0x08043f90
 8023c04:	08043f80 	.word	0x08043f80
 8023c08:	08043f54 	.word	0x08043f54
 8023c0c:	08043f74 	.word	0x08043f74
 8023c10:	08043f38 	.word	0x08043f38
 8023c14:	08043f4c 	.word	0x08043f4c
 8023c18:	08043f18 	.word	0x08043f18
 8023c1c:	08043ef0 	.word	0x08043ef0
 8023c20:	08043efc 	.word	0x08043efc
 8023c24:	08043f08 	.word	0x08043f08
 8023c28:	08043f5c 	.word	0x08043f5c
 8023c2c:	08043f44 	.word	0x08043f44

08023c30 <Articulation::transition(Articulation::State_e)>:
 8023c30:	b5f0      	push	{r4, r5, r6, r7, lr}
 8023c32:	2300      	movs	r3, #0
 8023c34:	6804      	ldr	r4, [r0, #0]
 8023c36:	4d36      	ldr	r5, [pc, #216]	; (8023d10 <Articulation::transition(Articulation::State_e)+0xe0>)
 8023c38:	b083      	sub	sp, #12
 8023c3a:	4606      	mov	r6, r0
 8023c3c:	460f      	mov	r7, r1
 8023c3e:	e002      	b.n	8023c46 <Articulation::transition(Articulation::State_e)+0x16>
 8023c40:	3301      	adds	r3, #1
 8023c42:	2b0e      	cmp	r3, #14
 8023c44:	d029      	beq.n	8023c9a <Articulation::transition(Articulation::State_e)+0x6a>
 8023c46:	1c62      	adds	r2, r4, #1
 8023c48:	d02a      	beq.n	8023ca0 <Articulation::transition(Articulation::State_e)+0x70>
 8023c4a:	f855 2033 	ldr.w	r2, [r5, r3, lsl #3]
 8023c4e:	ea34 0102 	bics.w	r1, r4, r2
 8023c52:	d1f5      	bne.n	8023c40 <Articulation::transition(Articulation::State_e)+0x10>
 8023c54:	3201      	adds	r2, #1
 8023c56:	d0f3      	beq.n	8023c40 <Articulation::transition(Articulation::State_e)+0x10>
 8023c58:	eb05 03c3 	add.w	r3, r5, r3, lsl #3
 8023c5c:	482d      	ldr	r0, [pc, #180]	; (8023d14 <Articulation::transition(Articulation::State_e)+0xe4>)
 8023c5e:	685b      	ldr	r3, [r3, #4]
 8023c60:	ea37 0303 	bics.w	r3, r7, r3
 8023c64:	f04f 012f 	mov.w	r1, #47	; 0x2f
 8023c68:	d029      	beq.n	8023cbe <Articulation::transition(Articulation::State_e)+0x8e>
 8023c6a:	f01b fb78 	bl	803f35e <strrchr>
 8023c6e:	b1d8      	cbz	r0, 8023ca8 <Articulation::transition(Articulation::State_e)+0x78>
 8023c70:	212f      	movs	r1, #47	; 0x2f
 8023c72:	4828      	ldr	r0, [pc, #160]	; (8023d14 <Articulation::transition(Articulation::State_e)+0xe4>)
 8023c74:	f01b fb73 	bl	803f35e <strrchr>
 8023c78:	1c41      	adds	r1, r0, #1
 8023c7a:	6830      	ldr	r0, [r6, #0]
 8023c7c:	f7ff ff44 	bl	8023b08 <Articulation::toString(Articulation::State_e)>
 8023c80:	4604      	mov	r4, r0
 8023c82:	4638      	mov	r0, r7
 8023c84:	f7ff ff40 	bl	8023b08 <Articulation::toString(Articulation::State_e)>
 8023c88:	4b23      	ldr	r3, [pc, #140]	; (8023d18 <Articulation::transition(Articulation::State_e)+0xe8>)
 8023c8a:	e9cd 4000 	strd	r4, r0, [sp]
 8023c8e:	22e3      	movs	r2, #227	; 0xe3
 8023c90:	2002      	movs	r0, #2
 8023c92:	f7fe fd81 	bl	8022798 <DEBUG_logMsg>
 8023c96:	2000      	movs	r0, #0
 8023c98:	e000      	b.n	8023c9c <Articulation::transition(Articulation::State_e)+0x6c>
 8023c9a:	2000      	movs	r0, #0
 8023c9c:	b003      	add	sp, #12
 8023c9e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8023ca0:	2001      	movs	r0, #1
 8023ca2:	6037      	str	r7, [r6, #0]
 8023ca4:	b003      	add	sp, #12
 8023ca6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8023ca8:	481a      	ldr	r0, [pc, #104]	; (8023d14 <Articulation::transition(Articulation::State_e)+0xe4>)
 8023caa:	215c      	movs	r1, #92	; 0x5c
 8023cac:	f01b fb57 	bl	803f35e <strrchr>
 8023cb0:	b348      	cbz	r0, 8023d06 <Articulation::transition(Articulation::State_e)+0xd6>
 8023cb2:	215c      	movs	r1, #92	; 0x5c
 8023cb4:	4817      	ldr	r0, [pc, #92]	; (8023d14 <Articulation::transition(Articulation::State_e)+0xe4>)
 8023cb6:	f01b fb52 	bl	803f35e <strrchr>
 8023cba:	1c41      	adds	r1, r0, #1
 8023cbc:	e7dd      	b.n	8023c7a <Articulation::transition(Articulation::State_e)+0x4a>
 8023cbe:	f01b fb4e 	bl	803f35e <strrchr>
 8023cc2:	b1a8      	cbz	r0, 8023cf0 <Articulation::transition(Articulation::State_e)+0xc0>
 8023cc4:	212f      	movs	r1, #47	; 0x2f
 8023cc6:	4813      	ldr	r0, [pc, #76]	; (8023d14 <Articulation::transition(Articulation::State_e)+0xe4>)
 8023cc8:	f01b fb49 	bl	803f35e <strrchr>
 8023ccc:	1c41      	adds	r1, r0, #1
 8023cce:	6830      	ldr	r0, [r6, #0]
 8023cd0:	f7ff ff1a 	bl	8023b08 <Articulation::toString(Articulation::State_e)>
 8023cd4:	4604      	mov	r4, r0
 8023cd6:	4638      	mov	r0, r7
 8023cd8:	f7ff ff16 	bl	8023b08 <Articulation::toString(Articulation::State_e)>
 8023cdc:	4b0f      	ldr	r3, [pc, #60]	; (8023d1c <Articulation::transition(Articulation::State_e)+0xec>)
 8023cde:	e9cd 4000 	strd	r4, r0, [sp]
 8023ce2:	22dd      	movs	r2, #221	; 0xdd
 8023ce4:	2002      	movs	r0, #2
 8023ce6:	f7fe fd57 	bl	8022798 <DEBUG_logMsg>
 8023cea:	6037      	str	r7, [r6, #0]
 8023cec:	2001      	movs	r0, #1
 8023cee:	e7d5      	b.n	8023c9c <Articulation::transition(Articulation::State_e)+0x6c>
 8023cf0:	4808      	ldr	r0, [pc, #32]	; (8023d14 <Articulation::transition(Articulation::State_e)+0xe4>)
 8023cf2:	215c      	movs	r1, #92	; 0x5c
 8023cf4:	f01b fb33 	bl	803f35e <strrchr>
 8023cf8:	b138      	cbz	r0, 8023d0a <Articulation::transition(Articulation::State_e)+0xda>
 8023cfa:	215c      	movs	r1, #92	; 0x5c
 8023cfc:	4805      	ldr	r0, [pc, #20]	; (8023d14 <Articulation::transition(Articulation::State_e)+0xe4>)
 8023cfe:	f01b fb2e 	bl	803f35e <strrchr>
 8023d02:	1c41      	adds	r1, r0, #1
 8023d04:	e7e3      	b.n	8023cce <Articulation::transition(Articulation::State_e)+0x9e>
 8023d06:	4903      	ldr	r1, [pc, #12]	; (8023d14 <Articulation::transition(Articulation::State_e)+0xe4>)
 8023d08:	e7b7      	b.n	8023c7a <Articulation::transition(Articulation::State_e)+0x4a>
 8023d0a:	4902      	ldr	r1, [pc, #8]	; (8023d14 <Articulation::transition(Articulation::State_e)+0xe4>)
 8023d0c:	e7df      	b.n	8023cce <Articulation::transition(Articulation::State_e)+0x9e>
 8023d0e:	bf00      	nop
 8023d10:	08044038 	.word	0x08044038
 8023d14:	08043fa4 	.word	0x08043fa4
 8023d18:	08044004 	.word	0x08044004
 8023d1c:	08043fe0 	.word	0x08043fe0

08023d20 <Articulation::toNexusArticulation(Articulation::State_e)>:
 8023d20:	2840      	cmp	r0, #64	; 0x40
 8023d22:	d03a      	beq.n	8023d9a <Articulation::toNexusArticulation(Articulation::State_e)+0x7a>
 8023d24:	d81c      	bhi.n	8023d60 <Articulation::toNexusArticulation(Articulation::State_e)+0x40>
 8023d26:	3802      	subs	r0, #2
 8023d28:	281e      	cmp	r0, #30
 8023d2a:	d817      	bhi.n	8023d5c <Articulation::toNexusArticulation(Articulation::State_e)+0x3c>
 8023d2c:	281e      	cmp	r0, #30
 8023d2e:	d815      	bhi.n	8023d5c <Articulation::toNexusArticulation(Articulation::State_e)+0x3c>
 8023d30:	e8df f000 	tbb	[pc, r0]
 8023d34:	14101412 	.word	0x14101412
 8023d38:	142f1414 	.word	0x142f1414
 8023d3c:	14141414 	.word	0x14141414
 8023d40:	14311414 	.word	0x14311414
 8023d44:	14141414 	.word	0x14141414
 8023d48:	14141414 	.word	0x14141414
 8023d4c:	14141414 	.word	0x14141414
 8023d50:	1414      	.short	0x1414
 8023d52:	2d          	.byte	0x2d
 8023d53:	00          	.byte	0x00
 8023d54:	2009      	movs	r0, #9
 8023d56:	4770      	bx	lr
 8023d58:	2001      	movs	r0, #1
 8023d5a:	4770      	bx	lr
 8023d5c:	2000      	movs	r0, #0
 8023d5e:	4770      	bx	lr
 8023d60:	f5b0 6f80 	cmp.w	r0, #1024	; 0x400
 8023d64:	d011      	beq.n	8023d8a <Articulation::toNexusArticulation(Articulation::State_e)+0x6a>
 8023d66:	d905      	bls.n	8023d74 <Articulation::toNexusArticulation(Articulation::State_e)+0x54>
 8023d68:	f5b0 6f00 	cmp.w	r0, #2048	; 0x800
 8023d6c:	bf14      	ite	ne
 8023d6e:	2000      	movne	r0, #0
 8023d70:	2004      	moveq	r0, #4
 8023d72:	4770      	bx	lr
 8023d74:	f5b0 7f80 	cmp.w	r0, #256	; 0x100
 8023d78:	d005      	beq.n	8023d86 <Articulation::toNexusArticulation(Articulation::State_e)+0x66>
 8023d7a:	f5b0 7f00 	cmp.w	r0, #512	; 0x200
 8023d7e:	bf14      	ite	ne
 8023d80:	2000      	movne	r0, #0
 8023d82:	2007      	moveq	r0, #7
 8023d84:	4770      	bx	lr
 8023d86:	2002      	movs	r0, #2
 8023d88:	4770      	bx	lr
 8023d8a:	2008      	movs	r0, #8
 8023d8c:	4770      	bx	lr
 8023d8e:	2005      	movs	r0, #5
 8023d90:	4770      	bx	lr
 8023d92:	200a      	movs	r0, #10
 8023d94:	4770      	bx	lr
 8023d96:	200b      	movs	r0, #11
 8023d98:	4770      	bx	lr
 8023d9a:	2006      	movs	r0, #6
 8023d9c:	4770      	bx	lr
 8023d9e:	bf00      	nop

08023da0 <Articulation::operator unsigned int() const>:
 8023da0:	6800      	ldr	r0, [r0, #0]
 8023da2:	4770      	bx	lr

08023da4 <CCP_init>:
 8023da4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8023da8:	2215      	movs	r2, #21
 8023daa:	b084      	sub	sp, #16
 8023dac:	2100      	movs	r1, #0
 8023dae:	4866      	ldr	r0, [pc, #408]	; (8023f48 <CCP_init+0x1a4>)
 8023db0:	4d66      	ldr	r5, [pc, #408]	; (8023f4c <CCP_init+0x1a8>)
 8023db2:	f01b fc4f 	bl	803f654 <memset>
 8023db6:	2205      	movs	r2, #5
 8023db8:	2100      	movs	r1, #0
 8023dba:	4865      	ldr	r0, [pc, #404]	; (8023f50 <CCP_init+0x1ac>)
 8023dbc:	f01b fc4a 	bl	803f654 <memset>
 8023dc0:	f240 72e2 	movw	r2, #2018	; 0x7e2
 8023dc4:	2100      	movs	r1, #0
 8023dc6:	4863      	ldr	r0, [pc, #396]	; (8023f54 <CCP_init+0x1b0>)
 8023dc8:	f01b fc44 	bl	803f654 <memset>
 8023dcc:	4629      	mov	r1, r5
 8023dce:	2208      	movs	r2, #8
 8023dd0:	4668      	mov	r0, sp
 8023dd2:	f7fe fe89 	bl	8022ae8 <Robot::getAxis(ROBOT_axisIndex_t)>
 8023dd6:	4629      	mov	r1, r5
 8023dd8:	220c      	movs	r2, #12
 8023dda:	a802      	add	r0, sp, #8
 8023ddc:	f7fe fe84 	bl	8022ae8 <Robot::getAxis(ROBOT_axisIndex_t)>
 8023de0:	f89d 3004 	ldrb.w	r3, [sp, #4]
 8023de4:	b113      	cbz	r3, 8023dec <CCP_init+0x48>
 8023de6:	f89d 300c 	ldrb.w	r3, [sp, #12]
 8023dea:	b9a3      	cbnz	r3, 8023e16 <CCP_init+0x72>
 8023dec:	485a      	ldr	r0, [pc, #360]	; (8023f58 <CCP_init+0x1b4>)
 8023dee:	212f      	movs	r1, #47	; 0x2f
 8023df0:	f01b fab5 	bl	803f35e <strrchr>
 8023df4:	2800      	cmp	r0, #0
 8023df6:	f000 8099 	beq.w	8023f2c <CCP_init+0x188>
 8023dfa:	212f      	movs	r1, #47	; 0x2f
 8023dfc:	4856      	ldr	r0, [pc, #344]	; (8023f58 <CCP_init+0x1b4>)
 8023dfe:	f01b faae 	bl	803f35e <strrchr>
 8023e02:	1c41      	adds	r1, r0, #1
 8023e04:	4b55      	ldr	r3, [pc, #340]	; (8023f5c <CCP_init+0x1b8>)
 8023e06:	f44f 72fa 	mov.w	r2, #500	; 0x1f4
 8023e0a:	2000      	movs	r0, #0
 8023e0c:	f7fe fcc4 	bl	8022798 <DEBUG_logMsg>
 8023e10:	b004      	add	sp, #16
 8023e12:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8023e16:	9e00      	ldr	r6, [sp, #0]
 8023e18:	f8dd 8008 	ldr.w	r8, [sp, #8]
 8023e1c:	4c50      	ldr	r4, [pc, #320]	; (8023f60 <CCP_init+0x1bc>)
 8023e1e:	4630      	mov	r0, r6
 8023e20:	2200      	movs	r2, #0
 8023e22:	2155      	movs	r1, #85	; 0x55
 8023e24:	f7ff f8a2 	bl	8022f6c <AxisBase::getMotionProfile(unsigned char, AXIS_mode_t)>
 8023e28:	2201      	movs	r2, #1
 8023e2a:	4607      	mov	r7, r0
 8023e2c:	2155      	movs	r1, #85	; 0x55
 8023e2e:	4630      	mov	r0, r6
 8023e30:	f7ff f89c 	bl	8022f6c <AxisBase::getMotionProfile(unsigned char, AXIS_mode_t)>
 8023e34:	2200      	movs	r2, #0
 8023e36:	4606      	mov	r6, r0
 8023e38:	2155      	movs	r1, #85	; 0x55
 8023e3a:	4640      	mov	r0, r8
 8023e3c:	f7ff f896 	bl	8022f6c <AxisBase::getMotionProfile(unsigned char, AXIS_mode_t)>
 8023e40:	eddf 5a48 	vldr	s11, [pc, #288]	; 8023f64 <CCP_init+0x1c0>
 8023e44:	ed97 6a02 	vldr	s12, [r7, #8]
 8023e48:	edd6 6a02 	vldr	s13, [r6, #8]
 8023e4c:	ed97 7a01 	vldr	s14, [r7, #4]
 8023e50:	edd6 7a01 	vldr	s15, [r6, #4]
 8023e54:	edd0 4a02 	vldr	s9, [r0, #8]
 8023e58:	ed90 5a01 	vldr	s10, [r0, #4]
 8023e5c:	ee26 6a25 	vmul.f32	s12, s12, s11
 8023e60:	ee66 6aa5 	vmul.f32	s13, s13, s11
 8023e64:	f44f 667a 	mov.w	r6, #4000	; 0xfa0
 8023e68:	ee27 7a25 	vmul.f32	s14, s14, s11
 8023e6c:	ee67 7aa5 	vmul.f32	s15, s15, s11
 8023e70:	eebc 6ac6 	vcvt.u32.f32	s12, s12
 8023e74:	62e6      	str	r6, [r4, #44]	; 0x2c
 8023e76:	f241 3088 	movw	r0, #5000	; 0x1388
 8023e7a:	f44f 66fa 	mov.w	r6, #2000	; 0x7d0
 8023e7e:	eefc 6ae6 	vcvt.u32.f32	s13, s13
 8023e82:	6320      	str	r0, [r4, #48]	; 0x30
 8023e84:	6426      	str	r6, [r4, #64]	; 0x40
 8023e86:	f247 5030 	movw	r0, #30000	; 0x7530
 8023e8a:	f44f 56fa 	mov.w	r6, #8000	; 0x1f40
 8023e8e:	ee16 3a10 	vmov	r3, s12
 8023e92:	eebc 7ac7 	vcvt.u32.f32	s14, s14
 8023e96:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8023e9a:	64a0      	str	r0, [r4, #72]	; 0x48
 8023e9c:	64e6      	str	r6, [r4, #76]	; 0x4c
 8023e9e:	f644 6020 	movw	r0, #20000	; 0x4e20
 8023ea2:	f643 2698 	movw	r6, #15000	; 0x3a98
 8023ea6:	ee16 1a90 	vmov	r1, s13
 8023eaa:	6520      	str	r0, [r4, #80]	; 0x50
 8023eac:	6566      	str	r6, [r4, #84]	; 0x54
 8023eae:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 8023eb2:	f242 7610 	movw	r6, #10000	; 0x2710
 8023eb6:	ee17 2a10 	vmov	r2, s14
 8023eba:	eefc 4ae4 	vcvt.u32.f32	s9, s9
 8023ebe:	eebc 5ac5 	vcvt.u32.f32	s10, s10
 8023ec2:	e9c4 3300 	strd	r3, r3, [r4]
 8023ec6:	65a0      	str	r0, [r4, #88]	; 0x58
 8023ec8:	ee17 3a90 	vmov	r3, s15
 8023ecc:	65e6      	str	r6, [r4, #92]	; 0x5c
 8023ece:	202d      	movs	r0, #45	; 0x2d
 8023ed0:	260a      	movs	r6, #10
 8023ed2:	e9c4 1103 	strd	r1, r1, [r4, #12]
 8023ed6:	6620      	str	r0, [r4, #96]	; 0x60
 8023ed8:	2105      	movs	r1, #5
 8023eda:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 8023ede:	6666      	str	r6, [r4, #100]	; 0x64
 8023ee0:	f640 36b8 	movw	r6, #3000	; 0xbb8
 8023ee4:	e9c4 2205 	strd	r2, r2, [r4, #20]
 8023ee8:	edc4 4a02 	vstr	s9, [r4, #8]
 8023eec:	ed84 5a07 	vstr	s10, [r4, #28]
 8023ef0:	e9c4 3308 	strd	r3, r3, [r4, #32]
 8023ef4:	e9c4 000e 	strd	r0, r0, [r4, #56]	; 0x38
 8023ef8:	62a0      	str	r0, [r4, #40]	; 0x28
 8023efa:	6366      	str	r6, [r4, #52]	; 0x34
 8023efc:	6466      	str	r6, [r4, #68]	; 0x44
 8023efe:	66a1      	str	r1, [r4, #104]	; 0x68
 8023f00:	6828      	ldr	r0, [r5, #0]
 8023f02:	6803      	ldr	r3, [r0, #0]
 8023f04:	2600      	movs	r6, #0
 8023f06:	e9c4 661b 	strd	r6, r6, [r4, #108]	; 0x6c
 8023f0a:	e9c4 661d 	strd	r6, r6, [r4, #116]	; 0x74
 8023f0e:	689b      	ldr	r3, [r3, #8]
 8023f10:	4798      	blx	r3
 8023f12:	6828      	ldr	r0, [r5, #0]
 8023f14:	6803      	ldr	r3, [r0, #0]
 8023f16:	699b      	ldr	r3, [r3, #24]
 8023f18:	4798      	blx	r3
 8023f1a:	4b13      	ldr	r3, [pc, #76]	; (8023f68 <CCP_init+0x1c4>)
 8023f1c:	67e0      	str	r0, [r4, #124]	; 0x7c
 8023f1e:	2255      	movs	r2, #85	; 0x55
 8023f20:	e9c3 6601 	strd	r6, r6, [r3, #4]
 8023f24:	601a      	str	r2, [r3, #0]
 8023f26:	b004      	add	sp, #16
 8023f28:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8023f2c:	480a      	ldr	r0, [pc, #40]	; (8023f58 <CCP_init+0x1b4>)
 8023f2e:	215c      	movs	r1, #92	; 0x5c
 8023f30:	f01b fa15 	bl	803f35e <strrchr>
 8023f34:	b128      	cbz	r0, 8023f42 <CCP_init+0x19e>
 8023f36:	215c      	movs	r1, #92	; 0x5c
 8023f38:	4807      	ldr	r0, [pc, #28]	; (8023f58 <CCP_init+0x1b4>)
 8023f3a:	f01b fa10 	bl	803f35e <strrchr>
 8023f3e:	1c41      	adds	r1, r0, #1
 8023f40:	e760      	b.n	8023e04 <CCP_init+0x60>
 8023f42:	4905      	ldr	r1, [pc, #20]	; (8023f58 <CCP_init+0x1b4>)
 8023f44:	e75e      	b.n	8023e04 <CCP_init+0x60>
 8023f46:	bf00      	nop
 8023f48:	20003dcc 	.word	0x20003dcc
 8023f4c:	2000f630 	.word	0x2000f630
 8023f50:	20003e74 	.word	0x20003e74
 8023f54:	20003e7c 	.word	0x20003e7c
 8023f58:	080440a8 	.word	0x080440a8
 8023f5c:	080440e0 	.word	0x080440e0
 8023f60:	20003df0 	.word	0x20003df0
 8023f64:	447a0000 	.word	0x447a0000
 8023f68:	20003de4 	.word	0x20003de4

08023f6c <CCP_sendCmdResponse>:
 8023f6c:	b5f0      	push	{r4, r5, r6, r7, lr}
 8023f6e:	4d0e      	ldr	r5, [pc, #56]	; (8023fa8 <CCP_sendCmdResponse+0x3c>)
 8023f70:	4b0e      	ldr	r3, [pc, #56]	; (8023fac <CCP_sendCmdResponse+0x40>)
 8023f72:	b085      	sub	sp, #20
 8023f74:	1dac      	adds	r4, r5, #6
 8023f76:	9401      	str	r4, [sp, #4]
 8023f78:	460f      	mov	r7, r1
 8023f7a:	4616      	mov	r6, r2
 8023f7c:	4601      	mov	r1, r0
 8023f7e:	886a      	ldrh	r2, [r5, #2]
 8023f80:	701f      	strb	r7, [r3, #0]
 8023f82:	f44f 7080 	mov.w	r0, #256	; 0x100
 8023f86:	2500      	movs	r5, #0
 8023f88:	e9cd 0502 	strd	r0, r5, [sp, #8]
 8023f8c:	2005      	movs	r0, #5
 8023f8e:	9000      	str	r0, [sp, #0]
 8023f90:	f8c3 6001 	str.w	r6, [r3, #1]
 8023f94:	2007      	movs	r0, #7
 8023f96:	f001 f9e5 	bl	8025364 <COMM_packNetworkMsg>
 8023f9a:	b281      	uxth	r1, r0
 8023f9c:	4620      	mov	r0, r4
 8023f9e:	b005      	add	sp, #20
 8023fa0:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 8023fa4:	f00b be88 	b.w	802fcb8 <HARDWARE_NETWORK_enqueuePriorityCCPMessage>
 8023fa8:	20003e7c 	.word	0x20003e7c
 8023fac:	20003e74 	.word	0x20003e74

08023fb0 <CCP_sendDataMessage>:
 8023fb0:	b570      	push	{r4, r5, r6, lr}
 8023fb2:	4d0c      	ldr	r5, [pc, #48]	; (8023fe4 <CCP_sendDataMessage+0x34>)
 8023fb4:	b084      	sub	sp, #16
 8023fb6:	460b      	mov	r3, r1
 8023fb8:	f505 7483 	add.w	r4, r5, #262	; 0x106
 8023fbc:	4601      	mov	r1, r0
 8023fbe:	2600      	movs	r6, #0
 8023fc0:	f44f 7080 	mov.w	r0, #256	; 0x100
 8023fc4:	e9cd 0602 	strd	r0, r6, [sp, #8]
 8023fc8:	9200      	str	r2, [sp, #0]
 8023fca:	9401      	str	r4, [sp, #4]
 8023fcc:	88aa      	ldrh	r2, [r5, #4]
 8023fce:	2009      	movs	r0, #9
 8023fd0:	f001 f9c8 	bl	8025364 <COMM_packNetworkMsg>
 8023fd4:	b281      	uxth	r1, r0
 8023fd6:	4620      	mov	r0, r4
 8023fd8:	b004      	add	sp, #16
 8023fda:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8023fde:	f00b be7f 	b.w	802fce0 <HARDWARE_NETWORK_enqueueStandardCCPMessage>
 8023fe2:	bf00      	nop
 8023fe4:	20003e7c 	.word	0x20003e7c

08023fe8 <CCP_sendPriorityMessage>:
 8023fe8:	b570      	push	{r4, r5, r6, lr}
 8023fea:	4d0c      	ldr	r5, [pc, #48]	; (802401c <CCP_sendPriorityMessage+0x34>)
 8023fec:	b084      	sub	sp, #16
 8023fee:	460b      	mov	r3, r1
 8023ff0:	f505 7483 	add.w	r4, r5, #262	; 0x106
 8023ff4:	4601      	mov	r1, r0
 8023ff6:	2600      	movs	r6, #0
 8023ff8:	f44f 7080 	mov.w	r0, #256	; 0x100
 8023ffc:	e9cd 0602 	strd	r0, r6, [sp, #8]
 8024000:	9200      	str	r2, [sp, #0]
 8024002:	9401      	str	r4, [sp, #4]
 8024004:	88aa      	ldrh	r2, [r5, #4]
 8024006:	2008      	movs	r0, #8
 8024008:	f001 f9ac 	bl	8025364 <COMM_packNetworkMsg>
 802400c:	b281      	uxth	r1, r0
 802400e:	4620      	mov	r0, r4
 8024010:	b004      	add	sp, #16
 8024012:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8024016:	f00b be4f 	b.w	802fcb8 <HARDWARE_NETWORK_enqueuePriorityCCPMessage>
 802401a:	bf00      	nop
 802401c:	20003e7c 	.word	0x20003e7c

08024020 <CCP_processDataRequest.part.0>:
 8024020:	b510      	push	{r4, lr}
 8024022:	b08a      	sub	sp, #40	; 0x28
 8024024:	a803      	add	r0, sp, #12
 8024026:	f00a fe6d 	bl	802ed04 <CAMERA_getResponseData()>
 802402a:	9b03      	ldr	r3, [sp, #12]
 802402c:	9c08      	ldr	r4, [sp, #32]
 802402e:	9301      	str	r3, [sp, #4]
 8024030:	2208      	movs	r2, #8
 8024032:	f240 1301 	movw	r3, #257	; 0x101
 8024036:	a901      	add	r1, sp, #4
 8024038:	2000      	movs	r0, #0
 802403a:	f8ad 4008 	strh.w	r4, [sp, #8]
 802403e:	f8ad 300a 	strh.w	r3, [sp, #10]
 8024042:	f7ff ffd1 	bl	8023fe8 <CCP_sendPriorityMessage>
 8024046:	2000      	movs	r0, #0
 8024048:	b00a      	add	sp, #40	; 0x28
 802404a:	bd10      	pop	{r4, pc}

0802404c <CCP_sendProgressMessage>:
 802404c:	b500      	push	{lr}
 802404e:	b085      	sub	sp, #20
 8024050:	4602      	mov	r2, r0
 8024052:	460b      	mov	r3, r1
 8024054:	4815      	ldr	r0, [pc, #84]	; (80240ac <CCP_sendProgressMessage+0x60>)
 8024056:	f88d 200c 	strb.w	r2, [sp, #12]
 802405a:	212f      	movs	r1, #47	; 0x2f
 802405c:	f88d 300d 	strb.w	r3, [sp, #13]
 8024060:	f01b f97d 	bl	803f35e <strrchr>
 8024064:	b1a0      	cbz	r0, 8024090 <CCP_sendProgressMessage+0x44>
 8024066:	212f      	movs	r1, #47	; 0x2f
 8024068:	4810      	ldr	r0, [pc, #64]	; (80240ac <CCP_sendProgressMessage+0x60>)
 802406a:	f01b f978 	bl	803f35e <strrchr>
 802406e:	1c41      	adds	r1, r0, #1
 8024070:	f89d 300c 	ldrb.w	r3, [sp, #12]
 8024074:	9300      	str	r3, [sp, #0]
 8024076:	2298      	movs	r2, #152	; 0x98
 8024078:	4b0d      	ldr	r3, [pc, #52]	; (80240b0 <CCP_sendProgressMessage+0x64>)
 802407a:	2002      	movs	r0, #2
 802407c:	f7fe fb8c 	bl	8022798 <DEBUG_logMsg>
 8024080:	2202      	movs	r2, #2
 8024082:	a903      	add	r1, sp, #12
 8024084:	2001      	movs	r0, #1
 8024086:	f7ff ffaf 	bl	8023fe8 <CCP_sendPriorityMessage>
 802408a:	b005      	add	sp, #20
 802408c:	f85d fb04 	ldr.w	pc, [sp], #4
 8024090:	4806      	ldr	r0, [pc, #24]	; (80240ac <CCP_sendProgressMessage+0x60>)
 8024092:	215c      	movs	r1, #92	; 0x5c
 8024094:	f01b f963 	bl	803f35e <strrchr>
 8024098:	b128      	cbz	r0, 80240a6 <CCP_sendProgressMessage+0x5a>
 802409a:	215c      	movs	r1, #92	; 0x5c
 802409c:	4803      	ldr	r0, [pc, #12]	; (80240ac <CCP_sendProgressMessage+0x60>)
 802409e:	f01b f95e 	bl	803f35e <strrchr>
 80240a2:	1c41      	adds	r1, r0, #1
 80240a4:	e7e4      	b.n	8024070 <CCP_sendProgressMessage+0x24>
 80240a6:	4901      	ldr	r1, [pc, #4]	; (80240ac <CCP_sendProgressMessage+0x60>)
 80240a8:	e7e2      	b.n	8024070 <CCP_sendProgressMessage+0x24>
 80240aa:	bf00      	nop
 80240ac:	080440a8 	.word	0x080440a8
 80240b0:	08044114 	.word	0x08044114

080240b4 <CCP_processMessage>:
 80240b4:	b570      	push	{r4, r5, r6, lr}
 80240b6:	4c29      	ldr	r4, [pc, #164]	; (802415c <CCP_processMessage+0xa8>)
 80240b8:	b084      	sub	sp, #16
 80240ba:	f240 51dc 	movw	r1, #1500	; 0x5dc
 80240be:	f204 2006 	addw	r0, r4, #518	; 0x206
 80240c2:	f00b fe35 	bl	802fd30 <HARDWARE_NETWORK_dequeueReceivedCCPMessage>
 80240c6:	2200      	movs	r2, #0
 80240c8:	4605      	mov	r5, r0
 80240ca:	4669      	mov	r1, sp
 80240cc:	f204 2006 	addw	r0, r4, #518	; 0x206
 80240d0:	f001 f8c8 	bl	8025264 <COMM_unpackNetworkMsg>
 80240d4:	b180      	cbz	r0, 80240f8 <CCP_processMessage+0x44>
 80240d6:	9e00      	ldr	r6, [sp, #0]
 80240d8:	8861      	ldrh	r1, [r4, #2]
 80240da:	f8b6 3005 	ldrh.w	r3, [r6, #5]
 80240de:	b29a      	uxth	r2, r3
 80240e0:	4291      	cmp	r1, r2
 80240e2:	d011      	beq.n	8024108 <CCP_processMessage+0x54>
 80240e4:	7930      	ldrb	r0, [r6, #4]
 80240e6:	2806      	cmp	r0, #6
 80240e8:	d021      	beq.n	802412e <CCP_processMessage+0x7a>
 80240ea:	2808      	cmp	r0, #8
 80240ec:	d102      	bne.n	80240f4 <CCP_processMessage+0x40>
 80240ee:	79f3      	ldrb	r3, [r6, #7]
 80240f0:	2b03      	cmp	r3, #3
 80240f2:	d013      	beq.n	802411c <CCP_processMessage+0x68>
 80240f4:	2301      	movs	r3, #1
 80240f6:	7023      	strb	r3, [r4, #0]
 80240f8:	b90d      	cbnz	r5, 80240fe <CCP_processMessage+0x4a>
 80240fa:	b004      	add	sp, #16
 80240fc:	bd70      	pop	{r4, r5, r6, pc}
 80240fe:	2080      	movs	r0, #128	; 0x80
 8024100:	f001 fb68 	bl	80257d4 <ANTCTRL_setEvent>
 8024104:	b004      	add	sp, #16
 8024106:	bd70      	pop	{r4, r5, r6, pc}
 8024108:	7822      	ldrb	r2, [r4, #0]
 802410a:	2a00      	cmp	r2, #0
 802410c:	d0ea      	beq.n	80240e4 <CCP_processMessage+0x30>
 802410e:	9b01      	ldr	r3, [sp, #4]
 8024110:	79f0      	ldrb	r0, [r6, #7]
 8024112:	7819      	ldrb	r1, [r3, #0]
 8024114:	2200      	movs	r2, #0
 8024116:	f7ff ff29 	bl	8023f6c <CCP_sendCmdResponse>
 802411a:	e7ed      	b.n	80240f8 <CCP_processMessage+0x44>
 802411c:	9a01      	ldr	r2, [sp, #4]
 802411e:	6813      	ldr	r3, [r2, #0]
 8024120:	2b02      	cmp	r3, #2
 8024122:	d8e7      	bhi.n	80240f4 <CCP_processMessage+0x40>
 8024124:	490e      	ldr	r1, [pc, #56]	; (8024160 <CCP_processMessage+0xac>)
 8024126:	6852      	ldr	r2, [r2, #4]
 8024128:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 802412c:	e7e2      	b.n	80240f4 <CCP_processMessage+0x40>
 802412e:	79f1      	ldrb	r1, [r6, #7]
 8024130:	2918      	cmp	r1, #24
 8024132:	d8df      	bhi.n	80240f4 <CCP_processMessage+0x40>
 8024134:	8063      	strh	r3, [r4, #2]
 8024136:	8873      	ldrh	r3, [r6, #2]
 8024138:	9a01      	ldr	r2, [sp, #4]
 802413a:	3b08      	subs	r3, #8
 802413c:	b29b      	uxth	r3, r3
 802413e:	f001 f9d3 	bl	80254e8 <ANTCTRL_startTask>
 8024142:	2806      	cmp	r0, #6
 8024144:	d807      	bhi.n	8024156 <CCP_processMessage+0xa2>
 8024146:	4a07      	ldr	r2, [pc, #28]	; (8024164 <CCP_processMessage+0xb0>)
 8024148:	4b07      	ldr	r3, [pc, #28]	; (8024168 <CCP_processMessage+0xb4>)
 802414a:	5c11      	ldrb	r1, [r2, r0]
 802414c:	5c1a      	ldrb	r2, [r3, r0]
 802414e:	79f0      	ldrb	r0, [r6, #7]
 8024150:	f7ff ff0c 	bl	8023f6c <CCP_sendCmdResponse>
 8024154:	e7ce      	b.n	80240f4 <CCP_processMessage+0x40>
 8024156:	2201      	movs	r2, #1
 8024158:	2103      	movs	r1, #3
 802415a:	e7f8      	b.n	802414e <CCP_processMessage+0x9a>
 802415c:	20003e7c 	.word	0x20003e7c
 8024160:	20003de4 	.word	0x20003de4
 8024164:	08044164 	.word	0x08044164
 8024168:	0804416c 	.word	0x0804416c

0802416c <CCP_processRxUsartMessage>:
 802416c:	b570      	push	{r4, r5, r6, lr}
 802416e:	480e      	ldr	r0, [pc, #56]	; (80241a8 <CCP_processRxUsartMessage+0x3c>)
 8024170:	4e0e      	ldr	r6, [pc, #56]	; (80241ac <CCP_processRxUsartMessage+0x40>)
 8024172:	b0a0      	sub	sp, #128	; 0x80
 8024174:	f01a ff10 	bl	803ef98 <printf>
 8024178:	2500      	movs	r5, #0
 802417a:	e003      	b.n	8024184 <CCP_processRxUsartMessage+0x18>
 802417c:	f813 1c80 	ldrb.w	r1, [r3, #-128]
 8024180:	f01a ff0a 	bl	803ef98 <printf>
 8024184:	b2ec      	uxtb	r4, r5
 8024186:	eb0d 0004 	add.w	r0, sp, r4
 802418a:	f010 fd77 	bl	8034c7c <USART_readCcpUsartData>
 802418e:	ab20      	add	r3, sp, #128	; 0x80
 8024190:	2800      	cmp	r0, #0
 8024192:	4423      	add	r3, r4
 8024194:	f105 0501 	add.w	r5, r5, #1
 8024198:	4622      	mov	r2, r4
 802419a:	4630      	mov	r0, r6
 802419c:	daee      	bge.n	802417c <CCP_processRxUsartMessage+0x10>
 802419e:	4804      	ldr	r0, [pc, #16]	; (80241b0 <CCP_processRxUsartMessage+0x44>)
 80241a0:	f01a fefa 	bl	803ef98 <printf>
 80241a4:	b020      	add	sp, #128	; 0x80
 80241a6:	bd70      	pop	{r4, r5, r6, pc}
 80241a8:	08044128 	.word	0x08044128
 80241ac:	08044140 	.word	0x08044140
 80241b0:	08042440 	.word	0x08042440

080241b4 <CCP_getMirrorData>:
 80241b4:	2802      	cmp	r0, #2
 80241b6:	bf9a      	itte	ls
 80241b8:	4b02      	ldrls	r3, [pc, #8]	; (80241c4 <CCP_getMirrorData+0x10>)
 80241ba:	f853 0020 	ldrls.w	r0, [r3, r0, lsl #2]
 80241be:	2000      	movhi	r0, #0
 80241c0:	4770      	bx	lr
 80241c2:	bf00      	nop
 80241c4:	20003de4 	.word	0x20003de4

080241c8 <CCP_sendLogLine>:
 80241c8:	b570      	push	{r4, r5, r6, lr}
 80241ca:	4614      	mov	r4, r2
 80241cc:	b090      	sub	sp, #64	; 0x40
 80241ce:	2238      	movs	r2, #56	; 0x38
 80241d0:	4294      	cmp	r4, r2
 80241d2:	f04f 0303 	mov.w	r3, #3
 80241d6:	4606      	mov	r6, r0
 80241d8:	460d      	mov	r5, r1
 80241da:	f10d 0006 	add.w	r0, sp, #6
 80241de:	f04f 0100 	mov.w	r1, #0
 80241e2:	f88d 3005 	strb.w	r3, [sp, #5]
 80241e6:	f88d 6004 	strb.w	r6, [sp, #4]
 80241ea:	4626      	mov	r6, r4
 80241ec:	bf28      	it	cs
 80241ee:	4616      	movcs	r6, r2
 80241f0:	f01b fa30 	bl	803f654 <memset>
 80241f4:	2c37      	cmp	r4, #55	; 0x37
 80241f6:	f04f 0164 	mov.w	r1, #100	; 0x64
 80241fa:	480d      	ldr	r0, [pc, #52]	; (8024230 <CCP_sendLogLine+0x68>)
 80241fc:	bf94      	ite	ls
 80241fe:	4634      	movls	r4, r6
 8024200:	2437      	movhi	r4, #55	; 0x37
 8024202:	f015 fa31 	bl	8039668 <_tx_mutex_get>
 8024206:	4632      	mov	r2, r6
 8024208:	4629      	mov	r1, r5
 802420a:	f10d 0006 	add.w	r0, sp, #6
 802420e:	f01b f9f8 	bl	803f602 <__aeabi_memcpy>
 8024212:	ab10      	add	r3, sp, #64	; 0x40
 8024214:	441c      	add	r4, r3
 8024216:	a901      	add	r1, sp, #4
 8024218:	2300      	movs	r3, #0
 802421a:	223a      	movs	r2, #58	; 0x3a
 802421c:	2008      	movs	r0, #8
 802421e:	f804 3c3a 	strb.w	r3, [r4, #-58]
 8024222:	f7ff fec5 	bl	8023fb0 <CCP_sendDataMessage>
 8024226:	4802      	ldr	r0, [pc, #8]	; (8024230 <CCP_sendLogLine+0x68>)
 8024228:	f015 fb94 	bl	8039954 <_tx_mutex_put>
 802422c:	b010      	add	sp, #64	; 0x40
 802422e:	bd70      	pop	{r4, r5, r6, pc}
 8024230:	20004660 	.word	0x20004660

08024234 <CCP_sendSubtask>:
 8024234:	b500      	push	{lr}
 8024236:	b091      	sub	sp, #68	; 0x44
 8024238:	4601      	mov	r1, r0
 802423a:	2220      	movs	r2, #32
 802423c:	a801      	add	r0, sp, #4
 802423e:	f01b f865 	bl	803f30c <strncpy>
 8024242:	a901      	add	r1, sp, #4
 8024244:	2220      	movs	r2, #32
 8024246:	2009      	movs	r0, #9
 8024248:	f7ff feb2 	bl	8023fb0 <CCP_sendDataMessage>
 802424c:	b011      	add	sp, #68	; 0x44
 802424e:	f85d fb04 	ldr.w	pc, [sp], #4
 8024252:	bf00      	nop

08024254 <CCP_setMirrorData>:
 8024254:	2820      	cmp	r0, #32
 8024256:	d900      	bls.n	802425a <CCP_setMirrorData+0x6>
 8024258:	4770      	bx	lr
 802425a:	b530      	push	{r4, r5, lr}
 802425c:	b083      	sub	sp, #12
 802425e:	4603      	mov	r3, r0
 8024260:	4d06      	ldr	r5, [pc, #24]	; (802427c <CCP_setMirrorData+0x28>)
 8024262:	9000      	str	r0, [sp, #0]
 8024264:	460c      	mov	r4, r1
 8024266:	2208      	movs	r2, #8
 8024268:	4669      	mov	r1, sp
 802426a:	2002      	movs	r0, #2
 802426c:	f845 4023 	str.w	r4, [r5, r3, lsl #2]
 8024270:	9401      	str	r4, [sp, #4]
 8024272:	f7ff feb9 	bl	8023fe8 <CCP_sendPriorityMessage>
 8024276:	b003      	add	sp, #12
 8024278:	bd30      	pop	{r4, r5, pc}
 802427a:	bf00      	nop
 802427c:	20003df0 	.word	0x20003df0

08024280 <CCP_pushMirrorData>:
 8024280:	b5f0      	push	{r4, r5, r6, r7, lr}
 8024282:	4d1b      	ldr	r5, [pc, #108]	; (80242f0 <CCP_pushMirrorData+0x70>)
 8024284:	4e1b      	ldr	r6, [pc, #108]	; (80242f4 <CCP_pushMirrorData+0x74>)
 8024286:	4f1c      	ldr	r7, [pc, #112]	; (80242f8 <CCP_pushMirrorData+0x78>)
 8024288:	b085      	sub	sp, #20
 802428a:	2400      	movs	r4, #0
 802428c:	e010      	b.n	80242b0 <CCP_pushMirrorData+0x30>
 802428e:	f01b f866 	bl	803f35e <strrchr>
 8024292:	1c41      	adds	r1, r0, #1
 8024294:	682b      	ldr	r3, [r5, #0]
 8024296:	9300      	str	r3, [sp, #0]
 8024298:	f240 223d 	movw	r2, #573	; 0x23d
 802429c:	2002      	movs	r0, #2
 802429e:	463b      	mov	r3, r7
 80242a0:	f7fe fa7a 	bl	8022798 <DEBUG_logMsg>
 80242a4:	3401      	adds	r4, #1
 80242a6:	2019      	movs	r0, #25
 80242a8:	f015 fe52 	bl	8039f50 <_tx_thread_sleep>
 80242ac:	2c21      	cmp	r4, #33	; 0x21
 80242ae:	d01c      	beq.n	80242ea <CCP_pushMirrorData+0x6a>
 80242b0:	2208      	movs	r2, #8
 80242b2:	f855 3f04 	ldr.w	r3, [r5, #4]!
 80242b6:	9303      	str	r3, [sp, #12]
 80242b8:	eb0d 0102 	add.w	r1, sp, r2
 80242bc:	2002      	movs	r0, #2
 80242be:	9402      	str	r4, [sp, #8]
 80242c0:	f7ff fe92 	bl	8023fe8 <CCP_sendPriorityMessage>
 80242c4:	212f      	movs	r1, #47	; 0x2f
 80242c6:	4630      	mov	r0, r6
 80242c8:	f01b f849 	bl	803f35e <strrchr>
 80242cc:	4603      	mov	r3, r0
 80242ce:	212f      	movs	r1, #47	; 0x2f
 80242d0:	4630      	mov	r0, r6
 80242d2:	2b00      	cmp	r3, #0
 80242d4:	d1db      	bne.n	802428e <CCP_pushMirrorData+0xe>
 80242d6:	215c      	movs	r1, #92	; 0x5c
 80242d8:	f01b f841 	bl	803f35e <strrchr>
 80242dc:	4603      	mov	r3, r0
 80242de:	215c      	movs	r1, #92	; 0x5c
 80242e0:	4630      	mov	r0, r6
 80242e2:	2b00      	cmp	r3, #0
 80242e4:	d1d3      	bne.n	802428e <CCP_pushMirrorData+0xe>
 80242e6:	4631      	mov	r1, r6
 80242e8:	e7d4      	b.n	8024294 <CCP_pushMirrorData+0x14>
 80242ea:	b005      	add	sp, #20
 80242ec:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80242ee:	bf00      	nop
 80242f0:	20003dec 	.word	0x20003dec
 80242f4:	080440a8 	.word	0x080440a8
 80242f8:	08044144 	.word	0x08044144

080242fc <CCP_handleDataRequest>:
 80242fc:	b510      	push	{r4, lr}
 80242fe:	4604      	mov	r4, r0
 8024300:	b191      	cbz	r1, 8024328 <CCP_handleDataRequest+0x2c>
 8024302:	780b      	ldrb	r3, [r1, #0]
 8024304:	b12b      	cbz	r3, 8024312 <CCP_handleDataRequest+0x16>
 8024306:	2101      	movs	r1, #1
 8024308:	4620      	mov	r0, r4
 802430a:	f007 fcdf 	bl	802bccc <TaskStatus::TaskStatus(TaskStatus::Result_e)>
 802430e:	4620      	mov	r0, r4
 8024310:	bd10      	pop	{r4, pc}
 8024312:	f7ff fe85 	bl	8024020 <CCP_processDataRequest.part.0>
 8024316:	2800      	cmp	r0, #0
 8024318:	d0f5      	beq.n	8024306 <CCP_handleDataRequest+0xa>
 802431a:	4602      	mov	r2, r0
 802431c:	2102      	movs	r1, #2
 802431e:	4620      	mov	r0, r4
 8024320:	f007 fcda 	bl	802bcd8 <TaskStatus::TaskStatus(TaskStatus::Result_e, unsigned int)>
 8024324:	4620      	mov	r0, r4
 8024326:	bd10      	pop	{r4, pc}
 8024328:	2209      	movs	r2, #9
 802432a:	e7f7      	b.n	802431c <CCP_handleDataRequest+0x20>

0802432c <MCM_init>:
 802432c:	4802      	ldr	r0, [pc, #8]	; (8024338 <MCM_init+0xc>)
 802432e:	2292      	movs	r2, #146	; 0x92
 8024330:	2100      	movs	r1, #0
 8024332:	f01b b98f 	b.w	803f654 <memset>
 8024336:	bf00      	nop
 8024338:	200046ac 	.word	0x200046ac

0802433c <MCM_send>:
 802433c:	b570      	push	{r4, r5, r6, lr}
 802433e:	4c0c      	ldr	r4, [pc, #48]	; (8024370 <MCM_send+0x34>)
 8024340:	8820      	ldrh	r0, [r4, #0]
 8024342:	1c45      	adds	r5, r0, #1
 8024344:	b084      	sub	sp, #16
 8024346:	f824 5b02 	strh.w	r5, [r4], #2
 802434a:	2600      	movs	r6, #0
 802434c:	2530      	movs	r5, #48	; 0x30
 802434e:	9300      	str	r3, [sp, #0]
 8024350:	e9cd 5602 	strd	r5, r6, [sp, #8]
 8024354:	4613      	mov	r3, r2
 8024356:	9401      	str	r4, [sp, #4]
 8024358:	4602      	mov	r2, r0
 802435a:	2001      	movs	r0, #1
 802435c:	f001 f802 	bl	8025364 <COMM_packNetworkMsg>
 8024360:	b281      	uxth	r1, r0
 8024362:	4620      	mov	r0, r4
 8024364:	b004      	add	sp, #16
 8024366:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 802436a:	f00b bd5f 	b.w	802fe2c <HARDWARE_NETWORK_enqueuePriorityMCMMessage>
 802436e:	bf00      	nop
 8024370:	200046ac 	.word	0x200046ac

08024374 <MCM_processResponseMessage(COMM_rxMessagePtrs_t)>:
 8024374:	b500      	push	{lr}
 8024376:	b087      	sub	sp, #28
 8024378:	f10d 0c18 	add.w	ip, sp, #24
 802437c:	e90c 000f 	stmdb	ip, {r0, r1, r2, r3}
 8024380:	e9dd 1302 	ldrd	r1, r3, [sp, #8]
 8024384:	781a      	ldrb	r2, [r3, #0]
 8024386:	2aff      	cmp	r2, #255	; 0xff
 8024388:	d105      	bne.n	8024396 <MCM_processResponseMessage(COMM_rxMessagePtrs_t)+0x22>
 802438a:	785b      	ldrb	r3, [r3, #1]
 802438c:	2b02      	cmp	r3, #2
 802438e:	d00d      	beq.n	80243ac <MCM_processResponseMessage(COMM_rxMessagePtrs_t)+0x38>
 8024390:	b007      	add	sp, #28
 8024392:	f85d fb04 	ldr.w	pc, [sp], #4
 8024396:	f8bd 0010 	ldrh.w	r0, [sp, #16]
 802439a:	79ca      	ldrb	r2, [r1, #7]
 802439c:	7909      	ldrb	r1, [r1, #4]
 802439e:	9000      	str	r0, [sp, #0]
 80243a0:	4807      	ldr	r0, [pc, #28]	; (80243c0 <MCM_processResponseMessage(COMM_rxMessagePtrs_t)+0x4c>)
 80243a2:	f7fe fc1f 	bl	8022be4 <Robot::processMsg(COMM_source_t, unsigned char, unsigned char*, unsigned short)>
 80243a6:	b007      	add	sp, #28
 80243a8:	f85d fb04 	ldr.w	pc, [sp], #4
 80243ac:	79c9      	ldrb	r1, [r1, #7]
 80243ae:	2901      	cmp	r1, #1
 80243b0:	d1ee      	bne.n	8024390 <MCM_processResponseMessage(COMM_rxMessagePtrs_t)+0x1c>
 80243b2:	4803      	ldr	r0, [pc, #12]	; (80243c0 <MCM_processResponseMessage(COMM_rxMessagePtrs_t)+0x4c>)
 80243b4:	b007      	add	sp, #28
 80243b6:	f85d eb04 	ldr.w	lr, [sp], #4
 80243ba:	f7fe bbeb 	b.w	8022b94 <Robot::updateStatus(ROBOT_status_t)>
 80243be:	bf00      	nop
 80243c0:	2000f630 	.word	0x2000f630

080243c4 <MCM_processMessage>:
 80243c4:	b530      	push	{r4, r5, lr}
 80243c6:	2160      	movs	r1, #96	; 0x60
 80243c8:	b087      	sub	sp, #28
 80243ca:	4814      	ldr	r0, [pc, #80]	; (802441c <MCM_processMessage+0x58>)
 80243cc:	f00b fd56 	bl	802fe7c <HARDWARE_NETWORK_dequeueReceivedMCMMessage>
 80243d0:	ad02      	add	r5, sp, #8
 80243d2:	4604      	mov	r4, r0
 80243d4:	4629      	mov	r1, r5
 80243d6:	4811      	ldr	r0, [pc, #68]	; (802441c <MCM_processMessage+0x58>)
 80243d8:	2200      	movs	r2, #0
 80243da:	f000 ff43 	bl	8025264 <COMM_unpackNetworkMsg>
 80243de:	b128      	cbz	r0, 80243ec <MCM_processMessage+0x28>
 80243e0:	9b02      	ldr	r3, [sp, #8]
 80243e2:	7919      	ldrb	r1, [r3, #4]
 80243e4:	2902      	cmp	r1, #2
 80243e6:	d014      	beq.n	8024412 <MCM_processMessage+0x4e>
 80243e8:	2903      	cmp	r1, #3
 80243ea:	d007      	beq.n	80243fc <MCM_processMessage+0x38>
 80243ec:	b90c      	cbnz	r4, 80243f2 <MCM_processMessage+0x2e>
 80243ee:	b007      	add	sp, #28
 80243f0:	bd30      	pop	{r4, r5, pc}
 80243f2:	2020      	movs	r0, #32
 80243f4:	f001 f9ee 	bl	80257d4 <ANTCTRL_setEvent>
 80243f8:	b007      	add	sp, #28
 80243fa:	bd30      	pop	{r4, r5, pc}
 80243fc:	79da      	ldrb	r2, [r3, #7]
 80243fe:	2a00      	cmp	r2, #0
 8024400:	d1f4      	bne.n	80243ec <MCM_processMessage+0x28>
 8024402:	f8bd 3010 	ldrh.w	r3, [sp, #16]
 8024406:	9300      	str	r3, [sp, #0]
 8024408:	4805      	ldr	r0, [pc, #20]	; (8024420 <MCM_processMessage+0x5c>)
 802440a:	9b03      	ldr	r3, [sp, #12]
 802440c:	f7fe fbea 	bl	8022be4 <Robot::processMsg(COMM_source_t, unsigned char, unsigned char*, unsigned short)>
 8024410:	e7ec      	b.n	80243ec <MCM_processMessage+0x28>
 8024412:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
 8024416:	f7ff ffad 	bl	8024374 <MCM_processResponseMessage(COMM_rxMessagePtrs_t)>
 802441a:	e7e7      	b.n	80243ec <MCM_processMessage+0x28>
 802441c:	200046de 	.word	0x200046de
 8024420:	2000f630 	.word	0x2000f630

08024424 <CDM_sendAxis>:
 8024424:	b530      	push	{r4, r5, lr}
 8024426:	460c      	mov	r4, r1
 8024428:	b085      	sub	sp, #20
 802442a:	b352      	cbz	r2, 8024482 <CDM_sendAxis+0x5e>
 802442c:	2b08      	cmp	r3, #8
 802442e:	d825      	bhi.n	802447c <CDM_sendAxis+0x58>
 8024430:	380d      	subs	r0, #13
 8024432:	0080      	lsls	r0, r0, #2
 8024434:	f000 001c 	and.w	r0, r0, #28
 8024438:	f040 0040 	orr.w	r0, r0, #64	; 0x40
 802443c:	2500      	movs	r5, #0
 802443e:	f88d 0003 	strb.w	r0, [sp, #3]
 8024442:	f88d 5002 	strb.w	r5, [sp, #2]
 8024446:	f8bd 0002 	ldrh.w	r0, [sp, #2]
 802444a:	f88d 3005 	strb.w	r3, [sp, #5]
 802444e:	f420 707f 	bic.w	r0, r0, #1020	; 0x3fc
 8024452:	f020 0003 	bic.w	r0, r0, #3
 8024456:	4611      	mov	r1, r2
 8024458:	f8ad 0002 	strh.w	r0, [sp, #2]
 802445c:	461a      	mov	r2, r3
 802445e:	f10d 0006 	add.w	r0, sp, #6
 8024462:	2302      	movs	r3, #2
 8024464:	f88d 4001 	strb.w	r4, [sp, #1]
 8024468:	f88d 3004 	strb.w	r3, [sp, #4]
 802446c:	f01b f8c9 	bl	803f602 <__aeabi_memcpy>
 8024470:	4669      	mov	r1, sp
 8024472:	4628      	mov	r0, r5
 8024474:	f00c f994 	bl	80307a0 <CANMNGR_sendMsg>
 8024478:	b005      	add	sp, #20
 802447a:	bd30      	pop	{r4, r5, pc}
 802447c:	2000      	movs	r0, #0
 802447e:	b005      	add	sp, #20
 8024480:	bd30      	pop	{r4, r5, pc}
 8024482:	2b00      	cmp	r3, #0
 8024484:	d0d4      	beq.n	8024430 <CDM_sendAxis+0xc>
 8024486:	4610      	mov	r0, r2
 8024488:	e7f6      	b.n	8024478 <CDM_sendAxis+0x54>
 802448a:	bf00      	nop

0802448c <CDM_sendDevMulticast>:
 802448c:	b311      	cbz	r1, 80244d4 <CDM_sendDevMulticast+0x48>
 802448e:	2a08      	cmp	r2, #8
 8024490:	d822      	bhi.n	80244d8 <CDM_sendDevMulticast+0x4c>
 8024492:	b530      	push	{r4, r5, lr}
 8024494:	b085      	sub	sp, #20
 8024496:	2400      	movs	r4, #0
 8024498:	2350      	movs	r3, #80	; 0x50
 802449a:	f88d 4002 	strb.w	r4, [sp, #2]
 802449e:	f88d 3003 	strb.w	r3, [sp, #3]
 80244a2:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 80244a6:	f88d 0001 	strb.w	r0, [sp, #1]
 80244aa:	f423 737f 	bic.w	r3, r3, #1020	; 0x3fc
 80244ae:	f023 0303 	bic.w	r3, r3, #3
 80244b2:	2502      	movs	r5, #2
 80244b4:	f10d 0006 	add.w	r0, sp, #6
 80244b8:	f88d 2005 	strb.w	r2, [sp, #5]
 80244bc:	f8ad 3002 	strh.w	r3, [sp, #2]
 80244c0:	f88d 5004 	strb.w	r5, [sp, #4]
 80244c4:	f01b f89d 	bl	803f602 <__aeabi_memcpy>
 80244c8:	4669      	mov	r1, sp
 80244ca:	4620      	mov	r0, r4
 80244cc:	f00c f968 	bl	80307a0 <CANMNGR_sendMsg>
 80244d0:	b005      	add	sp, #20
 80244d2:	bd30      	pop	{r4, r5, pc}
 80244d4:	2a00      	cmp	r2, #0
 80244d6:	d0dc      	beq.n	8024492 <CDM_sendDevMulticast+0x6>
 80244d8:	2000      	movs	r0, #0
 80244da:	4770      	bx	lr

080244dc <CDM_getFwVersion>:
 80244dc:	b510      	push	{r4, lr}
 80244de:	f44f 61fa 	mov.w	r1, #2000	; 0x7d0
 80244e2:	4604      	mov	r4, r0
 80244e4:	482a      	ldr	r0, [pc, #168]	; (8024590 <CDM_getFwVersion+0xb4>)
 80244e6:	f015 f8bf 	bl	8039668 <_tx_mutex_get>
 80244ea:	b9e0      	cbnz	r0, 8024526 <CDM_getFwVersion+0x4a>
 80244ec:	4b29      	ldr	r3, [pc, #164]	; (8024594 <CDM_getFwVersion+0xb8>)
 80244ee:	781b      	ldrb	r3, [r3, #0]
 80244f0:	2b0f      	cmp	r3, #15
 80244f2:	d041      	beq.n	8024578 <CDM_getFwVersion+0x9c>
 80244f4:	4604      	mov	r4, r0
 80244f6:	4826      	ldr	r0, [pc, #152]	; (8024590 <CDM_getFwVersion+0xb4>)
 80244f8:	f015 fa2c 	bl	8039954 <_tx_mutex_put>
 80244fc:	b908      	cbnz	r0, 8024502 <CDM_getFwVersion+0x26>
 80244fe:	4620      	mov	r0, r4
 8024500:	bd10      	pop	{r4, pc}
 8024502:	4825      	ldr	r0, [pc, #148]	; (8024598 <CDM_getFwVersion+0xbc>)
 8024504:	212f      	movs	r1, #47	; 0x2f
 8024506:	f01a ff2a 	bl	803f35e <strrchr>
 802450a:	b1f8      	cbz	r0, 802454c <CDM_getFwVersion+0x70>
 802450c:	212f      	movs	r1, #47	; 0x2f
 802450e:	4822      	ldr	r0, [pc, #136]	; (8024598 <CDM_getFwVersion+0xbc>)
 8024510:	f01a ff25 	bl	803f35e <strrchr>
 8024514:	1c41      	adds	r1, r0, #1
 8024516:	4b21      	ldr	r3, [pc, #132]	; (802459c <CDM_getFwVersion+0xc0>)
 8024518:	f44f 729a 	mov.w	r2, #308	; 0x134
 802451c:	2001      	movs	r0, #1
 802451e:	f7fe f93b 	bl	8022798 <DEBUG_logMsg>
 8024522:	4620      	mov	r0, r4
 8024524:	bd10      	pop	{r4, pc}
 8024526:	481c      	ldr	r0, [pc, #112]	; (8024598 <CDM_getFwVersion+0xbc>)
 8024528:	212f      	movs	r1, #47	; 0x2f
 802452a:	f01a ff18 	bl	803f35e <strrchr>
 802452e:	b1c0      	cbz	r0, 8024562 <CDM_getFwVersion+0x86>
 8024530:	212f      	movs	r1, #47	; 0x2f
 8024532:	4819      	ldr	r0, [pc, #100]	; (8024598 <CDM_getFwVersion+0xbc>)
 8024534:	f01a ff13 	bl	803f35e <strrchr>
 8024538:	1c41      	adds	r1, r0, #1
 802453a:	4b19      	ldr	r3, [pc, #100]	; (80245a0 <CDM_getFwVersion+0xc4>)
 802453c:	f240 1225 	movw	r2, #293	; 0x125
 8024540:	2001      	movs	r0, #1
 8024542:	2400      	movs	r4, #0
 8024544:	f7fe f928 	bl	8022798 <DEBUG_logMsg>
 8024548:	4620      	mov	r0, r4
 802454a:	bd10      	pop	{r4, pc}
 802454c:	4812      	ldr	r0, [pc, #72]	; (8024598 <CDM_getFwVersion+0xbc>)
 802454e:	215c      	movs	r1, #92	; 0x5c
 8024550:	f01a ff05 	bl	803f35e <strrchr>
 8024554:	b1b8      	cbz	r0, 8024586 <CDM_getFwVersion+0xaa>
 8024556:	215c      	movs	r1, #92	; 0x5c
 8024558:	480f      	ldr	r0, [pc, #60]	; (8024598 <CDM_getFwVersion+0xbc>)
 802455a:	f01a ff00 	bl	803f35e <strrchr>
 802455e:	1c41      	adds	r1, r0, #1
 8024560:	e7d9      	b.n	8024516 <CDM_getFwVersion+0x3a>
 8024562:	480d      	ldr	r0, [pc, #52]	; (8024598 <CDM_getFwVersion+0xbc>)
 8024564:	215c      	movs	r1, #92	; 0x5c
 8024566:	f01a fefa 	bl	803f35e <strrchr>
 802456a:	b170      	cbz	r0, 802458a <CDM_getFwVersion+0xae>
 802456c:	215c      	movs	r1, #92	; 0x5c
 802456e:	480a      	ldr	r0, [pc, #40]	; (8024598 <CDM_getFwVersion+0xbc>)
 8024570:	f01a fef5 	bl	803f35e <strrchr>
 8024574:	1c41      	adds	r1, r0, #1
 8024576:	e7e0      	b.n	802453a <CDM_getFwVersion+0x5e>
 8024578:	4620      	mov	r0, r4
 802457a:	490a      	ldr	r1, [pc, #40]	; (80245a4 <CDM_getFwVersion+0xc8>)
 802457c:	2208      	movs	r2, #8
 802457e:	f01b f840 	bl	803f602 <__aeabi_memcpy>
 8024582:	2401      	movs	r4, #1
 8024584:	e7b7      	b.n	80244f6 <CDM_getFwVersion+0x1a>
 8024586:	4904      	ldr	r1, [pc, #16]	; (8024598 <CDM_getFwVersion+0xbc>)
 8024588:	e7c5      	b.n	8024516 <CDM_getFwVersion+0x3a>
 802458a:	4903      	ldr	r1, [pc, #12]	; (8024598 <CDM_getFwVersion+0xbc>)
 802458c:	e7d5      	b.n	802453a <CDM_getFwVersion+0x5e>
 802458e:	bf00      	nop
 8024590:	2000474c 	.word	0x2000474c
 8024594:	20004748 	.word	0x20004748
 8024598:	08044174 	.word	0x08044174
 802459c:	080441c0 	.word	0x080441c0
 80245a0:	080441ac 	.word	0x080441ac
 80245a4:	20004740 	.word	0x20004740

080245a8 <CDM_resetFwVersion>:
 80245a8:	b510      	push	{r4, lr}
 80245aa:	4828      	ldr	r0, [pc, #160]	; (802464c <CDM_resetFwVersion+0xa4>)
 80245ac:	f44f 61fa 	mov.w	r1, #2000	; 0x7d0
 80245b0:	f015 f85a 	bl	8039668 <_tx_mutex_get>
 80245b4:	b9f0      	cbnz	r0, 80245f4 <CDM_resetFwVersion+0x4c>
 80245b6:	4604      	mov	r4, r0
 80245b8:	4601      	mov	r1, r0
 80245ba:	2208      	movs	r2, #8
 80245bc:	4824      	ldr	r0, [pc, #144]	; (8024650 <CDM_resetFwVersion+0xa8>)
 80245be:	f01b f849 	bl	803f654 <memset>
 80245c2:	4b24      	ldr	r3, [pc, #144]	; (8024654 <CDM_resetFwVersion+0xac>)
 80245c4:	4821      	ldr	r0, [pc, #132]	; (802464c <CDM_resetFwVersion+0xa4>)
 80245c6:	701c      	strb	r4, [r3, #0]
 80245c8:	f015 f9c4 	bl	8039954 <_tx_mutex_put>
 80245cc:	b900      	cbnz	r0, 80245d0 <CDM_resetFwVersion+0x28>
 80245ce:	bd10      	pop	{r4, pc}
 80245d0:	4821      	ldr	r0, [pc, #132]	; (8024658 <CDM_resetFwVersion+0xb0>)
 80245d2:	212f      	movs	r1, #47	; 0x2f
 80245d4:	f01a fec3 	bl	803f35e <strrchr>
 80245d8:	b1f0      	cbz	r0, 8024618 <CDM_resetFwVersion+0x70>
 80245da:	212f      	movs	r1, #47	; 0x2f
 80245dc:	481e      	ldr	r0, [pc, #120]	; (8024658 <CDM_resetFwVersion+0xb0>)
 80245de:	f01a febe 	bl	803f35e <strrchr>
 80245e2:	1c41      	adds	r1, r0, #1
 80245e4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80245e8:	4b1c      	ldr	r3, [pc, #112]	; (802465c <CDM_resetFwVersion+0xb4>)
 80245ea:	f240 1251 	movw	r2, #337	; 0x151
 80245ee:	2001      	movs	r0, #1
 80245f0:	f7fe b8d2 	b.w	8022798 <DEBUG_logMsg>
 80245f4:	4818      	ldr	r0, [pc, #96]	; (8024658 <CDM_resetFwVersion+0xb0>)
 80245f6:	212f      	movs	r1, #47	; 0x2f
 80245f8:	f01a feb1 	bl	803f35e <strrchr>
 80245fc:	b1b8      	cbz	r0, 802462e <CDM_resetFwVersion+0x86>
 80245fe:	212f      	movs	r1, #47	; 0x2f
 8024600:	4815      	ldr	r0, [pc, #84]	; (8024658 <CDM_resetFwVersion+0xb0>)
 8024602:	f01a feac 	bl	803f35e <strrchr>
 8024606:	1c41      	adds	r1, r0, #1
 8024608:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802460c:	4b14      	ldr	r3, [pc, #80]	; (8024660 <CDM_resetFwVersion+0xb8>)
 802460e:	f240 1247 	movw	r2, #327	; 0x147
 8024612:	2001      	movs	r0, #1
 8024614:	f7fe b8c0 	b.w	8022798 <DEBUG_logMsg>
 8024618:	480f      	ldr	r0, [pc, #60]	; (8024658 <CDM_resetFwVersion+0xb0>)
 802461a:	215c      	movs	r1, #92	; 0x5c
 802461c:	f01a fe9f 	bl	803f35e <strrchr>
 8024620:	b180      	cbz	r0, 8024644 <CDM_resetFwVersion+0x9c>
 8024622:	215c      	movs	r1, #92	; 0x5c
 8024624:	480c      	ldr	r0, [pc, #48]	; (8024658 <CDM_resetFwVersion+0xb0>)
 8024626:	f01a fe9a 	bl	803f35e <strrchr>
 802462a:	1c41      	adds	r1, r0, #1
 802462c:	e7da      	b.n	80245e4 <CDM_resetFwVersion+0x3c>
 802462e:	480a      	ldr	r0, [pc, #40]	; (8024658 <CDM_resetFwVersion+0xb0>)
 8024630:	215c      	movs	r1, #92	; 0x5c
 8024632:	f01a fe94 	bl	803f35e <strrchr>
 8024636:	b138      	cbz	r0, 8024648 <CDM_resetFwVersion+0xa0>
 8024638:	215c      	movs	r1, #92	; 0x5c
 802463a:	4807      	ldr	r0, [pc, #28]	; (8024658 <CDM_resetFwVersion+0xb0>)
 802463c:	f01a fe8f 	bl	803f35e <strrchr>
 8024640:	1c41      	adds	r1, r0, #1
 8024642:	e7e1      	b.n	8024608 <CDM_resetFwVersion+0x60>
 8024644:	4904      	ldr	r1, [pc, #16]	; (8024658 <CDM_resetFwVersion+0xb0>)
 8024646:	e7cd      	b.n	80245e4 <CDM_resetFwVersion+0x3c>
 8024648:	4903      	ldr	r1, [pc, #12]	; (8024658 <CDM_resetFwVersion+0xb0>)
 802464a:	e7dd      	b.n	8024608 <CDM_resetFwVersion+0x60>
 802464c:	2000474c 	.word	0x2000474c
 8024650:	20004740 	.word	0x20004740
 8024654:	20004748 	.word	0x20004748
 8024658:	08044174 	.word	0x08044174
 802465c:	080441c0 	.word	0x080441c0
 8024660:	080441ac 	.word	0x080441ac

08024664 <CDM_updateFwVersion>:
 8024664:	b570      	push	{r4, r5, r6, lr}
 8024666:	4605      	mov	r5, r0
 8024668:	460c      	mov	r4, r1
 802466a:	484b      	ldr	r0, [pc, #300]	; (8024798 <CDM_updateFwVersion+0x134>)
 802466c:	f44f 61fa 	mov.w	r1, #2000	; 0x7d0
 8024670:	f014 fffa 	bl	8039668 <_tx_mutex_get>
 8024674:	2800      	cmp	r0, #0
 8024676:	d13d      	bne.n	80246f4 <CDM_updateFwVersion+0x90>
 8024678:	4e48      	ldr	r6, [pc, #288]	; (802479c <CDM_updateFwVersion+0x138>)
 802467a:	7833      	ldrb	r3, [r6, #0]
 802467c:	b1d3      	cbz	r3, 80246b4 <CDM_updateFwVersion+0x50>
 802467e:	4a48      	ldr	r2, [pc, #288]	; (80247a0 <CDM_updateFwVersion+0x13c>)
 8024680:	78a1      	ldrb	r1, [r4, #2]
 8024682:	7890      	ldrb	r0, [r2, #2]
 8024684:	4288      	cmp	r0, r1
 8024686:	d048      	beq.n	802471a <CDM_updateFwVersion+0xb6>
 8024688:	4846      	ldr	r0, [pc, #280]	; (80247a4 <CDM_updateFwVersion+0x140>)
 802468a:	212f      	movs	r1, #47	; 0x2f
 802468c:	f01a fe67 	bl	803f35e <strrchr>
 8024690:	2800      	cmp	r0, #0
 8024692:	d05a      	beq.n	802474a <CDM_updateFwVersion+0xe6>
 8024694:	212f      	movs	r1, #47	; 0x2f
 8024696:	4843      	ldr	r0, [pc, #268]	; (80247a4 <CDM_updateFwVersion+0x140>)
 8024698:	f01a fe61 	bl	803f35e <strrchr>
 802469c:	1c41      	adds	r1, r0, #1
 802469e:	4b42      	ldr	r3, [pc, #264]	; (80247a8 <CDM_updateFwVersion+0x144>)
 80246a0:	f44f 72be 	mov.w	r2, #380	; 0x17c
 80246a4:	2001      	movs	r0, #1
 80246a6:	f7fe f877 	bl	8022798 <DEBUG_logMsg>
 80246aa:	483b      	ldr	r0, [pc, #236]	; (8024798 <CDM_updateFwVersion+0x134>)
 80246ac:	f015 f952 	bl	8039954 <_tx_mutex_put>
 80246b0:	b968      	cbnz	r0, 80246ce <CDM_updateFwVersion+0x6a>
 80246b2:	bd70      	pop	{r4, r5, r6, pc}
 80246b4:	2301      	movs	r3, #1
 80246b6:	40ab      	lsls	r3, r5
 80246b8:	4839      	ldr	r0, [pc, #228]	; (80247a0 <CDM_updateFwVersion+0x13c>)
 80246ba:	7033      	strb	r3, [r6, #0]
 80246bc:	4621      	mov	r1, r4
 80246be:	2208      	movs	r2, #8
 80246c0:	f01a ff9f 	bl	803f602 <__aeabi_memcpy>
 80246c4:	4834      	ldr	r0, [pc, #208]	; (8024798 <CDM_updateFwVersion+0x134>)
 80246c6:	f015 f945 	bl	8039954 <_tx_mutex_put>
 80246ca:	2800      	cmp	r0, #0
 80246cc:	d0f1      	beq.n	80246b2 <CDM_updateFwVersion+0x4e>
 80246ce:	4835      	ldr	r0, [pc, #212]	; (80247a4 <CDM_updateFwVersion+0x140>)
 80246d0:	212f      	movs	r1, #47	; 0x2f
 80246d2:	f01a fe44 	bl	803f35e <strrchr>
 80246d6:	2800      	cmp	r0, #0
 80246d8:	d042      	beq.n	8024760 <CDM_updateFwVersion+0xfc>
 80246da:	212f      	movs	r1, #47	; 0x2f
 80246dc:	4831      	ldr	r0, [pc, #196]	; (80247a4 <CDM_updateFwVersion+0x140>)
 80246de:	f01a fe3e 	bl	803f35e <strrchr>
 80246e2:	1c41      	adds	r1, r0, #1
 80246e4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80246e8:	4b30      	ldr	r3, [pc, #192]	; (80247ac <CDM_updateFwVersion+0x148>)
 80246ea:	f240 1283 	movw	r2, #387	; 0x183
 80246ee:	2001      	movs	r0, #1
 80246f0:	f7fe b852 	b.w	8022798 <DEBUG_logMsg>
 80246f4:	482b      	ldr	r0, [pc, #172]	; (80247a4 <CDM_updateFwVersion+0x140>)
 80246f6:	212f      	movs	r1, #47	; 0x2f
 80246f8:	f01a fe31 	bl	803f35e <strrchr>
 80246fc:	2800      	cmp	r0, #0
 80246fe:	d03a      	beq.n	8024776 <CDM_updateFwVersion+0x112>
 8024700:	212f      	movs	r1, #47	; 0x2f
 8024702:	4828      	ldr	r0, [pc, #160]	; (80247a4 <CDM_updateFwVersion+0x140>)
 8024704:	f01a fe2b 	bl	803f35e <strrchr>
 8024708:	1c41      	adds	r1, r0, #1
 802470a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 802470e:	4b28      	ldr	r3, [pc, #160]	; (80247b0 <CDM_updateFwVersion+0x14c>)
 8024710:	f44f 72b2 	mov.w	r2, #356	; 0x164
 8024714:	2001      	movs	r0, #1
 8024716:	f7fe b83f 	b.w	8022798 <DEBUG_logMsg>
 802471a:	7810      	ldrb	r0, [r2, #0]
 802471c:	7821      	ldrb	r1, [r4, #0]
 802471e:	4288      	cmp	r0, r1
 8024720:	d1b2      	bne.n	8024688 <CDM_updateFwVersion+0x24>
 8024722:	7850      	ldrb	r0, [r2, #1]
 8024724:	7861      	ldrb	r1, [r4, #1]
 8024726:	4288      	cmp	r0, r1
 8024728:	d1ae      	bne.n	8024688 <CDM_updateFwVersion+0x24>
 802472a:	f8d2 0003 	ldr.w	r0, [r2, #3]
 802472e:	f8d4 1003 	ldr.w	r1, [r4, #3]
 8024732:	4288      	cmp	r0, r1
 8024734:	d1a8      	bne.n	8024688 <CDM_updateFwVersion+0x24>
 8024736:	79d1      	ldrb	r1, [r2, #7]
 8024738:	79e2      	ldrb	r2, [r4, #7]
 802473a:	4291      	cmp	r1, r2
 802473c:	d1a4      	bne.n	8024688 <CDM_updateFwVersion+0x24>
 802473e:	2201      	movs	r2, #1
 8024740:	fa02 f505 	lsl.w	r5, r2, r5
 8024744:	432b      	orrs	r3, r5
 8024746:	7033      	strb	r3, [r6, #0]
 8024748:	e7af      	b.n	80246aa <CDM_updateFwVersion+0x46>
 802474a:	4816      	ldr	r0, [pc, #88]	; (80247a4 <CDM_updateFwVersion+0x140>)
 802474c:	215c      	movs	r1, #92	; 0x5c
 802474e:	f01a fe06 	bl	803f35e <strrchr>
 8024752:	b1d8      	cbz	r0, 802478c <CDM_updateFwVersion+0x128>
 8024754:	215c      	movs	r1, #92	; 0x5c
 8024756:	4813      	ldr	r0, [pc, #76]	; (80247a4 <CDM_updateFwVersion+0x140>)
 8024758:	f01a fe01 	bl	803f35e <strrchr>
 802475c:	1c41      	adds	r1, r0, #1
 802475e:	e79e      	b.n	802469e <CDM_updateFwVersion+0x3a>
 8024760:	4810      	ldr	r0, [pc, #64]	; (80247a4 <CDM_updateFwVersion+0x140>)
 8024762:	215c      	movs	r1, #92	; 0x5c
 8024764:	f01a fdfb 	bl	803f35e <strrchr>
 8024768:	b190      	cbz	r0, 8024790 <CDM_updateFwVersion+0x12c>
 802476a:	215c      	movs	r1, #92	; 0x5c
 802476c:	480d      	ldr	r0, [pc, #52]	; (80247a4 <CDM_updateFwVersion+0x140>)
 802476e:	f01a fdf6 	bl	803f35e <strrchr>
 8024772:	1c41      	adds	r1, r0, #1
 8024774:	e7b6      	b.n	80246e4 <CDM_updateFwVersion+0x80>
 8024776:	480b      	ldr	r0, [pc, #44]	; (80247a4 <CDM_updateFwVersion+0x140>)
 8024778:	215c      	movs	r1, #92	; 0x5c
 802477a:	f01a fdf0 	bl	803f35e <strrchr>
 802477e:	b148      	cbz	r0, 8024794 <CDM_updateFwVersion+0x130>
 8024780:	215c      	movs	r1, #92	; 0x5c
 8024782:	4808      	ldr	r0, [pc, #32]	; (80247a4 <CDM_updateFwVersion+0x140>)
 8024784:	f01a fdeb 	bl	803f35e <strrchr>
 8024788:	1c41      	adds	r1, r0, #1
 802478a:	e7be      	b.n	802470a <CDM_updateFwVersion+0xa6>
 802478c:	4905      	ldr	r1, [pc, #20]	; (80247a4 <CDM_updateFwVersion+0x140>)
 802478e:	e786      	b.n	802469e <CDM_updateFwVersion+0x3a>
 8024790:	4904      	ldr	r1, [pc, #16]	; (80247a4 <CDM_updateFwVersion+0x140>)
 8024792:	e7a7      	b.n	80246e4 <CDM_updateFwVersion+0x80>
 8024794:	4903      	ldr	r1, [pc, #12]	; (80247a4 <CDM_updateFwVersion+0x140>)
 8024796:	e7b8      	b.n	802470a <CDM_updateFwVersion+0xa6>
 8024798:	2000474c 	.word	0x2000474c
 802479c:	20004748 	.word	0x20004748
 80247a0:	20004740 	.word	0x20004740
 80247a4:	08044174 	.word	0x08044174
 80247a8:	080441d4 	.word	0x080441d4
 80247ac:	080441c0 	.word	0x080441c0
 80247b0:	080441ac 	.word	0x080441ac

080247b4 <CDM_processMessage>:
 80247b4:	b500      	push	{lr}
 80247b6:	b08b      	sub	sp, #44	; 0x2c
 80247b8:	2300      	movs	r3, #0
 80247ba:	a906      	add	r1, sp, #24
 80247bc:	2002      	movs	r0, #2
 80247be:	f88d 3019 	strb.w	r3, [sp, #25]
 80247c2:	f88d 301a 	strb.w	r3, [sp, #26]
 80247c6:	f88d 301b 	strb.w	r3, [sp, #27]
 80247ca:	f88d 301c 	strb.w	r3, [sp, #28]
 80247ce:	f00b ffef 	bl	80307b0 <CANMNGR_readMsgSrc>
 80247d2:	b910      	cbnz	r0, 80247da <CDM_processMessage+0x26>
 80247d4:	b00b      	add	sp, #44	; 0x2c
 80247d6:	f85d fb04 	ldr.w	pc, [sp], #4
 80247da:	f8dd 0019 	ldr.w	r0, [sp, #25]
 80247de:	f89d 201d 	ldrb.w	r2, [sp, #29]
 80247e2:	9002      	str	r0, [sp, #8]
 80247e4:	f10d 011e 	add.w	r1, sp, #30
 80247e8:	f10d 000d 	add.w	r0, sp, #13
 80247ec:	f88d 200c 	strb.w	r2, [sp, #12]
 80247f0:	f01a ff07 	bl	803f602 <__aeabi_memcpy>
 80247f4:	f89d 2008 	ldrb.w	r2, [sp, #8]
 80247f8:	2a03      	cmp	r2, #3
 80247fa:	d04f      	beq.n	802489c <CDM_processMessage+0xe8>
 80247fc:	f1a2 030a 	sub.w	r3, r2, #10
 8024800:	2b17      	cmp	r3, #23
 8024802:	d8e7      	bhi.n	80247d4 <CDM_processMessage+0x20>
 8024804:	a101      	add	r1, pc, #4	; (adr r1, 802480c <CDM_processMessage+0x58>)
 8024806:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 802480a:	bf00      	nop
 802480c:	08024889 	.word	0x08024889
 8024810:	080247d5 	.word	0x080247d5
 8024814:	080247d5 	.word	0x080247d5
 8024818:	080247d5 	.word	0x080247d5
 802481c:	080247d5 	.word	0x080247d5
 8024820:	080247d5 	.word	0x080247d5
 8024824:	080247d5 	.word	0x080247d5
 8024828:	08024889 	.word	0x08024889
 802482c:	08024889 	.word	0x08024889
 8024830:	08024889 	.word	0x08024889
 8024834:	08024889 	.word	0x08024889
 8024838:	08024889 	.word	0x08024889
 802483c:	08024889 	.word	0x08024889
 8024840:	080247d5 	.word	0x080247d5
 8024844:	080247d5 	.word	0x080247d5
 8024848:	080247d5 	.word	0x080247d5
 802484c:	08024889 	.word	0x08024889
 8024850:	0802486d 	.word	0x0802486d
 8024854:	080247d5 	.word	0x080247d5
 8024858:	080247d5 	.word	0x080247d5
 802485c:	080247d5 	.word	0x080247d5
 8024860:	080247d5 	.word	0x080247d5
 8024864:	080247d5 	.word	0x080247d5
 8024868:	08024889 	.word	0x08024889
 802486c:	f89d 100e 	ldrb.w	r1, [sp, #14]
 8024870:	2001      	movs	r0, #1
 8024872:	f00b ffeb 	bl	803084c <STO_setState>
 8024876:	2200      	movs	r2, #0
 8024878:	f44f 4180 	mov.w	r1, #16384	; 0x4000
 802487c:	480c      	ldr	r0, [pc, #48]	; (80248b0 <CDM_processMessage+0xfc>)
 802487e:	f014 fc7b 	bl	8039178 <_tx_event_flags_set>
 8024882:	b00b      	add	sp, #44	; 0x2c
 8024884:	f85d fb04 	ldr.w	pc, [sp], #4
 8024888:	230d      	movs	r3, #13
 802488a:	9300      	str	r3, [sp, #0]
 802488c:	2113      	movs	r1, #19
 802488e:	ab02      	add	r3, sp, #8
 8024890:	4808      	ldr	r0, [pc, #32]	; (80248b4 <CDM_processMessage+0x100>)
 8024892:	f7fe f9a7 	bl	8022be4 <Robot::processMsg(COMM_source_t, unsigned char, unsigned char*, unsigned short)>
 8024896:	b00b      	add	sp, #44	; 0x2c
 8024898:	f85d fb04 	ldr.w	pc, [sp], #4
 802489c:	f89d 000a 	ldrb.w	r0, [sp, #10]
 80248a0:	f10d 010d 	add.w	r1, sp, #13
 80248a4:	f3c0 0081 	ubfx	r0, r0, #2, #2
 80248a8:	f7ff fedc 	bl	8024664 <CDM_updateFwVersion>
 80248ac:	e792      	b.n	80247d4 <CDM_processMessage+0x20>
 80248ae:	bf00      	nop
 80248b0:	2000e158 	.word	0x2000e158
 80248b4:	2000f630 	.word	0x2000f630

080248b8 <NAVCOMMS_sendMessage>:
 80248b8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80248bc:	4615      	mov	r5, r2
 80248be:	b085      	sub	sp, #20
 80248c0:	461c      	mov	r4, r3
 80248c2:	b153      	cbz	r3, 80248da <NAVCOMMS_sendMessage+0x22>
 80248c4:	2a00      	cmp	r2, #0
 80248c6:	d076      	beq.n	80249b6 <NAVCOMMS_sendMessage+0xfe>
 80248c8:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 80248cc:	d95c      	bls.n	8024988 <NAVCOMMS_sendMessage+0xd0>
 80248ce:	f04f 0801 	mov.w	r8, #1
 80248d2:	4640      	mov	r0, r8
 80248d4:	b005      	add	sp, #20
 80248d6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80248da:	0080      	lsls	r0, r0, #2
 80248dc:	466f      	mov	r7, sp
 80248de:	f000 001c 	and.w	r0, r0, #28
 80248e2:	f003 03e0 	and.w	r3, r3, #224	; 0xe0
 80248e6:	f060 007f 	orn	r0, r0, #127	; 0x7f
 80248ea:	f043 0302 	orr.w	r3, r3, #2
 80248ee:	9400      	str	r4, [sp, #0]
 80248f0:	607c      	str	r4, [r7, #4]
 80248f2:	f88d 0003 	strb.w	r0, [sp, #3]
 80248f6:	f88d 1001 	strb.w	r1, [sp, #1]
 80248fa:	60bc      	str	r4, [r7, #8]
 80248fc:	81bc      	strh	r4, [r7, #12]
 80248fe:	f88d 3004 	strb.w	r3, [sp, #4]
 8024902:	4626      	mov	r6, r4
 8024904:	4622      	mov	r2, r4
 8024906:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 802490a:	f423 737f 	bic.w	r3, r3, #1020	; 0x3fc
 802490e:	f023 0303 	bic.w	r3, r3, #3
 8024912:	4313      	orrs	r3, r2
 8024914:	f8ad 3002 	strh.w	r3, [sp, #2]
 8024918:	f04f 0801 	mov.w	r8, #1
 802491c:	2c08      	cmp	r4, #8
 802491e:	46a1      	mov	r9, r4
 8024920:	bf28      	it	cs
 8024922:	f04f 0908 	movcs.w	r9, #8
 8024926:	464a      	mov	r2, r9
 8024928:	4629      	mov	r1, r5
 802492a:	f10d 0006 	add.w	r0, sp, #6
 802492e:	f88d 9005 	strb.w	r9, [sp, #5]
 8024932:	f01a fe66 	bl	803f602 <__aeabi_memcpy>
 8024936:	4639      	mov	r1, r7
 8024938:	2000      	movs	r0, #0
 802493a:	f00b ff31 	bl	80307a0 <CANMNGR_sendMsg>
 802493e:	f8bd 1002 	ldrh.w	r1, [sp, #2]
 8024942:	f89d c002 	ldrb.w	ip, [sp, #2]
 8024946:	f89d 2003 	ldrb.w	r2, [sp, #3]
 802494a:	f3c1 1144 	ubfx	r1, r1, #5, #5
 802494e:	3101      	adds	r1, #1
 8024950:	f001 0307 	and.w	r3, r1, #7
 8024954:	f00c 0c1f 	and.w	ip, ip, #31
 8024958:	f022 0203 	bic.w	r2, r2, #3
 802495c:	f3c1 01c1 	ubfx	r1, r1, #3, #2
 8024960:	3e01      	subs	r6, #1
 8024962:	ea4c 1c43 	orr.w	ip, ip, r3, lsl #5
 8024966:	eba4 0409 	sub.w	r4, r4, r9
 802496a:	4311      	orrs	r1, r2
 802496c:	1c73      	adds	r3, r6, #1
 802496e:	444d      	add	r5, r9
 8024970:	b2a4      	uxth	r4, r4
 8024972:	ea00 0808 	and.w	r8, r0, r8
 8024976:	f88d c002 	strb.w	ip, [sp, #2]
 802497a:	f88d 1003 	strb.w	r1, [sp, #3]
 802497e:	d1cd      	bne.n	802491c <NAVCOMMS_sendMessage+0x64>
 8024980:	4640      	mov	r0, r8
 8024982:	b005      	add	sp, #20
 8024984:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8024988:	0080      	lsls	r0, r0, #2
 802498a:	f000 031c 	and.w	r3, r0, #28
 802498e:	2200      	movs	r2, #0
 8024990:	466f      	mov	r7, sp
 8024992:	f063 037f 	orn	r3, r3, #127	; 0x7f
 8024996:	9200      	str	r2, [sp, #0]
 8024998:	2002      	movs	r0, #2
 802499a:	f88d 3003 	strb.w	r3, [sp, #3]
 802499e:	1e63      	subs	r3, r4, #1
 80249a0:	607a      	str	r2, [r7, #4]
 80249a2:	60ba      	str	r2, [r7, #8]
 80249a4:	81ba      	strh	r2, [r7, #12]
 80249a6:	f88d 1001 	strb.w	r1, [sp, #1]
 80249aa:	f88d 0004 	strb.w	r0, [sp, #4]
 80249ae:	08de      	lsrs	r6, r3, #3
 80249b0:	f3c3 02c4 	ubfx	r2, r3, #3, #5
 80249b4:	e7a7      	b.n	8024906 <NAVCOMMS_sendMessage+0x4e>
 80249b6:	4690      	mov	r8, r2
 80249b8:	e78b      	b.n	80248d2 <NAVCOMMS_sendMessage+0x1a>
 80249ba:	bf00      	nop

080249bc <NAVCOMMS_processMessage>:
 80249bc:	b530      	push	{r4, r5, lr}
 80249be:	b087      	sub	sp, #28
 80249c0:	2300      	movs	r3, #0
 80249c2:	a902      	add	r1, sp, #8
 80249c4:	2003      	movs	r0, #3
 80249c6:	e9cd 3302 	strd	r3, r3, [sp, #8]
 80249ca:	9304      	str	r3, [sp, #16]
 80249cc:	f8ad 3014 	strh.w	r3, [sp, #20]
 80249d0:	f00b feee 	bl	80307b0 <CANMNGR_readMsgSrc>
 80249d4:	b908      	cbnz	r0, 80249da <NAVCOMMS_processMessage+0x1e>
 80249d6:	b007      	add	sp, #28
 80249d8:	bd30      	pop	{r4, r5, pc}
 80249da:	4c5b      	ldr	r4, [pc, #364]	; (8024b48 <NAVCOMMS_processMessage+0x18c>)
 80249dc:	f8dd 2009 	ldr.w	r2, [sp, #9]
 80249e0:	f8bd 000a 	ldrh.w	r0, [sp, #10]
 80249e4:	4623      	mov	r3, r4
 80249e6:	f3c0 1044 	ubfx	r0, r0, #5, #5
 80249ea:	f843 2b05 	str.w	r2, [r3], #5
 80249ee:	f10d 010e 	add.w	r1, sp, #14
 80249f2:	2208      	movs	r2, #8
 80249f4:	eb03 00c0 	add.w	r0, r3, r0, lsl #3
 80249f8:	f01a fe03 	bl	803f602 <__aeabi_memcpy>
 80249fc:	6822      	ldr	r2, [r4, #0]
 80249fe:	7863      	ldrb	r3, [r4, #1]
 8024a00:	f3c2 3244 	ubfx	r2, r2, #13, #5
 8024a04:	f003 031f 	and.w	r3, r3, #31
 8024a08:	429a      	cmp	r2, r3
 8024a0a:	d1e4      	bne.n	80249d6 <NAVCOMMS_processMessage+0x1a>
 8024a0c:	7823      	ldrb	r3, [r4, #0]
 8024a0e:	2b0a      	cmp	r3, #10
 8024a10:	d87c      	bhi.n	8024b0c <NAVCOMMS_processMessage+0x150>
 8024a12:	a201      	add	r2, pc, #4	; (adr r2, 8024a18 <NAVCOMMS_processMessage+0x5c>)
 8024a14:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8024a18:	080249d7 	.word	0x080249d7
 8024a1c:	080249d7 	.word	0x080249d7
 8024a20:	080249d7 	.word	0x080249d7
 8024a24:	080249d7 	.word	0x080249d7
 8024a28:	080249d7 	.word	0x080249d7
 8024a2c:	080249d7 	.word	0x080249d7
 8024a30:	080249d7 	.word	0x080249d7
 8024a34:	08024a97 	.word	0x08024a97
 8024a38:	08024a67 	.word	0x08024a67
 8024a3c:	08024a45 	.word	0x08024a45
 8024a40:	080249d7 	.word	0x080249d7
 8024a44:	4841      	ldr	r0, [pc, #260]	; (8024b4c <NAVCOMMS_processMessage+0x190>)
 8024a46:	212f      	movs	r1, #47	; 0x2f
 8024a48:	f01a fc89 	bl	803f35e <strrchr>
 8024a4c:	2800      	cmp	r0, #0
 8024a4e:	d036      	beq.n	8024abe <NAVCOMMS_processMessage+0x102>
 8024a50:	212f      	movs	r1, #47	; 0x2f
 8024a52:	483e      	ldr	r0, [pc, #248]	; (8024b4c <NAVCOMMS_processMessage+0x190>)
 8024a54:	f01a fc83 	bl	803f35e <strrchr>
 8024a58:	1c41      	adds	r1, r0, #1
 8024a5a:	4b3d      	ldr	r3, [pc, #244]	; (8024b50 <NAVCOMMS_processMessage+0x194>)
 8024a5c:	2268      	movs	r2, #104	; 0x68
 8024a5e:	2002      	movs	r0, #2
 8024a60:	f7fd fe9a 	bl	8022798 <DEBUG_logMsg>
 8024a64:	e7b7      	b.n	80249d6 <NAVCOMMS_processMessage+0x1a>
 8024a66:	4839      	ldr	r0, [pc, #228]	; (8024b4c <NAVCOMMS_processMessage+0x190>)
 8024a68:	212f      	movs	r1, #47	; 0x2f
 8024a6a:	f01a fc78 	bl	803f35e <strrchr>
 8024a6e:	2800      	cmp	r0, #0
 8024a70:	d03b      	beq.n	8024aea <NAVCOMMS_processMessage+0x12e>
 8024a72:	4836      	ldr	r0, [pc, #216]	; (8024b4c <NAVCOMMS_processMessage+0x190>)
 8024a74:	212f      	movs	r1, #47	; 0x2f
 8024a76:	f01a fc72 	bl	803f35e <strrchr>
 8024a7a:	1c45      	adds	r5, r0, #1
 8024a7c:	f8d4 0006 	ldr.w	r0, [r4, #6]
 8024a80:	f019 fceb 	bl	803e45a <__aeabi_f2d>
 8024a84:	4b33      	ldr	r3, [pc, #204]	; (8024b54 <NAVCOMMS_processMessage+0x198>)
 8024a86:	e9cd 0100 	strd	r0, r1, [sp]
 8024a8a:	2260      	movs	r2, #96	; 0x60
 8024a8c:	4629      	mov	r1, r5
 8024a8e:	2002      	movs	r0, #2
 8024a90:	f7fd fe82 	bl	8022798 <DEBUG_logMsg>
 8024a94:	e79f      	b.n	80249d6 <NAVCOMMS_processMessage+0x1a>
 8024a96:	482d      	ldr	r0, [pc, #180]	; (8024b4c <NAVCOMMS_processMessage+0x190>)
 8024a98:	212f      	movs	r1, #47	; 0x2f
 8024a9a:	f01a fc60 	bl	803f35e <strrchr>
 8024a9e:	b1c8      	cbz	r0, 8024ad4 <NAVCOMMS_processMessage+0x118>
 8024aa0:	212f      	movs	r1, #47	; 0x2f
 8024aa2:	482a      	ldr	r0, [pc, #168]	; (8024b4c <NAVCOMMS_processMessage+0x190>)
 8024aa4:	f01a fc5b 	bl	803f35e <strrchr>
 8024aa8:	1c41      	adds	r1, r0, #1
 8024aaa:	79e2      	ldrb	r2, [r4, #7]
 8024aac:	79a3      	ldrb	r3, [r4, #6]
 8024aae:	2002      	movs	r0, #2
 8024ab0:	e9cd 3200 	strd	r3, r2, [sp]
 8024ab4:	4b28      	ldr	r3, [pc, #160]	; (8024b58 <NAVCOMMS_processMessage+0x19c>)
 8024ab6:	2264      	movs	r2, #100	; 0x64
 8024ab8:	f7fd fe6e 	bl	8022798 <DEBUG_logMsg>
 8024abc:	e78b      	b.n	80249d6 <NAVCOMMS_processMessage+0x1a>
 8024abe:	4823      	ldr	r0, [pc, #140]	; (8024b4c <NAVCOMMS_processMessage+0x190>)
 8024ac0:	215c      	movs	r1, #92	; 0x5c
 8024ac2:	f01a fc4c 	bl	803f35e <strrchr>
 8024ac6:	b1d8      	cbz	r0, 8024b00 <NAVCOMMS_processMessage+0x144>
 8024ac8:	215c      	movs	r1, #92	; 0x5c
 8024aca:	4820      	ldr	r0, [pc, #128]	; (8024b4c <NAVCOMMS_processMessage+0x190>)
 8024acc:	f01a fc47 	bl	803f35e <strrchr>
 8024ad0:	1c41      	adds	r1, r0, #1
 8024ad2:	e7c2      	b.n	8024a5a <NAVCOMMS_processMessage+0x9e>
 8024ad4:	481d      	ldr	r0, [pc, #116]	; (8024b4c <NAVCOMMS_processMessage+0x190>)
 8024ad6:	215c      	movs	r1, #92	; 0x5c
 8024ad8:	f01a fc41 	bl	803f35e <strrchr>
 8024adc:	b1a0      	cbz	r0, 8024b08 <NAVCOMMS_processMessage+0x14c>
 8024ade:	215c      	movs	r1, #92	; 0x5c
 8024ae0:	481a      	ldr	r0, [pc, #104]	; (8024b4c <NAVCOMMS_processMessage+0x190>)
 8024ae2:	f01a fc3c 	bl	803f35e <strrchr>
 8024ae6:	1c41      	adds	r1, r0, #1
 8024ae8:	e7df      	b.n	8024aaa <NAVCOMMS_processMessage+0xee>
 8024aea:	4818      	ldr	r0, [pc, #96]	; (8024b4c <NAVCOMMS_processMessage+0x190>)
 8024aec:	215c      	movs	r1, #92	; 0x5c
 8024aee:	f01a fc36 	bl	803f35e <strrchr>
 8024af2:	b138      	cbz	r0, 8024b04 <NAVCOMMS_processMessage+0x148>
 8024af4:	4815      	ldr	r0, [pc, #84]	; (8024b4c <NAVCOMMS_processMessage+0x190>)
 8024af6:	215c      	movs	r1, #92	; 0x5c
 8024af8:	f01a fc31 	bl	803f35e <strrchr>
 8024afc:	1c45      	adds	r5, r0, #1
 8024afe:	e7bd      	b.n	8024a7c <NAVCOMMS_processMessage+0xc0>
 8024b00:	4912      	ldr	r1, [pc, #72]	; (8024b4c <NAVCOMMS_processMessage+0x190>)
 8024b02:	e7aa      	b.n	8024a5a <NAVCOMMS_processMessage+0x9e>
 8024b04:	4d11      	ldr	r5, [pc, #68]	; (8024b4c <NAVCOMMS_processMessage+0x190>)
 8024b06:	e7b9      	b.n	8024a7c <NAVCOMMS_processMessage+0xc0>
 8024b08:	4910      	ldr	r1, [pc, #64]	; (8024b4c <NAVCOMMS_processMessage+0x190>)
 8024b0a:	e7ce      	b.n	8024aaa <NAVCOMMS_processMessage+0xee>
 8024b0c:	480f      	ldr	r0, [pc, #60]	; (8024b4c <NAVCOMMS_processMessage+0x190>)
 8024b0e:	212f      	movs	r1, #47	; 0x2f
 8024b10:	f01a fc25 	bl	803f35e <strrchr>
 8024b14:	b158      	cbz	r0, 8024b2e <NAVCOMMS_processMessage+0x172>
 8024b16:	480d      	ldr	r0, [pc, #52]	; (8024b4c <NAVCOMMS_processMessage+0x190>)
 8024b18:	212f      	movs	r1, #47	; 0x2f
 8024b1a:	f01a fc20 	bl	803f35e <strrchr>
 8024b1e:	3001      	adds	r0, #1
 8024b20:	4601      	mov	r1, r0
 8024b22:	4b0e      	ldr	r3, [pc, #56]	; (8024b5c <NAVCOMMS_processMessage+0x1a0>)
 8024b24:	2276      	movs	r2, #118	; 0x76
 8024b26:	2000      	movs	r0, #0
 8024b28:	f7fd fe36 	bl	8022798 <DEBUG_logMsg>
 8024b2c:	e753      	b.n	80249d6 <NAVCOMMS_processMessage+0x1a>
 8024b2e:	4807      	ldr	r0, [pc, #28]	; (8024b4c <NAVCOMMS_processMessage+0x190>)
 8024b30:	215c      	movs	r1, #92	; 0x5c
 8024b32:	f01a fc14 	bl	803f35e <strrchr>
 8024b36:	b128      	cbz	r0, 8024b44 <NAVCOMMS_processMessage+0x188>
 8024b38:	4804      	ldr	r0, [pc, #16]	; (8024b4c <NAVCOMMS_processMessage+0x190>)
 8024b3a:	215c      	movs	r1, #92	; 0x5c
 8024b3c:	f01a fc0f 	bl	803f35e <strrchr>
 8024b40:	3001      	adds	r0, #1
 8024b42:	e7ed      	b.n	8024b20 <NAVCOMMS_processMessage+0x164>
 8024b44:	4801      	ldr	r0, [pc, #4]	; (8024b4c <NAVCOMMS_processMessage+0x190>)
 8024b46:	e7eb      	b.n	8024b20 <NAVCOMMS_processMessage+0x164>
 8024b48:	20004798 	.word	0x20004798
 8024b4c:	080441e8 	.word	0x080441e8
 8024b50:	08044250 	.word	0x08044250
 8024b54:	08044224 	.word	0x08044224
 8024b58:	08044234 	.word	0x08044234
 8024b5c:	08044270 	.word	0x08044270

08024b60 <BSB_sendDevMulticast>:
 8024b60:	b311      	cbz	r1, 8024ba8 <BSB_sendDevMulticast+0x48>
 8024b62:	2a08      	cmp	r2, #8
 8024b64:	d822      	bhi.n	8024bac <BSB_sendDevMulticast+0x4c>
 8024b66:	b530      	push	{r4, r5, lr}
 8024b68:	b085      	sub	sp, #20
 8024b6a:	2400      	movs	r4, #0
 8024b6c:	2310      	movs	r3, #16
 8024b6e:	f88d 4002 	strb.w	r4, [sp, #2]
 8024b72:	f88d 3003 	strb.w	r3, [sp, #3]
 8024b76:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8024b7a:	f88d 0001 	strb.w	r0, [sp, #1]
 8024b7e:	f423 737f 	bic.w	r3, r3, #1020	; 0x3fc
 8024b82:	f023 0303 	bic.w	r3, r3, #3
 8024b86:	2503      	movs	r5, #3
 8024b88:	f10d 0006 	add.w	r0, sp, #6
 8024b8c:	f88d 2005 	strb.w	r2, [sp, #5]
 8024b90:	f8ad 3002 	strh.w	r3, [sp, #2]
 8024b94:	f88d 5004 	strb.w	r5, [sp, #4]
 8024b98:	f01a fd33 	bl	803f602 <__aeabi_memcpy>
 8024b9c:	4669      	mov	r1, sp
 8024b9e:	4620      	mov	r0, r4
 8024ba0:	f00b fdfe 	bl	80307a0 <CANMNGR_sendMsg>
 8024ba4:	b005      	add	sp, #20
 8024ba6:	bd30      	pop	{r4, r5, pc}
 8024ba8:	2a00      	cmp	r2, #0
 8024baa:	d0dc      	beq.n	8024b66 <BSB_sendDevMulticast+0x6>
 8024bac:	2000      	movs	r0, #0
 8024bae:	4770      	bx	lr

08024bb0 <BSB_getFwVersion>:
 8024bb0:	b510      	push	{r4, lr}
 8024bb2:	f44f 61fa 	mov.w	r1, #2000	; 0x7d0
 8024bb6:	4604      	mov	r4, r0
 8024bb8:	4829      	ldr	r0, [pc, #164]	; (8024c60 <BSB_getFwVersion+0xb0>)
 8024bba:	f014 fd55 	bl	8039668 <_tx_mutex_get>
 8024bbe:	b9d8      	cbnz	r0, 8024bf8 <BSB_getFwVersion+0x48>
 8024bc0:	4b28      	ldr	r3, [pc, #160]	; (8024c64 <BSB_getFwVersion+0xb4>)
 8024bc2:	781b      	ldrb	r3, [r3, #0]
 8024bc4:	2b0f      	cmp	r3, #15
 8024bc6:	d03f      	beq.n	8024c48 <BSB_getFwVersion+0x98>
 8024bc8:	4604      	mov	r4, r0
 8024bca:	4825      	ldr	r0, [pc, #148]	; (8024c60 <BSB_getFwVersion+0xb0>)
 8024bcc:	f014 fec2 	bl	8039954 <_tx_mutex_put>
 8024bd0:	b908      	cbnz	r0, 8024bd6 <BSB_getFwVersion+0x26>
 8024bd2:	4620      	mov	r0, r4
 8024bd4:	bd10      	pop	{r4, pc}
 8024bd6:	4824      	ldr	r0, [pc, #144]	; (8024c68 <BSB_getFwVersion+0xb8>)
 8024bd8:	212f      	movs	r1, #47	; 0x2f
 8024bda:	f01a fbc0 	bl	803f35e <strrchr>
 8024bde:	b1e8      	cbz	r0, 8024c1c <BSB_getFwVersion+0x6c>
 8024be0:	212f      	movs	r1, #47	; 0x2f
 8024be2:	4821      	ldr	r0, [pc, #132]	; (8024c68 <BSB_getFwVersion+0xb8>)
 8024be4:	f01a fbbb 	bl	803f35e <strrchr>
 8024be8:	1c41      	adds	r1, r0, #1
 8024bea:	4b20      	ldr	r3, [pc, #128]	; (8024c6c <BSB_getFwVersion+0xbc>)
 8024bec:	22f3      	movs	r2, #243	; 0xf3
 8024bee:	2001      	movs	r0, #1
 8024bf0:	f7fd fdd2 	bl	8022798 <DEBUG_logMsg>
 8024bf4:	4620      	mov	r0, r4
 8024bf6:	bd10      	pop	{r4, pc}
 8024bf8:	481b      	ldr	r0, [pc, #108]	; (8024c68 <BSB_getFwVersion+0xb8>)
 8024bfa:	212f      	movs	r1, #47	; 0x2f
 8024bfc:	f01a fbaf 	bl	803f35e <strrchr>
 8024c00:	b1b8      	cbz	r0, 8024c32 <BSB_getFwVersion+0x82>
 8024c02:	212f      	movs	r1, #47	; 0x2f
 8024c04:	4818      	ldr	r0, [pc, #96]	; (8024c68 <BSB_getFwVersion+0xb8>)
 8024c06:	f01a fbaa 	bl	803f35e <strrchr>
 8024c0a:	1c41      	adds	r1, r0, #1
 8024c0c:	4b18      	ldr	r3, [pc, #96]	; (8024c70 <BSB_getFwVersion+0xc0>)
 8024c0e:	22e4      	movs	r2, #228	; 0xe4
 8024c10:	2001      	movs	r0, #1
 8024c12:	2400      	movs	r4, #0
 8024c14:	f7fd fdc0 	bl	8022798 <DEBUG_logMsg>
 8024c18:	4620      	mov	r0, r4
 8024c1a:	bd10      	pop	{r4, pc}
 8024c1c:	4812      	ldr	r0, [pc, #72]	; (8024c68 <BSB_getFwVersion+0xb8>)
 8024c1e:	215c      	movs	r1, #92	; 0x5c
 8024c20:	f01a fb9d 	bl	803f35e <strrchr>
 8024c24:	b1b8      	cbz	r0, 8024c56 <BSB_getFwVersion+0xa6>
 8024c26:	215c      	movs	r1, #92	; 0x5c
 8024c28:	480f      	ldr	r0, [pc, #60]	; (8024c68 <BSB_getFwVersion+0xb8>)
 8024c2a:	f01a fb98 	bl	803f35e <strrchr>
 8024c2e:	1c41      	adds	r1, r0, #1
 8024c30:	e7db      	b.n	8024bea <BSB_getFwVersion+0x3a>
 8024c32:	480d      	ldr	r0, [pc, #52]	; (8024c68 <BSB_getFwVersion+0xb8>)
 8024c34:	215c      	movs	r1, #92	; 0x5c
 8024c36:	f01a fb92 	bl	803f35e <strrchr>
 8024c3a:	b170      	cbz	r0, 8024c5a <BSB_getFwVersion+0xaa>
 8024c3c:	215c      	movs	r1, #92	; 0x5c
 8024c3e:	480a      	ldr	r0, [pc, #40]	; (8024c68 <BSB_getFwVersion+0xb8>)
 8024c40:	f01a fb8d 	bl	803f35e <strrchr>
 8024c44:	1c41      	adds	r1, r0, #1
 8024c46:	e7e1      	b.n	8024c0c <BSB_getFwVersion+0x5c>
 8024c48:	4620      	mov	r0, r4
 8024c4a:	490a      	ldr	r1, [pc, #40]	; (8024c74 <BSB_getFwVersion+0xc4>)
 8024c4c:	2208      	movs	r2, #8
 8024c4e:	f01a fcd8 	bl	803f602 <__aeabi_memcpy>
 8024c52:	2401      	movs	r4, #1
 8024c54:	e7b9      	b.n	8024bca <BSB_getFwVersion+0x1a>
 8024c56:	4904      	ldr	r1, [pc, #16]	; (8024c68 <BSB_getFwVersion+0xb8>)
 8024c58:	e7c7      	b.n	8024bea <BSB_getFwVersion+0x3a>
 8024c5a:	4903      	ldr	r1, [pc, #12]	; (8024c68 <BSB_getFwVersion+0xb8>)
 8024c5c:	e7d6      	b.n	8024c0c <BSB_getFwVersion+0x5c>
 8024c5e:	bf00      	nop
 8024c60:	200048a4 	.word	0x200048a4
 8024c64:	200048a0 	.word	0x200048a0
 8024c68:	08044284 	.word	0x08044284
 8024c6c:	080441c0 	.word	0x080441c0
 8024c70:	080441ac 	.word	0x080441ac
 8024c74:	200048f0 	.word	0x200048f0

08024c78 <BSB_resetFwVersion>:
 8024c78:	b510      	push	{r4, lr}
 8024c7a:	4828      	ldr	r0, [pc, #160]	; (8024d1c <BSB_resetFwVersion+0xa4>)
 8024c7c:	f44f 61fa 	mov.w	r1, #2000	; 0x7d0
 8024c80:	f014 fcf2 	bl	8039668 <_tx_mutex_get>
 8024c84:	b9f0      	cbnz	r0, 8024cc4 <BSB_resetFwVersion+0x4c>
 8024c86:	4604      	mov	r4, r0
 8024c88:	4601      	mov	r1, r0
 8024c8a:	2208      	movs	r2, #8
 8024c8c:	4824      	ldr	r0, [pc, #144]	; (8024d20 <BSB_resetFwVersion+0xa8>)
 8024c8e:	f01a fce1 	bl	803f654 <memset>
 8024c92:	4b24      	ldr	r3, [pc, #144]	; (8024d24 <BSB_resetFwVersion+0xac>)
 8024c94:	4821      	ldr	r0, [pc, #132]	; (8024d1c <BSB_resetFwVersion+0xa4>)
 8024c96:	701c      	strb	r4, [r3, #0]
 8024c98:	f014 fe5c 	bl	8039954 <_tx_mutex_put>
 8024c9c:	b900      	cbnz	r0, 8024ca0 <BSB_resetFwVersion+0x28>
 8024c9e:	bd10      	pop	{r4, pc}
 8024ca0:	4821      	ldr	r0, [pc, #132]	; (8024d28 <BSB_resetFwVersion+0xb0>)
 8024ca2:	212f      	movs	r1, #47	; 0x2f
 8024ca4:	f01a fb5b 	bl	803f35e <strrchr>
 8024ca8:	b1f0      	cbz	r0, 8024ce8 <BSB_resetFwVersion+0x70>
 8024caa:	212f      	movs	r1, #47	; 0x2f
 8024cac:	481e      	ldr	r0, [pc, #120]	; (8024d28 <BSB_resetFwVersion+0xb0>)
 8024cae:	f01a fb56 	bl	803f35e <strrchr>
 8024cb2:	1c41      	adds	r1, r0, #1
 8024cb4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8024cb8:	4b1c      	ldr	r3, [pc, #112]	; (8024d2c <BSB_resetFwVersion+0xb4>)
 8024cba:	f44f 7288 	mov.w	r2, #272	; 0x110
 8024cbe:	2001      	movs	r0, #1
 8024cc0:	f7fd bd6a 	b.w	8022798 <DEBUG_logMsg>
 8024cc4:	4818      	ldr	r0, [pc, #96]	; (8024d28 <BSB_resetFwVersion+0xb0>)
 8024cc6:	212f      	movs	r1, #47	; 0x2f
 8024cc8:	f01a fb49 	bl	803f35e <strrchr>
 8024ccc:	b1b8      	cbz	r0, 8024cfe <BSB_resetFwVersion+0x86>
 8024cce:	212f      	movs	r1, #47	; 0x2f
 8024cd0:	4815      	ldr	r0, [pc, #84]	; (8024d28 <BSB_resetFwVersion+0xb0>)
 8024cd2:	f01a fb44 	bl	803f35e <strrchr>
 8024cd6:	1c41      	adds	r1, r0, #1
 8024cd8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8024cdc:	4b14      	ldr	r3, [pc, #80]	; (8024d30 <BSB_resetFwVersion+0xb8>)
 8024cde:	f44f 7283 	mov.w	r2, #262	; 0x106
 8024ce2:	2001      	movs	r0, #1
 8024ce4:	f7fd bd58 	b.w	8022798 <DEBUG_logMsg>
 8024ce8:	480f      	ldr	r0, [pc, #60]	; (8024d28 <BSB_resetFwVersion+0xb0>)
 8024cea:	215c      	movs	r1, #92	; 0x5c
 8024cec:	f01a fb37 	bl	803f35e <strrchr>
 8024cf0:	b180      	cbz	r0, 8024d14 <BSB_resetFwVersion+0x9c>
 8024cf2:	215c      	movs	r1, #92	; 0x5c
 8024cf4:	480c      	ldr	r0, [pc, #48]	; (8024d28 <BSB_resetFwVersion+0xb0>)
 8024cf6:	f01a fb32 	bl	803f35e <strrchr>
 8024cfa:	1c41      	adds	r1, r0, #1
 8024cfc:	e7da      	b.n	8024cb4 <BSB_resetFwVersion+0x3c>
 8024cfe:	480a      	ldr	r0, [pc, #40]	; (8024d28 <BSB_resetFwVersion+0xb0>)
 8024d00:	215c      	movs	r1, #92	; 0x5c
 8024d02:	f01a fb2c 	bl	803f35e <strrchr>
 8024d06:	b138      	cbz	r0, 8024d18 <BSB_resetFwVersion+0xa0>
 8024d08:	215c      	movs	r1, #92	; 0x5c
 8024d0a:	4807      	ldr	r0, [pc, #28]	; (8024d28 <BSB_resetFwVersion+0xb0>)
 8024d0c:	f01a fb27 	bl	803f35e <strrchr>
 8024d10:	1c41      	adds	r1, r0, #1
 8024d12:	e7e1      	b.n	8024cd8 <BSB_resetFwVersion+0x60>
 8024d14:	4904      	ldr	r1, [pc, #16]	; (8024d28 <BSB_resetFwVersion+0xb0>)
 8024d16:	e7cd      	b.n	8024cb4 <BSB_resetFwVersion+0x3c>
 8024d18:	4903      	ldr	r1, [pc, #12]	; (8024d28 <BSB_resetFwVersion+0xb0>)
 8024d1a:	e7dd      	b.n	8024cd8 <BSB_resetFwVersion+0x60>
 8024d1c:	200048a4 	.word	0x200048a4
 8024d20:	200048f0 	.word	0x200048f0
 8024d24:	200048a0 	.word	0x200048a0
 8024d28:	08044284 	.word	0x08044284
 8024d2c:	080441c0 	.word	0x080441c0
 8024d30:	080441ac 	.word	0x080441ac

08024d34 <BSB_updateFwVersion>:
 8024d34:	b570      	push	{r4, r5, r6, lr}
 8024d36:	4606      	mov	r6, r0
 8024d38:	460c      	mov	r4, r1
 8024d3a:	484b      	ldr	r0, [pc, #300]	; (8024e68 <BSB_updateFwVersion+0x134>)
 8024d3c:	f44f 61fa 	mov.w	r1, #2000	; 0x7d0
 8024d40:	f014 fc92 	bl	8039668 <_tx_mutex_get>
 8024d44:	2800      	cmp	r0, #0
 8024d46:	d13d      	bne.n	8024dc4 <BSB_updateFwVersion+0x90>
 8024d48:	4d48      	ldr	r5, [pc, #288]	; (8024e6c <BSB_updateFwVersion+0x138>)
 8024d4a:	782a      	ldrb	r2, [r5, #0]
 8024d4c:	b362      	cbz	r2, 8024da8 <BSB_updateFwVersion+0x74>
 8024d4e:	4b48      	ldr	r3, [pc, #288]	; (8024e70 <BSB_updateFwVersion+0x13c>)
 8024d50:	78a1      	ldrb	r1, [r4, #2]
 8024d52:	7898      	ldrb	r0, [r3, #2]
 8024d54:	4288      	cmp	r0, r1
 8024d56:	d047      	beq.n	8024de8 <BSB_updateFwVersion+0xb4>
 8024d58:	4846      	ldr	r0, [pc, #280]	; (8024e74 <BSB_updateFwVersion+0x140>)
 8024d5a:	212f      	movs	r1, #47	; 0x2f
 8024d5c:	f01a faff 	bl	803f35e <strrchr>
 8024d60:	2800      	cmp	r0, #0
 8024d62:	d06f      	beq.n	8024e44 <BSB_updateFwVersion+0x110>
 8024d64:	212f      	movs	r1, #47	; 0x2f
 8024d66:	4843      	ldr	r0, [pc, #268]	; (8024e74 <BSB_updateFwVersion+0x140>)
 8024d68:	f01a faf9 	bl	803f35e <strrchr>
 8024d6c:	1c41      	adds	r1, r0, #1
 8024d6e:	2001      	movs	r0, #1
 8024d70:	4b41      	ldr	r3, [pc, #260]	; (8024e78 <BSB_updateFwVersion+0x144>)
 8024d72:	f240 123b 	movw	r2, #315	; 0x13b
 8024d76:	f7fd fd0f 	bl	8022798 <DEBUG_logMsg>
 8024d7a:	483b      	ldr	r0, [pc, #236]	; (8024e68 <BSB_updateFwVersion+0x134>)
 8024d7c:	f014 fdea 	bl	8039954 <_tx_mutex_put>
 8024d80:	b1f8      	cbz	r0, 8024dc2 <BSB_updateFwVersion+0x8e>
 8024d82:	483c      	ldr	r0, [pc, #240]	; (8024e74 <BSB_updateFwVersion+0x140>)
 8024d84:	212f      	movs	r1, #47	; 0x2f
 8024d86:	f01a faea 	bl	803f35e <strrchr>
 8024d8a:	2800      	cmp	r0, #0
 8024d8c:	d044      	beq.n	8024e18 <BSB_updateFwVersion+0xe4>
 8024d8e:	212f      	movs	r1, #47	; 0x2f
 8024d90:	4838      	ldr	r0, [pc, #224]	; (8024e74 <BSB_updateFwVersion+0x140>)
 8024d92:	f01a fae4 	bl	803f35e <strrchr>
 8024d96:	1c41      	adds	r1, r0, #1
 8024d98:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8024d9c:	4b37      	ldr	r3, [pc, #220]	; (8024e7c <BSB_updateFwVersion+0x148>)
 8024d9e:	f44f 72a1 	mov.w	r2, #322	; 0x142
 8024da2:	2001      	movs	r0, #1
 8024da4:	f7fd bcf8 	b.w	8022798 <DEBUG_logMsg>
 8024da8:	2301      	movs	r3, #1
 8024daa:	40b3      	lsls	r3, r6
 8024dac:	4830      	ldr	r0, [pc, #192]	; (8024e70 <BSB_updateFwVersion+0x13c>)
 8024dae:	702b      	strb	r3, [r5, #0]
 8024db0:	4621      	mov	r1, r4
 8024db2:	2208      	movs	r2, #8
 8024db4:	f01a fc25 	bl	803f602 <__aeabi_memcpy>
 8024db8:	482b      	ldr	r0, [pc, #172]	; (8024e68 <BSB_updateFwVersion+0x134>)
 8024dba:	f014 fdcb 	bl	8039954 <_tx_mutex_put>
 8024dbe:	2800      	cmp	r0, #0
 8024dc0:	d1df      	bne.n	8024d82 <BSB_updateFwVersion+0x4e>
 8024dc2:	bd70      	pop	{r4, r5, r6, pc}
 8024dc4:	482b      	ldr	r0, [pc, #172]	; (8024e74 <BSB_updateFwVersion+0x140>)
 8024dc6:	212f      	movs	r1, #47	; 0x2f
 8024dc8:	f01a fac9 	bl	803f35e <strrchr>
 8024dcc:	b378      	cbz	r0, 8024e2e <BSB_updateFwVersion+0xfa>
 8024dce:	212f      	movs	r1, #47	; 0x2f
 8024dd0:	4828      	ldr	r0, [pc, #160]	; (8024e74 <BSB_updateFwVersion+0x140>)
 8024dd2:	f01a fac4 	bl	803f35e <strrchr>
 8024dd6:	1c41      	adds	r1, r0, #1
 8024dd8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8024ddc:	4b28      	ldr	r3, [pc, #160]	; (8024e80 <BSB_updateFwVersion+0x14c>)
 8024dde:	f240 1223 	movw	r2, #291	; 0x123
 8024de2:	2001      	movs	r0, #1
 8024de4:	f7fd bcd8 	b.w	8022798 <DEBUG_logMsg>
 8024de8:	7818      	ldrb	r0, [r3, #0]
 8024dea:	7821      	ldrb	r1, [r4, #0]
 8024dec:	4288      	cmp	r0, r1
 8024dee:	d1b3      	bne.n	8024d58 <BSB_updateFwVersion+0x24>
 8024df0:	7858      	ldrb	r0, [r3, #1]
 8024df2:	7861      	ldrb	r1, [r4, #1]
 8024df4:	4288      	cmp	r0, r1
 8024df6:	d1af      	bne.n	8024d58 <BSB_updateFwVersion+0x24>
 8024df8:	f8d3 0003 	ldr.w	r0, [r3, #3]
 8024dfc:	f8d4 1003 	ldr.w	r1, [r4, #3]
 8024e00:	4288      	cmp	r0, r1
 8024e02:	d1a9      	bne.n	8024d58 <BSB_updateFwVersion+0x24>
 8024e04:	79d9      	ldrb	r1, [r3, #7]
 8024e06:	79e3      	ldrb	r3, [r4, #7]
 8024e08:	4299      	cmp	r1, r3
 8024e0a:	d1a5      	bne.n	8024d58 <BSB_updateFwVersion+0x24>
 8024e0c:	2301      	movs	r3, #1
 8024e0e:	fa03 f006 	lsl.w	r0, r3, r6
 8024e12:	4310      	orrs	r0, r2
 8024e14:	7028      	strb	r0, [r5, #0]
 8024e16:	e7cf      	b.n	8024db8 <BSB_updateFwVersion+0x84>
 8024e18:	4816      	ldr	r0, [pc, #88]	; (8024e74 <BSB_updateFwVersion+0x140>)
 8024e1a:	215c      	movs	r1, #92	; 0x5c
 8024e1c:	f01a fa9f 	bl	803f35e <strrchr>
 8024e20:	b1d8      	cbz	r0, 8024e5a <BSB_updateFwVersion+0x126>
 8024e22:	215c      	movs	r1, #92	; 0x5c
 8024e24:	4813      	ldr	r0, [pc, #76]	; (8024e74 <BSB_updateFwVersion+0x140>)
 8024e26:	f01a fa9a 	bl	803f35e <strrchr>
 8024e2a:	1c41      	adds	r1, r0, #1
 8024e2c:	e7b4      	b.n	8024d98 <BSB_updateFwVersion+0x64>
 8024e2e:	4811      	ldr	r0, [pc, #68]	; (8024e74 <BSB_updateFwVersion+0x140>)
 8024e30:	215c      	movs	r1, #92	; 0x5c
 8024e32:	f01a fa94 	bl	803f35e <strrchr>
 8024e36:	b190      	cbz	r0, 8024e5e <BSB_updateFwVersion+0x12a>
 8024e38:	215c      	movs	r1, #92	; 0x5c
 8024e3a:	480e      	ldr	r0, [pc, #56]	; (8024e74 <BSB_updateFwVersion+0x140>)
 8024e3c:	f01a fa8f 	bl	803f35e <strrchr>
 8024e40:	1c41      	adds	r1, r0, #1
 8024e42:	e7c9      	b.n	8024dd8 <BSB_updateFwVersion+0xa4>
 8024e44:	480b      	ldr	r0, [pc, #44]	; (8024e74 <BSB_updateFwVersion+0x140>)
 8024e46:	215c      	movs	r1, #92	; 0x5c
 8024e48:	f01a fa89 	bl	803f35e <strrchr>
 8024e4c:	b148      	cbz	r0, 8024e62 <BSB_updateFwVersion+0x12e>
 8024e4e:	215c      	movs	r1, #92	; 0x5c
 8024e50:	4808      	ldr	r0, [pc, #32]	; (8024e74 <BSB_updateFwVersion+0x140>)
 8024e52:	f01a fa84 	bl	803f35e <strrchr>
 8024e56:	1c41      	adds	r1, r0, #1
 8024e58:	e789      	b.n	8024d6e <BSB_updateFwVersion+0x3a>
 8024e5a:	4906      	ldr	r1, [pc, #24]	; (8024e74 <BSB_updateFwVersion+0x140>)
 8024e5c:	e79c      	b.n	8024d98 <BSB_updateFwVersion+0x64>
 8024e5e:	4905      	ldr	r1, [pc, #20]	; (8024e74 <BSB_updateFwVersion+0x140>)
 8024e60:	e7ba      	b.n	8024dd8 <BSB_updateFwVersion+0xa4>
 8024e62:	4904      	ldr	r1, [pc, #16]	; (8024e74 <BSB_updateFwVersion+0x140>)
 8024e64:	e783      	b.n	8024d6e <BSB_updateFwVersion+0x3a>
 8024e66:	bf00      	nop
 8024e68:	200048a4 	.word	0x200048a4
 8024e6c:	200048a0 	.word	0x200048a0
 8024e70:	200048f0 	.word	0x200048f0
 8024e74:	08044284 	.word	0x08044284
 8024e78:	080441d4 	.word	0x080441d4
 8024e7c:	080441c0 	.word	0x080441c0
 8024e80:	080441ac 	.word	0x080441ac

08024e84 <BSB_processMessage>:
 8024e84:	b500      	push	{lr}
 8024e86:	b089      	sub	sp, #36	; 0x24
 8024e88:	2300      	movs	r3, #0
 8024e8a:	a904      	add	r1, sp, #16
 8024e8c:	2004      	movs	r0, #4
 8024e8e:	f88d 3011 	strb.w	r3, [sp, #17]
 8024e92:	f88d 3012 	strb.w	r3, [sp, #18]
 8024e96:	f88d 3013 	strb.w	r3, [sp, #19]
 8024e9a:	f88d 3014 	strb.w	r3, [sp, #20]
 8024e9e:	f00b fc87 	bl	80307b0 <CANMNGR_readMsgSrc>
 8024ea2:	b910      	cbnz	r0, 8024eaa <BSB_processMessage+0x26>
 8024ea4:	b009      	add	sp, #36	; 0x24
 8024ea6:	f85d fb04 	ldr.w	pc, [sp], #4
 8024eaa:	f8dd 0011 	ldr.w	r0, [sp, #17]
 8024eae:	f89d 2015 	ldrb.w	r2, [sp, #21]
 8024eb2:	9000      	str	r0, [sp, #0]
 8024eb4:	f10d 0116 	add.w	r1, sp, #22
 8024eb8:	f10d 0005 	add.w	r0, sp, #5
 8024ebc:	f88d 2004 	strb.w	r2, [sp, #4]
 8024ec0:	f01a fb9f 	bl	803f602 <__aeabi_memcpy>
 8024ec4:	f89d 3000 	ldrb.w	r3, [sp]
 8024ec8:	2b03      	cmp	r3, #3
 8024eca:	d1eb      	bne.n	8024ea4 <BSB_processMessage+0x20>
 8024ecc:	f89d 0002 	ldrb.w	r0, [sp, #2]
 8024ed0:	f10d 0105 	add.w	r1, sp, #5
 8024ed4:	f3c0 0081 	ubfx	r0, r0, #2, #2
 8024ed8:	f7ff ff2c 	bl	8024d34 <BSB_updateFwVersion>
 8024edc:	e7e2      	b.n	8024ea4 <BSB_processMessage+0x20>
 8024ede:	bf00      	nop

08024ee0 <DIAGNOSTIC_initialize()>:
 8024ee0:	b510      	push	{r4, lr}
 8024ee2:	2400      	movs	r4, #0
 8024ee4:	b0cc      	sub	sp, #304	; 0x130
 8024ee6:	4621      	mov	r1, r4
 8024ee8:	221b      	movs	r2, #27
 8024eea:	f10d 0005 	add.w	r0, sp, #5
 8024eee:	e9cd 4448 	strd	r4, r4, [sp, #288]	; 0x120
 8024ef2:	f88d 4004 	strb.w	r4, [sp, #4]
 8024ef6:	944a      	str	r4, [sp, #296]	; 0x128
 8024ef8:	f8ad 412c 	strh.w	r4, [sp, #300]	; 0x12c
 8024efc:	f01a fbaa 	bl	803f654 <memset>
 8024f00:	4621      	mov	r1, r4
 8024f02:	f44f 7280 	mov.w	r2, #256	; 0x100
 8024f06:	a808      	add	r0, sp, #32
 8024f08:	f01a fba4 	bl	803f654 <memset>
 8024f0c:	a901      	add	r1, sp, #4
 8024f0e:	f44f 7295 	mov.w	r2, #298	; 0x12a
 8024f12:	4802      	ldr	r0, [pc, #8]	; (8024f1c <DIAGNOSTIC_initialize()+0x3c>)
 8024f14:	f01a fb75 	bl	803f602 <__aeabi_memcpy>
 8024f18:	b04c      	add	sp, #304	; 0x130
 8024f1a:	bd10      	pop	{r4, pc}
 8024f1c:	200048f8 	.word	0x200048f8

08024f20 <DIAGNOSTIC_sendCommandResponse(COMM_DIAGNOSTIC_messageId_e, COMM_responseCodes_t, COMM_DIAGNOSTIC_errorCode_e)>:
 8024f20:	b570      	push	{r4, r5, r6, lr}
 8024f22:	4c15      	ldr	r4, [pc, #84]	; (8024f78 <DIAGNOSTIC_sendCommandResponse(COMM_DIAGNOSTIC_messageId_e, COMM_responseCodes_t, COMM_DIAGNOSTIC_errorCode_e)+0x58>)
 8024f24:	b088      	sub	sp, #32
 8024f26:	460b      	mov	r3, r1
 8024f28:	4601      	mov	r1, r0
 8024f2a:	a806      	add	r0, sp, #24
 8024f2c:	f88d 3018 	strb.w	r3, [sp, #24]
 8024f30:	f8cd 2019 	str.w	r2, [sp, #25]
 8024f34:	9105      	str	r1, [sp, #20]
 8024f36:	f884 3125 	strb.w	r3, [r4, #293]	; 0x125
 8024f3a:	f8c4 2126 	str.w	r2, [r4, #294]	; 0x126
 8024f3e:	f000 f95f 	bl	8025200 <DIAGNOSTIC_endianSwapResponseMessage(COMM_standardResponsePayload_t*)>
 8024f42:	2001      	movs	r0, #1
 8024f44:	f104 051c 	add.w	r5, r4, #28
 8024f48:	f44f 7680 	mov.w	r6, #256	; 0x100
 8024f4c:	9003      	str	r0, [sp, #12]
 8024f4e:	2005      	movs	r0, #5
 8024f50:	9000      	str	r0, [sp, #0]
 8024f52:	9905      	ldr	r1, [sp, #20]
 8024f54:	f8b4 211c 	ldrh.w	r2, [r4, #284]	; 0x11c
 8024f58:	9501      	str	r5, [sp, #4]
 8024f5a:	ab06      	add	r3, sp, #24
 8024f5c:	9602      	str	r6, [sp, #8]
 8024f5e:	2027      	movs	r0, #39	; 0x27
 8024f60:	f000 fa00 	bl	8025364 <COMM_packNetworkMsg>
 8024f64:	b908      	cbnz	r0, 8024f6a <DIAGNOSTIC_sendCommandResponse(COMM_DIAGNOSTIC_messageId_e, COMM_responseCodes_t, COMM_DIAGNOSTIC_errorCode_e)+0x4a>
 8024f66:	b008      	add	sp, #32
 8024f68:	bd70      	pop	{r4, r5, r6, pc}
 8024f6a:	b281      	uxth	r1, r0
 8024f6c:	4628      	mov	r0, r5
 8024f6e:	f00a ffe5 	bl	802ff3c <HARDWARE_NETWORK_enqueueStandardDiagnosticMessage>
 8024f72:	b008      	add	sp, #32
 8024f74:	bd70      	pop	{r4, r5, r6, pc}
 8024f76:	bf00      	nop
 8024f78:	200048f8 	.word	0x200048f8

08024f7c <DIAGNOSTIC_processCommandMessage()>:
 8024f7c:	b570      	push	{r4, r5, r6, lr}
 8024f7e:	4c3e      	ldr	r4, [pc, #248]	; (8025078 <DIAGNOSTIC_processCommandMessage()+0xfc>)
 8024f80:	b084      	sub	sp, #16
 8024f82:	211b      	movs	r1, #27
 8024f84:	1c60      	adds	r0, r4, #1
 8024f86:	f00b f801 	bl	802ff8c <HARDWARE_NETWORK_dequeueReceivedDiagnosticMessage>
 8024f8a:	2201      	movs	r2, #1
 8024f8c:	4605      	mov	r5, r0
 8024f8e:	4669      	mov	r1, sp
 8024f90:	18a0      	adds	r0, r4, r2
 8024f92:	f000 f967 	bl	8025264 <COMM_unpackNetworkMsg>
 8024f96:	b1b8      	cbz	r0, 8024fc8 <DIAGNOSTIC_processCommandMessage()+0x4c>
 8024f98:	7823      	ldrb	r3, [r4, #0]
 8024f9a:	b1c3      	cbz	r3, 8024fce <DIAGNOSTIC_processCommandMessage()+0x52>
 8024f9c:	9b00      	ldr	r3, [sp, #0]
 8024f9e:	f8b4 011c 	ldrh.w	r0, [r4, #284]	; 0x11c
 8024fa2:	f8b3 1005 	ldrh.w	r1, [r3, #5]
 8024fa6:	f000 fa57 	bl	8025458 <COMM_checkSequenceNumber>
 8024faa:	2801      	cmp	r0, #1
 8024fac:	d03a      	beq.n	8025024 <DIAGNOSTIC_processCommandMessage()+0xa8>
 8024fae:	2802      	cmp	r0, #2
 8024fb0:	d031      	beq.n	8025016 <DIAGNOSTIC_processCommandMessage()+0x9a>
 8024fb2:	b160      	cbz	r0, 8024fce <DIAGNOSTIC_processCommandMessage()+0x52>
 8024fb4:	9b00      	ldr	r3, [sp, #0]
 8024fb6:	2201      	movs	r2, #1
 8024fb8:	7022      	strb	r2, [r4, #0]
 8024fba:	f8b3 2005 	ldrh.w	r2, [r3, #5]
 8024fbe:	f8c4 211c 	str.w	r2, [r4, #284]	; 0x11c
 8024fc2:	79db      	ldrb	r3, [r3, #7]
 8024fc4:	f884 3124 	strb.w	r3, [r4, #292]	; 0x124
 8024fc8:	4628      	mov	r0, r5
 8024fca:	b004      	add	sp, #16
 8024fcc:	bd70      	pop	{r4, r5, r6, pc}
 8024fce:	e9dd 6000 	ldrd	r6, r0, [sp]
 8024fd2:	79f1      	ldrb	r1, [r6, #7]
 8024fd4:	2908      	cmp	r1, #8
 8024fd6:	d809      	bhi.n	8024fec <DIAGNOSTIC_processCommandMessage()+0x70>
 8024fd8:	e8df f001 	tbb	[pc, r1]
 8024fdc:	3a36322e 	.word	0x3a36322e
 8024fe0:	4a46423e 	.word	0x4a46423e
 8024fe4:	05          	.byte	0x05
 8024fe5:	00          	.byte	0x00
 8024fe6:	f000 f909 	bl	80251fc <DIAGNOSTIC_endianSwapReadSensorStateCommand(COMM_DIAGNOSTIC_getSensorState_t*)>
 8024fea:	79f1      	ldrb	r1, [r6, #7]
 8024fec:	8873      	ldrh	r3, [r6, #2]
 8024fee:	3302      	adds	r3, #2
 8024ff0:	b29b      	uxth	r3, r3
 8024ff2:	4632      	mov	r2, r6
 8024ff4:	2026      	movs	r0, #38	; 0x26
 8024ff6:	f000 fa77 	bl	80254e8 <ANTCTRL_startTask>
 8024ffa:	2806      	cmp	r0, #6
 8024ffc:	d808      	bhi.n	8025010 <DIAGNOSTIC_processCommandMessage()+0x94>
 8024ffe:	4a1f      	ldr	r2, [pc, #124]	; (802507c <DIAGNOSTIC_processCommandMessage()+0x100>)
 8025000:	4b1f      	ldr	r3, [pc, #124]	; (8025080 <DIAGNOSTIC_processCommandMessage()+0x104>)
 8025002:	5c11      	ldrb	r1, [r2, r0]
 8025004:	f813 2020 	ldrb.w	r2, [r3, r0, lsl #2]
 8025008:	79f0      	ldrb	r0, [r6, #7]
 802500a:	f7ff ff89 	bl	8024f20 <DIAGNOSTIC_sendCommandResponse(COMM_DIAGNOSTIC_messageId_e, COMM_responseCodes_t, COMM_DIAGNOSTIC_errorCode_e)>
 802500e:	e7d1      	b.n	8024fb4 <DIAGNOSTIC_processCommandMessage()+0x38>
 8025010:	220d      	movs	r2, #13
 8025012:	2103      	movs	r1, #3
 8025014:	e7f8      	b.n	8025008 <DIAGNOSTIC_processCommandMessage()+0x8c>
 8025016:	9b00      	ldr	r3, [sp, #0]
 8025018:	2201      	movs	r2, #1
 802501a:	79d8      	ldrb	r0, [r3, #7]
 802501c:	2103      	movs	r1, #3
 802501e:	f7ff ff7f 	bl	8024f20 <DIAGNOSTIC_sendCommandResponse(COMM_DIAGNOSTIC_messageId_e, COMM_responseCodes_t, COMM_DIAGNOSTIC_errorCode_e)>
 8025022:	e7c7      	b.n	8024fb4 <DIAGNOSTIC_processCommandMessage()+0x38>
 8025024:	f8d4 2126 	ldr.w	r2, [r4, #294]	; 0x126
 8025028:	f894 1125 	ldrb.w	r1, [r4, #293]	; 0x125
 802502c:	f894 0124 	ldrb.w	r0, [r4, #292]	; 0x124
 8025030:	b2d2      	uxtb	r2, r2
 8025032:	f7ff ff75 	bl	8024f20 <DIAGNOSTIC_sendCommandResponse(COMM_DIAGNOSTIC_messageId_e, COMM_responseCodes_t, COMM_DIAGNOSTIC_errorCode_e)>
 8025036:	e7bd      	b.n	8024fb4 <DIAGNOSTIC_processCommandMessage()+0x38>
 8025038:	f000 f880 	bl	802513c <DIAGNOSTIC_endianSwapReadMotorStatusCommand(COMM_DIAGNOSTIC_readMotorStatus_t*)>
 802503c:	79f1      	ldrb	r1, [r6, #7]
 802503e:	e7d5      	b.n	8024fec <DIAGNOSTIC_processCommandMessage()+0x70>
 8025040:	f000 f87e 	bl	8025140 <DIAGNOSTIC_endianSwapResetMotorCommand(COMM_DIAGNOSTIC_resetMotor_t*)>
 8025044:	79f1      	ldrb	r1, [r6, #7]
 8025046:	e7d1      	b.n	8024fec <DIAGNOSTIC_processCommandMessage()+0x70>
 8025048:	f000 f87c 	bl	8025144 <DIAGNOSTIC_endianSwapPowerMotorCommand(COMM_DIAGNOSTIC_powerMotor_t*)>
 802504c:	79f1      	ldrb	r1, [r6, #7]
 802504e:	e7cd      	b.n	8024fec <DIAGNOSTIC_processCommandMessage()+0x70>
 8025050:	f000 f87a 	bl	8025148 <DIAGNOSTIC_endianSwapHomeMotorCommand(COMM_DIAGNOSTIC_home_t*)>
 8025054:	79f1      	ldrb	r1, [r6, #7]
 8025056:	e7c9      	b.n	8024fec <DIAGNOSTIC_processCommandMessage()+0x70>
 8025058:	f000 f878 	bl	802514c <DIAGNOSTIC_endianSwapMoveMotorCommand(COMM_DIAGNOSTIC_moveMotor_t*)>
 802505c:	79f1      	ldrb	r1, [r6, #7]
 802505e:	e7c5      	b.n	8024fec <DIAGNOSTIC_processCommandMessage()+0x70>
 8025060:	f000 f8b2 	bl	80251c8 <DIAGNOSTIC_endianSwapStopMotorCommand(COMM_DIAGNOSTIC_stopMotor_t*)>
 8025064:	79f1      	ldrb	r1, [r6, #7]
 8025066:	e7c1      	b.n	8024fec <DIAGNOSTIC_processCommandMessage()+0x70>
 8025068:	f000 f8b0 	bl	80251cc <DIAGNOSTIC_endianSwapEnableMotorAsyncDataCommand(COMM_DIAGNOSTIC_enableMotorAsyncData_t*)>
 802506c:	79f1      	ldrb	r1, [r6, #7]
 802506e:	e7bd      	b.n	8024fec <DIAGNOSTIC_processCommandMessage()+0x70>
 8025070:	f000 f8c2 	bl	80251f8 <DIAGNOSTIC_endianSwapReadDriveLimitsCommand(COMM_DIAGNSOTIC_readDriveLimits_t*)>
 8025074:	79f1      	ldrb	r1, [r6, #7]
 8025076:	e7b9      	b.n	8024fec <DIAGNOSTIC_processCommandMessage()+0x70>
 8025078:	200048f8 	.word	0x200048f8
 802507c:	080442d4 	.word	0x080442d4
 8025080:	080442b8 	.word	0x080442b8

08025084 <DIAGNOSTIC_sendDataMessage(COMM_DIAGNOSTIC_messageId_e, unsigned char*, unsigned short)>:
 8025084:	b570      	push	{r4, r5, r6, lr}
 8025086:	4c10      	ldr	r4, [pc, #64]	; (80250c8 <DIAGNOSTIC_sendDataMessage(COMM_DIAGNOSTIC_messageId_e, unsigned char*, unsigned short)+0x44>)
 8025088:	f8d4 5120 	ldr.w	r5, [r4, #288]	; 0x120
 802508c:	b084      	sub	sp, #16
 802508e:	f104 061c 	add.w	r6, r4, #28
 8025092:	460b      	mov	r3, r1
 8025094:	4601      	mov	r1, r0
 8025096:	1c68      	adds	r0, r5, #1
 8025098:	9200      	str	r2, [sp, #0]
 802509a:	9601      	str	r6, [sp, #4]
 802509c:	f8c4 0120 	str.w	r0, [r4, #288]	; 0x120
 80250a0:	f44f 7080 	mov.w	r0, #256	; 0x100
 80250a4:	2401      	movs	r4, #1
 80250a6:	e9cd 0402 	strd	r0, r4, [sp, #8]
 80250aa:	b2aa      	uxth	r2, r5
 80250ac:	2028      	movs	r0, #40	; 0x28
 80250ae:	f000 f959 	bl	8025364 <COMM_packNetworkMsg>
 80250b2:	b908      	cbnz	r0, 80250b8 <DIAGNOSTIC_sendDataMessage(COMM_DIAGNOSTIC_messageId_e, unsigned char*, unsigned short)+0x34>
 80250b4:	b004      	add	sp, #16
 80250b6:	bd70      	pop	{r4, r5, r6, pc}
 80250b8:	b281      	uxth	r1, r0
 80250ba:	4630      	mov	r0, r6
 80250bc:	b004      	add	sp, #16
 80250be:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80250c2:	f00a bf3b 	b.w	802ff3c <HARDWARE_NETWORK_enqueueStandardDiagnosticMessage>
 80250c6:	bf00      	nop
 80250c8:	200048f8 	.word	0x200048f8

080250cc <DIAGNOSTIC_enableDiagnosticMode(void*, unsigned long, bool)>:
 80250cc:	b538      	push	{r3, r4, r5, lr}
 80250ce:	460d      	mov	r5, r1
 80250d0:	4604      	mov	r4, r0
 80250d2:	f7ff ff05 	bl	8024ee0 <DIAGNOSTIC_initialize()>
 80250d6:	782b      	ldrb	r3, [r5, #0]
 80250d8:	480a      	ldr	r0, [pc, #40]	; (8025104 <DIAGNOSTIC_enableDiagnosticMode(void*, unsigned long, bool)+0x38>)
 80250da:	2b00      	cmp	r3, #0
 80250dc:	bf14      	ite	ne
 80250de:	f44f 3180 	movne.w	r1, #65536	; 0x10000
 80250e2:	2101      	moveq	r1, #1
 80250e4:	f7fd fcea 	bl	8022abc <Robot::updateArticulation(Articulation::State_e)>
 80250e8:	b930      	cbnz	r0, 80250f8 <DIAGNOSTIC_enableDiagnosticMode(void*, unsigned long, bool)+0x2c>
 80250ea:	2202      	movs	r2, #2
 80250ec:	4611      	mov	r1, r2
 80250ee:	4620      	mov	r0, r4
 80250f0:	f006 fdf2 	bl	802bcd8 <TaskStatus::TaskStatus(TaskStatus::Result_e, unsigned int)>
 80250f4:	4620      	mov	r0, r4
 80250f6:	bd38      	pop	{r3, r4, r5, pc}
 80250f8:	2101      	movs	r1, #1
 80250fa:	4620      	mov	r0, r4
 80250fc:	f006 fde6 	bl	802bccc <TaskStatus::TaskStatus(TaskStatus::Result_e)>
 8025100:	4620      	mov	r0, r4
 8025102:	bd38      	pop	{r3, r4, r5, pc}
 8025104:	2000f630 	.word	0x2000f630

08025108 <_GLOBAL__sub_I__Z21DIAGNOSTIC_initializev>:
 8025108:	b538      	push	{r3, r4, r5, lr}
 802510a:	4c0b      	ldr	r4, [pc, #44]	; (8025138 <_GLOBAL__sub_I__Z21DIAGNOSTIC_initializev+0x30>)
 802510c:	2500      	movs	r5, #0
 802510e:	4629      	mov	r1, r5
 8025110:	1c60      	adds	r0, r4, #1
 8025112:	221b      	movs	r2, #27
 8025114:	e9c4 5547 	strd	r5, r5, [r4, #284]	; 0x11c
 8025118:	7025      	strb	r5, [r4, #0]
 802511a:	f8c4 5124 	str.w	r5, [r4, #292]	; 0x124
 802511e:	f8a4 5128 	strh.w	r5, [r4, #296]	; 0x128
 8025122:	f01a fa97 	bl	803f654 <memset>
 8025126:	4629      	mov	r1, r5
 8025128:	f104 001c 	add.w	r0, r4, #28
 802512c:	f44f 7280 	mov.w	r2, #256	; 0x100
 8025130:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8025134:	f01a ba8e 	b.w	803f654 <memset>
 8025138:	200048f8 	.word	0x200048f8

0802513c <DIAGNOSTIC_endianSwapReadMotorStatusCommand(COMM_DIAGNOSTIC_readMotorStatus_t*)>:
 802513c:	4770      	bx	lr
 802513e:	bf00      	nop

08025140 <DIAGNOSTIC_endianSwapResetMotorCommand(COMM_DIAGNOSTIC_resetMotor_t*)>:
 8025140:	4770      	bx	lr
 8025142:	bf00      	nop

08025144 <DIAGNOSTIC_endianSwapPowerMotorCommand(COMM_DIAGNOSTIC_powerMotor_t*)>:
 8025144:	4770      	bx	lr
 8025146:	bf00      	nop

08025148 <DIAGNOSTIC_endianSwapHomeMotorCommand(COMM_DIAGNOSTIC_home_t*)>:
 8025148:	4770      	bx	lr
 802514a:	bf00      	nop

0802514c <DIAGNOSTIC_endianSwapMoveMotorCommand(COMM_DIAGNOSTIC_moveMotor_t*)>:
 802514c:	b430      	push	{r4, r5}
 802514e:	b082      	sub	sp, #8
 8025150:	f8d0 3001 	ldr.w	r3, [r0, #1]
 8025154:	9300      	str	r3, [sp, #0]
 8025156:	ac01      	add	r4, sp, #4
 8025158:	4622      	mov	r2, r4
 802515a:	4621      	mov	r1, r4
 802515c:	466b      	mov	r3, sp
 802515e:	f811 5d01 	ldrb.w	r5, [r1, #-1]!
 8025162:	f804 5b01 	strb.w	r5, [r4], #1
 8025166:	4299      	cmp	r1, r3
 8025168:	d1f9      	bne.n	802515e <DIAGNOSTIC_endianSwapMoveMotorCommand(COMM_DIAGNOSTIC_moveMotor_t*)+0x12>
 802516a:	9c01      	ldr	r4, [sp, #4]
 802516c:	f8d0 1005 	ldr.w	r1, [r0, #5]
 8025170:	f8c0 4001 	str.w	r4, [r0, #1]
 8025174:	9100      	str	r1, [sp, #0]
 8025176:	4614      	mov	r4, r2
 8025178:	4611      	mov	r1, r2
 802517a:	f811 5d01 	ldrb.w	r5, [r1, #-1]!
 802517e:	f804 5b01 	strb.w	r5, [r4], #1
 8025182:	4299      	cmp	r1, r3
 8025184:	d1f9      	bne.n	802517a <DIAGNOSTIC_endianSwapMoveMotorCommand(COMM_DIAGNOSTIC_moveMotor_t*)+0x2e>
 8025186:	9c01      	ldr	r4, [sp, #4]
 8025188:	f8d0 1009 	ldr.w	r1, [r0, #9]
 802518c:	f8c0 4005 	str.w	r4, [r0, #5]
 8025190:	9100      	str	r1, [sp, #0]
 8025192:	4614      	mov	r4, r2
 8025194:	4611      	mov	r1, r2
 8025196:	f811 5d01 	ldrb.w	r5, [r1, #-1]!
 802519a:	f804 5b01 	strb.w	r5, [r4], #1
 802519e:	4299      	cmp	r1, r3
 80251a0:	d1f9      	bne.n	8025196 <DIAGNOSTIC_endianSwapMoveMotorCommand(COMM_DIAGNOSTIC_moveMotor_t*)+0x4a>
 80251a2:	9901      	ldr	r1, [sp, #4]
 80251a4:	f8d0 400d 	ldr.w	r4, [r0, #13]
 80251a8:	f8c0 1009 	str.w	r1, [r0, #9]
 80251ac:	9400      	str	r4, [sp, #0]
 80251ae:	4611      	mov	r1, r2
 80251b0:	f811 4d01 	ldrb.w	r4, [r1, #-1]!
 80251b4:	f802 4b01 	strb.w	r4, [r2], #1
 80251b8:	4299      	cmp	r1, r3
 80251ba:	d1f9      	bne.n	80251b0 <DIAGNOSTIC_endianSwapMoveMotorCommand(COMM_DIAGNOSTIC_moveMotor_t*)+0x64>
 80251bc:	9b01      	ldr	r3, [sp, #4]
 80251be:	f8c0 300d 	str.w	r3, [r0, #13]
 80251c2:	b002      	add	sp, #8
 80251c4:	bc30      	pop	{r4, r5}
 80251c6:	4770      	bx	lr

080251c8 <DIAGNOSTIC_endianSwapStopMotorCommand(COMM_DIAGNOSTIC_stopMotor_t*)>:
 80251c8:	4770      	bx	lr
 80251ca:	bf00      	nop

080251cc <DIAGNOSTIC_endianSwapEnableMotorAsyncDataCommand(COMM_DIAGNOSTIC_enableMotorAsyncData_t*)>:
 80251cc:	b410      	push	{r4}
 80251ce:	b083      	sub	sp, #12
 80251d0:	f8d0 3002 	ldr.w	r3, [r0, #2]
 80251d4:	9300      	str	r3, [sp, #0]
 80251d6:	aa01      	add	r2, sp, #4
 80251d8:	4613      	mov	r3, r2
 80251da:	466c      	mov	r4, sp
 80251dc:	f813 1d01 	ldrb.w	r1, [r3, #-1]!
 80251e0:	f802 1b01 	strb.w	r1, [r2], #1
 80251e4:	42a3      	cmp	r3, r4
 80251e6:	d1f9      	bne.n	80251dc <DIAGNOSTIC_endianSwapEnableMotorAsyncDataCommand(COMM_DIAGNOSTIC_enableMotorAsyncData_t*)+0x10>
 80251e8:	9b01      	ldr	r3, [sp, #4]
 80251ea:	f8c0 3002 	str.w	r3, [r0, #2]
 80251ee:	b003      	add	sp, #12
 80251f0:	f85d 4b04 	ldr.w	r4, [sp], #4
 80251f4:	4770      	bx	lr
 80251f6:	bf00      	nop

080251f8 <DIAGNOSTIC_endianSwapReadDriveLimitsCommand(COMM_DIAGNSOTIC_readDriveLimits_t*)>:
 80251f8:	4770      	bx	lr
 80251fa:	bf00      	nop

080251fc <DIAGNOSTIC_endianSwapReadSensorStateCommand(COMM_DIAGNOSTIC_getSensorState_t*)>:
 80251fc:	4770      	bx	lr
 80251fe:	bf00      	nop

08025200 <DIAGNOSTIC_endianSwapResponseMessage(COMM_standardResponsePayload_t*)>:
 8025200:	b410      	push	{r4}
 8025202:	b083      	sub	sp, #12
 8025204:	f8d0 3001 	ldr.w	r3, [r0, #1]
 8025208:	9300      	str	r3, [sp, #0]
 802520a:	aa01      	add	r2, sp, #4
 802520c:	4613      	mov	r3, r2
 802520e:	466c      	mov	r4, sp
 8025210:	f813 1d01 	ldrb.w	r1, [r3, #-1]!
 8025214:	f802 1b01 	strb.w	r1, [r2], #1
 8025218:	42a3      	cmp	r3, r4
 802521a:	d1f9      	bne.n	8025210 <DIAGNOSTIC_endianSwapResponseMessage(COMM_standardResponsePayload_t*)+0x10>
 802521c:	9b01      	ldr	r3, [sp, #4]
 802521e:	f8c0 3001 	str.w	r3, [r0, #1]
 8025222:	b003      	add	sp, #12
 8025224:	f85d 4b04 	ldr.w	r4, [sp], #4
 8025228:	4770      	bx	lr
 802522a:	bf00      	nop

0802522c <DIAGNOSTIC_endianSwapCameraSensorStateData(COMM_DIAGNOSTIC_cameraSensorState_t*)>:
 802522c:	b410      	push	{r4}
 802522e:	b083      	sub	sp, #12
 8025230:	f8d0 3001 	ldr.w	r3, [r0, #1]
 8025234:	9300      	str	r3, [sp, #0]
 8025236:	aa01      	add	r2, sp, #4
 8025238:	4613      	mov	r3, r2
 802523a:	466c      	mov	r4, sp
 802523c:	f813 1d01 	ldrb.w	r1, [r3, #-1]!
 8025240:	f802 1b01 	strb.w	r1, [r2], #1
 8025244:	42a3      	cmp	r3, r4
 8025246:	d1f9      	bne.n	802523c <DIAGNOSTIC_endianSwapCameraSensorStateData(COMM_DIAGNOSTIC_cameraSensorState_t*)+0x10>
 8025248:	9b01      	ldr	r3, [sp, #4]
 802524a:	f8c0 3001 	str.w	r3, [r0, #1]
 802524e:	b003      	add	sp, #12
 8025250:	f85d 4b04 	ldr.w	r4, [sp], #4
 8025254:	4770      	bx	lr
 8025256:	bf00      	nop

08025258 <unsigned short endianSwapIfRequired<unsigned short>(unsigned short, COMM_endianOrder_e) [clone .part.0]>:
 8025258:	ba40      	rev16	r0, r0
 802525a:	b082      	sub	sp, #8
 802525c:	b280      	uxth	r0, r0
 802525e:	b002      	add	sp, #8
 8025260:	4770      	bx	lr
 8025262:	bf00      	nop

08025264 <COMM_unpackNetworkMsg>:
 8025264:	b570      	push	{r4, r5, r6, lr}
 8025266:	f100 0308 	add.w	r3, r0, #8
 802526a:	b082      	sub	sp, #8
 802526c:	4604      	mov	r4, r0
 802526e:	460e      	mov	r6, r1
 8025270:	6008      	str	r0, [r1, #0]
 8025272:	604b      	str	r3, [r1, #4]
 8025274:	b33a      	cbz	r2, 80252c6 <COMM_unpackNetworkMsg+0x62>
 8025276:	f8b0 0005 	ldrh.w	r0, [r0, #5]
 802527a:	f7ff ffed 	bl	8025258 <unsigned short endianSwapIfRequired<unsigned short>(unsigned short, COMM_endianOrder_e) [clone .part.0]>
 802527e:	f8a4 0005 	strh.w	r0, [r4, #5]
 8025282:	8860      	ldrh	r0, [r4, #2]
 8025284:	f7ff ffe8 	bl	8025258 <unsigned short endianSwapIfRequired<unsigned short>(unsigned short, COMM_endianOrder_e) [clone .part.0]>
 8025288:	4601      	mov	r1, r0
 802528a:	8060      	strh	r0, [r4, #2]
 802528c:	8820      	ldrh	r0, [r4, #0]
 802528e:	f7ff ffe3 	bl	8025258 <unsigned short endianSwapIfRequired<unsigned short>(unsigned short, COMM_endianOrder_e) [clone .part.0]>
 8025292:	f64a 23bb 	movw	r3, #43707	; 0xaabb
 8025296:	1865      	adds	r5, r4, r1
 8025298:	4298      	cmp	r0, r3
 802529a:	8020      	strh	r0, [r4, #0]
 802529c:	f8c6 500a 	str.w	r5, [r6, #10]
 80252a0:	d126      	bne.n	80252f0 <COMM_unpackNetworkMsg+0x8c>
 80252a2:	5c60      	ldrb	r0, [r4, r1]
 80252a4:	2900      	cmp	r1, #0
 80252a6:	d050      	beq.n	802534a <COMM_unpackNetworkMsg+0xe6>
 80252a8:	2300      	movs	r3, #0
 80252aa:	f814 2b01 	ldrb.w	r2, [r4], #1
 80252ae:	4413      	add	r3, r2
 80252b0:	b2db      	uxtb	r3, r3
 80252b2:	42a5      	cmp	r5, r4
 80252b4:	461a      	mov	r2, r3
 80252b6:	d1f8      	bne.n	80252aa <COMM_unpackNetworkMsg+0x46>
 80252b8:	4290      	cmp	r0, r2
 80252ba:	d107      	bne.n	80252cc <COMM_unpackNetworkMsg+0x68>
 80252bc:	3908      	subs	r1, #8
 80252be:	2001      	movs	r0, #1
 80252c0:	8131      	strh	r1, [r6, #8]
 80252c2:	b002      	add	sp, #8
 80252c4:	bd70      	pop	{r4, r5, r6, pc}
 80252c6:	8841      	ldrh	r1, [r0, #2]
 80252c8:	8800      	ldrh	r0, [r0, #0]
 80252ca:	e7e2      	b.n	8025292 <COMM_unpackNetworkMsg+0x2e>
 80252cc:	4822      	ldr	r0, [pc, #136]	; (8025358 <COMM_unpackNetworkMsg+0xf4>)
 80252ce:	212f      	movs	r1, #47	; 0x2f
 80252d0:	f01a f845 	bl	803f35e <strrchr>
 80252d4:	b318      	cbz	r0, 802531e <COMM_unpackNetworkMsg+0xba>
 80252d6:	212f      	movs	r1, #47	; 0x2f
 80252d8:	481f      	ldr	r0, [pc, #124]	; (8025358 <COMM_unpackNetworkMsg+0xf4>)
 80252da:	f01a f840 	bl	803f35e <strrchr>
 80252de:	1c41      	adds	r1, r0, #1
 80252e0:	4b1e      	ldr	r3, [pc, #120]	; (802535c <COMM_unpackNetworkMsg+0xf8>)
 80252e2:	223b      	movs	r2, #59	; 0x3b
 80252e4:	2000      	movs	r0, #0
 80252e6:	f7fd fa57 	bl	8022798 <DEBUG_logMsg>
 80252ea:	2000      	movs	r0, #0
 80252ec:	b002      	add	sp, #8
 80252ee:	bd70      	pop	{r4, r5, r6, pc}
 80252f0:	4819      	ldr	r0, [pc, #100]	; (8025358 <COMM_unpackNetworkMsg+0xf4>)
 80252f2:	212f      	movs	r1, #47	; 0x2f
 80252f4:	f01a f833 	bl	803f35e <strrchr>
 80252f8:	b1e0      	cbz	r0, 8025334 <COMM_unpackNetworkMsg+0xd0>
 80252fa:	212f      	movs	r1, #47	; 0x2f
 80252fc:	4816      	ldr	r0, [pc, #88]	; (8025358 <COMM_unpackNetworkMsg+0xf4>)
 80252fe:	f01a f82e 	bl	803f35e <strrchr>
 8025302:	1c41      	adds	r1, r0, #1
 8025304:	6832      	ldr	r2, [r6, #0]
 8025306:	4b16      	ldr	r3, [pc, #88]	; (8025360 <COMM_unpackNetworkMsg+0xfc>)
 8025308:	8810      	ldrh	r0, [r2, #0]
 802530a:	9001      	str	r0, [sp, #4]
 802530c:	8852      	ldrh	r2, [r2, #2]
 802530e:	9200      	str	r2, [sp, #0]
 8025310:	2000      	movs	r0, #0
 8025312:	2234      	movs	r2, #52	; 0x34
 8025314:	f7fd fa40 	bl	8022798 <DEBUG_logMsg>
 8025318:	2000      	movs	r0, #0
 802531a:	b002      	add	sp, #8
 802531c:	bd70      	pop	{r4, r5, r6, pc}
 802531e:	480e      	ldr	r0, [pc, #56]	; (8025358 <COMM_unpackNetworkMsg+0xf4>)
 8025320:	215c      	movs	r1, #92	; 0x5c
 8025322:	f01a f81c 	bl	803f35e <strrchr>
 8025326:	b190      	cbz	r0, 802534e <COMM_unpackNetworkMsg+0xea>
 8025328:	215c      	movs	r1, #92	; 0x5c
 802532a:	480b      	ldr	r0, [pc, #44]	; (8025358 <COMM_unpackNetworkMsg+0xf4>)
 802532c:	f01a f817 	bl	803f35e <strrchr>
 8025330:	1c41      	adds	r1, r0, #1
 8025332:	e7d5      	b.n	80252e0 <COMM_unpackNetworkMsg+0x7c>
 8025334:	4808      	ldr	r0, [pc, #32]	; (8025358 <COMM_unpackNetworkMsg+0xf4>)
 8025336:	215c      	movs	r1, #92	; 0x5c
 8025338:	f01a f811 	bl	803f35e <strrchr>
 802533c:	b148      	cbz	r0, 8025352 <COMM_unpackNetworkMsg+0xee>
 802533e:	215c      	movs	r1, #92	; 0x5c
 8025340:	4805      	ldr	r0, [pc, #20]	; (8025358 <COMM_unpackNetworkMsg+0xf4>)
 8025342:	f01a f80c 	bl	803f35e <strrchr>
 8025346:	1c41      	adds	r1, r0, #1
 8025348:	e7dc      	b.n	8025304 <COMM_unpackNetworkMsg+0xa0>
 802534a:	460a      	mov	r2, r1
 802534c:	e7b4      	b.n	80252b8 <COMM_unpackNetworkMsg+0x54>
 802534e:	4902      	ldr	r1, [pc, #8]	; (8025358 <COMM_unpackNetworkMsg+0xf4>)
 8025350:	e7c6      	b.n	80252e0 <COMM_unpackNetworkMsg+0x7c>
 8025352:	4901      	ldr	r1, [pc, #4]	; (8025358 <COMM_unpackNetworkMsg+0xf4>)
 8025354:	e7d6      	b.n	8025304 <COMM_unpackNetworkMsg+0xa0>
 8025356:	bf00      	nop
 8025358:	080442dc 	.word	0x080442dc
 802535c:	08044340 	.word	0x08044340
 8025360:	08044310 	.word	0x08044310

08025364 <COMM_packNetworkMsg>:
 8025364:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8025368:	b083      	sub	sp, #12
 802536a:	f8bd 6028 	ldrh.w	r6, [sp, #40]	; 0x28
 802536e:	f8bd 8030 	ldrh.w	r8, [sp, #48]	; 0x30
 8025372:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8025374:	f89d 7034 	ldrb.w	r7, [sp, #52]	; 0x34
 8025378:	f106 050a 	add.w	r5, r6, #10
 802537c:	45a8      	cmp	r8, r5
 802537e:	d216      	bcs.n	80253ae <COMM_packNetworkMsg+0x4a>
 8025380:	4833      	ldr	r0, [pc, #204]	; (8025450 <COMM_packNetworkMsg+0xec>)
 8025382:	212f      	movs	r1, #47	; 0x2f
 8025384:	f019 ffeb 	bl	803f35e <strrchr>
 8025388:	2800      	cmp	r0, #0
 802538a:	d04f      	beq.n	802542c <COMM_packNetworkMsg+0xc8>
 802538c:	212f      	movs	r1, #47	; 0x2f
 802538e:	4830      	ldr	r0, [pc, #192]	; (8025450 <COMM_packNetworkMsg+0xec>)
 8025390:	f019 ffe5 	bl	803f35e <strrchr>
 8025394:	1c41      	adds	r1, r0, #1
 8025396:	e9cd 5800 	strd	r5, r8, [sp]
 802539a:	4b2e      	ldr	r3, [pc, #184]	; (8025454 <COMM_packNetworkMsg+0xf0>)
 802539c:	2272      	movs	r2, #114	; 0x72
 802539e:	2000      	movs	r0, #0
 80253a0:	f7fd f9fa 	bl	8022798 <DEBUG_logMsg>
 80253a4:	2500      	movs	r5, #0
 80253a6:	4628      	mov	r0, r5
 80253a8:	b003      	add	sp, #12
 80253aa:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80253ae:	f06f 0c55 	mvn.w	ip, #85	; 0x55
 80253b2:	f06f 0e44 	mvn.w	lr, #68	; 0x44
 80253b6:	7120      	strb	r0, [r4, #4]
 80253b8:	f104 0808 	add.w	r8, r4, #8
 80253bc:	f106 0008 	add.w	r0, r6, #8
 80253c0:	f8a4 2005 	strh.w	r2, [r4, #5]
 80253c4:	71e1      	strb	r1, [r4, #7]
 80253c6:	f884 c001 	strb.w	ip, [r4, #1]
 80253ca:	8060      	strh	r0, [r4, #2]
 80253cc:	4619      	mov	r1, r3
 80253ce:	f884 e000 	strb.w	lr, [r4]
 80253d2:	fa1f f980 	uxth.w	r9, r0
 80253d6:	4632      	mov	r2, r6
 80253d8:	4640      	mov	r0, r8
 80253da:	f01a f912 	bl	803f602 <__aeabi_memcpy>
 80253de:	eb08 0c06 	add.w	ip, r8, r6
 80253e2:	f1b9 0f00 	cmp.w	r9, #0
 80253e6:	d031      	beq.n	802544c <COMM_packNetworkMsg+0xe8>
 80253e8:	44a1      	add	r9, r4
 80253ea:	4622      	mov	r2, r4
 80253ec:	2300      	movs	r3, #0
 80253ee:	f812 0b01 	ldrb.w	r0, [r2], #1
 80253f2:	4403      	add	r3, r0
 80253f4:	b2db      	uxtb	r3, r3
 80253f6:	454a      	cmp	r2, r9
 80253f8:	4619      	mov	r1, r3
 80253fa:	d1f8      	bne.n	80253ee <COMM_packNetworkMsg+0x8a>
 80253fc:	23dd      	movs	r3, #221	; 0xdd
 80253fe:	f808 1006 	strb.w	r1, [r8, r6]
 8025402:	f88c 3001 	strb.w	r3, [ip, #1]
 8025406:	b1e7      	cbz	r7, 8025442 <COMM_packNetworkMsg+0xde>
 8025408:	8820      	ldrh	r0, [r4, #0]
 802540a:	f7ff ff25 	bl	8025258 <unsigned short endianSwapIfRequired<unsigned short>(unsigned short, COMM_endianOrder_e) [clone .part.0]>
 802540e:	8020      	strh	r0, [r4, #0]
 8025410:	f8b4 0005 	ldrh.w	r0, [r4, #5]
 8025414:	f7ff ff20 	bl	8025258 <unsigned short endianSwapIfRequired<unsigned short>(unsigned short, COMM_endianOrder_e) [clone .part.0]>
 8025418:	f8a4 0005 	strh.w	r0, [r4, #5]
 802541c:	8860      	ldrh	r0, [r4, #2]
 802541e:	f7ff ff1b 	bl	8025258 <unsigned short endianSwapIfRequired<unsigned short>(unsigned short, COMM_endianOrder_e) [clone .part.0]>
 8025422:	8060      	strh	r0, [r4, #2]
 8025424:	4628      	mov	r0, r5
 8025426:	b003      	add	sp, #12
 8025428:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 802542c:	4808      	ldr	r0, [pc, #32]	; (8025450 <COMM_packNetworkMsg+0xec>)
 802542e:	215c      	movs	r1, #92	; 0x5c
 8025430:	f019 ff95 	bl	803f35e <strrchr>
 8025434:	b140      	cbz	r0, 8025448 <COMM_packNetworkMsg+0xe4>
 8025436:	215c      	movs	r1, #92	; 0x5c
 8025438:	4805      	ldr	r0, [pc, #20]	; (8025450 <COMM_packNetworkMsg+0xec>)
 802543a:	f019 ff90 	bl	803f35e <strrchr>
 802543e:	1c41      	adds	r1, r0, #1
 8025440:	e7a9      	b.n	8025396 <COMM_packNetworkMsg+0x32>
 8025442:	8860      	ldrh	r0, [r4, #2]
 8025444:	8060      	strh	r0, [r4, #2]
 8025446:	e7ed      	b.n	8025424 <COMM_packNetworkMsg+0xc0>
 8025448:	4901      	ldr	r1, [pc, #4]	; (8025450 <COMM_packNetworkMsg+0xec>)
 802544a:	e7a4      	b.n	8025396 <COMM_packNetworkMsg+0x32>
 802544c:	4649      	mov	r1, r9
 802544e:	e7d5      	b.n	80253fc <COMM_packNetworkMsg+0x98>
 8025450:	080442dc 	.word	0x080442dc
 8025454:	08044360 	.word	0x08044360

08025458 <COMM_checkSequenceNumber>:
 8025458:	1c43      	adds	r3, r0, #1
 802545a:	b29b      	uxth	r3, r3
 802545c:	428b      	cmp	r3, r1
 802545e:	d004      	beq.n	802546a <COMM_checkSequenceNumber+0x12>
 8025460:	4288      	cmp	r0, r1
 8025462:	bf0c      	ite	eq
 8025464:	2001      	moveq	r0, #1
 8025466:	2002      	movne	r0, #2
 8025468:	4770      	bx	lr
 802546a:	2000      	movs	r0, #0
 802546c:	4770      	bx	lr
 802546e:	bf00      	nop

08025470 <ANTCTRL_getXTireDiameter>:
 8025470:	b508      	push	{r3, lr}
 8025472:	4808      	ldr	r0, [pc, #32]	; (8025494 <ANTCTRL_getXTireDiameter+0x24>)
 8025474:	2108      	movs	r1, #8
 8025476:	f7fd fb95 	bl	8022ba4 <Robot::getAxisMechanicalRatio(ROBOT_axisIndex_t)>
 802547a:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 802547e:	eec7 6a80 	vdiv.f32	s13, s15, s0
 8025482:	ed9f 7a05 	vldr	s14, [pc, #20]	; 8025498 <ANTCTRL_getXTireDiameter+0x28>
 8025486:	eddf 7a05 	vldr	s15, [pc, #20]	; 802549c <ANTCTRL_getXTireDiameter+0x2c>
 802548a:	ee86 0a87 	vdiv.f32	s0, s13, s14
 802548e:	ee20 0a27 	vmul.f32	s0, s0, s15
 8025492:	bd08      	pop	{r3, pc}
 8025494:	2000f630 	.word	0x2000f630
 8025498:	40490fdb 	.word	0x40490fdb
 802549c:	447a0000 	.word	0x447a0000
 80254a0:	8101b108 	.word	0x8101b108
 80254a4:	8400b0b0 	.word	0x8400b0b0
 80254a8:	00000000 	.word	0x00000000

080254ac <ANTCTRL_getYTireDiameter>:
 80254ac:	b508      	push	{r3, lr}
 80254ae:	4808      	ldr	r0, [pc, #32]	; (80254d0 <ANTCTRL_getYTireDiameter+0x24>)
 80254b0:	2109      	movs	r1, #9
 80254b2:	f7fd fb77 	bl	8022ba4 <Robot::getAxisMechanicalRatio(ROBOT_axisIndex_t)>
 80254b6:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 80254ba:	eec7 6a80 	vdiv.f32	s13, s15, s0
 80254be:	ed9f 7a05 	vldr	s14, [pc, #20]	; 80254d4 <ANTCTRL_getYTireDiameter+0x28>
 80254c2:	eddf 7a05 	vldr	s15, [pc, #20]	; 80254d8 <ANTCTRL_getYTireDiameter+0x2c>
 80254c6:	ee86 0a87 	vdiv.f32	s0, s13, s14
 80254ca:	ee20 0a27 	vmul.f32	s0, s0, s15
 80254ce:	bd08      	pop	{r3, pc}
 80254d0:	2000f630 	.word	0x2000f630
 80254d4:	40490fdb 	.word	0x40490fdb
 80254d8:	447a0000 	.word	0x447a0000
 80254dc:	8101b108 	.word	0x8101b108
 80254e0:	8400b0b0 	.word	0x8400b0b0
 80254e4:	00000000 	.word	0x00000000

080254e8 <ANTCTRL_startTask>:
 80254e8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80254ec:	4605      	mov	r5, r0
 80254ee:	b085      	sub	sp, #20
 80254f0:	480b      	ldr	r0, [pc, #44]	; (8025520 <ANTCTRL_startTask+0x38>)
 80254f2:	460e      	mov	r6, r1
 80254f4:	4617      	mov	r7, r2
 80254f6:	4699      	mov	r9, r3
 80254f8:	f7fd fadc 	bl	8022ab4 <Robot::getArticulation()>
 80254fc:	4680      	mov	r8, r0
 80254fe:	2000      	movs	r0, #0
 8025500:	f7fe fe58 	bl	80241b4 <CCP_getMirrorData>
 8025504:	b2c4      	uxtb	r4, r0
 8025506:	e9cd 9800 	strd	r9, r8, [sp]
 802550a:	463b      	mov	r3, r7
 802550c:	4632      	mov	r2, r6
 802550e:	4629      	mov	r1, r5
 8025510:	9402      	str	r4, [sp, #8]
 8025512:	4804      	ldr	r0, [pc, #16]	; (8025524 <ANTCTRL_startTask+0x3c>)
 8025514:	f006 fc24 	bl	802bd60 <TaskManager::startTask(COMM_source_t, unsigned char, unsigned char*, unsigned short, Articulation::State_e, unsigned char)>
 8025518:	b005      	add	sp, #20
 802551a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 802551e:	bf00      	nop
 8025520:	2000f630 	.word	0x2000f630
 8025524:	20004afc 	.word	0x20004afc

08025528 <ANTCTRL_enterThread>:
 8025528:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 802552c:	2002      	movs	r0, #2
 802552e:	b087      	sub	sp, #28
 8025530:	f7fb fbfc 	bl	8020d2c <SYSTEM_setThreadFlag>
 8025534:	2300      	movs	r3, #0
 8025536:	4a9b      	ldr	r2, [pc, #620]	; (80257a4 <ANTCTRL_enterThread+0x27c>)
 8025538:	499b      	ldr	r1, [pc, #620]	; (80257a8 <ANTCTRL_enterThread+0x280>)
 802553a:	9300      	str	r3, [sp, #0]
 802553c:	489b      	ldr	r0, [pc, #620]	; (80257ac <ANTCTRL_enterThread+0x284>)
 802553e:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8025542:	f00b ff0f 	bl	8031364 <NVM_init>
 8025546:	489a      	ldr	r0, [pc, #616]	; (80257b0 <ANTCTRL_enterThread+0x288>)
 8025548:	f7fd faca 	bl	8022ae0 <Robot::start()>
 802554c:	f7fe fc2a 	bl	8023da4 <CCP_init>
 8025550:	f7fe feec 	bl	802432c <MCM_init>
 8025554:	f7ff fcc4 	bl	8024ee0 <DIAGNOSTIC_initialize()>
 8025558:	f009 f9ba 	bl	802e8d0 <CAMERA_init()>
 802555c:	f7fb fc98 	bl	8020e90 <SYSTEM_checkCrashLog>
 8025560:	e001      	b.n	8025566 <ANTCTRL_enterThread+0x3e>
 8025562:	f014 fcf5 	bl	8039f50 <_tx_thread_sleep>
 8025566:	f7fb fbd5 	bl	8020d14 <SYSTEM_areThreadsRunning>
 802556a:	4603      	mov	r3, r0
 802556c:	200a      	movs	r0, #10
 802556e:	2b00      	cmp	r3, #0
 8025570:	d0f7      	beq.n	8025562 <ANTCTRL_enterThread+0x3a>
 8025572:	2300      	movs	r3, #0
 8025574:	461a      	mov	r2, r3
 8025576:	210b      	movs	r1, #11
 8025578:	2006      	movs	r0, #6
 802557a:	f7ff ffb5 	bl	80254e8 <ANTCTRL_startTask>
 802557e:	4e8d      	ldr	r6, [pc, #564]	; (80257b4 <ANTCTRL_enterThread+0x28c>)
 8025580:	4f8d      	ldr	r7, [pc, #564]	; (80257b8 <ANTCTRL_enterThread+0x290>)
 8025582:	4d8e      	ldr	r5, [pc, #568]	; (80257bc <ANTCTRL_enterThread+0x294>)
 8025584:	4c8e      	ldr	r4, [pc, #568]	; (80257c0 <ANTCTRL_enterThread+0x298>)
 8025586:	e061      	b.n	802564c <ANTCTRL_enterThread+0x124>
 8025588:	9b03      	ldr	r3, [sp, #12]
 802558a:	0698      	lsls	r0, r3, #26
 802558c:	d505      	bpl.n	802559a <ANTCTRL_enterThread+0x72>
 802558e:	f023 0320 	bic.w	r3, r3, #32
 8025592:	9303      	str	r3, [sp, #12]
 8025594:	f7fe ff16 	bl	80243c4 <MCM_processMessage>
 8025598:	9b03      	ldr	r3, [sp, #12]
 802559a:	f003 0280 	and.w	r2, r3, #128	; 0x80
 802559e:	b12a      	cbz	r2, 80255ac <ANTCTRL_enterThread+0x84>
 80255a0:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 80255a4:	9303      	str	r3, [sp, #12]
 80255a6:	f7fe fd85 	bl	80240b4 <CCP_processMessage>
 80255aa:	9b03      	ldr	r3, [sp, #12]
 80255ac:	0659      	lsls	r1, r3, #25
 80255ae:	d468      	bmi.n	8025682 <ANTCTRL_enterThread+0x15a>
 80255b0:	045a      	lsls	r2, r3, #17
 80255b2:	d505      	bpl.n	80255c0 <ANTCTRL_enterThread+0x98>
 80255b4:	f00d fc48 	bl	8032e48 <UPG_MNGR_processCANRxMessage>
 80255b8:	9b03      	ldr	r3, [sp, #12]
 80255ba:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 80255be:	9303      	str	r3, [sp, #12]
 80255c0:	041b      	lsls	r3, r3, #16
 80255c2:	d453      	bmi.n	802566c <ANTCTRL_enterThread+0x144>
 80255c4:	4620      	mov	r0, r4
 80255c6:	f006 fd09 	bl	802bfdc <TaskManager::isTaskActive()>
 80255ca:	2800      	cmp	r0, #0
 80255cc:	d03b      	beq.n	8025646 <ANTCTRL_enterThread+0x11e>
 80255ce:	9a03      	ldr	r2, [sp, #12]
 80255d0:	4621      	mov	r1, r4
 80255d2:	a804      	add	r0, sp, #16
 80255d4:	f006 fcf2 	bl	802bfbc <TaskManager::runTask(unsigned int)>
 80255d8:	f89d 8010 	ldrb.w	r8, [sp, #16]
 80255dc:	f1b8 0f01 	cmp.w	r8, #1
 80255e0:	d059      	beq.n	8025696 <ANTCTRL_enterThread+0x16e>
 80255e2:	f1b8 0f02 	cmp.w	r8, #2
 80255e6:	d12e      	bne.n	8025646 <ANTCTRL_enterThread+0x11e>
 80255e8:	4620      	mov	r0, r4
 80255ea:	f006 fcf1 	bl	802bfd0 <TaskManager::getTask()>
 80255ee:	4681      	mov	r9, r0
 80255f0:	4641      	mov	r1, r8
 80255f2:	4620      	mov	r0, r4
 80255f4:	f006 fbb2 	bl	802bd5c <TaskManager::setState(TaskManager::State_e)>
 80255f8:	f899 3000 	ldrb.w	r3, [r9]
 80255fc:	f899 0001 	ldrb.w	r0, [r9, #1]
 8025600:	9a05      	ldr	r2, [sp, #20]
 8025602:	2b26      	cmp	r3, #38	; 0x26
 8025604:	f000 80ad 	beq.w	8025762 <ANTCTRL_enterThread+0x23a>
 8025608:	2b06      	cmp	r3, #6
 802560a:	f000 80af 	beq.w	802576c <ANTCTRL_enterThread+0x244>
 802560e:	f899 3011 	ldrb.w	r3, [r9, #17]
 8025612:	2b00      	cmp	r3, #0
 8025614:	d16d      	bne.n	80256f2 <ANTCTRL_enterThread+0x1ca>
 8025616:	2300      	movs	r3, #0
 8025618:	486a      	ldr	r0, [pc, #424]	; (80257c4 <ANTCTRL_enterThread+0x29c>)
 802561a:	7033      	strb	r3, [r6, #0]
 802561c:	212f      	movs	r1, #47	; 0x2f
 802561e:	f019 fe9e 	bl	803f35e <strrchr>
 8025622:	2800      	cmp	r0, #0
 8025624:	f000 8082 	beq.w	802572c <ANTCTRL_enterThread+0x204>
 8025628:	212f      	movs	r1, #47	; 0x2f
 802562a:	4866      	ldr	r0, [pc, #408]	; (80257c4 <ANTCTRL_enterThread+0x29c>)
 802562c:	f019 fe97 	bl	803f35e <strrchr>
 8025630:	1c41      	adds	r1, r0, #1
 8025632:	9b05      	ldr	r3, [sp, #20]
 8025634:	9301      	str	r3, [sp, #4]
 8025636:	f8d9 3004 	ldr.w	r3, [r9, #4]
 802563a:	9300      	str	r3, [sp, #0]
 802563c:	22ba      	movs	r2, #186	; 0xba
 802563e:	4b62      	ldr	r3, [pc, #392]	; (80257c8 <ANTCTRL_enterThread+0x2a0>)
 8025640:	2000      	movs	r0, #0
 8025642:	f7fd f8a9 	bl	8022798 <DEBUG_logMsg>
 8025646:	2002      	movs	r0, #2
 8025648:	f7fb fb70 	bl	8020d2c <SYSTEM_setThreadFlag>
 802564c:	230a      	movs	r3, #10
 802564e:	9300      	str	r3, [sp, #0]
 8025650:	2201      	movs	r2, #1
 8025652:	ab03      	add	r3, sp, #12
 8025654:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8025658:	4628      	mov	r0, r5
 802565a:	f013 fd13 	bl	8039084 <_tx_event_flags_get>
 802565e:	b2c0      	uxtb	r0, r0
 8025660:	2807      	cmp	r0, #7
 8025662:	d191      	bne.n	8025588 <ANTCTRL_enterThread+0x60>
 8025664:	2300      	movs	r3, #0
 8025666:	9303      	str	r3, [sp, #12]
 8025668:	041b      	lsls	r3, r3, #16
 802566a:	d5ab      	bpl.n	80255c4 <ANTCTRL_enterThread+0x9c>
 802566c:	f7ff fc86 	bl	8024f7c <DIAGNOSTIC_processCommandMessage()>
 8025670:	2800      	cmp	r0, #0
 8025672:	d137      	bne.n	80256e4 <ANTCTRL_enterThread+0x1bc>
 8025674:	9b03      	ldr	r3, [sp, #12]
 8025676:	f423 4300 	bic.w	r3, r3, #32768	; 0x8000
 802567a:	9303      	str	r3, [sp, #12]
 802567c:	e7a2      	b.n	80255c4 <ANTCTRL_enterThread+0x9c>
 802567e:	f7ff f899 	bl	80247b4 <CDM_processMessage>
 8025682:	2002      	movs	r0, #2
 8025684:	f00b f8d2 	bl	803082c <CANMNGR_NumMsgSrcPending>
 8025688:	2800      	cmp	r0, #0
 802568a:	d1f8      	bne.n	802567e <ANTCTRL_enterThread+0x156>
 802568c:	9b03      	ldr	r3, [sp, #12]
 802568e:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8025692:	9303      	str	r3, [sp, #12]
 8025694:	e78c      	b.n	80255b0 <ANTCTRL_enterThread+0x88>
 8025696:	4620      	mov	r0, r4
 8025698:	f006 fc9a 	bl	802bfd0 <TaskManager::getTask()>
 802569c:	4680      	mov	r8, r0
 802569e:	2100      	movs	r1, #0
 80256a0:	4620      	mov	r0, r4
 80256a2:	f006 fb5b 	bl	802bd5c <TaskManager::setState(TaskManager::State_e)>
 80256a6:	f898 3000 	ldrb.w	r3, [r8]
 80256aa:	f898 0001 	ldrb.w	r0, [r8, #1]
 80256ae:	9a05      	ldr	r2, [sp, #20]
 80256b0:	2b26      	cmp	r3, #38	; 0x26
 80256b2:	d051      	beq.n	8025758 <ANTCTRL_enterThread+0x230>
 80256b4:	2b06      	cmp	r3, #6
 80256b6:	d05e      	beq.n	8025776 <ANTCTRL_enterThread+0x24e>
 80256b8:	2300      	movs	r3, #0
 80256ba:	4842      	ldr	r0, [pc, #264]	; (80257c4 <ANTCTRL_enterThread+0x29c>)
 80256bc:	7033      	strb	r3, [r6, #0]
 80256be:	212f      	movs	r1, #47	; 0x2f
 80256c0:	f019 fe4d 	bl	803f35e <strrchr>
 80256c4:	2800      	cmp	r0, #0
 80256c6:	d03c      	beq.n	8025742 <ANTCTRL_enterThread+0x21a>
 80256c8:	212f      	movs	r1, #47	; 0x2f
 80256ca:	483e      	ldr	r0, [pc, #248]	; (80257c4 <ANTCTRL_enterThread+0x29c>)
 80256cc:	f019 fe47 	bl	803f35e <strrchr>
 80256d0:	1c41      	adds	r1, r0, #1
 80256d2:	f8d8 3004 	ldr.w	r3, [r8, #4]
 80256d6:	9300      	str	r3, [sp, #0]
 80256d8:	22a2      	movs	r2, #162	; 0xa2
 80256da:	4b3c      	ldr	r3, [pc, #240]	; (80257cc <ANTCTRL_enterThread+0x2a4>)
 80256dc:	2000      	movs	r0, #0
 80256de:	f7fd f85b 	bl	8022798 <DEBUG_logMsg>
 80256e2:	e7b0      	b.n	8025646 <ANTCTRL_enterThread+0x11e>
 80256e4:	2200      	movs	r2, #0
 80256e6:	f44f 4100 	mov.w	r1, #32768	; 0x8000
 80256ea:	4628      	mov	r0, r5
 80256ec:	f013 fd44 	bl	8039178 <_tx_event_flags_set>
 80256f0:	e7c0      	b.n	8025674 <ANTCTRL_enterThread+0x14c>
 80256f2:	f04f 0801 	mov.w	r8, #1
 80256f6:	a902      	add	r1, sp, #8
 80256f8:	4642      	mov	r2, r8
 80256fa:	2009      	movs	r0, #9
 80256fc:	f88d 8008 	strb.w	r8, [sp, #8]
 8025700:	f7fe fc72 	bl	8023fe8 <CCP_sendPriorityMessage>
 8025704:	482f      	ldr	r0, [pc, #188]	; (80257c4 <ANTCTRL_enterThread+0x29c>)
 8025706:	f887 8000 	strb.w	r8, [r7]
 802570a:	212f      	movs	r1, #47	; 0x2f
 802570c:	f019 fe27 	bl	803f35e <strrchr>
 8025710:	2800      	cmp	r0, #0
 8025712:	d039      	beq.n	8025788 <ANTCTRL_enterThread+0x260>
 8025714:	212f      	movs	r1, #47	; 0x2f
 8025716:	482b      	ldr	r0, [pc, #172]	; (80257c4 <ANTCTRL_enterThread+0x29c>)
 8025718:	f019 fe21 	bl	803f35e <strrchr>
 802571c:	eb00 0108 	add.w	r1, r0, r8
 8025720:	4b2b      	ldr	r3, [pc, #172]	; (80257d0 <ANTCTRL_enterThread+0x2a8>)
 8025722:	22b5      	movs	r2, #181	; 0xb5
 8025724:	2001      	movs	r0, #1
 8025726:	f7fd f837 	bl	8022798 <DEBUG_logMsg>
 802572a:	e774      	b.n	8025616 <ANTCTRL_enterThread+0xee>
 802572c:	4825      	ldr	r0, [pc, #148]	; (80257c4 <ANTCTRL_enterThread+0x29c>)
 802572e:	215c      	movs	r1, #92	; 0x5c
 8025730:	f019 fe15 	bl	803f35e <strrchr>
 8025734:	b330      	cbz	r0, 8025784 <ANTCTRL_enterThread+0x25c>
 8025736:	215c      	movs	r1, #92	; 0x5c
 8025738:	4822      	ldr	r0, [pc, #136]	; (80257c4 <ANTCTRL_enterThread+0x29c>)
 802573a:	f019 fe10 	bl	803f35e <strrchr>
 802573e:	1c41      	adds	r1, r0, #1
 8025740:	e777      	b.n	8025632 <ANTCTRL_enterThread+0x10a>
 8025742:	4820      	ldr	r0, [pc, #128]	; (80257c4 <ANTCTRL_enterThread+0x29c>)
 8025744:	215c      	movs	r1, #92	; 0x5c
 8025746:	f019 fe0a 	bl	803f35e <strrchr>
 802574a:	b1c8      	cbz	r0, 8025780 <ANTCTRL_enterThread+0x258>
 802574c:	215c      	movs	r1, #92	; 0x5c
 802574e:	481d      	ldr	r0, [pc, #116]	; (80257c4 <ANTCTRL_enterThread+0x29c>)
 8025750:	f019 fe05 	bl	803f35e <strrchr>
 8025754:	1c41      	adds	r1, r0, #1
 8025756:	e7bc      	b.n	80256d2 <ANTCTRL_enterThread+0x1aa>
 8025758:	b2d2      	uxtb	r2, r2
 802575a:	2102      	movs	r1, #2
 802575c:	f7ff fbe0 	bl	8024f20 <DIAGNOSTIC_sendCommandResponse(COMM_DIAGNOSTIC_messageId_e, COMM_responseCodes_t, COMM_DIAGNOSTIC_errorCode_e)>
 8025760:	e7aa      	b.n	80256b8 <ANTCTRL_enterThread+0x190>
 8025762:	b2d2      	uxtb	r2, r2
 8025764:	2103      	movs	r1, #3
 8025766:	f7ff fbdb 	bl	8024f20 <DIAGNOSTIC_sendCommandResponse(COMM_DIAGNOSTIC_messageId_e, COMM_responseCodes_t, COMM_DIAGNOSTIC_errorCode_e)>
 802576a:	e750      	b.n	802560e <ANTCTRL_enterThread+0xe6>
 802576c:	b2d2      	uxtb	r2, r2
 802576e:	2103      	movs	r1, #3
 8025770:	f7fe fbfc 	bl	8023f6c <CCP_sendCmdResponse>
 8025774:	e74b      	b.n	802560e <ANTCTRL_enterThread+0xe6>
 8025776:	b2d2      	uxtb	r2, r2
 8025778:	2102      	movs	r1, #2
 802577a:	f7fe fbf7 	bl	8023f6c <CCP_sendCmdResponse>
 802577e:	e79b      	b.n	80256b8 <ANTCTRL_enterThread+0x190>
 8025780:	4910      	ldr	r1, [pc, #64]	; (80257c4 <ANTCTRL_enterThread+0x29c>)
 8025782:	e7a6      	b.n	80256d2 <ANTCTRL_enterThread+0x1aa>
 8025784:	490f      	ldr	r1, [pc, #60]	; (80257c4 <ANTCTRL_enterThread+0x29c>)
 8025786:	e754      	b.n	8025632 <ANTCTRL_enterThread+0x10a>
 8025788:	480e      	ldr	r0, [pc, #56]	; (80257c4 <ANTCTRL_enterThread+0x29c>)
 802578a:	215c      	movs	r1, #92	; 0x5c
 802578c:	f019 fde7 	bl	803f35e <strrchr>
 8025790:	b128      	cbz	r0, 802579e <ANTCTRL_enterThread+0x276>
 8025792:	215c      	movs	r1, #92	; 0x5c
 8025794:	480b      	ldr	r0, [pc, #44]	; (80257c4 <ANTCTRL_enterThread+0x29c>)
 8025796:	f019 fde2 	bl	803f35e <strrchr>
 802579a:	1c41      	adds	r1, r0, #1
 802579c:	e7c0      	b.n	8025720 <ANTCTRL_enterThread+0x1f8>
 802579e:	4909      	ldr	r1, [pc, #36]	; (80257c4 <ANTCTRL_enterThread+0x29c>)
 80257a0:	e7be      	b.n	8025720 <ANTCTRL_enterThread+0x1f8>
 80257a2:	bf00      	nop
 80257a4:	0803c499 	.word	0x0803c499
 80257a8:	0803c561 	.word	0x0803c561
 80257ac:	2000de14 	.word	0x2000de14
 80257b0:	2000f630 	.word	0x2000f630
 80257b4:	2000e480 	.word	0x2000e480
 80257b8:	2000e481 	.word	0x2000e481
 80257bc:	20004a24 	.word	0x20004a24
 80257c0:	20004afc 	.word	0x20004afc
 80257c4:	08044390 	.word	0x08044390
 80257c8:	08044404 	.word	0x08044404
 80257cc:	080443cc 	.word	0x080443cc
 80257d0:	080443f0 	.word	0x080443f0

080257d4 <ANTCTRL_setEvent>:
 80257d4:	4601      	mov	r1, r0
 80257d6:	2200      	movs	r2, #0
 80257d8:	4801      	ldr	r0, [pc, #4]	; (80257e0 <ANTCTRL_setEvent+0xc>)
 80257da:	f013 bccd 	b.w	8039178 <_tx_event_flags_set>
 80257de:	bf00      	nop
 80257e0:	20004a24 	.word	0x20004a24

080257e4 <ANTCTRL_getLastTaskId>:
 80257e4:	b508      	push	{r3, lr}
 80257e6:	4802      	ldr	r0, [pc, #8]	; (80257f0 <ANTCTRL_getLastTaskId+0xc>)
 80257e8:	f006 fbf4 	bl	802bfd4 <TaskManager::getLastTask()>
 80257ec:	7840      	ldrb	r0, [r0, #1]
 80257ee:	bd08      	pop	{r3, pc}
 80257f0:	20004afc 	.word	0x20004afc
 80257f4:	8101b108 	.word	0x8101b108
 80257f8:	8400b0b0 	.word	0x8400b0b0
 80257fc:	00000000 	.word	0x00000000

08025800 <ANTCTRL_getLastTaskPayload>:
 8025800:	4801      	ldr	r0, [pc, #4]	; (8025808 <ANTCTRL_getLastTaskPayload+0x8>)
 8025802:	f006 bbe9 	b.w	802bfd8 <TaskManager::getLastTaskPayload()>
 8025806:	bf00      	nop
 8025808:	20004afc 	.word	0x20004afc

0802580c <_GLOBAL__sub_I_ANTCTRL_thread>:
 802580c:	b508      	push	{r3, lr}
 802580e:	4a06      	ldr	r2, [pc, #24]	; (8025828 <_GLOBAL__sub_I_ANTCTRL_thread+0x1c>)
 8025810:	4906      	ldr	r1, [pc, #24]	; (802582c <_GLOBAL__sub_I_ANTCTRL_thread+0x20>)
 8025812:	ed9f 0a07 	vldr	s0, [pc, #28]	; 8025830 <_GLOBAL__sub_I_ANTCTRL_thread+0x24>
 8025816:	4807      	ldr	r0, [pc, #28]	; (8025834 <_GLOBAL__sub_I_ANTCTRL_thread+0x28>)
 8025818:	f00a fbfc 	bl	8030014 <Nest::Nest(float, float (*)(), float (*)())>
 802581c:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8025820:	4805      	ldr	r0, [pc, #20]	; (8025838 <_GLOBAL__sub_I_ANTCTRL_thread+0x2c>)
 8025822:	f006 ba8b 	b.w	802bd3c <TaskManager::TaskManager()>
 8025826:	bf00      	nop
 8025828:	080254ad 	.word	0x080254ad
 802582c:	08025471 	.word	0x08025471
 8025830:	44d941ec 	.word	0x44d941ec
 8025834:	20004b30 	.word	0x20004b30
 8025838:	20004afc 	.word	0x20004afc

0802583c <ATTIC_ENTRY_errorStateMachine(unsigned long)>:
 802583c:	b5f0      	push	{r4, r5, r6, r7, lr}
 802583e:	4e55      	ldr	r6, [pc, #340]	; (8025994 <ATTIC_ENTRY_errorStateMachine(unsigned long)+0x158>)
 8025840:	b087      	sub	sp, #28
 8025842:	460f      	mov	r7, r1
 8025844:	2100      	movs	r1, #0
 8025846:	4604      	mov	r4, r0
 8025848:	f006 fa40 	bl	802bccc <TaskStatus::TaskStatus(TaskStatus::Result_e)>
 802584c:	7975      	ldrb	r5, [r6, #5]
 802584e:	2d01      	cmp	r5, #1
 8025850:	d018      	beq.n	8025884 <ATTIC_ENTRY_errorStateMachine(unsigned long)+0x48>
 8025852:	2d02      	cmp	r5, #2
 8025854:	d047      	beq.n	80258e6 <ATTIC_ENTRY_errorStateMachine(unsigned long)+0xaa>
 8025856:	b335      	cbz	r5, 80258a6 <ATTIC_ENTRY_errorStateMachine(unsigned long)+0x6a>
 8025858:	2302      	movs	r3, #2
 802585a:	484f      	ldr	r0, [pc, #316]	; (8025998 <ATTIC_ENTRY_errorStateMachine(unsigned long)+0x15c>)
 802585c:	7023      	strb	r3, [r4, #0]
 802585e:	212f      	movs	r1, #47	; 0x2f
 8025860:	f019 fd7d 	bl	803f35e <strrchr>
 8025864:	2800      	cmp	r0, #0
 8025866:	d059      	beq.n	802591c <ATTIC_ENTRY_errorStateMachine(unsigned long)+0xe0>
 8025868:	212f      	movs	r1, #47	; 0x2f
 802586a:	484b      	ldr	r0, [pc, #300]	; (8025998 <ATTIC_ENTRY_errorStateMachine(unsigned long)+0x15c>)
 802586c:	f019 fd77 	bl	803f35e <strrchr>
 8025870:	1c41      	adds	r1, r0, #1
 8025872:	4b4a      	ldr	r3, [pc, #296]	; (802599c <ATTIC_ENTRY_errorStateMachine(unsigned long)+0x160>)
 8025874:	f44f 7298 	mov.w	r2, #304	; 0x130
 8025878:	2000      	movs	r0, #0
 802587a:	f7fc ff8d 	bl	8022798 <DEBUG_logMsg>
 802587e:	4620      	mov	r0, r4
 8025880:	b007      	add	sp, #28
 8025882:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8025884:	7832      	ldrb	r2, [r6, #0]
 8025886:	79f3      	ldrb	r3, [r6, #7]
 8025888:	2a05      	cmp	r2, #5
 802588a:	4639      	mov	r1, r7
 802588c:	a804      	add	r0, sp, #16
 802588e:	bf94      	ite	ls
 8025890:	2200      	movls	r2, #0
 8025892:	2201      	movhi	r2, #1
 8025894:	f002 feca 	bl	802862c <ATTIC_EXIT_runTask(unsigned long, ATTIC_EXIT_stage_t, bool)>
 8025898:	a904      	add	r1, sp, #16
 802589a:	4620      	mov	r0, r4
 802589c:	f006 fa2c 	bl	802bcf8 <TaskStatus::operator=(TaskStatus const&)>
 80258a0:	4620      	mov	r0, r4
 80258a2:	b007      	add	sp, #28
 80258a4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80258a6:	a802      	add	r0, sp, #8
 80258a8:	2101      	movs	r1, #1
 80258aa:	f006 fa0f 	bl	802bccc <TaskStatus::TaskStatus(TaskStatus::Result_e)>
 80258ae:	7833      	ldrb	r3, [r6, #0]
 80258b0:	3b02      	subs	r3, #2
 80258b2:	2b08      	cmp	r3, #8
 80258b4:	d810      	bhi.n	80258d8 <ATTIC_ENTRY_errorStateMachine(unsigned long)+0x9c>
 80258b6:	e8df f003 	tbb	[pc, r3]
 80258ba:	3c52      	.short	0x3c52
 80258bc:	483c610f 	.word	0x483c610f
 80258c0:	0f05      	.short	0x0f05
 80258c2:	05          	.byte	0x05
 80258c3:	00          	.byte	0x00
 80258c4:	a804      	add	r0, sp, #16
 80258c6:	210b      	movs	r1, #11
 80258c8:	79f3      	ldrb	r3, [r6, #7]
 80258ca:	463a      	mov	r2, r7
 80258cc:	f001 fe36 	bl	802753c <ATTIC_ENTRY_homingErrorHandler(ROBOT_axisIndex_t, unsigned long, bool)>
 80258d0:	a904      	add	r1, sp, #16
 80258d2:	a802      	add	r0, sp, #8
 80258d4:	f006 fa10 	bl	802bcf8 <TaskStatus::operator=(TaskStatus const&)>
 80258d8:	a902      	add	r1, sp, #8
 80258da:	4620      	mov	r0, r4
 80258dc:	f006 fa0c 	bl	802bcf8 <TaskStatus::operator=(TaskStatus const&)>
 80258e0:	4620      	mov	r0, r4
 80258e2:	b007      	add	sp, #28
 80258e4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80258e6:	2100      	movs	r1, #0
 80258e8:	4630      	mov	r0, r6
 80258ea:	f002 fcf7 	bl	80282dc <SM_RUNNER_setError>
 80258ee:	4630      	mov	r0, r6
 80258f0:	f002 fd08 	bl	8028304 <SM_RUNNER_restart>
 80258f4:	4b2a      	ldr	r3, [pc, #168]	; (80259a0 <ATTIC_ENTRY_errorStateMachine(unsigned long)+0x164>)
 80258f6:	7b72      	ldrb	r2, [r6, #13]
 80258f8:	7e1b      	ldrb	r3, [r3, #24]
 80258fa:	429a      	cmp	r2, r3
 80258fc:	d204      	bcs.n	8025908 <ATTIC_ENTRY_errorStateMachine(unsigned long)+0xcc>
 80258fe:	2301      	movs	r3, #1
 8025900:	4620      	mov	r0, r4
 8025902:	7023      	strb	r3, [r4, #0]
 8025904:	b007      	add	sp, #28
 8025906:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8025908:	4629      	mov	r1, r5
 802590a:	a804      	add	r0, sp, #16
 802590c:	220f      	movs	r2, #15
 802590e:	f006 f9e3 	bl	802bcd8 <TaskStatus::TaskStatus(TaskStatus::Result_e, unsigned int)>
 8025912:	a904      	add	r1, sp, #16
 8025914:	4620      	mov	r0, r4
 8025916:	f006 f9ef 	bl	802bcf8 <TaskStatus::operator=(TaskStatus const&)>
 802591a:	e7c1      	b.n	80258a0 <ATTIC_ENTRY_errorStateMachine(unsigned long)+0x64>
 802591c:	481e      	ldr	r0, [pc, #120]	; (8025998 <ATTIC_ENTRY_errorStateMachine(unsigned long)+0x15c>)
 802591e:	215c      	movs	r1, #92	; 0x5c
 8025920:	f019 fd1d 	bl	803f35e <strrchr>
 8025924:	b178      	cbz	r0, 8025946 <ATTIC_ENTRY_errorStateMachine(unsigned long)+0x10a>
 8025926:	215c      	movs	r1, #92	; 0x5c
 8025928:	481b      	ldr	r0, [pc, #108]	; (8025998 <ATTIC_ENTRY_errorStateMachine(unsigned long)+0x15c>)
 802592a:	f019 fd18 	bl	803f35e <strrchr>
 802592e:	1c41      	adds	r1, r0, #1
 8025930:	e79f      	b.n	8025872 <ATTIC_ENTRY_errorStateMachine(unsigned long)+0x36>
 8025932:	79f1      	ldrb	r1, [r6, #7]
 8025934:	a804      	add	r0, sp, #16
 8025936:	220f      	movs	r2, #15
 8025938:	f002 f972 	bl	8027c20 <ACTIONS_stop(bool, ROBOT_axisIndex_t)>
 802593c:	a904      	add	r1, sp, #16
 802593e:	a802      	add	r0, sp, #8
 8025940:	f006 f9da 	bl	802bcf8 <TaskStatus::operator=(TaskStatus const&)>
 8025944:	e7c8      	b.n	80258d8 <ATTIC_ENTRY_errorStateMachine(unsigned long)+0x9c>
 8025946:	4914      	ldr	r1, [pc, #80]	; (8025998 <ATTIC_ENTRY_errorStateMachine(unsigned long)+0x15c>)
 8025948:	e793      	b.n	8025872 <ATTIC_ENTRY_errorStateMachine(unsigned long)+0x36>
 802594a:	79f1      	ldrb	r1, [r6, #7]
 802594c:	a804      	add	r0, sp, #16
 802594e:	220a      	movs	r2, #10
 8025950:	f002 f966 	bl	8027c20 <ACTIONS_stop(bool, ROBOT_axisIndex_t)>
 8025954:	a904      	add	r1, sp, #16
 8025956:	a802      	add	r0, sp, #8
 8025958:	f006 f9ce 	bl	802bcf8 <TaskStatus::operator=(TaskStatus const&)>
 802595c:	e7bc      	b.n	80258d8 <ATTIC_ENTRY_errorStateMachine(unsigned long)+0x9c>
 802595e:	4b11      	ldr	r3, [pc, #68]	; (80259a4 <ATTIC_ENTRY_errorStateMachine(unsigned long)+0x168>)
 8025960:	79f1      	ldrb	r1, [r6, #7]
 8025962:	881b      	ldrh	r3, [r3, #0]
 8025964:	f8ad 3004 	strh.w	r3, [sp, #4]
 8025968:	a804      	add	r0, sp, #16
 802596a:	2302      	movs	r3, #2
 802596c:	aa01      	add	r2, sp, #4
 802596e:	f002 f9a7 	bl	8027cc0 <ACTIONS_stopList(bool, ROBOT_axisIndex_t const*, unsigned char)>
 8025972:	a904      	add	r1, sp, #16
 8025974:	a802      	add	r0, sp, #8
 8025976:	f006 f9bf 	bl	802bcf8 <TaskStatus::operator=(TaskStatus const&)>
 802597a:	e7ad      	b.n	80258d8 <ATTIC_ENTRY_errorStateMachine(unsigned long)+0x9c>
 802597c:	a804      	add	r0, sp, #16
 802597e:	79f3      	ldrb	r3, [r6, #7]
 8025980:	463a      	mov	r2, r7
 8025982:	210a      	movs	r1, #10
 8025984:	f001 fdda 	bl	802753c <ATTIC_ENTRY_homingErrorHandler(ROBOT_axisIndex_t, unsigned long, bool)>
 8025988:	a904      	add	r1, sp, #16
 802598a:	a802      	add	r0, sp, #8
 802598c:	f006 f9b4 	bl	802bcf8 <TaskStatus::operator=(TaskStatus const&)>
 8025990:	e7a2      	b.n	80258d8 <ATTIC_ENTRY_errorStateMachine(unsigned long)+0x9c>
 8025992:	bf00      	nop
 8025994:	20004b74 	.word	0x20004b74
 8025998:	08044428 	.word	0x08044428
 802599c:	08044470 	.word	0x08044470
 80259a0:	2000016c 	.word	0x2000016c
 80259a4:	08044620 	.word	0x08044620

080259a8 <ATTIC_ENTRY_mainStateMachine(unsigned long)>:
 80259a8:	b5f0      	push	{r4, r5, r6, r7, lr}
 80259aa:	4e9a      	ldr	r6, [pc, #616]	; (8025c14 <ATTIC_ENTRY_mainStateMachine(unsigned long)+0x26c>)
 80259ac:	b099      	sub	sp, #100	; 0x64
 80259ae:	460d      	mov	r5, r1
 80259b0:	2100      	movs	r1, #0
 80259b2:	4604      	mov	r4, r0
 80259b4:	f006 f98a 	bl	802bccc <TaskStatus::TaskStatus(TaskStatus::Result_e)>
 80259b8:	7833      	ldrb	r3, [r6, #0]
 80259ba:	2b0b      	cmp	r3, #11
 80259bc:	f200 810a 	bhi.w	8025bd4 <ATTIC_ENTRY_mainStateMachine(unsigned long)+0x22c>
 80259c0:	e8df f013 	tbh	[pc, r3, lsl #1]
 80259c4:	00230019 	.word	0x00230019
 80259c8:	004a002e 	.word	0x004a002e
 80259cc:	00630058 	.word	0x00630058
 80259d0:	00930077 	.word	0x00930077
 80259d4:	00c300a2 	.word	0x00c300a2
 80259d8:	000c00ce 	.word	0x000c00ce
 80259dc:	2180      	movs	r1, #128	; 0x80
 80259de:	488e      	ldr	r0, [pc, #568]	; (8025c18 <ATTIC_ENTRY_mainStateMachine(unsigned long)+0x270>)
 80259e0:	f7fd f86c 	bl	8022abc <Robot::updateArticulation(Articulation::State_e)>
 80259e4:	488b      	ldr	r0, [pc, #556]	; (8025c14 <ATTIC_ENTRY_mainStateMachine(unsigned long)+0x26c>)
 80259e6:	2101      	movs	r1, #1
 80259e8:	f002 fc8a 	bl	8028300 <SM_RUNNER_setComplete>
 80259ec:	2301      	movs	r3, #1
 80259ee:	7023      	strb	r3, [r4, #0]
 80259f0:	4620      	mov	r0, r4
 80259f2:	b019      	add	sp, #100	; 0x64
 80259f4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80259f6:	78b1      	ldrb	r1, [r6, #2]
 80259f8:	a814      	add	r0, sp, #80	; 0x50
 80259fa:	2200      	movs	r2, #0
 80259fc:	f002 f89a 	bl	8027b34 <ACTIONS_powerAllAxis(bool, AXIS_powerState_t)>
 8025a00:	a914      	add	r1, sp, #80	; 0x50
 8025a02:	4620      	mov	r0, r4
 8025a04:	f006 f978 	bl	802bcf8 <TaskStatus::operator=(TaskStatus const&)>
 8025a08:	e7f2      	b.n	80259f0 <ATTIC_ENTRY_mainStateMachine(unsigned long)+0x48>
 8025a0a:	78b1      	ldrb	r1, [r6, #2]
 8025a0c:	a814      	add	r0, sp, #80	; 0x50
 8025a0e:	2301      	movs	r3, #1
 8025a10:	220f      	movs	r2, #15
 8025a12:	f002 f81b 	bl	8027a4c <ACTIONS_power(bool, ROBOT_axisIndex_t, AXIS_powerState_t)>
 8025a16:	a914      	add	r1, sp, #80	; 0x50
 8025a18:	4620      	mov	r0, r4
 8025a1a:	f006 f96d 	bl	802bcf8 <TaskStatus::operator=(TaskStatus const&)>
 8025a1e:	e7e7      	b.n	80259f0 <ATTIC_ENTRY_mainStateMachine(unsigned long)+0x48>
 8025a20:	4b7e      	ldr	r3, [pc, #504]	; (8025c1c <ATTIC_ENTRY_mainStateMachine(unsigned long)+0x274>)
 8025a22:	e9d3 0102 	ldrd	r0, r1, [r3, #8]
 8025a26:	889b      	ldrh	r3, [r3, #4]
 8025a28:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8025a2c:	ab10      	add	r3, sp, #64	; 0x40
 8025a2e:	e883 0003 	stmia.w	r3, {r0, r1}
 8025a32:	2500      	movs	r5, #0
 8025a34:	aa0c      	add	r2, sp, #48	; 0x30
 8025a36:	2002      	movs	r0, #2
 8025a38:	78b1      	ldrb	r1, [r6, #2]
 8025a3a:	f8ad 5030 	strh.w	r5, [sp, #48]	; 0x30
 8025a3e:	e9cd 2000 	strd	r2, r0, [sp]
 8025a42:	e9cd 5502 	strd	r5, r5, [sp, #8]
 8025a46:	a814      	add	r0, sp, #80	; 0x50
 8025a48:	aa0a      	add	r2, sp, #40	; 0x28
 8025a4a:	f001 ffc7 	bl	80279dc <ACTIONS_moveList(bool, ROBOT_axisIndex_t const*, float*, AXIS_moveType_t*, unsigned char, unsigned int, AXIS_mode_t)>
 8025a4e:	a914      	add	r1, sp, #80	; 0x50
 8025a50:	4620      	mov	r0, r4
 8025a52:	f006 f951 	bl	802bcf8 <TaskStatus::operator=(TaskStatus const&)>
 8025a56:	e7cb      	b.n	80259f0 <ATTIC_ENTRY_mainStateMachine(unsigned long)+0x48>
 8025a58:	2300      	movs	r3, #0
 8025a5a:	78b1      	ldrb	r1, [r6, #2]
 8025a5c:	9300      	str	r3, [sp, #0]
 8025a5e:	a814      	add	r0, sp, #80	; 0x50
 8025a60:	eeb1 0a08 	vmov.f32	s0, #24	; 0x40c00000  6.0
 8025a64:	220f      	movs	r2, #15
 8025a66:	f001 fecf 	bl	8027808 <ACTIONS_move(bool, ROBOT_axisIndex_t, float, AXIS_moveType_t, AXIS_mode_t)>
 8025a6a:	a914      	add	r1, sp, #80	; 0x50
 8025a6c:	4620      	mov	r0, r4
 8025a6e:	f006 f943 	bl	802bcf8 <TaskStatus::operator=(TaskStatus const&)>
 8025a72:	e7bd      	b.n	80259f0 <ATTIC_ENTRY_mainStateMachine(unsigned long)+0x48>
 8025a74:	78b1      	ldrb	r1, [r6, #2]
 8025a76:	a814      	add	r0, sp, #80	; 0x50
 8025a78:	2301      	movs	r3, #1
 8025a7a:	220a      	movs	r2, #10
 8025a7c:	f001 ffe6 	bl	8027a4c <ACTIONS_power(bool, ROBOT_axisIndex_t, AXIS_powerState_t)>
 8025a80:	a914      	add	r1, sp, #80	; 0x50
 8025a82:	4620      	mov	r0, r4
 8025a84:	f006 f938 	bl	802bcf8 <TaskStatus::operator=(TaskStatus const&)>
 8025a88:	e7b2      	b.n	80259f0 <ATTIC_ENTRY_mainStateMachine(unsigned long)+0x48>
 8025a8a:	4b65      	ldr	r3, [pc, #404]	; (8025c20 <ATTIC_ENTRY_mainStateMachine(unsigned long)+0x278>)
 8025a8c:	78b1      	ldrb	r1, [r6, #2]
 8025a8e:	ed93 0a00 	vldr	s0, [r3]
 8025a92:	eddf 1a64 	vldr	s3, [pc, #400]	; 8025c24 <ATTIC_ENTRY_mainStateMachine(unsigned long)+0x27c>
 8025a96:	ed9f 1a64 	vldr	s2, [pc, #400]	; 8025c28 <ATTIC_ENTRY_mainStateMachine(unsigned long)+0x280>
 8025a9a:	a814      	add	r0, sp, #80	; 0x50
 8025a9c:	eef1 0a0a 	vmov.f32	s1, #26	; 0x40d00000  6.5
 8025aa0:	2301      	movs	r3, #1
 8025aa2:	220a      	movs	r2, #10
 8025aa4:	f001 fe08 	bl	80276b8 <ACTIONS_home(bool, ROBOT_axisIndex_t, AXIS_homeType_t, float, float, float, float)>
 8025aa8:	a914      	add	r1, sp, #80	; 0x50
 8025aaa:	4620      	mov	r0, r4
 8025aac:	f006 f924 	bl	802bcf8 <TaskStatus::operator=(TaskStatus const&)>
 8025ab0:	e79e      	b.n	80259f0 <ATTIC_ENTRY_mainStateMachine(unsigned long)+0x48>
 8025ab2:	4b5a      	ldr	r3, [pc, #360]	; (8025c1c <ATTIC_ENTRY_mainStateMachine(unsigned long)+0x274>)
 8025ab4:	78b1      	ldrb	r1, [r6, #2]
 8025ab6:	8a1b      	ldrh	r3, [r3, #16]
 8025ab8:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8025abc:	2002      	movs	r0, #2
 8025abe:	2300      	movs	r3, #0
 8025ac0:	9001      	str	r0, [sp, #4]
 8025ac2:	2200      	movs	r2, #0
 8025ac4:	a80c      	add	r0, sp, #48	; 0x30
 8025ac6:	e9cd 3302 	strd	r3, r3, [sp, #8]
 8025aca:	9000      	str	r0, [sp, #0]
 8025acc:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 8025ad0:	a814      	add	r0, sp, #80	; 0x50
 8025ad2:	9210      	str	r2, [sp, #64]	; 0x40
 8025ad4:	4d55      	ldr	r5, [pc, #340]	; (8025c2c <ATTIC_ENTRY_mainStateMachine(unsigned long)+0x284>)
 8025ad6:	9511      	str	r5, [sp, #68]	; 0x44
 8025ad8:	ab10      	add	r3, sp, #64	; 0x40
 8025ada:	aa0a      	add	r2, sp, #40	; 0x28
 8025adc:	f001 ff7e 	bl	80279dc <ACTIONS_moveList(bool, ROBOT_axisIndex_t const*, float*, AXIS_moveType_t*, unsigned char, unsigned int, AXIS_mode_t)>
 8025ae0:	a914      	add	r1, sp, #80	; 0x50
 8025ae2:	4620      	mov	r0, r4
 8025ae4:	f006 f908 	bl	802bcf8 <TaskStatus::operator=(TaskStatus const&)>
 8025ae8:	e782      	b.n	80259f0 <ATTIC_ENTRY_mainStateMachine(unsigned long)+0x48>
 8025aea:	4b51      	ldr	r3, [pc, #324]	; (8025c30 <ATTIC_ENTRY_mainStateMachine(unsigned long)+0x288>)
 8025aec:	78b1      	ldrb	r1, [r6, #2]
 8025aee:	ed93 0a03 	vldr	s0, [r3, #12]
 8025af2:	2300      	movs	r3, #0
 8025af4:	a814      	add	r0, sp, #80	; 0x50
 8025af6:	9300      	str	r3, [sp, #0]
 8025af8:	220a      	movs	r2, #10
 8025afa:	f001 fe85 	bl	8027808 <ACTIONS_move(bool, ROBOT_axisIndex_t, float, AXIS_moveType_t, AXIS_mode_t)>
 8025afe:	a914      	add	r1, sp, #80	; 0x50
 8025b00:	4620      	mov	r0, r4
 8025b02:	f006 f8f9 	bl	802bcf8 <TaskStatus::operator=(TaskStatus const&)>
 8025b06:	e773      	b.n	80259f0 <ATTIC_ENTRY_mainStateMachine(unsigned long)+0x48>
 8025b08:	78b3      	ldrb	r3, [r6, #2]
 8025b0a:	462a      	mov	r2, r5
 8025b0c:	a814      	add	r0, sp, #80	; 0x50
 8025b0e:	210a      	movs	r1, #10
 8025b10:	f005 fcb8 	bl	802b484 <TORQUE_SHARING_runTask(ROBOT_axisIndex_t, unsigned long, bool)>
 8025b14:	a914      	add	r1, sp, #80	; 0x50
 8025b16:	4620      	mov	r0, r4
 8025b18:	f006 f8ee 	bl	802bcf8 <TaskStatus::operator=(TaskStatus const&)>
 8025b1c:	7823      	ldrb	r3, [r4, #0]
 8025b1e:	2b01      	cmp	r3, #1
 8025b20:	f47f af66 	bne.w	80259f0 <ATTIC_ENTRY_mainStateMachine(unsigned long)+0x48>
 8025b24:	a814      	add	r0, sp, #80	; 0x50
 8025b26:	210b      	movs	r1, #11
 8025b28:	f005 fcd2 	bl	802b4d0 <TORQUE_SHARING_getSecondaryAxisHomingTorque(ROBOT_axisIndex_t)>
 8025b2c:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 8025b30:	2b00      	cmp	r3, #0
 8025b32:	d04c      	beq.n	8025bce <ATTIC_ENTRY_mainStateMachine(unsigned long)+0x226>
 8025b34:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8025b36:	4b3f      	ldr	r3, [pc, #252]	; (8025c34 <ATTIC_ENTRY_mainStateMachine(unsigned long)+0x28c>)
 8025b38:	6811      	ldr	r1, [r2, #0]
 8025b3a:	6019      	str	r1, [r3, #0]
 8025b3c:	6851      	ldr	r1, [r2, #4]
 8025b3e:	6059      	str	r1, [r3, #4]
 8025b40:	6891      	ldr	r1, [r2, #8]
 8025b42:	6099      	str	r1, [r3, #8]
 8025b44:	68d2      	ldr	r2, [r2, #12]
 8025b46:	60da      	str	r2, [r3, #12]
 8025b48:	e752      	b.n	80259f0 <ATTIC_ENTRY_mainStateMachine(unsigned long)+0x48>
 8025b4a:	78b1      	ldrb	r1, [r6, #2]
 8025b4c:	a814      	add	r0, sp, #80	; 0x50
 8025b4e:	2301      	movs	r3, #1
 8025b50:	220b      	movs	r2, #11
 8025b52:	f001 ff7b 	bl	8027a4c <ACTIONS_power(bool, ROBOT_axisIndex_t, AXIS_powerState_t)>
 8025b56:	a914      	add	r1, sp, #80	; 0x50
 8025b58:	4620      	mov	r0, r4
 8025b5a:	f006 f8cd 	bl	802bcf8 <TaskStatus::operator=(TaskStatus const&)>
 8025b5e:	e747      	b.n	80259f0 <ATTIC_ENTRY_mainStateMachine(unsigned long)+0x48>
 8025b60:	4d2e      	ldr	r5, [pc, #184]	; (8025c1c <ATTIC_ENTRY_mainStateMachine(unsigned long)+0x274>)
 8025b62:	4f35      	ldr	r7, [pc, #212]	; (8025c38 <ATTIC_ENTRY_mainStateMachine(unsigned long)+0x290>)
 8025b64:	f105 031c 	add.w	r3, r5, #28
 8025b68:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 8025b6a:	f10d 0c40 	add.w	ip, sp, #64	; 0x40
 8025b6e:	e88c 000f 	stmia.w	ip, {r0, r1, r2, r3}
 8025b72:	f105 032c 	add.w	r3, r5, #44	; 0x2c
 8025b76:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 8025b78:	edd7 7a00 	vldr	s15, [r7]
 8025b7c:	696f      	ldr	r7, [r5, #20]
 8025b7e:	f8cd c008 	str.w	ip, [sp, #8]
 8025b82:	9706      	str	r7, [sp, #24]
 8025b84:	69ad      	ldr	r5, [r5, #24]
 8025b86:	9507      	str	r5, [sp, #28]
 8025b88:	af14      	add	r7, sp, #80	; 0x50
 8025b8a:	e887 000f 	stmia.w	r7, {r0, r1, r2, r3}
 8025b8e:	78b1      	ldrb	r1, [r6, #2]
 8025b90:	9703      	str	r7, [sp, #12]
 8025b92:	9f06      	ldr	r7, [sp, #24]
 8025b94:	9708      	str	r7, [sp, #32]
 8025b96:	eeb1 7a67 	vneg.f32	s14, s15
 8025b9a:	ab0c      	add	r3, sp, #48	; 0x30
 8025b9c:	4e25      	ldr	r6, [pc, #148]	; (8025c34 <ATTIC_ENTRY_mainStateMachine(unsigned long)+0x28c>)
 8025b9e:	9f07      	ldr	r7, [sp, #28]
 8025ba0:	9300      	str	r3, [sp, #0]
 8025ba2:	2504      	movs	r5, #4
 8025ba4:	a80a      	add	r0, sp, #40	; 0x28
 8025ba6:	edcd 7a0c 	vstr	s15, [sp, #48]	; 0x30
 8025baa:	edcd 7a0e 	vstr	s15, [sp, #56]	; 0x38
 8025bae:	ed8d 7a0d 	vstr	s14, [sp, #52]	; 0x34
 8025bb2:	ed8d 7a0f 	vstr	s14, [sp, #60]	; 0x3c
 8025bb6:	ab09      	add	r3, sp, #36	; 0x24
 8025bb8:	9709      	str	r7, [sp, #36]	; 0x24
 8025bba:	aa08      	add	r2, sp, #32
 8025bbc:	9504      	str	r5, [sp, #16]
 8025bbe:	9601      	str	r6, [sp, #4]
 8025bc0:	f001 fde8 	bl	8027794 <ACTIONS_homeList(bool, ROBOT_axisIndex_t const*, AXIS_homeType_t*, float*, float*, float*, float*, unsigned char)>
 8025bc4:	a90a      	add	r1, sp, #40	; 0x28
 8025bc6:	4620      	mov	r0, r4
 8025bc8:	f006 f896 	bl	802bcf8 <TaskStatus::operator=(TaskStatus const&)>
 8025bcc:	e710      	b.n	80259f0 <ATTIC_ENTRY_mainStateMachine(unsigned long)+0x48>
 8025bce:	2302      	movs	r3, #2
 8025bd0:	7023      	strb	r3, [r4, #0]
 8025bd2:	e70d      	b.n	80259f0 <ATTIC_ENTRY_mainStateMachine(unsigned long)+0x48>
 8025bd4:	2302      	movs	r3, #2
 8025bd6:	4819      	ldr	r0, [pc, #100]	; (8025c3c <ATTIC_ENTRY_mainStateMachine(unsigned long)+0x294>)
 8025bd8:	7023      	strb	r3, [r4, #0]
 8025bda:	212f      	movs	r1, #47	; 0x2f
 8025bdc:	f019 fbbf 	bl	803f35e <strrchr>
 8025be0:	b158      	cbz	r0, 8025bfa <ATTIC_ENTRY_mainStateMachine(unsigned long)+0x252>
 8025be2:	4816      	ldr	r0, [pc, #88]	; (8025c3c <ATTIC_ENTRY_mainStateMachine(unsigned long)+0x294>)
 8025be4:	212f      	movs	r1, #47	; 0x2f
 8025be6:	f019 fbba 	bl	803f35e <strrchr>
 8025bea:	3001      	adds	r0, #1
 8025bec:	4601      	mov	r1, r0
 8025bee:	4b14      	ldr	r3, [pc, #80]	; (8025c40 <ATTIC_ENTRY_mainStateMachine(unsigned long)+0x298>)
 8025bf0:	22fe      	movs	r2, #254	; 0xfe
 8025bf2:	2000      	movs	r0, #0
 8025bf4:	f7fc fdd0 	bl	8022798 <DEBUG_logMsg>
 8025bf8:	e6fa      	b.n	80259f0 <ATTIC_ENTRY_mainStateMachine(unsigned long)+0x48>
 8025bfa:	4810      	ldr	r0, [pc, #64]	; (8025c3c <ATTIC_ENTRY_mainStateMachine(unsigned long)+0x294>)
 8025bfc:	215c      	movs	r1, #92	; 0x5c
 8025bfe:	f019 fbae 	bl	803f35e <strrchr>
 8025c02:	b128      	cbz	r0, 8025c10 <ATTIC_ENTRY_mainStateMachine(unsigned long)+0x268>
 8025c04:	480d      	ldr	r0, [pc, #52]	; (8025c3c <ATTIC_ENTRY_mainStateMachine(unsigned long)+0x294>)
 8025c06:	215c      	movs	r1, #92	; 0x5c
 8025c08:	f019 fba9 	bl	803f35e <strrchr>
 8025c0c:	3001      	adds	r0, #1
 8025c0e:	e7ed      	b.n	8025bec <ATTIC_ENTRY_mainStateMachine(unsigned long)+0x244>
 8025c10:	480a      	ldr	r0, [pc, #40]	; (8025c3c <ATTIC_ENTRY_mainStateMachine(unsigned long)+0x294>)
 8025c12:	e7eb      	b.n	8025bec <ATTIC_ENTRY_mainStateMachine(unsigned long)+0x244>
 8025c14:	20004b74 	.word	0x20004b74
 8025c18:	2000f630 	.word	0x2000f630
 8025c1c:	08044620 	.word	0x08044620
 8025c20:	20004b6c 	.word	0x20004b6c
 8025c24:	43480000 	.word	0x43480000
 8025c28:	42340000 	.word	0x42340000
 8025c2c:	c019999a 	.word	0xc019999a
 8025c30:	20004b4c 	.word	0x20004b4c
 8025c34:	20004b5c 	.word	0x20004b5c
 8025c38:	20004b70 	.word	0x20004b70
 8025c3c:	08044428 	.word	0x08044428
 8025c40:	0804449c 	.word	0x0804449c

08025c44 <ATTIC_ENTRY_setup()>:
 8025c44:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8025c48:	b08e      	sub	sp, #56	; 0x38
 8025c4a:	ad09      	add	r5, sp, #36	; 0x24
 8025c4c:	492a      	ldr	r1, [pc, #168]	; (8025cf8 <ATTIC_ENTRY_setup()+0xb4>)
 8025c4e:	4604      	mov	r4, r0
 8025c50:	4628      	mov	r0, r5
 8025c52:	f00a faa9 	bl	80301a8 <Nest::getAtticPositions()>
 8025c56:	f89d 3034 	ldrb.w	r3, [sp, #52]	; 0x34
 8025c5a:	b943      	cbnz	r3, 8025c6e <ATTIC_ENTRY_setup()+0x2a>
 8025c5c:	2206      	movs	r2, #6
 8025c5e:	2102      	movs	r1, #2
 8025c60:	4620      	mov	r0, r4
 8025c62:	f006 f839 	bl	802bcd8 <TaskStatus::TaskStatus(TaskStatus::Result_e, unsigned int)>
 8025c66:	4620      	mov	r0, r4
 8025c68:	b00e      	add	sp, #56	; 0x38
 8025c6a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8025c6e:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
 8025c72:	ad05      	add	r5, sp, #20
 8025c74:	e885 000f 	stmia.w	r5, {r0, r1, r2, r3}
 8025c78:	ad01      	add	r5, sp, #4
 8025c7a:	e885 000f 	stmia.w	r5, {r0, r1, r2, r3}
 8025c7e:	4d1f      	ldr	r5, [pc, #124]	; (8025cfc <ATTIC_ENTRY_setup()+0xb8>)
 8025c80:	4e1f      	ldr	r6, [pc, #124]	; (8025d00 <ATTIC_ENTRY_setup()+0xbc>)
 8025c82:	f8df 808c 	ldr.w	r8, [pc, #140]	; 8025d10 <ATTIC_ENTRY_setup()+0xcc>
 8025c86:	e885 000f 	stmia.w	r5, {r0, r1, r2, r3}
 8025c8a:	481e      	ldr	r0, [pc, #120]	; (8025d04 <ATTIC_ENTRY_setup()+0xc0>)
 8025c8c:	686b      	ldr	r3, [r5, #4]
 8025c8e:	6033      	str	r3, [r6, #0]
 8025c90:	210b      	movs	r1, #11
 8025c92:	f7fc ff87 	bl	8022ba4 <Robot::getAxisMechanicalRatio(ROBOT_axisIndex_t)>
 8025c96:	481b      	ldr	r0, [pc, #108]	; (8025d04 <ATTIC_ENTRY_setup()+0xc0>)
 8025c98:	2100      	movs	r1, #0
 8025c9a:	ee10 6a10 	vmov	r6, s0
 8025c9e:	f7fc ff81 	bl	8022ba4 <Robot::getAxisMechanicalRatio(ROBOT_axisIndex_t)>
 8025ca2:	4630      	mov	r0, r6
 8025ca4:	ee10 7a10 	vmov	r7, s0
 8025ca8:	f018 fbd7 	bl	803e45a <__aeabi_f2d>
 8025cac:	4b16      	ldr	r3, [pc, #88]	; (8025d08 <ATTIC_ENTRY_setup()+0xc4>)
 8025cae:	2200      	movs	r2, #0
 8025cb0:	f018 fc26 	bl	803e500 <__aeabi_dmul>
 8025cb4:	4602      	mov	r2, r0
 8025cb6:	4638      	mov	r0, r7
 8025cb8:	4616      	mov	r6, r2
 8025cba:	460f      	mov	r7, r1
 8025cbc:	f018 fbcd 	bl	803e45a <__aeabi_f2d>
 8025cc0:	4602      	mov	r2, r0
 8025cc2:	460b      	mov	r3, r1
 8025cc4:	4630      	mov	r0, r6
 8025cc6:	4639      	mov	r1, r7
 8025cc8:	f018 fcd0 	bl	803e66c <__aeabi_ddiv>
 8025ccc:	f018 fbe1 	bl	803e492 <__aeabi_d2f>
 8025cd0:	edd5 7a03 	vldr	s15, [r5, #12]
 8025cd4:	eddf 6a0d 	vldr	s13, [pc, #52]	; 8025d0c <ATTIC_ENTRY_setup()+0xc8>
 8025cd8:	ee07 0a10 	vmov	s14, r0
 8025cdc:	ee67 7a27 	vmul.f32	s15, s14, s15
 8025ce0:	2101      	movs	r1, #1
 8025ce2:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 8025ce6:	4620      	mov	r0, r4
 8025ce8:	ed88 7a00 	vstr	s14, [r8]
 8025cec:	f005 ffee 	bl	802bccc <TaskStatus::TaskStatus(TaskStatus::Result_e)>
 8025cf0:	4620      	mov	r0, r4
 8025cf2:	b00e      	add	sp, #56	; 0x38
 8025cf4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8025cf8:	20004b30 	.word	0x20004b30
 8025cfc:	20004b4c 	.word	0x20004b4c
 8025d00:	20004b6c 	.word	0x20004b6c
 8025d04:	2000f630 	.word	0x2000f630
 8025d08:	408f4000 	.word	0x408f4000
 8025d0c:	447a0000 	.word	0x447a0000
 8025d10:	20004b70 	.word	0x20004b70

08025d14 <ATTIC_ENTRY_runTask(unsigned long, bool)>:
 8025d14:	b510      	push	{r4, lr}
 8025d16:	b082      	sub	sp, #8
 8025d18:	460b      	mov	r3, r1
 8025d1a:	9200      	str	r2, [sp, #0]
 8025d1c:	4903      	ldr	r1, [pc, #12]	; (8025d2c <ATTIC_ENTRY_runTask(unsigned long, bool)+0x18>)
 8025d1e:	4a04      	ldr	r2, [pc, #16]	; (8025d30 <ATTIC_ENTRY_runTask(unsigned long, bool)+0x1c>)
 8025d20:	4604      	mov	r4, r0
 8025d22:	f002 f8fb 	bl	8027f1c <SM_RUNNER_runStateMachine>
 8025d26:	4620      	mov	r0, r4
 8025d28:	b002      	add	sp, #8
 8025d2a:	bd10      	pop	{r4, pc}
 8025d2c:	2000016c 	.word	0x2000016c
 8025d30:	20004b74 	.word	0x20004b74

08025d34 <PICK_BIN_mainStateMachine(unsigned long)>:
 8025d34:	b510      	push	{r4, lr}
 8025d36:	2100      	movs	r1, #0
 8025d38:	b084      	sub	sp, #16
 8025d3a:	4604      	mov	r4, r0
 8025d3c:	f005 ffc6 	bl	802bccc <TaskStatus::TaskStatus(TaskStatus::Result_e)>
 8025d40:	4a60      	ldr	r2, [pc, #384]	; (8025ec4 <PICK_BIN_mainStateMachine(unsigned long)+0x190>)
 8025d42:	7813      	ldrb	r3, [r2, #0]
 8025d44:	2b0f      	cmp	r3, #15
 8025d46:	f200 809c 	bhi.w	8025e82 <PICK_BIN_mainStateMachine(unsigned long)+0x14e>
 8025d4a:	e8df f003 	tbb	[pc, r3]
 8025d4e:	1d10      	.short	0x1d10
 8025d50:	544d3c2c 	.word	0x544d3c2c
 8025d54:	75706962 	.word	0x75706962
 8025d58:	908a837c 	.word	0x908a837c
 8025d5c:	0894      	.short	0x0894
 8025d5e:	2101      	movs	r1, #1
 8025d60:	4858      	ldr	r0, [pc, #352]	; (8025ec4 <PICK_BIN_mainStateMachine(unsigned long)+0x190>)
 8025d62:	7021      	strb	r1, [r4, #0]
 8025d64:	f002 facc 	bl	8028300 <SM_RUNNER_setComplete>
 8025d68:	4620      	mov	r0, r4
 8025d6a:	b004      	add	sp, #16
 8025d6c:	bd10      	pop	{r4, pc}
 8025d6e:	7891      	ldrb	r1, [r2, #2]
 8025d70:	a802      	add	r0, sp, #8
 8025d72:	2301      	movs	r3, #1
 8025d74:	2210      	movs	r2, #16
 8025d76:	f001 fe69 	bl	8027a4c <ACTIONS_power(bool, ROBOT_axisIndex_t, AXIS_powerState_t)>
 8025d7a:	a902      	add	r1, sp, #8
 8025d7c:	4620      	mov	r0, r4
 8025d7e:	f005 ffbb 	bl	802bcf8 <TaskStatus::operator=(TaskStatus const&)>
 8025d82:	4620      	mov	r0, r4
 8025d84:	b004      	add	sp, #16
 8025d86:	bd10      	pop	{r4, pc}
 8025d88:	2319      	movs	r3, #25
 8025d8a:	7891      	ldrb	r1, [r2, #2]
 8025d8c:	9300      	str	r3, [sp, #0]
 8025d8e:	a802      	add	r0, sp, #8
 8025d90:	2301      	movs	r3, #1
 8025d92:	2210      	movs	r2, #16
 8025d94:	f001 ffb2 	bl	8027cfc <ACTIONS_enableTelemetry(bool, ROBOT_axisIndex_t, bool, unsigned int)>
 8025d98:	a902      	add	r1, sp, #8
 8025d9a:	4620      	mov	r0, r4
 8025d9c:	f005 ffac 	bl	802bcf8 <TaskStatus::operator=(TaskStatus const&)>
 8025da0:	4620      	mov	r0, r4
 8025da2:	b004      	add	sp, #16
 8025da4:	bd10      	pop	{r4, pc}
 8025da6:	2300      	movs	r3, #0
 8025da8:	ed9f 0a47 	vldr	s0, [pc, #284]	; 8025ec8 <PICK_BIN_mainStateMachine(unsigned long)+0x194>
 8025dac:	7891      	ldrb	r1, [r2, #2]
 8025dae:	9300      	str	r3, [sp, #0]
 8025db0:	a802      	add	r0, sp, #8
 8025db2:	2210      	movs	r2, #16
 8025db4:	f001 fd28 	bl	8027808 <ACTIONS_move(bool, ROBOT_axisIndex_t, float, AXIS_moveType_t, AXIS_mode_t)>
 8025db8:	a902      	add	r1, sp, #8
 8025dba:	4620      	mov	r0, r4
 8025dbc:	f005 ff9c 	bl	802bcf8 <TaskStatus::operator=(TaskStatus const&)>
 8025dc0:	4620      	mov	r0, r4
 8025dc2:	b004      	add	sp, #16
 8025dc4:	bd10      	pop	{r4, pc}
 8025dc6:	4b41      	ldr	r3, [pc, #260]	; (8025ecc <PICK_BIN_mainStateMachine(unsigned long)+0x198>)
 8025dc8:	7891      	ldrb	r1, [r2, #2]
 8025dca:	ed93 0a01 	vldr	s0, [r3, #4]
 8025dce:	781a      	ldrb	r2, [r3, #0]
 8025dd0:	2300      	movs	r3, #0
 8025dd2:	a802      	add	r0, sp, #8
 8025dd4:	9300      	str	r3, [sp, #0]
 8025dd6:	f001 fd17 	bl	8027808 <ACTIONS_move(bool, ROBOT_axisIndex_t, float, AXIS_moveType_t, AXIS_mode_t)>
 8025dda:	a902      	add	r1, sp, #8
 8025ddc:	4620      	mov	r0, r4
 8025dde:	f005 ff8b 	bl	802bcf8 <TaskStatus::operator=(TaskStatus const&)>
 8025de2:	4620      	mov	r0, r4
 8025de4:	b004      	add	sp, #16
 8025de6:	bd10      	pop	{r4, pc}
 8025de8:	2300      	movs	r3, #0
 8025dea:	7891      	ldrb	r1, [r2, #2]
 8025dec:	ed9f 0a38 	vldr	s0, [pc, #224]	; 8025ed0 <PICK_BIN_mainStateMachine(unsigned long)+0x19c>
 8025df0:	9300      	str	r3, [sp, #0]
 8025df2:	a802      	add	r0, sp, #8
 8025df4:	e7dd      	b.n	8025db2 <PICK_BIN_mainStateMachine(unsigned long)+0x7e>
 8025df6:	4b37      	ldr	r3, [pc, #220]	; (8025ed4 <PICK_BIN_mainStateMachine(unsigned long)+0x1a0>)
 8025df8:	6818      	ldr	r0, [r3, #0]
 8025dfa:	6803      	ldr	r3, [r0, #0]
 8025dfc:	685b      	ldr	r3, [r3, #4]
 8025dfe:	2101      	movs	r1, #1
 8025e00:	4798      	blx	r3
 8025e02:	2800      	cmp	r0, #0
 8025e04:	bf14      	ite	ne
 8025e06:	2301      	movne	r3, #1
 8025e08:	2302      	moveq	r3, #2
 8025e0a:	4620      	mov	r0, r4
 8025e0c:	7023      	strb	r3, [r4, #0]
 8025e0e:	b004      	add	sp, #16
 8025e10:	bd10      	pop	{r4, pc}
 8025e12:	2300      	movs	r3, #0
 8025e14:	7891      	ldrb	r1, [r2, #2]
 8025e16:	ed9f 0a30 	vldr	s0, [pc, #192]	; 8025ed8 <PICK_BIN_mainStateMachine(unsigned long)+0x1a4>
 8025e1a:	9300      	str	r3, [sp, #0]
 8025e1c:	a802      	add	r0, sp, #8
 8025e1e:	e7c8      	b.n	8025db2 <PICK_BIN_mainStateMachine(unsigned long)+0x7e>
 8025e20:	4a2c      	ldr	r2, [pc, #176]	; (8025ed4 <PICK_BIN_mainStateMachine(unsigned long)+0x1a0>)
 8025e22:	4b2e      	ldr	r3, [pc, #184]	; (8025edc <PICK_BIN_mainStateMachine(unsigned long)+0x1a8>)
 8025e24:	6810      	ldr	r0, [r2, #0]
 8025e26:	6819      	ldr	r1, [r3, #0]
 8025e28:	6803      	ldr	r3, [r0, #0]
 8025e2a:	685b      	ldr	r3, [r3, #4]
 8025e2c:	e7e8      	b.n	8025e00 <PICK_BIN_mainStateMachine(unsigned long)+0xcc>
 8025e2e:	4b27      	ldr	r3, [pc, #156]	; (8025ecc <PICK_BIN_mainStateMachine(unsigned long)+0x198>)
 8025e30:	7891      	ldrb	r1, [r2, #2]
 8025e32:	ed93 0a03 	vldr	s0, [r3, #12]
 8025e36:	e7ca      	b.n	8025dce <PICK_BIN_mainStateMachine(unsigned long)+0x9a>
 8025e38:	2300      	movs	r3, #0
 8025e3a:	7891      	ldrb	r1, [r2, #2]
 8025e3c:	ed9f 0a28 	vldr	s0, [pc, #160]	; 8025ee0 <PICK_BIN_mainStateMachine(unsigned long)+0x1ac>
 8025e40:	9300      	str	r3, [sp, #0]
 8025e42:	a802      	add	r0, sp, #8
 8025e44:	e7b5      	b.n	8025db2 <PICK_BIN_mainStateMachine(unsigned long)+0x7e>
 8025e46:	2300      	movs	r3, #0
 8025e48:	7891      	ldrb	r1, [r2, #2]
 8025e4a:	ed9f 0a26 	vldr	s0, [pc, #152]	; 8025ee4 <PICK_BIN_mainStateMachine(unsigned long)+0x1b0>
 8025e4e:	9300      	str	r3, [sp, #0]
 8025e50:	a802      	add	r0, sp, #8
 8025e52:	e7ae      	b.n	8025db2 <PICK_BIN_mainStateMachine(unsigned long)+0x7e>
 8025e54:	2300      	movs	r3, #0
 8025e56:	7891      	ldrb	r1, [r2, #2]
 8025e58:	9300      	str	r3, [sp, #0]
 8025e5a:	a802      	add	r0, sp, #8
 8025e5c:	eeb0 0a00 	vmov.f32	s0, #0	; 0x40000000  2.0
 8025e60:	e7a7      	b.n	8025db2 <PICK_BIN_mainStateMachine(unsigned long)+0x7e>
 8025e62:	4b1c      	ldr	r3, [pc, #112]	; (8025ed4 <PICK_BIN_mainStateMachine(unsigned long)+0x1a0>)
 8025e64:	6818      	ldr	r0, [r3, #0]
 8025e66:	6803      	ldr	r3, [r0, #0]
 8025e68:	2102      	movs	r1, #2
 8025e6a:	685b      	ldr	r3, [r3, #4]
 8025e6c:	e7c8      	b.n	8025e00 <PICK_BIN_mainStateMachine(unsigned long)+0xcc>
 8025e6e:	7891      	ldrb	r1, [r2, #2]
 8025e70:	a802      	add	r0, sp, #8
 8025e72:	2300      	movs	r3, #0
 8025e74:	e77e      	b.n	8025d74 <PICK_BIN_mainStateMachine(unsigned long)+0x40>
 8025e76:	2319      	movs	r3, #25
 8025e78:	7891      	ldrb	r1, [r2, #2]
 8025e7a:	9300      	str	r3, [sp, #0]
 8025e7c:	a802      	add	r0, sp, #8
 8025e7e:	2300      	movs	r3, #0
 8025e80:	e787      	b.n	8025d92 <PICK_BIN_mainStateMachine(unsigned long)+0x5e>
 8025e82:	2302      	movs	r3, #2
 8025e84:	4818      	ldr	r0, [pc, #96]	; (8025ee8 <PICK_BIN_mainStateMachine(unsigned long)+0x1b4>)
 8025e86:	7023      	strb	r3, [r4, #0]
 8025e88:	212f      	movs	r1, #47	; 0x2f
 8025e8a:	f019 fa68 	bl	803f35e <strrchr>
 8025e8e:	b158      	cbz	r0, 8025ea8 <PICK_BIN_mainStateMachine(unsigned long)+0x174>
 8025e90:	4815      	ldr	r0, [pc, #84]	; (8025ee8 <PICK_BIN_mainStateMachine(unsigned long)+0x1b4>)
 8025e92:	212f      	movs	r1, #47	; 0x2f
 8025e94:	f019 fa63 	bl	803f35e <strrchr>
 8025e98:	3001      	adds	r0, #1
 8025e9a:	4601      	mov	r1, r0
 8025e9c:	4b13      	ldr	r3, [pc, #76]	; (8025eec <PICK_BIN_mainStateMachine(unsigned long)+0x1b8>)
 8025e9e:	22e0      	movs	r2, #224	; 0xe0
 8025ea0:	2000      	movs	r0, #0
 8025ea2:	f7fc fc79 	bl	8022798 <DEBUG_logMsg>
 8025ea6:	e75f      	b.n	8025d68 <PICK_BIN_mainStateMachine(unsigned long)+0x34>
 8025ea8:	480f      	ldr	r0, [pc, #60]	; (8025ee8 <PICK_BIN_mainStateMachine(unsigned long)+0x1b4>)
 8025eaa:	215c      	movs	r1, #92	; 0x5c
 8025eac:	f019 fa57 	bl	803f35e <strrchr>
 8025eb0:	b128      	cbz	r0, 8025ebe <PICK_BIN_mainStateMachine(unsigned long)+0x18a>
 8025eb2:	480d      	ldr	r0, [pc, #52]	; (8025ee8 <PICK_BIN_mainStateMachine(unsigned long)+0x1b4>)
 8025eb4:	215c      	movs	r1, #92	; 0x5c
 8025eb6:	f019 fa52 	bl	803f35e <strrchr>
 8025eba:	3001      	adds	r0, #1
 8025ebc:	e7ed      	b.n	8025e9a <PICK_BIN_mainStateMachine(unsigned long)+0x166>
 8025ebe:	480a      	ldr	r0, [pc, #40]	; (8025ee8 <PICK_BIN_mainStateMachine(unsigned long)+0x1b4>)
 8025ec0:	e7eb      	b.n	8025e9a <PICK_BIN_mainStateMachine(unsigned long)+0x166>
 8025ec2:	bf00      	nop
 8025ec4:	20004bb0 	.word	0x20004bb0
 8025ec8:	44148000 	.word	0x44148000
 8025ecc:	20004b9c 	.word	0x20004b9c
 8025ed0:	44008000 	.word	0x44008000
 8025ed4:	2000f630 	.word	0x2000f630
 8025ed8:	43f20000 	.word	0x43f20000
 8025edc:	20004b88 	.word	0x20004b88
 8025ee0:	440e0000 	.word	0x440e0000
 8025ee4:	00000000 	.word	0x00000000
 8025ee8:	0804465c 	.word	0x0804465c
 8025eec:	080446a0 	.word	0x080446a0

08025ef0 <PICK_BIN_setup()>:
 8025ef0:	b538      	push	{r3, r4, r5, lr}
 8025ef2:	2206      	movs	r2, #6
 8025ef4:	4604      	mov	r4, r0
 8025ef6:	2100      	movs	r1, #0
 8025ef8:	4829      	ldr	r0, [pc, #164]	; (8025fa0 <PICK_BIN_setup()+0xb0>)
 8025efa:	f019 fbab 	bl	803f654 <memset>
 8025efe:	4b29      	ldr	r3, [pc, #164]	; (8025fa4 <PICK_BIN_setup()+0xb4>)
 8025f00:	7c1b      	ldrb	r3, [r3, #16]
 8025f02:	2b03      	cmp	r3, #3
 8025f04:	d80f      	bhi.n	8025f26 <PICK_BIN_setup()+0x36>
 8025f06:	e8df f003 	tbb	[pc, r3]
 8025f0a:	0226      	.short	0x0226
 8025f0c:	1438      	.short	0x1438
 8025f0e:	4a26      	ldr	r2, [pc, #152]	; (8025fa8 <PICK_BIN_setup()+0xb8>)
 8025f10:	4926      	ldr	r1, [pc, #152]	; (8025fac <PICK_BIN_setup()+0xbc>)
 8025f12:	4b27      	ldr	r3, [pc, #156]	; (8025fb0 <PICK_BIN_setup()+0xc0>)
 8025f14:	f44f 7500 	mov.w	r5, #512	; 0x200
 8025f18:	f44f 5048 	mov.w	r0, #12800	; 0x3200
 8025f1c:	6015      	str	r5, [r2, #0]
 8025f1e:	f243 0201 	movw	r2, #12289	; 0x3001
 8025f22:	6008      	str	r0, [r1, #0]
 8025f24:	601a      	str	r2, [r3, #0]
 8025f26:	2101      	movs	r1, #1
 8025f28:	4620      	mov	r0, r4
 8025f2a:	f005 fecf 	bl	802bccc <TaskStatus::TaskStatus(TaskStatus::Result_e)>
 8025f2e:	4620      	mov	r0, r4
 8025f30:	bd38      	pop	{r3, r4, r5, pc}
 8025f32:	4a1d      	ldr	r2, [pc, #116]	; (8025fa8 <PICK_BIN_setup()+0xb8>)
 8025f34:	491d      	ldr	r1, [pc, #116]	; (8025fac <PICK_BIN_setup()+0xbc>)
 8025f36:	4b1e      	ldr	r3, [pc, #120]	; (8025fb0 <PICK_BIN_setup()+0xc0>)
 8025f38:	f44f 6500 	mov.w	r5, #2048	; 0x800
 8025f3c:	f44f 4048 	mov.w	r0, #51200	; 0xc800
 8025f40:	6015      	str	r5, [r2, #0]
 8025f42:	6008      	str	r0, [r1, #0]
 8025f44:	f24c 0201 	movw	r2, #49153	; 0xc001
 8025f48:	2101      	movs	r1, #1
 8025f4a:	4620      	mov	r0, r4
 8025f4c:	601a      	str	r2, [r3, #0]
 8025f4e:	f005 febd 	bl	802bccc <TaskStatus::TaskStatus(TaskStatus::Result_e)>
 8025f52:	4620      	mov	r0, r4
 8025f54:	bd38      	pop	{r3, r4, r5, pc}
 8025f56:	4a14      	ldr	r2, [pc, #80]	; (8025fa8 <PICK_BIN_setup()+0xb8>)
 8025f58:	4914      	ldr	r1, [pc, #80]	; (8025fac <PICK_BIN_setup()+0xbc>)
 8025f5a:	4b15      	ldr	r3, [pc, #84]	; (8025fb0 <PICK_BIN_setup()+0xc0>)
 8025f5c:	f44f 7580 	mov.w	r5, #256	; 0x100
 8025f60:	f44f 40c2 	mov.w	r0, #24832	; 0x6100
 8025f64:	6015      	str	r5, [r2, #0]
 8025f66:	6008      	str	r0, [r1, #0]
 8025f68:	f246 0201 	movw	r2, #24577	; 0x6001
 8025f6c:	2101      	movs	r1, #1
 8025f6e:	4620      	mov	r0, r4
 8025f70:	601a      	str	r2, [r3, #0]
 8025f72:	f005 feab 	bl	802bccc <TaskStatus::TaskStatus(TaskStatus::Result_e)>
 8025f76:	4620      	mov	r0, r4
 8025f78:	bd38      	pop	{r3, r4, r5, pc}
 8025f7a:	4a0b      	ldr	r2, [pc, #44]	; (8025fa8 <PICK_BIN_setup()+0xb8>)
 8025f7c:	490b      	ldr	r1, [pc, #44]	; (8025fac <PICK_BIN_setup()+0xbc>)
 8025f7e:	4b0c      	ldr	r3, [pc, #48]	; (8025fb0 <PICK_BIN_setup()+0xc0>)
 8025f80:	f44f 6580 	mov.w	r5, #1024	; 0x400
 8025f84:	f44f 4014 	mov.w	r0, #37888	; 0x9400
 8025f88:	6015      	str	r5, [r2, #0]
 8025f8a:	6008      	str	r0, [r1, #0]
 8025f8c:	f249 0201 	movw	r2, #36865	; 0x9001
 8025f90:	2101      	movs	r1, #1
 8025f92:	4620      	mov	r0, r4
 8025f94:	601a      	str	r2, [r3, #0]
 8025f96:	f005 fe99 	bl	802bccc <TaskStatus::TaskStatus(TaskStatus::Result_e)>
 8025f9a:	4620      	mov	r0, r4
 8025f9c:	bd38      	pop	{r3, r4, r5, pc}
 8025f9e:	bf00      	nop
 8025fa0:	20004b8c 	.word	0x20004b8c
 8025fa4:	20004b9c 	.word	0x20004b9c
 8025fa8:	20004b88 	.word	0x20004b88
 8025fac:	20004b94 	.word	0x20004b94
 8025fb0:	20004b98 	.word	0x20004b98

08025fb4 <logOverTorque(unsigned long, char const*) [clone .part.0]>:
 8025fb4:	b510      	push	{r4, lr}
 8025fb6:	b082      	sub	sp, #8
 8025fb8:	4917      	ldr	r1, [pc, #92]	; (8026018 <logOverTorque(unsigned long, char const*) [clone .part.0]+0x64>)
 8025fba:	4604      	mov	r4, r0
 8025fbc:	2210      	movs	r2, #16
 8025fbe:	4668      	mov	r0, sp
 8025fc0:	f7fc fd92 	bl	8022ae8 <Robot::getAxis(ROBOT_axisIndex_t)>
 8025fc4:	f89d 3004 	ldrb.w	r3, [sp, #4]
 8025fc8:	b123      	cbz	r3, 8025fd4 <logOverTorque(unsigned long, char const*) [clone .part.0]+0x20>
 8025fca:	9800      	ldr	r0, [sp, #0]
 8025fcc:	6803      	ldr	r3, [r0, #0]
 8025fce:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8025fd0:	4798      	blx	r3
 8025fd2:	b908      	cbnz	r0, 8025fd8 <logOverTorque(unsigned long, char const*) [clone .part.0]+0x24>
 8025fd4:	b002      	add	sp, #8
 8025fd6:	bd10      	pop	{r4, pc}
 8025fd8:	4810      	ldr	r0, [pc, #64]	; (802601c <logOverTorque(unsigned long, char const*) [clone .part.0]+0x68>)
 8025fda:	212f      	movs	r1, #47	; 0x2f
 8025fdc:	f019 f9bf 	bl	803f35e <strrchr>
 8025fe0:	b160      	cbz	r0, 8025ffc <logOverTorque(unsigned long, char const*) [clone .part.0]+0x48>
 8025fe2:	212f      	movs	r1, #47	; 0x2f
 8025fe4:	480d      	ldr	r0, [pc, #52]	; (802601c <logOverTorque(unsigned long, char const*) [clone .part.0]+0x68>)
 8025fe6:	f019 f9ba 	bl	803f35e <strrchr>
 8025fea:	1c41      	adds	r1, r0, #1
 8025fec:	4623      	mov	r3, r4
 8025fee:	f44f 72d7 	mov.w	r2, #430	; 0x1ae
 8025ff2:	2000      	movs	r0, #0
 8025ff4:	f7fc fbd0 	bl	8022798 <DEBUG_logMsg>
 8025ff8:	b002      	add	sp, #8
 8025ffa:	bd10      	pop	{r4, pc}
 8025ffc:	4807      	ldr	r0, [pc, #28]	; (802601c <logOverTorque(unsigned long, char const*) [clone .part.0]+0x68>)
 8025ffe:	215c      	movs	r1, #92	; 0x5c
 8026000:	f019 f9ad 	bl	803f35e <strrchr>
 8026004:	b128      	cbz	r0, 8026012 <logOverTorque(unsigned long, char const*) [clone .part.0]+0x5e>
 8026006:	215c      	movs	r1, #92	; 0x5c
 8026008:	4804      	ldr	r0, [pc, #16]	; (802601c <logOverTorque(unsigned long, char const*) [clone .part.0]+0x68>)
 802600a:	f019 f9a8 	bl	803f35e <strrchr>
 802600e:	1c41      	adds	r1, r0, #1
 8026010:	e7ec      	b.n	8025fec <logOverTorque(unsigned long, char const*) [clone .part.0]+0x38>
 8026012:	4902      	ldr	r1, [pc, #8]	; (802601c <logOverTorque(unsigned long, char const*) [clone .part.0]+0x68>)
 8026014:	e7ea      	b.n	8025fec <logOverTorque(unsigned long, char const*) [clone .part.0]+0x38>
 8026016:	bf00      	nop
 8026018:	2000f630 	.word	0x2000f630
 802601c:	0804465c 	.word	0x0804465c

08026020 <PICK_BIN_errorStateMachine(unsigned long)>:
 8026020:	b570      	push	{r4, r5, r6, lr}
 8026022:	4d97      	ldr	r5, [pc, #604]	; (8026280 <PICK_BIN_errorStateMachine(unsigned long)+0x260>)
 8026024:	b084      	sub	sp, #16
 8026026:	460e      	mov	r6, r1
 8026028:	2100      	movs	r1, #0
 802602a:	4604      	mov	r4, r0
 802602c:	f005 fe4e 	bl	802bccc <TaskStatus::TaskStatus(TaskStatus::Result_e)>
 8026030:	796b      	ldrb	r3, [r5, #5]
 8026032:	2b01      	cmp	r3, #1
 8026034:	d016      	beq.n	8026064 <PICK_BIN_errorStateMachine(unsigned long)+0x44>
 8026036:	2b02      	cmp	r3, #2
 8026038:	d036      	beq.n	80260a8 <PICK_BIN_errorStateMachine(unsigned long)+0x88>
 802603a:	b31b      	cbz	r3, 8026084 <PICK_BIN_errorStateMachine(unsigned long)+0x64>
 802603c:	4891      	ldr	r0, [pc, #580]	; (8026284 <PICK_BIN_errorStateMachine(unsigned long)+0x264>)
 802603e:	212f      	movs	r1, #47	; 0x2f
 8026040:	f019 f98d 	bl	803f35e <strrchr>
 8026044:	2800      	cmp	r0, #0
 8026046:	d03f      	beq.n	80260c8 <PICK_BIN_errorStateMachine(unsigned long)+0xa8>
 8026048:	212f      	movs	r1, #47	; 0x2f
 802604a:	488e      	ldr	r0, [pc, #568]	; (8026284 <PICK_BIN_errorStateMachine(unsigned long)+0x264>)
 802604c:	f019 f987 	bl	803f35e <strrchr>
 8026050:	1c41      	adds	r1, r0, #1
 8026052:	4b8d      	ldr	r3, [pc, #564]	; (8026288 <PICK_BIN_errorStateMachine(unsigned long)+0x268>)
 8026054:	f44f 7282 	mov.w	r2, #260	; 0x104
 8026058:	2000      	movs	r0, #0
 802605a:	f7fc fb9d 	bl	8022798 <DEBUG_logMsg>
 802605e:	4620      	mov	r0, r4
 8026060:	b004      	add	sp, #16
 8026062:	bd70      	pop	{r4, r5, r6, pc}
 8026064:	79ea      	ldrb	r2, [r5, #7]
 8026066:	4b89      	ldr	r3, [pc, #548]	; (802628c <PICK_BIN_errorStateMachine(unsigned long)+0x26c>)
 8026068:	9200      	str	r2, [sp, #0]
 802606a:	7819      	ldrb	r1, [r3, #0]
 802606c:	4b88      	ldr	r3, [pc, #544]	; (8026290 <PICK_BIN_errorStateMachine(unsigned long)+0x270>)
 802606e:	a802      	add	r0, sp, #8
 8026070:	4632      	mov	r2, r6
 8026072:	f000 fa8d 	bl	8026590 <PICK_BIN_RETRIES_runTask(PICK_BIN_RETRIES_type_t, unsigned long, PICK_BIN_config_t*, bool)>
 8026076:	a902      	add	r1, sp, #8
 8026078:	4620      	mov	r0, r4
 802607a:	f005 fe3d 	bl	802bcf8 <TaskStatus::operator=(TaskStatus const&)>
 802607e:	4620      	mov	r0, r4
 8026080:	b004      	add	sp, #16
 8026082:	bd70      	pop	{r4, r5, r6, pc}
 8026084:	a802      	add	r0, sp, #8
 8026086:	2101      	movs	r1, #1
 8026088:	f005 fe20 	bl	802bccc <TaskStatus::TaskStatus(TaskStatus::Result_e)>
 802608c:	782b      	ldrb	r3, [r5, #0]
 802608e:	2b0f      	cmp	r3, #15
 8026090:	f200 80d0 	bhi.w	8026234 <PICK_BIN_errorStateMachine(unsigned long)+0x214>
 8026094:	e8df f003 	tbb	[pc, r3]
 8026098:	23912323 	.word	0x23912323
 802609c:	9f455c45 	.word	0x9f455c45
 80260a0:	2397ae23 	.word	0x2397ae23
 80260a4:	2323236e 	.word	0x2323236e
 80260a8:	2100      	movs	r1, #0
 80260aa:	4628      	mov	r0, r5
 80260ac:	f002 f916 	bl	80282dc <SM_RUNNER_setError>
 80260b0:	4628      	mov	r0, r5
 80260b2:	f002 f927 	bl	8028304 <SM_RUNNER_restart>
 80260b6:	4b75      	ldr	r3, [pc, #468]	; (802628c <PICK_BIN_errorStateMachine(unsigned long)+0x26c>)
 80260b8:	781b      	ldrb	r3, [r3, #0]
 80260ba:	2b01      	cmp	r3, #1
 80260bc:	d8df      	bhi.n	802607e <PICK_BIN_errorStateMachine(unsigned long)+0x5e>
 80260be:	4628      	mov	r0, r5
 80260c0:	2101      	movs	r1, #1
 80260c2:	f002 f91d 	bl	8028300 <SM_RUNNER_setComplete>
 80260c6:	e7da      	b.n	802607e <PICK_BIN_errorStateMachine(unsigned long)+0x5e>
 80260c8:	486e      	ldr	r0, [pc, #440]	; (8026284 <PICK_BIN_errorStateMachine(unsigned long)+0x264>)
 80260ca:	215c      	movs	r1, #92	; 0x5c
 80260cc:	f019 f947 	bl	803f35e <strrchr>
 80260d0:	b328      	cbz	r0, 802611e <PICK_BIN_errorStateMachine(unsigned long)+0xfe>
 80260d2:	215c      	movs	r1, #92	; 0x5c
 80260d4:	486b      	ldr	r0, [pc, #428]	; (8026284 <PICK_BIN_errorStateMachine(unsigned long)+0x264>)
 80260d6:	f019 f942 	bl	803f35e <strrchr>
 80260da:	1c41      	adds	r1, r0, #1
 80260dc:	e7b9      	b.n	8026052 <PICK_BIN_errorStateMachine(unsigned long)+0x32>
 80260de:	4869      	ldr	r0, [pc, #420]	; (8026284 <PICK_BIN_errorStateMachine(unsigned long)+0x264>)
 80260e0:	212f      	movs	r1, #47	; 0x2f
 80260e2:	f019 f93c 	bl	803f35e <strrchr>
 80260e6:	2800      	cmp	r0, #0
 80260e8:	f000 8097 	beq.w	802621a <PICK_BIN_errorStateMachine(unsigned long)+0x1fa>
 80260ec:	212f      	movs	r1, #47	; 0x2f
 80260ee:	4865      	ldr	r0, [pc, #404]	; (8026284 <PICK_BIN_errorStateMachine(unsigned long)+0x264>)
 80260f0:	f019 f935 	bl	803f35e <strrchr>
 80260f4:	1c41      	adds	r1, r0, #1
 80260f6:	4b67      	ldr	r3, [pc, #412]	; (8026294 <PICK_BIN_errorStateMachine(unsigned long)+0x274>)
 80260f8:	f240 1221 	movw	r2, #289	; 0x121
 80260fc:	2000      	movs	r0, #0
 80260fe:	f7fc fb4b 	bl	8022798 <DEBUG_logMsg>
 8026102:	4a62      	ldr	r2, [pc, #392]	; (802628c <PICK_BIN_errorStateMachine(unsigned long)+0x26c>)
 8026104:	4d64      	ldr	r5, [pc, #400]	; (8026298 <PICK_BIN_errorStateMachine(unsigned long)+0x278>)
 8026106:	2300      	movs	r3, #0
 8026108:	7013      	strb	r3, [r2, #0]
 802610a:	782a      	ldrb	r2, [r5, #0]
 802610c:	3201      	adds	r2, #1
 802610e:	a902      	add	r1, sp, #8
 8026110:	4620      	mov	r0, r4
 8026112:	54ea      	strb	r2, [r5, r3]
 8026114:	f005 fdf0 	bl	802bcf8 <TaskStatus::operator=(TaskStatus const&)>
 8026118:	4620      	mov	r0, r4
 802611a:	b004      	add	sp, #16
 802611c:	bd70      	pop	{r4, r5, r6, pc}
 802611e:	4959      	ldr	r1, [pc, #356]	; (8026284 <PICK_BIN_errorStateMachine(unsigned long)+0x264>)
 8026120:	e797      	b.n	8026052 <PICK_BIN_errorStateMachine(unsigned long)+0x32>
 8026122:	4b5b      	ldr	r3, [pc, #364]	; (8026290 <PICK_BIN_errorStateMachine(unsigned long)+0x270>)
 8026124:	4d59      	ldr	r5, [pc, #356]	; (802628c <PICK_BIN_errorStateMachine(unsigned long)+0x26c>)
 8026126:	edd3 7a03 	vldr	s15, [r3, #12]
 802612a:	ed93 7a01 	vldr	s14, [r3, #4]
 802612e:	eef0 6a00 	vmov.f32	s13, #0	; 0x40000000  2.0
 8026132:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8026136:	eeb4 7ae7 	vcmpe.f32	s14, s15
 802613a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802613e:	bfac      	ite	ge
 8026140:	2304      	movge	r3, #4
 8026142:	2301      	movlt	r3, #1
 8026144:	06f2      	lsls	r2, r6, #27
 8026146:	702b      	strb	r3, [r5, #0]
 8026148:	d462      	bmi.n	8026210 <PICK_BIN_errorStateMachine(unsigned long)+0x1f0>
 802614a:	4d53      	ldr	r5, [pc, #332]	; (8026298 <PICK_BIN_errorStateMachine(unsigned long)+0x278>)
 802614c:	5cea      	ldrb	r2, [r5, r3]
 802614e:	e7dd      	b.n	802610c <PICK_BIN_errorStateMachine(unsigned long)+0xec>
 8026150:	4b52      	ldr	r3, [pc, #328]	; (802629c <PICK_BIN_errorStateMachine(unsigned long)+0x27c>)
 8026152:	6818      	ldr	r0, [r3, #0]
 8026154:	6803      	ldr	r3, [r0, #0]
 8026156:	695b      	ldr	r3, [r3, #20]
 8026158:	4798      	blx	r3
 802615a:	4b51      	ldr	r3, [pc, #324]	; (80262a0 <PICK_BIN_errorStateMachine(unsigned long)+0x280>)
 802615c:	681b      	ldr	r3, [r3, #0]
 802615e:	4218      	tst	r0, r3
 8026160:	d033      	beq.n	80261ca <PICK_BIN_errorStateMachine(unsigned long)+0x1aa>
 8026162:	4d4d      	ldr	r5, [pc, #308]	; (8026298 <PICK_BIN_errorStateMachine(unsigned long)+0x278>)
 8026164:	78ea      	ldrb	r2, [r5, #3]
 8026166:	2a00      	cmp	r2, #0
 8026168:	d14a      	bne.n	8026200 <PICK_BIN_errorStateMachine(unsigned long)+0x1e0>
 802616a:	2303      	movs	r3, #3
 802616c:	4618      	mov	r0, r3
 802616e:	4947      	ldr	r1, [pc, #284]	; (802628c <PICK_BIN_errorStateMachine(unsigned long)+0x26c>)
 8026170:	7008      	strb	r0, [r1, #0]
 8026172:	e7cb      	b.n	802610c <PICK_BIN_errorStateMachine(unsigned long)+0xec>
 8026174:	4b49      	ldr	r3, [pc, #292]	; (802629c <PICK_BIN_errorStateMachine(unsigned long)+0x27c>)
 8026176:	6818      	ldr	r0, [r3, #0]
 8026178:	6803      	ldr	r3, [r0, #0]
 802617a:	695b      	ldr	r3, [r3, #20]
 802617c:	4798      	blx	r3
 802617e:	4b48      	ldr	r3, [pc, #288]	; (80262a0 <PICK_BIN_errorStateMachine(unsigned long)+0x280>)
 8026180:	681b      	ldr	r3, [r3, #0]
 8026182:	4218      	tst	r0, r3
 8026184:	d021      	beq.n	80261ca <PICK_BIN_errorStateMachine(unsigned long)+0x1aa>
 8026186:	4b42      	ldr	r3, [pc, #264]	; (8026290 <PICK_BIN_errorStateMachine(unsigned long)+0x270>)
 8026188:	4d43      	ldr	r5, [pc, #268]	; (8026298 <PICK_BIN_errorStateMachine(unsigned long)+0x278>)
 802618a:	edd3 7a03 	vldr	s15, [r3, #12]
 802618e:	796a      	ldrb	r2, [r5, #5]
 8026190:	ed93 7a01 	vldr	s14, [r3, #4]
 8026194:	483d      	ldr	r0, [pc, #244]	; (802628c <PICK_BIN_errorStateMachine(unsigned long)+0x26c>)
 8026196:	eef1 6a00 	vmov.f32	s13, #16	; 0x40800000  4.0
 802619a:	ee77 7aa6 	vadd.f32	s15, s15, s13
 802619e:	2a00      	cmp	r2, #0
 80261a0:	eeb4 7ae7 	vcmpe.f32	s14, s15
 80261a4:	bf0c      	ite	eq
 80261a6:	2105      	moveq	r1, #5
 80261a8:	2101      	movne	r1, #1
 80261aa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80261ae:	bfb8      	it	lt
 80261b0:	2101      	movlt	r1, #1
 80261b2:	460b      	mov	r3, r1
 80261b4:	5c6a      	ldrb	r2, [r5, r1]
 80261b6:	7001      	strb	r1, [r0, #0]
 80261b8:	e7a8      	b.n	802610c <PICK_BIN_errorStateMachine(unsigned long)+0xec>
 80261ba:	06f5      	lsls	r5, r6, #27
 80261bc:	d5a1      	bpl.n	8026102 <PICK_BIN_errorStateMachine(unsigned long)+0xe2>
 80261be:	4839      	ldr	r0, [pc, #228]	; (80262a4 <PICK_BIN_errorStateMachine(unsigned long)+0x284>)
 80261c0:	f7ff fef8 	bl	8025fb4 <logOverTorque(unsigned long, char const*) [clone .part.0]>
 80261c4:	e79d      	b.n	8026102 <PICK_BIN_errorStateMachine(unsigned long)+0xe2>
 80261c6:	06f1      	lsls	r1, r6, #27
 80261c8:	d41e      	bmi.n	8026208 <PICK_BIN_errorStateMachine(unsigned long)+0x1e8>
 80261ca:	4a30      	ldr	r2, [pc, #192]	; (802628c <PICK_BIN_errorStateMachine(unsigned long)+0x26c>)
 80261cc:	4d32      	ldr	r5, [pc, #200]	; (8026298 <PICK_BIN_errorStateMachine(unsigned long)+0x278>)
 80261ce:	2301      	movs	r3, #1
 80261d0:	7013      	strb	r3, [r2, #0]
 80261d2:	786a      	ldrb	r2, [r5, #1]
 80261d4:	e79a      	b.n	802610c <PICK_BIN_errorStateMachine(unsigned long)+0xec>
 80261d6:	4b31      	ldr	r3, [pc, #196]	; (802629c <PICK_BIN_errorStateMachine(unsigned long)+0x27c>)
 80261d8:	6818      	ldr	r0, [r3, #0]
 80261da:	6803      	ldr	r3, [r0, #0]
 80261dc:	695b      	ldr	r3, [r3, #20]
 80261de:	4798      	blx	r3
 80261e0:	4b31      	ldr	r3, [pc, #196]	; (80262a8 <PICK_BIN_errorStateMachine(unsigned long)+0x288>)
 80261e2:	681b      	ldr	r3, [r3, #0]
 80261e4:	4218      	tst	r0, r3
 80261e6:	d0f0      	beq.n	80261ca <PICK_BIN_errorStateMachine(unsigned long)+0x1aa>
 80261e8:	4d2b      	ldr	r5, [pc, #172]	; (8026298 <PICK_BIN_errorStateMachine(unsigned long)+0x278>)
 80261ea:	78aa      	ldrb	r2, [r5, #2]
 80261ec:	b942      	cbnz	r2, 8026200 <PICK_BIN_errorStateMachine(unsigned long)+0x1e0>
 80261ee:	2302      	movs	r3, #2
 80261f0:	4618      	mov	r0, r3
 80261f2:	e7bc      	b.n	802616e <PICK_BIN_errorStateMachine(unsigned long)+0x14e>
 80261f4:	06f0      	lsls	r0, r6, #27
 80261f6:	d584      	bpl.n	8026102 <PICK_BIN_errorStateMachine(unsigned long)+0xe2>
 80261f8:	482c      	ldr	r0, [pc, #176]	; (80262ac <PICK_BIN_errorStateMachine(unsigned long)+0x28c>)
 80261fa:	f7ff fedb 	bl	8025fb4 <logOverTorque(unsigned long, char const*) [clone .part.0]>
 80261fe:	e780      	b.n	8026102 <PICK_BIN_errorStateMachine(unsigned long)+0xe2>
 8026200:	2301      	movs	r3, #1
 8026202:	786a      	ldrb	r2, [r5, #1]
 8026204:	4618      	mov	r0, r3
 8026206:	e7b2      	b.n	802616e <PICK_BIN_errorStateMachine(unsigned long)+0x14e>
 8026208:	4829      	ldr	r0, [pc, #164]	; (80262b0 <PICK_BIN_errorStateMachine(unsigned long)+0x290>)
 802620a:	f7ff fed3 	bl	8025fb4 <logOverTorque(unsigned long, char const*) [clone .part.0]>
 802620e:	e7dc      	b.n	80261ca <PICK_BIN_errorStateMachine(unsigned long)+0x1aa>
 8026210:	4828      	ldr	r0, [pc, #160]	; (80262b4 <PICK_BIN_errorStateMachine(unsigned long)+0x294>)
 8026212:	f7ff fecf 	bl	8025fb4 <logOverTorque(unsigned long, char const*) [clone .part.0]>
 8026216:	782b      	ldrb	r3, [r5, #0]
 8026218:	e797      	b.n	802614a <PICK_BIN_errorStateMachine(unsigned long)+0x12a>
 802621a:	481a      	ldr	r0, [pc, #104]	; (8026284 <PICK_BIN_errorStateMachine(unsigned long)+0x264>)
 802621c:	215c      	movs	r1, #92	; 0x5c
 802621e:	f019 f89e 	bl	803f35e <strrchr>
 8026222:	b128      	cbz	r0, 8026230 <PICK_BIN_errorStateMachine(unsigned long)+0x210>
 8026224:	215c      	movs	r1, #92	; 0x5c
 8026226:	4817      	ldr	r0, [pc, #92]	; (8026284 <PICK_BIN_errorStateMachine(unsigned long)+0x264>)
 8026228:	f019 f899 	bl	803f35e <strrchr>
 802622c:	1c41      	adds	r1, r0, #1
 802622e:	e762      	b.n	80260f6 <PICK_BIN_errorStateMachine(unsigned long)+0xd6>
 8026230:	4914      	ldr	r1, [pc, #80]	; (8026284 <PICK_BIN_errorStateMachine(unsigned long)+0x264>)
 8026232:	e760      	b.n	80260f6 <PICK_BIN_errorStateMachine(unsigned long)+0xd6>
 8026234:	4813      	ldr	r0, [pc, #76]	; (8026284 <PICK_BIN_errorStateMachine(unsigned long)+0x264>)
 8026236:	212f      	movs	r1, #47	; 0x2f
 8026238:	f019 f891 	bl	803f35e <strrchr>
 802623c:	b198      	cbz	r0, 8026266 <PICK_BIN_errorStateMachine(unsigned long)+0x246>
 802623e:	4811      	ldr	r0, [pc, #68]	; (8026284 <PICK_BIN_errorStateMachine(unsigned long)+0x264>)
 8026240:	212f      	movs	r1, #47	; 0x2f
 8026242:	f019 f88c 	bl	803f35e <strrchr>
 8026246:	3001      	adds	r0, #1
 8026248:	4601      	mov	r1, r0
 802624a:	4b1b      	ldr	r3, [pc, #108]	; (80262b8 <PICK_BIN_errorStateMachine(unsigned long)+0x298>)
 802624c:	4d12      	ldr	r5, [pc, #72]	; (8026298 <PICK_BIN_errorStateMachine(unsigned long)+0x278>)
 802624e:	f240 1269 	movw	r2, #361	; 0x169
 8026252:	2000      	movs	r0, #0
 8026254:	f7fc faa0 	bl	8022798 <DEBUG_logMsg>
 8026258:	4b0c      	ldr	r3, [pc, #48]	; (802628c <PICK_BIN_errorStateMachine(unsigned long)+0x26c>)
 802625a:	781b      	ldrb	r3, [r3, #0]
 802625c:	2102      	movs	r1, #2
 802625e:	5cea      	ldrb	r2, [r5, r3]
 8026260:	f88d 1008 	strb.w	r1, [sp, #8]
 8026264:	e752      	b.n	802610c <PICK_BIN_errorStateMachine(unsigned long)+0xec>
 8026266:	4807      	ldr	r0, [pc, #28]	; (8026284 <PICK_BIN_errorStateMachine(unsigned long)+0x264>)
 8026268:	215c      	movs	r1, #92	; 0x5c
 802626a:	f019 f878 	bl	803f35e <strrchr>
 802626e:	b128      	cbz	r0, 802627c <PICK_BIN_errorStateMachine(unsigned long)+0x25c>
 8026270:	4804      	ldr	r0, [pc, #16]	; (8026284 <PICK_BIN_errorStateMachine(unsigned long)+0x264>)
 8026272:	215c      	movs	r1, #92	; 0x5c
 8026274:	f019 f873 	bl	803f35e <strrchr>
 8026278:	3001      	adds	r0, #1
 802627a:	e7e5      	b.n	8026248 <PICK_BIN_errorStateMachine(unsigned long)+0x228>
 802627c:	4801      	ldr	r0, [pc, #4]	; (8026284 <PICK_BIN_errorStateMachine(unsigned long)+0x264>)
 802627e:	e7e3      	b.n	8026248 <PICK_BIN_errorStateMachine(unsigned long)+0x228>
 8026280:	20004bb0 	.word	0x20004bb0
 8026284:	0804465c 	.word	0x0804465c
 8026288:	080447c0 	.word	0x080447c0
 802628c:	20004bc4 	.word	0x20004bc4
 8026290:	20004b9c 	.word	0x20004b9c
 8026294:	080446bc 	.word	0x080446bc
 8026298:	20004b8c 	.word	0x20004b8c
 802629c:	2000f630 	.word	0x2000f630
 80262a0:	20004b94 	.word	0x20004b94
 80262a4:	080446f4 	.word	0x080446f4
 80262a8:	20004b98 	.word	0x20004b98
 80262ac:	08044718 	.word	0x08044718
 80262b0:	0804473c 	.word	0x0804473c
 80262b4:	08044778 	.word	0x08044778
 80262b8:	08044794 	.word	0x08044794

080262bc <PICK_BIN_runTask(unsigned long, PICK_BIN_config_t, bool)>:
 80262bc:	b082      	sub	sp, #8
 80262be:	b5f0      	push	{r4, r5, r6, r7, lr}
 80262c0:	b083      	sub	sp, #12
 80262c2:	460d      	mov	r5, r1
 80262c4:	f89d c034 	ldrb.w	ip, [sp, #52]	; 0x34
 80262c8:	a908      	add	r1, sp, #32
 80262ca:	e881 000c 	stmia.w	r1, {r2, r3}
 80262ce:	4604      	mov	r4, r0
 80262d0:	f1bc 0f00 	cmp.w	ip, #0
 80262d4:	d005      	beq.n	80262e2 <PICK_BIN_runTask(unsigned long, PICK_BIN_config_t, bool)+0x26>
 80262d6:	460f      	mov	r7, r1
 80262d8:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 80262da:	4e09      	ldr	r6, [pc, #36]	; (8026300 <PICK_BIN_runTask(unsigned long, PICK_BIN_config_t, bool)+0x44>)
 80262dc:	683f      	ldr	r7, [r7, #0]
 80262de:	c60f      	stmia	r6!, {r0, r1, r2, r3}
 80262e0:	6037      	str	r7, [r6, #0]
 80262e2:	4620      	mov	r0, r4
 80262e4:	4a07      	ldr	r2, [pc, #28]	; (8026304 <PICK_BIN_runTask(unsigned long, PICK_BIN_config_t, bool)+0x48>)
 80262e6:	4908      	ldr	r1, [pc, #32]	; (8026308 <PICK_BIN_runTask(unsigned long, PICK_BIN_config_t, bool)+0x4c>)
 80262e8:	f8cd c000 	str.w	ip, [sp]
 80262ec:	462b      	mov	r3, r5
 80262ee:	f001 fe15 	bl	8027f1c <SM_RUNNER_runStateMachine>
 80262f2:	4620      	mov	r0, r4
 80262f4:	b003      	add	sp, #12
 80262f6:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 80262fa:	b002      	add	sp, #8
 80262fc:	4770      	bx	lr
 80262fe:	bf00      	nop
 8026300:	20004b9c 	.word	0x20004b9c
 8026304:	20004bb0 	.word	0x20004bb0
 8026308:	200002cc 	.word	0x200002cc

0802630c <PICK_BIN_RETRIES_errorStateMachine(unsigned long)>:
 802630c:	b530      	push	{r4, r5, lr}
 802630e:	2100      	movs	r1, #0
 8026310:	b085      	sub	sp, #20
 8026312:	4604      	mov	r4, r0
 8026314:	f005 fcda 	bl	802bccc <TaskStatus::TaskStatus(TaskStatus::Result_e)>
 8026318:	4834      	ldr	r0, [pc, #208]	; (80263ec <PICK_BIN_RETRIES_errorStateMachine(unsigned long)+0xe0>)
 802631a:	7943      	ldrb	r3, [r0, #5]
 802631c:	2b00      	cmp	r3, #0
 802631e:	d134      	bne.n	802638a <PICK_BIN_RETRIES_errorStateMachine(unsigned long)+0x7e>
 8026320:	4d33      	ldr	r5, [pc, #204]	; (80263f0 <PICK_BIN_RETRIES_errorStateMachine(unsigned long)+0xe4>)
 8026322:	792b      	ldrb	r3, [r5, #4]
 8026324:	b31b      	cbz	r3, 802636e <PICK_BIN_RETRIES_errorStateMachine(unsigned long)+0x62>
 8026326:	4833      	ldr	r0, [pc, #204]	; (80263f4 <PICK_BIN_RETRIES_errorStateMachine(unsigned long)+0xe8>)
 8026328:	212f      	movs	r1, #47	; 0x2f
 802632a:	f019 f818 	bl	803f35e <strrchr>
 802632e:	2800      	cmp	r0, #0
 8026330:	d042      	beq.n	80263b8 <PICK_BIN_RETRIES_errorStateMachine(unsigned long)+0xac>
 8026332:	212f      	movs	r1, #47	; 0x2f
 8026334:	482f      	ldr	r0, [pc, #188]	; (80263f4 <PICK_BIN_RETRIES_errorStateMachine(unsigned long)+0xe8>)
 8026336:	f019 f812 	bl	803f35e <strrchr>
 802633a:	1c41      	adds	r1, r0, #1
 802633c:	7928      	ldrb	r0, [r5, #4]
 802633e:	4a2e      	ldr	r2, [pc, #184]	; (80263f8 <PICK_BIN_RETRIES_errorStateMachine(unsigned long)+0xec>)
 8026340:	4b2e      	ldr	r3, [pc, #184]	; (80263fc <PICK_BIN_RETRIES_errorStateMachine(unsigned long)+0xf0>)
 8026342:	f852 2020 	ldr.w	r2, [r2, r0, lsl #2]
 8026346:	9200      	str	r2, [sp, #0]
 8026348:	2002      	movs	r0, #2
 802634a:	f240 1225 	movw	r2, #293	; 0x125
 802634e:	f7fc fa23 	bl	8022798 <DEBUG_logMsg>
 8026352:	4b2b      	ldr	r3, [pc, #172]	; (8026400 <PICK_BIN_RETRIES_errorStateMachine(unsigned long)+0xf4>)
 8026354:	4a2b      	ldr	r2, [pc, #172]	; (8026404 <PICK_BIN_RETRIES_errorStateMachine(unsigned long)+0xf8>)
 8026356:	4825      	ldr	r0, [pc, #148]	; (80263ec <PICK_BIN_RETRIES_errorStateMachine(unsigned long)+0xe0>)
 8026358:	60da      	str	r2, [r3, #12]
 802635a:	2100      	movs	r1, #0
 802635c:	7129      	strb	r1, [r5, #4]
 802635e:	f001 ffbd 	bl	80282dc <SM_RUNNER_setError>
 8026362:	4822      	ldr	r0, [pc, #136]	; (80263ec <PICK_BIN_RETRIES_errorStateMachine(unsigned long)+0xe0>)
 8026364:	f001 ffce 	bl	8028304 <SM_RUNNER_restart>
 8026368:	4620      	mov	r0, r4
 802636a:	b005      	add	sp, #20
 802636c:	bd30      	pop	{r4, r5, pc}
 802636e:	f001 ffd1 	bl	8028314 <SM_RUNNER_abort>
 8026372:	2213      	movs	r2, #19
 8026374:	a802      	add	r0, sp, #8
 8026376:	2102      	movs	r1, #2
 8026378:	f005 fcae 	bl	802bcd8 <TaskStatus::TaskStatus(TaskStatus::Result_e, unsigned int)>
 802637c:	a902      	add	r1, sp, #8
 802637e:	4620      	mov	r0, r4
 8026380:	f005 fcba 	bl	802bcf8 <TaskStatus::operator=(TaskStatus const&)>
 8026384:	4620      	mov	r0, r4
 8026386:	b005      	add	sp, #20
 8026388:	bd30      	pop	{r4, r5, pc}
 802638a:	481a      	ldr	r0, [pc, #104]	; (80263f4 <PICK_BIN_RETRIES_errorStateMachine(unsigned long)+0xe8>)
 802638c:	212f      	movs	r1, #47	; 0x2f
 802638e:	f018 ffe6 	bl	803f35e <strrchr>
 8026392:	b1e0      	cbz	r0, 80263ce <PICK_BIN_RETRIES_errorStateMachine(unsigned long)+0xc2>
 8026394:	212f      	movs	r1, #47	; 0x2f
 8026396:	4817      	ldr	r0, [pc, #92]	; (80263f4 <PICK_BIN_RETRIES_errorStateMachine(unsigned long)+0xe8>)
 8026398:	f018 ffe1 	bl	803f35e <strrchr>
 802639c:	1c41      	adds	r1, r0, #1
 802639e:	4b1a      	ldr	r3, [pc, #104]	; (8026408 <PICK_BIN_RETRIES_errorStateMachine(unsigned long)+0xfc>)
 80263a0:	f44f 7297 	mov.w	r2, #302	; 0x12e
 80263a4:	2000      	movs	r0, #0
 80263a6:	f7fc f9f7 	bl	8022798 <DEBUG_logMsg>
 80263aa:	4810      	ldr	r0, [pc, #64]	; (80263ec <PICK_BIN_RETRIES_errorStateMachine(unsigned long)+0xe0>)
 80263ac:	2100      	movs	r1, #0
 80263ae:	f001 ff95 	bl	80282dc <SM_RUNNER_setError>
 80263b2:	4620      	mov	r0, r4
 80263b4:	b005      	add	sp, #20
 80263b6:	bd30      	pop	{r4, r5, pc}
 80263b8:	480e      	ldr	r0, [pc, #56]	; (80263f4 <PICK_BIN_RETRIES_errorStateMachine(unsigned long)+0xe8>)
 80263ba:	215c      	movs	r1, #92	; 0x5c
 80263bc:	f018 ffcf 	bl	803f35e <strrchr>
 80263c0:	b180      	cbz	r0, 80263e4 <PICK_BIN_RETRIES_errorStateMachine(unsigned long)+0xd8>
 80263c2:	215c      	movs	r1, #92	; 0x5c
 80263c4:	480b      	ldr	r0, [pc, #44]	; (80263f4 <PICK_BIN_RETRIES_errorStateMachine(unsigned long)+0xe8>)
 80263c6:	f018 ffca 	bl	803f35e <strrchr>
 80263ca:	1c41      	adds	r1, r0, #1
 80263cc:	e7b6      	b.n	802633c <PICK_BIN_RETRIES_errorStateMachine(unsigned long)+0x30>
 80263ce:	4809      	ldr	r0, [pc, #36]	; (80263f4 <PICK_BIN_RETRIES_errorStateMachine(unsigned long)+0xe8>)
 80263d0:	215c      	movs	r1, #92	; 0x5c
 80263d2:	f018 ffc4 	bl	803f35e <strrchr>
 80263d6:	b138      	cbz	r0, 80263e8 <PICK_BIN_RETRIES_errorStateMachine(unsigned long)+0xdc>
 80263d8:	215c      	movs	r1, #92	; 0x5c
 80263da:	4806      	ldr	r0, [pc, #24]	; (80263f4 <PICK_BIN_RETRIES_errorStateMachine(unsigned long)+0xe8>)
 80263dc:	f018 ffbf 	bl	803f35e <strrchr>
 80263e0:	1c41      	adds	r1, r0, #1
 80263e2:	e7dc      	b.n	802639e <PICK_BIN_RETRIES_errorStateMachine(unsigned long)+0x92>
 80263e4:	4903      	ldr	r1, [pc, #12]	; (80263f4 <PICK_BIN_RETRIES_errorStateMachine(unsigned long)+0xe8>)
 80263e6:	e7a9      	b.n	802633c <PICK_BIN_RETRIES_errorStateMachine(unsigned long)+0x30>
 80263e8:	4902      	ldr	r1, [pc, #8]	; (80263f4 <PICK_BIN_RETRIES_errorStateMachine(unsigned long)+0xe8>)
 80263ea:	e7d8      	b.n	802639e <PICK_BIN_RETRIES_errorStateMachine(unsigned long)+0x92>
 80263ec:	20004bd0 	.word	0x20004bd0
 80263f0:	20004bc8 	.word	0x20004bc8
 80263f4:	08044970 	.word	0x08044970
 80263f8:	08044c1c 	.word	0x08044c1c
 80263fc:	080449bc 	.word	0x080449bc
 8026400:	200004bc 	.word	0x200004bc
 8026404:	200003ac 	.word	0x200003ac
 8026408:	080449e4 	.word	0x080449e4

0802640c <PICK_BIN_RETRIES_mainStateMachine(unsigned long)>:
 802640c:	b510      	push	{r4, lr}
 802640e:	2100      	movs	r1, #0
 8026410:	b084      	sub	sp, #16
 8026412:	4604      	mov	r4, r0
 8026414:	f005 fc5a 	bl	802bccc <TaskStatus::TaskStatus(TaskStatus::Result_e)>
 8026418:	4a55      	ldr	r2, [pc, #340]	; (8026570 <PICK_BIN_RETRIES_mainStateMachine(unsigned long)+0x164>)
 802641a:	7813      	ldrb	r3, [r2, #0]
 802641c:	2b0c      	cmp	r3, #12
 802641e:	f200 8085 	bhi.w	802652c <PICK_BIN_RETRIES_mainStateMachine(unsigned long)+0x120>
 8026422:	e8df f003 	tbb	[pc, r3]
 8026426:	4943      	.short	0x4943
 8026428:	07615d56 	.word	0x07615d56
 802642c:	19077c75 	.word	0x19077c75
 8026430:	3629      	.short	0x3629
 8026432:	67          	.byte	0x67
 8026433:	00          	.byte	0x00
 8026434:	4b4f      	ldr	r3, [pc, #316]	; (8026574 <PICK_BIN_RETRIES_mainStateMachine(unsigned long)+0x168>)
 8026436:	7891      	ldrb	r1, [r2, #2]
 8026438:	681b      	ldr	r3, [r3, #0]
 802643a:	ed93 0a01 	vldr	s0, [r3, #4]
 802643e:	781a      	ldrb	r2, [r3, #0]
 8026440:	2300      	movs	r3, #0
 8026442:	a802      	add	r0, sp, #8
 8026444:	9300      	str	r3, [sp, #0]
 8026446:	f001 f9df 	bl	8027808 <ACTIONS_move(bool, ROBOT_axisIndex_t, float, AXIS_moveType_t, AXIS_mode_t)>
 802644a:	a902      	add	r1, sp, #8
 802644c:	4620      	mov	r0, r4
 802644e:	f005 fc53 	bl	802bcf8 <TaskStatus::operator=(TaskStatus const&)>
 8026452:	4620      	mov	r0, r4
 8026454:	b004      	add	sp, #16
 8026456:	bd10      	pop	{r4, pc}
 8026458:	2300      	movs	r3, #0
 802645a:	ed9f 0a47 	vldr	s0, [pc, #284]	; 8026578 <PICK_BIN_RETRIES_mainStateMachine(unsigned long)+0x16c>
 802645e:	7891      	ldrb	r1, [r2, #2]
 8026460:	9300      	str	r3, [sp, #0]
 8026462:	a802      	add	r0, sp, #8
 8026464:	2210      	movs	r2, #16
 8026466:	f001 f9cf 	bl	8027808 <ACTIONS_move(bool, ROBOT_axisIndex_t, float, AXIS_moveType_t, AXIS_mode_t)>
 802646a:	a902      	add	r1, sp, #8
 802646c:	4620      	mov	r0, r4
 802646e:	f005 fc43 	bl	802bcf8 <TaskStatus::operator=(TaskStatus const&)>
 8026472:	4620      	mov	r0, r4
 8026474:	b004      	add	sp, #16
 8026476:	bd10      	pop	{r4, pc}
 8026478:	4b3e      	ldr	r3, [pc, #248]	; (8026574 <PICK_BIN_RETRIES_mainStateMachine(unsigned long)+0x168>)
 802647a:	681b      	ldr	r3, [r3, #0]
 802647c:	edd3 7a01 	vldr	s15, [r3, #4]
 8026480:	eeb0 7a00 	vmov.f32	s14, #0	; 0x40000000  2.0
 8026484:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8026488:	2201      	movs	r2, #1
 802648a:	edc3 7a01 	vstr	s15, [r3, #4]
 802648e:	7022      	strb	r2, [r4, #0]
 8026490:	e7df      	b.n	8026452 <PICK_BIN_RETRIES_mainStateMachine(unsigned long)+0x46>
 8026492:	4b38      	ldr	r3, [pc, #224]	; (8026574 <PICK_BIN_RETRIES_mainStateMachine(unsigned long)+0x168>)
 8026494:	681b      	ldr	r3, [r3, #0]
 8026496:	edd3 7a01 	vldr	s15, [r3, #4]
 802649a:	eeb1 7a00 	vmov.f32	s14, #16	; 0x40800000  4.0
 802649e:	ee77 7ac7 	vsub.f32	s15, s15, s14
 80264a2:	2201      	movs	r2, #1
 80264a4:	edc3 7a01 	vstr	s15, [r3, #4]
 80264a8:	7022      	strb	r2, [r4, #0]
 80264aa:	e7d2      	b.n	8026452 <PICK_BIN_RETRIES_mainStateMachine(unsigned long)+0x46>
 80264ac:	4b31      	ldr	r3, [pc, #196]	; (8026574 <PICK_BIN_RETRIES_mainStateMachine(unsigned long)+0x168>)
 80264ae:	7891      	ldrb	r1, [r2, #2]
 80264b0:	681b      	ldr	r3, [r3, #0]
 80264b2:	ed93 0a03 	vldr	s0, [r3, #12]
 80264b6:	e7c2      	b.n	802643e <PICK_BIN_RETRIES_mainStateMachine(unsigned long)+0x32>
 80264b8:	7891      	ldrb	r1, [r2, #2]
 80264ba:	a802      	add	r0, sp, #8
 80264bc:	2301      	movs	r3, #1
 80264be:	2210      	movs	r2, #16
 80264c0:	f001 fac4 	bl	8027a4c <ACTIONS_power(bool, ROBOT_axisIndex_t, AXIS_powerState_t)>
 80264c4:	a902      	add	r1, sp, #8
 80264c6:	4620      	mov	r0, r4
 80264c8:	f005 fc16 	bl	802bcf8 <TaskStatus::operator=(TaskStatus const&)>
 80264cc:	4620      	mov	r0, r4
 80264ce:	b004      	add	sp, #16
 80264d0:	bd10      	pop	{r4, pc}
 80264d2:	2300      	movs	r3, #0
 80264d4:	7891      	ldrb	r1, [r2, #2]
 80264d6:	ed9f 0a29 	vldr	s0, [pc, #164]	; 802657c <PICK_BIN_RETRIES_mainStateMachine(unsigned long)+0x170>
 80264da:	9300      	str	r3, [sp, #0]
 80264dc:	a802      	add	r0, sp, #8
 80264de:	e7c1      	b.n	8026464 <PICK_BIN_RETRIES_mainStateMachine(unsigned long)+0x58>
 80264e0:	7891      	ldrb	r1, [r2, #2]
 80264e2:	a802      	add	r0, sp, #8
 80264e4:	2300      	movs	r3, #0
 80264e6:	e7ea      	b.n	80264be <PICK_BIN_RETRIES_mainStateMachine(unsigned long)+0xb2>
 80264e8:	4b22      	ldr	r3, [pc, #136]	; (8026574 <PICK_BIN_RETRIES_mainStateMachine(unsigned long)+0x168>)
 80264ea:	7891      	ldrb	r1, [r2, #2]
 80264ec:	681b      	ldr	r3, [r3, #0]
 80264ee:	ed93 0a02 	vldr	s0, [r3, #8]
 80264f2:	e7a4      	b.n	802643e <PICK_BIN_RETRIES_mainStateMachine(unsigned long)+0x32>
 80264f4:	4b1f      	ldr	r3, [pc, #124]	; (8026574 <PICK_BIN_RETRIES_mainStateMachine(unsigned long)+0x168>)
 80264f6:	481e      	ldr	r0, [pc, #120]	; (8026570 <PICK_BIN_RETRIES_mainStateMachine(unsigned long)+0x164>)
 80264f8:	791b      	ldrb	r3, [r3, #4]
 80264fa:	2b01      	cmp	r3, #1
 80264fc:	bf98      	it	ls
 80264fe:	2313      	movls	r3, #19
 8026500:	f04f 0101 	mov.w	r1, #1
 8026504:	bf98      	it	ls
 8026506:	6063      	strls	r3, [r4, #4]
 8026508:	7021      	strb	r1, [r4, #0]
 802650a:	f001 fef9 	bl	8028300 <SM_RUNNER_setComplete>
 802650e:	e7a0      	b.n	8026452 <PICK_BIN_RETRIES_mainStateMachine(unsigned long)+0x46>
 8026510:	2300      	movs	r3, #0
 8026512:	7891      	ldrb	r1, [r2, #2]
 8026514:	ed9f 0a1a 	vldr	s0, [pc, #104]	; 8026580 <PICK_BIN_RETRIES_mainStateMachine(unsigned long)+0x174>
 8026518:	9300      	str	r3, [sp, #0]
 802651a:	a802      	add	r0, sp, #8
 802651c:	e7a2      	b.n	8026464 <PICK_BIN_RETRIES_mainStateMachine(unsigned long)+0x58>
 802651e:	2300      	movs	r3, #0
 8026520:	7891      	ldrb	r1, [r2, #2]
 8026522:	ed9f 0a18 	vldr	s0, [pc, #96]	; 8026584 <PICK_BIN_RETRIES_mainStateMachine(unsigned long)+0x178>
 8026526:	9300      	str	r3, [sp, #0]
 8026528:	a802      	add	r0, sp, #8
 802652a:	e79b      	b.n	8026464 <PICK_BIN_RETRIES_mainStateMachine(unsigned long)+0x58>
 802652c:	2302      	movs	r3, #2
 802652e:	4816      	ldr	r0, [pc, #88]	; (8026588 <PICK_BIN_RETRIES_mainStateMachine(unsigned long)+0x17c>)
 8026530:	7023      	strb	r3, [r4, #0]
 8026532:	212f      	movs	r1, #47	; 0x2f
 8026534:	f018 ff13 	bl	803f35e <strrchr>
 8026538:	b160      	cbz	r0, 8026554 <PICK_BIN_RETRIES_mainStateMachine(unsigned long)+0x148>
 802653a:	4813      	ldr	r0, [pc, #76]	; (8026588 <PICK_BIN_RETRIES_mainStateMachine(unsigned long)+0x17c>)
 802653c:	212f      	movs	r1, #47	; 0x2f
 802653e:	f018 ff0e 	bl	803f35e <strrchr>
 8026542:	3001      	adds	r0, #1
 8026544:	4601      	mov	r1, r0
 8026546:	4b11      	ldr	r3, [pc, #68]	; (802658c <PICK_BIN_RETRIES_mainStateMachine(unsigned long)+0x180>)
 8026548:	f44f 7282 	mov.w	r2, #260	; 0x104
 802654c:	2000      	movs	r0, #0
 802654e:	f7fc f923 	bl	8022798 <DEBUG_logMsg>
 8026552:	e77e      	b.n	8026452 <PICK_BIN_RETRIES_mainStateMachine(unsigned long)+0x46>
 8026554:	480c      	ldr	r0, [pc, #48]	; (8026588 <PICK_BIN_RETRIES_mainStateMachine(unsigned long)+0x17c>)
 8026556:	215c      	movs	r1, #92	; 0x5c
 8026558:	f018 ff01 	bl	803f35e <strrchr>
 802655c:	b128      	cbz	r0, 802656a <PICK_BIN_RETRIES_mainStateMachine(unsigned long)+0x15e>
 802655e:	480a      	ldr	r0, [pc, #40]	; (8026588 <PICK_BIN_RETRIES_mainStateMachine(unsigned long)+0x17c>)
 8026560:	215c      	movs	r1, #92	; 0x5c
 8026562:	f018 fefc 	bl	803f35e <strrchr>
 8026566:	3001      	adds	r0, #1
 8026568:	e7ec      	b.n	8026544 <PICK_BIN_RETRIES_mainStateMachine(unsigned long)+0x138>
 802656a:	4807      	ldr	r0, [pc, #28]	; (8026588 <PICK_BIN_RETRIES_mainStateMachine(unsigned long)+0x17c>)
 802656c:	e7ea      	b.n	8026544 <PICK_BIN_RETRIES_mainStateMachine(unsigned long)+0x138>
 802656e:	bf00      	nop
 8026570:	20004bd0 	.word	0x20004bd0
 8026574:	20004bc8 	.word	0x20004bc8
 8026578:	440f8000 	.word	0x440f8000
 802657c:	00000000 	.word	0x00000000
 8026580:	44288000 	.word	0x44288000
 8026584:	43d25852 	.word	0x43d25852
 8026588:	08044970 	.word	0x08044970
 802658c:	080447c0 	.word	0x080447c0

08026590 <PICK_BIN_RETRIES_runTask(PICK_BIN_RETRIES_type_t, unsigned long, PICK_BIN_config_t*, bool)>:
 8026590:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8026594:	b082      	sub	sp, #8
 8026596:	4604      	mov	r4, r0
 8026598:	f89d 7020 	ldrb.w	r7, [sp, #32]
 802659c:	4615      	mov	r5, r2
 802659e:	b957      	cbnz	r7, 80265b6 <PICK_BIN_RETRIES_runTask(PICK_BIN_RETRIES_type_t, unsigned long, PICK_BIN_config_t*, bool)+0x26>
 80265a0:	4620      	mov	r0, r4
 80265a2:	4a1c      	ldr	r2, [pc, #112]	; (8026614 <PICK_BIN_RETRIES_runTask(PICK_BIN_RETRIES_type_t, unsigned long, PICK_BIN_config_t*, bool)+0x84>)
 80265a4:	491c      	ldr	r1, [pc, #112]	; (8026618 <PICK_BIN_RETRIES_runTask(PICK_BIN_RETRIES_type_t, unsigned long, PICK_BIN_config_t*, bool)+0x88>)
 80265a6:	9700      	str	r7, [sp, #0]
 80265a8:	462b      	mov	r3, r5
 80265aa:	f001 fcb7 	bl	8027f1c <SM_RUNNER_runStateMachine>
 80265ae:	4620      	mov	r0, r4
 80265b0:	b002      	add	sp, #8
 80265b2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80265b6:	460e      	mov	r6, r1
 80265b8:	4918      	ldr	r1, [pc, #96]	; (802661c <PICK_BIN_RETRIES_runTask(PICK_BIN_RETRIES_type_t, unsigned long, PICK_BIN_config_t*, bool)+0x8c>)
 80265ba:	4a17      	ldr	r2, [pc, #92]	; (8026618 <PICK_BIN_RETRIES_runTask(PICK_BIN_RETRIES_type_t, unsigned long, PICK_BIN_config_t*, bool)+0x88>)
 80265bc:	f8df 806c 	ldr.w	r8, [pc, #108]	; 802662c <PICK_BIN_RETRIES_runTask(PICK_BIN_RETRIES_type_t, unsigned long, PICK_BIN_config_t*, bool)+0x9c>
 80265c0:	f851 1026 	ldr.w	r1, [r1, r6, lsl #2]
 80265c4:	60d1      	str	r1, [r2, #12]
 80265c6:	4816      	ldr	r0, [pc, #88]	; (8026620 <PICK_BIN_RETRIES_runTask(PICK_BIN_RETRIES_type_t, unsigned long, PICK_BIN_config_t*, bool)+0x90>)
 80265c8:	f8c8 3000 	str.w	r3, [r8]
 80265cc:	212f      	movs	r1, #47	; 0x2f
 80265ce:	f888 6004 	strb.w	r6, [r8, #4]
 80265d2:	f018 fec4 	bl	803f35e <strrchr>
 80265d6:	b180      	cbz	r0, 80265fa <PICK_BIN_RETRIES_runTask(PICK_BIN_RETRIES_type_t, unsigned long, PICK_BIN_config_t*, bool)+0x6a>
 80265d8:	212f      	movs	r1, #47	; 0x2f
 80265da:	4811      	ldr	r0, [pc, #68]	; (8026620 <PICK_BIN_RETRIES_runTask(PICK_BIN_RETRIES_type_t, unsigned long, PICK_BIN_config_t*, bool)+0x90>)
 80265dc:	f018 febf 	bl	803f35e <strrchr>
 80265e0:	1c41      	adds	r1, r0, #1
 80265e2:	f898 0004 	ldrb.w	r0, [r8, #4]
 80265e6:	4a0f      	ldr	r2, [pc, #60]	; (8026624 <PICK_BIN_RETRIES_runTask(PICK_BIN_RETRIES_type_t, unsigned long, PICK_BIN_config_t*, bool)+0x94>)
 80265e8:	4b0f      	ldr	r3, [pc, #60]	; (8026628 <PICK_BIN_RETRIES_runTask(PICK_BIN_RETRIES_type_t, unsigned long, PICK_BIN_config_t*, bool)+0x98>)
 80265ea:	f852 2020 	ldr.w	r2, [r2, r0, lsl #2]
 80265ee:	9200      	str	r2, [sp, #0]
 80265f0:	2002      	movs	r0, #2
 80265f2:	22b3      	movs	r2, #179	; 0xb3
 80265f4:	f7fc f8d0 	bl	8022798 <DEBUG_logMsg>
 80265f8:	e7d2      	b.n	80265a0 <PICK_BIN_RETRIES_runTask(PICK_BIN_RETRIES_type_t, unsigned long, PICK_BIN_config_t*, bool)+0x10>
 80265fa:	4809      	ldr	r0, [pc, #36]	; (8026620 <PICK_BIN_RETRIES_runTask(PICK_BIN_RETRIES_type_t, unsigned long, PICK_BIN_config_t*, bool)+0x90>)
 80265fc:	215c      	movs	r1, #92	; 0x5c
 80265fe:	f018 feae 	bl	803f35e <strrchr>
 8026602:	b128      	cbz	r0, 8026610 <PICK_BIN_RETRIES_runTask(PICK_BIN_RETRIES_type_t, unsigned long, PICK_BIN_config_t*, bool)+0x80>
 8026604:	215c      	movs	r1, #92	; 0x5c
 8026606:	4806      	ldr	r0, [pc, #24]	; (8026620 <PICK_BIN_RETRIES_runTask(PICK_BIN_RETRIES_type_t, unsigned long, PICK_BIN_config_t*, bool)+0x90>)
 8026608:	f018 fea9 	bl	803f35e <strrchr>
 802660c:	1c41      	adds	r1, r0, #1
 802660e:	e7e8      	b.n	80265e2 <PICK_BIN_RETRIES_runTask(PICK_BIN_RETRIES_type_t, unsigned long, PICK_BIN_config_t*, bool)+0x52>
 8026610:	4903      	ldr	r1, [pc, #12]	; (8026620 <PICK_BIN_RETRIES_runTask(PICK_BIN_RETRIES_type_t, unsigned long, PICK_BIN_config_t*, bool)+0x90>)
 8026612:	e7e6      	b.n	80265e2 <PICK_BIN_RETRIES_runTask(PICK_BIN_RETRIES_type_t, unsigned long, PICK_BIN_config_t*, bool)+0x52>
 8026614:	20004bd0 	.word	0x20004bd0
 8026618:	200004bc 	.word	0x200004bc
 802661c:	08044c04 	.word	0x08044c04
 8026620:	08044970 	.word	0x08044970
 8026624:	08044c1c 	.word	0x08044c1c
 8026628:	08044a0c 	.word	0x08044a0c
 802662c:	20004bc8 	.word	0x20004bc8

08026630 <_GLOBAL__sub_I__Z24PICK_BIN_RETRIES_runTask23PICK_BIN_RETRIES_type_tmP17PICK_BIN_config_tb>:
 8026630:	4b01      	ldr	r3, [pc, #4]	; (8026638 <_GLOBAL__sub_I__Z24PICK_BIN_RETRIES_runTask23PICK_BIN_RETRIES_type_tmP17PICK_BIN_config_tb+0x8>)
 8026632:	4a02      	ldr	r2, [pc, #8]	; (802663c <_GLOBAL__sub_I__Z24PICK_BIN_RETRIES_runTask23PICK_BIN_RETRIES_type_tmP17PICK_BIN_config_tb+0xc>)
 8026634:	60da      	str	r2, [r3, #12]
 8026636:	4770      	bx	lr
 8026638:	200004bc 	.word	0x200004bc
 802663c:	200003ac 	.word	0x200003ac

08026640 <PLACEPICK_errorStateMachine(unsigned long)>:
 8026640:	b530      	push	{r4, r5, lr}
 8026642:	460d      	mov	r5, r1
 8026644:	b083      	sub	sp, #12
 8026646:	2100      	movs	r1, #0
 8026648:	4604      	mov	r4, r0
 802664a:	f005 fb3f 	bl	802bccc <TaskStatus::TaskStatus(TaskStatus::Result_e)>
 802664e:	4a1e      	ldr	r2, [pc, #120]	; (80266c8 <PLACEPICK_errorStateMachine(unsigned long)+0x88>)
 8026650:	7951      	ldrb	r1, [r2, #5]
 8026652:	2901      	cmp	r1, #1
 8026654:	d007      	beq.n	8026666 <PLACEPICK_errorStateMachine(unsigned long)+0x26>
 8026656:	2902      	cmp	r1, #2
 8026658:	d01c      	beq.n	8026694 <PLACEPICK_errorStateMachine(unsigned long)+0x54>
 802665a:	b189      	cbz	r1, 8026680 <PLACEPICK_errorStateMachine(unsigned long)+0x40>
 802665c:	2302      	movs	r3, #2
 802665e:	4620      	mov	r0, r4
 8026660:	7023      	strb	r3, [r4, #0]
 8026662:	b003      	add	sp, #12
 8026664:	bd30      	pop	{r4, r5, pc}
 8026666:	79d3      	ldrb	r3, [r2, #7]
 8026668:	4629      	mov	r1, r5
 802666a:	4668      	mov	r0, sp
 802666c:	2200      	movs	r2, #0
 802666e:	f003 f8fd 	bl	802986c <BASEMENT_EXIT_runTask(unsigned long, BASEMENT_EXIT_turretState_t, bool)>
 8026672:	4669      	mov	r1, sp
 8026674:	4620      	mov	r0, r4
 8026676:	f005 fb3f 	bl	802bcf8 <TaskStatus::operator=(TaskStatus const&)>
 802667a:	4620      	mov	r0, r4
 802667c:	b003      	add	sp, #12
 802667e:	bd30      	pop	{r4, r5, pc}
 8026680:	7813      	ldrb	r3, [r2, #0]
 8026682:	2b01      	cmp	r3, #1
 8026684:	d912      	bls.n	80266ac <PLACEPICK_errorStateMachine(unsigned long)+0x6c>
 8026686:	2b09      	cmp	r3, #9
 8026688:	d010      	beq.n	80266ac <PLACEPICK_errorStateMachine(unsigned long)+0x6c>
 802668a:	2301      	movs	r3, #1
 802668c:	4620      	mov	r0, r4
 802668e:	7023      	strb	r3, [r4, #0]
 8026690:	b003      	add	sp, #12
 8026692:	bd30      	pop	{r4, r5, pc}
 8026694:	4a0d      	ldr	r2, [pc, #52]	; (80266cc <PLACEPICK_errorStateMachine(unsigned long)+0x8c>)
 8026696:	4668      	mov	r0, sp
 8026698:	6812      	ldr	r2, [r2, #0]
 802669a:	f005 fb1d 	bl	802bcd8 <TaskStatus::TaskStatus(TaskStatus::Result_e, unsigned int)>
 802669e:	4669      	mov	r1, sp
 80266a0:	4620      	mov	r0, r4
 80266a2:	f005 fb29 	bl	802bcf8 <TaskStatus::operator=(TaskStatus const&)>
 80266a6:	4620      	mov	r0, r4
 80266a8:	b003      	add	sp, #12
 80266aa:	bd30      	pop	{r4, r5, pc}
 80266ac:	4b07      	ldr	r3, [pc, #28]	; (80266cc <PLACEPICK_errorStateMachine(unsigned long)+0x8c>)
 80266ae:	4668      	mov	r0, sp
 80266b0:	681a      	ldr	r2, [r3, #0]
 80266b2:	2102      	movs	r1, #2
 80266b4:	f005 fb10 	bl	802bcd8 <TaskStatus::TaskStatus(TaskStatus::Result_e, unsigned int)>
 80266b8:	4669      	mov	r1, sp
 80266ba:	4620      	mov	r0, r4
 80266bc:	f005 fb1c 	bl	802bcf8 <TaskStatus::operator=(TaskStatus const&)>
 80266c0:	4620      	mov	r0, r4
 80266c2:	b003      	add	sp, #12
 80266c4:	bd30      	pop	{r4, r5, pc}
 80266c6:	bf00      	nop
 80266c8:	20004c24 	.word	0x20004c24
 80266cc:	20004c20 	.word	0x20004c20

080266d0 <PLACEPICK_mainStateMachine(unsigned long)>:
 80266d0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80266d2:	460d      	mov	r5, r1
 80266d4:	b08d      	sub	sp, #52	; 0x34
 80266d6:	2100      	movs	r1, #0
 80266d8:	4604      	mov	r4, r0
 80266da:	f005 faf7 	bl	802bccc <TaskStatus::TaskStatus(TaskStatus::Result_e)>
 80266de:	4a9c      	ldr	r2, [pc, #624]	; (8026950 <PLACEPICK_mainStateMachine(unsigned long)+0x280>)
 80266e0:	7813      	ldrb	r3, [r2, #0]
 80266e2:	2b0a      	cmp	r3, #10
 80266e4:	f200 81aa 	bhi.w	8026a3c <PLACEPICK_mainStateMachine(unsigned long)+0x36c>
 80266e8:	e8df f003 	tbb	[pc, r3]
 80266ec:	332c2110 	.word	0x332c2110
 80266f0:	84684a46 	.word	0x84684a46
 80266f4:	a689      	.short	0xa689
 80266f6:	06          	.byte	0x06
 80266f7:	00          	.byte	0x00
 80266f8:	4895      	ldr	r0, [pc, #596]	; (8026950 <PLACEPICK_mainStateMachine(unsigned long)+0x280>)
 80266fa:	2101      	movs	r1, #1
 80266fc:	f001 fe00 	bl	8028300 <SM_RUNNER_setComplete>
 8026700:	7823      	ldrb	r3, [r4, #0]
 8026702:	2b02      	cmp	r3, #2
 8026704:	d032      	beq.n	802676c <PLACEPICK_mainStateMachine(unsigned long)+0x9c>
 8026706:	4620      	mov	r0, r4
 8026708:	b00d      	add	sp, #52	; 0x34
 802670a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 802670c:	4f91      	ldr	r7, [pc, #580]	; (8026954 <PLACEPICK_mainStateMachine(unsigned long)+0x284>)
 802670e:	4b92      	ldr	r3, [pc, #584]	; (8026958 <PLACEPICK_mainStateMachine(unsigned long)+0x288>)
 8026710:	6838      	ldr	r0, [r7, #0]
 8026712:	781d      	ldrb	r5, [r3, #0]
 8026714:	6803      	ldr	r3, [r0, #0]
 8026716:	695b      	ldr	r3, [r3, #20]
 8026718:	4798      	blx	r3
 802671a:	4606      	mov	r6, r0
 802671c:	2d03      	cmp	r5, #3
 802671e:	f200 817b 	bhi.w	8026a18 <PLACEPICK_mainStateMachine(unsigned long)+0x348>
 8026722:	e8df f015 	tbh	[pc, r5, lsl #1]
 8026726:	00ec      	.short	0x00ec
 8026728:	00a600cb 	.word	0x00a600cb
 802672c:	0095      	.short	0x0095
 802672e:	7892      	ldrb	r2, [r2, #2]
 8026730:	4629      	mov	r1, r5
 8026732:	a80a      	add	r0, sp, #40	; 0x28
 8026734:	f7ff faee 	bl	8025d14 <ATTIC_ENTRY_runTask(unsigned long, bool)>
 8026738:	a90a      	add	r1, sp, #40	; 0x28
 802673a:	4620      	mov	r0, r4
 802673c:	f005 fadc 	bl	802bcf8 <TaskStatus::operator=(TaskStatus const&)>
 8026740:	7823      	ldrb	r3, [r4, #0]
 8026742:	e7de      	b.n	8026702 <PLACEPICK_mainStateMachine(unsigned long)+0x32>
 8026744:	2101      	movs	r1, #1
 8026746:	4608      	mov	r0, r1
 8026748:	f7fd fc80 	bl	802404c <CCP_sendProgressMessage>
 802674c:	2301      	movs	r3, #1
 802674e:	7023      	strb	r3, [r4, #0]
 8026750:	e7d9      	b.n	8026706 <PLACEPICK_mainStateMachine(unsigned long)+0x36>
 8026752:	7891      	ldrb	r1, [r2, #2]
 8026754:	a80a      	add	r0, sp, #40	; 0x28
 8026756:	2301      	movs	r3, #1
 8026758:	2211      	movs	r2, #17
 802675a:	f001 f977 	bl	8027a4c <ACTIONS_power(bool, ROBOT_axisIndex_t, AXIS_powerState_t)>
 802675e:	a90a      	add	r1, sp, #40	; 0x28
 8026760:	4620      	mov	r0, r4
 8026762:	f005 fac9 	bl	802bcf8 <TaskStatus::operator=(TaskStatus const&)>
 8026766:	7823      	ldrb	r3, [r4, #0]
 8026768:	2b02      	cmp	r3, #2
 802676a:	d1cc      	bne.n	8026706 <PLACEPICK_mainStateMachine(unsigned long)+0x36>
 802676c:	6863      	ldr	r3, [r4, #4]
 802676e:	4a7b      	ldr	r2, [pc, #492]	; (802695c <PLACEPICK_mainStateMachine(unsigned long)+0x28c>)
 8026770:	4620      	mov	r0, r4
 8026772:	6013      	str	r3, [r2, #0]
 8026774:	b00d      	add	sp, #52	; 0x34
 8026776:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8026778:	7891      	ldrb	r1, [r2, #2]
 802677a:	a80a      	add	r0, sp, #40	; 0x28
 802677c:	2300      	movs	r3, #0
 802677e:	e7eb      	b.n	8026758 <PLACEPICK_mainStateMachine(unsigned long)+0x88>
 8026780:	4b75      	ldr	r3, [pc, #468]	; (8026958 <PLACEPICK_mainStateMachine(unsigned long)+0x288>)
 8026782:	4d77      	ldr	r5, [pc, #476]	; (8026960 <PLACEPICK_mainStateMachine(unsigned long)+0x290>)
 8026784:	6a98      	ldr	r0, [r3, #40]	; 0x28
 8026786:	689b      	ldr	r3, [r3, #8]
 8026788:	7891      	ldrb	r1, [r2, #2]
 802678a:	9008      	str	r0, [sp, #32]
 802678c:	2002      	movs	r0, #2
 802678e:	882a      	ldrh	r2, [r5, #0]
 8026790:	9001      	str	r0, [sp, #4]
 8026792:	2500      	movs	r5, #0
 8026794:	a807      	add	r0, sp, #28
 8026796:	9000      	str	r0, [sp, #0]
 8026798:	9309      	str	r3, [sp, #36]	; 0x24
 802679a:	a80a      	add	r0, sp, #40	; 0x28
 802679c:	ab08      	add	r3, sp, #32
 802679e:	f8ad 2018 	strh.w	r2, [sp, #24]
 80267a2:	e9cd 5502 	strd	r5, r5, [sp, #8]
 80267a6:	aa06      	add	r2, sp, #24
 80267a8:	f8ad 501c 	strh.w	r5, [sp, #28]
 80267ac:	f001 f916 	bl	80279dc <ACTIONS_moveList(bool, ROBOT_axisIndex_t const*, float*, AXIS_moveType_t*, unsigned char, unsigned int, AXIS_mode_t)>
 80267b0:	a90a      	add	r1, sp, #40	; 0x28
 80267b2:	4620      	mov	r0, r4
 80267b4:	f005 faa0 	bl	802bcf8 <TaskStatus::operator=(TaskStatus const&)>
 80267b8:	7823      	ldrb	r3, [r4, #0]
 80267ba:	e7a2      	b.n	8026702 <PLACEPICK_mainStateMachine(unsigned long)+0x32>
 80267bc:	7893      	ldrb	r3, [r2, #2]
 80267be:	4e69      	ldr	r6, [pc, #420]	; (8026964 <PLACEPICK_mainStateMachine(unsigned long)+0x294>)
 80267c0:	9304      	str	r3, [sp, #16]
 80267c2:	e896 000f 	ldmia.w	r6, {r0, r1, r2, r3}
 80267c6:	e88d 000f 	stmia.w	sp, {r0, r1, r2, r3}
 80267ca:	4629      	mov	r1, r5
 80267cc:	e916 000c 	ldmdb	r6, {r2, r3}
 80267d0:	a80a      	add	r0, sp, #40	; 0x28
 80267d2:	f000 fca1 	bl	8027118 <PLACE_BIN_runTask(unsigned long, PLACE_BIN_config_t, bool)>
 80267d6:	a90a      	add	r1, sp, #40	; 0x28
 80267d8:	4620      	mov	r0, r4
 80267da:	f005 fa8d 	bl	802bcf8 <TaskStatus::operator=(TaskStatus const&)>
 80267de:	7823      	ldrb	r3, [r4, #0]
 80267e0:	2b01      	cmp	r3, #1
 80267e2:	d18e      	bne.n	8026702 <PLACEPICK_mainStateMachine(unsigned long)+0x32>
 80267e4:	4960      	ldr	r1, [pc, #384]	; (8026968 <PLACEPICK_mainStateMachine(unsigned long)+0x298>)
 80267e6:	2202      	movs	r2, #2
 80267e8:	2006      	movs	r0, #6
 80267ea:	700b      	strb	r3, [r1, #0]
 80267ec:	f7fd fbfc 	bl	8023fe8 <CCP_sendPriorityMessage>
 80267f0:	7823      	ldrb	r3, [r4, #0]
 80267f2:	e786      	b.n	8026702 <PLACEPICK_mainStateMachine(unsigned long)+0x32>
 80267f4:	4b58      	ldr	r3, [pc, #352]	; (8026958 <PLACEPICK_mainStateMachine(unsigned long)+0x288>)
 80267f6:	4d5a      	ldr	r5, [pc, #360]	; (8026960 <PLACEPICK_mainStateMachine(unsigned long)+0x290>)
 80267f8:	69d8      	ldr	r0, [r3, #28]
 80267fa:	68db      	ldr	r3, [r3, #12]
 80267fc:	e7c4      	b.n	8026788 <PLACEPICK_mainStateMachine(unsigned long)+0xb8>
 80267fe:	7892      	ldrb	r2, [r2, #2]
 8026800:	4b5a      	ldr	r3, [pc, #360]	; (802696c <PLACEPICK_mainStateMachine(unsigned long)+0x29c>)
 8026802:	9203      	str	r2, [sp, #12]
 8026804:	e893 0007 	ldmia.w	r3, {r0, r1, r2}
 8026808:	e88d 0007 	stmia.w	sp, {r0, r1, r2}
 802680c:	4629      	mov	r1, r5
 802680e:	e913 000c 	ldmdb	r3, {r2, r3}
 8026812:	a80a      	add	r0, sp, #40	; 0x28
 8026814:	f7ff fd52 	bl	80262bc <PICK_BIN_runTask(unsigned long, PICK_BIN_config_t, bool)>
 8026818:	a90a      	add	r1, sp, #40	; 0x28
 802681a:	4620      	mov	r0, r4
 802681c:	f005 fa6c 	bl	802bcf8 <TaskStatus::operator=(TaskStatus const&)>
 8026820:	7823      	ldrb	r3, [r4, #0]
 8026822:	2b01      	cmp	r3, #1
 8026824:	f47f af6d 	bne.w	8026702 <PLACEPICK_mainStateMachine(unsigned long)+0x32>
 8026828:	494f      	ldr	r1, [pc, #316]	; (8026968 <PLACEPICK_mainStateMachine(unsigned long)+0x298>)
 802682a:	2202      	movs	r2, #2
 802682c:	2006      	movs	r0, #6
 802682e:	704b      	strb	r3, [r1, #1]
 8026830:	f7fd fbda 	bl	8023fe8 <CCP_sendPriorityMessage>
 8026834:	7823      	ldrb	r3, [r4, #0]
 8026836:	e764      	b.n	8026702 <PLACEPICK_mainStateMachine(unsigned long)+0x32>
 8026838:	7893      	ldrb	r3, [r2, #2]
 802683a:	4629      	mov	r1, r5
 802683c:	a80a      	add	r0, sp, #40	; 0x28
 802683e:	2201      	movs	r2, #1
 8026840:	f003 f814 	bl	802986c <BASEMENT_EXIT_runTask(unsigned long, BASEMENT_EXIT_turretState_t, bool)>
 8026844:	a90a      	add	r1, sp, #40	; 0x28
 8026846:	4620      	mov	r0, r4
 8026848:	f005 fa56 	bl	802bcf8 <TaskStatus::operator=(TaskStatus const&)>
 802684c:	7823      	ldrb	r3, [r4, #0]
 802684e:	e758      	b.n	8026702 <PLACEPICK_mainStateMachine(unsigned long)+0x32>
 8026850:	6838      	ldr	r0, [r7, #0]
 8026852:	6803      	ldr	r3, [r0, #0]
 8026854:	2102      	movs	r1, #2
 8026856:	685b      	ldr	r3, [r3, #4]
 8026858:	4798      	blx	r3
 802685a:	2800      	cmp	r0, #0
 802685c:	f000 8090 	beq.w	8026980 <PLACEPICK_mainStateMachine(unsigned long)+0x2b0>
 8026860:	2301      	movs	r3, #1
 8026862:	7023      	strb	r3, [r4, #0]
 8026864:	4940      	ldr	r1, [pc, #256]	; (8026968 <PLACEPICK_mainStateMachine(unsigned long)+0x298>)
 8026866:	2202      	movs	r2, #2
 8026868:	2006      	movs	r0, #6
 802686a:	f7fd fbbd 	bl	8023fe8 <CCP_sendPriorityMessage>
 802686e:	7823      	ldrb	r3, [r4, #0]
 8026870:	e747      	b.n	8026702 <PLACEPICK_mainStateMachine(unsigned long)+0x32>
 8026872:	6838      	ldr	r0, [r7, #0]
 8026874:	6803      	ldr	r3, [r0, #0]
 8026876:	2102      	movs	r1, #2
 8026878:	685b      	ldr	r3, [r3, #4]
 802687a:	4798      	blx	r3
 802687c:	2800      	cmp	r0, #0
 802687e:	d1ef      	bne.n	8026860 <PLACEPICK_mainStateMachine(unsigned long)+0x190>
 8026880:	483b      	ldr	r0, [pc, #236]	; (8026970 <PLACEPICK_mainStateMachine(unsigned long)+0x2a0>)
 8026882:	212f      	movs	r1, #47	; 0x2f
 8026884:	f018 fd6b 	bl	803f35e <strrchr>
 8026888:	2800      	cmp	r0, #0
 802688a:	f000 80a7 	beq.w	80269dc <PLACEPICK_mainStateMachine(unsigned long)+0x30c>
 802688e:	4838      	ldr	r0, [pc, #224]	; (8026970 <PLACEPICK_mainStateMachine(unsigned long)+0x2a0>)
 8026890:	212f      	movs	r1, #47	; 0x2f
 8026892:	f018 fd64 	bl	803f35e <strrchr>
 8026896:	1c45      	adds	r5, r0, #1
 8026898:	6838      	ldr	r0, [r7, #0]
 802689a:	6803      	ldr	r3, [r0, #0]
 802689c:	4631      	mov	r1, r6
 802689e:	6a1b      	ldr	r3, [r3, #32]
 80268a0:	4798      	blx	r3
 80268a2:	4b34      	ldr	r3, [pc, #208]	; (8026974 <PLACEPICK_mainStateMachine(unsigned long)+0x2a4>)
 80268a4:	9000      	str	r0, [sp, #0]
 80268a6:	4629      	mov	r1, r5
 80268a8:	f44f 7202 	mov.w	r2, #520	; 0x208
 80268ac:	2002      	movs	r0, #2
 80268ae:	f7fb ff73 	bl	8022798 <DEBUG_logMsg>
 80268b2:	2202      	movs	r2, #2
 80268b4:	2318      	movs	r3, #24
 80268b6:	7022      	strb	r2, [r4, #0]
 80268b8:	6063      	str	r3, [r4, #4]
 80268ba:	e758      	b.n	802676e <PLACEPICK_mainStateMachine(unsigned long)+0x9e>
 80268bc:	6838      	ldr	r0, [r7, #0]
 80268be:	6803      	ldr	r3, [r0, #0]
 80268c0:	2101      	movs	r1, #1
 80268c2:	685b      	ldr	r3, [r3, #4]
 80268c4:	4798      	blx	r3
 80268c6:	2800      	cmp	r0, #0
 80268c8:	d1ca      	bne.n	8026860 <PLACEPICK_mainStateMachine(unsigned long)+0x190>
 80268ca:	4829      	ldr	r0, [pc, #164]	; (8026970 <PLACEPICK_mainStateMachine(unsigned long)+0x2a0>)
 80268cc:	212f      	movs	r1, #47	; 0x2f
 80268ce:	f018 fd46 	bl	803f35e <strrchr>
 80268d2:	2800      	cmp	r0, #0
 80268d4:	f000 808d 	beq.w	80269f2 <PLACEPICK_mainStateMachine(unsigned long)+0x322>
 80268d8:	4825      	ldr	r0, [pc, #148]	; (8026970 <PLACEPICK_mainStateMachine(unsigned long)+0x2a0>)
 80268da:	212f      	movs	r1, #47	; 0x2f
 80268dc:	f018 fd3f 	bl	803f35e <strrchr>
 80268e0:	1c45      	adds	r5, r0, #1
 80268e2:	6838      	ldr	r0, [r7, #0]
 80268e4:	6803      	ldr	r3, [r0, #0]
 80268e6:	4631      	mov	r1, r6
 80268e8:	6a1b      	ldr	r3, [r3, #32]
 80268ea:	4798      	blx	r3
 80268ec:	4b22      	ldr	r3, [pc, #136]	; (8026978 <PLACEPICK_mainStateMachine(unsigned long)+0x2a8>)
 80268ee:	9000      	str	r0, [sp, #0]
 80268f0:	4629      	mov	r1, r5
 80268f2:	f44f 7204 	mov.w	r2, #528	; 0x210
 80268f6:	2002      	movs	r0, #2
 80268f8:	f7fb ff4e 	bl	8022798 <DEBUG_logMsg>
 80268fc:	e7d9      	b.n	80268b2 <PLACEPICK_mainStateMachine(unsigned long)+0x1e2>
 80268fe:	6838      	ldr	r0, [r7, #0]
 8026900:	6803      	ldr	r3, [r0, #0]
 8026902:	2102      	movs	r1, #2
 8026904:	685b      	ldr	r3, [r3, #4]
 8026906:	4798      	blx	r3
 8026908:	4605      	mov	r5, r0
 802690a:	6838      	ldr	r0, [r7, #0]
 802690c:	6803      	ldr	r3, [r0, #0]
 802690e:	2101      	movs	r1, #1
 8026910:	685b      	ldr	r3, [r3, #4]
 8026912:	4798      	blx	r3
 8026914:	2d00      	cmp	r5, #0
 8026916:	d1a3      	bne.n	8026860 <PLACEPICK_mainStateMachine(unsigned long)+0x190>
 8026918:	2800      	cmp	r0, #0
 802691a:	d1a1      	bne.n	8026860 <PLACEPICK_mainStateMachine(unsigned long)+0x190>
 802691c:	4814      	ldr	r0, [pc, #80]	; (8026970 <PLACEPICK_mainStateMachine(unsigned long)+0x2a0>)
 802691e:	212f      	movs	r1, #47	; 0x2f
 8026920:	f018 fd1d 	bl	803f35e <strrchr>
 8026924:	2800      	cmp	r0, #0
 8026926:	d043      	beq.n	80269b0 <PLACEPICK_mainStateMachine(unsigned long)+0x2e0>
 8026928:	4811      	ldr	r0, [pc, #68]	; (8026970 <PLACEPICK_mainStateMachine(unsigned long)+0x2a0>)
 802692a:	212f      	movs	r1, #47	; 0x2f
 802692c:	f018 fd17 	bl	803f35e <strrchr>
 8026930:	1c45      	adds	r5, r0, #1
 8026932:	6838      	ldr	r0, [r7, #0]
 8026934:	6803      	ldr	r3, [r0, #0]
 8026936:	4631      	mov	r1, r6
 8026938:	6a1b      	ldr	r3, [r3, #32]
 802693a:	4798      	blx	r3
 802693c:	4b0f      	ldr	r3, [pc, #60]	; (802697c <PLACEPICK_mainStateMachine(unsigned long)+0x2ac>)
 802693e:	9000      	str	r0, [sp, #0]
 8026940:	4629      	mov	r1, r5
 8026942:	f44f 7200 	mov.w	r2, #512	; 0x200
 8026946:	2002      	movs	r0, #2
 8026948:	f7fb ff26 	bl	8022798 <DEBUG_logMsg>
 802694c:	e7b1      	b.n	80268b2 <PLACEPICK_mainStateMachine(unsigned long)+0x1e2>
 802694e:	bf00      	nop
 8026950:	20004c24 	.word	0x20004c24
 8026954:	2000f630 	.word	0x2000f630
 8026958:	20004be4 	.word	0x20004be4
 802695c:	20004c20 	.word	0x20004c20
 8026960:	08044f00 	.word	0x08044f00
 8026964:	20004c10 	.word	0x20004c10
 8026968:	20004c38 	.word	0x20004c38
 802696c:	20004bfc 	.word	0x20004bfc
 8026970:	08044c34 	.word	0x08044c34
 8026974:	08044ca4 	.word	0x08044ca4
 8026978:	08044cc8 	.word	0x08044cc8
 802697c:	08044c7c 	.word	0x08044c7c
 8026980:	4846      	ldr	r0, [pc, #280]	; (8026a9c <PLACEPICK_mainStateMachine(unsigned long)+0x3cc>)
 8026982:	212f      	movs	r1, #47	; 0x2f
 8026984:	f018 fceb 	bl	803f35e <strrchr>
 8026988:	b1e8      	cbz	r0, 80269c6 <PLACEPICK_mainStateMachine(unsigned long)+0x2f6>
 802698a:	4844      	ldr	r0, [pc, #272]	; (8026a9c <PLACEPICK_mainStateMachine(unsigned long)+0x3cc>)
 802698c:	212f      	movs	r1, #47	; 0x2f
 802698e:	f018 fce6 	bl	803f35e <strrchr>
 8026992:	1c45      	adds	r5, r0, #1
 8026994:	6838      	ldr	r0, [r7, #0]
 8026996:	6803      	ldr	r3, [r0, #0]
 8026998:	4631      	mov	r1, r6
 802699a:	6a1b      	ldr	r3, [r3, #32]
 802699c:	4798      	blx	r3
 802699e:	4b40      	ldr	r3, [pc, #256]	; (8026aa0 <PLACEPICK_mainStateMachine(unsigned long)+0x3d0>)
 80269a0:	9000      	str	r0, [sp, #0]
 80269a2:	4629      	mov	r1, r5
 80269a4:	f44f 7206 	mov.w	r2, #536	; 0x218
 80269a8:	2002      	movs	r0, #2
 80269aa:	f7fb fef5 	bl	8022798 <DEBUG_logMsg>
 80269ae:	e780      	b.n	80268b2 <PLACEPICK_mainStateMachine(unsigned long)+0x1e2>
 80269b0:	483a      	ldr	r0, [pc, #232]	; (8026a9c <PLACEPICK_mainStateMachine(unsigned long)+0x3cc>)
 80269b2:	215c      	movs	r1, #92	; 0x5c
 80269b4:	f018 fcd3 	bl	803f35e <strrchr>
 80269b8:	b330      	cbz	r0, 8026a08 <PLACEPICK_mainStateMachine(unsigned long)+0x338>
 80269ba:	4838      	ldr	r0, [pc, #224]	; (8026a9c <PLACEPICK_mainStateMachine(unsigned long)+0x3cc>)
 80269bc:	215c      	movs	r1, #92	; 0x5c
 80269be:	f018 fcce 	bl	803f35e <strrchr>
 80269c2:	1c45      	adds	r5, r0, #1
 80269c4:	e7b5      	b.n	8026932 <PLACEPICK_mainStateMachine(unsigned long)+0x262>
 80269c6:	4835      	ldr	r0, [pc, #212]	; (8026a9c <PLACEPICK_mainStateMachine(unsigned long)+0x3cc>)
 80269c8:	215c      	movs	r1, #92	; 0x5c
 80269ca:	f018 fcc8 	bl	803f35e <strrchr>
 80269ce:	b1f8      	cbz	r0, 8026a10 <PLACEPICK_mainStateMachine(unsigned long)+0x340>
 80269d0:	4832      	ldr	r0, [pc, #200]	; (8026a9c <PLACEPICK_mainStateMachine(unsigned long)+0x3cc>)
 80269d2:	215c      	movs	r1, #92	; 0x5c
 80269d4:	f018 fcc3 	bl	803f35e <strrchr>
 80269d8:	1c45      	adds	r5, r0, #1
 80269da:	e7db      	b.n	8026994 <PLACEPICK_mainStateMachine(unsigned long)+0x2c4>
 80269dc:	482f      	ldr	r0, [pc, #188]	; (8026a9c <PLACEPICK_mainStateMachine(unsigned long)+0x3cc>)
 80269de:	215c      	movs	r1, #92	; 0x5c
 80269e0:	f018 fcbd 	bl	803f35e <strrchr>
 80269e4:	b1b0      	cbz	r0, 8026a14 <PLACEPICK_mainStateMachine(unsigned long)+0x344>
 80269e6:	482d      	ldr	r0, [pc, #180]	; (8026a9c <PLACEPICK_mainStateMachine(unsigned long)+0x3cc>)
 80269e8:	215c      	movs	r1, #92	; 0x5c
 80269ea:	f018 fcb8 	bl	803f35e <strrchr>
 80269ee:	1c45      	adds	r5, r0, #1
 80269f0:	e752      	b.n	8026898 <PLACEPICK_mainStateMachine(unsigned long)+0x1c8>
 80269f2:	482a      	ldr	r0, [pc, #168]	; (8026a9c <PLACEPICK_mainStateMachine(unsigned long)+0x3cc>)
 80269f4:	215c      	movs	r1, #92	; 0x5c
 80269f6:	f018 fcb2 	bl	803f35e <strrchr>
 80269fa:	b138      	cbz	r0, 8026a0c <PLACEPICK_mainStateMachine(unsigned long)+0x33c>
 80269fc:	4827      	ldr	r0, [pc, #156]	; (8026a9c <PLACEPICK_mainStateMachine(unsigned long)+0x3cc>)
 80269fe:	215c      	movs	r1, #92	; 0x5c
 8026a00:	f018 fcad 	bl	803f35e <strrchr>
 8026a04:	1c45      	adds	r5, r0, #1
 8026a06:	e76c      	b.n	80268e2 <PLACEPICK_mainStateMachine(unsigned long)+0x212>
 8026a08:	4d24      	ldr	r5, [pc, #144]	; (8026a9c <PLACEPICK_mainStateMachine(unsigned long)+0x3cc>)
 8026a0a:	e792      	b.n	8026932 <PLACEPICK_mainStateMachine(unsigned long)+0x262>
 8026a0c:	4d23      	ldr	r5, [pc, #140]	; (8026a9c <PLACEPICK_mainStateMachine(unsigned long)+0x3cc>)
 8026a0e:	e768      	b.n	80268e2 <PLACEPICK_mainStateMachine(unsigned long)+0x212>
 8026a10:	4d22      	ldr	r5, [pc, #136]	; (8026a9c <PLACEPICK_mainStateMachine(unsigned long)+0x3cc>)
 8026a12:	e7bf      	b.n	8026994 <PLACEPICK_mainStateMachine(unsigned long)+0x2c4>
 8026a14:	4d21      	ldr	r5, [pc, #132]	; (8026a9c <PLACEPICK_mainStateMachine(unsigned long)+0x3cc>)
 8026a16:	e73f      	b.n	8026898 <PLACEPICK_mainStateMachine(unsigned long)+0x1c8>
 8026a18:	4820      	ldr	r0, [pc, #128]	; (8026a9c <PLACEPICK_mainStateMachine(unsigned long)+0x3cc>)
 8026a1a:	212f      	movs	r1, #47	; 0x2f
 8026a1c:	f018 fc9f 	bl	803f35e <strrchr>
 8026a20:	b308      	cbz	r0, 8026a66 <PLACEPICK_mainStateMachine(unsigned long)+0x396>
 8026a22:	481e      	ldr	r0, [pc, #120]	; (8026a9c <PLACEPICK_mainStateMachine(unsigned long)+0x3cc>)
 8026a24:	212f      	movs	r1, #47	; 0x2f
 8026a26:	f018 fc9a 	bl	803f35e <strrchr>
 8026a2a:	3001      	adds	r0, #1
 8026a2c:	4601      	mov	r1, r0
 8026a2e:	4b1d      	ldr	r3, [pc, #116]	; (8026aa4 <PLACEPICK_mainStateMachine(unsigned long)+0x3d4>)
 8026a30:	f240 221f 	movw	r2, #543	; 0x21f
 8026a34:	2000      	movs	r0, #0
 8026a36:	f7fb feaf 	bl	8022798 <DEBUG_logMsg>
 8026a3a:	e73a      	b.n	80268b2 <PLACEPICK_mainStateMachine(unsigned long)+0x1e2>
 8026a3c:	4817      	ldr	r0, [pc, #92]	; (8026a9c <PLACEPICK_mainStateMachine(unsigned long)+0x3cc>)
 8026a3e:	212f      	movs	r1, #47	; 0x2f
 8026a40:	f018 fc8d 	bl	803f35e <strrchr>
 8026a44:	b1e0      	cbz	r0, 8026a80 <PLACEPICK_mainStateMachine(unsigned long)+0x3b0>
 8026a46:	4815      	ldr	r0, [pc, #84]	; (8026a9c <PLACEPICK_mainStateMachine(unsigned long)+0x3cc>)
 8026a48:	212f      	movs	r1, #47	; 0x2f
 8026a4a:	f018 fc88 	bl	803f35e <strrchr>
 8026a4e:	3001      	adds	r0, #1
 8026a50:	4b15      	ldr	r3, [pc, #84]	; (8026aa8 <PLACEPICK_mainStateMachine(unsigned long)+0x3d8>)
 8026a52:	4601      	mov	r1, r0
 8026a54:	f44f 72a6 	mov.w	r2, #332	; 0x14c
 8026a58:	2000      	movs	r0, #0
 8026a5a:	f7fb fe9d 	bl	8022798 <DEBUG_logMsg>
 8026a5e:	2302      	movs	r3, #2
 8026a60:	7023      	strb	r3, [r4, #0]
 8026a62:	6863      	ldr	r3, [r4, #4]
 8026a64:	e683      	b.n	802676e <PLACEPICK_mainStateMachine(unsigned long)+0x9e>
 8026a66:	480d      	ldr	r0, [pc, #52]	; (8026a9c <PLACEPICK_mainStateMachine(unsigned long)+0x3cc>)
 8026a68:	215c      	movs	r1, #92	; 0x5c
 8026a6a:	f018 fc78 	bl	803f35e <strrchr>
 8026a6e:	b128      	cbz	r0, 8026a7c <PLACEPICK_mainStateMachine(unsigned long)+0x3ac>
 8026a70:	480a      	ldr	r0, [pc, #40]	; (8026a9c <PLACEPICK_mainStateMachine(unsigned long)+0x3cc>)
 8026a72:	215c      	movs	r1, #92	; 0x5c
 8026a74:	f018 fc73 	bl	803f35e <strrchr>
 8026a78:	3001      	adds	r0, #1
 8026a7a:	e7d7      	b.n	8026a2c <PLACEPICK_mainStateMachine(unsigned long)+0x35c>
 8026a7c:	4807      	ldr	r0, [pc, #28]	; (8026a9c <PLACEPICK_mainStateMachine(unsigned long)+0x3cc>)
 8026a7e:	e7d5      	b.n	8026a2c <PLACEPICK_mainStateMachine(unsigned long)+0x35c>
 8026a80:	4806      	ldr	r0, [pc, #24]	; (8026a9c <PLACEPICK_mainStateMachine(unsigned long)+0x3cc>)
 8026a82:	215c      	movs	r1, #92	; 0x5c
 8026a84:	f018 fc6b 	bl	803f35e <strrchr>
 8026a88:	b128      	cbz	r0, 8026a96 <PLACEPICK_mainStateMachine(unsigned long)+0x3c6>
 8026a8a:	4804      	ldr	r0, [pc, #16]	; (8026a9c <PLACEPICK_mainStateMachine(unsigned long)+0x3cc>)
 8026a8c:	215c      	movs	r1, #92	; 0x5c
 8026a8e:	f018 fc66 	bl	803f35e <strrchr>
 8026a92:	3001      	adds	r0, #1
 8026a94:	e7dc      	b.n	8026a50 <PLACEPICK_mainStateMachine(unsigned long)+0x380>
 8026a96:	4801      	ldr	r0, [pc, #4]	; (8026a9c <PLACEPICK_mainStateMachine(unsigned long)+0x3cc>)
 8026a98:	e7da      	b.n	8026a50 <PLACEPICK_mainStateMachine(unsigned long)+0x380>
 8026a9a:	bf00      	nop
 8026a9c:	08044c34 	.word	0x08044c34
 8026aa0:	08044cec 	.word	0x08044cec
 8026aa4:	08044d10 	.word	0x08044d10
 8026aa8:	08044d2c 	.word	0x08044d2c

08026aac <PLACEPICK_setup()>:
 8026aac:	b538      	push	{r3, r4, r5, lr}
 8026aae:	4b09      	ldr	r3, [pc, #36]	; (8026ad4 <PLACEPICK_setup()+0x28>)
 8026ab0:	4d09      	ldr	r5, [pc, #36]	; (8026ad8 <PLACEPICK_setup()+0x2c>)
 8026ab2:	220c      	movs	r2, #12
 8026ab4:	4604      	mov	r4, r0
 8026ab6:	741a      	strb	r2, [r3, #16]
 8026ab8:	f883 2024 	strb.w	r2, [r3, #36]	; 0x24
 8026abc:	2100      	movs	r1, #0
 8026abe:	2202      	movs	r2, #2
 8026ac0:	4806      	ldr	r0, [pc, #24]	; (8026adc <PLACEPICK_setup()+0x30>)
 8026ac2:	6029      	str	r1, [r5, #0]
 8026ac4:	f018 fdc6 	bl	803f654 <memset>
 8026ac8:	4620      	mov	r0, r4
 8026aca:	2101      	movs	r1, #1
 8026acc:	f005 f8fe 	bl	802bccc <TaskStatus::TaskStatus(TaskStatus::Result_e)>
 8026ad0:	4620      	mov	r0, r4
 8026ad2:	bd38      	pop	{r3, r4, r5, pc}
 8026ad4:	20004be4 	.word	0x20004be4
 8026ad8:	20004c20 	.word	0x20004c20
 8026adc:	20004c38 	.word	0x20004c38

08026ae0 <PLACEPICK_runTask(COMM_CCP_pick_t*, unsigned long, bool)>:
 8026ae0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8026ae4:	ed2d 8b02 	vpush	{d8}
 8026ae8:	4605      	mov	r5, r0
 8026aea:	b08f      	sub	sp, #60	; 0x3c
 8026aec:	4617      	mov	r7, r2
 8026aee:	461e      	mov	r6, r3
 8026af0:	b993      	cbnz	r3, 8026b18 <PLACEPICK_runTask(COMM_CCP_pick_t*, unsigned long, bool)+0x38>
 8026af2:	f10d 0830 	add.w	r8, sp, #48	; 0x30
 8026af6:	4aa5      	ldr	r2, [pc, #660]	; (8026d8c <PLACEPICK_runTask(COMM_CCP_pick_t*, unsigned long, bool)+0x2ac>)
 8026af8:	49a5      	ldr	r1, [pc, #660]	; (8026d90 <PLACEPICK_runTask(COMM_CCP_pick_t*, unsigned long, bool)+0x2b0>)
 8026afa:	9600      	str	r6, [sp, #0]
 8026afc:	463b      	mov	r3, r7
 8026afe:	4640      	mov	r0, r8
 8026b00:	f001 fa0c 	bl	8027f1c <SM_RUNNER_runStateMachine>
 8026b04:	4641      	mov	r1, r8
 8026b06:	4628      	mov	r0, r5
 8026b08:	f005 f8ee 	bl	802bce8 <TaskStatus::TaskStatus(TaskStatus const&)>
 8026b0c:	4628      	mov	r0, r5
 8026b0e:	b00f      	add	sp, #60	; 0x3c
 8026b10:	ecbd 8b02 	vpop	{d8}
 8026b14:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8026b18:	4608      	mov	r0, r1
 8026b1a:	2900      	cmp	r1, #0
 8026b1c:	d034      	beq.n	8026b88 <PLACEPICK_runTask(COMM_CCP_pick_t*, unsigned long, bool)+0xa8>
 8026b1e:	f891 8002 	ldrb.w	r8, [r1, #2]
 8026b22:	f891 9000 	ldrb.w	r9, [r1]
 8026b26:	784b      	ldrb	r3, [r1, #1]
 8026b28:	f891 a003 	ldrb.w	sl, [r1, #3]
 8026b2c:	f890 b006 	ldrb.w	fp, [r0, #6]
 8026b30:	7909      	ldrb	r1, [r1, #4]
 8026b32:	f1b8 0f00 	cmp.w	r8, #0
 8026b36:	d032      	beq.n	8026b9e <PLACEPICK_runTask(COMM_CCP_pick_t*, unsigned long, bool)+0xbe>
 8026b38:	f1b9 0f00 	cmp.w	r9, #0
 8026b3c:	bf14      	ite	ne
 8026b3e:	2203      	movne	r2, #3
 8026b40:	2201      	moveq	r2, #1
 8026b42:	4c94      	ldr	r4, [pc, #592]	; (8026d94 <PLACEPICK_runTask(COMM_CCP_pick_t*, unsigned long, bool)+0x2b4>)
 8026b44:	4894      	ldr	r0, [pc, #592]	; (8026d98 <PLACEPICK_runTask(COMM_CCP_pick_t*, unsigned long, bool)+0x2b8>)
 8026b46:	9307      	str	r3, [sp, #28]
 8026b48:	7022      	strb	r2, [r4, #0]
 8026b4a:	f009 fa71 	bl	8030030 <Nest::setHeight_bins(unsigned char)>
 8026b4e:	4992      	ldr	r1, [pc, #584]	; (8026d98 <PLACEPICK_runTask(COMM_CCP_pick_t*, unsigned long, bool)+0x2b8>)
 8026b50:	a808      	add	r0, sp, #32
 8026b52:	f009 fb21 	bl	8030198 <Nest::getStructureHeight()>
 8026b56:	4642      	mov	r2, r8
 8026b58:	498f      	ldr	r1, [pc, #572]	; (8026d98 <PLACEPICK_runTask(COMM_CCP_pick_t*, unsigned long, bool)+0x2b8>)
 8026b5a:	a80a      	add	r0, sp, #40	; 0x28
 8026b5c:	f10d 0830 	add.w	r8, sp, #48	; 0x30
 8026b60:	f009 fad6 	bl	8030110 <Nest::getShelfHeight(unsigned char)>
 8026b64:	498c      	ldr	r1, [pc, #560]	; (8026d98 <PLACEPICK_runTask(COMM_CCP_pick_t*, unsigned long, bool)+0x2b8>)
 8026b66:	464a      	mov	r2, r9
 8026b68:	4640      	mov	r0, r8
 8026b6a:	f009 fad1 	bl	8030110 <Nest::getShelfHeight(unsigned char)>
 8026b6e:	7822      	ldrb	r2, [r4, #0]
 8026b70:	f89d 1024 	ldrb.w	r1, [sp, #36]	; 0x24
 8026b74:	9b07      	ldr	r3, [sp, #28]
 8026b76:	2a03      	cmp	r2, #3
 8026b78:	f200 8102 	bhi.w	8026d80 <PLACEPICK_runTask(COMM_CCP_pick_t*, unsigned long, bool)+0x2a0>
 8026b7c:	e8df f012 	tbh	[pc, r2, lsl #1]
 8026b80:	00bf00d4 	.word	0x00bf00d4
 8026b84:	0015001b 	.word	0x0015001b
 8026b88:	2209      	movs	r2, #9
 8026b8a:	2102      	movs	r1, #2
 8026b8c:	4628      	mov	r0, r5
 8026b8e:	f005 f8a3 	bl	802bcd8 <TaskStatus::TaskStatus(TaskStatus::Result_e, unsigned int)>
 8026b92:	4628      	mov	r0, r5
 8026b94:	b00f      	add	sp, #60	; 0x3c
 8026b96:	ecbd 8b02 	vpop	{d8}
 8026b9a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8026b9e:	f1b9 0f00 	cmp.w	r9, #0
 8026ba2:	bf14      	ite	ne
 8026ba4:	2202      	movne	r2, #2
 8026ba6:	2200      	moveq	r2, #0
 8026ba8:	e7cb      	b.n	8026b42 <PLACEPICK_runTask(COMM_CCP_pick_t*, unsigned long, bool)+0x62>
 8026baa:	f89d 202c 	ldrb.w	r2, [sp, #44]	; 0x2c
 8026bae:	9207      	str	r2, [sp, #28]
 8026bb0:	2a00      	cmp	r2, #0
 8026bb2:	f000 80e2 	beq.w	8026d7a <PLACEPICK_runTask(COMM_CCP_pick_t*, unsigned long, bool)+0x29a>
 8026bb6:	f89d 2034 	ldrb.w	r2, [sp, #52]	; 0x34
 8026bba:	ea01 0002 	and.w	r0, r1, r2
 8026bbe:	9007      	str	r0, [sp, #28]
 8026bc0:	2900      	cmp	r1, #0
 8026bc2:	f000 80a5 	beq.w	8026d10 <PLACEPICK_runTask(COMM_CCP_pick_t*, unsigned long, bool)+0x230>
 8026bc6:	9908      	ldr	r1, [sp, #32]
 8026bc8:	6061      	str	r1, [r4, #4]
 8026bca:	2a00      	cmp	r2, #0
 8026bcc:	f000 80a5 	beq.w	8026d1a <PLACEPICK_runTask(COMM_CCP_pick_t*, unsigned long, bool)+0x23a>
 8026bd0:	ed9f 7a72 	vldr	s14, [pc, #456]	; 8026d9c <PLACEPICK_runTask(COMM_CCP_pick_t*, unsigned long, bool)+0x2bc>
 8026bd4:	eddd 7a0c 	vldr	s15, [sp, #48]	; 0x30
 8026bd8:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8026bdc:	eef2 6a0c 	vmov.f32	s13, #44	; 0x41600000  14.0
 8026be0:	eeb1 7a08 	vmov.f32	s14, #24	; 0x40c00000  6.0
 8026be4:	ee77 6ae6 	vsub.f32	s13, s15, s13
 8026be8:	ee37 7a87 	vadd.f32	s14, s15, s14
 8026bec:	f8df 91dc 	ldr.w	r9, [pc, #476]	; 8026dcc <PLACEPICK_runTask(COMM_CCP_pick_t*, unsigned long, bool)+0x2ec>
 8026bf0:	486b      	ldr	r0, [pc, #428]	; (8026da0 <PLACEPICK_runTask(COMM_CCP_pick_t*, unsigned long, bool)+0x2c0>)
 8026bf2:	edc4 7a0b 	vstr	s15, [r4, #44]	; 0x2c
 8026bf6:	eb09 0283 	add.w	r2, r9, r3, lsl #2
 8026bfa:	212f      	movs	r1, #47	; 0x2f
 8026bfc:	6812      	ldr	r2, [r2, #0]
 8026bfe:	edc4 7a0a 	vstr	s15, [r4, #40]	; 0x28
 8026c02:	edc4 6a0c 	vstr	s13, [r4, #48]	; 0x30
 8026c06:	ed84 7a0d 	vstr	s14, [r4, #52]	; 0x34
 8026c0a:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38
 8026c0e:	60a2      	str	r2, [r4, #8]
 8026c10:	f018 fba5 	bl	803f35e <strrchr>
 8026c14:	2800      	cmp	r0, #0
 8026c16:	f000 8090 	beq.w	8026d3a <PLACEPICK_runTask(COMM_CCP_pick_t*, unsigned long, bool)+0x25a>
 8026c1a:	4861      	ldr	r0, [pc, #388]	; (8026da0 <PLACEPICK_runTask(COMM_CCP_pick_t*, unsigned long, bool)+0x2c0>)
 8026c1c:	212f      	movs	r1, #47	; 0x2f
 8026c1e:	f018 fb9e 	bl	803f35e <strrchr>
 8026c22:	1c43      	adds	r3, r0, #1
 8026c24:	ee08 3a10 	vmov	s16, r3
 8026c28:	6b20      	ldr	r0, [r4, #48]	; 0x30
 8026c2a:	f017 fc16 	bl	803e45a <__aeabi_f2d>
 8026c2e:	4602      	mov	r2, r0
 8026c30:	460b      	mov	r3, r1
 8026c32:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 8026c34:	e9cd 2304 	strd	r2, r3, [sp, #16]
 8026c38:	f017 fc0f 	bl	803e45a <__aeabi_f2d>
 8026c3c:	4602      	mov	r2, r0
 8026c3e:	460b      	mov	r3, r1
 8026c40:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
 8026c42:	e9cd 2302 	strd	r2, r3, [sp, #8]
 8026c46:	f017 fc08 	bl	803e45a <__aeabi_f2d>
 8026c4a:	4b56      	ldr	r3, [pc, #344]	; (8026da4 <PLACEPICK_runTask(COMM_CCP_pick_t*, unsigned long, bool)+0x2c4>)
 8026c4c:	e9cd 0100 	strd	r0, r1, [sp]
 8026c50:	f240 12c1 	movw	r2, #449	; 0x1c1
 8026c54:	ee18 1a10 	vmov	r1, s16
 8026c58:	2002      	movs	r0, #2
 8026c5a:	f7fb fd9d 	bl	8022798 <DEBUG_logMsg>
 8026c5e:	f89d 302c 	ldrb.w	r3, [sp, #44]	; 0x2c
 8026c62:	2b00      	cmp	r3, #0
 8026c64:	d064      	beq.n	8026d30 <PLACEPICK_runTask(COMM_CCP_pick_t*, unsigned long, bool)+0x250>
 8026c66:	ed9f 7a50 	vldr	s14, [pc, #320]	; 8026da8 <PLACEPICK_runTask(COMM_CCP_pick_t*, unsigned long, bool)+0x2c8>
 8026c6a:	eddd 7a0a 	vldr	s15, [sp, #40]	; 0x28
 8026c6e:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8026c72:	eeb2 7a0c 	vmov.f32	s14, #44	; 0x41600000  14.0
 8026c76:	ee37 7ac7 	vsub.f32	s14, s15, s14
 8026c7a:	eb09 098a 	add.w	r9, r9, sl, lsl #2
 8026c7e:	4848      	ldr	r0, [pc, #288]	; (8026da0 <PLACEPICK_runTask(COMM_CCP_pick_t*, unsigned long, bool)+0x2c0>)
 8026c80:	f8d9 3000 	ldr.w	r3, [r9]
 8026c84:	edc4 7a06 	vstr	s15, [r4, #24]
 8026c88:	212f      	movs	r1, #47	; 0x2f
 8026c8a:	60e3      	str	r3, [r4, #12]
 8026c8c:	edc4 7a05 	vstr	s15, [r4, #20]
 8026c90:	ed84 7a07 	vstr	s14, [r4, #28]
 8026c94:	f884 a020 	strb.w	sl, [r4, #32]
 8026c98:	f018 fb61 	bl	803f35e <strrchr>
 8026c9c:	2800      	cmp	r0, #0
 8026c9e:	d059      	beq.n	8026d54 <PLACEPICK_runTask(COMM_CCP_pick_t*, unsigned long, bool)+0x274>
 8026ca0:	483f      	ldr	r0, [pc, #252]	; (8026da0 <PLACEPICK_runTask(COMM_CCP_pick_t*, unsigned long, bool)+0x2c0>)
 8026ca2:	212f      	movs	r1, #47	; 0x2f
 8026ca4:	f018 fb5b 	bl	803f35e <strrchr>
 8026ca8:	f100 0901 	add.w	r9, r0, #1
 8026cac:	6960      	ldr	r0, [r4, #20]
 8026cae:	f017 fbd4 	bl	803e45a <__aeabi_f2d>
 8026cb2:	4602      	mov	r2, r0
 8026cb4:	460b      	mov	r3, r1
 8026cb6:	69e0      	ldr	r0, [r4, #28]
 8026cb8:	e9cd 2304 	strd	r2, r3, [sp, #16]
 8026cbc:	f017 fbcd 	bl	803e45a <__aeabi_f2d>
 8026cc0:	4602      	mov	r2, r0
 8026cc2:	460b      	mov	r3, r1
 8026cc4:	69a0      	ldr	r0, [r4, #24]
 8026cc6:	e9cd 2302 	strd	r2, r3, [sp, #8]
 8026cca:	f017 fbc6 	bl	803e45a <__aeabi_f2d>
 8026cce:	4b37      	ldr	r3, [pc, #220]	; (8026dac <PLACEPICK_runTask(COMM_CCP_pick_t*, unsigned long, bool)+0x2cc>)
 8026cd0:	e9cd 0100 	strd	r0, r1, [sp]
 8026cd4:	f240 12cd 	movw	r2, #461	; 0x1cd
 8026cd8:	4649      	mov	r1, r9
 8026cda:	2002      	movs	r0, #2
 8026cdc:	f7fb fd5c 	bl	8022798 <DEBUG_logMsg>
 8026ce0:	4833      	ldr	r0, [pc, #204]	; (8026db0 <PLACEPICK_runTask(COMM_CCP_pick_t*, unsigned long, bool)+0x2d0>)
 8026ce2:	4659      	mov	r1, fp
 8026ce4:	f7fb ffe0 	bl	8022ca8 <Robot::setBusVoltage(unsigned char)>
 8026ce8:	9b07      	ldr	r3, [sp, #28]
 8026cea:	2b00      	cmp	r3, #0
 8026cec:	f43f af4c 	beq.w	8026b88 <PLACEPICK_runTask(COMM_CCP_pick_t*, unsigned long, bool)+0xa8>
 8026cf0:	7821      	ldrb	r1, [r4, #0]
 8026cf2:	4a30      	ldr	r2, [pc, #192]	; (8026db4 <PLACEPICK_runTask(COMM_CCP_pick_t*, unsigned long, bool)+0x2d4>)
 8026cf4:	4b26      	ldr	r3, [pc, #152]	; (8026d90 <PLACEPICK_runTask(COMM_CCP_pick_t*, unsigned long, bool)+0x2b0>)
 8026cf6:	f852 2021 	ldr.w	r2, [r2, r1, lsl #2]
 8026cfa:	60da      	str	r2, [r3, #12]
 8026cfc:	e6fb      	b.n	8026af6 <PLACEPICK_runTask(COMM_CCP_pick_t*, unsigned long, bool)+0x16>
 8026cfe:	f89d 002c 	ldrb.w	r0, [sp, #44]	; 0x2c
 8026d02:	f89d 2034 	ldrb.w	r2, [sp, #52]	; 0x34
 8026d06:	4008      	ands	r0, r1
 8026d08:	9007      	str	r0, [sp, #28]
 8026d0a:	2900      	cmp	r1, #0
 8026d0c:	f47f af5b 	bne.w	8026bc6 <PLACEPICK_runTask(COMM_CCP_pick_t*, unsigned long, bool)+0xe6>
 8026d10:	2100      	movs	r1, #0
 8026d12:	6061      	str	r1, [r4, #4]
 8026d14:	2a00      	cmp	r2, #0
 8026d16:	f47f af5b 	bne.w	8026bd0 <PLACEPICK_runTask(COMM_CCP_pick_t*, unsigned long, bool)+0xf0>
 8026d1a:	ed9f 7a27 	vldr	s14, [pc, #156]	; 8026db8 <PLACEPICK_runTask(COMM_CCP_pick_t*, unsigned long, bool)+0x2d8>
 8026d1e:	eddf 6a27 	vldr	s13, [pc, #156]	; 8026dbc <PLACEPICK_runTask(COMM_CCP_pick_t*, unsigned long, bool)+0x2dc>
 8026d22:	eddf 7a27 	vldr	s15, [pc, #156]	; 8026dc0 <PLACEPICK_runTask(COMM_CCP_pick_t*, unsigned long, bool)+0x2e0>
 8026d26:	e761      	b.n	8026bec <PLACEPICK_runTask(COMM_CCP_pick_t*, unsigned long, bool)+0x10c>
 8026d28:	f89d 2034 	ldrb.w	r2, [sp, #52]	; 0x34
 8026d2c:	9107      	str	r1, [sp, #28]
 8026d2e:	e747      	b.n	8026bc0 <PLACEPICK_runTask(COMM_CCP_pick_t*, unsigned long, bool)+0xe0>
 8026d30:	ed9f 7a24 	vldr	s14, [pc, #144]	; 8026dc4 <PLACEPICK_runTask(COMM_CCP_pick_t*, unsigned long, bool)+0x2e4>
 8026d34:	eddf 7a24 	vldr	s15, [pc, #144]	; 8026dc8 <PLACEPICK_runTask(COMM_CCP_pick_t*, unsigned long, bool)+0x2e8>
 8026d38:	e79f      	b.n	8026c7a <PLACEPICK_runTask(COMM_CCP_pick_t*, unsigned long, bool)+0x19a>
 8026d3a:	4819      	ldr	r0, [pc, #100]	; (8026da0 <PLACEPICK_runTask(COMM_CCP_pick_t*, unsigned long, bool)+0x2c0>)
 8026d3c:	215c      	movs	r1, #92	; 0x5c
 8026d3e:	f018 fb0e 	bl	803f35e <strrchr>
 8026d42:	b198      	cbz	r0, 8026d6c <PLACEPICK_runTask(COMM_CCP_pick_t*, unsigned long, bool)+0x28c>
 8026d44:	4816      	ldr	r0, [pc, #88]	; (8026da0 <PLACEPICK_runTask(COMM_CCP_pick_t*, unsigned long, bool)+0x2c0>)
 8026d46:	215c      	movs	r1, #92	; 0x5c
 8026d48:	f018 fb09 	bl	803f35e <strrchr>
 8026d4c:	1c43      	adds	r3, r0, #1
 8026d4e:	ee08 3a10 	vmov	s16, r3
 8026d52:	e769      	b.n	8026c28 <PLACEPICK_runTask(COMM_CCP_pick_t*, unsigned long, bool)+0x148>
 8026d54:	4812      	ldr	r0, [pc, #72]	; (8026da0 <PLACEPICK_runTask(COMM_CCP_pick_t*, unsigned long, bool)+0x2c0>)
 8026d56:	215c      	movs	r1, #92	; 0x5c
 8026d58:	f018 fb01 	bl	803f35e <strrchr>
 8026d5c:	b150      	cbz	r0, 8026d74 <PLACEPICK_runTask(COMM_CCP_pick_t*, unsigned long, bool)+0x294>
 8026d5e:	4810      	ldr	r0, [pc, #64]	; (8026da0 <PLACEPICK_runTask(COMM_CCP_pick_t*, unsigned long, bool)+0x2c0>)
 8026d60:	215c      	movs	r1, #92	; 0x5c
 8026d62:	f018 fafc 	bl	803f35e <strrchr>
 8026d66:	f100 0901 	add.w	r9, r0, #1
 8026d6a:	e79f      	b.n	8026cac <PLACEPICK_runTask(COMM_CCP_pick_t*, unsigned long, bool)+0x1cc>
 8026d6c:	4b0c      	ldr	r3, [pc, #48]	; (8026da0 <PLACEPICK_runTask(COMM_CCP_pick_t*, unsigned long, bool)+0x2c0>)
 8026d6e:	ee08 3a10 	vmov	s16, r3
 8026d72:	e759      	b.n	8026c28 <PLACEPICK_runTask(COMM_CCP_pick_t*, unsigned long, bool)+0x148>
 8026d74:	f8df 9028 	ldr.w	r9, [pc, #40]	; 8026da0 <PLACEPICK_runTask(COMM_CCP_pick_t*, unsigned long, bool)+0x2c0>
 8026d78:	e798      	b.n	8026cac <PLACEPICK_runTask(COMM_CCP_pick_t*, unsigned long, bool)+0x1cc>
 8026d7a:	f89d 2034 	ldrb.w	r2, [sp, #52]	; 0x34
 8026d7e:	e71f      	b.n	8026bc0 <PLACEPICK_runTask(COMM_CCP_pick_t*, unsigned long, bool)+0xe0>
 8026d80:	2000      	movs	r0, #0
 8026d82:	f89d 2034 	ldrb.w	r2, [sp, #52]	; 0x34
 8026d86:	9007      	str	r0, [sp, #28]
 8026d88:	e71a      	b.n	8026bc0 <PLACEPICK_runTask(COMM_CCP_pick_t*, unsigned long, bool)+0xe0>
 8026d8a:	bf00      	nop
 8026d8c:	20004c24 	.word	0x20004c24
 8026d90:	2000050c 	.word	0x2000050c
 8026d94:	20004be4 	.word	0x20004be4
 8026d98:	20004b30 	.word	0x20004b30
 8026d9c:	43668000 	.word	0x43668000
 8026da0:	08044c34 	.word	0x08044c34
 8026da4:	08044d4c 	.word	0x08044d4c
 8026da8:	43670000 	.word	0x43670000
 8026dac:	08044d98 	.word	0x08044d98
 8026db0:	2000f630 	.word	0x2000f630
 8026db4:	08044f04 	.word	0x08044f04
 8026db8:	c3608000 	.word	0xc3608000
 8026dbc:	c3748000 	.word	0xc3748000
 8026dc0:	c3668000 	.word	0xc3668000
 8026dc4:	c3750000 	.word	0xc3750000
 8026dc8:	c3670000 	.word	0xc3670000
 8026dcc:	08044f14 	.word	0x08044f14
 8026dd0:	81010ec9 	.word	0x81010ec9
 8026dd4:	80afb0b0 	.word	0x80afb0b0
 8026dd8:	00000000 	.word	0x00000000

08026ddc <_GLOBAL__sub_I_binTransactionRecord>:
 8026ddc:	4b01      	ldr	r3, [pc, #4]	; (8026de4 <_GLOBAL__sub_I_binTransactionRecord+0x8>)
 8026dde:	4a02      	ldr	r2, [pc, #8]	; (8026de8 <_GLOBAL__sub_I_binTransactionRecord+0xc>)
 8026de0:	60da      	str	r2, [r3, #12]
 8026de2:	4770      	bx	lr
 8026de4:	2000050c 	.word	0x2000050c
 8026de8:	2000074c 	.word	0x2000074c

08026dec <PLACE_BIN_setup()>:
 8026dec:	b510      	push	{r4, lr}
 8026dee:	4b04      	ldr	r3, [pc, #16]	; (8026e00 <PLACE_BIN_setup()+0x14>)
 8026df0:	4604      	mov	r4, r0
 8026df2:	2200      	movs	r2, #0
 8026df4:	2101      	movs	r1, #1
 8026df6:	701a      	strb	r2, [r3, #0]
 8026df8:	f004 ff68 	bl	802bccc <TaskStatus::TaskStatus(TaskStatus::Result_e)>
 8026dfc:	4620      	mov	r0, r4
 8026dfe:	bd10      	pop	{r4, pc}
 8026e00:	20004c4c 	.word	0x20004c4c

08026e04 <PLACE_BIN_errorStateMachine(unsigned long)>:
 8026e04:	b5f0      	push	{r4, r5, r6, r7, lr}
 8026e06:	4e57      	ldr	r6, [pc, #348]	; (8026f64 <PLACE_BIN_errorStateMachine(unsigned long)+0x160>)
 8026e08:	b087      	sub	sp, #28
 8026e0a:	460f      	mov	r7, r1
 8026e0c:	2100      	movs	r1, #0
 8026e0e:	4604      	mov	r4, r0
 8026e10:	f004 ff5c 	bl	802bccc <TaskStatus::TaskStatus(TaskStatus::Result_e)>
 8026e14:	7975      	ldrb	r5, [r6, #5]
 8026e16:	2d01      	cmp	r5, #1
 8026e18:	d005      	beq.n	8026e26 <PLACE_BIN_errorStateMachine(unsigned long)+0x22>
 8026e1a:	2d02      	cmp	r5, #2
 8026e1c:	d026      	beq.n	8026e6c <PLACE_BIN_errorStateMachine(unsigned long)+0x68>
 8026e1e:	b195      	cbz	r5, 8026e46 <PLACE_BIN_errorStateMachine(unsigned long)+0x42>
 8026e20:	4620      	mov	r0, r4
 8026e22:	b007      	add	sp, #28
 8026e24:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8026e26:	79f2      	ldrb	r2, [r6, #7]
 8026e28:	4b4f      	ldr	r3, [pc, #316]	; (8026f68 <PLACE_BIN_errorStateMachine(unsigned long)+0x164>)
 8026e2a:	9200      	str	r2, [sp, #0]
 8026e2c:	7819      	ldrb	r1, [r3, #0]
 8026e2e:	4b4f      	ldr	r3, [pc, #316]	; (8026f6c <PLACE_BIN_errorStateMachine(unsigned long)+0x168>)
 8026e30:	463a      	mov	r2, r7
 8026e32:	a804      	add	r0, sp, #16
 8026e34:	f000 fade 	bl	80273f4 <PLACE_BIN_RETRIES_runTask(PLACE_BIN_RETRIES_type_t, unsigned long, PLACE_BIN_config_t*, bool)>
 8026e38:	a904      	add	r1, sp, #16
 8026e3a:	4620      	mov	r0, r4
 8026e3c:	f004 ff5c 	bl	802bcf8 <TaskStatus::operator=(TaskStatus const&)>
 8026e40:	4620      	mov	r0, r4
 8026e42:	b007      	add	sp, #28
 8026e44:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8026e46:	a802      	add	r0, sp, #8
 8026e48:	2101      	movs	r1, #1
 8026e4a:	f004 ff3f 	bl	802bccc <TaskStatus::TaskStatus(TaskStatus::Result_e)>
 8026e4e:	7833      	ldrb	r3, [r6, #0]
 8026e50:	2b02      	cmp	r3, #2
 8026e52:	d01e      	beq.n	8026e92 <PLACE_BIN_errorStateMachine(unsigned long)+0x8e>
 8026e54:	2b07      	cmp	r3, #7
 8026e56:	d013      	beq.n	8026e80 <PLACE_BIN_errorStateMachine(unsigned long)+0x7c>
 8026e58:	4b43      	ldr	r3, [pc, #268]	; (8026f68 <PLACE_BIN_errorStateMachine(unsigned long)+0x164>)
 8026e5a:	2202      	movs	r2, #2
 8026e5c:	701a      	strb	r2, [r3, #0]
 8026e5e:	a902      	add	r1, sp, #8
 8026e60:	4620      	mov	r0, r4
 8026e62:	f004 ff49 	bl	802bcf8 <TaskStatus::operator=(TaskStatus const&)>
 8026e66:	4620      	mov	r0, r4
 8026e68:	b007      	add	sp, #28
 8026e6a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8026e6c:	4b3e      	ldr	r3, [pc, #248]	; (8026f68 <PLACE_BIN_errorStateMachine(unsigned long)+0x164>)
 8026e6e:	781b      	ldrb	r3, [r3, #0]
 8026e70:	2201      	movs	r2, #1
 8026e72:	7022      	strb	r2, [r4, #0]
 8026e74:	2b03      	cmp	r3, #3
 8026e76:	d872      	bhi.n	8026f5e <PLACE_BIN_errorStateMachine(unsigned long)+0x15a>
 8026e78:	e8df f003 	tbb	[pc, r3]
 8026e7c:	33384447 	.word	0x33384447
 8026e80:	4a3b      	ldr	r2, [pc, #236]	; (8026f70 <PLACE_BIN_errorStateMachine(unsigned long)+0x16c>)
 8026e82:	4b39      	ldr	r3, [pc, #228]	; (8026f68 <PLACE_BIN_errorStateMachine(unsigned long)+0x164>)
 8026e84:	7812      	ldrb	r2, [r2, #0]
 8026e86:	2a00      	cmp	r2, #0
 8026e88:	bf14      	ite	ne
 8026e8a:	2203      	movne	r2, #3
 8026e8c:	2202      	moveq	r2, #2
 8026e8e:	701a      	strb	r2, [r3, #0]
 8026e90:	e7e5      	b.n	8026e5e <PLACE_BIN_errorStateMachine(unsigned long)+0x5a>
 8026e92:	4e35      	ldr	r6, [pc, #212]	; (8026f68 <PLACE_BIN_errorStateMachine(unsigned long)+0x164>)
 8026e94:	7033      	strb	r3, [r6, #0]
 8026e96:	06fb      	lsls	r3, r7, #27
 8026e98:	d5e1      	bpl.n	8026e5e <PLACE_BIN_errorStateMachine(unsigned long)+0x5a>
 8026e9a:	2210      	movs	r2, #16
 8026e9c:	4935      	ldr	r1, [pc, #212]	; (8026f74 <PLACE_BIN_errorStateMachine(unsigned long)+0x170>)
 8026e9e:	eb0d 0002 	add.w	r0, sp, r2
 8026ea2:	f7fb fe21 	bl	8022ae8 <Robot::getAxis(ROBOT_axisIndex_t)>
 8026ea6:	f89d 3014 	ldrb.w	r3, [sp, #20]
 8026eaa:	2b00      	cmp	r3, #0
 8026eac:	d0d7      	beq.n	8026e5e <PLACE_BIN_errorStateMachine(unsigned long)+0x5a>
 8026eae:	9f04      	ldr	r7, [sp, #16]
 8026eb0:	683b      	ldr	r3, [r7, #0]
 8026eb2:	4638      	mov	r0, r7
 8026eb4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8026eb6:	4798      	blx	r3
 8026eb8:	2800      	cmp	r0, #0
 8026eba:	d0d0      	beq.n	8026e5e <PLACE_BIN_errorStateMachine(unsigned long)+0x5a>
 8026ebc:	4638      	mov	r0, r7
 8026ebe:	f7fc f829 	bl	8022f14 <AxisBase::getPosition()>
 8026ec2:	eddf 7a2d 	vldr	s15, [pc, #180]	; 8026f78 <PLACE_BIN_errorStateMachine(unsigned long)+0x174>
 8026ec6:	eeb4 0ae7 	vcmpe.f32	s0, s15
 8026eca:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8026ece:	db35      	blt.n	8026f3c <PLACE_BIN_errorStateMachine(unsigned long)+0x138>
 8026ed0:	eddf 7a2a 	vldr	s15, [pc, #168]	; 8026f7c <PLACE_BIN_errorStateMachine(unsigned long)+0x178>
 8026ed4:	eeb4 0ae7 	vcmpe.f32	s0, s15
 8026ed8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8026edc:	d82e      	bhi.n	8026f3c <PLACE_BIN_errorStateMachine(unsigned long)+0x138>
 8026ede:	7035      	strb	r5, [r6, #0]
 8026ee0:	e7bd      	b.n	8026e5e <PLACE_BIN_errorStateMachine(unsigned long)+0x5a>
 8026ee2:	4820      	ldr	r0, [pc, #128]	; (8026f64 <PLACE_BIN_errorStateMachine(unsigned long)+0x160>)
 8026ee4:	2101      	movs	r1, #1
 8026ee6:	f001 fa0b 	bl	8028300 <SM_RUNNER_setComplete>
 8026eea:	e799      	b.n	8026e20 <PLACE_BIN_errorStateMachine(unsigned long)+0x1c>
 8026eec:	a804      	add	r0, sp, #16
 8026eee:	2212      	movs	r2, #18
 8026ef0:	2102      	movs	r1, #2
 8026ef2:	f004 fef1 	bl	802bcd8 <TaskStatus::TaskStatus(TaskStatus::Result_e, unsigned int)>
 8026ef6:	a904      	add	r1, sp, #16
 8026ef8:	4620      	mov	r0, r4
 8026efa:	f004 fefd 	bl	802bcf8 <TaskStatus::operator=(TaskStatus const&)>
 8026efe:	4620      	mov	r0, r4
 8026f00:	b007      	add	sp, #28
 8026f02:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8026f04:	a804      	add	r0, sp, #16
 8026f06:	2211      	movs	r2, #17
 8026f08:	e7f2      	b.n	8026ef0 <PLACE_BIN_errorStateMachine(unsigned long)+0xec>
 8026f0a:	4b18      	ldr	r3, [pc, #96]	; (8026f6c <PLACE_BIN_errorStateMachine(unsigned long)+0x168>)
 8026f0c:	edd3 7a01 	vldr	s15, [r3, #4]
 8026f10:	ed93 7a04 	vldr	s14, [r3, #16]
 8026f14:	eef0 6a00 	vmov.f32	s13, #0	; 0x40000000  2.0
 8026f18:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8026f1c:	eef4 7ac7 	vcmpe.f32	s15, s14
 8026f20:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8026f24:	d807      	bhi.n	8026f36 <PLACE_BIN_errorStateMachine(unsigned long)+0x132>
 8026f26:	480f      	ldr	r0, [pc, #60]	; (8026f64 <PLACE_BIN_errorStateMachine(unsigned long)+0x160>)
 8026f28:	2100      	movs	r1, #0
 8026f2a:	f001 f9d7 	bl	80282dc <SM_RUNNER_setError>
 8026f2e:	480d      	ldr	r0, [pc, #52]	; (8026f64 <PLACE_BIN_errorStateMachine(unsigned long)+0x160>)
 8026f30:	f001 f9e8 	bl	8028304 <SM_RUNNER_restart>
 8026f34:	e774      	b.n	8026e20 <PLACE_BIN_errorStateMachine(unsigned long)+0x1c>
 8026f36:	a804      	add	r0, sp, #16
 8026f38:	2210      	movs	r2, #16
 8026f3a:	e7d9      	b.n	8026ef0 <PLACE_BIN_errorStateMachine(unsigned long)+0xec>
 8026f3c:	eddf 7a10 	vldr	s15, [pc, #64]	; 8026f80 <PLACE_BIN_errorStateMachine(unsigned long)+0x17c>
 8026f40:	eeb4 0ae7 	vcmpe.f32	s0, s15
 8026f44:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8026f48:	db89      	blt.n	8026e5e <PLACE_BIN_errorStateMachine(unsigned long)+0x5a>
 8026f4a:	eddf 7a0e 	vldr	s15, [pc, #56]	; 8026f84 <PLACE_BIN_errorStateMachine(unsigned long)+0x180>
 8026f4e:	eeb4 0ae7 	vcmpe.f32	s0, s15
 8026f52:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8026f56:	d882      	bhi.n	8026e5e <PLACE_BIN_errorStateMachine(unsigned long)+0x5a>
 8026f58:	2301      	movs	r3, #1
 8026f5a:	7033      	strb	r3, [r6, #0]
 8026f5c:	e77f      	b.n	8026e5e <PLACE_BIN_errorStateMachine(unsigned long)+0x5a>
 8026f5e:	a804      	add	r0, sp, #16
 8026f60:	2201      	movs	r2, #1
 8026f62:	e7c5      	b.n	8026ef0 <PLACE_BIN_errorStateMachine(unsigned long)+0xec>
 8026f64:	20004c68 	.word	0x20004c68
 8026f68:	20004c3a 	.word	0x20004c3a
 8026f6c:	20004c50 	.word	0x20004c50
 8026f70:	20004c4c 	.word	0x20004c4c
 8026f74:	2000f630 	.word	0x2000f630
 8026f78:	425c0000 	.word	0x425c0000
 8026f7c:	42a00000 	.word	0x42a00000
 8026f80:	434f0000 	.word	0x434f0000
 8026f84:	43630000 	.word	0x43630000

08026f88 <PLACE_BIN_mainStateMachine(unsigned long)>:
 8026f88:	b510      	push	{r4, lr}
 8026f8a:	2100      	movs	r1, #0
 8026f8c:	b084      	sub	sp, #16
 8026f8e:	4604      	mov	r4, r0
 8026f90:	f004 fe9c 	bl	802bccc <TaskStatus::TaskStatus(TaskStatus::Result_e)>
 8026f94:	4a48      	ldr	r2, [pc, #288]	; (80270b8 <PLACE_BIN_mainStateMachine(unsigned long)+0x130>)
 8026f96:	7813      	ldrb	r3, [r2, #0]
 8026f98:	2b0a      	cmp	r3, #10
 8026f9a:	f200 8089 	bhi.w	80270b0 <PLACE_BIN_mainStateMachine(unsigned long)+0x128>
 8026f9e:	e8df f003 	tbb	[pc, r3]
 8026fa2:	6c68      	.short	0x6c68
 8026fa4:	2a1b0d72 	.word	0x2a1b0d72
 8026fa8:	53460636 	.word	0x53460636
 8026fac:	62          	.byte	0x62
 8026fad:	00          	.byte	0x00
 8026fae:	4843      	ldr	r0, [pc, #268]	; (80270bc <PLACE_BIN_mainStateMachine(unsigned long)+0x134>)
 8026fb0:	f241 7170 	movw	r1, #6000	; 0x1770
 8026fb4:	f009 fdce 	bl	8030b54 <TorqueMonitor::sumTorqueAboveAverageThreshold(int)>
 8026fb8:	2800      	cmp	r0, #0
 8026fba:	dc6b      	bgt.n	8027094 <PLACE_BIN_mainStateMachine(unsigned long)+0x10c>
 8026fbc:	4b40      	ldr	r3, [pc, #256]	; (80270c0 <PLACE_BIN_mainStateMachine(unsigned long)+0x138>)
 8026fbe:	6818      	ldr	r0, [r3, #0]
 8026fc0:	6803      	ldr	r3, [r0, #0]
 8026fc2:	2101      	movs	r1, #1
 8026fc4:	685b      	ldr	r3, [r3, #4]
 8026fc6:	4798      	blx	r3
 8026fc8:	2800      	cmp	r0, #0
 8026fca:	bf14      	ite	ne
 8026fcc:	2301      	movne	r3, #1
 8026fce:	2302      	moveq	r3, #2
 8026fd0:	7023      	strb	r3, [r4, #0]
 8026fd2:	4620      	mov	r0, r4
 8026fd4:	b004      	add	sp, #16
 8026fd6:	bd10      	pop	{r4, pc}
 8026fd8:	4b3a      	ldr	r3, [pc, #232]	; (80270c4 <PLACE_BIN_mainStateMachine(unsigned long)+0x13c>)
 8026fda:	7891      	ldrb	r1, [r2, #2]
 8026fdc:	ed93 0a03 	vldr	s0, [r3, #12]
 8026fe0:	781a      	ldrb	r2, [r3, #0]
 8026fe2:	2300      	movs	r3, #0
 8026fe4:	a802      	add	r0, sp, #8
 8026fe6:	9300      	str	r3, [sp, #0]
 8026fe8:	f000 fc0e 	bl	8027808 <ACTIONS_move(bool, ROBOT_axisIndex_t, float, AXIS_moveType_t, AXIS_mode_t)>
 8026fec:	a902      	add	r1, sp, #8
 8026fee:	4620      	mov	r0, r4
 8026ff0:	f004 fe82 	bl	802bcf8 <TaskStatus::operator=(TaskStatus const&)>
 8026ff4:	e7ed      	b.n	8026fd2 <PLACE_BIN_mainStateMachine(unsigned long)+0x4a>
 8026ff6:	4932      	ldr	r1, [pc, #200]	; (80270c0 <PLACE_BIN_mainStateMachine(unsigned long)+0x138>)
 8026ff8:	2210      	movs	r2, #16
 8026ffa:	a802      	add	r0, sp, #8
 8026ffc:	f7fb fd74 	bl	8022ae8 <Robot::getAxis(ROBOT_axisIndex_t)>
 8027000:	f89d 300c 	ldrb.w	r3, [sp, #12]
 8027004:	2b00      	cmp	r3, #0
 8027006:	d14b      	bne.n	80270a0 <PLACE_BIN_mainStateMachine(unsigned long)+0x118>
 8027008:	2301      	movs	r3, #1
 802700a:	7023      	strb	r3, [r4, #0]
 802700c:	e7e1      	b.n	8026fd2 <PLACE_BIN_mainStateMachine(unsigned long)+0x4a>
 802700e:	2300      	movs	r3, #0
 8027010:	ed9f 0a2d 	vldr	s0, [pc, #180]	; 80270c8 <PLACE_BIN_mainStateMachine(unsigned long)+0x140>
 8027014:	7891      	ldrb	r1, [r2, #2]
 8027016:	9300      	str	r3, [sp, #0]
 8027018:	a802      	add	r0, sp, #8
 802701a:	2210      	movs	r2, #16
 802701c:	f000 fbf4 	bl	8027808 <ACTIONS_move(bool, ROBOT_axisIndex_t, float, AXIS_moveType_t, AXIS_mode_t)>
 8027020:	a902      	add	r1, sp, #8
 8027022:	4620      	mov	r0, r4
 8027024:	f004 fe68 	bl	802bcf8 <TaskStatus::operator=(TaskStatus const&)>
 8027028:	4620      	mov	r0, r4
 802702a:	b004      	add	sp, #16
 802702c:	bd10      	pop	{r4, pc}
 802702e:	7891      	ldrb	r1, [r2, #2]
 8027030:	a802      	add	r0, sp, #8
 8027032:	2300      	movs	r3, #0
 8027034:	2210      	movs	r2, #16
 8027036:	f000 fd09 	bl	8027a4c <ACTIONS_power(bool, ROBOT_axisIndex_t, AXIS_powerState_t)>
 802703a:	a902      	add	r1, sp, #8
 802703c:	4620      	mov	r0, r4
 802703e:	f004 fe5b 	bl	802bcf8 <TaskStatus::operator=(TaskStatus const&)>
 8027042:	4620      	mov	r0, r4
 8027044:	b004      	add	sp, #16
 8027046:	bd10      	pop	{r4, pc}
 8027048:	2319      	movs	r3, #25
 802704a:	7891      	ldrb	r1, [r2, #2]
 802704c:	9300      	str	r3, [sp, #0]
 802704e:	a802      	add	r0, sp, #8
 8027050:	2300      	movs	r3, #0
 8027052:	2210      	movs	r2, #16
 8027054:	f000 fe52 	bl	8027cfc <ACTIONS_enableTelemetry(bool, ROBOT_axisIndex_t, bool, unsigned int)>
 8027058:	a902      	add	r1, sp, #8
 802705a:	4620      	mov	r0, r4
 802705c:	f004 fe4c 	bl	802bcf8 <TaskStatus::operator=(TaskStatus const&)>
 8027060:	4620      	mov	r0, r4
 8027062:	b004      	add	sp, #16
 8027064:	bd10      	pop	{r4, pc}
 8027066:	2101      	movs	r1, #1
 8027068:	4813      	ldr	r0, [pc, #76]	; (80270b8 <PLACE_BIN_mainStateMachine(unsigned long)+0x130>)
 802706a:	7021      	strb	r1, [r4, #0]
 802706c:	f001 f948 	bl	8028300 <SM_RUNNER_setComplete>
 8027070:	e7af      	b.n	8026fd2 <PLACE_BIN_mainStateMachine(unsigned long)+0x4a>
 8027072:	7891      	ldrb	r1, [r2, #2]
 8027074:	a802      	add	r0, sp, #8
 8027076:	2301      	movs	r3, #1
 8027078:	e7dc      	b.n	8027034 <PLACE_BIN_mainStateMachine(unsigned long)+0xac>
 802707a:	2319      	movs	r3, #25
 802707c:	7891      	ldrb	r1, [r2, #2]
 802707e:	9300      	str	r3, [sp, #0]
 8027080:	a802      	add	r0, sp, #8
 8027082:	2301      	movs	r3, #1
 8027084:	e7e5      	b.n	8027052 <PLACE_BIN_mainStateMachine(unsigned long)+0xca>
 8027086:	2300      	movs	r3, #0
 8027088:	7891      	ldrb	r1, [r2, #2]
 802708a:	ed9f 0a10 	vldr	s0, [pc, #64]	; 80270cc <PLACE_BIN_mainStateMachine(unsigned long)+0x144>
 802708e:	9300      	str	r3, [sp, #0]
 8027090:	a802      	add	r0, sp, #8
 8027092:	e7c2      	b.n	802701a <PLACE_BIN_mainStateMachine(unsigned long)+0x92>
 8027094:	4a0e      	ldr	r2, [pc, #56]	; (80270d0 <PLACE_BIN_mainStateMachine(unsigned long)+0x148>)
 8027096:	2101      	movs	r1, #1
 8027098:	2302      	movs	r3, #2
 802709a:	7011      	strb	r1, [r2, #0]
 802709c:	7023      	strb	r3, [r4, #0]
 802709e:	e798      	b.n	8026fd2 <PLACE_BIN_mainStateMachine(unsigned long)+0x4a>
 80270a0:	4806      	ldr	r0, [pc, #24]	; (80270bc <PLACE_BIN_mainStateMachine(unsigned long)+0x134>)
 80270a2:	f009 fd2d 	bl	8030b00 <TorqueMonitor::reset()>
 80270a6:	4905      	ldr	r1, [pc, #20]	; (80270bc <PLACE_BIN_mainStateMachine(unsigned long)+0x134>)
 80270a8:	9802      	ldr	r0, [sp, #8]
 80270aa:	f7fb ff7f 	bl	8022fac <AxisBase::addDataSubscriber(SubscriberBase*)>
 80270ae:	e7ab      	b.n	8027008 <PLACE_BIN_mainStateMachine(unsigned long)+0x80>
 80270b0:	2302      	movs	r3, #2
 80270b2:	7023      	strb	r3, [r4, #0]
 80270b4:	e78d      	b.n	8026fd2 <PLACE_BIN_mainStateMachine(unsigned long)+0x4a>
 80270b6:	bf00      	nop
 80270b8:	20004c68 	.word	0x20004c68
 80270bc:	20004c3c 	.word	0x20004c3c
 80270c0:	2000f630 	.word	0x2000f630
 80270c4:	20004c50 	.word	0x20004c50
 80270c8:	00000000 	.word	0x00000000
 80270cc:	44288000 	.word	0x44288000
 80270d0:	20004c4c 	.word	0x20004c4c

080270d4 <PLACE_BIN_teardown()>:
 80270d4:	b510      	push	{r4, lr}
 80270d6:	b082      	sub	sp, #8
 80270d8:	490d      	ldr	r1, [pc, #52]	; (8027110 <PLACE_BIN_teardown()+0x3c>)
 80270da:	4604      	mov	r4, r0
 80270dc:	2210      	movs	r2, #16
 80270de:	4668      	mov	r0, sp
 80270e0:	f7fb fd02 	bl	8022ae8 <Robot::getAxis(ROBOT_axisIndex_t)>
 80270e4:	f89d 3004 	ldrb.w	r3, [sp, #4]
 80270e8:	b153      	cbz	r3, 8027100 <PLACE_BIN_teardown()+0x2c>
 80270ea:	9800      	ldr	r0, [sp, #0]
 80270ec:	4909      	ldr	r1, [pc, #36]	; (8027114 <PLACE_BIN_teardown()+0x40>)
 80270ee:	f7fb ff61 	bl	8022fb4 <AxisBase::removeDataSubscriber(SubscriberBase*)>
 80270f2:	2101      	movs	r1, #1
 80270f4:	4620      	mov	r0, r4
 80270f6:	f004 fde9 	bl	802bccc <TaskStatus::TaskStatus(TaskStatus::Result_e)>
 80270fa:	4620      	mov	r0, r4
 80270fc:	b002      	add	sp, #8
 80270fe:	bd10      	pop	{r4, pc}
 8027100:	220a      	movs	r2, #10
 8027102:	2102      	movs	r1, #2
 8027104:	4620      	mov	r0, r4
 8027106:	f004 fde7 	bl	802bcd8 <TaskStatus::TaskStatus(TaskStatus::Result_e, unsigned int)>
 802710a:	4620      	mov	r0, r4
 802710c:	b002      	add	sp, #8
 802710e:	bd10      	pop	{r4, pc}
 8027110:	2000f630 	.word	0x2000f630
 8027114:	20004c3c 	.word	0x20004c3c

08027118 <PLACE_BIN_runTask(unsigned long, PLACE_BIN_config_t, bool)>:
 8027118:	b082      	sub	sp, #8
 802711a:	b5f0      	push	{r4, r5, r6, r7, lr}
 802711c:	b083      	sub	sp, #12
 802711e:	460f      	mov	r7, r1
 8027120:	f89d c038 	ldrb.w	ip, [sp, #56]	; 0x38
 8027124:	a908      	add	r1, sp, #32
 8027126:	e881 000c 	stmia.w	r1, {r2, r3}
 802712a:	4604      	mov	r4, r0
 802712c:	f1bc 0f00 	cmp.w	ip, #0
 8027130:	d007      	beq.n	8027142 <PLACE_BIN_runTask(unsigned long, PLACE_BIN_config_t, bool)+0x2a>
 8027132:	460e      	mov	r6, r1
 8027134:	ce0f      	ldmia	r6!, {r0, r1, r2, r3}
 8027136:	4d0a      	ldr	r5, [pc, #40]	; (8027160 <PLACE_BIN_runTask(unsigned long, PLACE_BIN_config_t, bool)+0x48>)
 8027138:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 802713a:	e896 0003 	ldmia.w	r6, {r0, r1}
 802713e:	e885 0003 	stmia.w	r5, {r0, r1}
 8027142:	4620      	mov	r0, r4
 8027144:	4a07      	ldr	r2, [pc, #28]	; (8027164 <PLACE_BIN_runTask(unsigned long, PLACE_BIN_config_t, bool)+0x4c>)
 8027146:	4908      	ldr	r1, [pc, #32]	; (8027168 <PLACE_BIN_runTask(unsigned long, PLACE_BIN_config_t, bool)+0x50>)
 8027148:	f8cd c000 	str.w	ip, [sp]
 802714c:	463b      	mov	r3, r7
 802714e:	f000 fee5 	bl	8027f1c <SM_RUNNER_runStateMachine>
 8027152:	4620      	mov	r0, r4
 8027154:	b003      	add	sp, #12
 8027156:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 802715a:	b002      	add	sp, #8
 802715c:	4770      	bx	lr
 802715e:	bf00      	nop
 8027160:	20004c50 	.word	0x20004c50
 8027164:	20004c68 	.word	0x20004c68
 8027168:	2000088c 	.word	0x2000088c

0802716c <_GLOBAL__sub_I__Z17PLACE_BIN_runTaskm18PLACE_BIN_config_tb>:
 802716c:	b510      	push	{r4, lr}
 802716e:	4c06      	ldr	r4, [pc, #24]	; (8027188 <_GLOBAL__sub_I__Z17PLACE_BIN_runTaskm18PLACE_BIN_config_tb+0x1c>)
 8027170:	2164      	movs	r1, #100	; 0x64
 8027172:	4620      	mov	r0, r4
 8027174:	f009 fca2 	bl	8030abc <TorqueMonitor::TorqueMonitor(unsigned short)>
 8027178:	4620      	mov	r0, r4
 802717a:	4a04      	ldr	r2, [pc, #16]	; (802718c <_GLOBAL__sub_I__Z17PLACE_BIN_runTaskm18PLACE_BIN_config_tb+0x20>)
 802717c:	4904      	ldr	r1, [pc, #16]	; (8027190 <_GLOBAL__sub_I__Z17PLACE_BIN_runTaskm18PLACE_BIN_config_tb+0x24>)
 802717e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8027182:	f017 be3b 	b.w	803edfc <__aeabi_atexit>
 8027186:	bf00      	nop
 8027188:	20004c3c 	.word	0x20004c3c
 802718c:	200124cc 	.word	0x200124cc
 8027190:	08030ae9 	.word	0x08030ae9

08027194 <PLACE_BIN_RETRIES_mainStateMachine(unsigned long)>:
 8027194:	b510      	push	{r4, lr}
 8027196:	2100      	movs	r1, #0
 8027198:	b084      	sub	sp, #16
 802719a:	4604      	mov	r4, r0
 802719c:	f004 fd96 	bl	802bccc <TaskStatus::TaskStatus(TaskStatus::Result_e)>
 80271a0:	4a3f      	ldr	r2, [pc, #252]	; (80272a0 <PLACE_BIN_RETRIES_mainStateMachine(unsigned long)+0x10c>)
 80271a2:	7813      	ldrb	r3, [r2, #0]
 80271a4:	2b0a      	cmp	r3, #10
 80271a6:	d878      	bhi.n	802729a <PLACE_BIN_RETRIES_mainStateMachine(unsigned long)+0x106>
 80271a8:	e8df f003 	tbb	[pc, r3]
 80271ac:	2926190e 	.word	0x2926190e
 80271b0:	5851413b 	.word	0x5851413b
 80271b4:	6b64      	.short	0x6b64
 80271b6:	06          	.byte	0x06
 80271b7:	00          	.byte	0x00
 80271b8:	2101      	movs	r1, #1
 80271ba:	4839      	ldr	r0, [pc, #228]	; (80272a0 <PLACE_BIN_RETRIES_mainStateMachine(unsigned long)+0x10c>)
 80271bc:	7021      	strb	r1, [r4, #0]
 80271be:	f001 f89f 	bl	8028300 <SM_RUNNER_setComplete>
 80271c2:	4620      	mov	r0, r4
 80271c4:	b004      	add	sp, #16
 80271c6:	bd10      	pop	{r4, pc}
 80271c8:	7891      	ldrb	r1, [r2, #2]
 80271ca:	a802      	add	r0, sp, #8
 80271cc:	2301      	movs	r3, #1
 80271ce:	2210      	movs	r2, #16
 80271d0:	f000 fc3c 	bl	8027a4c <ACTIONS_power(bool, ROBOT_axisIndex_t, AXIS_powerState_t)>
 80271d4:	a902      	add	r1, sp, #8
 80271d6:	4620      	mov	r0, r4
 80271d8:	f004 fd8e 	bl	802bcf8 <TaskStatus::operator=(TaskStatus const&)>
 80271dc:	e7f1      	b.n	80271c2 <PLACE_BIN_RETRIES_mainStateMachine(unsigned long)+0x2e>
 80271de:	4b31      	ldr	r3, [pc, #196]	; (80272a4 <PLACE_BIN_RETRIES_mainStateMachine(unsigned long)+0x110>)
 80271e0:	681b      	ldr	r3, [r3, #0]
 80271e2:	edd3 7a01 	vldr	s15, [r3, #4]
 80271e6:	eeb0 7a00 	vmov.f32	s14, #0	; 0x40000000  2.0
 80271ea:	ee77 7a87 	vadd.f32	s15, s15, s14
 80271ee:	2201      	movs	r2, #1
 80271f0:	edc3 7a01 	vstr	s15, [r3, #4]
 80271f4:	7022      	strb	r2, [r4, #0]
 80271f6:	e7e4      	b.n	80271c2 <PLACE_BIN_RETRIES_mainStateMachine(unsigned long)+0x2e>
 80271f8:	2301      	movs	r3, #1
 80271fa:	7023      	strb	r3, [r4, #0]
 80271fc:	e7e1      	b.n	80271c2 <PLACE_BIN_RETRIES_mainStateMachine(unsigned long)+0x2e>
 80271fe:	4b29      	ldr	r3, [pc, #164]	; (80272a4 <PLACE_BIN_RETRIES_mainStateMachine(unsigned long)+0x110>)
 8027200:	7891      	ldrb	r1, [r2, #2]
 8027202:	681b      	ldr	r3, [r3, #0]
 8027204:	ed93 0a03 	vldr	s0, [r3, #12]
 8027208:	781a      	ldrb	r2, [r3, #0]
 802720a:	2300      	movs	r3, #0
 802720c:	a802      	add	r0, sp, #8
 802720e:	9300      	str	r3, [sp, #0]
 8027210:	f000 fafa 	bl	8027808 <ACTIONS_move(bool, ROBOT_axisIndex_t, float, AXIS_moveType_t, AXIS_mode_t)>
 8027214:	a902      	add	r1, sp, #8
 8027216:	4620      	mov	r0, r4
 8027218:	f004 fd6e 	bl	802bcf8 <TaskStatus::operator=(TaskStatus const&)>
 802721c:	4620      	mov	r0, r4
 802721e:	b004      	add	sp, #16
 8027220:	bd10      	pop	{r4, pc}
 8027222:	4b20      	ldr	r3, [pc, #128]	; (80272a4 <PLACE_BIN_RETRIES_mainStateMachine(unsigned long)+0x110>)
 8027224:	7891      	ldrb	r1, [r2, #2]
 8027226:	681b      	ldr	r3, [r3, #0]
 8027228:	ed93 0a01 	vldr	s0, [r3, #4]
 802722c:	e7ec      	b.n	8027208 <PLACE_BIN_RETRIES_mainStateMachine(unsigned long)+0x74>
 802722e:	2300      	movs	r3, #0
 8027230:	ed9f 0a1d 	vldr	s0, [pc, #116]	; 80272a8 <PLACE_BIN_RETRIES_mainStateMachine(unsigned long)+0x114>
 8027234:	7891      	ldrb	r1, [r2, #2]
 8027236:	9300      	str	r3, [sp, #0]
 8027238:	a802      	add	r0, sp, #8
 802723a:	2210      	movs	r2, #16
 802723c:	f000 fae4 	bl	8027808 <ACTIONS_move(bool, ROBOT_axisIndex_t, float, AXIS_moveType_t, AXIS_mode_t)>
 8027240:	a902      	add	r1, sp, #8
 8027242:	4620      	mov	r0, r4
 8027244:	f004 fd58 	bl	802bcf8 <TaskStatus::operator=(TaskStatus const&)>
 8027248:	4620      	mov	r0, r4
 802724a:	b004      	add	sp, #16
 802724c:	bd10      	pop	{r4, pc}
 802724e:	2300      	movs	r3, #0
 8027250:	7891      	ldrb	r1, [r2, #2]
 8027252:	ed9f 0a16 	vldr	s0, [pc, #88]	; 80272ac <PLACE_BIN_RETRIES_mainStateMachine(unsigned long)+0x118>
 8027256:	9300      	str	r3, [sp, #0]
 8027258:	a802      	add	r0, sp, #8
 802725a:	e7ee      	b.n	802723a <PLACE_BIN_RETRIES_mainStateMachine(unsigned long)+0xa6>
 802725c:	4b11      	ldr	r3, [pc, #68]	; (80272a4 <PLACE_BIN_RETRIES_mainStateMachine(unsigned long)+0x110>)
 802725e:	7891      	ldrb	r1, [r2, #2]
 8027260:	681b      	ldr	r3, [r3, #0]
 8027262:	ed93 0a01 	vldr	s0, [r3, #4]
 8027266:	781a      	ldrb	r2, [r3, #0]
 8027268:	eef1 7a08 	vmov.f32	s15, #24	; 0x40c00000  6.0
 802726c:	ee30 0a27 	vadd.f32	s0, s0, s15
 8027270:	2300      	movs	r3, #0
 8027272:	e7cb      	b.n	802720c <PLACE_BIN_RETRIES_mainStateMachine(unsigned long)+0x78>
 8027274:	2300      	movs	r3, #0
 8027276:	7891      	ldrb	r1, [r2, #2]
 8027278:	ed9f 0a0d 	vldr	s0, [pc, #52]	; 80272b0 <PLACE_BIN_RETRIES_mainStateMachine(unsigned long)+0x11c>
 802727c:	9300      	str	r3, [sp, #0]
 802727e:	a802      	add	r0, sp, #8
 8027280:	e7db      	b.n	802723a <PLACE_BIN_RETRIES_mainStateMachine(unsigned long)+0xa6>
 8027282:	4b0c      	ldr	r3, [pc, #48]	; (80272b4 <PLACE_BIN_RETRIES_mainStateMachine(unsigned long)+0x120>)
 8027284:	6818      	ldr	r0, [r3, #0]
 8027286:	6803      	ldr	r3, [r0, #0]
 8027288:	2101      	movs	r1, #1
 802728a:	685b      	ldr	r3, [r3, #4]
 802728c:	4798      	blx	r3
 802728e:	2800      	cmp	r0, #0
 8027290:	bf14      	ite	ne
 8027292:	2301      	movne	r3, #1
 8027294:	2302      	moveq	r3, #2
 8027296:	7023      	strb	r3, [r4, #0]
 8027298:	e793      	b.n	80271c2 <PLACE_BIN_RETRIES_mainStateMachine(unsigned long)+0x2e>
 802729a:	2302      	movs	r3, #2
 802729c:	7023      	strb	r3, [r4, #0]
 802729e:	e790      	b.n	80271c2 <PLACE_BIN_RETRIES_mainStateMachine(unsigned long)+0x2e>
 80272a0:	20004c84 	.word	0x20004c84
 80272a4:	20004c7c 	.word	0x20004c7c
 80272a8:	43d25852 	.word	0x43d25852
 80272ac:	440f8000 	.word	0x440f8000
 80272b0:	00000000 	.word	0x00000000
 80272b4:	2000f630 	.word	0x2000f630

080272b8 <PLACE_BIN_RETRIES_errorStateMachine(unsigned long)>:
 80272b8:	b5f0      	push	{r4, r5, r6, r7, lr}
 80272ba:	4e46      	ldr	r6, [pc, #280]	; (80273d4 <PLACE_BIN_RETRIES_errorStateMachine(unsigned long)+0x11c>)
 80272bc:	b087      	sub	sp, #28
 80272be:	2100      	movs	r1, #0
 80272c0:	4604      	mov	r4, r0
 80272c2:	f004 fd03 	bl	802bccc <TaskStatus::TaskStatus(TaskStatus::Result_e)>
 80272c6:	7975      	ldrb	r5, [r6, #5]
 80272c8:	b145      	cbz	r5, 80272dc <PLACE_BIN_RETRIES_errorStateMachine(unsigned long)+0x24>
 80272ca:	2d01      	cmp	r5, #1
 80272cc:	d01c      	beq.n	8027308 <PLACE_BIN_RETRIES_errorStateMachine(unsigned long)+0x50>
 80272ce:	4630      	mov	r0, r6
 80272d0:	2100      	movs	r1, #0
 80272d2:	f001 f803 	bl	80282dc <SM_RUNNER_setError>
 80272d6:	4620      	mov	r0, r4
 80272d8:	b007      	add	sp, #28
 80272da:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80272dc:	a802      	add	r0, sp, #8
 80272de:	4629      	mov	r1, r5
 80272e0:	79f7      	ldrb	r7, [r6, #7]
 80272e2:	f004 fcf3 	bl	802bccc <TaskStatus::TaskStatus(TaskStatus::Result_e)>
 80272e6:	7833      	ldrb	r3, [r6, #0]
 80272e8:	2b08      	cmp	r3, #8
 80272ea:	d054      	beq.n	8027396 <PLACE_BIN_RETRIES_errorStateMachine(unsigned long)+0xde>
 80272ec:	d935      	bls.n	802735a <PLACE_BIN_RETRIES_errorStateMachine(unsigned long)+0xa2>
 80272ee:	3b09      	subs	r3, #9
 80272f0:	2b01      	cmp	r3, #1
 80272f2:	d932      	bls.n	802735a <PLACE_BIN_RETRIES_errorStateMachine(unsigned long)+0xa2>
 80272f4:	2302      	movs	r3, #2
 80272f6:	f88d 3008 	strb.w	r3, [sp, #8]
 80272fa:	a902      	add	r1, sp, #8
 80272fc:	4620      	mov	r0, r4
 80272fe:	f004 fcfb 	bl	802bcf8 <TaskStatus::operator=(TaskStatus const&)>
 8027302:	4620      	mov	r0, r4
 8027304:	b007      	add	sp, #28
 8027306:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8027308:	4d33      	ldr	r5, [pc, #204]	; (80273d8 <PLACE_BIN_RETRIES_errorStateMachine(unsigned long)+0x120>)
 802730a:	4834      	ldr	r0, [pc, #208]	; (80273dc <PLACE_BIN_RETRIES_errorStateMachine(unsigned long)+0x124>)
 802730c:	792b      	ldrb	r3, [r5, #4]
 802730e:	2b02      	cmp	r3, #2
 8027310:	f04f 012f 	mov.w	r1, #47	; 0x2f
 8027314:	d030      	beq.n	8027378 <PLACE_BIN_RETRIES_errorStateMachine(unsigned long)+0xc0>
 8027316:	f018 f822 	bl	803f35e <strrchr>
 802731a:	b310      	cbz	r0, 8027362 <PLACE_BIN_RETRIES_errorStateMachine(unsigned long)+0xaa>
 802731c:	212f      	movs	r1, #47	; 0x2f
 802731e:	482f      	ldr	r0, [pc, #188]	; (80273dc <PLACE_BIN_RETRIES_errorStateMachine(unsigned long)+0x124>)
 8027320:	f018 f81d 	bl	803f35e <strrchr>
 8027324:	1c41      	adds	r1, r0, #1
 8027326:	7928      	ldrb	r0, [r5, #4]
 8027328:	4a2d      	ldr	r2, [pc, #180]	; (80273e0 <PLACE_BIN_RETRIES_errorStateMachine(unsigned long)+0x128>)
 802732a:	4b2e      	ldr	r3, [pc, #184]	; (80273e4 <PLACE_BIN_RETRIES_errorStateMachine(unsigned long)+0x12c>)
 802732c:	f852 2020 	ldr.w	r2, [r2, r0, lsl #2]
 8027330:	9200      	str	r2, [sp, #0]
 8027332:	2002      	movs	r0, #2
 8027334:	f240 1205 	movw	r2, #261	; 0x105
 8027338:	f7fb fa2e 	bl	8022798 <DEBUG_logMsg>
 802733c:	4b2a      	ldr	r3, [pc, #168]	; (80273e8 <PLACE_BIN_RETRIES_errorStateMachine(unsigned long)+0x130>)
 802733e:	4a2b      	ldr	r2, [pc, #172]	; (80273ec <PLACE_BIN_RETRIES_errorStateMachine(unsigned long)+0x134>)
 8027340:	60da      	str	r2, [r3, #12]
 8027342:	2302      	movs	r3, #2
 8027344:	712b      	strb	r3, [r5, #4]
 8027346:	2100      	movs	r1, #0
 8027348:	4822      	ldr	r0, [pc, #136]	; (80273d4 <PLACE_BIN_RETRIES_errorStateMachine(unsigned long)+0x11c>)
 802734a:	f000 ffc7 	bl	80282dc <SM_RUNNER_setError>
 802734e:	4821      	ldr	r0, [pc, #132]	; (80273d4 <PLACE_BIN_RETRIES_errorStateMachine(unsigned long)+0x11c>)
 8027350:	f000 ffd8 	bl	8028304 <SM_RUNNER_restart>
 8027354:	4620      	mov	r0, r4
 8027356:	b007      	add	sp, #28
 8027358:	bdf0      	pop	{r4, r5, r6, r7, pc}
 802735a:	2301      	movs	r3, #1
 802735c:	f88d 3008 	strb.w	r3, [sp, #8]
 8027360:	e7cb      	b.n	80272fa <PLACE_BIN_RETRIES_errorStateMachine(unsigned long)+0x42>
 8027362:	481e      	ldr	r0, [pc, #120]	; (80273dc <PLACE_BIN_RETRIES_errorStateMachine(unsigned long)+0x124>)
 8027364:	215c      	movs	r1, #92	; 0x5c
 8027366:	f017 fffa 	bl	803f35e <strrchr>
 802736a:	b320      	cbz	r0, 80273b6 <PLACE_BIN_RETRIES_errorStateMachine(unsigned long)+0xfe>
 802736c:	215c      	movs	r1, #92	; 0x5c
 802736e:	481b      	ldr	r0, [pc, #108]	; (80273dc <PLACE_BIN_RETRIES_errorStateMachine(unsigned long)+0x124>)
 8027370:	f017 fff5 	bl	803f35e <strrchr>
 8027374:	1c41      	adds	r1, r0, #1
 8027376:	e7d6      	b.n	8027326 <PLACE_BIN_RETRIES_errorStateMachine(unsigned long)+0x6e>
 8027378:	f017 fff1 	bl	803f35e <strrchr>
 802737c:	b1e8      	cbz	r0, 80273ba <PLACE_BIN_RETRIES_errorStateMachine(unsigned long)+0x102>
 802737e:	212f      	movs	r1, #47	; 0x2f
 8027380:	4816      	ldr	r0, [pc, #88]	; (80273dc <PLACE_BIN_RETRIES_errorStateMachine(unsigned long)+0x124>)
 8027382:	f017 ffec 	bl	803f35e <strrchr>
 8027386:	1c41      	adds	r1, r0, #1
 8027388:	4b19      	ldr	r3, [pc, #100]	; (80273f0 <PLACE_BIN_RETRIES_errorStateMachine(unsigned long)+0x138>)
 802738a:	f44f 7280 	mov.w	r2, #256	; 0x100
 802738e:	2002      	movs	r0, #2
 8027390:	f7fb fa02 	bl	8022798 <DEBUG_logMsg>
 8027394:	e7d7      	b.n	8027346 <PLACE_BIN_RETRIES_errorStateMachine(unsigned long)+0x8e>
 8027396:	4b10      	ldr	r3, [pc, #64]	; (80273d8 <PLACE_BIN_RETRIES_errorStateMachine(unsigned long)+0x120>)
 8027398:	681b      	ldr	r3, [r3, #0]
 802739a:	4639      	mov	r1, r7
 802739c:	ed93 0a03 	vldr	s0, [r3, #12]
 80273a0:	781a      	ldrb	r2, [r3, #0]
 80273a2:	9500      	str	r5, [sp, #0]
 80273a4:	a804      	add	r0, sp, #16
 80273a6:	462b      	mov	r3, r5
 80273a8:	f000 fa2e 	bl	8027808 <ACTIONS_move(bool, ROBOT_axisIndex_t, float, AXIS_moveType_t, AXIS_mode_t)>
 80273ac:	a904      	add	r1, sp, #16
 80273ae:	a802      	add	r0, sp, #8
 80273b0:	f004 fca2 	bl	802bcf8 <TaskStatus::operator=(TaskStatus const&)>
 80273b4:	e7a1      	b.n	80272fa <PLACE_BIN_RETRIES_errorStateMachine(unsigned long)+0x42>
 80273b6:	4909      	ldr	r1, [pc, #36]	; (80273dc <PLACE_BIN_RETRIES_errorStateMachine(unsigned long)+0x124>)
 80273b8:	e7b5      	b.n	8027326 <PLACE_BIN_RETRIES_errorStateMachine(unsigned long)+0x6e>
 80273ba:	4808      	ldr	r0, [pc, #32]	; (80273dc <PLACE_BIN_RETRIES_errorStateMachine(unsigned long)+0x124>)
 80273bc:	215c      	movs	r1, #92	; 0x5c
 80273be:	f017 ffce 	bl	803f35e <strrchr>
 80273c2:	b128      	cbz	r0, 80273d0 <PLACE_BIN_RETRIES_errorStateMachine(unsigned long)+0x118>
 80273c4:	215c      	movs	r1, #92	; 0x5c
 80273c6:	4805      	ldr	r0, [pc, #20]	; (80273dc <PLACE_BIN_RETRIES_errorStateMachine(unsigned long)+0x124>)
 80273c8:	f017 ffc9 	bl	803f35e <strrchr>
 80273cc:	1c41      	adds	r1, r0, #1
 80273ce:	e7db      	b.n	8027388 <PLACE_BIN_RETRIES_errorStateMachine(unsigned long)+0xd0>
 80273d0:	4902      	ldr	r1, [pc, #8]	; (80273dc <PLACE_BIN_RETRIES_errorStateMachine(unsigned long)+0x124>)
 80273d2:	e7d9      	b.n	8027388 <PLACE_BIN_RETRIES_errorStateMachine(unsigned long)+0xd0>
 80273d4:	20004c84 	.word	0x20004c84
 80273d8:	20004c7c 	.word	0x20004c7c
 80273dc:	08044f9c 	.word	0x08044f9c
 80273e0:	08045190 	.word	0x08045190
 80273e4:	080449bc 	.word	0x080449bc
 80273e8:	20000a0c 	.word	0x20000a0c
 80273ec:	2000097c 	.word	0x2000097c
 80273f0:	08044fec 	.word	0x08044fec

080273f4 <PLACE_BIN_RETRIES_runTask(PLACE_BIN_RETRIES_type_t, unsigned long, PLACE_BIN_config_t*, bool)>:
 80273f4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80273f8:	b082      	sub	sp, #8
 80273fa:	4604      	mov	r4, r0
 80273fc:	f89d 7020 	ldrb.w	r7, [sp, #32]
 8027400:	4615      	mov	r5, r2
 8027402:	b957      	cbnz	r7, 802741a <PLACE_BIN_RETRIES_runTask(PLACE_BIN_RETRIES_type_t, unsigned long, PLACE_BIN_config_t*, bool)+0x26>
 8027404:	4620      	mov	r0, r4
 8027406:	4a1c      	ldr	r2, [pc, #112]	; (8027478 <PLACE_BIN_RETRIES_runTask(PLACE_BIN_RETRIES_type_t, unsigned long, PLACE_BIN_config_t*, bool)+0x84>)
 8027408:	491c      	ldr	r1, [pc, #112]	; (802747c <PLACE_BIN_RETRIES_runTask(PLACE_BIN_RETRIES_type_t, unsigned long, PLACE_BIN_config_t*, bool)+0x88>)
 802740a:	9700      	str	r7, [sp, #0]
 802740c:	462b      	mov	r3, r5
 802740e:	f000 fd85 	bl	8027f1c <SM_RUNNER_runStateMachine>
 8027412:	4620      	mov	r0, r4
 8027414:	b002      	add	sp, #8
 8027416:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802741a:	460e      	mov	r6, r1
 802741c:	4918      	ldr	r1, [pc, #96]	; (8027480 <PLACE_BIN_RETRIES_runTask(PLACE_BIN_RETRIES_type_t, unsigned long, PLACE_BIN_config_t*, bool)+0x8c>)
 802741e:	4a17      	ldr	r2, [pc, #92]	; (802747c <PLACE_BIN_RETRIES_runTask(PLACE_BIN_RETRIES_type_t, unsigned long, PLACE_BIN_config_t*, bool)+0x88>)
 8027420:	f8df 806c 	ldr.w	r8, [pc, #108]	; 8027490 <PLACE_BIN_RETRIES_runTask(PLACE_BIN_RETRIES_type_t, unsigned long, PLACE_BIN_config_t*, bool)+0x9c>
 8027424:	f851 1026 	ldr.w	r1, [r1, r6, lsl #2]
 8027428:	60d1      	str	r1, [r2, #12]
 802742a:	4816      	ldr	r0, [pc, #88]	; (8027484 <PLACE_BIN_RETRIES_runTask(PLACE_BIN_RETRIES_type_t, unsigned long, PLACE_BIN_config_t*, bool)+0x90>)
 802742c:	f8c8 3000 	str.w	r3, [r8]
 8027430:	212f      	movs	r1, #47	; 0x2f
 8027432:	f888 6004 	strb.w	r6, [r8, #4]
 8027436:	f017 ff92 	bl	803f35e <strrchr>
 802743a:	b180      	cbz	r0, 802745e <PLACE_BIN_RETRIES_runTask(PLACE_BIN_RETRIES_type_t, unsigned long, PLACE_BIN_config_t*, bool)+0x6a>
 802743c:	212f      	movs	r1, #47	; 0x2f
 802743e:	4811      	ldr	r0, [pc, #68]	; (8027484 <PLACE_BIN_RETRIES_runTask(PLACE_BIN_RETRIES_type_t, unsigned long, PLACE_BIN_config_t*, bool)+0x90>)
 8027440:	f017 ff8d 	bl	803f35e <strrchr>
 8027444:	1c41      	adds	r1, r0, #1
 8027446:	f898 0004 	ldrb.w	r0, [r8, #4]
 802744a:	4a0f      	ldr	r2, [pc, #60]	; (8027488 <PLACE_BIN_RETRIES_runTask(PLACE_BIN_RETRIES_type_t, unsigned long, PLACE_BIN_config_t*, bool)+0x94>)
 802744c:	4b0f      	ldr	r3, [pc, #60]	; (802748c <PLACE_BIN_RETRIES_runTask(PLACE_BIN_RETRIES_type_t, unsigned long, PLACE_BIN_config_t*, bool)+0x98>)
 802744e:	f852 2020 	ldr.w	r2, [r2, r0, lsl #2]
 8027452:	9200      	str	r2, [sp, #0]
 8027454:	2002      	movs	r0, #2
 8027456:	229b      	movs	r2, #155	; 0x9b
 8027458:	f7fb f99e 	bl	8022798 <DEBUG_logMsg>
 802745c:	e7d2      	b.n	8027404 <PLACE_BIN_RETRIES_runTask(PLACE_BIN_RETRIES_type_t, unsigned long, PLACE_BIN_config_t*, bool)+0x10>
 802745e:	4809      	ldr	r0, [pc, #36]	; (8027484 <PLACE_BIN_RETRIES_runTask(PLACE_BIN_RETRIES_type_t, unsigned long, PLACE_BIN_config_t*, bool)+0x90>)
 8027460:	215c      	movs	r1, #92	; 0x5c
 8027462:	f017 ff7c 	bl	803f35e <strrchr>
 8027466:	b128      	cbz	r0, 8027474 <PLACE_BIN_RETRIES_runTask(PLACE_BIN_RETRIES_type_t, unsigned long, PLACE_BIN_config_t*, bool)+0x80>
 8027468:	215c      	movs	r1, #92	; 0x5c
 802746a:	4806      	ldr	r0, [pc, #24]	; (8027484 <PLACE_BIN_RETRIES_runTask(PLACE_BIN_RETRIES_type_t, unsigned long, PLACE_BIN_config_t*, bool)+0x90>)
 802746c:	f017 ff77 	bl	803f35e <strrchr>
 8027470:	1c41      	adds	r1, r0, #1
 8027472:	e7e8      	b.n	8027446 <PLACE_BIN_RETRIES_runTask(PLACE_BIN_RETRIES_type_t, unsigned long, PLACE_BIN_config_t*, bool)+0x52>
 8027474:	4903      	ldr	r1, [pc, #12]	; (8027484 <PLACE_BIN_RETRIES_runTask(PLACE_BIN_RETRIES_type_t, unsigned long, PLACE_BIN_config_t*, bool)+0x90>)
 8027476:	e7e6      	b.n	8027446 <PLACE_BIN_RETRIES_runTask(PLACE_BIN_RETRIES_type_t, unsigned long, PLACE_BIN_config_t*, bool)+0x52>
 8027478:	20004c84 	.word	0x20004c84
 802747c:	20000a0c 	.word	0x20000a0c
 8027480:	08045180 	.word	0x08045180
 8027484:	08044f9c 	.word	0x08044f9c
 8027488:	08045190 	.word	0x08045190
 802748c:	08045018 	.word	0x08045018
 8027490:	20004c7c 	.word	0x20004c7c

08027494 <_GLOBAL__sub_I__Z25PLACE_BIN_RETRIES_runTask24PLACE_BIN_RETRIES_type_tmP18PLACE_BIN_config_tb>:
 8027494:	4b01      	ldr	r3, [pc, #4]	; (802749c <_GLOBAL__sub_I__Z25PLACE_BIN_RETRIES_runTask24PLACE_BIN_RETRIES_type_tmP18PLACE_BIN_config_tb+0x8>)
 8027496:	4a02      	ldr	r2, [pc, #8]	; (80274a0 <_GLOBAL__sub_I__Z25PLACE_BIN_RETRIES_runTask24PLACE_BIN_RETRIES_type_tmP18PLACE_BIN_config_tb+0xc>)
 8027498:	60da      	str	r2, [r3, #12]
 802749a:	4770      	bx	lr
 802749c:	20000a0c 	.word	0x20000a0c
 80274a0:	2000092c 	.word	0x2000092c

080274a4 <ATTIC_ENTRY_homingErrorHandler(unsigned long)>:
 80274a4:	b510      	push	{r4, lr}
 80274a6:	2100      	movs	r1, #0
 80274a8:	b084      	sub	sp, #16
 80274aa:	4604      	mov	r4, r0
 80274ac:	f004 fc0e 	bl	802bccc <TaskStatus::TaskStatus(TaskStatus::Result_e)>
 80274b0:	4a1f      	ldr	r2, [pc, #124]	; (8027530 <ATTIC_ENTRY_homingErrorHandler(unsigned long)+0x8c>)
 80274b2:	7813      	ldrb	r3, [r2, #0]
 80274b4:	2b03      	cmp	r3, #3
 80274b6:	d837      	bhi.n	8027528 <ATTIC_ENTRY_homingErrorHandler(unsigned long)+0x84>
 80274b8:	e8df f003 	tbb	[pc, r3]
 80274bc:	0225170a 	.word	0x0225170a
 80274c0:	2101      	movs	r1, #1
 80274c2:	481b      	ldr	r0, [pc, #108]	; (8027530 <ATTIC_ENTRY_homingErrorHandler(unsigned long)+0x8c>)
 80274c4:	7021      	strb	r1, [r4, #0]
 80274c6:	f000 ff1b 	bl	8028300 <SM_RUNNER_setComplete>
 80274ca:	4620      	mov	r0, r4
 80274cc:	b004      	add	sp, #16
 80274ce:	bd10      	pop	{r4, pc}
 80274d0:	4b18      	ldr	r3, [pc, #96]	; (8027534 <ATTIC_ENTRY_homingErrorHandler(unsigned long)+0x90>)
 80274d2:	7891      	ldrb	r1, [r2, #2]
 80274d4:	781a      	ldrb	r2, [r3, #0]
 80274d6:	a802      	add	r0, sp, #8
 80274d8:	f000 fb3a 	bl	8027b50 <ACTIONS_reset(bool, ROBOT_axisIndex_t)>
 80274dc:	a902      	add	r1, sp, #8
 80274de:	4620      	mov	r0, r4
 80274e0:	f004 fc0a 	bl	802bcf8 <TaskStatus::operator=(TaskStatus const&)>
 80274e4:	4620      	mov	r0, r4
 80274e6:	b004      	add	sp, #16
 80274e8:	bd10      	pop	{r4, pc}
 80274ea:	4b12      	ldr	r3, [pc, #72]	; (8027534 <ATTIC_ENTRY_homingErrorHandler(unsigned long)+0x90>)
 80274ec:	7891      	ldrb	r1, [r2, #2]
 80274ee:	781a      	ldrb	r2, [r3, #0]
 80274f0:	a802      	add	r0, sp, #8
 80274f2:	2300      	movs	r3, #0
 80274f4:	f000 faaa 	bl	8027a4c <ACTIONS_power(bool, ROBOT_axisIndex_t, AXIS_powerState_t)>
 80274f8:	a902      	add	r1, sp, #8
 80274fa:	4620      	mov	r0, r4
 80274fc:	f004 fbfc 	bl	802bcf8 <TaskStatus::operator=(TaskStatus const&)>
 8027500:	4620      	mov	r0, r4
 8027502:	b004      	add	sp, #16
 8027504:	bd10      	pop	{r4, pc}
 8027506:	4b0c      	ldr	r3, [pc, #48]	; (8027538 <ATTIC_ENTRY_homingErrorHandler(unsigned long)+0x94>)
 8027508:	7891      	ldrb	r1, [r2, #2]
 802750a:	ed93 0a01 	vldr	s0, [r3, #4]
 802750e:	2300      	movs	r3, #0
 8027510:	a802      	add	r0, sp, #8
 8027512:	9300      	str	r3, [sp, #0]
 8027514:	220a      	movs	r2, #10
 8027516:	f000 f977 	bl	8027808 <ACTIONS_move(bool, ROBOT_axisIndex_t, float, AXIS_moveType_t, AXIS_mode_t)>
 802751a:	a902      	add	r1, sp, #8
 802751c:	4620      	mov	r0, r4
 802751e:	f004 fbeb 	bl	802bcf8 <TaskStatus::operator=(TaskStatus const&)>
 8027522:	4620      	mov	r0, r4
 8027524:	b004      	add	sp, #16
 8027526:	bd10      	pop	{r4, pc}
 8027528:	2302      	movs	r3, #2
 802752a:	7023      	strb	r3, [r4, #0]
 802752c:	e7cd      	b.n	80274ca <ATTIC_ENTRY_homingErrorHandler(unsigned long)+0x26>
 802752e:	bf00      	nop
 8027530:	20004ca8 	.word	0x20004ca8
 8027534:	20004cbc 	.word	0x20004cbc
 8027538:	20004c98 	.word	0x20004c98

0802753c <ATTIC_ENTRY_homingErrorHandler(ROBOT_axisIndex_t, unsigned long, bool)>:
 802753c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8027540:	4604      	mov	r4, r0
 8027542:	b091      	sub	sp, #68	; 0x44
 8027544:	4691      	mov	r9, r2
 8027546:	461d      	mov	r5, r3
 8027548:	b97b      	cbnz	r3, 802756a <ATTIC_ENTRY_homingErrorHandler(ROBOT_axisIndex_t, unsigned long, bool)+0x2e>
 802754a:	ae0b      	add	r6, sp, #44	; 0x2c
 802754c:	4a22      	ldr	r2, [pc, #136]	; (80275d8 <ATTIC_ENTRY_homingErrorHandler(ROBOT_axisIndex_t, unsigned long, bool)+0x9c>)
 802754e:	4923      	ldr	r1, [pc, #140]	; (80275dc <ATTIC_ENTRY_homingErrorHandler(ROBOT_axisIndex_t, unsigned long, bool)+0xa0>)
 8027550:	9500      	str	r5, [sp, #0]
 8027552:	464b      	mov	r3, r9
 8027554:	4630      	mov	r0, r6
 8027556:	f000 fce1 	bl	8027f1c <SM_RUNNER_runStateMachine>
 802755a:	4631      	mov	r1, r6
 802755c:	4620      	mov	r0, r4
 802755e:	f004 fbc3 	bl	802bce8 <TaskStatus::TaskStatus(TaskStatus const&)>
 8027562:	4620      	mov	r0, r4
 8027564:	b011      	add	sp, #68	; 0x44
 8027566:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 802756a:	ae0b      	add	r6, sp, #44	; 0x2c
 802756c:	4688      	mov	r8, r1
 802756e:	4630      	mov	r0, r6
 8027570:	491b      	ldr	r1, [pc, #108]	; (80275e0 <ATTIC_ENTRY_homingErrorHandler(ROBOT_axisIndex_t, unsigned long, bool)+0xa4>)
 8027572:	f008 fe19 	bl	80301a8 <Nest::getAtticPositions()>
 8027576:	f89d 303c 	ldrb.w	r3, [sp, #60]	; 0x3c
 802757a:	b323      	cbz	r3, 80275c6 <ATTIC_ENTRY_homingErrorHandler(ROBOT_axisIndex_t, unsigned long, bool)+0x8a>
 802757c:	e896 000f 	ldmia.w	r6, {r0, r1, r2, r3}
 8027580:	af07      	add	r7, sp, #28
 8027582:	e887 000f 	stmia.w	r7, {r0, r1, r2, r3}
 8027586:	af03      	add	r7, sp, #12
 8027588:	e887 000f 	stmia.w	r7, {r0, r1, r2, r3}
 802758c:	f1a8 0c0a 	sub.w	ip, r8, #10
 8027590:	4f14      	ldr	r7, [pc, #80]	; (80275e4 <ATTIC_ENTRY_homingErrorHandler(ROBOT_axisIndex_t, unsigned long, bool)+0xa8>)
 8027592:	f1bc 0f01 	cmp.w	ip, #1
 8027596:	e887 000f 	stmia.w	r7, {r0, r1, r2, r3}
 802759a:	d80b      	bhi.n	80275b4 <ATTIC_ENTRY_homingErrorHandler(ROBOT_axisIndex_t, unsigned long, bool)+0x78>
 802759c:	4b12      	ldr	r3, [pc, #72]	; (80275e8 <ATTIC_ENTRY_homingErrorHandler(ROBOT_axisIndex_t, unsigned long, bool)+0xac>)
 802759e:	4813      	ldr	r0, [pc, #76]	; (80275ec <ATTIC_ENTRY_homingErrorHandler(ROBOT_axisIndex_t, unsigned long, bool)+0xb0>)
 80275a0:	490e      	ldr	r1, [pc, #56]	; (80275dc <ATTIC_ENTRY_homingErrorHandler(ROBOT_axisIndex_t, unsigned long, bool)+0xa0>)
 80275a2:	4a13      	ldr	r2, [pc, #76]	; (80275f0 <ATTIC_ENTRY_homingErrorHandler(ROBOT_axisIndex_t, unsigned long, bool)+0xb4>)
 80275a4:	f1b8 0f0a 	cmp.w	r8, #10
 80275a8:	bf18      	it	ne
 80275aa:	4603      	movne	r3, r0
 80275ac:	60cb      	str	r3, [r1, #12]
 80275ae:	f882 8000 	strb.w	r8, [r2]
 80275b2:	e7cb      	b.n	802754c <ATTIC_ENTRY_homingErrorHandler(ROBOT_axisIndex_t, unsigned long, bool)+0x10>
 80275b4:	220a      	movs	r2, #10
 80275b6:	2102      	movs	r1, #2
 80275b8:	4620      	mov	r0, r4
 80275ba:	f004 fb8d 	bl	802bcd8 <TaskStatus::TaskStatus(TaskStatus::Result_e, unsigned int)>
 80275be:	4620      	mov	r0, r4
 80275c0:	b011      	add	sp, #68	; 0x44
 80275c2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80275c6:	2206      	movs	r2, #6
 80275c8:	2102      	movs	r1, #2
 80275ca:	4620      	mov	r0, r4
 80275cc:	f004 fb84 	bl	802bcd8 <TaskStatus::TaskStatus(TaskStatus::Result_e, unsigned int)>
 80275d0:	4620      	mov	r0, r4
 80275d2:	b011      	add	sp, #68	; 0x44
 80275d4:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80275d8:	20004ca8 	.word	0x20004ca8
 80275dc:	20000a9c 	.word	0x20000a9c
 80275e0:	20004b30 	.word	0x20004b30
 80275e4:	20004c98 	.word	0x20004c98
 80275e8:	20000a2c 	.word	0x20000a2c
 80275ec:	20000a5c 	.word	0x20000a5c
 80275f0:	20004cbc 	.word	0x20004cbc

080275f4 <ACTIONS_home(bool, ROBOT_axisIndex_t, AXIS_homeType_t, float)>:
 80275f4:	b5f0      	push	{r4, r5, r6, r7, lr}
 80275f6:	ed2d 8b02 	vpush	{d8}
 80275fa:	460d      	mov	r5, r1
 80275fc:	b08d      	sub	sp, #52	; 0x34
 80275fe:	2100      	movs	r1, #0
 8027600:	4616      	mov	r6, r2
 8027602:	461f      	mov	r7, r3
 8027604:	eeb0 8a40 	vmov.f32	s16, s0
 8027608:	4604      	mov	r4, r0
 802760a:	f004 fb5f 	bl	802bccc <TaskStatus::TaskStatus(TaskStatus::Result_e)>
 802760e:	b1ed      	cbz	r5, 802764c <ACTIONS_home(bool, ROBOT_axisIndex_t, AXIS_homeType_t, float)+0x58>
 8027610:	4925      	ldr	r1, [pc, #148]	; (80276a8 <ACTIONS_home(bool, ROBOT_axisIndex_t, AXIS_homeType_t, float)+0xb4>)
 8027612:	4632      	mov	r2, r6
 8027614:	a803      	add	r0, sp, #12
 8027616:	f7fb fa67 	bl	8022ae8 <Robot::getAxis(ROBOT_axisIndex_t)>
 802761a:	f89d 3010 	ldrb.w	r3, [sp, #16]
 802761e:	b183      	cbz	r3, 8027642 <ACTIONS_home(bool, ROBOT_axisIndex_t, AXIS_homeType_t, float)+0x4e>
 8027620:	9803      	ldr	r0, [sp, #12]
 8027622:	6803      	ldr	r3, [r0, #0]
 8027624:	eeb0 0a48 	vmov.f32	s0, s16
 8027628:	689b      	ldr	r3, [r3, #8]
 802762a:	4639      	mov	r1, r7
 802762c:	4798      	blx	r3
 802762e:	ad05      	add	r5, sp, #20
 8027630:	bb98      	cbnz	r0, 802769a <ACTIONS_home(bool, ROBOT_axisIndex_t, AXIS_homeType_t, float)+0xa6>
 8027632:	4601      	mov	r1, r0
 8027634:	4628      	mov	r0, r5
 8027636:	f004 fb49 	bl	802bccc <TaskStatus::TaskStatus(TaskStatus::Result_e)>
 802763a:	4629      	mov	r1, r5
 802763c:	4620      	mov	r0, r4
 802763e:	f004 fb5b 	bl	802bcf8 <TaskStatus::operator=(TaskStatus const&)>
 8027642:	4620      	mov	r0, r4
 8027644:	b00d      	add	sp, #52	; 0x34
 8027646:	ecbd 8b02 	vpop	{d8}
 802764a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 802764c:	4629      	mov	r1, r5
 802764e:	a801      	add	r0, sp, #4
 8027650:	f004 fb3c 	bl	802bccc <TaskStatus::TaskStatus(TaskStatus::Result_e)>
 8027654:	4814      	ldr	r0, [pc, #80]	; (80276a8 <ACTIONS_home(bool, ROBOT_axisIndex_t, AXIS_homeType_t, float)+0xb4>)
 8027656:	4631      	mov	r1, r6
 8027658:	aa05      	add	r2, sp, #20
 802765a:	f7fb fa55 	bl	8022b08 <Robot::getAxisStatus(ROBOT_axisIndex_t, AXIS_status_t*)>
 802765e:	b980      	cbnz	r0, 8027682 <ACTIONS_home(bool, ROBOT_axisIndex_t, AXIS_homeType_t, float)+0x8e>
 8027660:	f89d 301c 	ldrb.w	r3, [sp, #28]
 8027664:	2b02      	cmp	r3, #2
 8027666:	d00c      	beq.n	8027682 <ACTIONS_home(bool, ROBOT_axisIndex_t, AXIS_homeType_t, float)+0x8e>
 8027668:	b913      	cbnz	r3, 8027670 <ACTIONS_home(bool, ROBOT_axisIndex_t, AXIS_homeType_t, float)+0x7c>
 802766a:	2301      	movs	r3, #1
 802766c:	f88d 3004 	strb.w	r3, [sp, #4]
 8027670:	a901      	add	r1, sp, #4
 8027672:	4620      	mov	r0, r4
 8027674:	f004 fb40 	bl	802bcf8 <TaskStatus::operator=(TaskStatus const&)>
 8027678:	4620      	mov	r0, r4
 802767a:	b00d      	add	sp, #52	; 0x34
 802767c:	ecbd 8b02 	vpop	{d8}
 8027680:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8027682:	2207      	movs	r2, #7
 8027684:	2102      	movs	r1, #2
 8027686:	a803      	add	r0, sp, #12
 8027688:	f004 fb26 	bl	802bcd8 <TaskStatus::TaskStatus(TaskStatus::Result_e, unsigned int)>
 802768c:	a903      	add	r1, sp, #12
 802768e:	a801      	add	r0, sp, #4
 8027690:	f004 fb32 	bl	802bcf8 <TaskStatus::operator=(TaskStatus const&)>
 8027694:	f89d 301c 	ldrb.w	r3, [sp, #28]
 8027698:	e7e6      	b.n	8027668 <ACTIONS_home(bool, ROBOT_axisIndex_t, AXIS_homeType_t, float)+0x74>
 802769a:	4602      	mov	r2, r0
 802769c:	2102      	movs	r1, #2
 802769e:	4628      	mov	r0, r5
 80276a0:	f004 fb1a 	bl	802bcd8 <TaskStatus::TaskStatus(TaskStatus::Result_e, unsigned int)>
 80276a4:	e7c9      	b.n	802763a <ACTIONS_home(bool, ROBOT_axisIndex_t, AXIS_homeType_t, float)+0x46>
 80276a6:	bf00      	nop
 80276a8:	2000f630 	.word	0x2000f630
 80276ac:	81010cc9 	.word	0x81010cc9
 80276b0:	80abb0b0 	.word	0x80abb0b0
 80276b4:	00000000 	.word	0x00000000

080276b8 <ACTIONS_home(bool, ROBOT_axisIndex_t, AXIS_homeType_t, float, float, float, float)>:
 80276b8:	b5f0      	push	{r4, r5, r6, r7, lr}
 80276ba:	ed2d 8b04 	vpush	{d8-d9}
 80276be:	460d      	mov	r5, r1
 80276c0:	b08d      	sub	sp, #52	; 0x34
 80276c2:	2100      	movs	r1, #0
 80276c4:	4616      	mov	r6, r2
 80276c6:	461f      	mov	r7, r3
 80276c8:	eeb0 8a40 	vmov.f32	s16, s0
 80276cc:	eef0 8a60 	vmov.f32	s17, s1
 80276d0:	eeb0 9a41 	vmov.f32	s18, s2
 80276d4:	eef0 9a61 	vmov.f32	s19, s3
 80276d8:	4604      	mov	r4, r0
 80276da:	f004 faf7 	bl	802bccc <TaskStatus::TaskStatus(TaskStatus::Result_e)>
 80276de:	b31d      	cbz	r5, 8027728 <ACTIONS_home(bool, ROBOT_axisIndex_t, AXIS_homeType_t, float, float, float, float)+0x70>
 80276e0:	4928      	ldr	r1, [pc, #160]	; (8027784 <ACTIONS_home(bool, ROBOT_axisIndex_t, AXIS_homeType_t, float, float, float, float)+0xcc>)
 80276e2:	4632      	mov	r2, r6
 80276e4:	a803      	add	r0, sp, #12
 80276e6:	f7fb f9ff 	bl	8022ae8 <Robot::getAxis(ROBOT_axisIndex_t)>
 80276ea:	f89d 3010 	ldrb.w	r3, [sp, #16]
 80276ee:	b1b3      	cbz	r3, 802771e <ACTIONS_home(bool, ROBOT_axisIndex_t, AXIS_homeType_t, float, float, float, float)+0x66>
 80276f0:	9803      	ldr	r0, [sp, #12]
 80276f2:	6803      	ldr	r3, [r0, #0]
 80276f4:	eef0 1a69 	vmov.f32	s3, s19
 80276f8:	68db      	ldr	r3, [r3, #12]
 80276fa:	eeb0 1a49 	vmov.f32	s2, s18
 80276fe:	eef0 0a68 	vmov.f32	s1, s17
 8027702:	eeb0 0a48 	vmov.f32	s0, s16
 8027706:	4639      	mov	r1, r7
 8027708:	4798      	blx	r3
 802770a:	ad05      	add	r5, sp, #20
 802770c:	bb98      	cbnz	r0, 8027776 <ACTIONS_home(bool, ROBOT_axisIndex_t, AXIS_homeType_t, float, float, float, float)+0xbe>
 802770e:	4601      	mov	r1, r0
 8027710:	4628      	mov	r0, r5
 8027712:	f004 fadb 	bl	802bccc <TaskStatus::TaskStatus(TaskStatus::Result_e)>
 8027716:	4629      	mov	r1, r5
 8027718:	4620      	mov	r0, r4
 802771a:	f004 faed 	bl	802bcf8 <TaskStatus::operator=(TaskStatus const&)>
 802771e:	4620      	mov	r0, r4
 8027720:	b00d      	add	sp, #52	; 0x34
 8027722:	ecbd 8b04 	vpop	{d8-d9}
 8027726:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8027728:	4629      	mov	r1, r5
 802772a:	a801      	add	r0, sp, #4
 802772c:	f004 face 	bl	802bccc <TaskStatus::TaskStatus(TaskStatus::Result_e)>
 8027730:	4814      	ldr	r0, [pc, #80]	; (8027784 <ACTIONS_home(bool, ROBOT_axisIndex_t, AXIS_homeType_t, float, float, float, float)+0xcc>)
 8027732:	4631      	mov	r1, r6
 8027734:	aa05      	add	r2, sp, #20
 8027736:	f7fb f9e7 	bl	8022b08 <Robot::getAxisStatus(ROBOT_axisIndex_t, AXIS_status_t*)>
 802773a:	b980      	cbnz	r0, 802775e <ACTIONS_home(bool, ROBOT_axisIndex_t, AXIS_homeType_t, float, float, float, float)+0xa6>
 802773c:	f89d 301c 	ldrb.w	r3, [sp, #28]
 8027740:	2b02      	cmp	r3, #2
 8027742:	d00c      	beq.n	802775e <ACTIONS_home(bool, ROBOT_axisIndex_t, AXIS_homeType_t, float, float, float, float)+0xa6>
 8027744:	b913      	cbnz	r3, 802774c <ACTIONS_home(bool, ROBOT_axisIndex_t, AXIS_homeType_t, float, float, float, float)+0x94>
 8027746:	2301      	movs	r3, #1
 8027748:	f88d 3004 	strb.w	r3, [sp, #4]
 802774c:	a901      	add	r1, sp, #4
 802774e:	4620      	mov	r0, r4
 8027750:	f004 fad2 	bl	802bcf8 <TaskStatus::operator=(TaskStatus const&)>
 8027754:	4620      	mov	r0, r4
 8027756:	b00d      	add	sp, #52	; 0x34
 8027758:	ecbd 8b04 	vpop	{d8-d9}
 802775c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 802775e:	2207      	movs	r2, #7
 8027760:	2102      	movs	r1, #2
 8027762:	a803      	add	r0, sp, #12
 8027764:	f004 fab8 	bl	802bcd8 <TaskStatus::TaskStatus(TaskStatus::Result_e, unsigned int)>
 8027768:	a903      	add	r1, sp, #12
 802776a:	a801      	add	r0, sp, #4
 802776c:	f004 fac4 	bl	802bcf8 <TaskStatus::operator=(TaskStatus const&)>
 8027770:	f89d 301c 	ldrb.w	r3, [sp, #28]
 8027774:	e7e6      	b.n	8027744 <ACTIONS_home(bool, ROBOT_axisIndex_t, AXIS_homeType_t, float, float, float, float)+0x8c>
 8027776:	4602      	mov	r2, r0
 8027778:	2102      	movs	r1, #2
 802777a:	4628      	mov	r0, r5
 802777c:	f004 faac 	bl	802bcd8 <TaskStatus::TaskStatus(TaskStatus::Result_e, unsigned int)>
 8027780:	e7c9      	b.n	8027716 <ACTIONS_home(bool, ROBOT_axisIndex_t, AXIS_homeType_t, float, float, float, float)+0x5e>
 8027782:	bf00      	nop
 8027784:	2000f630 	.word	0x2000f630
 8027788:	81010cc9 	.word	0x81010cc9
 802778c:	81abb0b0 	.word	0x81abb0b0
 8027790:	00000000 	.word	0x00000000

08027794 <ACTIONS_homeList(bool, ROBOT_axisIndex_t const*, AXIS_homeType_t*, float*, float*, float*, float*, unsigned char)>:
 8027794:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8027798:	b085      	sub	sp, #20
 802779a:	468b      	mov	fp, r1
 802779c:	f89d 9048 	ldrb.w	r9, [sp, #72]	; 0x48
 80277a0:	f8dd 8044 	ldr.w	r8, [sp, #68]	; 0x44
 80277a4:	2101      	movs	r1, #1
 80277a6:	e9dd 670f 	ldrd	r6, r7, [sp, #60]	; 0x3c
 80277aa:	4614      	mov	r4, r2
 80277ac:	461d      	mov	r5, r3
 80277ae:	4682      	mov	sl, r0
 80277b0:	f004 fa8c 	bl	802bccc <TaskStatus::TaskStatus(TaskStatus::Result_e)>
 80277b4:	f1b9 0f00 	cmp.w	r9, #0
 80277b8:	d022      	beq.n	8027800 <ACTIONS_homeList(bool, ROBOT_axisIndex_t const*, AXIS_homeType_t*, float*, float*, float*, float*, unsigned char)+0x6c>
 80277ba:	f109 39ff 	add.w	r9, r9, #4294967295
 80277be:	fa5f f989 	uxtb.w	r9, r9
 80277c2:	f109 0901 	add.w	r9, r9, #1
 80277c6:	44a1      	add	r9, r4
 80277c8:	f8cd 9004 	str.w	r9, [sp, #4]
 80277cc:	46d9      	mov	r9, fp
 80277ce:	f8dd b038 	ldr.w	fp, [sp, #56]	; 0x38
 80277d2:	f815 3b01 	ldrb.w	r3, [r5], #1
 80277d6:	f814 2b01 	ldrb.w	r2, [r4], #1
 80277da:	ecf8 1a01 	vldmia	r8!, {s3}
 80277de:	ecb7 1a01 	vldmia	r7!, {s2}
 80277e2:	ecf6 0a01 	vldmia	r6!, {s1}
 80277e6:	ecbb 0a01 	vldmia	fp!, {s0}
 80277ea:	4649      	mov	r1, r9
 80277ec:	a802      	add	r0, sp, #8
 80277ee:	f7ff ff63 	bl	80276b8 <ACTIONS_home(bool, ROBOT_axisIndex_t, AXIS_homeType_t, float, float, float, float)>
 80277f2:	a902      	add	r1, sp, #8
 80277f4:	4650      	mov	r0, sl
 80277f6:	f004 fa89 	bl	802bd0c <TaskStatus::operator&=(TaskStatus const&)>
 80277fa:	9b01      	ldr	r3, [sp, #4]
 80277fc:	42a3      	cmp	r3, r4
 80277fe:	d1e8      	bne.n	80277d2 <ACTIONS_homeList(bool, ROBOT_axisIndex_t const*, AXIS_homeType_t*, float*, float*, float*, float*, unsigned char)+0x3e>
 8027800:	4650      	mov	r0, sl
 8027802:	b005      	add	sp, #20
 8027804:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08027808 <ACTIONS_move(bool, ROBOT_axisIndex_t, float, AXIS_moveType_t, AXIS_mode_t)>:
 8027808:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802780c:	ed2d 8b02 	vpush	{d8}
 8027810:	b08c      	sub	sp, #48	; 0x30
 8027812:	460d      	mov	r5, r1
 8027814:	2100      	movs	r1, #0
 8027816:	f89d 8050 	ldrb.w	r8, [sp, #80]	; 0x50
 802781a:	4616      	mov	r6, r2
 802781c:	461f      	mov	r7, r3
 802781e:	eeb0 8a40 	vmov.f32	s16, s0
 8027822:	4604      	mov	r4, r0
 8027824:	f004 fa52 	bl	802bccc <TaskStatus::TaskStatus(TaskStatus::Result_e)>
 8027828:	b16d      	cbz	r5, 8027846 <ACTIONS_move(bool, ROBOT_axisIndex_t, float, AXIS_moveType_t, AXIS_mode_t)+0x3e>
 802782a:	492c      	ldr	r1, [pc, #176]	; (80278dc <ACTIONS_move(bool, ROBOT_axisIndex_t, float, AXIS_moveType_t, AXIS_mode_t)+0xd4>)
 802782c:	4632      	mov	r2, r6
 802782e:	a803      	add	r0, sp, #12
 8027830:	f7fb f95a 	bl	8022ae8 <Robot::getAxis(ROBOT_axisIndex_t)>
 8027834:	f89d 3010 	ldrb.w	r3, [sp, #16]
 8027838:	bb6b      	cbnz	r3, 8027896 <ACTIONS_move(bool, ROBOT_axisIndex_t, float, AXIS_moveType_t, AXIS_mode_t)+0x8e>
 802783a:	4620      	mov	r0, r4
 802783c:	b00c      	add	sp, #48	; 0x30
 802783e:	ecbd 8b02 	vpop	{d8}
 8027842:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8027846:	4629      	mov	r1, r5
 8027848:	a801      	add	r0, sp, #4
 802784a:	f004 fa3f 	bl	802bccc <TaskStatus::TaskStatus(TaskStatus::Result_e)>
 802784e:	4823      	ldr	r0, [pc, #140]	; (80278dc <ACTIONS_move(bool, ROBOT_axisIndex_t, float, AXIS_moveType_t, AXIS_mode_t)+0xd4>)
 8027850:	4631      	mov	r1, r6
 8027852:	aa05      	add	r2, sp, #20
 8027854:	f7fb f958 	bl	8022b08 <Robot::getAxisStatus(ROBOT_axisIndex_t, AXIS_status_t*)>
 8027858:	b988      	cbnz	r0, 802787e <ACTIONS_move(bool, ROBOT_axisIndex_t, float, AXIS_moveType_t, AXIS_mode_t)+0x76>
 802785a:	f89d 301c 	ldrb.w	r3, [sp, #28]
 802785e:	2b02      	cmp	r3, #2
 8027860:	d00d      	beq.n	802787e <ACTIONS_move(bool, ROBOT_axisIndex_t, float, AXIS_moveType_t, AXIS_mode_t)+0x76>
 8027862:	b913      	cbnz	r3, 802786a <ACTIONS_move(bool, ROBOT_axisIndex_t, float, AXIS_moveType_t, AXIS_mode_t)+0x62>
 8027864:	2301      	movs	r3, #1
 8027866:	f88d 3004 	strb.w	r3, [sp, #4]
 802786a:	a901      	add	r1, sp, #4
 802786c:	4620      	mov	r0, r4
 802786e:	f004 fa43 	bl	802bcf8 <TaskStatus::operator=(TaskStatus const&)>
 8027872:	4620      	mov	r0, r4
 8027874:	b00c      	add	sp, #48	; 0x30
 8027876:	ecbd 8b02 	vpop	{d8}
 802787a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802787e:	2207      	movs	r2, #7
 8027880:	2102      	movs	r1, #2
 8027882:	a803      	add	r0, sp, #12
 8027884:	f004 fa28 	bl	802bcd8 <TaskStatus::TaskStatus(TaskStatus::Result_e, unsigned int)>
 8027888:	a903      	add	r1, sp, #12
 802788a:	a801      	add	r0, sp, #4
 802788c:	f004 fa34 	bl	802bcf8 <TaskStatus::operator=(TaskStatus const&)>
 8027890:	f89d 301c 	ldrb.w	r3, [sp, #28]
 8027894:	e7e5      	b.n	8027862 <ACTIONS_move(bool, ROBOT_axisIndex_t, float, AXIS_moveType_t, AXIS_mode_t)+0x5a>
 8027896:	9d03      	ldr	r5, [sp, #12]
 8027898:	4810      	ldr	r0, [pc, #64]	; (80278dc <ACTIONS_move(bool, ROBOT_axisIndex_t, float, AXIS_moveType_t, AXIS_mode_t)+0xd4>)
 802789a:	682b      	ldr	r3, [r5, #0]
 802789c:	691e      	ldr	r6, [r3, #16]
 802789e:	f7fb f9f7 	bl	8022c90 <Robot::getBusVoltage()>
 80278a2:	4643      	mov	r3, r8
 80278a4:	4602      	mov	r2, r0
 80278a6:	4639      	mov	r1, r7
 80278a8:	4628      	mov	r0, r5
 80278aa:	eeb0 0a48 	vmov.f32	s0, s16
 80278ae:	47b0      	blx	r6
 80278b0:	ad05      	add	r5, sp, #20
 80278b2:	b170      	cbz	r0, 80278d2 <ACTIONS_move(bool, ROBOT_axisIndex_t, float, AXIS_moveType_t, AXIS_mode_t)+0xca>
 80278b4:	4602      	mov	r2, r0
 80278b6:	2102      	movs	r1, #2
 80278b8:	4628      	mov	r0, r5
 80278ba:	f004 fa0d 	bl	802bcd8 <TaskStatus::TaskStatus(TaskStatus::Result_e, unsigned int)>
 80278be:	4629      	mov	r1, r5
 80278c0:	4620      	mov	r0, r4
 80278c2:	f004 fa19 	bl	802bcf8 <TaskStatus::operator=(TaskStatus const&)>
 80278c6:	4620      	mov	r0, r4
 80278c8:	b00c      	add	sp, #48	; 0x30
 80278ca:	ecbd 8b02 	vpop	{d8}
 80278ce:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80278d2:	4601      	mov	r1, r0
 80278d4:	4628      	mov	r0, r5
 80278d6:	f004 f9f9 	bl	802bccc <TaskStatus::TaskStatus(TaskStatus::Result_e)>
 80278da:	e7f0      	b.n	80278be <ACTIONS_move(bool, ROBOT_axisIndex_t, float, AXIS_moveType_t, AXIS_mode_t)+0xb6>
 80278dc:	2000f630 	.word	0x2000f630
 80278e0:	81010bc9 	.word	0x81010bc9
 80278e4:	80acb0b0 	.word	0x80acb0b0
 80278e8:	00000000 	.word	0x00000000

080278ec <ACTIONS_move(bool, ROBOT_axisIndex_t, float, AXIS_moveType_t, float, float, float)>:
 80278ec:	b5f0      	push	{r4, r5, r6, r7, lr}
 80278ee:	ed2d 8b04 	vpush	{d8-d9}
 80278f2:	460d      	mov	r5, r1
 80278f4:	b08d      	sub	sp, #52	; 0x34
 80278f6:	2100      	movs	r1, #0
 80278f8:	4616      	mov	r6, r2
 80278fa:	461f      	mov	r7, r3
 80278fc:	eeb0 8a40 	vmov.f32	s16, s0
 8027900:	eef0 8a60 	vmov.f32	s17, s1
 8027904:	eeb0 9a41 	vmov.f32	s18, s2
 8027908:	eef0 9a61 	vmov.f32	s19, s3
 802790c:	4604      	mov	r4, r0
 802790e:	f004 f9dd 	bl	802bccc <TaskStatus::TaskStatus(TaskStatus::Result_e)>
 8027912:	b165      	cbz	r5, 802792e <ACTIONS_move(bool, ROBOT_axisIndex_t, float, AXIS_moveType_t, float, float, float)+0x42>
 8027914:	492d      	ldr	r1, [pc, #180]	; (80279cc <ACTIONS_move(bool, ROBOT_axisIndex_t, float, AXIS_moveType_t, float, float, float)+0xe0>)
 8027916:	4632      	mov	r2, r6
 8027918:	a803      	add	r0, sp, #12
 802791a:	f7fb f8e5 	bl	8022ae8 <Robot::getAxis(ROBOT_axisIndex_t)>
 802791e:	f89d 3010 	ldrb.w	r3, [sp, #16]
 8027922:	bb5b      	cbnz	r3, 802797c <ACTIONS_move(bool, ROBOT_axisIndex_t, float, AXIS_moveType_t, float, float, float)+0x90>
 8027924:	4620      	mov	r0, r4
 8027926:	b00d      	add	sp, #52	; 0x34
 8027928:	ecbd 8b04 	vpop	{d8-d9}
 802792c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 802792e:	4629      	mov	r1, r5
 8027930:	a801      	add	r0, sp, #4
 8027932:	f004 f9cb 	bl	802bccc <TaskStatus::TaskStatus(TaskStatus::Result_e)>
 8027936:	4825      	ldr	r0, [pc, #148]	; (80279cc <ACTIONS_move(bool, ROBOT_axisIndex_t, float, AXIS_moveType_t, float, float, float)+0xe0>)
 8027938:	4631      	mov	r1, r6
 802793a:	aa05      	add	r2, sp, #20
 802793c:	f7fb f8e4 	bl	8022b08 <Robot::getAxisStatus(ROBOT_axisIndex_t, AXIS_status_t*)>
 8027940:	b980      	cbnz	r0, 8027964 <ACTIONS_move(bool, ROBOT_axisIndex_t, float, AXIS_moveType_t, float, float, float)+0x78>
 8027942:	f89d 301c 	ldrb.w	r3, [sp, #28]
 8027946:	2b02      	cmp	r3, #2
 8027948:	d00c      	beq.n	8027964 <ACTIONS_move(bool, ROBOT_axisIndex_t, float, AXIS_moveType_t, float, float, float)+0x78>
 802794a:	b913      	cbnz	r3, 8027952 <ACTIONS_move(bool, ROBOT_axisIndex_t, float, AXIS_moveType_t, float, float, float)+0x66>
 802794c:	2301      	movs	r3, #1
 802794e:	f88d 3004 	strb.w	r3, [sp, #4]
 8027952:	a901      	add	r1, sp, #4
 8027954:	4620      	mov	r0, r4
 8027956:	f004 f9cf 	bl	802bcf8 <TaskStatus::operator=(TaskStatus const&)>
 802795a:	4620      	mov	r0, r4
 802795c:	b00d      	add	sp, #52	; 0x34
 802795e:	ecbd 8b04 	vpop	{d8-d9}
 8027962:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8027964:	2207      	movs	r2, #7
 8027966:	2102      	movs	r1, #2
 8027968:	a803      	add	r0, sp, #12
 802796a:	f004 f9b5 	bl	802bcd8 <TaskStatus::TaskStatus(TaskStatus::Result_e, unsigned int)>
 802796e:	a903      	add	r1, sp, #12
 8027970:	a801      	add	r0, sp, #4
 8027972:	f004 f9c1 	bl	802bcf8 <TaskStatus::operator=(TaskStatus const&)>
 8027976:	f89d 301c 	ldrb.w	r3, [sp, #28]
 802797a:	e7e6      	b.n	802794a <ACTIONS_move(bool, ROBOT_axisIndex_t, float, AXIS_moveType_t, float, float, float)+0x5e>
 802797c:	9d03      	ldr	r5, [sp, #12]
 802797e:	4813      	ldr	r0, [pc, #76]	; (80279cc <ACTIONS_move(bool, ROBOT_axisIndex_t, float, AXIS_moveType_t, float, float, float)+0xe0>)
 8027980:	682b      	ldr	r3, [r5, #0]
 8027982:	695e      	ldr	r6, [r3, #20]
 8027984:	f7fb f984 	bl	8022c90 <Robot::getBusVoltage()>
 8027988:	eef0 1a69 	vmov.f32	s3, s19
 802798c:	4602      	mov	r2, r0
 802798e:	eeb0 1a49 	vmov.f32	s2, s18
 8027992:	4628      	mov	r0, r5
 8027994:	eef0 0a68 	vmov.f32	s1, s17
 8027998:	4639      	mov	r1, r7
 802799a:	eeb0 0a48 	vmov.f32	s0, s16
 802799e:	47b0      	blx	r6
 80279a0:	ad05      	add	r5, sp, #20
 80279a2:	b168      	cbz	r0, 80279c0 <ACTIONS_move(bool, ROBOT_axisIndex_t, float, AXIS_moveType_t, float, float, float)+0xd4>
 80279a4:	4602      	mov	r2, r0
 80279a6:	2102      	movs	r1, #2
 80279a8:	4628      	mov	r0, r5
 80279aa:	f004 f995 	bl	802bcd8 <TaskStatus::TaskStatus(TaskStatus::Result_e, unsigned int)>
 80279ae:	4629      	mov	r1, r5
 80279b0:	4620      	mov	r0, r4
 80279b2:	f004 f9a1 	bl	802bcf8 <TaskStatus::operator=(TaskStatus const&)>
 80279b6:	4620      	mov	r0, r4
 80279b8:	b00d      	add	sp, #52	; 0x34
 80279ba:	ecbd 8b04 	vpop	{d8-d9}
 80279be:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80279c0:	4601      	mov	r1, r0
 80279c2:	4628      	mov	r0, r5
 80279c4:	f004 f982 	bl	802bccc <TaskStatus::TaskStatus(TaskStatus::Result_e)>
 80279c8:	e7f1      	b.n	80279ae <ACTIONS_move(bool, ROBOT_axisIndex_t, float, AXIS_moveType_t, float, float, float)+0xc2>
 80279ca:	bf00      	nop
 80279cc:	2000f630 	.word	0x2000f630
 80279d0:	81010cc9 	.word	0x81010cc9
 80279d4:	81abb0b0 	.word	0x81abb0b0
 80279d8:	00000000 	.word	0x00000000

080279dc <ACTIONS_moveList(bool, ROBOT_axisIndex_t const*, float*, AXIS_moveType_t*, unsigned char, unsigned int, AXIS_mode_t)>:
 80279dc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80279e0:	b085      	sub	sp, #20
 80279e2:	4688      	mov	r8, r1
 80279e4:	f89d 703c 	ldrb.w	r7, [sp, #60]	; 0x3c
 80279e8:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 80279ea:	f8dd a040 	ldr.w	sl, [sp, #64]	; 0x40
 80279ee:	f89d b044 	ldrb.w	fp, [sp, #68]	; 0x44
 80279f2:	2101      	movs	r1, #1
 80279f4:	4614      	mov	r4, r2
 80279f6:	461d      	mov	r5, r3
 80279f8:	4681      	mov	r9, r0
 80279fa:	f004 f967 	bl	802bccc <TaskStatus::TaskStatus(TaskStatus::Result_e)>
 80279fe:	b30f      	cbz	r7, 8027a44 <ACTIONS_moveList(bool, ROBOT_axisIndex_t const*, float*, AXIS_moveType_t*, unsigned char, unsigned int, AXIS_mode_t)+0x68>
 8027a00:	3f01      	subs	r7, #1
 8027a02:	b2ff      	uxtb	r7, r7
 8027a04:	3701      	adds	r7, #1
 8027a06:	4427      	add	r7, r4
 8027a08:	e001      	b.n	8027a0e <ACTIONS_moveList(bool, ROBOT_axisIndex_t const*, float*, AXIS_moveType_t*, unsigned char, unsigned int, AXIS_mode_t)+0x32>
 8027a0a:	42a7      	cmp	r7, r4
 8027a0c:	d01a      	beq.n	8027a44 <ACTIONS_moveList(bool, ROBOT_axisIndex_t const*, float*, AXIS_moveType_t*, unsigned char, unsigned int, AXIS_mode_t)+0x68>
 8027a0e:	f8cd b000 	str.w	fp, [sp]
 8027a12:	4641      	mov	r1, r8
 8027a14:	a802      	add	r0, sp, #8
 8027a16:	f816 3b01 	ldrb.w	r3, [r6], #1
 8027a1a:	ecb5 0a01 	vldmia	r5!, {s0}
 8027a1e:	f814 2b01 	ldrb.w	r2, [r4], #1
 8027a22:	f7ff fef1 	bl	8027808 <ACTIONS_move(bool, ROBOT_axisIndex_t, float, AXIS_moveType_t, AXIS_mode_t)>
 8027a26:	a902      	add	r1, sp, #8
 8027a28:	4648      	mov	r0, r9
 8027a2a:	f004 f96f 	bl	802bd0c <TaskStatus::operator&=(TaskStatus const&)>
 8027a2e:	f1ba 0f00 	cmp.w	sl, #0
 8027a32:	d0ea      	beq.n	8027a0a <ACTIONS_moveList(bool, ROBOT_axisIndex_t const*, float*, AXIS_moveType_t*, unsigned char, unsigned int, AXIS_mode_t)+0x2e>
 8027a34:	f1b8 0f00 	cmp.w	r8, #0
 8027a38:	d0e7      	beq.n	8027a0a <ACTIONS_moveList(bool, ROBOT_axisIndex_t const*, float*, AXIS_moveType_t*, unsigned char, unsigned int, AXIS_mode_t)+0x2e>
 8027a3a:	4650      	mov	r0, sl
 8027a3c:	f012 fa88 	bl	8039f50 <_tx_thread_sleep>
 8027a40:	42a7      	cmp	r7, r4
 8027a42:	d1e4      	bne.n	8027a0e <ACTIONS_moveList(bool, ROBOT_axisIndex_t const*, float*, AXIS_moveType_t*, unsigned char, unsigned int, AXIS_mode_t)+0x32>
 8027a44:	4648      	mov	r0, r9
 8027a46:	b005      	add	sp, #20
 8027a48:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08027a4c <ACTIONS_power(bool, ROBOT_axisIndex_t, AXIS_powerState_t)>:
 8027a4c:	b5f0      	push	{r4, r5, r6, r7, lr}
 8027a4e:	460d      	mov	r5, r1
 8027a50:	b08d      	sub	sp, #52	; 0x34
 8027a52:	2100      	movs	r1, #0
 8027a54:	4616      	mov	r6, r2
 8027a56:	461f      	mov	r7, r3
 8027a58:	4604      	mov	r4, r0
 8027a5a:	f004 f937 	bl	802bccc <TaskStatus::TaskStatus(TaskStatus::Result_e)>
 8027a5e:	b1cd      	cbz	r5, 8027a94 <ACTIONS_power(bool, ROBOT_axisIndex_t, AXIS_powerState_t)+0x48>
 8027a60:	4922      	ldr	r1, [pc, #136]	; (8027aec <ACTIONS_power(bool, ROBOT_axisIndex_t, AXIS_powerState_t)+0xa0>)
 8027a62:	4632      	mov	r2, r6
 8027a64:	a803      	add	r0, sp, #12
 8027a66:	f7fb f83f 	bl	8022ae8 <Robot::getAxis(ROBOT_axisIndex_t)>
 8027a6a:	f89d 3010 	ldrb.w	r3, [sp, #16]
 8027a6e:	b173      	cbz	r3, 8027a8e <ACTIONS_power(bool, ROBOT_axisIndex_t, AXIS_powerState_t)+0x42>
 8027a70:	9803      	ldr	r0, [sp, #12]
 8027a72:	6803      	ldr	r3, [r0, #0]
 8027a74:	4639      	mov	r1, r7
 8027a76:	6a1b      	ldr	r3, [r3, #32]
 8027a78:	4798      	blx	r3
 8027a7a:	ad05      	add	r5, sp, #20
 8027a7c:	bb78      	cbnz	r0, 8027ade <ACTIONS_power(bool, ROBOT_axisIndex_t, AXIS_powerState_t)+0x92>
 8027a7e:	4601      	mov	r1, r0
 8027a80:	4628      	mov	r0, r5
 8027a82:	f004 f923 	bl	802bccc <TaskStatus::TaskStatus(TaskStatus::Result_e)>
 8027a86:	4629      	mov	r1, r5
 8027a88:	4620      	mov	r0, r4
 8027a8a:	f004 f935 	bl	802bcf8 <TaskStatus::operator=(TaskStatus const&)>
 8027a8e:	4620      	mov	r0, r4
 8027a90:	b00d      	add	sp, #52	; 0x34
 8027a92:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8027a94:	4629      	mov	r1, r5
 8027a96:	a801      	add	r0, sp, #4
 8027a98:	f004 f918 	bl	802bccc <TaskStatus::TaskStatus(TaskStatus::Result_e)>
 8027a9c:	4813      	ldr	r0, [pc, #76]	; (8027aec <ACTIONS_power(bool, ROBOT_axisIndex_t, AXIS_powerState_t)+0xa0>)
 8027a9e:	4631      	mov	r1, r6
 8027aa0:	aa05      	add	r2, sp, #20
 8027aa2:	f7fb f831 	bl	8022b08 <Robot::getAxisStatus(ROBOT_axisIndex_t, AXIS_status_t*)>
 8027aa6:	b970      	cbnz	r0, 8027ac6 <ACTIONS_power(bool, ROBOT_axisIndex_t, AXIS_powerState_t)+0x7a>
 8027aa8:	f89d 301c 	ldrb.w	r3, [sp, #28]
 8027aac:	2b02      	cmp	r3, #2
 8027aae:	d00a      	beq.n	8027ac6 <ACTIONS_power(bool, ROBOT_axisIndex_t, AXIS_powerState_t)+0x7a>
 8027ab0:	b913      	cbnz	r3, 8027ab8 <ACTIONS_power(bool, ROBOT_axisIndex_t, AXIS_powerState_t)+0x6c>
 8027ab2:	2301      	movs	r3, #1
 8027ab4:	f88d 3004 	strb.w	r3, [sp, #4]
 8027ab8:	a901      	add	r1, sp, #4
 8027aba:	4620      	mov	r0, r4
 8027abc:	f004 f91c 	bl	802bcf8 <TaskStatus::operator=(TaskStatus const&)>
 8027ac0:	4620      	mov	r0, r4
 8027ac2:	b00d      	add	sp, #52	; 0x34
 8027ac4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8027ac6:	2207      	movs	r2, #7
 8027ac8:	2102      	movs	r1, #2
 8027aca:	a803      	add	r0, sp, #12
 8027acc:	f004 f904 	bl	802bcd8 <TaskStatus::TaskStatus(TaskStatus::Result_e, unsigned int)>
 8027ad0:	a903      	add	r1, sp, #12
 8027ad2:	a801      	add	r0, sp, #4
 8027ad4:	f004 f910 	bl	802bcf8 <TaskStatus::operator=(TaskStatus const&)>
 8027ad8:	f89d 301c 	ldrb.w	r3, [sp, #28]
 8027adc:	e7e8      	b.n	8027ab0 <ACTIONS_power(bool, ROBOT_axisIndex_t, AXIS_powerState_t)+0x64>
 8027ade:	4602      	mov	r2, r0
 8027ae0:	2102      	movs	r1, #2
 8027ae2:	4628      	mov	r0, r5
 8027ae4:	f004 f8f8 	bl	802bcd8 <TaskStatus::TaskStatus(TaskStatus::Result_e, unsigned int)>
 8027ae8:	e7cd      	b.n	8027a86 <ACTIONS_power(bool, ROBOT_axisIndex_t, AXIS_powerState_t)+0x3a>
 8027aea:	bf00      	nop
 8027aec:	2000f630 	.word	0x2000f630

08027af0 <ACTIONS_powerList(bool, ROBOT_axisIndex_t const*, unsigned char, AXIS_powerState_t)>:
 8027af0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8027af4:	b082      	sub	sp, #8
 8027af6:	461d      	mov	r5, r3
 8027af8:	460f      	mov	r7, r1
 8027afa:	2101      	movs	r1, #1
 8027afc:	f89d 8020 	ldrb.w	r8, [sp, #32]
 8027b00:	4614      	mov	r4, r2
 8027b02:	4606      	mov	r6, r0
 8027b04:	f004 f8e2 	bl	802bccc <TaskStatus::TaskStatus(TaskStatus::Result_e)>
 8027b08:	b185      	cbz	r5, 8027b2c <ACTIONS_powerList(bool, ROBOT_axisIndex_t const*, unsigned char, AXIS_powerState_t)+0x3c>
 8027b0a:	3d01      	subs	r5, #1
 8027b0c:	b2ed      	uxtb	r5, r5
 8027b0e:	3501      	adds	r5, #1
 8027b10:	4425      	add	r5, r4
 8027b12:	f814 2b01 	ldrb.w	r2, [r4], #1
 8027b16:	4643      	mov	r3, r8
 8027b18:	4639      	mov	r1, r7
 8027b1a:	4668      	mov	r0, sp
 8027b1c:	f7ff ff96 	bl	8027a4c <ACTIONS_power(bool, ROBOT_axisIndex_t, AXIS_powerState_t)>
 8027b20:	4669      	mov	r1, sp
 8027b22:	4630      	mov	r0, r6
 8027b24:	f004 f8f2 	bl	802bd0c <TaskStatus::operator&=(TaskStatus const&)>
 8027b28:	42ac      	cmp	r4, r5
 8027b2a:	d1f2      	bne.n	8027b12 <ACTIONS_powerList(bool, ROBOT_axisIndex_t const*, unsigned char, AXIS_powerState_t)+0x22>
 8027b2c:	4630      	mov	r0, r6
 8027b2e:	b002      	add	sp, #8
 8027b30:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08027b34 <ACTIONS_powerAllAxis(bool, AXIS_powerState_t)>:
 8027b34:	b510      	push	{r4, lr}
 8027b36:	b082      	sub	sp, #8
 8027b38:	2304      	movs	r3, #4
 8027b3a:	9200      	str	r2, [sp, #0]
 8027b3c:	4a03      	ldr	r2, [pc, #12]	; (8027b4c <ACTIONS_powerAllAxis(bool, AXIS_powerState_t)+0x18>)
 8027b3e:	4604      	mov	r4, r0
 8027b40:	f7ff ffd6 	bl	8027af0 <ACTIONS_powerList(bool, ROBOT_axisIndex_t const*, unsigned char, AXIS_powerState_t)>
 8027b44:	4620      	mov	r0, r4
 8027b46:	b002      	add	sp, #8
 8027b48:	bd10      	pop	{r4, pc}
 8027b4a:	bf00      	nop
 8027b4c:	08045214 	.word	0x08045214

08027b50 <ACTIONS_reset(bool, ROBOT_axisIndex_t)>:
 8027b50:	b570      	push	{r4, r5, r6, lr}
 8027b52:	460d      	mov	r5, r1
 8027b54:	b08c      	sub	sp, #48	; 0x30
 8027b56:	2100      	movs	r1, #0
 8027b58:	4616      	mov	r6, r2
 8027b5a:	4604      	mov	r4, r0
 8027b5c:	f004 f8b6 	bl	802bccc <TaskStatus::TaskStatus(TaskStatus::Result_e)>
 8027b60:	b1c5      	cbz	r5, 8027b94 <ACTIONS_reset(bool, ROBOT_axisIndex_t)+0x44>
 8027b62:	4922      	ldr	r1, [pc, #136]	; (8027bec <ACTIONS_reset(bool, ROBOT_axisIndex_t)+0x9c>)
 8027b64:	4632      	mov	r2, r6
 8027b66:	a803      	add	r0, sp, #12
 8027b68:	f7fa ffbe 	bl	8022ae8 <Robot::getAxis(ROBOT_axisIndex_t)>
 8027b6c:	f89d 3010 	ldrb.w	r3, [sp, #16]
 8027b70:	b16b      	cbz	r3, 8027b8e <ACTIONS_reset(bool, ROBOT_axisIndex_t)+0x3e>
 8027b72:	9803      	ldr	r0, [sp, #12]
 8027b74:	6803      	ldr	r3, [r0, #0]
 8027b76:	69db      	ldr	r3, [r3, #28]
 8027b78:	4798      	blx	r3
 8027b7a:	ad05      	add	r5, sp, #20
 8027b7c:	bb78      	cbnz	r0, 8027bde <ACTIONS_reset(bool, ROBOT_axisIndex_t)+0x8e>
 8027b7e:	4601      	mov	r1, r0
 8027b80:	4628      	mov	r0, r5
 8027b82:	f004 f8a3 	bl	802bccc <TaskStatus::TaskStatus(TaskStatus::Result_e)>
 8027b86:	4629      	mov	r1, r5
 8027b88:	4620      	mov	r0, r4
 8027b8a:	f004 f8b5 	bl	802bcf8 <TaskStatus::operator=(TaskStatus const&)>
 8027b8e:	4620      	mov	r0, r4
 8027b90:	b00c      	add	sp, #48	; 0x30
 8027b92:	bd70      	pop	{r4, r5, r6, pc}
 8027b94:	4629      	mov	r1, r5
 8027b96:	a801      	add	r0, sp, #4
 8027b98:	f004 f898 	bl	802bccc <TaskStatus::TaskStatus(TaskStatus::Result_e)>
 8027b9c:	4813      	ldr	r0, [pc, #76]	; (8027bec <ACTIONS_reset(bool, ROBOT_axisIndex_t)+0x9c>)
 8027b9e:	4631      	mov	r1, r6
 8027ba0:	aa05      	add	r2, sp, #20
 8027ba2:	f7fa ffb1 	bl	8022b08 <Robot::getAxisStatus(ROBOT_axisIndex_t, AXIS_status_t*)>
 8027ba6:	b970      	cbnz	r0, 8027bc6 <ACTIONS_reset(bool, ROBOT_axisIndex_t)+0x76>
 8027ba8:	f89d 301c 	ldrb.w	r3, [sp, #28]
 8027bac:	2b02      	cmp	r3, #2
 8027bae:	d00a      	beq.n	8027bc6 <ACTIONS_reset(bool, ROBOT_axisIndex_t)+0x76>
 8027bb0:	b913      	cbnz	r3, 8027bb8 <ACTIONS_reset(bool, ROBOT_axisIndex_t)+0x68>
 8027bb2:	2301      	movs	r3, #1
 8027bb4:	f88d 3004 	strb.w	r3, [sp, #4]
 8027bb8:	a901      	add	r1, sp, #4
 8027bba:	4620      	mov	r0, r4
 8027bbc:	f004 f89c 	bl	802bcf8 <TaskStatus::operator=(TaskStatus const&)>
 8027bc0:	4620      	mov	r0, r4
 8027bc2:	b00c      	add	sp, #48	; 0x30
 8027bc4:	bd70      	pop	{r4, r5, r6, pc}
 8027bc6:	2207      	movs	r2, #7
 8027bc8:	2102      	movs	r1, #2
 8027bca:	a803      	add	r0, sp, #12
 8027bcc:	f004 f884 	bl	802bcd8 <TaskStatus::TaskStatus(TaskStatus::Result_e, unsigned int)>
 8027bd0:	a903      	add	r1, sp, #12
 8027bd2:	a801      	add	r0, sp, #4
 8027bd4:	f004 f890 	bl	802bcf8 <TaskStatus::operator=(TaskStatus const&)>
 8027bd8:	f89d 301c 	ldrb.w	r3, [sp, #28]
 8027bdc:	e7e8      	b.n	8027bb0 <ACTIONS_reset(bool, ROBOT_axisIndex_t)+0x60>
 8027bde:	4602      	mov	r2, r0
 8027be0:	2102      	movs	r1, #2
 8027be2:	4628      	mov	r0, r5
 8027be4:	f004 f878 	bl	802bcd8 <TaskStatus::TaskStatus(TaskStatus::Result_e, unsigned int)>
 8027be8:	e7cd      	b.n	8027b86 <ACTIONS_reset(bool, ROBOT_axisIndex_t)+0x36>
 8027bea:	bf00      	nop
 8027bec:	2000f630 	.word	0x2000f630

08027bf0 <ACTIONS_resetAll(bool)>:
 8027bf0:	b570      	push	{r4, r5, r6, lr}
 8027bf2:	460e      	mov	r6, r1
 8027bf4:	b082      	sub	sp, #8
 8027bf6:	2101      	movs	r1, #1
 8027bf8:	4605      	mov	r5, r0
 8027bfa:	f004 f867 	bl	802bccc <TaskStatus::TaskStatus(TaskStatus::Result_e)>
 8027bfe:	2400      	movs	r4, #0
 8027c00:	b2e2      	uxtb	r2, r4
 8027c02:	4631      	mov	r1, r6
 8027c04:	4668      	mov	r0, sp
 8027c06:	f7ff ffa3 	bl	8027b50 <ACTIONS_reset(bool, ROBOT_axisIndex_t)>
 8027c0a:	3401      	adds	r4, #1
 8027c0c:	4669      	mov	r1, sp
 8027c0e:	4628      	mov	r0, r5
 8027c10:	f004 f87c 	bl	802bd0c <TaskStatus::operator&=(TaskStatus const&)>
 8027c14:	2c1c      	cmp	r4, #28
 8027c16:	d1f3      	bne.n	8027c00 <ACTIONS_resetAll(bool)+0x10>
 8027c18:	4628      	mov	r0, r5
 8027c1a:	b002      	add	sp, #8
 8027c1c:	bd70      	pop	{r4, r5, r6, pc}
 8027c1e:	bf00      	nop

08027c20 <ACTIONS_stop(bool, ROBOT_axisIndex_t)>:
 8027c20:	b570      	push	{r4, r5, r6, lr}
 8027c22:	460d      	mov	r5, r1
 8027c24:	b08c      	sub	sp, #48	; 0x30
 8027c26:	2100      	movs	r1, #0
 8027c28:	4616      	mov	r6, r2
 8027c2a:	4604      	mov	r4, r0
 8027c2c:	f004 f84e 	bl	802bccc <TaskStatus::TaskStatus(TaskStatus::Result_e)>
 8027c30:	b1c5      	cbz	r5, 8027c64 <ACTIONS_stop(bool, ROBOT_axisIndex_t)+0x44>
 8027c32:	4922      	ldr	r1, [pc, #136]	; (8027cbc <ACTIONS_stop(bool, ROBOT_axisIndex_t)+0x9c>)
 8027c34:	4632      	mov	r2, r6
 8027c36:	a803      	add	r0, sp, #12
 8027c38:	f7fa ff56 	bl	8022ae8 <Robot::getAxis(ROBOT_axisIndex_t)>
 8027c3c:	f89d 3010 	ldrb.w	r3, [sp, #16]
 8027c40:	b16b      	cbz	r3, 8027c5e <ACTIONS_stop(bool, ROBOT_axisIndex_t)+0x3e>
 8027c42:	9803      	ldr	r0, [sp, #12]
 8027c44:	6803      	ldr	r3, [r0, #0]
 8027c46:	699b      	ldr	r3, [r3, #24]
 8027c48:	4798      	blx	r3
 8027c4a:	ad05      	add	r5, sp, #20
 8027c4c:	bb78      	cbnz	r0, 8027cae <ACTIONS_stop(bool, ROBOT_axisIndex_t)+0x8e>
 8027c4e:	4601      	mov	r1, r0
 8027c50:	4628      	mov	r0, r5
 8027c52:	f004 f83b 	bl	802bccc <TaskStatus::TaskStatus(TaskStatus::Result_e)>
 8027c56:	4629      	mov	r1, r5
 8027c58:	4620      	mov	r0, r4
 8027c5a:	f004 f84d 	bl	802bcf8 <TaskStatus::operator=(TaskStatus const&)>
 8027c5e:	4620      	mov	r0, r4
 8027c60:	b00c      	add	sp, #48	; 0x30
 8027c62:	bd70      	pop	{r4, r5, r6, pc}
 8027c64:	4629      	mov	r1, r5
 8027c66:	a801      	add	r0, sp, #4
 8027c68:	f004 f830 	bl	802bccc <TaskStatus::TaskStatus(TaskStatus::Result_e)>
 8027c6c:	4813      	ldr	r0, [pc, #76]	; (8027cbc <ACTIONS_stop(bool, ROBOT_axisIndex_t)+0x9c>)
 8027c6e:	4631      	mov	r1, r6
 8027c70:	aa05      	add	r2, sp, #20
 8027c72:	f7fa ff49 	bl	8022b08 <Robot::getAxisStatus(ROBOT_axisIndex_t, AXIS_status_t*)>
 8027c76:	b970      	cbnz	r0, 8027c96 <ACTIONS_stop(bool, ROBOT_axisIndex_t)+0x76>
 8027c78:	f89d 301c 	ldrb.w	r3, [sp, #28]
 8027c7c:	2b02      	cmp	r3, #2
 8027c7e:	d00a      	beq.n	8027c96 <ACTIONS_stop(bool, ROBOT_axisIndex_t)+0x76>
 8027c80:	b913      	cbnz	r3, 8027c88 <ACTIONS_stop(bool, ROBOT_axisIndex_t)+0x68>
 8027c82:	2301      	movs	r3, #1
 8027c84:	f88d 3004 	strb.w	r3, [sp, #4]
 8027c88:	a901      	add	r1, sp, #4
 8027c8a:	4620      	mov	r0, r4
 8027c8c:	f004 f834 	bl	802bcf8 <TaskStatus::operator=(TaskStatus const&)>
 8027c90:	4620      	mov	r0, r4
 8027c92:	b00c      	add	sp, #48	; 0x30
 8027c94:	bd70      	pop	{r4, r5, r6, pc}
 8027c96:	2207      	movs	r2, #7
 8027c98:	2102      	movs	r1, #2
 8027c9a:	a803      	add	r0, sp, #12
 8027c9c:	f004 f81c 	bl	802bcd8 <TaskStatus::TaskStatus(TaskStatus::Result_e, unsigned int)>
 8027ca0:	a903      	add	r1, sp, #12
 8027ca2:	a801      	add	r0, sp, #4
 8027ca4:	f004 f828 	bl	802bcf8 <TaskStatus::operator=(TaskStatus const&)>
 8027ca8:	f89d 301c 	ldrb.w	r3, [sp, #28]
 8027cac:	e7e8      	b.n	8027c80 <ACTIONS_stop(bool, ROBOT_axisIndex_t)+0x60>
 8027cae:	4602      	mov	r2, r0
 8027cb0:	2102      	movs	r1, #2
 8027cb2:	4628      	mov	r0, r5
 8027cb4:	f004 f810 	bl	802bcd8 <TaskStatus::TaskStatus(TaskStatus::Result_e, unsigned int)>
 8027cb8:	e7cd      	b.n	8027c56 <ACTIONS_stop(bool, ROBOT_axisIndex_t)+0x36>
 8027cba:	bf00      	nop
 8027cbc:	2000f630 	.word	0x2000f630

08027cc0 <ACTIONS_stopList(bool, ROBOT_axisIndex_t const*, unsigned char)>:
 8027cc0:	b5f0      	push	{r4, r5, r6, r7, lr}
 8027cc2:	461d      	mov	r5, r3
 8027cc4:	b083      	sub	sp, #12
 8027cc6:	460e      	mov	r6, r1
 8027cc8:	2101      	movs	r1, #1
 8027cca:	4614      	mov	r4, r2
 8027ccc:	4607      	mov	r7, r0
 8027cce:	f003 fffd 	bl	802bccc <TaskStatus::TaskStatus(TaskStatus::Result_e)>
 8027cd2:	b17d      	cbz	r5, 8027cf4 <ACTIONS_stopList(bool, ROBOT_axisIndex_t const*, unsigned char)+0x34>
 8027cd4:	3d01      	subs	r5, #1
 8027cd6:	b2ed      	uxtb	r5, r5
 8027cd8:	3501      	adds	r5, #1
 8027cda:	4425      	add	r5, r4
 8027cdc:	f814 2b01 	ldrb.w	r2, [r4], #1
 8027ce0:	4631      	mov	r1, r6
 8027ce2:	4668      	mov	r0, sp
 8027ce4:	f7ff ff9c 	bl	8027c20 <ACTIONS_stop(bool, ROBOT_axisIndex_t)>
 8027ce8:	4669      	mov	r1, sp
 8027cea:	4638      	mov	r0, r7
 8027cec:	f004 f80e 	bl	802bd0c <TaskStatus::operator&=(TaskStatus const&)>
 8027cf0:	42ac      	cmp	r4, r5
 8027cf2:	d1f3      	bne.n	8027cdc <ACTIONS_stopList(bool, ROBOT_axisIndex_t const*, unsigned char)+0x1c>
 8027cf4:	4638      	mov	r0, r7
 8027cf6:	b003      	add	sp, #12
 8027cf8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8027cfa:	bf00      	nop

08027cfc <ACTIONS_enableTelemetry(bool, ROBOT_axisIndex_t, bool, unsigned int)>:
 8027cfc:	b5f0      	push	{r4, r5, r6, r7, lr}
 8027cfe:	460d      	mov	r5, r1
 8027d00:	b08d      	sub	sp, #52	; 0x34
 8027d02:	2100      	movs	r1, #0
 8027d04:	4616      	mov	r6, r2
 8027d06:	461f      	mov	r7, r3
 8027d08:	4604      	mov	r4, r0
 8027d0a:	f003 ffdf 	bl	802bccc <TaskStatus::TaskStatus(TaskStatus::Result_e)>
 8027d0e:	b1d5      	cbz	r5, 8027d46 <ACTIONS_enableTelemetry(bool, ROBOT_axisIndex_t, bool, unsigned int)+0x4a>
 8027d10:	4922      	ldr	r1, [pc, #136]	; (8027d9c <ACTIONS_enableTelemetry(bool, ROBOT_axisIndex_t, bool, unsigned int)+0xa0>)
 8027d12:	4632      	mov	r2, r6
 8027d14:	a803      	add	r0, sp, #12
 8027d16:	f7fa fee7 	bl	8022ae8 <Robot::getAxis(ROBOT_axisIndex_t)>
 8027d1a:	f89d 3010 	ldrb.w	r3, [sp, #16]
 8027d1e:	b17b      	cbz	r3, 8027d40 <ACTIONS_enableTelemetry(bool, ROBOT_axisIndex_t, bool, unsigned int)+0x44>
 8027d20:	9803      	ldr	r0, [sp, #12]
 8027d22:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8027d24:	6803      	ldr	r3, [r0, #0]
 8027d26:	4639      	mov	r1, r7
 8027d28:	685b      	ldr	r3, [r3, #4]
 8027d2a:	4798      	blx	r3
 8027d2c:	ad05      	add	r5, sp, #20
 8027d2e:	bb78      	cbnz	r0, 8027d90 <ACTIONS_enableTelemetry(bool, ROBOT_axisIndex_t, bool, unsigned int)+0x94>
 8027d30:	4601      	mov	r1, r0
 8027d32:	4628      	mov	r0, r5
 8027d34:	f003 ffca 	bl	802bccc <TaskStatus::TaskStatus(TaskStatus::Result_e)>
 8027d38:	4629      	mov	r1, r5
 8027d3a:	4620      	mov	r0, r4
 8027d3c:	f003 ffdc 	bl	802bcf8 <TaskStatus::operator=(TaskStatus const&)>
 8027d40:	4620      	mov	r0, r4
 8027d42:	b00d      	add	sp, #52	; 0x34
 8027d44:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8027d46:	4629      	mov	r1, r5
 8027d48:	a801      	add	r0, sp, #4
 8027d4a:	f003 ffbf 	bl	802bccc <TaskStatus::TaskStatus(TaskStatus::Result_e)>
 8027d4e:	4813      	ldr	r0, [pc, #76]	; (8027d9c <ACTIONS_enableTelemetry(bool, ROBOT_axisIndex_t, bool, unsigned int)+0xa0>)
 8027d50:	4631      	mov	r1, r6
 8027d52:	aa05      	add	r2, sp, #20
 8027d54:	f7fa fed8 	bl	8022b08 <Robot::getAxisStatus(ROBOT_axisIndex_t, AXIS_status_t*)>
 8027d58:	b970      	cbnz	r0, 8027d78 <ACTIONS_enableTelemetry(bool, ROBOT_axisIndex_t, bool, unsigned int)+0x7c>
 8027d5a:	f89d 301c 	ldrb.w	r3, [sp, #28]
 8027d5e:	2b02      	cmp	r3, #2
 8027d60:	d00a      	beq.n	8027d78 <ACTIONS_enableTelemetry(bool, ROBOT_axisIndex_t, bool, unsigned int)+0x7c>
 8027d62:	b913      	cbnz	r3, 8027d6a <ACTIONS_enableTelemetry(bool, ROBOT_axisIndex_t, bool, unsigned int)+0x6e>
 8027d64:	2301      	movs	r3, #1
 8027d66:	f88d 3004 	strb.w	r3, [sp, #4]
 8027d6a:	a901      	add	r1, sp, #4
 8027d6c:	4620      	mov	r0, r4
 8027d6e:	f003 ffc3 	bl	802bcf8 <TaskStatus::operator=(TaskStatus const&)>
 8027d72:	4620      	mov	r0, r4
 8027d74:	b00d      	add	sp, #52	; 0x34
 8027d76:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8027d78:	2207      	movs	r2, #7
 8027d7a:	2102      	movs	r1, #2
 8027d7c:	a803      	add	r0, sp, #12
 8027d7e:	f003 ffab 	bl	802bcd8 <TaskStatus::TaskStatus(TaskStatus::Result_e, unsigned int)>
 8027d82:	a903      	add	r1, sp, #12
 8027d84:	a801      	add	r0, sp, #4
 8027d86:	f003 ffb7 	bl	802bcf8 <TaskStatus::operator=(TaskStatus const&)>
 8027d8a:	f89d 301c 	ldrb.w	r3, [sp, #28]
 8027d8e:	e7e8      	b.n	8027d62 <ACTIONS_enableTelemetry(bool, ROBOT_axisIndex_t, bool, unsigned int)+0x66>
 8027d90:	4602      	mov	r2, r0
 8027d92:	2102      	movs	r1, #2
 8027d94:	4628      	mov	r0, r5
 8027d96:	f003 ff9f 	bl	802bcd8 <TaskStatus::TaskStatus(TaskStatus::Result_e, unsigned int)>
 8027d9a:	e7cd      	b.n	8027d38 <ACTIONS_enableTelemetry(bool, ROBOT_axisIndex_t, bool, unsigned int)+0x3c>
 8027d9c:	2000f630 	.word	0x2000f630

08027da0 <SM_RUNNER_setTimeout(SM_RUNNER_config_t*, SM_RUNNER_handler_t*) [clone .isra.0]>:
 8027da0:	7913      	ldrb	r3, [r2, #4]
 8027da2:	b570      	push	{r4, r5, r6, lr}
 8027da4:	4614      	mov	r4, r2
 8027da6:	b1eb      	cbz	r3, 8027de4 <SM_RUNNER_setTimeout(SM_RUNNER_config_t*, SM_RUNNER_handler_t*) [clone .isra.0]+0x44>
 8027da8:	680b      	ldr	r3, [r1, #0]
 8027daa:	b19b      	cbz	r3, 8027dd4 <SM_RUNNER_setTimeout(SM_RUNNER_config_t*, SM_RUNNER_handler_t*) [clone .isra.0]+0x34>
 8027dac:	7992      	ldrb	r2, [r2, #6]
 8027dae:	6920      	ldr	r0, [r4, #16]
 8027db0:	eb03 1302 	add.w	r3, r3, r2, lsl #4
 8027db4:	28ff      	cmp	r0, #255	; 0xff
 8027db6:	685d      	ldr	r5, [r3, #4]
 8027db8:	d01d      	beq.n	8027df6 <SM_RUNNER_setTimeout(SM_RUNNER_config_t*, SM_RUNNER_handler_t*) [clone .isra.0]+0x56>
 8027dba:	b175      	cbz	r5, 8027dda <SM_RUNNER_setTimeout(SM_RUNNER_config_t*, SM_RUNNER_handler_t*) [clone .isra.0]+0x3a>
 8027dbc:	f005 fab2 	bl	802d324 <TIME_disableTimer>
 8027dc0:	4921      	ldr	r1, [pc, #132]	; (8027e48 <SM_RUNNER_setTimeout(SM_RUNNER_config_t*, SM_RUNNER_handler_t*) [clone .isra.0]+0xa8>)
 8027dc2:	4628      	mov	r0, r5
 8027dc4:	2300      	movs	r3, #0
 8027dc6:	4622      	mov	r2, r4
 8027dc8:	f005 fa80 	bl	802d2cc <TIME_setTimeout>
 8027dcc:	28ff      	cmp	r0, #255	; 0xff
 8027dce:	d01c      	beq.n	8027e0a <SM_RUNNER_setTimeout(SM_RUNNER_config_t*, SM_RUNNER_handler_t*) [clone .isra.0]+0x6a>
 8027dd0:	6120      	str	r0, [r4, #16]
 8027dd2:	bd70      	pop	{r4, r5, r6, pc}
 8027dd4:	6920      	ldr	r0, [r4, #16]
 8027dd6:	28ff      	cmp	r0, #255	; 0xff
 8027dd8:	d0fb      	beq.n	8027dd2 <SM_RUNNER_setTimeout(SM_RUNNER_config_t*, SM_RUNNER_handler_t*) [clone .isra.0]+0x32>
 8027dda:	f005 faa3 	bl	802d324 <TIME_disableTimer>
 8027dde:	23ff      	movs	r3, #255	; 0xff
 8027de0:	6123      	str	r3, [r4, #16]
 8027de2:	bd70      	pop	{r4, r5, r6, pc}
 8027de4:	2800      	cmp	r0, #0
 8027de6:	d0f5      	beq.n	8027dd4 <SM_RUNNER_setTimeout(SM_RUNNER_config_t*, SM_RUNNER_handler_t*) [clone .isra.0]+0x34>
 8027de8:	7853      	ldrb	r3, [r2, #1]
 8027dea:	eb00 1003 	add.w	r0, r0, r3, lsl #4
 8027dee:	6845      	ldr	r5, [r0, #4]
 8027df0:	6920      	ldr	r0, [r4, #16]
 8027df2:	28ff      	cmp	r0, #255	; 0xff
 8027df4:	d1e1      	bne.n	8027dba <SM_RUNNER_setTimeout(SM_RUNNER_config_t*, SM_RUNNER_handler_t*) [clone .isra.0]+0x1a>
 8027df6:	2d00      	cmp	r5, #0
 8027df8:	d0eb      	beq.n	8027dd2 <SM_RUNNER_setTimeout(SM_RUNNER_config_t*, SM_RUNNER_handler_t*) [clone .isra.0]+0x32>
 8027dfa:	4913      	ldr	r1, [pc, #76]	; (8027e48 <SM_RUNNER_setTimeout(SM_RUNNER_config_t*, SM_RUNNER_handler_t*) [clone .isra.0]+0xa8>)
 8027dfc:	4628      	mov	r0, r5
 8027dfe:	2300      	movs	r3, #0
 8027e00:	4622      	mov	r2, r4
 8027e02:	f005 fa63 	bl	802d2cc <TIME_setTimeout>
 8027e06:	6120      	str	r0, [r4, #16]
 8027e08:	bd70      	pop	{r4, r5, r6, pc}
 8027e0a:	4810      	ldr	r0, [pc, #64]	; (8027e4c <SM_RUNNER_setTimeout(SM_RUNNER_config_t*, SM_RUNNER_handler_t*) [clone .isra.0]+0xac>)
 8027e0c:	212f      	movs	r1, #47	; 0x2f
 8027e0e:	f017 faa6 	bl	803f35e <strrchr>
 8027e12:	b160      	cbz	r0, 8027e2e <SM_RUNNER_setTimeout(SM_RUNNER_config_t*, SM_RUNNER_handler_t*) [clone .isra.0]+0x8e>
 8027e14:	212f      	movs	r1, #47	; 0x2f
 8027e16:	480d      	ldr	r0, [pc, #52]	; (8027e4c <SM_RUNNER_setTimeout(SM_RUNNER_config_t*, SM_RUNNER_handler_t*) [clone .isra.0]+0xac>)
 8027e18:	f017 faa1 	bl	803f35e <strrchr>
 8027e1c:	1c41      	adds	r1, r0, #1
 8027e1e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8027e22:	4b0b      	ldr	r3, [pc, #44]	; (8027e50 <SM_RUNNER_setTimeout(SM_RUNNER_config_t*, SM_RUNNER_handler_t*) [clone .isra.0]+0xb0>)
 8027e24:	f44f 72c6 	mov.w	r2, #396	; 0x18c
 8027e28:	2000      	movs	r0, #0
 8027e2a:	f7fa bcb5 	b.w	8022798 <DEBUG_logMsg>
 8027e2e:	4807      	ldr	r0, [pc, #28]	; (8027e4c <SM_RUNNER_setTimeout(SM_RUNNER_config_t*, SM_RUNNER_handler_t*) [clone .isra.0]+0xac>)
 8027e30:	215c      	movs	r1, #92	; 0x5c
 8027e32:	f017 fa94 	bl	803f35e <strrchr>
 8027e36:	b128      	cbz	r0, 8027e44 <SM_RUNNER_setTimeout(SM_RUNNER_config_t*, SM_RUNNER_handler_t*) [clone .isra.0]+0xa4>
 8027e38:	215c      	movs	r1, #92	; 0x5c
 8027e3a:	4804      	ldr	r0, [pc, #16]	; (8027e4c <SM_RUNNER_setTimeout(SM_RUNNER_config_t*, SM_RUNNER_handler_t*) [clone .isra.0]+0xac>)
 8027e3c:	f017 fa8f 	bl	803f35e <strrchr>
 8027e40:	1c41      	adds	r1, r0, #1
 8027e42:	e7ec      	b.n	8027e1e <SM_RUNNER_setTimeout(SM_RUNNER_config_t*, SM_RUNNER_handler_t*) [clone .isra.0]+0x7e>
 8027e44:	4901      	ldr	r1, [pc, #4]	; (8027e4c <SM_RUNNER_setTimeout(SM_RUNNER_config_t*, SM_RUNNER_handler_t*) [clone .isra.0]+0xac>)
 8027e46:	e7ea      	b.n	8027e1e <SM_RUNNER_setTimeout(SM_RUNNER_config_t*, SM_RUNNER_handler_t*) [clone .isra.0]+0x7e>
 8027e48:	08027eb1 	.word	0x08027eb1
 8027e4c:	08045218 	.word	0x08045218
 8027e50:	08045260 	.word	0x08045260

08027e54 <SM_RUNNER_cleanupTimer(SM_RUNNER_handler_t*) [clone .isra.0]>:
 8027e54:	b510      	push	{r4, lr}
 8027e56:	4604      	mov	r4, r0
 8027e58:	6800      	ldr	r0, [r0, #0]
 8027e5a:	28ff      	cmp	r0, #255	; 0xff
 8027e5c:	d100      	bne.n	8027e60 <SM_RUNNER_cleanupTimer(SM_RUNNER_handler_t*) [clone .isra.0]+0xc>
 8027e5e:	bd10      	pop	{r4, pc}
 8027e60:	f005 fa60 	bl	802d324 <TIME_disableTimer>
 8027e64:	b110      	cbz	r0, 8027e6c <SM_RUNNER_cleanupTimer(SM_RUNNER_handler_t*) [clone .isra.0]+0x18>
 8027e66:	23ff      	movs	r3, #255	; 0xff
 8027e68:	6023      	str	r3, [r4, #0]
 8027e6a:	bd10      	pop	{r4, pc}
 8027e6c:	480e      	ldr	r0, [pc, #56]	; (8027ea8 <SM_RUNNER_cleanupTimer(SM_RUNNER_handler_t*) [clone .isra.0]+0x54>)
 8027e6e:	212f      	movs	r1, #47	; 0x2f
 8027e70:	f017 fa75 	bl	803f35e <strrchr>
 8027e74:	b158      	cbz	r0, 8027e8e <SM_RUNNER_cleanupTimer(SM_RUNNER_handler_t*) [clone .isra.0]+0x3a>
 8027e76:	212f      	movs	r1, #47	; 0x2f
 8027e78:	480b      	ldr	r0, [pc, #44]	; (8027ea8 <SM_RUNNER_cleanupTimer(SM_RUNNER_handler_t*) [clone .isra.0]+0x54>)
 8027e7a:	f017 fa70 	bl	803f35e <strrchr>
 8027e7e:	1c41      	adds	r1, r0, #1
 8027e80:	4b0a      	ldr	r3, [pc, #40]	; (8027eac <SM_RUNNER_cleanupTimer(SM_RUNNER_handler_t*) [clone .isra.0]+0x58>)
 8027e82:	f44f 72d1 	mov.w	r2, #418	; 0x1a2
 8027e86:	2000      	movs	r0, #0
 8027e88:	f7fa fc86 	bl	8022798 <DEBUG_logMsg>
 8027e8c:	e7eb      	b.n	8027e66 <SM_RUNNER_cleanupTimer(SM_RUNNER_handler_t*) [clone .isra.0]+0x12>
 8027e8e:	4806      	ldr	r0, [pc, #24]	; (8027ea8 <SM_RUNNER_cleanupTimer(SM_RUNNER_handler_t*) [clone .isra.0]+0x54>)
 8027e90:	215c      	movs	r1, #92	; 0x5c
 8027e92:	f017 fa64 	bl	803f35e <strrchr>
 8027e96:	b128      	cbz	r0, 8027ea4 <SM_RUNNER_cleanupTimer(SM_RUNNER_handler_t*) [clone .isra.0]+0x50>
 8027e98:	215c      	movs	r1, #92	; 0x5c
 8027e9a:	4803      	ldr	r0, [pc, #12]	; (8027ea8 <SM_RUNNER_cleanupTimer(SM_RUNNER_handler_t*) [clone .isra.0]+0x54>)
 8027e9c:	f017 fa5f 	bl	803f35e <strrchr>
 8027ea0:	1c41      	adds	r1, r0, #1
 8027ea2:	e7ed      	b.n	8027e80 <SM_RUNNER_cleanupTimer(SM_RUNNER_handler_t*) [clone .isra.0]+0x2c>
 8027ea4:	4900      	ldr	r1, [pc, #0]	; (8027ea8 <SM_RUNNER_cleanupTimer(SM_RUNNER_handler_t*) [clone .isra.0]+0x54>)
 8027ea6:	e7eb      	b.n	8027e80 <SM_RUNNER_cleanupTimer(SM_RUNNER_handler_t*) [clone .isra.0]+0x2c>
 8027ea8:	08045218 	.word	0x08045218
 8027eac:	0804527c 	.word	0x0804527c

08027eb0 <SM_RUNNER_timeoutCallback>:
 8027eb0:	b510      	push	{r4, lr}
 8027eb2:	7b4b      	ldrb	r3, [r1, #13]
 8027eb4:	f44f 7280 	mov.w	r2, #256	; 0x100
 8027eb8:	80ca      	strh	r2, [r1, #6]
 8027eba:	3301      	adds	r3, #1
 8027ebc:	2201      	movs	r2, #1
 8027ebe:	f101 0010 	add.w	r0, r1, #16
 8027ec2:	b082      	sub	sp, #8
 8027ec4:	734b      	strb	r3, [r1, #13]
 8027ec6:	710a      	strb	r2, [r1, #4]
 8027ec8:	460c      	mov	r4, r1
 8027eca:	f7ff ffc3 	bl	8027e54 <SM_RUNNER_cleanupTimer(SM_RUNNER_handler_t*) [clone .isra.0]>
 8027ece:	4811      	ldr	r0, [pc, #68]	; (8027f14 <SM_RUNNER_timeoutCallback+0x64>)
 8027ed0:	212f      	movs	r1, #47	; 0x2f
 8027ed2:	f017 fa44 	bl	803f35e <strrchr>
 8027ed6:	b180      	cbz	r0, 8027efa <SM_RUNNER_timeoutCallback+0x4a>
 8027ed8:	212f      	movs	r1, #47	; 0x2f
 8027eda:	480e      	ldr	r0, [pc, #56]	; (8027f14 <SM_RUNNER_timeoutCallback+0x64>)
 8027edc:	f017 fa3f 	bl	803f35e <strrchr>
 8027ee0:	1c41      	adds	r1, r0, #1
 8027ee2:	7962      	ldrb	r2, [r4, #5]
 8027ee4:	7823      	ldrb	r3, [r4, #0]
 8027ee6:	2000      	movs	r0, #0
 8027ee8:	e9cd 3200 	strd	r3, r2, [sp]
 8027eec:	4b0a      	ldr	r3, [pc, #40]	; (8027f18 <SM_RUNNER_timeoutCallback+0x68>)
 8027eee:	f44f 72a9 	mov.w	r2, #338	; 0x152
 8027ef2:	f7fa fc51 	bl	8022798 <DEBUG_logMsg>
 8027ef6:	b002      	add	sp, #8
 8027ef8:	bd10      	pop	{r4, pc}
 8027efa:	4806      	ldr	r0, [pc, #24]	; (8027f14 <SM_RUNNER_timeoutCallback+0x64>)
 8027efc:	215c      	movs	r1, #92	; 0x5c
 8027efe:	f017 fa2e 	bl	803f35e <strrchr>
 8027f02:	b128      	cbz	r0, 8027f10 <SM_RUNNER_timeoutCallback+0x60>
 8027f04:	215c      	movs	r1, #92	; 0x5c
 8027f06:	4803      	ldr	r0, [pc, #12]	; (8027f14 <SM_RUNNER_timeoutCallback+0x64>)
 8027f08:	f017 fa29 	bl	803f35e <strrchr>
 8027f0c:	1c41      	adds	r1, r0, #1
 8027f0e:	e7e8      	b.n	8027ee2 <SM_RUNNER_timeoutCallback+0x32>
 8027f10:	4900      	ldr	r1, [pc, #0]	; (8027f14 <SM_RUNNER_timeoutCallback+0x64>)
 8027f12:	e7e6      	b.n	8027ee2 <SM_RUNNER_timeoutCallback+0x32>
 8027f14:	08045218 	.word	0x08045218
 8027f18:	080452a0 	.word	0x080452a0

08027f1c <SM_RUNNER_runStateMachine>:
 8027f1c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8027f20:	460e      	mov	r6, r1
 8027f22:	b088      	sub	sp, #32
 8027f24:	4607      	mov	r7, r0
 8027f26:	2100      	movs	r1, #0
 8027f28:	a802      	add	r0, sp, #8
 8027f2a:	4614      	mov	r4, r2
 8027f2c:	f89d 8038 	ldrb.w	r8, [sp, #56]	; 0x38
 8027f30:	461d      	mov	r5, r3
 8027f32:	f003 fecb 	bl	802bccc <TaskStatus::TaskStatus(TaskStatus::Result_e)>
 8027f36:	68f2      	ldr	r2, [r6, #12]
 8027f38:	2a00      	cmp	r2, #0
 8027f3a:	d051      	beq.n	8027fe0 <SM_RUNNER_runStateMachine+0xc4>
 8027f3c:	68b3      	ldr	r3, [r6, #8]
 8027f3e:	2b00      	cmp	r3, #0
 8027f40:	d04e      	beq.n	8027fe0 <SM_RUNNER_runStateMachine+0xc4>
 8027f42:	f1b8 0f00 	cmp.w	r8, #0
 8027f46:	d154      	bne.n	8027ff2 <SM_RUNNER_runStateMachine+0xd6>
 8027f48:	78e3      	ldrb	r3, [r4, #3]
 8027f4a:	2b00      	cmp	r3, #0
 8027f4c:	f040 80c1 	bne.w	80280d2 <SM_RUNNER_runStateMachine+0x1b6>
 8027f50:	6973      	ldr	r3, [r6, #20]
 8027f52:	b11b      	cbz	r3, 8027f5c <SM_RUNNER_runStateMachine+0x40>
 8027f54:	79a2      	ldrb	r2, [r4, #6]
 8027f56:	0112      	lsls	r2, r2, #4
 8027f58:	5c9a      	ldrb	r2, [r3, r2]
 8027f5a:	7162      	strb	r2, [r4, #5]
 8027f5c:	68f0      	ldr	r0, [r6, #12]
 8027f5e:	b118      	cbz	r0, 8027f68 <SM_RUNNER_runStateMachine+0x4c>
 8027f60:	7862      	ldrb	r2, [r4, #1]
 8027f62:	0112      	lsls	r2, r2, #4
 8027f64:	5c82      	ldrb	r2, [r0, r2]
 8027f66:	7022      	strb	r2, [r4, #0]
 8027f68:	f894 8004 	ldrb.w	r8, [r4, #4]
 8027f6c:	f1b8 0f00 	cmp.w	r8, #0
 8027f70:	d15e      	bne.n	8028030 <SM_RUNNER_runStateMachine+0x114>
 8027f72:	7863      	ldrb	r3, [r4, #1]
 8027f74:	eb00 1303 	add.w	r3, r0, r3, lsl #4
 8027f78:	689b      	ldr	r3, [r3, #8]
 8027f7a:	421d      	tst	r5, r3
 8027f7c:	f040 80b2 	bne.w	80280e4 <SM_RUNNER_runStateMachine+0x1c8>
 8027f80:	78a3      	ldrb	r3, [r4, #2]
 8027f82:	2b00      	cmp	r3, #0
 8027f84:	f040 8110 	bne.w	80281a8 <SM_RUNNER_runStateMachine+0x28c>
 8027f88:	68b3      	ldr	r3, [r6, #8]
 8027f8a:	4629      	mov	r1, r5
 8027f8c:	a806      	add	r0, sp, #24
 8027f8e:	4798      	blx	r3
 8027f90:	f89d 3018 	ldrb.w	r3, [sp, #24]
 8027f94:	2b01      	cmp	r3, #1
 8027f96:	f000 813b 	beq.w	8028210 <SM_RUNNER_runStateMachine+0x2f4>
 8027f9a:	2b02      	cmp	r3, #2
 8027f9c:	f000 8142 	beq.w	8028224 <SM_RUNNER_runStateMachine+0x308>
 8027fa0:	2b00      	cmp	r3, #0
 8027fa2:	f000 813d 	beq.w	8028220 <SM_RUNNER_runStateMachine+0x304>
 8027fa6:	48b6      	ldr	r0, [pc, #728]	; (8028280 <SM_RUNNER_runStateMachine+0x364>)
 8027fa8:	212f      	movs	r1, #47	; 0x2f
 8027faa:	f017 f9d8 	bl	803f35e <strrchr>
 8027fae:	2800      	cmp	r0, #0
 8027fb0:	f000 80db 	beq.w	802816a <SM_RUNNER_runStateMachine+0x24e>
 8027fb4:	212f      	movs	r1, #47	; 0x2f
 8027fb6:	48b2      	ldr	r0, [pc, #712]	; (8028280 <SM_RUNNER_runStateMachine+0x364>)
 8027fb8:	f017 f9d1 	bl	803f35e <strrchr>
 8027fbc:	1c41      	adds	r1, r0, #1
 8027fbe:	f89d 3018 	ldrb.w	r3, [sp, #24]
 8027fc2:	9300      	str	r3, [sp, #0]
 8027fc4:	22cb      	movs	r2, #203	; 0xcb
 8027fc6:	4baf      	ldr	r3, [pc, #700]	; (8028284 <SM_RUNNER_runStateMachine+0x368>)
 8027fc8:	2000      	movs	r0, #0
 8027fca:	f7fa fbe5 	bl	8022798 <DEBUG_logMsg>
 8027fce:	e05b      	b.n	8028088 <SM_RUNNER_runStateMachine+0x16c>
 8027fd0:	f104 0010 	add.w	r0, r4, #16
 8027fd4:	f7ff ff3e 	bl	8027e54 <SM_RUNNER_cleanupTimer(SM_RUNNER_handler_t*) [clone .isra.0]>
 8027fd8:	6873      	ldr	r3, [r6, #4]
 8027fda:	b10b      	cbz	r3, 8027fe0 <SM_RUNNER_runStateMachine+0xc4>
 8027fdc:	a806      	add	r0, sp, #24
 8027fde:	4798      	blx	r3
 8027fe0:	2203      	movs	r2, #3
 8027fe2:	2102      	movs	r1, #2
 8027fe4:	4638      	mov	r0, r7
 8027fe6:	f003 fe77 	bl	802bcd8 <TaskStatus::TaskStatus(TaskStatus::Result_e, unsigned int)>
 8027fea:	4638      	mov	r0, r7
 8027fec:	b008      	add	sp, #32
 8027fee:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8027ff2:	2214      	movs	r2, #20
 8027ff4:	2100      	movs	r1, #0
 8027ff6:	4620      	mov	r0, r4
 8027ff8:	f017 fb2c 	bl	803f654 <memset>
 8027ffc:	6833      	ldr	r3, [r6, #0]
 8027ffe:	2101      	movs	r1, #1
 8028000:	22ff      	movs	r2, #255	; 0xff
 8028002:	70a1      	strb	r1, [r4, #2]
 8028004:	6122      	str	r2, [r4, #16]
 8028006:	2b00      	cmp	r3, #0
 8028008:	d09e      	beq.n	8027f48 <SM_RUNNER_runStateMachine+0x2c>
 802800a:	a804      	add	r0, sp, #16
 802800c:	4798      	blx	r3
 802800e:	f89d 3010 	ldrb.w	r3, [sp, #16]
 8028012:	2b02      	cmp	r3, #2
 8028014:	d198      	bne.n	8027f48 <SM_RUNNER_runStateMachine+0x2c>
 8028016:	f104 0010 	add.w	r0, r4, #16
 802801a:	f7ff ff1b 	bl	8027e54 <SM_RUNNER_cleanupTimer(SM_RUNNER_handler_t*) [clone .isra.0]>
 802801e:	6873      	ldr	r3, [r6, #4]
 8028020:	b10b      	cbz	r3, 8028026 <SM_RUNNER_runStateMachine+0x10a>
 8028022:	a806      	add	r0, sp, #24
 8028024:	4798      	blx	r3
 8028026:	a904      	add	r1, sp, #16
 8028028:	4638      	mov	r0, r7
 802802a:	f003 fe5d 	bl	802bce8 <TaskStatus::TaskStatus(TaskStatus const&)>
 802802e:	e7dc      	b.n	8027fea <SM_RUNNER_runStateMachine+0xce>
 8028030:	6932      	ldr	r2, [r6, #16]
 8028032:	2a00      	cmp	r2, #0
 8028034:	d0cc      	beq.n	8027fd0 <SM_RUNNER_runStateMachine+0xb4>
 8028036:	2b00      	cmp	r3, #0
 8028038:	d0ca      	beq.n	8027fd0 <SM_RUNNER_runStateMachine+0xb4>
 802803a:	7b61      	ldrb	r1, [r4, #13]
 802803c:	7e33      	ldrb	r3, [r6, #24]
 802803e:	4299      	cmp	r1, r3
 8028040:	f200 80d8 	bhi.w	80281f4 <SM_RUNNER_runStateMachine+0x2d8>
 8028044:	79e3      	ldrb	r3, [r4, #7]
 8028046:	2b00      	cmp	r3, #0
 8028048:	d16e      	bne.n	8028128 <SM_RUNNER_runStateMachine+0x20c>
 802804a:	4629      	mov	r1, r5
 802804c:	a804      	add	r0, sp, #16
 802804e:	4790      	blx	r2
 8028050:	f89d 3010 	ldrb.w	r3, [sp, #16]
 8028054:	2b01      	cmp	r3, #1
 8028056:	f000 8100 	beq.w	802825a <SM_RUNNER_runStateMachine+0x33e>
 802805a:	2b02      	cmp	r3, #2
 802805c:	d054      	beq.n	8028108 <SM_RUNNER_runStateMachine+0x1ec>
 802805e:	2b00      	cmp	r3, #0
 8028060:	d060      	beq.n	8028124 <SM_RUNNER_runStateMachine+0x208>
 8028062:	4887      	ldr	r0, [pc, #540]	; (8028280 <SM_RUNNER_runStateMachine+0x364>)
 8028064:	212f      	movs	r1, #47	; 0x2f
 8028066:	f017 f97a 	bl	803f35e <strrchr>
 802806a:	2800      	cmp	r0, #0
 802806c:	f000 8123 	beq.w	80282b6 <SM_RUNNER_runStateMachine+0x39a>
 8028070:	212f      	movs	r1, #47	; 0x2f
 8028072:	4883      	ldr	r0, [pc, #524]	; (8028280 <SM_RUNNER_runStateMachine+0x364>)
 8028074:	f017 f973 	bl	803f35e <strrchr>
 8028078:	1c41      	adds	r1, r0, #1
 802807a:	4b83      	ldr	r3, [pc, #524]	; (8028288 <SM_RUNNER_runStateMachine+0x36c>)
 802807c:	2297      	movs	r2, #151	; 0x97
 802807e:	2000      	movs	r0, #0
 8028080:	f7fa fb8a 	bl	8022798 <DEBUG_logMsg>
 8028084:	2300      	movs	r3, #0
 8028086:	60a3      	str	r3, [r4, #8]
 8028088:	78e3      	ldrb	r3, [r4, #3]
 802808a:	2b00      	cmp	r3, #0
 802808c:	d17f      	bne.n	802818e <SM_RUNNER_runStateMachine+0x272>
 802808e:	7b23      	ldrb	r3, [r4, #12]
 8028090:	2b00      	cmp	r3, #0
 8028092:	d077      	beq.n	8028184 <SM_RUNNER_runStateMachine+0x268>
 8028094:	f104 0010 	add.w	r0, r4, #16
 8028098:	f7ff fedc 	bl	8027e54 <SM_RUNNER_cleanupTimer(SM_RUNNER_handler_t*) [clone .isra.0]>
 802809c:	6873      	ldr	r3, [r6, #4]
 802809e:	b10b      	cbz	r3, 80280a4 <SM_RUNNER_runStateMachine+0x188>
 80280a0:	a806      	add	r0, sp, #24
 80280a2:	4798      	blx	r3
 80280a4:	4876      	ldr	r0, [pc, #472]	; (8028280 <SM_RUNNER_runStateMachine+0x364>)
 80280a6:	212f      	movs	r1, #47	; 0x2f
 80280a8:	f017 f959 	bl	803f35e <strrchr>
 80280ac:	2800      	cmp	r0, #0
 80280ae:	f000 80c9 	beq.w	8028244 <SM_RUNNER_runStateMachine+0x328>
 80280b2:	212f      	movs	r1, #47	; 0x2f
 80280b4:	4872      	ldr	r0, [pc, #456]	; (8028280 <SM_RUNNER_runStateMachine+0x364>)
 80280b6:	f017 f952 	bl	803f35e <strrchr>
 80280ba:	1c41      	adds	r1, r0, #1
 80280bc:	4b73      	ldr	r3, [pc, #460]	; (802828c <SM_RUNNER_runStateMachine+0x370>)
 80280be:	22de      	movs	r2, #222	; 0xde
 80280c0:	2000      	movs	r0, #0
 80280c2:	f7fa fb69 	bl	8022798 <DEBUG_logMsg>
 80280c6:	2205      	movs	r2, #5
 80280c8:	2102      	movs	r1, #2
 80280ca:	4638      	mov	r0, r7
 80280cc:	f003 fe04 	bl	802bcd8 <TaskStatus::TaskStatus(TaskStatus::Result_e, unsigned int)>
 80280d0:	e78b      	b.n	8027fea <SM_RUNNER_runStateMachine+0xce>
 80280d2:	2200      	movs	r2, #0
 80280d4:	2101      	movs	r1, #1
 80280d6:	4638      	mov	r0, r7
 80280d8:	f003 fdfe 	bl	802bcd8 <TaskStatus::TaskStatus(TaskStatus::Result_e, unsigned int)>
 80280dc:	4638      	mov	r0, r7
 80280de:	b008      	add	sp, #32
 80280e0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80280e4:	7b63      	ldrb	r3, [r4, #13]
 80280e6:	3301      	adds	r3, #1
 80280e8:	f44f 7280 	mov.w	r2, #256	; 0x100
 80280ec:	7363      	strb	r3, [r4, #13]
 80280ee:	2301      	movs	r3, #1
 80280f0:	f104 0010 	add.w	r0, r4, #16
 80280f4:	80e2      	strh	r2, [r4, #6]
 80280f6:	7123      	strb	r3, [r4, #4]
 80280f8:	f7ff feac 	bl	8027e54 <SM_RUNNER_cleanupTimer(SM_RUNNER_handler_t*) [clone .isra.0]>
 80280fc:	60a5      	str	r5, [r4, #8]
 80280fe:	4641      	mov	r1, r8
 8028100:	4638      	mov	r0, r7
 8028102:	f003 fde3 	bl	802bccc <TaskStatus::TaskStatus(TaskStatus::Result_e)>
 8028106:	e770      	b.n	8027fea <SM_RUNNER_runStateMachine+0xce>
 8028108:	f104 0010 	add.w	r0, r4, #16
 802810c:	f7ff fea2 	bl	8027e54 <SM_RUNNER_cleanupTimer(SM_RUNNER_handler_t*) [clone .isra.0]>
 8028110:	6873      	ldr	r3, [r6, #4]
 8028112:	b10b      	cbz	r3, 8028118 <SM_RUNNER_runStateMachine+0x1fc>
 8028114:	a806      	add	r0, sp, #24
 8028116:	4798      	blx	r3
 8028118:	9b05      	ldr	r3, [sp, #20]
 802811a:	9303      	str	r3, [sp, #12]
 802811c:	2202      	movs	r2, #2
 802811e:	f88d 2008 	strb.w	r2, [sp, #8]
 8028122:	e7af      	b.n	8028084 <SM_RUNNER_runStateMachine+0x168>
 8028124:	71e3      	strb	r3, [r4, #7]
 8028126:	e7ad      	b.n	8028084 <SM_RUNNER_runStateMachine+0x168>
 8028128:	f106 0114 	add.w	r1, r6, #20
 802812c:	4622      	mov	r2, r4
 802812e:	f7ff fe37 	bl	8027da0 <SM_RUNNER_setTimeout(SM_RUNNER_config_t*, SM_RUNNER_handler_t*) [clone .isra.0]>
 8028132:	4853      	ldr	r0, [pc, #332]	; (8028280 <SM_RUNNER_runStateMachine+0x364>)
 8028134:	212f      	movs	r1, #47	; 0x2f
 8028136:	f017 f912 	bl	803f35e <strrchr>
 802813a:	2800      	cmp	r0, #0
 802813c:	f000 80ae 	beq.w	802829c <SM_RUNNER_runStateMachine+0x380>
 8028140:	212f      	movs	r1, #47	; 0x2f
 8028142:	484f      	ldr	r0, [pc, #316]	; (8028280 <SM_RUNNER_runStateMachine+0x364>)
 8028144:	f017 f90b 	bl	803f35e <strrchr>
 8028148:	1c41      	adds	r1, r0, #1
 802814a:	f894 c006 	ldrb.w	ip, [r4, #6]
 802814e:	6972      	ldr	r2, [r6, #20]
 8028150:	69f0      	ldr	r0, [r6, #28]
 8028152:	4b4f      	ldr	r3, [pc, #316]	; (8028290 <SM_RUNNER_runStateMachine+0x374>)
 8028154:	eb02 120c 	add.w	r2, r2, ip, lsl #4
 8028158:	68d2      	ldr	r2, [r2, #12]
 802815a:	e9cd 0200 	strd	r0, r2, [sp]
 802815e:	227e      	movs	r2, #126	; 0x7e
 8028160:	2002      	movs	r0, #2
 8028162:	f7fa fb19 	bl	8022798 <DEBUG_logMsg>
 8028166:	6932      	ldr	r2, [r6, #16]
 8028168:	e76f      	b.n	802804a <SM_RUNNER_runStateMachine+0x12e>
 802816a:	4845      	ldr	r0, [pc, #276]	; (8028280 <SM_RUNNER_runStateMachine+0x364>)
 802816c:	215c      	movs	r1, #92	; 0x5c
 802816e:	f017 f8f6 	bl	803f35e <strrchr>
 8028172:	2800      	cmp	r0, #0
 8028174:	f000 80aa 	beq.w	80282cc <SM_RUNNER_runStateMachine+0x3b0>
 8028178:	215c      	movs	r1, #92	; 0x5c
 802817a:	4841      	ldr	r0, [pc, #260]	; (8028280 <SM_RUNNER_runStateMachine+0x364>)
 802817c:	f017 f8ef 	bl	803f35e <strrchr>
 8028180:	1c41      	adds	r1, r0, #1
 8028182:	e71c      	b.n	8027fbe <SM_RUNNER_runStateMachine+0xa2>
 8028184:	a902      	add	r1, sp, #8
 8028186:	4638      	mov	r0, r7
 8028188:	f003 fdae 	bl	802bce8 <TaskStatus::TaskStatus(TaskStatus const&)>
 802818c:	e72d      	b.n	8027fea <SM_RUNNER_runStateMachine+0xce>
 802818e:	f104 0010 	add.w	r0, r4, #16
 8028192:	f7ff fe5f 	bl	8027e54 <SM_RUNNER_cleanupTimer(SM_RUNNER_handler_t*) [clone .isra.0]>
 8028196:	6873      	ldr	r3, [r6, #4]
 8028198:	b10b      	cbz	r3, 802819e <SM_RUNNER_runStateMachine+0x282>
 802819a:	a806      	add	r0, sp, #24
 802819c:	4798      	blx	r3
 802819e:	2101      	movs	r1, #1
 80281a0:	4638      	mov	r0, r7
 80281a2:	f003 fd93 	bl	802bccc <TaskStatus::TaskStatus(TaskStatus::Result_e)>
 80281a6:	e720      	b.n	8027fea <SM_RUNNER_runStateMachine+0xce>
 80281a8:	f106 0114 	add.w	r1, r6, #20
 80281ac:	4622      	mov	r2, r4
 80281ae:	f7ff fdf7 	bl	8027da0 <SM_RUNNER_setTimeout(SM_RUNNER_config_t*, SM_RUNNER_handler_t*) [clone .isra.0]>
 80281b2:	4833      	ldr	r0, [pc, #204]	; (8028280 <SM_RUNNER_runStateMachine+0x364>)
 80281b4:	212f      	movs	r1, #47	; 0x2f
 80281b6:	f017 f8d2 	bl	803f35e <strrchr>
 80281ba:	2800      	cmp	r0, #0
 80281bc:	d055      	beq.n	802826a <SM_RUNNER_runStateMachine+0x34e>
 80281be:	212f      	movs	r1, #47	; 0x2f
 80281c0:	482f      	ldr	r0, [pc, #188]	; (8028280 <SM_RUNNER_runStateMachine+0x364>)
 80281c2:	f017 f8cc 	bl	803f35e <strrchr>
 80281c6:	1c41      	adds	r1, r0, #1
 80281c8:	f894 c001 	ldrb.w	ip, [r4, #1]
 80281cc:	68f2      	ldr	r2, [r6, #12]
 80281ce:	69f0      	ldr	r0, [r6, #28]
 80281d0:	4b30      	ldr	r3, [pc, #192]	; (8028294 <SM_RUNNER_runStateMachine+0x378>)
 80281d2:	eb02 120c 	add.w	r2, r2, ip, lsl #4
 80281d6:	68d2      	ldr	r2, [r2, #12]
 80281d8:	e9cd 0200 	strd	r0, r2, [sp]
 80281dc:	22af      	movs	r2, #175	; 0xaf
 80281de:	2002      	movs	r0, #2
 80281e0:	f7fa fada 	bl	8022798 <DEBUG_logMsg>
 80281e4:	7862      	ldrb	r2, [r4, #1]
 80281e6:	68f3      	ldr	r3, [r6, #12]
 80281e8:	eb03 1302 	add.w	r3, r3, r2, lsl #4
 80281ec:	68d8      	ldr	r0, [r3, #12]
 80281ee:	f7fa facb 	bl	8022788 <DEBUG_subtaskSend>
 80281f2:	e6c9      	b.n	8027f88 <SM_RUNNER_runStateMachine+0x6c>
 80281f4:	f104 0010 	add.w	r0, r4, #16
 80281f8:	f7ff fe2c 	bl	8027e54 <SM_RUNNER_cleanupTimer(SM_RUNNER_handler_t*) [clone .isra.0]>
 80281fc:	6873      	ldr	r3, [r6, #4]
 80281fe:	b10b      	cbz	r3, 8028204 <SM_RUNNER_runStateMachine+0x2e8>
 8028200:	a806      	add	r0, sp, #24
 8028202:	4798      	blx	r3
 8028204:	2204      	movs	r2, #4
 8028206:	2102      	movs	r1, #2
 8028208:	4638      	mov	r0, r7
 802820a:	f003 fd65 	bl	802bcd8 <TaskStatus::TaskStatus(TaskStatus::Result_e, unsigned int)>
 802820e:	e6ec      	b.n	8027fea <SM_RUNNER_runStateMachine+0xce>
 8028210:	7862      	ldrb	r2, [r4, #1]
 8028212:	70a3      	strb	r3, [r4, #2]
 8028214:	1c53      	adds	r3, r2, #1
 8028216:	2200      	movs	r2, #0
 8028218:	7063      	strb	r3, [r4, #1]
 802821a:	f88d 2008 	strb.w	r2, [sp, #8]
 802821e:	e733      	b.n	8028088 <SM_RUNNER_runStateMachine+0x16c>
 8028220:	70a3      	strb	r3, [r4, #2]
 8028222:	e731      	b.n	8028088 <SM_RUNNER_runStateMachine+0x16c>
 8028224:	7b63      	ldrb	r3, [r4, #13]
 8028226:	3301      	adds	r3, #1
 8028228:	f44f 7280 	mov.w	r2, #256	; 0x100
 802822c:	7363      	strb	r3, [r4, #13]
 802822e:	2301      	movs	r3, #1
 8028230:	7123      	strb	r3, [r4, #4]
 8028232:	80e2      	strh	r2, [r4, #6]
 8028234:	f104 0010 	add.w	r0, r4, #16
 8028238:	f7ff fe0c 	bl	8027e54 <SM_RUNNER_cleanupTimer(SM_RUNNER_handler_t*) [clone .isra.0]>
 802823c:	2300      	movs	r3, #0
 802823e:	f88d 3008 	strb.w	r3, [sp, #8]
 8028242:	e721      	b.n	8028088 <SM_RUNNER_runStateMachine+0x16c>
 8028244:	480e      	ldr	r0, [pc, #56]	; (8028280 <SM_RUNNER_runStateMachine+0x364>)
 8028246:	215c      	movs	r1, #92	; 0x5c
 8028248:	f017 f889 	bl	803f35e <strrchr>
 802824c:	b320      	cbz	r0, 8028298 <SM_RUNNER_runStateMachine+0x37c>
 802824e:	215c      	movs	r1, #92	; 0x5c
 8028250:	480b      	ldr	r0, [pc, #44]	; (8028280 <SM_RUNNER_runStateMachine+0x364>)
 8028252:	f017 f884 	bl	803f35e <strrchr>
 8028256:	1c41      	adds	r1, r0, #1
 8028258:	e730      	b.n	80280bc <SM_RUNNER_runStateMachine+0x1a0>
 802825a:	79a2      	ldrb	r2, [r4, #6]
 802825c:	71e3      	strb	r3, [r4, #7]
 802825e:	1c53      	adds	r3, r2, #1
 8028260:	2200      	movs	r2, #0
 8028262:	71a3      	strb	r3, [r4, #6]
 8028264:	f88d 2008 	strb.w	r2, [sp, #8]
 8028268:	e70c      	b.n	8028084 <SM_RUNNER_runStateMachine+0x168>
 802826a:	4805      	ldr	r0, [pc, #20]	; (8028280 <SM_RUNNER_runStateMachine+0x364>)
 802826c:	215c      	movs	r1, #92	; 0x5c
 802826e:	f017 f876 	bl	803f35e <strrchr>
 8028272:	b1f0      	cbz	r0, 80282b2 <SM_RUNNER_runStateMachine+0x396>
 8028274:	215c      	movs	r1, #92	; 0x5c
 8028276:	4802      	ldr	r0, [pc, #8]	; (8028280 <SM_RUNNER_runStateMachine+0x364>)
 8028278:	f017 f871 	bl	803f35e <strrchr>
 802827c:	1c41      	adds	r1, r0, #1
 802827e:	e7a3      	b.n	80281c8 <SM_RUNNER_runStateMachine+0x2ac>
 8028280:	08045218 	.word	0x08045218
 8028284:	0804531c 	.word	0x0804531c
 8028288:	080452f0 	.word	0x080452f0
 802828c:	08045338 	.word	0x08045338
 8028290:	080452dc 	.word	0x080452dc
 8028294:	08045310 	.word	0x08045310
 8028298:	490f      	ldr	r1, [pc, #60]	; (80282d8 <SM_RUNNER_runStateMachine+0x3bc>)
 802829a:	e70f      	b.n	80280bc <SM_RUNNER_runStateMachine+0x1a0>
 802829c:	480e      	ldr	r0, [pc, #56]	; (80282d8 <SM_RUNNER_runStateMachine+0x3bc>)
 802829e:	215c      	movs	r1, #92	; 0x5c
 80282a0:	f017 f85d 	bl	803f35e <strrchr>
 80282a4:	b1a0      	cbz	r0, 80282d0 <SM_RUNNER_runStateMachine+0x3b4>
 80282a6:	215c      	movs	r1, #92	; 0x5c
 80282a8:	480b      	ldr	r0, [pc, #44]	; (80282d8 <SM_RUNNER_runStateMachine+0x3bc>)
 80282aa:	f017 f858 	bl	803f35e <strrchr>
 80282ae:	1c41      	adds	r1, r0, #1
 80282b0:	e74b      	b.n	802814a <SM_RUNNER_runStateMachine+0x22e>
 80282b2:	4909      	ldr	r1, [pc, #36]	; (80282d8 <SM_RUNNER_runStateMachine+0x3bc>)
 80282b4:	e788      	b.n	80281c8 <SM_RUNNER_runStateMachine+0x2ac>
 80282b6:	4808      	ldr	r0, [pc, #32]	; (80282d8 <SM_RUNNER_runStateMachine+0x3bc>)
 80282b8:	215c      	movs	r1, #92	; 0x5c
 80282ba:	f017 f850 	bl	803f35e <strrchr>
 80282be:	b148      	cbz	r0, 80282d4 <SM_RUNNER_runStateMachine+0x3b8>
 80282c0:	215c      	movs	r1, #92	; 0x5c
 80282c2:	4805      	ldr	r0, [pc, #20]	; (80282d8 <SM_RUNNER_runStateMachine+0x3bc>)
 80282c4:	f017 f84b 	bl	803f35e <strrchr>
 80282c8:	1c41      	adds	r1, r0, #1
 80282ca:	e6d6      	b.n	802807a <SM_RUNNER_runStateMachine+0x15e>
 80282cc:	4902      	ldr	r1, [pc, #8]	; (80282d8 <SM_RUNNER_runStateMachine+0x3bc>)
 80282ce:	e676      	b.n	8027fbe <SM_RUNNER_runStateMachine+0xa2>
 80282d0:	4901      	ldr	r1, [pc, #4]	; (80282d8 <SM_RUNNER_runStateMachine+0x3bc>)
 80282d2:	e73a      	b.n	802814a <SM_RUNNER_runStateMachine+0x22e>
 80282d4:	4900      	ldr	r1, [pc, #0]	; (80282d8 <SM_RUNNER_runStateMachine+0x3bc>)
 80282d6:	e6d0      	b.n	802807a <SM_RUNNER_runStateMachine+0x15e>
 80282d8:	08045218 	.word	0x08045218

080282dc <SM_RUNNER_setError>:
 80282dc:	b149      	cbz	r1, 80282f2 <SM_RUNNER_setError+0x16>
 80282de:	7b43      	ldrb	r3, [r0, #13]
 80282e0:	7101      	strb	r1, [r0, #4]
 80282e2:	f44f 7280 	mov.w	r2, #256	; 0x100
 80282e6:	3301      	adds	r3, #1
 80282e8:	7343      	strb	r3, [r0, #13]
 80282ea:	80c2      	strh	r2, [r0, #6]
 80282ec:	3010      	adds	r0, #16
 80282ee:	f7ff bdb1 	b.w	8027e54 <SM_RUNNER_cleanupTimer(SM_RUNNER_handler_t*) [clone .isra.0]>
 80282f2:	2301      	movs	r3, #1
 80282f4:	7083      	strb	r3, [r0, #2]
 80282f6:	7101      	strb	r1, [r0, #4]
 80282f8:	3010      	adds	r0, #16
 80282fa:	f7ff bdab 	b.w	8027e54 <SM_RUNNER_cleanupTimer(SM_RUNNER_handler_t*) [clone .isra.0]>
 80282fe:	bf00      	nop

08028300 <SM_RUNNER_setComplete>:
 8028300:	70c1      	strb	r1, [r0, #3]
 8028302:	4770      	bx	lr

08028304 <SM_RUNNER_restart>:
 8028304:	2300      	movs	r3, #0
 8028306:	2201      	movs	r2, #1
 8028308:	7082      	strb	r2, [r0, #2]
 802830a:	8003      	strh	r3, [r0, #0]
 802830c:	8083      	strh	r3, [r0, #4]
 802830e:	7183      	strb	r3, [r0, #6]
 8028310:	4770      	bx	lr
 8028312:	bf00      	nop

08028314 <SM_RUNNER_abort>:
 8028314:	2301      	movs	r3, #1
 8028316:	7303      	strb	r3, [r0, #12]
 8028318:	4770      	bx	lr
 802831a:	bf00      	nop

0802831c <ATTIC_EXIT_mainStateMachine(unsigned long)>:
 802831c:	b510      	push	{r4, lr}
 802831e:	2100      	movs	r1, #0
 8028320:	b084      	sub	sp, #16
 8028322:	4604      	mov	r4, r0
 8028324:	f003 fcd2 	bl	802bccc <TaskStatus::TaskStatus(TaskStatus::Result_e)>
 8028328:	4a4f      	ldr	r2, [pc, #316]	; (8028468 <ATTIC_EXIT_mainStateMachine(unsigned long)+0x14c>)
 802832a:	7813      	ldrb	r3, [r2, #0]
 802832c:	2b08      	cmp	r3, #8
 802832e:	d87d      	bhi.n	802842c <ATTIC_EXIT_mainStateMachine(unsigned long)+0x110>
 8028330:	e8df f003 	tbb	[pc, r3]
 8028334:	42352413 	.word	0x42352413
 8028338:	7871604f 	.word	0x7871604f
 802833c:	05          	.byte	0x05
 802833d:	00          	.byte	0x00
 802833e:	484a      	ldr	r0, [pc, #296]	; (8028468 <ATTIC_EXIT_mainStateMachine(unsigned long)+0x14c>)
 8028340:	2101      	movs	r1, #1
 8028342:	f7ff ffdd 	bl	8028300 <SM_RUNNER_setComplete>
 8028346:	4849      	ldr	r0, [pc, #292]	; (802846c <ATTIC_EXIT_mainStateMachine(unsigned long)+0x150>)
 8028348:	f44f 7180 	mov.w	r1, #256	; 0x100
 802834c:	f7fa fbb6 	bl	8022abc <Robot::updateArticulation(Articulation::State_e)>
 8028350:	2302      	movs	r3, #2
 8028352:	7023      	strb	r3, [r4, #0]
 8028354:	4620      	mov	r0, r4
 8028356:	b004      	add	sp, #16
 8028358:	bd10      	pop	{r4, pc}
 802835a:	4b45      	ldr	r3, [pc, #276]	; (8028470 <ATTIC_EXIT_mainStateMachine(unsigned long)+0x154>)
 802835c:	7891      	ldrb	r1, [r2, #2]
 802835e:	ed93 0a00 	vldr	s0, [r3]
 8028362:	2300      	movs	r3, #0
 8028364:	a802      	add	r0, sp, #8
 8028366:	9300      	str	r3, [sp, #0]
 8028368:	221a      	movs	r2, #26
 802836a:	f7ff fa4d 	bl	8027808 <ACTIONS_move(bool, ROBOT_axisIndex_t, float, AXIS_moveType_t, AXIS_mode_t)>
 802836e:	a902      	add	r1, sp, #8
 8028370:	4620      	mov	r0, r4
 8028372:	f003 fcc1 	bl	802bcf8 <TaskStatus::operator=(TaskStatus const&)>
 8028376:	4620      	mov	r0, r4
 8028378:	b004      	add	sp, #16
 802837a:	bd10      	pop	{r4, pc}
 802837c:	4b3d      	ldr	r3, [pc, #244]	; (8028474 <ATTIC_EXIT_mainStateMachine(unsigned long)+0x158>)
 802837e:	7891      	ldrb	r1, [r2, #2]
 8028380:	ed93 0a02 	vldr	s0, [r3, #8]
 8028384:	2300      	movs	r3, #0
 8028386:	a802      	add	r0, sp, #8
 8028388:	9300      	str	r3, [sp, #0]
 802838a:	220a      	movs	r2, #10
 802838c:	f7ff fa3c 	bl	8027808 <ACTIONS_move(bool, ROBOT_axisIndex_t, float, AXIS_moveType_t, AXIS_mode_t)>
 8028390:	a902      	add	r1, sp, #8
 8028392:	4620      	mov	r0, r4
 8028394:	f003 fcb0 	bl	802bcf8 <TaskStatus::operator=(TaskStatus const&)>
 8028398:	4620      	mov	r0, r4
 802839a:	b004      	add	sp, #16
 802839c:	bd10      	pop	{r4, pc}
 802839e:	7891      	ldrb	r1, [r2, #2]
 80283a0:	a802      	add	r0, sp, #8
 80283a2:	2300      	movs	r3, #0
 80283a4:	220c      	movs	r2, #12
 80283a6:	f7ff fb51 	bl	8027a4c <ACTIONS_power(bool, ROBOT_axisIndex_t, AXIS_powerState_t)>
 80283aa:	a902      	add	r1, sp, #8
 80283ac:	4620      	mov	r0, r4
 80283ae:	f003 fca3 	bl	802bcf8 <TaskStatus::operator=(TaskStatus const&)>
 80283b2:	4620      	mov	r0, r4
 80283b4:	b004      	add	sp, #16
 80283b6:	bd10      	pop	{r4, pc}
 80283b8:	7891      	ldrb	r1, [r2, #2]
 80283ba:	a802      	add	r0, sp, #8
 80283bc:	2301      	movs	r3, #1
 80283be:	220f      	movs	r2, #15
 80283c0:	f7ff fb44 	bl	8027a4c <ACTIONS_power(bool, ROBOT_axisIndex_t, AXIS_powerState_t)>
 80283c4:	a902      	add	r1, sp, #8
 80283c6:	4620      	mov	r0, r4
 80283c8:	f003 fc96 	bl	802bcf8 <TaskStatus::operator=(TaskStatus const&)>
 80283cc:	4620      	mov	r0, r4
 80283ce:	b004      	add	sp, #16
 80283d0:	bd10      	pop	{r4, pc}
 80283d2:	2301      	movs	r3, #1
 80283d4:	ed9f 0a28 	vldr	s0, [pc, #160]	; 8028478 <ATTIC_EXIT_mainStateMachine(unsigned long)+0x15c>
 80283d8:	7891      	ldrb	r1, [r2, #2]
 80283da:	9300      	str	r3, [sp, #0]
 80283dc:	a802      	add	r0, sp, #8
 80283de:	2300      	movs	r3, #0
 80283e0:	220f      	movs	r2, #15
 80283e2:	f7ff fa11 	bl	8027808 <ACTIONS_move(bool, ROBOT_axisIndex_t, float, AXIS_moveType_t, AXIS_mode_t)>
 80283e6:	a902      	add	r1, sp, #8
 80283e8:	4620      	mov	r0, r4
 80283ea:	f003 fc85 	bl	802bcf8 <TaskStatus::operator=(TaskStatus const&)>
 80283ee:	4620      	mov	r0, r4
 80283f0:	b004      	add	sp, #16
 80283f2:	bd10      	pop	{r4, pc}
 80283f4:	4b1e      	ldr	r3, [pc, #120]	; (8028470 <ATTIC_EXIT_mainStateMachine(unsigned long)+0x154>)
 80283f6:	7891      	ldrb	r1, [r2, #2]
 80283f8:	ed93 0a00 	vldr	s0, [r3]
 80283fc:	2300      	movs	r3, #0
 80283fe:	a802      	add	r0, sp, #8
 8028400:	9300      	str	r3, [sp, #0]
 8028402:	221b      	movs	r2, #27
 8028404:	f7ff fa00 	bl	8027808 <ACTIONS_move(bool, ROBOT_axisIndex_t, float, AXIS_moveType_t, AXIS_mode_t)>
 8028408:	a902      	add	r1, sp, #8
 802840a:	4620      	mov	r0, r4
 802840c:	f003 fc74 	bl	802bcf8 <TaskStatus::operator=(TaskStatus const&)>
 8028410:	4620      	mov	r0, r4
 8028412:	b004      	add	sp, #16
 8028414:	bd10      	pop	{r4, pc}
 8028416:	2300      	movs	r3, #0
 8028418:	7891      	ldrb	r1, [r2, #2]
 802841a:	ed9f 0a18 	vldr	s0, [pc, #96]	; 802847c <ATTIC_EXIT_mainStateMachine(unsigned long)+0x160>
 802841e:	9300      	str	r3, [sp, #0]
 8028420:	a802      	add	r0, sp, #8
 8028422:	e7dd      	b.n	80283e0 <ATTIC_EXIT_mainStateMachine(unsigned long)+0xc4>
 8028424:	7891      	ldrb	r1, [r2, #2]
 8028426:	a802      	add	r0, sp, #8
 8028428:	2300      	movs	r3, #0
 802842a:	e7c8      	b.n	80283be <ATTIC_EXIT_mainStateMachine(unsigned long)+0xa2>
 802842c:	4814      	ldr	r0, [pc, #80]	; (8028480 <ATTIC_EXIT_mainStateMachine(unsigned long)+0x164>)
 802842e:	212f      	movs	r1, #47	; 0x2f
 8028430:	f016 ff95 	bl	803f35e <strrchr>
 8028434:	b158      	cbz	r0, 802844e <ATTIC_EXIT_mainStateMachine(unsigned long)+0x132>
 8028436:	4812      	ldr	r0, [pc, #72]	; (8028480 <ATTIC_EXIT_mainStateMachine(unsigned long)+0x164>)
 8028438:	212f      	movs	r1, #47	; 0x2f
 802843a:	f016 ff90 	bl	803f35e <strrchr>
 802843e:	3001      	adds	r0, #1
 8028440:	4601      	mov	r1, r0
 8028442:	4b10      	ldr	r3, [pc, #64]	; (8028484 <ATTIC_EXIT_mainStateMachine(unsigned long)+0x168>)
 8028444:	22d7      	movs	r2, #215	; 0xd7
 8028446:	2000      	movs	r0, #0
 8028448:	f7fa f9a6 	bl	8022798 <DEBUG_logMsg>
 802844c:	e782      	b.n	8028354 <ATTIC_EXIT_mainStateMachine(unsigned long)+0x38>
 802844e:	480c      	ldr	r0, [pc, #48]	; (8028480 <ATTIC_EXIT_mainStateMachine(unsigned long)+0x164>)
 8028450:	215c      	movs	r1, #92	; 0x5c
 8028452:	f016 ff84 	bl	803f35e <strrchr>
 8028456:	b128      	cbz	r0, 8028464 <ATTIC_EXIT_mainStateMachine(unsigned long)+0x148>
 8028458:	4809      	ldr	r0, [pc, #36]	; (8028480 <ATTIC_EXIT_mainStateMachine(unsigned long)+0x164>)
 802845a:	215c      	movs	r1, #92	; 0x5c
 802845c:	f016 ff7f 	bl	803f35e <strrchr>
 8028460:	3001      	adds	r0, #1
 8028462:	e7ed      	b.n	8028440 <ATTIC_EXIT_mainStateMachine(unsigned long)+0x124>
 8028464:	4806      	ldr	r0, [pc, #24]	; (8028480 <ATTIC_EXIT_mainStateMachine(unsigned long)+0x164>)
 8028466:	e7eb      	b.n	8028440 <ATTIC_EXIT_mainStateMachine(unsigned long)+0x124>
 8028468:	20004cd0 	.word	0x20004cd0
 802846c:	2000f630 	.word	0x2000f630
 8028470:	20000078 	.word	0x20000078
 8028474:	20004cc0 	.word	0x20004cc0
 8028478:	42b80000 	.word	0x42b80000
 802847c:	42a00000 	.word	0x42a00000
 8028480:	08045364 	.word	0x08045364
 8028484:	080453ac 	.word	0x080453ac

08028488 <ATTIC_EXIT_setup()>:
 8028488:	b530      	push	{r4, r5, lr}
 802848a:	b08f      	sub	sp, #60	; 0x3c
 802848c:	ad09      	add	r5, sp, #36	; 0x24
 802848e:	4911      	ldr	r1, [pc, #68]	; (80284d4 <ATTIC_EXIT_setup()+0x4c>)
 8028490:	4604      	mov	r4, r0
 8028492:	4628      	mov	r0, r5
 8028494:	f007 fe88 	bl	80301a8 <Nest::getAtticPositions()>
 8028498:	f89d 3034 	ldrb.w	r3, [sp, #52]	; 0x34
 802849c:	b18b      	cbz	r3, 80284c2 <ATTIC_EXIT_setup()+0x3a>
 802849e:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
 80284a2:	ad05      	add	r5, sp, #20
 80284a4:	e885 000f 	stmia.w	r5, {r0, r1, r2, r3}
 80284a8:	ad01      	add	r5, sp, #4
 80284aa:	e885 000f 	stmia.w	r5, {r0, r1, r2, r3}
 80284ae:	4d0a      	ldr	r5, [pc, #40]	; (80284d8 <ATTIC_EXIT_setup()+0x50>)
 80284b0:	e885 000f 	stmia.w	r5, {r0, r1, r2, r3}
 80284b4:	2101      	movs	r1, #1
 80284b6:	4620      	mov	r0, r4
 80284b8:	f003 fc08 	bl	802bccc <TaskStatus::TaskStatus(TaskStatus::Result_e)>
 80284bc:	4620      	mov	r0, r4
 80284be:	b00f      	add	sp, #60	; 0x3c
 80284c0:	bd30      	pop	{r4, r5, pc}
 80284c2:	2206      	movs	r2, #6
 80284c4:	2102      	movs	r1, #2
 80284c6:	4620      	mov	r0, r4
 80284c8:	f003 fc06 	bl	802bcd8 <TaskStatus::TaskStatus(TaskStatus::Result_e, unsigned int)>
 80284cc:	4620      	mov	r0, r4
 80284ce:	b00f      	add	sp, #60	; 0x3c
 80284d0:	bd30      	pop	{r4, r5, pc}
 80284d2:	bf00      	nop
 80284d4:	20004b30 	.word	0x20004b30
 80284d8:	20004cc0 	.word	0x20004cc0

080284dc <ATTIC_EXIT_errorStateMachine(unsigned long)>:
 80284dc:	b570      	push	{r4, r5, r6, lr}
 80284de:	4d4e      	ldr	r5, [pc, #312]	; (8028618 <ATTIC_EXIT_errorStateMachine(unsigned long)+0x13c>)
 80284e0:	b086      	sub	sp, #24
 80284e2:	2100      	movs	r1, #0
 80284e4:	4604      	mov	r4, r0
 80284e6:	f003 fbf1 	bl	802bccc <TaskStatus::TaskStatus(TaskStatus::Result_e)>
 80284ea:	796b      	ldrb	r3, [r5, #5]
 80284ec:	2b03      	cmp	r3, #3
 80284ee:	d873      	bhi.n	80285d8 <ATTIC_EXIT_errorStateMachine(unsigned long)+0xfc>
 80284f0:	e8df f003 	tbb	[pc, r3]
 80284f4:	020a1328 	.word	0x020a1328
 80284f8:	2301      	movs	r3, #1
 80284fa:	4847      	ldr	r0, [pc, #284]	; (8028618 <ATTIC_EXIT_errorStateMachine(unsigned long)+0x13c>)
 80284fc:	7023      	strb	r3, [r4, #0]
 80284fe:	f7ff ff09 	bl	8028314 <SM_RUNNER_abort>
 8028502:	4620      	mov	r0, r4
 8028504:	b006      	add	sp, #24
 8028506:	bd70      	pop	{r4, r5, r6, pc}
 8028508:	4b44      	ldr	r3, [pc, #272]	; (802861c <ATTIC_EXIT_errorStateMachine(unsigned long)+0x140>)
 802850a:	781b      	ldrb	r3, [r3, #0]
 802850c:	2b01      	cmp	r3, #1
 802850e:	d957      	bls.n	80285c0 <ATTIC_EXIT_errorStateMachine(unsigned long)+0xe4>
 8028510:	2301      	movs	r3, #1
 8028512:	4620      	mov	r0, r4
 8028514:	7023      	strb	r3, [r4, #0]
 8028516:	b006      	add	sp, #24
 8028518:	bd70      	pop	{r4, r5, r6, pc}
 802851a:	4b40      	ldr	r3, [pc, #256]	; (802861c <ATTIC_EXIT_errorStateMachine(unsigned long)+0x140>)
 802851c:	781e      	ldrb	r6, [r3, #0]
 802851e:	a802      	add	r0, sp, #8
 8028520:	2100      	movs	r1, #0
 8028522:	f003 fbd3 	bl	802bccc <TaskStatus::TaskStatus(TaskStatus::Result_e)>
 8028526:	2e01      	cmp	r6, #1
 8028528:	d03b      	beq.n	80285a2 <ATTIC_EXIT_errorStateMachine(unsigned long)+0xc6>
 802852a:	f016 0ffd 	tst.w	r6, #253	; 0xfd
 802852e:	d04f      	beq.n	80285d0 <ATTIC_EXIT_errorStateMachine(unsigned long)+0xf4>
 8028530:	2302      	movs	r3, #2
 8028532:	f88d 3008 	strb.w	r3, [sp, #8]
 8028536:	a902      	add	r1, sp, #8
 8028538:	4620      	mov	r0, r4
 802853a:	f003 fbdd 	bl	802bcf8 <TaskStatus::operator=(TaskStatus const&)>
 802853e:	4620      	mov	r0, r4
 8028540:	b006      	add	sp, #24
 8028542:	bd70      	pop	{r4, r5, r6, pc}
 8028544:	a804      	add	r0, sp, #16
 8028546:	2100      	movs	r1, #0
 8028548:	f003 fbc0 	bl	802bccc <TaskStatus::TaskStatus(TaskStatus::Result_e)>
 802854c:	782b      	ldrb	r3, [r5, #0]
 802854e:	b19b      	cbz	r3, 8028578 <ATTIC_EXIT_errorStateMachine(unsigned long)+0x9c>
 8028550:	3b01      	subs	r3, #1
 8028552:	2b07      	cmp	r3, #7
 8028554:	d80c      	bhi.n	8028570 <ATTIC_EXIT_errorStateMachine(unsigned long)+0x94>
 8028556:	4a31      	ldr	r2, [pc, #196]	; (802861c <ATTIC_EXIT_errorStateMachine(unsigned long)+0x140>)
 8028558:	2102      	movs	r1, #2
 802855a:	2301      	movs	r3, #1
 802855c:	7011      	strb	r1, [r2, #0]
 802855e:	f88d 3010 	strb.w	r3, [sp, #16]
 8028562:	a904      	add	r1, sp, #16
 8028564:	4620      	mov	r0, r4
 8028566:	f003 fbc7 	bl	802bcf8 <TaskStatus::operator=(TaskStatus const&)>
 802856a:	4620      	mov	r0, r4
 802856c:	b006      	add	sp, #24
 802856e:	bd70      	pop	{r4, r5, r6, pc}
 8028570:	2302      	movs	r3, #2
 8028572:	f88d 3010 	strb.w	r3, [sp, #16]
 8028576:	e7f4      	b.n	8028562 <ATTIC_EXIT_errorStateMachine(unsigned long)+0x86>
 8028578:	4b29      	ldr	r3, [pc, #164]	; (8028620 <ATTIC_EXIT_errorStateMachine(unsigned long)+0x144>)
 802857a:	4928      	ldr	r1, [pc, #160]	; (802861c <ATTIC_EXIT_errorStateMachine(unsigned long)+0x140>)
 802857c:	ed93 7a01 	vldr	s14, [r3, #4]
 8028580:	edd3 7a02 	vldr	s15, [r3, #8]
 8028584:	eef2 6a04 	vmov.f32	s13, #36	; 0x41200000  10.0
 8028588:	ee37 7a26 	vadd.f32	s14, s14, s13
 802858c:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8028590:	2201      	movs	r2, #1
 8028592:	ed83 7a01 	vstr	s14, [r3, #4]
 8028596:	edc3 7a02 	vstr	s15, [r3, #8]
 802859a:	700a      	strb	r2, [r1, #0]
 802859c:	f88d 2010 	strb.w	r2, [sp, #16]
 80285a0:	e7df      	b.n	8028562 <ATTIC_EXIT_errorStateMachine(unsigned long)+0x86>
 80285a2:	4b1f      	ldr	r3, [pc, #124]	; (8028620 <ATTIC_EXIT_errorStateMachine(unsigned long)+0x144>)
 80285a4:	79e9      	ldrb	r1, [r5, #7]
 80285a6:	ed93 0a01 	vldr	s0, [r3, #4]
 80285aa:	2300      	movs	r3, #0
 80285ac:	a804      	add	r0, sp, #16
 80285ae:	9300      	str	r3, [sp, #0]
 80285b0:	220a      	movs	r2, #10
 80285b2:	f7ff f929 	bl	8027808 <ACTIONS_move(bool, ROBOT_axisIndex_t, float, AXIS_moveType_t, AXIS_mode_t)>
 80285b6:	a904      	add	r1, sp, #16
 80285b8:	a802      	add	r0, sp, #8
 80285ba:	f003 fb9d 	bl	802bcf8 <TaskStatus::operator=(TaskStatus const&)>
 80285be:	e7ba      	b.n	8028536 <ATTIC_EXIT_errorStateMachine(unsigned long)+0x5a>
 80285c0:	4815      	ldr	r0, [pc, #84]	; (8028618 <ATTIC_EXIT_errorStateMachine(unsigned long)+0x13c>)
 80285c2:	2100      	movs	r1, #0
 80285c4:	f7ff fe8a 	bl	80282dc <SM_RUNNER_setError>
 80285c8:	4813      	ldr	r0, [pc, #76]	; (8028618 <ATTIC_EXIT_errorStateMachine(unsigned long)+0x13c>)
 80285ca:	f7ff fe9b 	bl	8028304 <SM_RUNNER_restart>
 80285ce:	e79f      	b.n	8028510 <ATTIC_EXIT_errorStateMachine(unsigned long)+0x34>
 80285d0:	2301      	movs	r3, #1
 80285d2:	f88d 3008 	strb.w	r3, [sp, #8]
 80285d6:	e7ae      	b.n	8028536 <ATTIC_EXIT_errorStateMachine(unsigned long)+0x5a>
 80285d8:	4812      	ldr	r0, [pc, #72]	; (8028624 <ATTIC_EXIT_errorStateMachine(unsigned long)+0x148>)
 80285da:	212f      	movs	r1, #47	; 0x2f
 80285dc:	f016 febf 	bl	803f35e <strrchr>
 80285e0:	b160      	cbz	r0, 80285fc <ATTIC_EXIT_errorStateMachine(unsigned long)+0x120>
 80285e2:	4810      	ldr	r0, [pc, #64]	; (8028624 <ATTIC_EXIT_errorStateMachine(unsigned long)+0x148>)
 80285e4:	212f      	movs	r1, #47	; 0x2f
 80285e6:	f016 feba 	bl	803f35e <strrchr>
 80285ea:	3001      	adds	r0, #1
 80285ec:	4601      	mov	r1, r0
 80285ee:	4b0e      	ldr	r3, [pc, #56]	; (8028628 <ATTIC_EXIT_errorStateMachine(unsigned long)+0x14c>)
 80285f0:	f240 1211 	movw	r2, #273	; 0x111
 80285f4:	2000      	movs	r0, #0
 80285f6:	f7fa f8cf 	bl	8022798 <DEBUG_logMsg>
 80285fa:	e782      	b.n	8028502 <ATTIC_EXIT_errorStateMachine(unsigned long)+0x26>
 80285fc:	4809      	ldr	r0, [pc, #36]	; (8028624 <ATTIC_EXIT_errorStateMachine(unsigned long)+0x148>)
 80285fe:	215c      	movs	r1, #92	; 0x5c
 8028600:	f016 fead 	bl	803f35e <strrchr>
 8028604:	b128      	cbz	r0, 8028612 <ATTIC_EXIT_errorStateMachine(unsigned long)+0x136>
 8028606:	4807      	ldr	r0, [pc, #28]	; (8028624 <ATTIC_EXIT_errorStateMachine(unsigned long)+0x148>)
 8028608:	215c      	movs	r1, #92	; 0x5c
 802860a:	f016 fea8 	bl	803f35e <strrchr>
 802860e:	3001      	adds	r0, #1
 8028610:	e7ec      	b.n	80285ec <ATTIC_EXIT_errorStateMachine(unsigned long)+0x110>
 8028612:	4804      	ldr	r0, [pc, #16]	; (8028624 <ATTIC_EXIT_errorStateMachine(unsigned long)+0x148>)
 8028614:	e7ea      	b.n	80285ec <ATTIC_EXIT_errorStateMachine(unsigned long)+0x110>
 8028616:	bf00      	nop
 8028618:	20004cd0 	.word	0x20004cd0
 802861c:	20004cbd 	.word	0x20004cbd
 8028620:	20004cc0 	.word	0x20004cc0
 8028624:	08045364 	.word	0x08045364
 8028628:	080453c8 	.word	0x080453c8

0802862c <ATTIC_EXIT_runTask(unsigned long, ATTIC_EXIT_stage_t, bool)>:
 802862c:	b5f0      	push	{r4, r5, r6, r7, lr}
 802862e:	461c      	mov	r4, r3
 8028630:	b085      	sub	sp, #20
 8028632:	460b      	mov	r3, r1
 8028634:	b154      	cbz	r4, 802864c <ATTIC_EXIT_runTask(unsigned long, ATTIC_EXIT_stage_t, bool)+0x20>
 8028636:	490a      	ldr	r1, [pc, #40]	; (8028660 <ATTIC_EXIT_runTask(unsigned long, ATTIC_EXIT_stage_t, bool)+0x34>)
 8028638:	4f0a      	ldr	r7, [pc, #40]	; (8028664 <ATTIC_EXIT_runTask(unsigned long, ATTIC_EXIT_stage_t, bool)+0x38>)
 802863a:	4e0b      	ldr	r6, [pc, #44]	; (8028668 <ATTIC_EXIT_runTask(unsigned long, ATTIC_EXIT_stage_t, bool)+0x3c>)
 802863c:	4d0b      	ldr	r5, [pc, #44]	; (802866c <ATTIC_EXIT_runTask(unsigned long, ATTIC_EXIT_stage_t, bool)+0x40>)
 802863e:	2a00      	cmp	r2, #0
 8028640:	bf0c      	ite	eq
 8028642:	460a      	moveq	r2, r1
 8028644:	463a      	movne	r2, r7
 8028646:	2102      	movs	r1, #2
 8028648:	60f2      	str	r2, [r6, #12]
 802864a:	7029      	strb	r1, [r5, #0]
 802864c:	4a08      	ldr	r2, [pc, #32]	; (8028670 <ATTIC_EXIT_runTask(unsigned long, ATTIC_EXIT_stage_t, bool)+0x44>)
 802864e:	4906      	ldr	r1, [pc, #24]	; (8028668 <ATTIC_EXIT_runTask(unsigned long, ATTIC_EXIT_stage_t, bool)+0x3c>)
 8028650:	9400      	str	r4, [sp, #0]
 8028652:	9003      	str	r0, [sp, #12]
 8028654:	f7ff fc62 	bl	8027f1c <SM_RUNNER_runStateMachine>
 8028658:	9803      	ldr	r0, [sp, #12]
 802865a:	b005      	add	sp, #20
 802865c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 802865e:	bf00      	nop
 8028660:	20000b8c 	.word	0x20000b8c
 8028664:	20000afc 	.word	0x20000afc
 8028668:	20000bfc 	.word	0x20000bfc
 802866c:	20004cbd 	.word	0x20004cbd
 8028670:	20004cd0 	.word	0x20004cd0

08028674 <MOVEXY_mainStateMachine(unsigned long)>:
 8028674:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8028678:	4eb5      	ldr	r6, [pc, #724]	; (8028950 <MOVEXY_mainStateMachine(unsigned long)+0x2dc>)
 802867a:	4db6      	ldr	r5, [pc, #728]	; (8028954 <MOVEXY_mainStateMachine(unsigned long)+0x2e0>)
 802867c:	b090      	sub	sp, #64	; 0x40
 802867e:	460f      	mov	r7, r1
 8028680:	2100      	movs	r1, #0
 8028682:	4604      	mov	r4, r0
 8028684:	f003 fb22 	bl	802bccc <TaskStatus::TaskStatus(TaskStatus::Result_e)>
 8028688:	7833      	ldrb	r3, [r6, #0]
 802868a:	7828      	ldrb	r0, [r5, #0]
 802868c:	f88d 0034 	strb.w	r0, [sp, #52]	; 0x34
 8028690:	220f      	movs	r2, #15
 8028692:	f88d 2035 	strb.w	r2, [sp, #53]	; 0x35
 8028696:	2b0a      	cmp	r3, #10
 8028698:	f200 8146 	bhi.w	8028928 <MOVEXY_mainStateMachine(unsigned long)+0x2b4>
 802869c:	e8df f013 	tbh	[pc, r3, lsl #1]
 80286a0:	00240019 	.word	0x00240019
 80286a4:	003f0034 	.word	0x003f0034
 80286a8:	0080007b 	.word	0x0080007b
 80286ac:	00c300b4 	.word	0x00c300b4
 80286b0:	00fe00f6 	.word	0x00fe00f6
 80286b4:	000b      	.short	0x000b
 80286b6:	6ae9      	ldr	r1, [r5, #44]	; 0x2c
 80286b8:	48a7      	ldr	r0, [pc, #668]	; (8028958 <MOVEXY_mainStateMachine(unsigned long)+0x2e4>)
 80286ba:	f7fa f9ff 	bl	8022abc <Robot::updateArticulation(Articulation::State_e)>
 80286be:	48a4      	ldr	r0, [pc, #656]	; (8028950 <MOVEXY_mainStateMachine(unsigned long)+0x2dc>)
 80286c0:	2101      	movs	r1, #1
 80286c2:	f7ff fe1d 	bl	8028300 <SM_RUNNER_setComplete>
 80286c6:	2301      	movs	r3, #1
 80286c8:	7023      	strb	r3, [r4, #0]
 80286ca:	4620      	mov	r0, r4
 80286cc:	b010      	add	sp, #64	; 0x40
 80286ce:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80286d2:	78b1      	ldrb	r1, [r6, #2]
 80286d4:	a80e      	add	r0, sp, #56	; 0x38
 80286d6:	2301      	movs	r3, #1
 80286d8:	220f      	movs	r2, #15
 80286da:	f7ff f9b7 	bl	8027a4c <ACTIONS_power(bool, ROBOT_axisIndex_t, AXIS_powerState_t)>
 80286de:	a90e      	add	r1, sp, #56	; 0x38
 80286e0:	4620      	mov	r0, r4
 80286e2:	f003 fb09 	bl	802bcf8 <TaskStatus::operator=(TaskStatus const&)>
 80286e6:	e7f0      	b.n	80286ca <MOVEXY_mainStateMachine(unsigned long)+0x56>
 80286e8:	78b3      	ldrb	r3, [r6, #2]
 80286ea:	ed95 0a04 	vldr	s0, [r5, #16]
 80286ee:	463a      	mov	r2, r7
 80286f0:	4601      	mov	r1, r0
 80286f2:	a80e      	add	r0, sp, #56	; 0x38
 80286f4:	f000 fd70 	bl	80291d8 <MOVEXY_transition(ROBOT_axisIndex_t, float, unsigned long, bool)>
 80286f8:	a90e      	add	r1, sp, #56	; 0x38
 80286fa:	4620      	mov	r0, r4
 80286fc:	f003 fafc 	bl	802bcf8 <TaskStatus::operator=(TaskStatus const&)>
 8028700:	4620      	mov	r0, r4
 8028702:	b010      	add	sp, #64	; 0x40
 8028704:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8028708:	78b1      	ldrb	r1, [r6, #2]
 802870a:	4602      	mov	r2, r0
 802870c:	2301      	movs	r3, #1
 802870e:	a80e      	add	r0, sp, #56	; 0x38
 8028710:	f7ff f99c 	bl	8027a4c <ACTIONS_power(bool, ROBOT_axisIndex_t, AXIS_powerState_t)>
 8028714:	a90e      	add	r1, sp, #56	; 0x38
 8028716:	4620      	mov	r0, r4
 8028718:	f003 faee 	bl	802bcf8 <TaskStatus::operator=(TaskStatus const&)>
 802871c:	e7d5      	b.n	80286ca <MOVEXY_mainStateMachine(unsigned long)+0x56>
 802871e:	05fa      	lsls	r2, r7, #23
 8028720:	d52a      	bpl.n	8028778 <MOVEXY_mainStateMachine(unsigned long)+0x104>
 8028722:	8cab      	ldrh	r3, [r5, #36]	; 0x24
 8028724:	2b01      	cmp	r3, #1
 8028726:	d927      	bls.n	8028778 <MOVEXY_mainStateMachine(unsigned long)+0x104>
 8028728:	488c      	ldr	r0, [pc, #560]	; (802895c <MOVEXY_mainStateMachine(unsigned long)+0x2e8>)
 802872a:	f008 f94d 	bl	80309c8 <ProgressMonitor::getIntervals()>
 802872e:	212f      	movs	r1, #47	; 0x2f
 8028730:	4680      	mov	r8, r0
 8028732:	488b      	ldr	r0, [pc, #556]	; (8028960 <MOVEXY_mainStateMachine(unsigned long)+0x2ec>)
 8028734:	fa5f f888 	uxtb.w	r8, r8
 8028738:	f016 fe11 	bl	803f35e <strrchr>
 802873c:	2800      	cmp	r0, #0
 802873e:	f000 80d7 	beq.w	80288f0 <MOVEXY_mainStateMachine(unsigned long)+0x27c>
 8028742:	212f      	movs	r1, #47	; 0x2f
 8028744:	4886      	ldr	r0, [pc, #536]	; (8028960 <MOVEXY_mainStateMachine(unsigned long)+0x2ec>)
 8028746:	f016 fe0a 	bl	803f35e <strrchr>
 802874a:	1c41      	adds	r1, r0, #1
 802874c:	22d3      	movs	r2, #211	; 0xd3
 802874e:	4b85      	ldr	r3, [pc, #532]	; (8028964 <MOVEXY_mainStateMachine(unsigned long)+0x2f0>)
 8028750:	f8cd 8000 	str.w	r8, [sp]
 8028754:	2002      	movs	r0, #2
 8028756:	f7fa f81f 	bl	8022798 <DEBUG_logMsg>
 802875a:	4b83      	ldr	r3, [pc, #524]	; (8028968 <MOVEXY_mainStateMachine(unsigned long)+0x2f4>)
 802875c:	f895 7026 	ldrb.w	r7, [r5, #38]	; 0x26
 8028760:	f9b3 0003 	ldrsh.w	r0, [r3, #3]
 8028764:	f016 fb33 	bl	803edce <abs>
 8028768:	fb17 f708 	smulbb	r7, r7, r8
 802876c:	b2ff      	uxtb	r7, r7
 802876e:	b2c1      	uxtb	r1, r0
 8028770:	4638      	mov	r0, r7
 8028772:	f7fb fc6b 	bl	802404c <CCP_sendProgressMessage>
 8028776:	7828      	ldrb	r0, [r5, #0]
 8028778:	78b1      	ldrb	r1, [r6, #2]
 802877a:	ed95 0a03 	vldr	s0, [r5, #12]
 802877e:	2300      	movs	r3, #0
 8028780:	4602      	mov	r2, r0
 8028782:	9300      	str	r3, [sp, #0]
 8028784:	a80e      	add	r0, sp, #56	; 0x38
 8028786:	2301      	movs	r3, #1
 8028788:	f7ff f83e 	bl	8027808 <ACTIONS_move(bool, ROBOT_axisIndex_t, float, AXIS_moveType_t, AXIS_mode_t)>
 802878c:	a90e      	add	r1, sp, #56	; 0x38
 802878e:	4620      	mov	r0, r4
 8028790:	f003 fab2 	bl	802bcf8 <TaskStatus::operator=(TaskStatus const&)>
 8028794:	e799      	b.n	80286ca <MOVEXY_mainStateMachine(unsigned long)+0x56>
 8028796:	f006 fc39 	bl	802f00c <CAMERA_trigger()>
 802879a:	2301      	movs	r3, #1
 802879c:	7023      	strb	r3, [r4, #0]
 802879e:	e794      	b.n	80286ca <MOVEXY_mainStateMachine(unsigned long)+0x56>
 80287a0:	077b      	lsls	r3, r7, #29
 80287a2:	d592      	bpl.n	80286ca <MOVEXY_mainStateMachine(unsigned long)+0x56>
 80287a4:	a804      	add	r0, sp, #16
 80287a6:	ae04      	add	r6, sp, #16
 80287a8:	f006 faac 	bl	802ed04 <CAMERA_getResponseData()>
 80287ac:	ce0f      	ldmia	r6!, {r0, r1, r2, r3}
 80287ae:	f8df c1c8 	ldr.w	ip, [pc, #456]	; 8028978 <MOVEXY_mainStateMachine(unsigned long)+0x304>
 80287b2:	4667      	mov	r7, ip
 80287b4:	c70f      	stmia	r7!, {r0, r1, r2, r3}
 80287b6:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 80287ba:	f8dc 3000 	ldr.w	r3, [ip]
 80287be:	3301      	adds	r3, #1
 80287c0:	e887 0007 	stmia.w	r7, {r0, r1, r2}
 80287c4:	d077      	beq.n	80288b6 <MOVEXY_mainStateMachine(unsigned long)+0x242>
 80287c6:	7a6b      	ldrb	r3, [r5, #9]
 80287c8:	2b01      	cmp	r3, #1
 80287ca:	bf0c      	ite	eq
 80287cc:	f8dc 0004 	ldreq.w	r0, [ip, #4]
 80287d0:	f8dc 0008 	ldrne.w	r0, [ip, #8]
 80287d4:	f015 fe41 	bl	803e45a <__aeabi_f2d>
 80287d8:	4b64      	ldr	r3, [pc, #400]	; (802896c <MOVEXY_mainStateMachine(unsigned long)+0x2f8>)
 80287da:	2200      	movs	r2, #0
 80287dc:	f015 ff46 	bl	803e66c <__aeabi_ddiv>
 80287e0:	f015 fe57 	bl	803e492 <__aeabi_d2f>
 80287e4:	4b60      	ldr	r3, [pc, #384]	; (8028968 <MOVEXY_mainStateMachine(unsigned long)+0x2f4>)
 80287e6:	61e8      	str	r0, [r5, #28]
 80287e8:	f9b3 0003 	ldrsh.w	r0, [r3, #3]
 80287ec:	f016 faef 	bl	803edce <abs>
 80287f0:	b280      	uxth	r0, r0
 80287f2:	2801      	cmp	r0, #1
 80287f4:	f67f af67 	bls.w	80286c6 <MOVEXY_mainStateMachine(unsigned long)+0x52>
 80287f8:	edd5 0a07 	vldr	s1, [r5, #28]
 80287fc:	ed95 0a03 	vldr	s0, [r5, #12]
 8028800:	7828      	ldrb	r0, [r5, #0]
 8028802:	f000 fd05 	bl	8029210 <MOVEXY_autoWheelCalibration(ROBOT_axisIndex_t, float, float)>
 8028806:	e75e      	b.n	80286c6 <MOVEXY_mainStateMachine(unsigned long)+0x52>
 8028808:	2302      	movs	r3, #2
 802880a:	78b1      	ldrb	r1, [r6, #2]
 802880c:	9300      	str	r3, [sp, #0]
 802880e:	4602      	mov	r2, r0
 8028810:	ed95 0a07 	vldr	s0, [r5, #28]
 8028814:	a80e      	add	r0, sp, #56	; 0x38
 8028816:	2301      	movs	r3, #1
 8028818:	f7fe fff6 	bl	8027808 <ACTIONS_move(bool, ROBOT_axisIndex_t, float, AXIS_moveType_t, AXIS_mode_t)>
 802881c:	a90e      	add	r1, sp, #56	; 0x38
 802881e:	4620      	mov	r0, r4
 8028820:	f003 fa6a 	bl	802bcf8 <TaskStatus::operator=(TaskStatus const&)>
 8028824:	e751      	b.n	80286ca <MOVEXY_mainStateMachine(unsigned long)+0x56>
 8028826:	4e50      	ldr	r6, [pc, #320]	; (8028968 <MOVEXY_mainStateMachine(unsigned long)+0x2f4>)
 8028828:	78b3      	ldrb	r3, [r6, #2]
 802882a:	2b00      	cmp	r3, #0
 802882c:	f43f af4b 	beq.w	80286c6 <MOVEXY_mainStateMachine(unsigned long)+0x52>
 8028830:	edd5 7a08 	vldr	s15, [r5, #32]
 8028834:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8028838:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802883c:	f77f af43 	ble.w	80286c6 <MOVEXY_mainStateMachine(unsigned long)+0x52>
 8028840:	4847      	ldr	r0, [pc, #284]	; (8028960 <MOVEXY_mainStateMachine(unsigned long)+0x2ec>)
 8028842:	212f      	movs	r1, #47	; 0x2f
 8028844:	f016 fd8b 	bl	803f35e <strrchr>
 8028848:	2800      	cmp	r0, #0
 802884a:	d046      	beq.n	80288da <MOVEXY_mainStateMachine(unsigned long)+0x266>
 802884c:	212f      	movs	r1, #47	; 0x2f
 802884e:	4844      	ldr	r0, [pc, #272]	; (8028960 <MOVEXY_mainStateMachine(unsigned long)+0x2ec>)
 8028850:	f016 fd85 	bl	803f35e <strrchr>
 8028854:	1c41      	adds	r1, r0, #1
 8028856:	9103      	str	r1, [sp, #12]
 8028858:	f9b6 0003 	ldrsh.w	r0, [r6, #3]
 802885c:	f016 fab7 	bl	803edce <abs>
 8028860:	b2c0      	uxtb	r0, r0
 8028862:	9903      	ldr	r1, [sp, #12]
 8028864:	4b3f      	ldr	r3, [pc, #252]	; (8028964 <MOVEXY_mainStateMachine(unsigned long)+0x2f0>)
 8028866:	9000      	str	r0, [sp, #0]
 8028868:	22ff      	movs	r2, #255	; 0xff
 802886a:	2002      	movs	r0, #2
 802886c:	f7f9 ff94 	bl	8022798 <DEBUG_logMsg>
 8028870:	f9b6 0003 	ldrsh.w	r0, [r6, #3]
 8028874:	f016 faab 	bl	803edce <abs>
 8028878:	4605      	mov	r5, r0
 802887a:	f9b6 0003 	ldrsh.w	r0, [r6, #3]
 802887e:	f016 faa6 	bl	803edce <abs>
 8028882:	b2c1      	uxtb	r1, r0
 8028884:	b2e8      	uxtb	r0, r5
 8028886:	f7fb fbe1 	bl	802404c <CCP_sendProgressMessage>
 802888a:	e71c      	b.n	80286c6 <MOVEXY_mainStateMachine(unsigned long)+0x52>
 802888c:	7e2b      	ldrb	r3, [r5, #24]
 802888e:	2b00      	cmp	r3, #0
 8028890:	f43f af19 	beq.w	80286c6 <MOVEXY_mainStateMachine(unsigned long)+0x52>
 8028894:	78b3      	ldrb	r3, [r6, #2]
 8028896:	ed95 0a05 	vldr	s0, [r5, #20]
 802889a:	e728      	b.n	80286ee <MOVEXY_mainStateMachine(unsigned long)+0x7a>
 802889c:	2300      	movs	r3, #0
 802889e:	78b1      	ldrb	r1, [r6, #2]
 80288a0:	9300      	str	r3, [sp, #0]
 80288a2:	a80e      	add	r0, sp, #56	; 0x38
 80288a4:	2302      	movs	r3, #2
 80288a6:	aa0d      	add	r2, sp, #52	; 0x34
 80288a8:	f7ff f922 	bl	8027af0 <ACTIONS_powerList(bool, ROBOT_axisIndex_t const*, unsigned char, AXIS_powerState_t)>
 80288ac:	a90e      	add	r1, sp, #56	; 0x38
 80288ae:	4620      	mov	r0, r4
 80288b0:	f003 fa22 	bl	802bcf8 <TaskStatus::operator=(TaskStatus const&)>
 80288b4:	e709      	b.n	80286ca <MOVEXY_mainStateMachine(unsigned long)+0x56>
 80288b6:	482a      	ldr	r0, [pc, #168]	; (8028960 <MOVEXY_mainStateMachine(unsigned long)+0x2ec>)
 80288b8:	212f      	movs	r1, #47	; 0x2f
 80288ba:	f016 fd50 	bl	803f35e <strrchr>
 80288be:	b330      	cbz	r0, 802890e <MOVEXY_mainStateMachine(unsigned long)+0x29a>
 80288c0:	212f      	movs	r1, #47	; 0x2f
 80288c2:	4827      	ldr	r0, [pc, #156]	; (8028960 <MOVEXY_mainStateMachine(unsigned long)+0x2ec>)
 80288c4:	f016 fd4b 	bl	803f35e <strrchr>
 80288c8:	1c41      	adds	r1, r0, #1
 80288ca:	4b29      	ldr	r3, [pc, #164]	; (8028970 <MOVEXY_mainStateMachine(unsigned long)+0x2fc>)
 80288cc:	22e7      	movs	r2, #231	; 0xe7
 80288ce:	2000      	movs	r0, #0
 80288d0:	f7f9 ff62 	bl	8022798 <DEBUG_logMsg>
 80288d4:	2302      	movs	r3, #2
 80288d6:	7023      	strb	r3, [r4, #0]
 80288d8:	e6f7      	b.n	80286ca <MOVEXY_mainStateMachine(unsigned long)+0x56>
 80288da:	4821      	ldr	r0, [pc, #132]	; (8028960 <MOVEXY_mainStateMachine(unsigned long)+0x2ec>)
 80288dc:	215c      	movs	r1, #92	; 0x5c
 80288de:	f016 fd3e 	bl	803f35e <strrchr>
 80288e2:	b180      	cbz	r0, 8028906 <MOVEXY_mainStateMachine(unsigned long)+0x292>
 80288e4:	215c      	movs	r1, #92	; 0x5c
 80288e6:	481e      	ldr	r0, [pc, #120]	; (8028960 <MOVEXY_mainStateMachine(unsigned long)+0x2ec>)
 80288e8:	f016 fd39 	bl	803f35e <strrchr>
 80288ec:	1c41      	adds	r1, r0, #1
 80288ee:	e7b2      	b.n	8028856 <MOVEXY_mainStateMachine(unsigned long)+0x1e2>
 80288f0:	481b      	ldr	r0, [pc, #108]	; (8028960 <MOVEXY_mainStateMachine(unsigned long)+0x2ec>)
 80288f2:	215c      	movs	r1, #92	; 0x5c
 80288f4:	f016 fd33 	bl	803f35e <strrchr>
 80288f8:	b138      	cbz	r0, 802890a <MOVEXY_mainStateMachine(unsigned long)+0x296>
 80288fa:	215c      	movs	r1, #92	; 0x5c
 80288fc:	4818      	ldr	r0, [pc, #96]	; (8028960 <MOVEXY_mainStateMachine(unsigned long)+0x2ec>)
 80288fe:	f016 fd2e 	bl	803f35e <strrchr>
 8028902:	1c41      	adds	r1, r0, #1
 8028904:	e722      	b.n	802874c <MOVEXY_mainStateMachine(unsigned long)+0xd8>
 8028906:	4916      	ldr	r1, [pc, #88]	; (8028960 <MOVEXY_mainStateMachine(unsigned long)+0x2ec>)
 8028908:	e7a5      	b.n	8028856 <MOVEXY_mainStateMachine(unsigned long)+0x1e2>
 802890a:	4915      	ldr	r1, [pc, #84]	; (8028960 <MOVEXY_mainStateMachine(unsigned long)+0x2ec>)
 802890c:	e71e      	b.n	802874c <MOVEXY_mainStateMachine(unsigned long)+0xd8>
 802890e:	4814      	ldr	r0, [pc, #80]	; (8028960 <MOVEXY_mainStateMachine(unsigned long)+0x2ec>)
 8028910:	215c      	movs	r1, #92	; 0x5c
 8028912:	f016 fd24 	bl	803f35e <strrchr>
 8028916:	b128      	cbz	r0, 8028924 <MOVEXY_mainStateMachine(unsigned long)+0x2b0>
 8028918:	215c      	movs	r1, #92	; 0x5c
 802891a:	4811      	ldr	r0, [pc, #68]	; (8028960 <MOVEXY_mainStateMachine(unsigned long)+0x2ec>)
 802891c:	f016 fd1f 	bl	803f35e <strrchr>
 8028920:	1c41      	adds	r1, r0, #1
 8028922:	e7d2      	b.n	80288ca <MOVEXY_mainStateMachine(unsigned long)+0x256>
 8028924:	490e      	ldr	r1, [pc, #56]	; (8028960 <MOVEXY_mainStateMachine(unsigned long)+0x2ec>)
 8028926:	e7d0      	b.n	80288ca <MOVEXY_mainStateMachine(unsigned long)+0x256>
 8028928:	480d      	ldr	r0, [pc, #52]	; (8028960 <MOVEXY_mainStateMachine(unsigned long)+0x2ec>)
 802892a:	212f      	movs	r1, #47	; 0x2f
 802892c:	f016 fd17 	bl	803f35e <strrchr>
 8028930:	b320      	cbz	r0, 802897c <MOVEXY_mainStateMachine(unsigned long)+0x308>
 8028932:	480b      	ldr	r0, [pc, #44]	; (8028960 <MOVEXY_mainStateMachine(unsigned long)+0x2ec>)
 8028934:	212f      	movs	r1, #47	; 0x2f
 8028936:	f016 fd12 	bl	803f35e <strrchr>
 802893a:	3001      	adds	r0, #1
 802893c:	4b0d      	ldr	r3, [pc, #52]	; (8028974 <MOVEXY_mainStateMachine(unsigned long)+0x300>)
 802893e:	4601      	mov	r1, r0
 8028940:	f240 121b 	movw	r2, #283	; 0x11b
 8028944:	2000      	movs	r0, #0
 8028946:	f7f9 ff27 	bl	8022798 <DEBUG_logMsg>
 802894a:	2302      	movs	r3, #2
 802894c:	7023      	strb	r3, [r4, #0]
 802894e:	e6bc      	b.n	80286ca <MOVEXY_mainStateMachine(unsigned long)+0x56>
 8028950:	20004d60 	.word	0x20004d60
 8028954:	20004d00 	.word	0x20004d00
 8028958:	2000f630 	.word	0x2000f630
 802895c:	20004d34 	.word	0x20004d34
 8028960:	080454d8 	.word	0x080454d8
 8028964:	08045518 	.word	0x08045518
 8028968:	20004d74 	.word	0x20004d74
 802896c:	408f4000 	.word	0x408f4000
 8028970:	08047660 	.word	0x08047660
 8028974:	0804552c 	.word	0x0804552c
 8028978:	20004ce4 	.word	0x20004ce4
 802897c:	4806      	ldr	r0, [pc, #24]	; (8028998 <MOVEXY_mainStateMachine(unsigned long)+0x324>)
 802897e:	215c      	movs	r1, #92	; 0x5c
 8028980:	f016 fced 	bl	803f35e <strrchr>
 8028984:	b128      	cbz	r0, 8028992 <MOVEXY_mainStateMachine(unsigned long)+0x31e>
 8028986:	4804      	ldr	r0, [pc, #16]	; (8028998 <MOVEXY_mainStateMachine(unsigned long)+0x324>)
 8028988:	215c      	movs	r1, #92	; 0x5c
 802898a:	f016 fce8 	bl	803f35e <strrchr>
 802898e:	3001      	adds	r0, #1
 8028990:	e7d4      	b.n	802893c <MOVEXY_mainStateMachine(unsigned long)+0x2c8>
 8028992:	4801      	ldr	r0, [pc, #4]	; (8028998 <MOVEXY_mainStateMachine(unsigned long)+0x324>)
 8028994:	e7d2      	b.n	802893c <MOVEXY_mainStateMachine(unsigned long)+0x2c8>
 8028996:	bf00      	nop
 8028998:	080454d8 	.word	0x080454d8

0802899c <MOVEXY_teardown()>:
 802899c:	b538      	push	{r3, r4, r5, lr}
 802899e:	4d09      	ldr	r5, [pc, #36]	; (80289c4 <MOVEXY_teardown()+0x28>)
 80289a0:	4909      	ldr	r1, [pc, #36]	; (80289c8 <MOVEXY_teardown()+0x2c>)
 80289a2:	4604      	mov	r4, r0
 80289a4:	6868      	ldr	r0, [r5, #4]
 80289a6:	f7fa fb05 	bl	8022fb4 <AxisBase::removeDataSubscriber(SubscriberBase*)>
 80289aa:	6868      	ldr	r0, [r5, #4]
 80289ac:	6803      	ldr	r3, [r0, #0]
 80289ae:	2219      	movs	r2, #25
 80289b0:	685b      	ldr	r3, [r3, #4]
 80289b2:	2100      	movs	r1, #0
 80289b4:	4798      	blx	r3
 80289b6:	4620      	mov	r0, r4
 80289b8:	2101      	movs	r1, #1
 80289ba:	f003 f987 	bl	802bccc <TaskStatus::TaskStatus(TaskStatus::Result_e)>
 80289be:	4620      	mov	r0, r4
 80289c0:	bd38      	pop	{r3, r4, r5, pc}
 80289c2:	bf00      	nop
 80289c4:	20004d00 	.word	0x20004d00
 80289c8:	20004d34 	.word	0x20004d34

080289cc <MOVEXY_squareProgressEventHandler(void*)>:
 80289cc:	f44f 7080 	mov.w	r0, #256	; 0x100
 80289d0:	f7fc bf00 	b.w	80257d4 <ANTCTRL_setEvent>

080289d4 <MOVEXY_setup()>:
 80289d4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80289d8:	ed2d 8b04 	vpush	{d8-d9}
 80289dc:	f8df a294 	ldr.w	sl, [pc, #660]	; 8028c74 <MOVEXY_setup()+0x2a0>
 80289e0:	4a96      	ldr	r2, [pc, #600]	; (8028c3c <MOVEXY_setup()+0x268>)
 80289e2:	f89a 100c 	ldrb.w	r1, [sl, #12]
 80289e6:	b08d      	sub	sp, #52	; 0x34
 80289e8:	2700      	movs	r7, #0
 80289ea:	4605      	mov	r5, r0
 80289ec:	4894      	ldr	r0, [pc, #592]	; (8028c40 <MOVEXY_setup()+0x26c>)
 80289ee:	7017      	strb	r7, [r2, #0]
 80289f0:	f7fa f95a 	bl	8022ca8 <Robot::setBusVoltage(unsigned char)>
 80289f4:	f9ba 3005 	ldrsh.w	r3, [sl, #5]
 80289f8:	eddf 6a92 	vldr	s13, [pc, #584]	; 8028c44 <MOVEXY_setup()+0x270>
 80289fc:	f89a 800a 	ldrb.w	r8, [sl, #10]
 8028a00:	f89a 6000 	ldrb.w	r6, [sl]
 8028a04:	ed9f 7a90 	vldr	s14, [pc, #576]	; 8028c48 <MOVEXY_setup()+0x274>
 8028a08:	f89a 4002 	ldrb.w	r4, [sl, #2]
 8028a0c:	ee07 3a90 	vmov	s15, r3
 8028a10:	f9ba 3003 	ldrsh.w	r3, [sl, #3]
 8028a14:	ee08 3a10 	vmov	s16, r3
 8028a18:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8028a1c:	eeb8 8ac8 	vcvt.f32.s32	s16, s16
 8028a20:	f89a 3007 	ldrb.w	r3, [sl, #7]
 8028a24:	9301      	str	r3, [sp, #4]
 8028a26:	eea7 8aa6 	vfma.f32	s16, s15, s13
 8028a2a:	ebb8 0807 	subs.w	r8, r8, r7
 8028a2e:	f89a 3008 	ldrb.w	r3, [sl, #8]
 8028a32:	bf18      	it	ne
 8028a34:	f04f 0801 	movne.w	r8, #1
 8028a38:	2e01      	cmp	r6, #1
 8028a3a:	ee08 3a90 	vmov	s17, r3
 8028a3e:	ee28 8a07 	vmul.f32	s16, s16, s14
 8028a42:	f000 80da 	beq.w	8028bfa <MOVEXY_setup()+0x226>
 8028a46:	ed9f 9a81 	vldr	s18, [pc, #516]	; 8028c4c <MOVEXY_setup()+0x278>
 8028a4a:	eddf 9a81 	vldr	s19, [pc, #516]	; 8028c50 <MOVEXY_setup()+0x27c>
 8028a4e:	2c00      	cmp	r4, #0
 8028a50:	f04f 0302 	mov.w	r3, #2
 8028a54:	bf08      	it	eq
 8028a56:	eef0 9a49 	vmoveq.f32	s19, s18
 8028a5a:	bf0c      	ite	eq
 8028a5c:	f04f 0b00 	moveq.w	fp, #0
 8028a60:	f04f 0b01 	movne.w	fp, #1
 8028a64:	9302      	str	r3, [sp, #8]
 8028a66:	f04f 0909 	mov.w	r9, #9
 8028a6a:	2204      	movs	r2, #4
 8028a6c:	4974      	ldr	r1, [pc, #464]	; (8028c40 <MOVEXY_setup()+0x26c>)
 8028a6e:	a805      	add	r0, sp, #20
 8028a70:	f7fa f83a 	bl	8022ae8 <Robot::getAxis(ROBOT_axisIndex_t)>
 8028a74:	f89d 2018 	ldrb.w	r2, [sp, #24]
 8028a78:	b10a      	cbz	r2, 8028a7e <MOVEXY_setup()+0xaa>
 8028a7a:	9b05      	ldr	r3, [sp, #20]
 8028a7c:	9303      	str	r3, [sp, #12]
 8028a7e:	eddd 6a01 	vldr	s13, [sp, #4]
 8028a82:	ed9f 7a74 	vldr	s14, [pc, #464]	; 8028c54 <MOVEXY_setup()+0x280>
 8028a86:	eddf 7a70 	vldr	s15, [pc, #448]	; 8028c48 <MOVEXY_setup()+0x274>
 8028a8a:	eef8 8a68 	vcvt.f32.u32	s17, s17
 8028a8e:	eeb8 0a66 	vcvt.f32.u32	s0, s13
 8028a92:	eea8 0a87 	vfma.f32	s0, s17, s14
 8028a96:	ee20 0a27 	vmul.f32	s0, s0, s15
 8028a9a:	f016 f84d 	bl	803eb38 <fabs(float)>
 8028a9e:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8028aa2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028aa6:	eef0 8a40 	vmov.f32	s17, s0
 8028aaa:	f300 8096 	bgt.w	8028bda <MOVEXY_setup()+0x206>
 8028aae:	2700      	movs	r7, #0
 8028ab0:	4863      	ldr	r0, [pc, #396]	; (8028c40 <MOVEXY_setup()+0x26c>)
 8028ab2:	f7f9 ffff 	bl	8022ab4 <Robot::getArticulation()>
 8028ab6:	f5b0 7f80 	cmp.w	r0, #256	; 0x100
 8028aba:	d07c      	beq.n	8028bb6 <MOVEXY_setup()+0x1e2>
 8028abc:	f5b0 7f00 	cmp.w	r0, #512	; 0x200
 8028ac0:	d079      	beq.n	8028bb6 <MOVEXY_setup()+0x1e2>
 8028ac2:	f5b0 6f80 	cmp.w	r0, #1024	; 0x400
 8028ac6:	d076      	beq.n	8028bb6 <MOVEXY_setup()+0x1e2>
 8028ac8:	2e01      	cmp	r6, #1
 8028aca:	f000 80aa 	beq.w	8028c22 <MOVEXY_setup()+0x24e>
 8028ace:	f04f 0c08 	mov.w	ip, #8
 8028ad2:	2c00      	cmp	r4, #0
 8028ad4:	f040 80aa 	bne.w	8028c2c <MOVEXY_setup()+0x258>
 8028ad8:	46e6      	mov	lr, ip
 8028ada:	4c5f      	ldr	r4, [pc, #380]	; (8028c58 <MOVEXY_setup()+0x284>)
 8028adc:	f89a 0009 	ldrb.w	r0, [sl, #9]
 8028ae0:	9b03      	ldr	r3, [sp, #12]
 8028ae2:	495e      	ldr	r1, [pc, #376]	; (8028c5c <MOVEXY_setup()+0x288>)
 8028ae4:	4a5e      	ldr	r2, [pc, #376]	; (8028c60 <MOVEXY_setup()+0x28c>)
 8028ae6:	eddf 7a5f 	vldr	s15, [pc, #380]	; 8028c64 <MOVEXY_setup()+0x290>
 8028aea:	f8df a18c 	ldr.w	sl, [pc, #396]	; 8028c78 <MOVEXY_setup()+0x2a4>
 8028aee:	6063      	str	r3, [r4, #4]
 8028af0:	9b01      	ldr	r3, [sp, #4]
 8028af2:	f884 3026 	strb.w	r3, [r4, #38]	; 0x26
 8028af6:	2800      	cmp	r0, #0
 8028af8:	bf08      	it	eq
 8028afa:	460a      	moveq	r2, r1
 8028afc:	9b02      	ldr	r3, [sp, #8]
 8028afe:	edc4 7a07 	vstr	s15, [r4, #28]
 8028b02:	e9c4 ce0a 	strd	ip, lr, [r4, #40]	; 0x28
 8028b06:	eeb0 0a48 	vmov.f32	s0, s16
 8028b0a:	4649      	mov	r1, r9
 8028b0c:	f8ca 200c 	str.w	r2, [sl, #12]
 8028b10:	f884 3027 	strb.w	r3, [r4, #39]	; 0x27
 8028b14:	2200      	movs	r2, #0
 8028b16:	484a      	ldr	r0, [pc, #296]	; (8028c40 <MOVEXY_setup()+0x26c>)
 8028b18:	f884 9000 	strb.w	r9, [r4]
 8028b1c:	f884 8008 	strb.w	r8, [r4, #8]
 8028b20:	7266      	strb	r6, [r4, #9]
 8028b22:	ed84 8a03 	vstr	s16, [r4, #12]
 8028b26:	ed84 9a04 	vstr	s18, [r4, #16]
 8028b2a:	edc4 9a05 	vstr	s19, [r4, #20]
 8028b2e:	f884 b018 	strb.w	fp, [r4, #24]
 8028b32:	edc4 8a08 	vstr	s17, [r4, #32]
 8028b36:	84a7      	strh	r7, [r4, #36]	; 0x24
 8028b38:	f7fa f8ac 	bl	8022c94 <Robot::estimateMoveTime(ROBOT_axisIndex_t, float, AXIS_mode_t)>
 8028b3c:	f8da 300c 	ldr.w	r3, [sl, #12]
 8028b40:	f500 529c 	add.w	r2, r0, #4992	; 0x1380
 8028b44:	3208      	adds	r2, #8
 8028b46:	f894 0027 	ldrb.w	r0, [r4, #39]	; 0x27
 8028b4a:	635a      	str	r2, [r3, #52]	; 0x34
 8028b4c:	f006 facc 	bl	802f0e8 <CAMERA_activateProfile(CAMERA_configProfile_t)>
 8028b50:	6aa1      	ldr	r1, [r4, #40]	; 0x28
 8028b52:	483b      	ldr	r0, [pc, #236]	; (8028c40 <MOVEXY_setup()+0x26c>)
 8028b54:	f7f9 ffb2 	bl	8022abc <Robot::updateArticulation(Articulation::State_e)>
 8028b58:	6861      	ldr	r1, [r4, #4]
 8028b5a:	b311      	cbz	r1, 8028ba2 <MOVEXY_setup()+0x1ce>
 8028b5c:	680b      	ldr	r3, [r1, #0]
 8028b5e:	a805      	add	r0, sp, #20
 8028b60:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8028b62:	4798      	blx	r3
 8028b64:	6860      	ldr	r0, [r4, #4]
 8028b66:	6803      	ldr	r3, [r0, #0]
 8028b68:	2219      	movs	r2, #25
 8028b6a:	685b      	ldr	r3, [r3, #4]
 8028b6c:	2101      	movs	r1, #1
 8028b6e:	4798      	blx	r3
 8028b70:	9908      	ldr	r1, [sp, #32]
 8028b72:	483d      	ldr	r0, [pc, #244]	; (8028c68 <MOVEXY_setup()+0x294>)
 8028b74:	f007 ff72 	bl	8030a5c <AxisTelemetryMonitor::setEncoderCount(int)>
 8028b78:	483b      	ldr	r0, [pc, #236]	; (8028c68 <MOVEXY_setup()+0x294>)
 8028b7a:	f007 ff75 	bl	8030a68 <AxisTelemetryMonitor::resetOnUpdate()>
 8028b7e:	493a      	ldr	r1, [pc, #232]	; (8028c68 <MOVEXY_setup()+0x294>)
 8028b80:	6860      	ldr	r0, [r4, #4]
 8028b82:	f7fa fa13 	bl	8022fac <AxisBase::addDataSubscriber(SubscriberBase*)>
 8028b86:	ed94 0a08 	vldr	s0, [r4, #32]
 8028b8a:	6860      	ldr	r0, [r4, #4]
 8028b8c:	f7fa f9ae 	bl	8022eec <AxisBase::convertToEncoderCounts(float)>
 8028b90:	4601      	mov	r1, r0
 8028b92:	4835      	ldr	r0, [pc, #212]	; (8028c68 <MOVEXY_setup()+0x294>)
 8028b94:	f007 ff5e 	bl	8030a54 <AxisTelemetryMonitor::setUpdateInterval(unsigned int)>
 8028b98:	4a33      	ldr	r2, [pc, #204]	; (8028c68 <MOVEXY_setup()+0x294>)
 8028b9a:	4934      	ldr	r1, [pc, #208]	; (8028c6c <MOVEXY_setup()+0x298>)
 8028b9c:	4610      	mov	r0, r2
 8028b9e:	f007 ff0f 	bl	80309c0 <ProgressMonitor::registerUpdateCallback(void (*)(void*), void*)>
 8028ba2:	2101      	movs	r1, #1
 8028ba4:	4628      	mov	r0, r5
 8028ba6:	f003 f891 	bl	802bccc <TaskStatus::TaskStatus(TaskStatus::Result_e)>
 8028baa:	4628      	mov	r0, r5
 8028bac:	b00d      	add	sp, #52	; 0x34
 8028bae:	ecbd 8b04 	vpop	{d8-d9}
 8028bb2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8028bb6:	2e01      	cmp	r6, #1
 8028bb8:	d008      	beq.n	8028bcc <MOVEXY_setup()+0x1f8>
 8028bba:	2e02      	cmp	r6, #2
 8028bbc:	d039      	beq.n	8028c32 <MOVEXY_setup()+0x25e>
 8028bbe:	f04f 0c08 	mov.w	ip, #8
 8028bc2:	2c00      	cmp	r4, #0
 8028bc4:	d088      	beq.n	8028ad8 <MOVEXY_setup()+0x104>
 8028bc6:	f44f 7e80 	mov.w	lr, #256	; 0x100
 8028bca:	e786      	b.n	8028ada <MOVEXY_setup()+0x106>
 8028bcc:	f44f 7c00 	mov.w	ip, #512	; 0x200
 8028bd0:	2c00      	cmp	r4, #0
 8028bd2:	d081      	beq.n	8028ad8 <MOVEXY_setup()+0x104>
 8028bd4:	f44f 7e80 	mov.w	lr, #256	; 0x100
 8028bd8:	e77f      	b.n	8028ada <MOVEXY_setup()+0x106>
 8028bda:	eeb0 0a48 	vmov.f32	s0, s16
 8028bde:	f015 ffab 	bl	803eb38 <fabs(float)>
 8028be2:	ee80 0a28 	vdiv.f32	s0, s0, s17
 8028be6:	f016 f827 	bl	803ec38 <round(float)>
 8028bea:	eebc 0ac0 	vcvt.u32.f32	s0, s0
 8028bee:	ee10 3a10 	vmov	r3, s0
 8028bf2:	b9a4      	cbnz	r4, 8028c1e <MOVEXY_setup()+0x24a>
 8028bf4:	1e5f      	subs	r7, r3, #1
 8028bf6:	b2bf      	uxth	r7, r7
 8028bf8:	e75a      	b.n	8028ab0 <MOVEXY_setup()+0xdc>
 8028bfa:	ed9f 9a1d 	vldr	s18, [pc, #116]	; 8028c70 <MOVEXY_setup()+0x29c>
 8028bfe:	eddf 9a14 	vldr	s19, [pc, #80]	; 8028c50 <MOVEXY_setup()+0x27c>
 8028c02:	9602      	str	r6, [sp, #8]
 8028c04:	2c00      	cmp	r4, #0
 8028c06:	463a      	mov	r2, r7
 8028c08:	bf0c      	ite	eq
 8028c0a:	f04f 0b00 	moveq.w	fp, #0
 8028c0e:	f04f 0b01 	movne.w	fp, #1
 8028c12:	bf08      	it	eq
 8028c14:	eef0 9a49 	vmoveq.f32	s19, s18
 8028c18:	f04f 0908 	mov.w	r9, #8
 8028c1c:	e726      	b.n	8028a6c <MOVEXY_setup()+0x98>
 8028c1e:	b29f      	uxth	r7, r3
 8028c20:	e746      	b.n	8028ab0 <MOVEXY_setup()+0xdc>
 8028c22:	f04f 0c04 	mov.w	ip, #4
 8028c26:	2c00      	cmp	r4, #0
 8028c28:	f43f af56 	beq.w	8028ad8 <MOVEXY_setup()+0x104>
 8028c2c:	f04f 0e02 	mov.w	lr, #2
 8028c30:	e753      	b.n	8028ada <MOVEXY_setup()+0x106>
 8028c32:	f44f 6c80 	mov.w	ip, #1024	; 0x400
 8028c36:	2c00      	cmp	r4, #0
 8028c38:	d1c5      	bne.n	8028bc6 <MOVEXY_setup()+0x1f2>
 8028c3a:	e74d      	b.n	8028ad8 <MOVEXY_setup()+0x104>
 8028c3c:	20004d30 	.word	0x20004d30
 8028c40:	2000f630 	.word	0x2000f630
 8028c44:	38000000 	.word	0x38000000
 8028c48:	3f39999a 	.word	0x3f39999a
 8028c4c:	42800000 	.word	0x42800000
 8028c50:	42a00000 	.word	0x42a00000
 8028c54:	3b800000 	.word	0x3b800000
 8028c58:	20004d00 	.word	0x20004d00
 8028c5c:	20000c4c 	.word	0x20000c4c
 8028c60:	20000cfc 	.word	0x20000cfc
 8028c64:	00000000 	.word	0x00000000
 8028c68:	20004d34 	.word	0x20004d34
 8028c6c:	080289cd 	.word	0x080289cd
 8028c70:	42b80000 	.word	0x42b80000
 8028c74:	20004d74 	.word	0x20004d74
 8028c78:	20000d7c 	.word	0x20000d7c
 8028c7c:	81010cc9 	.word	0x81010cc9
 8028c80:	81afb0b0 	.word	0x81afb0b0
 8028c84:	00000000 	.word	0x00000000

08028c88 <MOVEXY_errorStateMachine(unsigned long)>:
 8028c88:	b530      	push	{r4, r5, lr}
 8028c8a:	4d42      	ldr	r5, [pc, #264]	; (8028d94 <MOVEXY_errorStateMachine(unsigned long)+0x10c>)
 8028c8c:	b087      	sub	sp, #28
 8028c8e:	2100      	movs	r1, #0
 8028c90:	4604      	mov	r4, r0
 8028c92:	f003 f81b 	bl	802bccc <TaskStatus::TaskStatus(TaskStatus::Result_e)>
 8028c96:	796b      	ldrb	r3, [r5, #5]
 8028c98:	b133      	cbz	r3, 8028ca8 <MOVEXY_errorStateMachine(unsigned long)+0x20>
 8028c9a:	2b01      	cmp	r3, #1
 8028c9c:	d000      	beq.n	8028ca0 <MOVEXY_errorStateMachine(unsigned long)+0x18>
 8028c9e:	2302      	movs	r3, #2
 8028ca0:	4620      	mov	r0, r4
 8028ca2:	7023      	strb	r3, [r4, #0]
 8028ca4:	b007      	add	sp, #28
 8028ca6:	bd30      	pop	{r4, r5, pc}
 8028ca8:	a802      	add	r0, sp, #8
 8028caa:	2101      	movs	r1, #1
 8028cac:	f003 f80e 	bl	802bccc <TaskStatus::TaskStatus(TaskStatus::Result_e)>
 8028cb0:	782b      	ldrb	r3, [r5, #0]
 8028cb2:	2b05      	cmp	r3, #5
 8028cb4:	d00a      	beq.n	8028ccc <MOVEXY_errorStateMachine(unsigned long)+0x44>
 8028cb6:	2b06      	cmp	r3, #6
 8028cb8:	d00d      	beq.n	8028cd6 <MOVEXY_errorStateMachine(unsigned long)+0x4e>
 8028cba:	2b03      	cmp	r3, #3
 8028cbc:	d00b      	beq.n	8028cd6 <MOVEXY_errorStateMachine(unsigned long)+0x4e>
 8028cbe:	a902      	add	r1, sp, #8
 8028cc0:	4620      	mov	r0, r4
 8028cc2:	f003 f819 	bl	802bcf8 <TaskStatus::operator=(TaskStatus const&)>
 8028cc6:	4620      	mov	r0, r4
 8028cc8:	b007      	add	sp, #28
 8028cca:	bd30      	pop	{r4, r5, pc}
 8028ccc:	2302      	movs	r3, #2
 8028cce:	9303      	str	r3, [sp, #12]
 8028cd0:	f88d 3008 	strb.w	r3, [sp, #8]
 8028cd4:	e7f3      	b.n	8028cbe <MOVEXY_errorStateMachine(unsigned long)+0x36>
 8028cd6:	79e9      	ldrb	r1, [r5, #7]
 8028cd8:	bb49      	cbnz	r1, 8028d2e <MOVEXY_errorStateMachine(unsigned long)+0xa6>
 8028cda:	4d2f      	ldr	r5, [pc, #188]	; (8028d98 <MOVEXY_errorStateMachine(unsigned long)+0x110>)
 8028cdc:	4b2f      	ldr	r3, [pc, #188]	; (8028d9c <MOVEXY_errorStateMachine(unsigned long)+0x114>)
 8028cde:	a804      	add	r0, sp, #16
 8028ce0:	781a      	ldrb	r2, [r3, #0]
 8028ce2:	f7fe ff9d 	bl	8027c20 <ACTIONS_stop(bool, ROBOT_axisIndex_t)>
 8028ce6:	a904      	add	r1, sp, #16
 8028ce8:	a802      	add	r0, sp, #8
 8028cea:	f003 f805 	bl	802bcf8 <TaskStatus::operator=(TaskStatus const&)>
 8028cee:	782b      	ldrb	r3, [r5, #0]
 8028cf0:	482b      	ldr	r0, [pc, #172]	; (8028da0 <MOVEXY_errorStateMachine(unsigned long)+0x118>)
 8028cf2:	2b0e      	cmp	r3, #14
 8028cf4:	f04f 012f 	mov.w	r1, #47	; 0x2f
 8028cf8:	d022      	beq.n	8028d40 <MOVEXY_errorStateMachine(unsigned long)+0xb8>
 8028cfa:	f016 fb30 	bl	803f35e <strrchr>
 8028cfe:	b370      	cbz	r0, 8028d5e <MOVEXY_errorStateMachine(unsigned long)+0xd6>
 8028d00:	212f      	movs	r1, #47	; 0x2f
 8028d02:	4827      	ldr	r0, [pc, #156]	; (8028da0 <MOVEXY_errorStateMachine(unsigned long)+0x118>)
 8028d04:	f016 fb2b 	bl	803f35e <strrchr>
 8028d08:	1c41      	adds	r1, r0, #1
 8028d0a:	782b      	ldrb	r3, [r5, #0]
 8028d0c:	9300      	str	r3, [sp, #0]
 8028d0e:	f44f 72b0 	mov.w	r2, #352	; 0x160
 8028d12:	4b24      	ldr	r3, [pc, #144]	; (8028da4 <MOVEXY_errorStateMachine(unsigned long)+0x11c>)
 8028d14:	2002      	movs	r0, #2
 8028d16:	f7f9 fd3f 	bl	8022798 <DEBUG_logMsg>
 8028d1a:	f89d 3008 	ldrb.w	r3, [sp, #8]
 8028d1e:	2b01      	cmp	r3, #1
 8028d20:	d1cd      	bne.n	8028cbe <MOVEXY_errorStateMachine(unsigned long)+0x36>
 8028d22:	782b      	ldrb	r3, [r5, #0]
 8028d24:	9303      	str	r3, [sp, #12]
 8028d26:	2302      	movs	r3, #2
 8028d28:	f88d 3008 	strb.w	r3, [sp, #8]
 8028d2c:	e7c7      	b.n	8028cbe <MOVEXY_errorStateMachine(unsigned long)+0x36>
 8028d2e:	68ab      	ldr	r3, [r5, #8]
 8028d30:	4d19      	ldr	r5, [pc, #100]	; (8028d98 <MOVEXY_errorStateMachine(unsigned long)+0x110>)
 8028d32:	f413 7f00 	tst.w	r3, #512	; 0x200
 8028d36:	bf14      	ite	ne
 8028d38:	230e      	movne	r3, #14
 8028d3a:	2305      	moveq	r3, #5
 8028d3c:	702b      	strb	r3, [r5, #0]
 8028d3e:	e7cd      	b.n	8028cdc <MOVEXY_errorStateMachine(unsigned long)+0x54>
 8028d40:	f016 fb0d 	bl	803f35e <strrchr>
 8028d44:	b1b0      	cbz	r0, 8028d74 <MOVEXY_errorStateMachine(unsigned long)+0xec>
 8028d46:	212f      	movs	r1, #47	; 0x2f
 8028d48:	4815      	ldr	r0, [pc, #84]	; (8028da0 <MOVEXY_errorStateMachine(unsigned long)+0x118>)
 8028d4a:	f016 fb08 	bl	803f35e <strrchr>
 8028d4e:	1c41      	adds	r1, r0, #1
 8028d50:	4b15      	ldr	r3, [pc, #84]	; (8028da8 <MOVEXY_errorStateMachine(unsigned long)+0x120>)
 8028d52:	f44f 72ae 	mov.w	r2, #348	; 0x15c
 8028d56:	2002      	movs	r0, #2
 8028d58:	f7f9 fd1e 	bl	8022798 <DEBUG_logMsg>
 8028d5c:	e7dd      	b.n	8028d1a <MOVEXY_errorStateMachine(unsigned long)+0x92>
 8028d5e:	4810      	ldr	r0, [pc, #64]	; (8028da0 <MOVEXY_errorStateMachine(unsigned long)+0x118>)
 8028d60:	215c      	movs	r1, #92	; 0x5c
 8028d62:	f016 fafc 	bl	803f35e <strrchr>
 8028d66:	b180      	cbz	r0, 8028d8a <MOVEXY_errorStateMachine(unsigned long)+0x102>
 8028d68:	215c      	movs	r1, #92	; 0x5c
 8028d6a:	480d      	ldr	r0, [pc, #52]	; (8028da0 <MOVEXY_errorStateMachine(unsigned long)+0x118>)
 8028d6c:	f016 faf7 	bl	803f35e <strrchr>
 8028d70:	1c41      	adds	r1, r0, #1
 8028d72:	e7ca      	b.n	8028d0a <MOVEXY_errorStateMachine(unsigned long)+0x82>
 8028d74:	480a      	ldr	r0, [pc, #40]	; (8028da0 <MOVEXY_errorStateMachine(unsigned long)+0x118>)
 8028d76:	215c      	movs	r1, #92	; 0x5c
 8028d78:	f016 faf1 	bl	803f35e <strrchr>
 8028d7c:	b138      	cbz	r0, 8028d8e <MOVEXY_errorStateMachine(unsigned long)+0x106>
 8028d7e:	215c      	movs	r1, #92	; 0x5c
 8028d80:	4807      	ldr	r0, [pc, #28]	; (8028da0 <MOVEXY_errorStateMachine(unsigned long)+0x118>)
 8028d82:	f016 faec 	bl	803f35e <strrchr>
 8028d86:	1c41      	adds	r1, r0, #1
 8028d88:	e7e2      	b.n	8028d50 <MOVEXY_errorStateMachine(unsigned long)+0xc8>
 8028d8a:	4905      	ldr	r1, [pc, #20]	; (8028da0 <MOVEXY_errorStateMachine(unsigned long)+0x118>)
 8028d8c:	e7bd      	b.n	8028d0a <MOVEXY_errorStateMachine(unsigned long)+0x82>
 8028d8e:	4904      	ldr	r1, [pc, #16]	; (8028da0 <MOVEXY_errorStateMachine(unsigned long)+0x118>)
 8028d90:	e7de      	b.n	8028d50 <MOVEXY_errorStateMachine(unsigned long)+0xc8>
 8028d92:	bf00      	nop
 8028d94:	20004d60 	.word	0x20004d60
 8028d98:	20004d30 	.word	0x20004d30
 8028d9c:	20004d00 	.word	0x20004d00
 8028da0:	080454d8 	.word	0x080454d8
 8028da4:	0804555c 	.word	0x0804555c
 8028da8:	08045544 	.word	0x08045544

08028dac <MOVEXY_runTask(COMM_CCP_moveXY_t*, unsigned long, bool)>:
 8028dac:	b570      	push	{r4, r5, r6, lr}
 8028dae:	4616      	mov	r6, r2
 8028db0:	b084      	sub	sp, #16
 8028db2:	461d      	mov	r5, r3
 8028db4:	4604      	mov	r4, r0
 8028db6:	b123      	cbz	r3, 8028dc2 <MOVEXY_runTask(COMM_CCP_moveXY_t*, unsigned long, bool)+0x16>
 8028db8:	b189      	cbz	r1, 8028dde <MOVEXY_runTask(COMM_CCP_moveXY_t*, unsigned long, bool)+0x32>
 8028dba:	480c      	ldr	r0, [pc, #48]	; (8028dec <MOVEXY_runTask(COMM_CCP_moveXY_t*, unsigned long, bool)+0x40>)
 8028dbc:	220d      	movs	r2, #13
 8028dbe:	f016 fc20 	bl	803f602 <__aeabi_memcpy>
 8028dc2:	4a0b      	ldr	r2, [pc, #44]	; (8028df0 <MOVEXY_runTask(COMM_CCP_moveXY_t*, unsigned long, bool)+0x44>)
 8028dc4:	490b      	ldr	r1, [pc, #44]	; (8028df4 <MOVEXY_runTask(COMM_CCP_moveXY_t*, unsigned long, bool)+0x48>)
 8028dc6:	9500      	str	r5, [sp, #0]
 8028dc8:	4633      	mov	r3, r6
 8028dca:	a802      	add	r0, sp, #8
 8028dcc:	f7ff f8a6 	bl	8027f1c <SM_RUNNER_runStateMachine>
 8028dd0:	a902      	add	r1, sp, #8
 8028dd2:	4620      	mov	r0, r4
 8028dd4:	f002 ff88 	bl	802bce8 <TaskStatus::TaskStatus(TaskStatus const&)>
 8028dd8:	4620      	mov	r0, r4
 8028dda:	b004      	add	sp, #16
 8028ddc:	bd70      	pop	{r4, r5, r6, pc}
 8028dde:	2209      	movs	r2, #9
 8028de0:	2102      	movs	r1, #2
 8028de2:	f002 ff79 	bl	802bcd8 <TaskStatus::TaskStatus(TaskStatus::Result_e, unsigned int)>
 8028de6:	4620      	mov	r0, r4
 8028de8:	b004      	add	sp, #16
 8028dea:	bd70      	pop	{r4, r5, r6, pc}
 8028dec:	20004d74 	.word	0x20004d74
 8028df0:	20004d60 	.word	0x20004d60
 8028df4:	20000d7c 	.word	0x20000d7c

08028df8 <_GLOBAL__sub_I__Z14MOVEXY_runTaskP17COMM_CCP_moveXY_tmb>:
 8028df8:	4801      	ldr	r0, [pc, #4]	; (8028e00 <_GLOBAL__sub_I__Z14MOVEXY_runTaskP17COMM_CCP_moveXY_tmb+0x8>)
 8028dfa:	f007 be1f 	b.w	8030a3c <AxisTelemetryMonitor::AxisTelemetryMonitor()>
 8028dfe:	bf00      	nop
 8028e00:	20004d34 	.word	0x20004d34

08028e04 <longDurationAlarmTimerCallback(unsigned int, void*)>:
 8028e04:	4b01      	ldr	r3, [pc, #4]	; (8028e0c <longDurationAlarmTimerCallback(unsigned int, void*)+0x8>)
 8028e06:	2201      	movs	r2, #1
 8028e08:	711a      	strb	r2, [r3, #4]
 8028e0a:	4770      	bx	lr
 8028e0c:	20004d88 	.word	0x20004d88

08028e10 <MOVE_transitionSetup()>:
 8028e10:	b538      	push	{r3, r4, r5, lr}
 8028e12:	4a05      	ldr	r2, [pc, #20]	; (8028e28 <MOVE_transitionSetup()+0x18>)
 8028e14:	4d05      	ldr	r5, [pc, #20]	; (8028e2c <MOVE_transitionSetup()+0x1c>)
 8028e16:	2300      	movs	r3, #0
 8028e18:	4604      	mov	r4, r0
 8028e1a:	2101      	movs	r1, #1
 8028e1c:	602b      	str	r3, [r5, #0]
 8028e1e:	7113      	strb	r3, [r2, #4]
 8028e20:	f002 ff54 	bl	802bccc <TaskStatus::TaskStatus(TaskStatus::Result_e)>
 8028e24:	4620      	mov	r0, r4
 8028e26:	bd38      	pop	{r3, r4, r5, pc}
 8028e28:	20004d88 	.word	0x20004d88
 8028e2c:	20004d84 	.word	0x20004d84

08028e30 <MOVE_transitionErrorStateMachine(unsigned long)>:
 8028e30:	b570      	push	{r4, r5, r6, lr}
 8028e32:	460d      	mov	r5, r1
 8028e34:	b08a      	sub	sp, #40	; 0x28
 8028e36:	2100      	movs	r1, #0
 8028e38:	4604      	mov	r4, r0
 8028e3a:	f002 ff47 	bl	802bccc <TaskStatus::TaskStatus(TaskStatus::Result_e)>
 8028e3e:	4ab0      	ldr	r2, [pc, #704]	; (8029100 <MOVE_transitionErrorStateMachine(unsigned long)+0x2d0>)
 8028e40:	7953      	ldrb	r3, [r2, #5]
 8028e42:	2b08      	cmp	r3, #8
 8028e44:	f200 817a 	bhi.w	802913c <MOVE_transitionErrorStateMachine(unsigned long)+0x30c>
 8028e48:	e8df f003 	tbb	[pc, r3]
 8028e4c:	91721911 	.word	0x91721911
 8028e50:	b7a56153 	.word	0xb7a56153
 8028e54:	05          	.byte	0x05
 8028e55:	00          	.byte	0x00
 8028e56:	2301      	movs	r3, #1
 8028e58:	48a9      	ldr	r0, [pc, #676]	; (8029100 <MOVE_transitionErrorStateMachine(unsigned long)+0x2d0>)
 8028e5a:	7023      	strb	r3, [r4, #0]
 8028e5c:	2100      	movs	r1, #0
 8028e5e:	f7ff fa3d 	bl	80282dc <SM_RUNNER_setError>
 8028e62:	48a7      	ldr	r0, [pc, #668]	; (8029100 <MOVE_transitionErrorStateMachine(unsigned long)+0x2d0>)
 8028e64:	f7ff fa4e 	bl	8028304 <SM_RUNNER_restart>
 8028e68:	4620      	mov	r0, r4
 8028e6a:	b00a      	add	sp, #40	; 0x28
 8028e6c:	bd70      	pop	{r4, r5, r6, pc}
 8028e6e:	4ba5      	ldr	r3, [pc, #660]	; (8029104 <MOVE_transitionErrorStateMachine(unsigned long)+0x2d4>)
 8028e70:	681b      	ldr	r3, [r3, #0]
 8028e72:	2b00      	cmp	r3, #0
 8028e74:	d038      	beq.n	8028ee8 <MOVE_transitionErrorStateMachine(unsigned long)+0xb8>
 8028e76:	2202      	movs	r2, #2
 8028e78:	6063      	str	r3, [r4, #4]
 8028e7a:	7022      	strb	r2, [r4, #0]
 8028e7c:	e7f4      	b.n	8028e68 <MOVE_transitionErrorStateMachine(unsigned long)+0x38>
 8028e7e:	2101      	movs	r1, #1
 8028e80:	a806      	add	r0, sp, #24
 8028e82:	f008 fdbf 	bl	8031a04 <AWARENESS_getAlarmData(IMU_unsolictedAlarm_t)>
 8028e86:	48a0      	ldr	r0, [pc, #640]	; (8029108 <MOVE_transitionErrorStateMachine(unsigned long)+0x2d8>)
 8028e88:	212f      	movs	r1, #47	; 0x2f
 8028e8a:	f016 fa68 	bl	803f35e <strrchr>
 8028e8e:	2800      	cmp	r0, #0
 8028e90:	f000 80e9 	beq.w	8029066 <MOVE_transitionErrorStateMachine(unsigned long)+0x236>
 8028e94:	489c      	ldr	r0, [pc, #624]	; (8029108 <MOVE_transitionErrorStateMachine(unsigned long)+0x2d8>)
 8028e96:	212f      	movs	r1, #47	; 0x2f
 8028e98:	f016 fa61 	bl	803f35e <strrchr>
 8028e9c:	1c45      	adds	r5, r0, #1
 8028e9e:	9808      	ldr	r0, [sp, #32]
 8028ea0:	f015 fadb 	bl	803e45a <__aeabi_f2d>
 8028ea4:	4602      	mov	r2, r0
 8028ea6:	460b      	mov	r3, r1
 8028ea8:	9807      	ldr	r0, [sp, #28]
 8028eaa:	e9cd 2304 	strd	r2, r3, [sp, #16]
 8028eae:	f015 fad4 	bl	803e45a <__aeabi_f2d>
 8028eb2:	4602      	mov	r2, r0
 8028eb4:	460b      	mov	r3, r1
 8028eb6:	9806      	ldr	r0, [sp, #24]
 8028eb8:	e9cd 2302 	strd	r2, r3, [sp, #8]
 8028ebc:	f015 facd 	bl	803e45a <__aeabi_f2d>
 8028ec0:	4b92      	ldr	r3, [pc, #584]	; (802910c <MOVE_transitionErrorStateMachine(unsigned long)+0x2dc>)
 8028ec2:	e9cd 0100 	strd	r0, r1, [sp]
 8028ec6:	22fd      	movs	r2, #253	; 0xfd
 8028ec8:	4629      	mov	r1, r5
 8028eca:	2002      	movs	r0, #2
 8028ecc:	f7f9 fc64 	bl	8022798 <DEBUG_logMsg>
 8028ed0:	488f      	ldr	r0, [pc, #572]	; (8029110 <MOVE_transitionErrorStateMachine(unsigned long)+0x2e0>)
 8028ed2:	4990      	ldr	r1, [pc, #576]	; (8029114 <MOVE_transitionErrorStateMachine(unsigned long)+0x2e4>)
 8028ed4:	2300      	movs	r3, #0
 8028ed6:	7103      	strb	r3, [r0, #4]
 8028ed8:	461a      	mov	r2, r3
 8028eda:	f240 20ee 	movw	r0, #750	; 0x2ee
 8028ede:	f004 f9f5 	bl	802d2cc <TIME_setTimeout>
 8028ee2:	28ff      	cmp	r0, #255	; 0xff
 8028ee4:	f000 80ca 	beq.w	802907c <MOVE_transitionErrorStateMachine(unsigned long)+0x24c>
 8028ee8:	2301      	movs	r3, #1
 8028eea:	4620      	mov	r0, r4
 8028eec:	7023      	strb	r3, [r4, #0]
 8028eee:	b00a      	add	sp, #40	; 0x28
 8028ef0:	bd70      	pop	{r4, r5, r6, pc}
 8028ef2:	4b87      	ldr	r3, [pc, #540]	; (8029110 <MOVE_transitionErrorStateMachine(unsigned long)+0x2e0>)
 8028ef4:	79d1      	ldrb	r1, [r2, #7]
 8028ef6:	795a      	ldrb	r2, [r3, #5]
 8028ef8:	a806      	add	r0, sp, #24
 8028efa:	2301      	movs	r3, #1
 8028efc:	f7fe fda6 	bl	8027a4c <ACTIONS_power(bool, ROBOT_axisIndex_t, AXIS_powerState_t)>
 8028f00:	a906      	add	r1, sp, #24
 8028f02:	4620      	mov	r0, r4
 8028f04:	f002 fef8 	bl	802bcf8 <TaskStatus::operator=(TaskStatus const&)>
 8028f08:	4620      	mov	r0, r4
 8028f0a:	b00a      	add	sp, #40	; 0x28
 8028f0c:	bd70      	pop	{r4, r5, r6, pc}
 8028f0e:	4b80      	ldr	r3, [pc, #512]	; (8029110 <MOVE_transitionErrorStateMachine(unsigned long)+0x2e0>)
 8028f10:	79d1      	ldrb	r1, [r2, #7]
 8028f12:	ed93 0a03 	vldr	s0, [r3, #12]
 8028f16:	2300      	movs	r3, #0
 8028f18:	a806      	add	r0, sp, #24
 8028f1a:	9300      	str	r3, [sp, #0]
 8028f1c:	220f      	movs	r2, #15
 8028f1e:	f7fe fc73 	bl	8027808 <ACTIONS_move(bool, ROBOT_axisIndex_t, float, AXIS_moveType_t, AXIS_mode_t)>
 8028f22:	a906      	add	r1, sp, #24
 8028f24:	4620      	mov	r0, r4
 8028f26:	f002 fee7 	bl	802bcf8 <TaskStatus::operator=(TaskStatus const&)>
 8028f2a:	4620      	mov	r0, r4
 8028f2c:	b00a      	add	sp, #40	; 0x28
 8028f2e:	bd70      	pop	{r4, r5, r6, pc}
 8028f30:	04a9      	lsls	r1, r5, #18
 8028f32:	f100 8085 	bmi.w	8029040 <MOVE_transitionErrorStateMachine(unsigned long)+0x210>
 8028f36:	4b76      	ldr	r3, [pc, #472]	; (8029110 <MOVE_transitionErrorStateMachine(unsigned long)+0x2e0>)
 8028f38:	791b      	ldrb	r3, [r3, #4]
 8028f3a:	2b00      	cmp	r3, #0
 8028f3c:	d094      	beq.n	8028e68 <MOVE_transitionErrorStateMachine(unsigned long)+0x38>
 8028f3e:	4872      	ldr	r0, [pc, #456]	; (8029108 <MOVE_transitionErrorStateMachine(unsigned long)+0x2d8>)
 8028f40:	212f      	movs	r1, #47	; 0x2f
 8028f42:	f016 fa0c 	bl	803f35e <strrchr>
 8028f46:	2800      	cmp	r0, #0
 8028f48:	f000 80c2 	beq.w	80290d0 <MOVE_transitionErrorStateMachine(unsigned long)+0x2a0>
 8028f4c:	212f      	movs	r1, #47	; 0x2f
 8028f4e:	486e      	ldr	r0, [pc, #440]	; (8029108 <MOVE_transitionErrorStateMachine(unsigned long)+0x2d8>)
 8028f50:	f016 fa05 	bl	803f35e <strrchr>
 8028f54:	1c41      	adds	r1, r0, #1
 8028f56:	4b70      	ldr	r3, [pc, #448]	; (8029118 <MOVE_transitionErrorStateMachine(unsigned long)+0x2e8>)
 8028f58:	f240 1215 	movw	r2, #277	; 0x115
 8028f5c:	2002      	movs	r0, #2
 8028f5e:	f7f9 fc1b 	bl	8022798 <DEBUG_logMsg>
 8028f62:	2301      	movs	r3, #1
 8028f64:	4866      	ldr	r0, [pc, #408]	; (8029100 <MOVE_transitionErrorStateMachine(unsigned long)+0x2d0>)
 8028f66:	7023      	strb	r3, [r4, #0]
 8028f68:	f7ff f9cc 	bl	8028304 <SM_RUNNER_restart>
 8028f6c:	e77c      	b.n	8028e68 <MOVE_transitionErrorStateMachine(unsigned long)+0x38>
 8028f6e:	4e6b      	ldr	r6, [pc, #428]	; (802911c <MOVE_transitionErrorStateMachine(unsigned long)+0x2ec>)
 8028f70:	7835      	ldrb	r5, [r6, #0]
 8028f72:	2102      	movs	r1, #2
 8028f74:	a806      	add	r0, sp, #24
 8028f76:	f008 fd45 	bl	8031a04 <AWARENESS_getAlarmData(IMU_unsolictedAlarm_t)>
 8028f7a:	2d08      	cmp	r5, #8
 8028f7c:	eddd 7a06 	vldr	s15, [sp, #24]
 8028f80:	ed9d 7a07 	vldr	s14, [sp, #28]
 8028f84:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8028f86:	d046      	beq.n	8029016 <MOVE_transitionErrorStateMachine(unsigned long)+0x1e6>
 8028f88:	2d09      	cmp	r5, #9
 8028f8a:	d024      	beq.n	8028fd6 <MOVE_transitionErrorStateMachine(unsigned long)+0x1a6>
 8028f8c:	485c      	ldr	r0, [pc, #368]	; (8029100 <MOVE_transitionErrorStateMachine(unsigned long)+0x2d0>)
 8028f8e:	2101      	movs	r1, #1
 8028f90:	f7ff f9b6 	bl	8028300 <SM_RUNNER_setComplete>
 8028f94:	e7a8      	b.n	8028ee8 <MOVE_transitionErrorStateMachine(unsigned long)+0xb8>
 8028f96:	4b5e      	ldr	r3, [pc, #376]	; (8029110 <MOVE_transitionErrorStateMachine(unsigned long)+0x2e0>)
 8028f98:	79d1      	ldrb	r1, [r2, #7]
 8028f9a:	ed93 0a02 	vldr	s0, [r3, #8]
 8028f9e:	795a      	ldrb	r2, [r3, #5]
 8028fa0:	2302      	movs	r3, #2
 8028fa2:	a806      	add	r0, sp, #24
 8028fa4:	9300      	str	r3, [sp, #0]
 8028fa6:	2301      	movs	r3, #1
 8028fa8:	f7fe fc2e 	bl	8027808 <ACTIONS_move(bool, ROBOT_axisIndex_t, float, AXIS_moveType_t, AXIS_mode_t)>
 8028fac:	a906      	add	r1, sp, #24
 8028fae:	4620      	mov	r0, r4
 8028fb0:	f002 fea2 	bl	802bcf8 <TaskStatus::operator=(TaskStatus const&)>
 8028fb4:	4620      	mov	r0, r4
 8028fb6:	b00a      	add	sp, #40	; 0x28
 8028fb8:	bd70      	pop	{r4, r5, r6, pc}
 8028fba:	4b55      	ldr	r3, [pc, #340]	; (8029110 <MOVE_transitionErrorStateMachine(unsigned long)+0x2e0>)
 8028fbc:	79d1      	ldrb	r1, [r2, #7]
 8028fbe:	795a      	ldrb	r2, [r3, #5]
 8028fc0:	a806      	add	r0, sp, #24
 8028fc2:	2300      	movs	r3, #0
 8028fc4:	f7fe fd42 	bl	8027a4c <ACTIONS_power(bool, ROBOT_axisIndex_t, AXIS_powerState_t)>
 8028fc8:	a906      	add	r1, sp, #24
 8028fca:	4620      	mov	r0, r4
 8028fcc:	f002 fe94 	bl	802bcf8 <TaskStatus::operator=(TaskStatus const&)>
 8028fd0:	4620      	mov	r0, r4
 8028fd2:	b00a      	add	sp, #40	; 0x28
 8028fd4:	bd70      	pop	{r4, r5, r6, pc}
 8028fd6:	079b      	lsls	r3, r3, #30
 8028fd8:	d5d8      	bpl.n	8028f8c <MOVE_transitionErrorStateMachine(unsigned long)+0x15c>
 8028fda:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 8028fde:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028fe2:	d41f      	bmi.n	8029024 <MOVE_transitionErrorStateMachine(unsigned long)+0x1f4>
 8028fe4:	7832      	ldrb	r2, [r6, #0]
 8028fe6:	4b4a      	ldr	r3, [pc, #296]	; (8029110 <MOVE_transitionErrorStateMachine(unsigned long)+0x2e0>)
 8028fe8:	eddf 7a4d 	vldr	s15, [pc, #308]	; 8029120 <MOVE_transitionErrorStateMachine(unsigned long)+0x2f0>
 8028fec:	715a      	strb	r2, [r3, #5]
 8028fee:	2a08      	cmp	r2, #8
 8028ff0:	edc3 7a02 	vstr	s15, [r3, #8]
 8028ff4:	d107      	bne.n	8029006 <MOVE_transitionErrorStateMachine(unsigned long)+0x1d6>
 8028ff6:	4a4b      	ldr	r2, [pc, #300]	; (8029124 <MOVE_transitionErrorStateMachine(unsigned long)+0x2f4>)
 8028ff8:	60da      	str	r2, [r3, #12]
 8028ffa:	2100      	movs	r1, #0
 8028ffc:	f04f 30ff 	mov.w	r0, #4294967295
 8029000:	f006 f864 	bl	802f0cc <CAMERA_adjustPixelCenterOffset(int, int)>
 8029004:	e770      	b.n	8028ee8 <MOVE_transitionErrorStateMachine(unsigned long)+0xb8>
 8029006:	f04f 4185 	mov.w	r1, #1115684864	; 0x42800000
 802900a:	2a09      	cmp	r2, #9
 802900c:	60d9      	str	r1, [r3, #12]
 802900e:	d048      	beq.n	80290a2 <MOVE_transitionErrorStateMachine(unsigned long)+0x272>
 8029010:	2100      	movs	r1, #0
 8029012:	4608      	mov	r0, r1
 8029014:	e7f4      	b.n	8029000 <MOVE_transitionErrorStateMachine(unsigned long)+0x1d0>
 8029016:	07da      	lsls	r2, r3, #31
 8029018:	d5b8      	bpl.n	8028f8c <MOVE_transitionErrorStateMachine(unsigned long)+0x15c>
 802901a:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 802901e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8029022:	d5df      	bpl.n	8028fe4 <MOVE_transitionErrorStateMachine(unsigned long)+0x1b4>
 8029024:	7832      	ldrb	r2, [r6, #0]
 8029026:	4b3a      	ldr	r3, [pc, #232]	; (8029110 <MOVE_transitionErrorStateMachine(unsigned long)+0x2e0>)
 8029028:	eddf 7a3f 	vldr	s15, [pc, #252]	; 8029128 <MOVE_transitionErrorStateMachine(unsigned long)+0x2f8>
 802902c:	715a      	strb	r2, [r3, #5]
 802902e:	2a08      	cmp	r2, #8
 8029030:	edc3 7a02 	vstr	s15, [r3, #8]
 8029034:	d1e7      	bne.n	8029006 <MOVE_transitionErrorStateMachine(unsigned long)+0x1d6>
 8029036:	4a3b      	ldr	r2, [pc, #236]	; (8029124 <MOVE_transitionErrorStateMachine(unsigned long)+0x2f4>)
 8029038:	60da      	str	r2, [r3, #12]
 802903a:	2100      	movs	r1, #0
 802903c:	2001      	movs	r0, #1
 802903e:	e7df      	b.n	8029000 <MOVE_transitionErrorStateMachine(unsigned long)+0x1d0>
 8029040:	2301      	movs	r3, #1
 8029042:	4831      	ldr	r0, [pc, #196]	; (8029108 <MOVE_transitionErrorStateMachine(unsigned long)+0x2d8>)
 8029044:	7023      	strb	r3, [r4, #0]
 8029046:	212f      	movs	r1, #47	; 0x2f
 8029048:	f016 f989 	bl	803f35e <strrchr>
 802904c:	b3a8      	cbz	r0, 80290ba <MOVE_transitionErrorStateMachine(unsigned long)+0x28a>
 802904e:	212f      	movs	r1, #47	; 0x2f
 8029050:	482d      	ldr	r0, [pc, #180]	; (8029108 <MOVE_transitionErrorStateMachine(unsigned long)+0x2d8>)
 8029052:	f016 f984 	bl	803f35e <strrchr>
 8029056:	1c41      	adds	r1, r0, #1
 8029058:	4b34      	ldr	r3, [pc, #208]	; (802912c <MOVE_transitionErrorStateMachine(unsigned long)+0x2fc>)
 802905a:	f240 120f 	movw	r2, #271	; 0x10f
 802905e:	2000      	movs	r0, #0
 8029060:	f7f9 fb9a 	bl	8022798 <DEBUG_logMsg>
 8029064:	e700      	b.n	8028e68 <MOVE_transitionErrorStateMachine(unsigned long)+0x38>
 8029066:	4828      	ldr	r0, [pc, #160]	; (8029108 <MOVE_transitionErrorStateMachine(unsigned long)+0x2d8>)
 8029068:	215c      	movs	r1, #92	; 0x5c
 802906a:	f016 f978 	bl	803f35e <strrchr>
 802906e:	b310      	cbz	r0, 80290b6 <MOVE_transitionErrorStateMachine(unsigned long)+0x286>
 8029070:	4825      	ldr	r0, [pc, #148]	; (8029108 <MOVE_transitionErrorStateMachine(unsigned long)+0x2d8>)
 8029072:	215c      	movs	r1, #92	; 0x5c
 8029074:	f016 f973 	bl	803f35e <strrchr>
 8029078:	1c45      	adds	r5, r0, #1
 802907a:	e710      	b.n	8028e9e <MOVE_transitionErrorStateMachine(unsigned long)+0x6e>
 802907c:	4822      	ldr	r0, [pc, #136]	; (8029108 <MOVE_transitionErrorStateMachine(unsigned long)+0x2d8>)
 802907e:	212f      	movs	r1, #47	; 0x2f
 8029080:	f016 f96d 	bl	803f35e <strrchr>
 8029084:	b378      	cbz	r0, 80290e6 <MOVE_transitionErrorStateMachine(unsigned long)+0x2b6>
 8029086:	212f      	movs	r1, #47	; 0x2f
 8029088:	481f      	ldr	r0, [pc, #124]	; (8029108 <MOVE_transitionErrorStateMachine(unsigned long)+0x2d8>)
 802908a:	f016 f968 	bl	803f35e <strrchr>
 802908e:	1c41      	adds	r1, r0, #1
 8029090:	4b27      	ldr	r3, [pc, #156]	; (8029130 <MOVE_transitionErrorStateMachine(unsigned long)+0x300>)
 8029092:	f44f 7280 	mov.w	r2, #256	; 0x100
 8029096:	2000      	movs	r0, #0
 8029098:	f7f9 fb7e 	bl	8022798 <DEBUG_logMsg>
 802909c:	2302      	movs	r3, #2
 802909e:	7023      	strb	r3, [r4, #0]
 80290a0:	e6e2      	b.n	8028e68 <MOVE_transitionErrorStateMachine(unsigned long)+0x38>
 80290a2:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80290a6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80290aa:	bf4c      	ite	mi
 80290ac:	2101      	movmi	r1, #1
 80290ae:	f04f 31ff 	movpl.w	r1, #4294967295
 80290b2:	2000      	movs	r0, #0
 80290b4:	e7a4      	b.n	8029000 <MOVE_transitionErrorStateMachine(unsigned long)+0x1d0>
 80290b6:	4d14      	ldr	r5, [pc, #80]	; (8029108 <MOVE_transitionErrorStateMachine(unsigned long)+0x2d8>)
 80290b8:	e6f1      	b.n	8028e9e <MOVE_transitionErrorStateMachine(unsigned long)+0x6e>
 80290ba:	4813      	ldr	r0, [pc, #76]	; (8029108 <MOVE_transitionErrorStateMachine(unsigned long)+0x2d8>)
 80290bc:	215c      	movs	r1, #92	; 0x5c
 80290be:	f016 f94e 	bl	803f35e <strrchr>
 80290c2:	b1d8      	cbz	r0, 80290fc <MOVE_transitionErrorStateMachine(unsigned long)+0x2cc>
 80290c4:	215c      	movs	r1, #92	; 0x5c
 80290c6:	4810      	ldr	r0, [pc, #64]	; (8029108 <MOVE_transitionErrorStateMachine(unsigned long)+0x2d8>)
 80290c8:	f016 f949 	bl	803f35e <strrchr>
 80290cc:	1c41      	adds	r1, r0, #1
 80290ce:	e7c3      	b.n	8029058 <MOVE_transitionErrorStateMachine(unsigned long)+0x228>
 80290d0:	480d      	ldr	r0, [pc, #52]	; (8029108 <MOVE_transitionErrorStateMachine(unsigned long)+0x2d8>)
 80290d2:	215c      	movs	r1, #92	; 0x5c
 80290d4:	f016 f943 	bl	803f35e <strrchr>
 80290d8:	b360      	cbz	r0, 8029134 <MOVE_transitionErrorStateMachine(unsigned long)+0x304>
 80290da:	215c      	movs	r1, #92	; 0x5c
 80290dc:	480a      	ldr	r0, [pc, #40]	; (8029108 <MOVE_transitionErrorStateMachine(unsigned long)+0x2d8>)
 80290de:	f016 f93e 	bl	803f35e <strrchr>
 80290e2:	1c41      	adds	r1, r0, #1
 80290e4:	e737      	b.n	8028f56 <MOVE_transitionErrorStateMachine(unsigned long)+0x126>
 80290e6:	4808      	ldr	r0, [pc, #32]	; (8029108 <MOVE_transitionErrorStateMachine(unsigned long)+0x2d8>)
 80290e8:	215c      	movs	r1, #92	; 0x5c
 80290ea:	f016 f938 	bl	803f35e <strrchr>
 80290ee:	b318      	cbz	r0, 8029138 <MOVE_transitionErrorStateMachine(unsigned long)+0x308>
 80290f0:	215c      	movs	r1, #92	; 0x5c
 80290f2:	4805      	ldr	r0, [pc, #20]	; (8029108 <MOVE_transitionErrorStateMachine(unsigned long)+0x2d8>)
 80290f4:	f016 f933 	bl	803f35e <strrchr>
 80290f8:	1c41      	adds	r1, r0, #1
 80290fa:	e7c9      	b.n	8029090 <MOVE_transitionErrorStateMachine(unsigned long)+0x260>
 80290fc:	4902      	ldr	r1, [pc, #8]	; (8029108 <MOVE_transitionErrorStateMachine(unsigned long)+0x2d8>)
 80290fe:	e7ab      	b.n	8029058 <MOVE_transitionErrorStateMachine(unsigned long)+0x228>
 8029100:	20004d9c 	.word	0x20004d9c
 8029104:	20004d84 	.word	0x20004d84
 8029108:	08045678 	.word	0x08045678
 802910c:	080456c4 	.word	0x080456c4
 8029110:	20004d88 	.word	0x20004d88
 8029114:	08028e05 	.word	0x08028e05
 8029118:	08045728 	.word	0x08045728
 802911c:	20004d98 	.word	0x20004d98
 8029120:	3b449ba6 	.word	0x3b449ba6
 8029124:	42b80000 	.word	0x42b80000
 8029128:	bb449ba6 	.word	0xbb449ba6
 802912c:	08045700 	.word	0x08045700
 8029130:	080456e4 	.word	0x080456e4
 8029134:	4903      	ldr	r1, [pc, #12]	; (8029144 <MOVE_transitionErrorStateMachine(unsigned long)+0x314>)
 8029136:	e70e      	b.n	8028f56 <MOVE_transitionErrorStateMachine(unsigned long)+0x126>
 8029138:	4902      	ldr	r1, [pc, #8]	; (8029144 <MOVE_transitionErrorStateMachine(unsigned long)+0x314>)
 802913a:	e7a9      	b.n	8029090 <MOVE_transitionErrorStateMachine(unsigned long)+0x260>
 802913c:	2302      	movs	r3, #2
 802913e:	7023      	strb	r3, [r4, #0]
 8029140:	e692      	b.n	8028e68 <MOVE_transitionErrorStateMachine(unsigned long)+0x38>
 8029142:	bf00      	nop
 8029144:	08045678 	.word	0x08045678

08029148 <MOVE_transitionStateMachine(unsigned long)>:
 8029148:	b530      	push	{r4, r5, lr}
 802914a:	460d      	mov	r5, r1
 802914c:	b085      	sub	sp, #20
 802914e:	2100      	movs	r1, #0
 8029150:	4604      	mov	r4, r0
 8029152:	f002 fdbb 	bl	802bccc <TaskStatus::TaskStatus(TaskStatus::Result_e)>
 8029156:	4a1d      	ldr	r2, [pc, #116]	; (80291cc <MOVE_transitionStateMachine(unsigned long)+0x84>)
 8029158:	7813      	ldrb	r3, [r2, #0]
 802915a:	2b03      	cmp	r3, #3
 802915c:	d833      	bhi.n	80291c6 <MOVE_transitionStateMachine(unsigned long)+0x7e>
 802915e:	e8df f003 	tbb	[pc, r3]
 8029162:	140d      	.short	0x140d
 8029164:	021b      	.short	0x021b
 8029166:	2101      	movs	r1, #1
 8029168:	4818      	ldr	r0, [pc, #96]	; (80291cc <MOVE_transitionStateMachine(unsigned long)+0x84>)
 802916a:	7021      	strb	r1, [r4, #0]
 802916c:	f7ff f8c8 	bl	8028300 <SM_RUNNER_setComplete>
 8029170:	7823      	ldrb	r3, [r4, #0]
 8029172:	2b02      	cmp	r3, #2
 8029174:	d021      	beq.n	80291ba <MOVE_transitionStateMachine(unsigned long)+0x72>
 8029176:	4620      	mov	r0, r4
 8029178:	b005      	add	sp, #20
 802917a:	bd30      	pop	{r4, r5, pc}
 802917c:	f004 fe7a 	bl	802de74 <IMU_clearIntegratedGyro>
 8029180:	2301      	movs	r3, #1
 8029182:	4620      	mov	r0, r4
 8029184:	7023      	strb	r3, [r4, #0]
 8029186:	b005      	add	sp, #20
 8029188:	bd30      	pop	{r4, r5, pc}
 802918a:	052b      	lsls	r3, r5, #20
 802918c:	d5f0      	bpl.n	8029170 <MOVE_transitionStateMachine(unsigned long)+0x28>
 802918e:	2301      	movs	r3, #1
 8029190:	4620      	mov	r0, r4
 8029192:	7023      	strb	r3, [r4, #0]
 8029194:	b005      	add	sp, #20
 8029196:	bd30      	pop	{r4, r5, pc}
 8029198:	4b0d      	ldr	r3, [pc, #52]	; (80291d0 <MOVE_transitionStateMachine(unsigned long)+0x88>)
 802919a:	7891      	ldrb	r1, [r2, #2]
 802919c:	ed93 0a00 	vldr	s0, [r3]
 80291a0:	2300      	movs	r3, #0
 80291a2:	9300      	str	r3, [sp, #0]
 80291a4:	a802      	add	r0, sp, #8
 80291a6:	220f      	movs	r2, #15
 80291a8:	f7fe fb2e 	bl	8027808 <ACTIONS_move(bool, ROBOT_axisIndex_t, float, AXIS_moveType_t, AXIS_mode_t)>
 80291ac:	a902      	add	r1, sp, #8
 80291ae:	4620      	mov	r0, r4
 80291b0:	f002 fda2 	bl	802bcf8 <TaskStatus::operator=(TaskStatus const&)>
 80291b4:	7823      	ldrb	r3, [r4, #0]
 80291b6:	2b02      	cmp	r3, #2
 80291b8:	d1dd      	bne.n	8029176 <MOVE_transitionStateMachine(unsigned long)+0x2e>
 80291ba:	4b06      	ldr	r3, [pc, #24]	; (80291d4 <MOVE_transitionStateMachine(unsigned long)+0x8c>)
 80291bc:	6862      	ldr	r2, [r4, #4]
 80291be:	601a      	str	r2, [r3, #0]
 80291c0:	4620      	mov	r0, r4
 80291c2:	b005      	add	sp, #20
 80291c4:	bd30      	pop	{r4, r5, pc}
 80291c6:	2302      	movs	r3, #2
 80291c8:	7023      	strb	r3, [r4, #0]
 80291ca:	e7f6      	b.n	80291ba <MOVE_transitionStateMachine(unsigned long)+0x72>
 80291cc:	20004d9c 	.word	0x20004d9c
 80291d0:	20004d88 	.word	0x20004d88
 80291d4:	20004d84 	.word	0x20004d84

080291d8 <MOVEXY_transition(ROBOT_axisIndex_t, float, unsigned long, bool)>:
 80291d8:	b530      	push	{r4, r5, lr}
 80291da:	461c      	mov	r4, r3
 80291dc:	b085      	sub	sp, #20
 80291de:	4613      	mov	r3, r2
 80291e0:	b124      	cbz	r4, 80291ec <MOVEXY_transition(ROBOT_axisIndex_t, float, unsigned long, bool)+0x14>
 80291e2:	4d07      	ldr	r5, [pc, #28]	; (8029200 <MOVEXY_transition(ROBOT_axisIndex_t, float, unsigned long, bool)+0x28>)
 80291e4:	4a07      	ldr	r2, [pc, #28]	; (8029204 <MOVEXY_transition(ROBOT_axisIndex_t, float, unsigned long, bool)+0x2c>)
 80291e6:	7029      	strb	r1, [r5, #0]
 80291e8:	ed82 0a00 	vstr	s0, [r2]
 80291ec:	4a06      	ldr	r2, [pc, #24]	; (8029208 <MOVEXY_transition(ROBOT_axisIndex_t, float, unsigned long, bool)+0x30>)
 80291ee:	4907      	ldr	r1, [pc, #28]	; (802920c <MOVEXY_transition(ROBOT_axisIndex_t, float, unsigned long, bool)+0x34>)
 80291f0:	9400      	str	r4, [sp, #0]
 80291f2:	9003      	str	r0, [sp, #12]
 80291f4:	f7fe fe92 	bl	8027f1c <SM_RUNNER_runStateMachine>
 80291f8:	9803      	ldr	r0, [sp, #12]
 80291fa:	b005      	add	sp, #20
 80291fc:	bd30      	pop	{r4, r5, pc}
 80291fe:	bf00      	nop
 8029200:	20004d98 	.word	0x20004d98
 8029204:	20004d88 	.word	0x20004d88
 8029208:	20004d9c 	.word	0x20004d9c
 802920c:	20000e6c 	.word	0x20000e6c

08029210 <MOVEXY_autoWheelCalibration(ROBOT_axisIndex_t, float, float)>:
 8029210:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8029214:	ed2d 8b02 	vpush	{d8}
 8029218:	2808      	cmp	r0, #8
 802921a:	ee10 4a10 	vmov	r4, s0
 802921e:	b08a      	sub	sp, #40	; 0x28
 8029220:	4605      	mov	r5, r0
 8029222:	eeb0 8a60 	vmov.f32	s16, s1
 8029226:	f000 80bf 	beq.w	80293a8 <MOVEXY_autoWheelCalibration(ROBOT_axisIndex_t, float, float)+0x198>
 802922a:	f7fc f93f 	bl	80254ac <ANTCTRL_getYTireDiameter>
 802922e:	4620      	mov	r0, r4
 8029230:	eef0 8a40 	vmov.f32	s17, s0
 8029234:	f015 f911 	bl	803e45a <__aeabi_f2d>
 8029238:	4606      	mov	r6, r0
 802923a:	ee18 0a90 	vmov	r0, s17
 802923e:	460f      	mov	r7, r1
 8029240:	f015 f90b 	bl	803e45a <__aeabi_f2d>
 8029244:	4b86      	ldr	r3, [pc, #536]	; (8029460 <MOVEXY_autoWheelCalibration(ROBOT_axisIndex_t, float, float)+0x250>)
 8029246:	2200      	movs	r2, #0
 8029248:	f015 fa10 	bl	803e66c <__aeabi_ddiv>
 802924c:	a380      	add	r3, pc, #512	; (adr r3, 8029450 <MOVEXY_autoWheelCalibration(ROBOT_axisIndex_t, float, float)+0x240>)
 802924e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8029252:	f015 f955 	bl	803e500 <__aeabi_dmul>
 8029256:	4602      	mov	r2, r0
 8029258:	460b      	mov	r3, r1
 802925a:	4630      	mov	r0, r6
 802925c:	4639      	mov	r1, r7
 802925e:	f015 fa05 	bl	803e66c <__aeabi_ddiv>
 8029262:	f015 f916 	bl	803e492 <__aeabi_d2f>
 8029266:	ee07 0a90 	vmov	s15, r0
 802926a:	eec8 7a27 	vdiv.f32	s15, s16, s15
 802926e:	ee17 0a90 	vmov	r0, s15
 8029272:	f015 f8f2 	bl	803e45a <__aeabi_f2d>
 8029276:	4b7a      	ldr	r3, [pc, #488]	; (8029460 <MOVEXY_autoWheelCalibration(ROBOT_axisIndex_t, float, float)+0x250>)
 8029278:	2200      	movs	r2, #0
 802927a:	f015 f941 	bl	803e500 <__aeabi_dmul>
 802927e:	a374      	add	r3, pc, #464	; (adr r3, 8029450 <MOVEXY_autoWheelCalibration(ROBOT_axisIndex_t, float, float)+0x240>)
 8029280:	e9d3 2300 	ldrd	r2, r3, [r3]
 8029284:	f015 f9f2 	bl	803e66c <__aeabi_ddiv>
 8029288:	f015 f903 	bl	803e492 <__aeabi_d2f>
 802928c:	4b75      	ldr	r3, [pc, #468]	; (8029464 <MOVEXY_autoWheelCalibration(ROBOT_axisIndex_t, float, float)+0x254>)
 802928e:	ee07 0a90 	vmov	s15, r0
 8029292:	681c      	ldr	r4, [r3, #0]
 8029294:	ee38 7ae7 	vsub.f32	s14, s17, s15
 8029298:	4698      	mov	r8, r3
 802929a:	ee07 4a90 	vmov	s15, r4
 802929e:	eef8 6a67 	vcvt.f32.u32	s13, s15
 80292a2:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 80292a6:	ee87 8aa6 	vdiv.f32	s16, s15, s13
 80292aa:	eddf 6a6f 	vldr	s13, [pc, #444]	; 8029468 <MOVEXY_autoWheelCalibration(ROBOT_axisIndex_t, float, float)+0x258>
 80292ae:	ee77 7ac8 	vsub.f32	s15, s15, s16
 80292b2:	ee28 8a07 	vmul.f32	s16, s16, s14
 80292b6:	eea7 8aa8 	vfma.f32	s16, s15, s17
 80292ba:	eeb4 8ae6 	vcmpe.f32	s16, s13
 80292be:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80292c2:	d90d      	bls.n	80292e0 <MOVEXY_autoWheelCalibration(ROBOT_axisIndex_t, float, float)+0xd0>
 80292c4:	eddf 7a69 	vldr	s15, [pc, #420]	; 802946c <MOVEXY_autoWheelCalibration(ROBOT_axisIndex_t, float, float)+0x25c>
 80292c8:	eeb4 8ae7 	vcmpe.f32	s16, s15
 80292cc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80292d0:	db50      	blt.n	8029374 <MOVEXY_autoWheelCalibration(ROBOT_axisIndex_t, float, float)+0x164>
 80292d2:	4f67      	ldr	r7, [pc, #412]	; (8029470 <MOVEXY_autoWheelCalibration(ROBOT_axisIndex_t, float, float)+0x260>)
 80292d4:	eddf 8a67 	vldr	s17, [pc, #412]	; 8029474 <MOVEXY_autoWheelCalibration(ROBOT_axisIndex_t, float, float)+0x264>
 80292d8:	2600      	movs	r6, #0
 80292da:	eeb0 8a67 	vmov.f32	s16, s15
 80292de:	e006      	b.n	80292ee <MOVEXY_autoWheelCalibration(ROBOT_axisIndex_t, float, float)+0xde>
 80292e0:	a75d      	add	r7, pc, #372	; (adr r7, 8029458 <MOVEXY_autoWheelCalibration(ROBOT_axisIndex_t, float, float)+0x248>)
 80292e2:	e9d7 6700 	ldrd	r6, r7, [r7]
 80292e6:	eddf 8a64 	vldr	s17, [pc, #400]	; 8029478 <MOVEXY_autoWheelCalibration(ROBOT_axisIndex_t, float, float)+0x268>
 80292ea:	eeb0 8a66 	vmov.f32	s16, s13
 80292ee:	3401      	adds	r4, #1
 80292f0:	2c32      	cmp	r4, #50	; 0x32
 80292f2:	bf28      	it	cs
 80292f4:	2432      	movcs	r4, #50	; 0x32
 80292f6:	2c02      	cmp	r4, #2
 80292f8:	bf38      	it	cc
 80292fa:	2402      	movcc	r4, #2
 80292fc:	495f      	ldr	r1, [pc, #380]	; (802947c <MOVEXY_autoWheelCalibration(ROBOT_axisIndex_t, float, float)+0x26c>)
 80292fe:	f8c8 4000 	str.w	r4, [r8]
 8029302:	462a      	mov	r2, r5
 8029304:	a808      	add	r0, sp, #32
 8029306:	f7f9 fbef 	bl	8022ae8 <Robot::getAxis(ROBOT_axisIndex_t)>
 802930a:	f89d 3024 	ldrb.w	r3, [sp, #36]	; 0x24
 802930e:	2b00      	cmp	r3, #0
 8029310:	f040 8083 	bne.w	802941a <MOVEXY_autoWheelCalibration(ROBOT_axisIndex_t, float, float)+0x20a>
 8029314:	485a      	ldr	r0, [pc, #360]	; (8029480 <MOVEXY_autoWheelCalibration(ROBOT_axisIndex_t, float, float)+0x270>)
 8029316:	212f      	movs	r1, #47	; 0x2f
 8029318:	f016 f821 	bl	803f35e <strrchr>
 802931c:	2800      	cmp	r0, #0
 802931e:	f000 8088 	beq.w	8029432 <MOVEXY_autoWheelCalibration(ROBOT_axisIndex_t, float, float)+0x222>
 8029322:	4857      	ldr	r0, [pc, #348]	; (8029480 <MOVEXY_autoWheelCalibration(ROBOT_axisIndex_t, float, float)+0x270>)
 8029324:	212f      	movs	r1, #47	; 0x2f
 8029326:	f016 f81a 	bl	803f35e <strrchr>
 802932a:	1c44      	adds	r4, r0, #1
 802932c:	4629      	mov	r1, r5
 802932e:	4853      	ldr	r0, [pc, #332]	; (802947c <MOVEXY_autoWheelCalibration(ROBOT_axisIndex_t, float, float)+0x26c>)
 8029330:	f7f9 fca2 	bl	8022c78 <Robot::getAxisName(ROBOT_axisIndex_t)>
 8029334:	f8d8 3000 	ldr.w	r3, [r8]
 8029338:	9304      	str	r3, [sp, #16]
 802933a:	4621      	mov	r1, r4
 802933c:	9000      	str	r0, [sp, #0]
 802933e:	e9cd 6702 	strd	r6, r7, [sp, #8]
 8029342:	4b50      	ldr	r3, [pc, #320]	; (8029484 <MOVEXY_autoWheelCalibration(ROBOT_axisIndex_t, float, float)+0x274>)
 8029344:	223f      	movs	r2, #63	; 0x3f
 8029346:	2002      	movs	r0, #2
 8029348:	f7f9 fa26 	bl	8022798 <DEBUG_logMsg>
 802934c:	2d08      	cmp	r5, #8
 802934e:	ee18 3a10 	vmov	r3, s16
 8029352:	bf0c      	ite	eq
 8029354:	2401      	moveq	r4, #1
 8029356:	2402      	movne	r4, #2
 8029358:	2205      	movs	r2, #5
 802935a:	a906      	add	r1, sp, #24
 802935c:	200a      	movs	r0, #10
 802935e:	f88d 4018 	strb.w	r4, [sp, #24]
 8029362:	f8cd 3019 	str.w	r3, [sp, #25]
 8029366:	f7fa fe23 	bl	8023fb0 <CCP_sendDataMessage>
 802936a:	b00a      	add	sp, #40	; 0x28
 802936c:	ecbd 8b02 	vpop	{d8}
 8029370:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8029374:	ee18 0a10 	vmov	r0, s16
 8029378:	f015 f86f 	bl	803e45a <__aeabi_f2d>
 802937c:	4b38      	ldr	r3, [pc, #224]	; (8029460 <MOVEXY_autoWheelCalibration(ROBOT_axisIndex_t, float, float)+0x250>)
 802937e:	2200      	movs	r2, #0
 8029380:	4606      	mov	r6, r0
 8029382:	460f      	mov	r7, r1
 8029384:	f015 f972 	bl	803e66c <__aeabi_ddiv>
 8029388:	a331      	add	r3, pc, #196	; (adr r3, 8029450 <MOVEXY_autoWheelCalibration(ROBOT_axisIndex_t, float, float)+0x240>)
 802938a:	e9d3 2300 	ldrd	r2, r3, [r3]
 802938e:	f015 f8b7 	bl	803e500 <__aeabi_dmul>
 8029392:	4602      	mov	r2, r0
 8029394:	460b      	mov	r3, r1
 8029396:	2000      	movs	r0, #0
 8029398:	493b      	ldr	r1, [pc, #236]	; (8029488 <MOVEXY_autoWheelCalibration(ROBOT_axisIndex_t, float, float)+0x278>)
 802939a:	f015 f967 	bl	803e66c <__aeabi_ddiv>
 802939e:	f015 f878 	bl	803e492 <__aeabi_d2f>
 80293a2:	ee08 0a90 	vmov	s17, r0
 80293a6:	e7a2      	b.n	80292ee <MOVEXY_autoWheelCalibration(ROBOT_axisIndex_t, float, float)+0xde>
 80293a8:	f7fc f862 	bl	8025470 <ANTCTRL_getXTireDiameter>
 80293ac:	4620      	mov	r0, r4
 80293ae:	eef0 8a40 	vmov.f32	s17, s0
 80293b2:	f015 f852 	bl	803e45a <__aeabi_f2d>
 80293b6:	4606      	mov	r6, r0
 80293b8:	ee18 0a90 	vmov	r0, s17
 80293bc:	460f      	mov	r7, r1
 80293be:	f015 f84c 	bl	803e45a <__aeabi_f2d>
 80293c2:	4b27      	ldr	r3, [pc, #156]	; (8029460 <MOVEXY_autoWheelCalibration(ROBOT_axisIndex_t, float, float)+0x250>)
 80293c4:	2200      	movs	r2, #0
 80293c6:	f015 f951 	bl	803e66c <__aeabi_ddiv>
 80293ca:	a321      	add	r3, pc, #132	; (adr r3, 8029450 <MOVEXY_autoWheelCalibration(ROBOT_axisIndex_t, float, float)+0x240>)
 80293cc:	e9d3 2300 	ldrd	r2, r3, [r3]
 80293d0:	f015 f896 	bl	803e500 <__aeabi_dmul>
 80293d4:	4602      	mov	r2, r0
 80293d6:	460b      	mov	r3, r1
 80293d8:	4630      	mov	r0, r6
 80293da:	4639      	mov	r1, r7
 80293dc:	f015 f946 	bl	803e66c <__aeabi_ddiv>
 80293e0:	f015 f857 	bl	803e492 <__aeabi_d2f>
 80293e4:	ee07 0a90 	vmov	s15, r0
 80293e8:	eec8 7a27 	vdiv.f32	s15, s16, s15
 80293ec:	ee17 0a90 	vmov	r0, s15
 80293f0:	f015 f833 	bl	803e45a <__aeabi_f2d>
 80293f4:	4b1a      	ldr	r3, [pc, #104]	; (8029460 <MOVEXY_autoWheelCalibration(ROBOT_axisIndex_t, float, float)+0x250>)
 80293f6:	2200      	movs	r2, #0
 80293f8:	f015 f882 	bl	803e500 <__aeabi_dmul>
 80293fc:	a314      	add	r3, pc, #80	; (adr r3, 8029450 <MOVEXY_autoWheelCalibration(ROBOT_axisIndex_t, float, float)+0x240>)
 80293fe:	e9d3 2300 	ldrd	r2, r3, [r3]
 8029402:	f015 f933 	bl	803e66c <__aeabi_ddiv>
 8029406:	f015 f844 	bl	803e492 <__aeabi_d2f>
 802940a:	4b20      	ldr	r3, [pc, #128]	; (802948c <MOVEXY_autoWheelCalibration(ROBOT_axisIndex_t, float, float)+0x27c>)
 802940c:	ee07 0a90 	vmov	s15, r0
 8029410:	681c      	ldr	r4, [r3, #0]
 8029412:	ee38 7ae7 	vsub.f32	s14, s17, s15
 8029416:	4698      	mov	r8, r3
 8029418:	e73f      	b.n	802929a <MOVEXY_autoWheelCalibration(ROBOT_axisIndex_t, float, float)+0x8a>
 802941a:	9808      	ldr	r0, [sp, #32]
 802941c:	eeb0 0a68 	vmov.f32	s0, s17
 8029420:	f7f9 fdcc 	bl	8022fbc <AxisBase::updateDynamicMechanicalRatio(float)>
 8029424:	4816      	ldr	r0, [pc, #88]	; (8029480 <MOVEXY_autoWheelCalibration(ROBOT_axisIndex_t, float, float)+0x270>)
 8029426:	212f      	movs	r1, #47	; 0x2f
 8029428:	f015 ff99 	bl	803f35e <strrchr>
 802942c:	2800      	cmp	r0, #0
 802942e:	f47f af78 	bne.w	8029322 <MOVEXY_autoWheelCalibration(ROBOT_axisIndex_t, float, float)+0x112>
 8029432:	4813      	ldr	r0, [pc, #76]	; (8029480 <MOVEXY_autoWheelCalibration(ROBOT_axisIndex_t, float, float)+0x270>)
 8029434:	215c      	movs	r1, #92	; 0x5c
 8029436:	f015 ff92 	bl	803f35e <strrchr>
 802943a:	b128      	cbz	r0, 8029448 <MOVEXY_autoWheelCalibration(ROBOT_axisIndex_t, float, float)+0x238>
 802943c:	4810      	ldr	r0, [pc, #64]	; (8029480 <MOVEXY_autoWheelCalibration(ROBOT_axisIndex_t, float, float)+0x270>)
 802943e:	215c      	movs	r1, #92	; 0x5c
 8029440:	f015 ff8d 	bl	803f35e <strrchr>
 8029444:	1c44      	adds	r4, r0, #1
 8029446:	e771      	b.n	802932c <MOVEXY_autoWheelCalibration(ROBOT_axisIndex_t, float, float)+0x11c>
 8029448:	4c0d      	ldr	r4, [pc, #52]	; (8029480 <MOVEXY_autoWheelCalibration(ROBOT_axisIndex_t, float, float)+0x270>)
 802944a:	e76f      	b.n	802932c <MOVEXY_autoWheelCalibration(ROBOT_axisIndex_t, float, float)+0x11c>
 802944c:	f3af 8000 	nop.w
 8029450:	60000000 	.word	0x60000000
 8029454:	400921fb 	.word	0x400921fb
 8029458:	00000000 	.word	0x00000000
 802945c:	405bc000 	.word	0x405bc000
 8029460:	408f4000 	.word	0x408f4000
 8029464:	20000e90 	.word	0x20000e90
 8029468:	42de0000 	.word	0x42de0000
 802946c:	42e40000 	.word	0x42e40000
 8029470:	405c8000 	.word	0x405c8000
 8029474:	4032b346 	.word	0x4032b346
 8029478:	403787af 	.word	0x403787af
 802947c:	2000f630 	.word	0x2000f630
 8029480:	08045860 	.word	0x08045860
 8029484:	080458b4 	.word	0x080458b4
 8029488:	3ff00000 	.word	0x3ff00000
 802948c:	20000e8c 	.word	0x20000e8c
 8029490:	810109c9 	.word	0x810109c9
 8029494:	80acb0b0 	.word	0x80acb0b0
 8029498:	00000000 	.word	0x00000000

0802949c <BASEMENT_EXIT_setup()>:
 802949c:	b510      	push	{r4, lr}
 802949e:	4b04      	ldr	r3, [pc, #16]	; (80294b0 <BASEMENT_EXIT_setup()+0x14>)
 80294a0:	4604      	mov	r4, r0
 80294a2:	2200      	movs	r2, #0
 80294a4:	2101      	movs	r1, #1
 80294a6:	701a      	strb	r2, [r3, #0]
 80294a8:	f002 fc10 	bl	802bccc <TaskStatus::TaskStatus(TaskStatus::Result_e)>
 80294ac:	4620      	mov	r0, r4
 80294ae:	bd10      	pop	{r4, pc}
 80294b0:	20004db0 	.word	0x20004db0

080294b4 <BASEMENT_EXIT_errorStateMachine(unsigned long)>:
 80294b4:	b570      	push	{r4, r5, r6, lr}
 80294b6:	4e57      	ldr	r6, [pc, #348]	; (8029614 <BASEMENT_EXIT_errorStateMachine(unsigned long)+0x160>)
 80294b8:	b08c      	sub	sp, #48	; 0x30
 80294ba:	2100      	movs	r1, #0
 80294bc:	4604      	mov	r4, r0
 80294be:	f002 fc05 	bl	802bccc <TaskStatus::TaskStatus(TaskStatus::Result_e)>
 80294c2:	7975      	ldrb	r5, [r6, #5]
 80294c4:	b1a5      	cbz	r5, 80294f0 <BASEMENT_EXIT_errorStateMachine(unsigned long)+0x3c>
 80294c6:	2d01      	cmp	r5, #1
 80294c8:	d01e      	beq.n	8029508 <BASEMENT_EXIT_errorStateMachine(unsigned long)+0x54>
 80294ca:	4853      	ldr	r0, [pc, #332]	; (8029618 <BASEMENT_EXIT_errorStateMachine(unsigned long)+0x164>)
 80294cc:	212f      	movs	r1, #47	; 0x2f
 80294ce:	f015 ff46 	bl	803f35e <strrchr>
 80294d2:	b320      	cbz	r0, 802951e <BASEMENT_EXIT_errorStateMachine(unsigned long)+0x6a>
 80294d4:	212f      	movs	r1, #47	; 0x2f
 80294d6:	4850      	ldr	r0, [pc, #320]	; (8029618 <BASEMENT_EXIT_errorStateMachine(unsigned long)+0x164>)
 80294d8:	f015 ff41 	bl	803f35e <strrchr>
 80294dc:	1c41      	adds	r1, r0, #1
 80294de:	4b4f      	ldr	r3, [pc, #316]	; (802961c <BASEMENT_EXIT_errorStateMachine(unsigned long)+0x168>)
 80294e0:	f240 1255 	movw	r2, #341	; 0x155
 80294e4:	2000      	movs	r0, #0
 80294e6:	f7f9 f957 	bl	8022798 <DEBUG_logMsg>
 80294ea:	4620      	mov	r0, r4
 80294ec:	b00c      	add	sp, #48	; 0x30
 80294ee:	bd70      	pop	{r4, r5, r6, pc}
 80294f0:	7833      	ldrb	r3, [r6, #0]
 80294f2:	2b02      	cmp	r3, #2
 80294f4:	d01f      	beq.n	8029536 <BASEMENT_EXIT_errorStateMachine(unsigned long)+0x82>
 80294f6:	2b01      	cmp	r3, #1
 80294f8:	d02b      	beq.n	8029552 <BASEMENT_EXIT_errorStateMachine(unsigned long)+0x9e>
 80294fa:	2b0b      	cmp	r3, #11
 80294fc:	d061      	beq.n	80295c2 <BASEMENT_EXIT_errorStateMachine(unsigned long)+0x10e>
 80294fe:	2301      	movs	r3, #1
 8029500:	4620      	mov	r0, r4
 8029502:	7023      	strb	r3, [r4, #0]
 8029504:	b00c      	add	sp, #48	; 0x30
 8029506:	bd70      	pop	{r4, r5, r6, pc}
 8029508:	2100      	movs	r1, #0
 802950a:	4630      	mov	r0, r6
 802950c:	f7fe fee6 	bl	80282dc <SM_RUNNER_setError>
 8029510:	4630      	mov	r0, r6
 8029512:	f7fe fef7 	bl	8028304 <SM_RUNNER_restart>
 8029516:	4620      	mov	r0, r4
 8029518:	7025      	strb	r5, [r4, #0]
 802951a:	b00c      	add	sp, #48	; 0x30
 802951c:	bd70      	pop	{r4, r5, r6, pc}
 802951e:	483e      	ldr	r0, [pc, #248]	; (8029618 <BASEMENT_EXIT_errorStateMachine(unsigned long)+0x164>)
 8029520:	215c      	movs	r1, #92	; 0x5c
 8029522:	f015 ff1c 	bl	803f35e <strrchr>
 8029526:	2800      	cmp	r0, #0
 8029528:	d049      	beq.n	80295be <BASEMENT_EXIT_errorStateMachine(unsigned long)+0x10a>
 802952a:	215c      	movs	r1, #92	; 0x5c
 802952c:	483a      	ldr	r0, [pc, #232]	; (8029618 <BASEMENT_EXIT_errorStateMachine(unsigned long)+0x164>)
 802952e:	f015 ff16 	bl	803f35e <strrchr>
 8029532:	1c41      	adds	r1, r0, #1
 8029534:	e7d3      	b.n	80294de <BASEMENT_EXIT_errorStateMachine(unsigned long)+0x2a>
 8029536:	4b3a      	ldr	r3, [pc, #232]	; (8029620 <BASEMENT_EXIT_errorStateMachine(unsigned long)+0x16c>)
 8029538:	edd3 7a01 	vldr	s15, [r3, #4]
 802953c:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 8029540:	ee77 7a87 	vadd.f32	s15, s15, s14
 8029544:	2201      	movs	r2, #1
 8029546:	4620      	mov	r0, r4
 8029548:	edc3 7a01 	vstr	s15, [r3, #4]
 802954c:	7022      	strb	r2, [r4, #0]
 802954e:	b00c      	add	sp, #48	; 0x30
 8029550:	bd70      	pop	{r4, r5, r6, pc}
 8029552:	220c      	movs	r2, #12
 8029554:	4933      	ldr	r1, [pc, #204]	; (8029624 <BASEMENT_EXIT_errorStateMachine(unsigned long)+0x170>)
 8029556:	eb0d 0002 	add.w	r0, sp, r2
 802955a:	f7f9 fac5 	bl	8022ae8 <Robot::getAxis(ROBOT_axisIndex_t)>
 802955e:	f89d 3010 	ldrb.w	r3, [sp, #16]
 8029562:	2b00      	cmp	r3, #0
 8029564:	d137      	bne.n	80295d6 <BASEMENT_EXIT_errorStateMachine(unsigned long)+0x122>
 8029566:	ad05      	add	r5, sp, #20
 8029568:	492e      	ldr	r1, [pc, #184]	; (8029624 <BASEMENT_EXIT_errorStateMachine(unsigned long)+0x170>)
 802956a:	2211      	movs	r2, #17
 802956c:	4628      	mov	r0, r5
 802956e:	f7f9 fabb 	bl	8022ae8 <Robot::getAxis(ROBOT_axisIndex_t)>
 8029572:	f89d 3018 	ldrb.w	r3, [sp, #24]
 8029576:	9905      	ldr	r1, [sp, #20]
 8029578:	f88d 3010 	strb.w	r3, [sp, #16]
 802957c:	9103      	str	r1, [sp, #12]
 802957e:	2b00      	cmp	r3, #0
 8029580:	d0bd      	beq.n	80294fe <BASEMENT_EXIT_errorStateMachine(unsigned long)+0x4a>
 8029582:	680b      	ldr	r3, [r1, #0]
 8029584:	4628      	mov	r0, r5
 8029586:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8029588:	4798      	blx	r3
 802958a:	f89d 301c 	ldrb.w	r3, [sp, #28]
 802958e:	2b02      	cmp	r3, #2
 8029590:	d1b5      	bne.n	80294fe <BASEMENT_EXIT_errorStateMachine(unsigned long)+0x4a>
 8029592:	4821      	ldr	r0, [pc, #132]	; (8029618 <BASEMENT_EXIT_errorStateMachine(unsigned long)+0x164>)
 8029594:	212f      	movs	r1, #47	; 0x2f
 8029596:	f015 fee2 	bl	803f35e <strrchr>
 802959a:	b368      	cbz	r0, 80295f8 <BASEMENT_EXIT_errorStateMachine(unsigned long)+0x144>
 802959c:	212f      	movs	r1, #47	; 0x2f
 802959e:	481e      	ldr	r0, [pc, #120]	; (8029618 <BASEMENT_EXIT_errorStateMachine(unsigned long)+0x164>)
 80295a0:	f015 fedd 	bl	803f35e <strrchr>
 80295a4:	1c41      	adds	r1, r0, #1
 80295a6:	9b06      	ldr	r3, [sp, #24]
 80295a8:	9300      	str	r3, [sp, #0]
 80295aa:	f44f 729e 	mov.w	r2, #316	; 0x13c
 80295ae:	4b1e      	ldr	r3, [pc, #120]	; (8029628 <BASEMENT_EXIT_errorStateMachine(unsigned long)+0x174>)
 80295b0:	2000      	movs	r0, #0
 80295b2:	f7f9 f8f1 	bl	8022798 <DEBUG_logMsg>
 80295b6:	4b1d      	ldr	r3, [pc, #116]	; (802962c <BASEMENT_EXIT_errorStateMachine(unsigned long)+0x178>)
 80295b8:	2207      	movs	r2, #7
 80295ba:	701a      	strb	r2, [r3, #0]
 80295bc:	e79f      	b.n	80294fe <BASEMENT_EXIT_errorStateMachine(unsigned long)+0x4a>
 80295be:	4916      	ldr	r1, [pc, #88]	; (8029618 <BASEMENT_EXIT_errorStateMachine(unsigned long)+0x164>)
 80295c0:	e78d      	b.n	80294de <BASEMENT_EXIT_errorStateMachine(unsigned long)+0x2a>
 80295c2:	2202      	movs	r2, #2
 80295c4:	4611      	mov	r1, r2
 80295c6:	a805      	add	r0, sp, #20
 80295c8:	f002 fb86 	bl	802bcd8 <TaskStatus::TaskStatus(TaskStatus::Result_e, unsigned int)>
 80295cc:	a905      	add	r1, sp, #20
 80295ce:	4620      	mov	r0, r4
 80295d0:	f002 fb92 	bl	802bcf8 <TaskStatus::operator=(TaskStatus const&)>
 80295d4:	e789      	b.n	80294ea <BASEMENT_EXIT_errorStateMachine(unsigned long)+0x36>
 80295d6:	9903      	ldr	r1, [sp, #12]
 80295d8:	680b      	ldr	r3, [r1, #0]
 80295da:	ad05      	add	r5, sp, #20
 80295dc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80295de:	4628      	mov	r0, r5
 80295e0:	4798      	blx	r3
 80295e2:	f89d 101c 	ldrb.w	r1, [sp, #28]
 80295e6:	2900      	cmp	r1, #0
 80295e8:	d1be      	bne.n	8029568 <BASEMENT_EXIT_errorStateMachine(unsigned long)+0xb4>
 80295ea:	7873      	ldrb	r3, [r6, #1]
 80295ec:	4630      	mov	r0, r6
 80295ee:	3301      	adds	r3, #1
 80295f0:	7073      	strb	r3, [r6, #1]
 80295f2:	f7fe fe73 	bl	80282dc <SM_RUNNER_setError>
 80295f6:	e7b7      	b.n	8029568 <BASEMENT_EXIT_errorStateMachine(unsigned long)+0xb4>
 80295f8:	4807      	ldr	r0, [pc, #28]	; (8029618 <BASEMENT_EXIT_errorStateMachine(unsigned long)+0x164>)
 80295fa:	215c      	movs	r1, #92	; 0x5c
 80295fc:	f015 feaf 	bl	803f35e <strrchr>
 8029600:	b128      	cbz	r0, 802960e <BASEMENT_EXIT_errorStateMachine(unsigned long)+0x15a>
 8029602:	215c      	movs	r1, #92	; 0x5c
 8029604:	4804      	ldr	r0, [pc, #16]	; (8029618 <BASEMENT_EXIT_errorStateMachine(unsigned long)+0x164>)
 8029606:	f015 feaa 	bl	803f35e <strrchr>
 802960a:	1c41      	adds	r1, r0, #1
 802960c:	e7cb      	b.n	80295a6 <BASEMENT_EXIT_errorStateMachine(unsigned long)+0xf2>
 802960e:	4902      	ldr	r1, [pc, #8]	; (8029618 <BASEMENT_EXIT_errorStateMachine(unsigned long)+0x164>)
 8029610:	e7c9      	b.n	80295a6 <BASEMENT_EXIT_errorStateMachine(unsigned long)+0xf2>
 8029612:	bf00      	nop
 8029614:	20004dc4 	.word	0x20004dc4
 8029618:	080458dc 	.word	0x080458dc
 802961c:	0804593c 	.word	0x0804593c
 8029620:	20004db4 	.word	0x20004db4
 8029624:	2000f630 	.word	0x2000f630
 8029628:	08045928 	.word	0x08045928
 802962c:	20004db0 	.word	0x20004db0

08029630 <BASEMENT_EXIT_mainStateMachine(unsigned long)>:
 8029630:	b570      	push	{r4, r5, r6, lr}
 8029632:	460d      	mov	r5, r1
 8029634:	b090      	sub	sp, #64	; 0x40
 8029636:	2100      	movs	r1, #0
 8029638:	4604      	mov	r4, r0
 802963a:	f002 fb47 	bl	802bccc <TaskStatus::TaskStatus(TaskStatus::Result_e)>
 802963e:	4a81      	ldr	r2, [pc, #516]	; (8029844 <BASEMENT_EXIT_mainStateMachine(unsigned long)+0x214>)
 8029640:	7813      	ldrb	r3, [r2, #0]
 8029642:	2b0c      	cmp	r3, #12
 8029644:	f200 80dd 	bhi.w	8029802 <BASEMENT_EXIT_mainStateMachine(unsigned long)+0x1d2>
 8029648:	e8df f003 	tbb	[pc, r3]
 802964c:	4a3b2714 	.word	0x4a3b2714
 8029650:	7a6f6055 	.word	0x7a6f6055
 8029654:	b5b0a698 	.word	0xb5b0a698
 8029658:	07          	.byte	0x07
 8029659:	00          	.byte	0x00
 802965a:	487b      	ldr	r0, [pc, #492]	; (8029848 <BASEMENT_EXIT_mainStateMachine(unsigned long)+0x218>)
 802965c:	2102      	movs	r1, #2
 802965e:	f7f9 fa2d 	bl	8022abc <Robot::updateArticulation(Articulation::State_e)>
 8029662:	4b7a      	ldr	r3, [pc, #488]	; (802984c <BASEMENT_EXIT_mainStateMachine(unsigned long)+0x21c>)
 8029664:	781b      	ldrb	r3, [r3, #0]
 8029666:	2b00      	cmp	r3, #0
 8029668:	f000 80c5 	beq.w	80297f6 <BASEMENT_EXIT_mainStateMachine(unsigned long)+0x1c6>
 802966c:	2202      	movs	r2, #2
 802966e:	6063      	str	r3, [r4, #4]
 8029670:	7022      	strb	r2, [r4, #0]
 8029672:	e00f      	b.n	8029694 <BASEMENT_EXIT_mainStateMachine(unsigned long)+0x64>
 8029674:	2301      	movs	r3, #1
 8029676:	7891      	ldrb	r1, [r2, #2]
 8029678:	9300      	str	r3, [sp, #0]
 802967a:	a809      	add	r0, sp, #36	; 0x24
 802967c:	f640 4511 	movw	r5, #3089	; 0xc11
 8029680:	2302      	movs	r3, #2
 8029682:	aa07      	add	r2, sp, #28
 8029684:	f8ad 501c 	strh.w	r5, [sp, #28]
 8029688:	f7fe fa32 	bl	8027af0 <ACTIONS_powerList(bool, ROBOT_axisIndex_t const*, unsigned char, AXIS_powerState_t)>
 802968c:	a909      	add	r1, sp, #36	; 0x24
 802968e:	4620      	mov	r0, r4
 8029690:	f002 fb32 	bl	802bcf8 <TaskStatus::operator=(TaskStatus const&)>
 8029694:	4620      	mov	r0, r4
 8029696:	b010      	add	sp, #64	; 0x40
 8029698:	bd70      	pop	{r4, r5, r6, pc}
 802969a:	4b6d      	ldr	r3, [pc, #436]	; (8029850 <BASEMENT_EXIT_mainStateMachine(unsigned long)+0x220>)
 802969c:	781b      	ldrb	r3, [r3, #0]
 802969e:	2b01      	cmp	r3, #1
 80296a0:	4b6c      	ldr	r3, [pc, #432]	; (8029854 <BASEMENT_EXIT_mainStateMachine(unsigned long)+0x224>)
 80296a2:	f000 8095 	beq.w	80297d0 <BASEMENT_EXIT_mainStateMachine(unsigned long)+0x1a0>
 80296a6:	ed93 0a01 	vldr	s0, [r3, #4]
 80296aa:	7891      	ldrb	r1, [r2, #2]
 80296ac:	2300      	movs	r3, #0
 80296ae:	a809      	add	r0, sp, #36	; 0x24
 80296b0:	9300      	str	r3, [sp, #0]
 80296b2:	220c      	movs	r2, #12
 80296b4:	f7fe f8a8 	bl	8027808 <ACTIONS_move(bool, ROBOT_axisIndex_t, float, AXIS_moveType_t, AXIS_mode_t)>
 80296b8:	a909      	add	r1, sp, #36	; 0x24
 80296ba:	4620      	mov	r0, r4
 80296bc:	f002 fb1c 	bl	802bcf8 <TaskStatus::operator=(TaskStatus const&)>
 80296c0:	e7e8      	b.n	8029694 <BASEMENT_EXIT_mainStateMachine(unsigned long)+0x64>
 80296c2:	4b65      	ldr	r3, [pc, #404]	; (8029858 <BASEMENT_EXIT_mainStateMachine(unsigned long)+0x228>)
 80296c4:	7891      	ldrb	r1, [r2, #2]
 80296c6:	ed93 0a00 	vldr	s0, [r3]
 80296ca:	2300      	movs	r3, #0
 80296cc:	a809      	add	r0, sp, #36	; 0x24
 80296ce:	9300      	str	r3, [sp, #0]
 80296d0:	221b      	movs	r2, #27
 80296d2:	f7fe f899 	bl	8027808 <ACTIONS_move(bool, ROBOT_axisIndex_t, float, AXIS_moveType_t, AXIS_mode_t)>
 80296d6:	a909      	add	r1, sp, #36	; 0x24
 80296d8:	4620      	mov	r0, r4
 80296da:	f002 fb0d 	bl	802bcf8 <TaskStatus::operator=(TaskStatus const&)>
 80296de:	e7d9      	b.n	8029694 <BASEMENT_EXIT_mainStateMachine(unsigned long)+0x64>
 80296e0:	7891      	ldrb	r1, [r2, #2]
 80296e2:	a809      	add	r0, sp, #36	; 0x24
 80296e4:	2301      	movs	r3, #1
 80296e6:	220f      	movs	r2, #15
 80296e8:	f7fe f9b0 	bl	8027a4c <ACTIONS_power(bool, ROBOT_axisIndex_t, AXIS_powerState_t)>
 80296ec:	a909      	add	r1, sp, #36	; 0x24
 80296ee:	4620      	mov	r0, r4
 80296f0:	f002 fb02 	bl	802bcf8 <TaskStatus::operator=(TaskStatus const&)>
 80296f4:	e7ce      	b.n	8029694 <BASEMENT_EXIT_mainStateMachine(unsigned long)+0x64>
 80296f6:	7891      	ldrb	r1, [r2, #2]
 80296f8:	a809      	add	r0, sp, #36	; 0x24
 80296fa:	2300      	movs	r3, #0
 80296fc:	220a      	movs	r2, #10
 80296fe:	f7fe f9a5 	bl	8027a4c <ACTIONS_power(bool, ROBOT_axisIndex_t, AXIS_powerState_t)>
 8029702:	a909      	add	r1, sp, #36	; 0x24
 8029704:	4620      	mov	r0, r4
 8029706:	f002 faf7 	bl	802bcf8 <TaskStatus::operator=(TaskStatus const&)>
 802970a:	e7c3      	b.n	8029694 <BASEMENT_EXIT_mainStateMachine(unsigned long)+0x64>
 802970c:	4b51      	ldr	r3, [pc, #324]	; (8029854 <BASEMENT_EXIT_mainStateMachine(unsigned long)+0x224>)
 802970e:	7891      	ldrb	r1, [r2, #2]
 8029710:	ed93 0a03 	vldr	s0, [r3, #12]
 8029714:	2300      	movs	r3, #0
 8029716:	a809      	add	r0, sp, #36	; 0x24
 8029718:	9300      	str	r3, [sp, #0]
 802971a:	220b      	movs	r2, #11
 802971c:	f7fe f874 	bl	8027808 <ACTIONS_move(bool, ROBOT_axisIndex_t, float, AXIS_moveType_t, AXIS_mode_t)>
 8029720:	a909      	add	r1, sp, #36	; 0x24
 8029722:	4620      	mov	r0, r4
 8029724:	f002 fae8 	bl	802bcf8 <TaskStatus::operator=(TaskStatus const&)>
 8029728:	e7b4      	b.n	8029694 <BASEMENT_EXIT_mainStateMachine(unsigned long)+0x64>
 802972a:	7891      	ldrb	r1, [r2, #2]
 802972c:	a809      	add	r0, sp, #36	; 0x24
 802972e:	2300      	movs	r3, #0
 8029730:	220b      	movs	r2, #11
 8029732:	f7fe f98b 	bl	8027a4c <ACTIONS_power(bool, ROBOT_axisIndex_t, AXIS_powerState_t)>
 8029736:	a909      	add	r1, sp, #36	; 0x24
 8029738:	4620      	mov	r0, r4
 802973a:	f002 fadd 	bl	802bcf8 <TaskStatus::operator=(TaskStatus const&)>
 802973e:	e7a9      	b.n	8029694 <BASEMENT_EXIT_mainStateMachine(unsigned long)+0x64>
 8029740:	4b45      	ldr	r3, [pc, #276]	; (8029858 <BASEMENT_EXIT_mainStateMachine(unsigned long)+0x228>)
 8029742:	7891      	ldrb	r1, [r2, #2]
 8029744:	681b      	ldr	r3, [r3, #0]
 8029746:	9308      	str	r3, [sp, #32]
 8029748:	2002      	movs	r0, #2
 802974a:	2300      	movs	r3, #0
 802974c:	f04f 4685 	mov.w	r6, #1115684864	; 0x42800000
 8029750:	aa06      	add	r2, sp, #24
 8029752:	e9cd 3302 	strd	r3, r3, [sp, #8]
 8029756:	e9cd 2000 	strd	r2, r0, [sp]
 802975a:	f8ad 3018 	strh.w	r3, [sp, #24]
 802975e:	a809      	add	r0, sp, #36	; 0x24
 8029760:	f641 250f 	movw	r5, #6671	; 0x1a0f
 8029764:	ab07      	add	r3, sp, #28
 8029766:	9607      	str	r6, [sp, #28]
 8029768:	aa05      	add	r2, sp, #20
 802976a:	f8ad 5014 	strh.w	r5, [sp, #20]
 802976e:	f7fe f935 	bl	80279dc <ACTIONS_moveList(bool, ROBOT_axisIndex_t const*, float*, AXIS_moveType_t*, unsigned char, unsigned int, AXIS_mode_t)>
 8029772:	a909      	add	r1, sp, #36	; 0x24
 8029774:	4620      	mov	r0, r4
 8029776:	f002 fabf 	bl	802bcf8 <TaskStatus::operator=(TaskStatus const&)>
 802977a:	e78b      	b.n	8029694 <BASEMENT_EXIT_mainStateMachine(unsigned long)+0x64>
 802977c:	2300      	movs	r3, #0
 802977e:	7891      	ldrb	r1, [r2, #2]
 8029780:	ed9f 0a36 	vldr	s0, [pc, #216]	; 802985c <BASEMENT_EXIT_mainStateMachine(unsigned long)+0x22c>
 8029784:	9300      	str	r3, [sp, #0]
 8029786:	a809      	add	r0, sp, #36	; 0x24
 8029788:	220f      	movs	r2, #15
 802978a:	f7fe f83d 	bl	8027808 <ACTIONS_move(bool, ROBOT_axisIndex_t, float, AXIS_moveType_t, AXIS_mode_t)>
 802978e:	a909      	add	r1, sp, #36	; 0x24
 8029790:	4620      	mov	r0, r4
 8029792:	f002 fab1 	bl	802bcf8 <TaskStatus::operator=(TaskStatus const&)>
 8029796:	e77d      	b.n	8029694 <BASEMENT_EXIT_mainStateMachine(unsigned long)+0x64>
 8029798:	7891      	ldrb	r1, [r2, #2]
 802979a:	a809      	add	r0, sp, #36	; 0x24
 802979c:	2200      	movs	r2, #0
 802979e:	f7fe f9c9 	bl	8027b34 <ACTIONS_powerAllAxis(bool, AXIS_powerState_t)>
 80297a2:	a909      	add	r1, sp, #36	; 0x24
 80297a4:	4620      	mov	r0, r4
 80297a6:	f002 faa7 	bl	802bcf8 <TaskStatus::operator=(TaskStatus const&)>
 80297aa:	e773      	b.n	8029694 <BASEMENT_EXIT_mainStateMachine(unsigned long)+0x64>
 80297ac:	f005 fc2e 	bl	802f00c <CAMERA_trigger()>
 80297b0:	2301      	movs	r3, #1
 80297b2:	7023      	strb	r3, [r4, #0]
 80297b4:	e76e      	b.n	8029694 <BASEMENT_EXIT_mainStateMachine(unsigned long)+0x64>
 80297b6:	0769      	lsls	r1, r5, #29
 80297b8:	f57f af6c 	bpl.w	8029694 <BASEMENT_EXIT_mainStateMachine(unsigned long)+0x64>
 80297bc:	a809      	add	r0, sp, #36	; 0x24
 80297be:	f005 faa1 	bl	802ed04 <CAMERA_getResponseData()>
 80297c2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80297c4:	1c5a      	adds	r2, r3, #1
 80297c6:	bf0c      	ite	eq
 80297c8:	2302      	moveq	r3, #2
 80297ca:	2301      	movne	r3, #1
 80297cc:	7023      	strb	r3, [r4, #0]
 80297ce:	e761      	b.n	8029694 <BASEMENT_EXIT_mainStateMachine(unsigned long)+0x64>
 80297d0:	685b      	ldr	r3, [r3, #4]
 80297d2:	7891      	ldrb	r1, [r2, #2]
 80297d4:	4e22      	ldr	r6, [pc, #136]	; (8029860 <BASEMENT_EXIT_mainStateMachine(unsigned long)+0x230>)
 80297d6:	9307      	str	r3, [sp, #28]
 80297d8:	2002      	movs	r0, #2
 80297da:	2300      	movs	r3, #0
 80297dc:	aa06      	add	r2, sp, #24
 80297de:	e9cd 3302 	strd	r3, r3, [sp, #8]
 80297e2:	e9cd 2000 	strd	r2, r0, [sp]
 80297e6:	f8ad 3018 	strh.w	r3, [sp, #24]
 80297ea:	a809      	add	r0, sp, #36	; 0x24
 80297ec:	f241 150c 	movw	r5, #4364	; 0x110c
 80297f0:	ab07      	add	r3, sp, #28
 80297f2:	9608      	str	r6, [sp, #32]
 80297f4:	e7b8      	b.n	8029768 <BASEMENT_EXIT_mainStateMachine(unsigned long)+0x138>
 80297f6:	2101      	movs	r1, #1
 80297f8:	4812      	ldr	r0, [pc, #72]	; (8029844 <BASEMENT_EXIT_mainStateMachine(unsigned long)+0x214>)
 80297fa:	7021      	strb	r1, [r4, #0]
 80297fc:	f7fe fd80 	bl	8028300 <SM_RUNNER_setComplete>
 8029800:	e748      	b.n	8029694 <BASEMENT_EXIT_mainStateMachine(unsigned long)+0x64>
 8029802:	4818      	ldr	r0, [pc, #96]	; (8029864 <BASEMENT_EXIT_mainStateMachine(unsigned long)+0x234>)
 8029804:	212f      	movs	r1, #47	; 0x2f
 8029806:	f015 fdaa 	bl	803f35e <strrchr>
 802980a:	b170      	cbz	r0, 802982a <BASEMENT_EXIT_mainStateMachine(unsigned long)+0x1fa>
 802980c:	4815      	ldr	r0, [pc, #84]	; (8029864 <BASEMENT_EXIT_mainStateMachine(unsigned long)+0x234>)
 802980e:	212f      	movs	r1, #47	; 0x2f
 8029810:	f015 fda5 	bl	803f35e <strrchr>
 8029814:	3001      	adds	r0, #1
 8029816:	4b14      	ldr	r3, [pc, #80]	; (8029868 <BASEMENT_EXIT_mainStateMachine(unsigned long)+0x238>)
 8029818:	4601      	mov	r1, r0
 802981a:	f44f 7283 	mov.w	r2, #262	; 0x106
 802981e:	2000      	movs	r0, #0
 8029820:	f7f8 ffba 	bl	8022798 <DEBUG_logMsg>
 8029824:	2302      	movs	r3, #2
 8029826:	7023      	strb	r3, [r4, #0]
 8029828:	e734      	b.n	8029694 <BASEMENT_EXIT_mainStateMachine(unsigned long)+0x64>
 802982a:	480e      	ldr	r0, [pc, #56]	; (8029864 <BASEMENT_EXIT_mainStateMachine(unsigned long)+0x234>)
 802982c:	215c      	movs	r1, #92	; 0x5c
 802982e:	f015 fd96 	bl	803f35e <strrchr>
 8029832:	b128      	cbz	r0, 8029840 <BASEMENT_EXIT_mainStateMachine(unsigned long)+0x210>
 8029834:	480b      	ldr	r0, [pc, #44]	; (8029864 <BASEMENT_EXIT_mainStateMachine(unsigned long)+0x234>)
 8029836:	215c      	movs	r1, #92	; 0x5c
 8029838:	f015 fd91 	bl	803f35e <strrchr>
 802983c:	3001      	adds	r0, #1
 802983e:	e7ea      	b.n	8029816 <BASEMENT_EXIT_mainStateMachine(unsigned long)+0x1e6>
 8029840:	4808      	ldr	r0, [pc, #32]	; (8029864 <BASEMENT_EXIT_mainStateMachine(unsigned long)+0x234>)
 8029842:	e7e8      	b.n	8029816 <BASEMENT_EXIT_mainStateMachine(unsigned long)+0x1e6>
 8029844:	20004dc4 	.word	0x20004dc4
 8029848:	2000f630 	.word	0x2000f630
 802984c:	20004db0 	.word	0x20004db0
 8029850:	20004db1 	.word	0x20004db1
 8029854:	20004db4 	.word	0x20004db4
 8029858:	20000078 	.word	0x20000078
 802985c:	42a00000 	.word	0x42a00000
 8029860:	43070000 	.word	0x43070000
 8029864:	080458dc 	.word	0x080458dc
 8029868:	08045968 	.word	0x08045968

0802986c <BASEMENT_EXIT_runTask(unsigned long, BASEMENT_EXIT_turretState_t, bool)>:
 802986c:	b570      	push	{r4, r5, r6, lr}
 802986e:	461d      	mov	r5, r3
 8029870:	b086      	sub	sp, #24
 8029872:	4604      	mov	r4, r0
 8029874:	460b      	mov	r3, r1
 8029876:	b945      	cbnz	r5, 802988a <BASEMENT_EXIT_runTask(unsigned long, BASEMENT_EXIT_turretState_t, bool)+0x1e>
 8029878:	4620      	mov	r0, r4
 802987a:	4a19      	ldr	r2, [pc, #100]	; (80298e0 <BASEMENT_EXIT_runTask(unsigned long, BASEMENT_EXIT_turretState_t, bool)+0x74>)
 802987c:	4919      	ldr	r1, [pc, #100]	; (80298e4 <BASEMENT_EXIT_runTask(unsigned long, BASEMENT_EXIT_turretState_t, bool)+0x78>)
 802987e:	9500      	str	r5, [sp, #0]
 8029880:	f7fe fb4c 	bl	8027f1c <SM_RUNNER_runStateMachine>
 8029884:	4620      	mov	r0, r4
 8029886:	b006      	add	sp, #24
 8029888:	bd70      	pop	{r4, r5, r6, pc}
 802988a:	4817      	ldr	r0, [pc, #92]	; (80298e8 <BASEMENT_EXIT_runTask(unsigned long, BASEMENT_EXIT_turretState_t, bool)+0x7c>)
 802988c:	9103      	str	r1, [sp, #12]
 802988e:	4616      	mov	r6, r2
 8029890:	f006 fd08 	bl	80302a4 <Nest::getBasementPositions()>
 8029894:	4a15      	ldr	r2, [pc, #84]	; (80298ec <BASEMENT_EXIT_runTask(unsigned long, BASEMENT_EXIT_turretState_t, bool)+0x80>)
 8029896:	4914      	ldr	r1, [pc, #80]	; (80298e8 <BASEMENT_EXIT_runTask(unsigned long, BASEMENT_EXIT_turretState_t, bool)+0x7c>)
 8029898:	ed82 0a00 	vstr	s0, [r2]
 802989c:	a804      	add	r0, sp, #16
 802989e:	edc2 0a01 	vstr	s1, [r2, #4]
 80298a2:	ed82 1a02 	vstr	s2, [r2, #8]
 80298a6:	edc2 1a03 	vstr	s3, [r2, #12]
 80298aa:	f006 fc75 	bl	8030198 <Nest::getStructureHeight()>
 80298ae:	f89d 2014 	ldrb.w	r2, [sp, #20]
 80298b2:	9b03      	ldr	r3, [sp, #12]
 80298b4:	b982      	cbnz	r2, 80298d8 <BASEMENT_EXIT_runTask(unsigned long, BASEMENT_EXIT_turretState_t, bool)+0x6c>
 80298b6:	ed9f 0a0e 	vldr	s0, [pc, #56]	; 80298f0 <BASEMENT_EXIT_runTask(unsigned long, BASEMENT_EXIT_turretState_t, bool)+0x84>
 80298ba:	4a0e      	ldr	r2, [pc, #56]	; (80298f4 <BASEMENT_EXIT_runTask(unsigned long, BASEMENT_EXIT_turretState_t, bool)+0x88>)
 80298bc:	480e      	ldr	r0, [pc, #56]	; (80298f8 <BASEMENT_EXIT_runTask(unsigned long, BASEMENT_EXIT_turretState_t, bool)+0x8c>)
 80298be:	7016      	strb	r6, [r2, #0]
 80298c0:	210c      	movs	r1, #12
 80298c2:	2200      	movs	r2, #0
 80298c4:	9303      	str	r3, [sp, #12]
 80298c6:	f7f9 f9e5 	bl	8022c94 <Robot::estimateMoveTime(ROBOT_axisIndex_t, float, AXIS_mode_t)>
 80298ca:	4a0c      	ldr	r2, [pc, #48]	; (80298fc <BASEMENT_EXIT_runTask(unsigned long, BASEMENT_EXIT_turretState_t, bool)+0x90>)
 80298cc:	9b03      	ldr	r3, [sp, #12]
 80298ce:	f500 501c 	add.w	r0, r0, #9984	; 0x2700
 80298d2:	3010      	adds	r0, #16
 80298d4:	6150      	str	r0, [r2, #20]
 80298d6:	e7cf      	b.n	8029878 <BASEMENT_EXIT_runTask(unsigned long, BASEMENT_EXIT_turretState_t, bool)+0xc>
 80298d8:	ed9d 0a04 	vldr	s0, [sp, #16]
 80298dc:	e7ed      	b.n	80298ba <BASEMENT_EXIT_runTask(unsigned long, BASEMENT_EXIT_turretState_t, bool)+0x4e>
 80298de:	bf00      	nop
 80298e0:	20004dc4 	.word	0x20004dc4
 80298e4:	20000f84 	.word	0x20000f84
 80298e8:	20004b30 	.word	0x20004b30
 80298ec:	20004db4 	.word	0x20004db4
 80298f0:	45fa0000 	.word	0x45fa0000
 80298f4:	20004db1 	.word	0x20004db1
 80298f8:	2000f630 	.word	0x2000f630
 80298fc:	20000e94 	.word	0x20000e94

08029900 <CONFIGURE_mainStateMachine(unsigned long)>:
 8029900:	b570      	push	{r4, r5, r6, lr}
 8029902:	2100      	movs	r1, #0
 8029904:	b08c      	sub	sp, #48	; 0x30
 8029906:	4604      	mov	r4, r0
 8029908:	f002 f9e0 	bl	802bccc <TaskStatus::TaskStatus(TaskStatus::Result_e)>
 802990c:	4a63      	ldr	r2, [pc, #396]	; (8029a9c <CONFIGURE_mainStateMachine(unsigned long)+0x19c>)
 802990e:	7813      	ldrb	r3, [r2, #0]
 8029910:	2b04      	cmp	r3, #4
 8029912:	f200 80bf 	bhi.w	8029a94 <CONFIGURE_mainStateMachine(unsigned long)+0x194>
 8029916:	e8df f003 	tbb	[pc, r3]
 802991a:	2210      	.short	0x2210
 802991c:	433c      	.short	0x433c
 802991e:	03          	.byte	0x03
 802991f:	00          	.byte	0x00
 8029920:	485e      	ldr	r0, [pc, #376]	; (8029a9c <CONFIGURE_mainStateMachine(unsigned long)+0x19c>)
 8029922:	2101      	movs	r1, #1
 8029924:	f7fe fcec 	bl	8028300 <SM_RUNNER_setComplete>
 8029928:	485d      	ldr	r0, [pc, #372]	; (8029aa0 <CONFIGURE_mainStateMachine(unsigned long)+0x1a0>)
 802992a:	2102      	movs	r1, #2
 802992c:	f7f9 f932 	bl	8022b94 <Robot::updateStatus(ROBOT_status_t)>
 8029930:	2301      	movs	r3, #1
 8029932:	7023      	strb	r3, [r4, #0]
 8029934:	4620      	mov	r0, r4
 8029936:	b00c      	add	sp, #48	; 0x30
 8029938:	bd70      	pop	{r4, r5, r6, pc}
 802993a:	4859      	ldr	r0, [pc, #356]	; (8029aa0 <CONFIGURE_mainStateMachine(unsigned long)+0x1a0>)
 802993c:	f7f9 f8e2 	bl	8022b04 <Robot::getStatus()>
 8029940:	2800      	cmp	r0, #0
 8029942:	d13b      	bne.n	80299bc <CONFIGURE_mainStateMachine(unsigned long)+0xbc>
 8029944:	4603      	mov	r3, r0
 8029946:	4602      	mov	r2, r0
 8029948:	2101      	movs	r1, #1
 802994a:	20ff      	movs	r0, #255	; 0xff
 802994c:	f7fa fcf6 	bl	802433c <MCM_send>
 8029950:	2800      	cmp	r0, #0
 8029952:	d075      	beq.n	8029a40 <CONFIGURE_mainStateMachine(unsigned long)+0x140>
 8029954:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 8029958:	f010 fafa 	bl	8039f50 <_tx_thread_sleep>
 802995c:	e7ea      	b.n	8029934 <CONFIGURE_mainStateMachine(unsigned long)+0x34>
 802995e:	7895      	ldrb	r5, [r2, #2]
 8029960:	a803      	add	r0, sp, #12
 8029962:	2100      	movs	r1, #0
 8029964:	f002 f9b2 	bl	802bccc <TaskStatus::TaskStatus(TaskStatus::Result_e)>
 8029968:	2d00      	cmp	r5, #0
 802996a:	d13f      	bne.n	80299ec <CONFIGURE_mainStateMachine(unsigned long)+0xec>
 802996c:	4d4d      	ldr	r5, [pc, #308]	; (8029aa4 <CONFIGURE_mainStateMachine(unsigned long)+0x1a4>)
 802996e:	786b      	ldrb	r3, [r5, #1]
 8029970:	b36b      	cbz	r3, 80299ce <CONFIGURE_mainStateMachine(unsigned long)+0xce>
 8029972:	7829      	ldrb	r1, [r5, #0]
 8029974:	484a      	ldr	r0, [pc, #296]	; (8029aa0 <CONFIGURE_mainStateMachine(unsigned long)+0x1a0>)
 8029976:	aa05      	add	r2, sp, #20
 8029978:	f7f9 f8c6 	bl	8022b08 <Robot::getAxisStatus(ROBOT_axisIndex_t, AXIS_status_t*)>
 802997c:	f89d 301c 	ldrb.w	r3, [sp, #28]
 8029980:	2b00      	cmp	r3, #0
 8029982:	d03d      	beq.n	8029a00 <CONFIGURE_mainStateMachine(unsigned long)+0x100>
 8029984:	a903      	add	r1, sp, #12
 8029986:	4620      	mov	r0, r4
 8029988:	f002 f9b6 	bl	802bcf8 <TaskStatus::operator=(TaskStatus const&)>
 802998c:	4620      	mov	r0, r4
 802998e:	b00c      	add	sp, #48	; 0x30
 8029990:	bd70      	pop	{r4, r5, r6, pc}
 8029992:	f7fa fc75 	bl	8024280 <CCP_pushMirrorData>
 8029996:	2301      	movs	r3, #1
 8029998:	4620      	mov	r0, r4
 802999a:	7023      	strb	r3, [r4, #0]
 802999c:	b00c      	add	sp, #48	; 0x30
 802999e:	bd70      	pop	{r4, r5, r6, pc}
 80299a0:	2000      	movs	r0, #0
 80299a2:	f005 fba1 	bl	802f0e8 <CAMERA_activateProfile(CAMERA_configProfile_t)>
 80299a6:	f005 fb31 	bl	802f00c <CAMERA_trigger()>
 80299aa:	f005 fb2f 	bl	802f00c <CAMERA_trigger()>
 80299ae:	f005 fb2d 	bl	802f00c <CAMERA_trigger()>
 80299b2:	2301      	movs	r3, #1
 80299b4:	4620      	mov	r0, r4
 80299b6:	7023      	strb	r3, [r4, #0]
 80299b8:	b00c      	add	sp, #48	; 0x30
 80299ba:	bd70      	pop	{r4, r5, r6, pc}
 80299bc:	a805      	add	r0, sp, #20
 80299be:	2101      	movs	r1, #1
 80299c0:	f002 f984 	bl	802bccc <TaskStatus::TaskStatus(TaskStatus::Result_e)>
 80299c4:	a905      	add	r1, sp, #20
 80299c6:	4620      	mov	r0, r4
 80299c8:	f002 f996 	bl	802bcf8 <TaskStatus::operator=(TaskStatus const&)>
 80299cc:	e7b2      	b.n	8029934 <CONFIGURE_mainStateMachine(unsigned long)+0x34>
 80299ce:	782a      	ldrb	r2, [r5, #0]
 80299d0:	4933      	ldr	r1, [pc, #204]	; (8029aa0 <CONFIGURE_mainStateMachine(unsigned long)+0x1a0>)
 80299d2:	a805      	add	r0, sp, #20
 80299d4:	f7f9 f888 	bl	8022ae8 <Robot::getAxis(ROBOT_axisIndex_t)>
 80299d8:	f89d 3018 	ldrb.w	r3, [sp, #24]
 80299dc:	b163      	cbz	r3, 80299f8 <CONFIGURE_mainStateMachine(unsigned long)+0xf8>
 80299de:	9805      	ldr	r0, [sp, #20]
 80299e0:	6803      	ldr	r3, [r0, #0]
 80299e2:	681b      	ldr	r3, [r3, #0]
 80299e4:	4798      	blx	r3
 80299e6:	2301      	movs	r3, #1
 80299e8:	706b      	strb	r3, [r5, #1]
 80299ea:	e7cb      	b.n	8029984 <CONFIGURE_mainStateMachine(unsigned long)+0x84>
 80299ec:	2202      	movs	r2, #2
 80299ee:	2100      	movs	r1, #0
 80299f0:	482c      	ldr	r0, [pc, #176]	; (8029aa4 <CONFIGURE_mainStateMachine(unsigned long)+0x1a4>)
 80299f2:	f015 fe2f 	bl	803f654 <memset>
 80299f6:	e7b9      	b.n	802996c <CONFIGURE_mainStateMachine(unsigned long)+0x6c>
 80299f8:	2302      	movs	r3, #2
 80299fa:	f88d 300c 	strb.w	r3, [sp, #12]
 80299fe:	e7c1      	b.n	8029984 <CONFIGURE_mainStateMachine(unsigned long)+0x84>
 8029a00:	4829      	ldr	r0, [pc, #164]	; (8029aa8 <CONFIGURE_mainStateMachine(unsigned long)+0x1a8>)
 8029a02:	706b      	strb	r3, [r5, #1]
 8029a04:	212f      	movs	r1, #47	; 0x2f
 8029a06:	f015 fcaa 	bl	803f35e <strrchr>
 8029a0a:	b348      	cbz	r0, 8029a60 <CONFIGURE_mainStateMachine(unsigned long)+0x160>
 8029a0c:	4826      	ldr	r0, [pc, #152]	; (8029aa8 <CONFIGURE_mainStateMachine(unsigned long)+0x1a8>)
 8029a0e:	212f      	movs	r1, #47	; 0x2f
 8029a10:	f015 fca5 	bl	803f35e <strrchr>
 8029a14:	1c46      	adds	r6, r0, #1
 8029a16:	7829      	ldrb	r1, [r5, #0]
 8029a18:	4821      	ldr	r0, [pc, #132]	; (8029aa0 <CONFIGURE_mainStateMachine(unsigned long)+0x1a0>)
 8029a1a:	f7f9 f92d 	bl	8022c78 <Robot::getAxisName(ROBOT_axisIndex_t)>
 8029a1e:	4b23      	ldr	r3, [pc, #140]	; (8029aac <CONFIGURE_mainStateMachine(unsigned long)+0x1ac>)
 8029a20:	9000      	str	r0, [sp, #0]
 8029a22:	4631      	mov	r1, r6
 8029a24:	22cf      	movs	r2, #207	; 0xcf
 8029a26:	2002      	movs	r0, #2
 8029a28:	f7f8 feb6 	bl	8022798 <DEBUG_logMsg>
 8029a2c:	782b      	ldrb	r3, [r5, #0]
 8029a2e:	3301      	adds	r3, #1
 8029a30:	b2db      	uxtb	r3, r3
 8029a32:	2b1c      	cmp	r3, #28
 8029a34:	702b      	strb	r3, [r5, #0]
 8029a36:	d1a5      	bne.n	8029984 <CONFIGURE_mainStateMachine(unsigned long)+0x84>
 8029a38:	2301      	movs	r3, #1
 8029a3a:	f88d 300c 	strb.w	r3, [sp, #12]
 8029a3e:	e7a1      	b.n	8029984 <CONFIGURE_mainStateMachine(unsigned long)+0x84>
 8029a40:	4819      	ldr	r0, [pc, #100]	; (8029aa8 <CONFIGURE_mainStateMachine(unsigned long)+0x1a8>)
 8029a42:	212f      	movs	r1, #47	; 0x2f
 8029a44:	f015 fc8b 	bl	803f35e <strrchr>
 8029a48:	b1a8      	cbz	r0, 8029a76 <CONFIGURE_mainStateMachine(unsigned long)+0x176>
 8029a4a:	212f      	movs	r1, #47	; 0x2f
 8029a4c:	4816      	ldr	r0, [pc, #88]	; (8029aa8 <CONFIGURE_mainStateMachine(unsigned long)+0x1a8>)
 8029a4e:	f015 fc86 	bl	803f35e <strrchr>
 8029a52:	1c41      	adds	r1, r0, #1
 8029a54:	4b16      	ldr	r3, [pc, #88]	; (8029ab0 <CONFIGURE_mainStateMachine(unsigned long)+0x1b0>)
 8029a56:	2289      	movs	r2, #137	; 0x89
 8029a58:	2000      	movs	r0, #0
 8029a5a:	f7f8 fe9d 	bl	8022798 <DEBUG_logMsg>
 8029a5e:	e779      	b.n	8029954 <CONFIGURE_mainStateMachine(unsigned long)+0x54>
 8029a60:	4811      	ldr	r0, [pc, #68]	; (8029aa8 <CONFIGURE_mainStateMachine(unsigned long)+0x1a8>)
 8029a62:	215c      	movs	r1, #92	; 0x5c
 8029a64:	f015 fc7b 	bl	803f35e <strrchr>
 8029a68:	b180      	cbz	r0, 8029a8c <CONFIGURE_mainStateMachine(unsigned long)+0x18c>
 8029a6a:	480f      	ldr	r0, [pc, #60]	; (8029aa8 <CONFIGURE_mainStateMachine(unsigned long)+0x1a8>)
 8029a6c:	215c      	movs	r1, #92	; 0x5c
 8029a6e:	f015 fc76 	bl	803f35e <strrchr>
 8029a72:	1c46      	adds	r6, r0, #1
 8029a74:	e7cf      	b.n	8029a16 <CONFIGURE_mainStateMachine(unsigned long)+0x116>
 8029a76:	480c      	ldr	r0, [pc, #48]	; (8029aa8 <CONFIGURE_mainStateMachine(unsigned long)+0x1a8>)
 8029a78:	215c      	movs	r1, #92	; 0x5c
 8029a7a:	f015 fc70 	bl	803f35e <strrchr>
 8029a7e:	b138      	cbz	r0, 8029a90 <CONFIGURE_mainStateMachine(unsigned long)+0x190>
 8029a80:	215c      	movs	r1, #92	; 0x5c
 8029a82:	4809      	ldr	r0, [pc, #36]	; (8029aa8 <CONFIGURE_mainStateMachine(unsigned long)+0x1a8>)
 8029a84:	f015 fc6b 	bl	803f35e <strrchr>
 8029a88:	1c41      	adds	r1, r0, #1
 8029a8a:	e7e3      	b.n	8029a54 <CONFIGURE_mainStateMachine(unsigned long)+0x154>
 8029a8c:	4e06      	ldr	r6, [pc, #24]	; (8029aa8 <CONFIGURE_mainStateMachine(unsigned long)+0x1a8>)
 8029a8e:	e7c2      	b.n	8029a16 <CONFIGURE_mainStateMachine(unsigned long)+0x116>
 8029a90:	4905      	ldr	r1, [pc, #20]	; (8029aa8 <CONFIGURE_mainStateMachine(unsigned long)+0x1a8>)
 8029a92:	e7df      	b.n	8029a54 <CONFIGURE_mainStateMachine(unsigned long)+0x154>
 8029a94:	2302      	movs	r3, #2
 8029a96:	7023      	strb	r3, [r4, #0]
 8029a98:	e74c      	b.n	8029934 <CONFIGURE_mainStateMachine(unsigned long)+0x34>
 8029a9a:	bf00      	nop
 8029a9c:	20004ddc 	.word	0x20004ddc
 8029aa0:	2000f630 	.word	0x2000f630
 8029aa4:	20004dd8 	.word	0x20004dd8
 8029aa8:	08045a84 	.word	0x08045a84
 8029aac:	08045af4 	.word	0x08045af4
 8029ab0:	08045acc 	.word	0x08045acc

08029ab4 <CONFIGURE_runTask(void*, unsigned long, bool)>:
 8029ab4:	b530      	push	{r4, r5, lr}
 8029ab6:	461d      	mov	r5, r3
 8029ab8:	b085      	sub	sp, #20
 8029aba:	4604      	mov	r4, r0
 8029abc:	4613      	mov	r3, r2
 8029abe:	b945      	cbnz	r5, 8029ad2 <CONFIGURE_runTask(void*, unsigned long, bool)+0x1e>
 8029ac0:	4620      	mov	r0, r4
 8029ac2:	4a08      	ldr	r2, [pc, #32]	; (8029ae4 <CONFIGURE_runTask(void*, unsigned long, bool)+0x30>)
 8029ac4:	4908      	ldr	r1, [pc, #32]	; (8029ae8 <CONFIGURE_runTask(void*, unsigned long, bool)+0x34>)
 8029ac6:	9500      	str	r5, [sp, #0]
 8029ac8:	f7fe fa28 	bl	8027f1c <SM_RUNNER_runStateMachine>
 8029acc:	4620      	mov	r0, r4
 8029ace:	b005      	add	sp, #20
 8029ad0:	bd30      	pop	{r4, r5, pc}
 8029ad2:	9203      	str	r2, [sp, #12]
 8029ad4:	4805      	ldr	r0, [pc, #20]	; (8029aec <CONFIGURE_runTask(void*, unsigned long, bool)+0x38>)
 8029ad6:	2202      	movs	r2, #2
 8029ad8:	2100      	movs	r1, #0
 8029ada:	f015 fdbb 	bl	803f654 <memset>
 8029ade:	9b03      	ldr	r3, [sp, #12]
 8029ae0:	e7ee      	b.n	8029ac0 <CONFIGURE_runTask(void*, unsigned long, bool)+0xc>
 8029ae2:	bf00      	nop
 8029ae4:	20004ddc 	.word	0x20004ddc
 8029ae8:	20000ff4 	.word	0x20000ff4
 8029aec:	20004dd8 	.word	0x20004dd8

08029af0 <HOME_mainStateMachine(unsigned long)>:
 8029af0:	b570      	push	{r4, r5, r6, lr}
 8029af2:	460d      	mov	r5, r1
 8029af4:	b082      	sub	sp, #8
 8029af6:	2100      	movs	r1, #0
 8029af8:	4604      	mov	r4, r0
 8029afa:	f002 f8e7 	bl	802bccc <TaskStatus::TaskStatus(TaskStatus::Result_e)>
 8029afe:	4a21      	ldr	r2, [pc, #132]	; (8029b84 <HOME_mainStateMachine(unsigned long)+0x94>)
 8029b00:	7813      	ldrb	r3, [r2, #0]
 8029b02:	b133      	cbz	r3, 8029b12 <HOME_mainStateMachine(unsigned long)+0x22>
 8029b04:	2b01      	cmp	r3, #1
 8029b06:	d014      	beq.n	8029b32 <HOME_mainStateMachine(unsigned long)+0x42>
 8029b08:	2302      	movs	r3, #2
 8029b0a:	4620      	mov	r0, r4
 8029b0c:	7023      	strb	r3, [r4, #0]
 8029b0e:	b002      	add	sp, #8
 8029b10:	bd70      	pop	{r4, r5, r6, pc}
 8029b12:	4b1d      	ldr	r3, [pc, #116]	; (8029b88 <HOME_mainStateMachine(unsigned long)+0x98>)
 8029b14:	481d      	ldr	r0, [pc, #116]	; (8029b8c <HOME_mainStateMachine(unsigned long)+0x9c>)
 8029b16:	7819      	ldrb	r1, [r3, #0]
 8029b18:	7893      	ldrb	r3, [r2, #2]
 8029b1a:	f850 6021 	ldr.w	r6, [r0, r1, lsl #2]
 8029b1e:	462a      	mov	r2, r5
 8029b20:	4668      	mov	r0, sp
 8029b22:	47b0      	blx	r6
 8029b24:	4669      	mov	r1, sp
 8029b26:	4620      	mov	r0, r4
 8029b28:	f002 f8e6 	bl	802bcf8 <TaskStatus::operator=(TaskStatus const&)>
 8029b2c:	4620      	mov	r0, r4
 8029b2e:	b002      	add	sp, #8
 8029b30:	bd70      	pop	{r4, r5, r6, pc}
 8029b32:	4a15      	ldr	r2, [pc, #84]	; (8029b88 <HOME_mainStateMachine(unsigned long)+0x98>)
 8029b34:	7813      	ldrb	r3, [r2, #0]
 8029b36:	7852      	ldrb	r2, [r2, #1]
 8029b38:	2b07      	cmp	r3, #7
 8029b3a:	d820      	bhi.n	8029b7e <HOME_mainStateMachine(unsigned long)+0x8e>
 8029b3c:	e8df f003 	tbb	[pc, r3]
 8029b40:	1d040404 	.word	0x1d040404
 8029b44:	0404151b 	.word	0x0404151b
 8029b48:	2a00      	cmp	r2, #0
 8029b4a:	bf14      	ite	ne
 8029b4c:	f44f 7180 	movne.w	r1, #256	; 0x100
 8029b50:	2102      	moveq	r1, #2
 8029b52:	480f      	ldr	r0, [pc, #60]	; (8029b90 <HOME_mainStateMachine(unsigned long)+0xa0>)
 8029b54:	f7f8 ffb2 	bl	8022abc <Robot::updateArticulation(Articulation::State_e)>
 8029b58:	480a      	ldr	r0, [pc, #40]	; (8029b84 <HOME_mainStateMachine(unsigned long)+0x94>)
 8029b5a:	2101      	movs	r1, #1
 8029b5c:	f7fe fbd0 	bl	8028300 <SM_RUNNER_setComplete>
 8029b60:	2301      	movs	r3, #1
 8029b62:	4620      	mov	r0, r4
 8029b64:	7023      	strb	r3, [r4, #0]
 8029b66:	b002      	add	sp, #8
 8029b68:	bd70      	pop	{r4, r5, r6, pc}
 8029b6a:	2a00      	cmp	r2, #0
 8029b6c:	bf14      	ite	ne
 8029b6e:	f44f 6100 	movne.w	r1, #2048	; 0x800
 8029b72:	2110      	moveq	r1, #16
 8029b74:	e7ed      	b.n	8029b52 <HOME_mainStateMachine(unsigned long)+0x62>
 8029b76:	2180      	movs	r1, #128	; 0x80
 8029b78:	e7eb      	b.n	8029b52 <HOME_mainStateMachine(unsigned long)+0x62>
 8029b7a:	2120      	movs	r1, #32
 8029b7c:	e7e9      	b.n	8029b52 <HOME_mainStateMachine(unsigned long)+0x62>
 8029b7e:	2101      	movs	r1, #1
 8029b80:	e7e7      	b.n	8029b52 <HOME_mainStateMachine(unsigned long)+0x62>
 8029b82:	bf00      	nop
 8029b84:	20004df4 	.word	0x20004df4
 8029b88:	20004df0 	.word	0x20004df0
 8029b8c:	08045b8c 	.word	0x08045b8c
 8029b90:	2000f630 	.word	0x2000f630

08029b94 <HOME_runTask(COMM_CCP_home_t*, unsigned long, bool)>:
 8029b94:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8029b98:	4617      	mov	r7, r2
 8029b9a:	b084      	sub	sp, #16
 8029b9c:	461d      	mov	r5, r3
 8029b9e:	4604      	mov	r4, r0
 8029ba0:	b1ab      	cbz	r3, 8029bce <HOME_runTask(COMM_CCP_home_t*, unsigned long, bool)+0x3a>
 8029ba2:	460e      	mov	r6, r1
 8029ba4:	b311      	cbz	r1, 8029bec <HOME_runTask(COMM_CCP_home_t*, unsigned long, bool)+0x58>
 8029ba6:	f8df 805c 	ldr.w	r8, [pc, #92]	; 8029c04 <HOME_runTask(COMM_CCP_home_t*, unsigned long, bool)+0x70>
 8029baa:	2203      	movs	r2, #3
 8029bac:	2100      	movs	r1, #0
 8029bae:	4640      	mov	r0, r8
 8029bb0:	f015 fd50 	bl	803f654 <memset>
 8029bb4:	78b1      	ldrb	r1, [r6, #2]
 8029bb6:	8833      	ldrh	r3, [r6, #0]
 8029bb8:	480f      	ldr	r0, [pc, #60]	; (8029bf8 <HOME_runTask(COMM_CCP_home_t*, unsigned long, bool)+0x64>)
 8029bba:	f888 1002 	strb.w	r1, [r8, #2]
 8029bbe:	f8a8 3000 	strh.w	r3, [r8]
 8029bc2:	f7f9 f871 	bl	8022ca8 <Robot::setBusVoltage(unsigned char)>
 8029bc6:	480c      	ldr	r0, [pc, #48]	; (8029bf8 <HOME_runTask(COMM_CCP_home_t*, unsigned long, bool)+0x64>)
 8029bc8:	2101      	movs	r1, #1
 8029bca:	f7f8 ff77 	bl	8022abc <Robot::updateArticulation(Articulation::State_e)>
 8029bce:	490b      	ldr	r1, [pc, #44]	; (8029bfc <HOME_runTask(COMM_CCP_home_t*, unsigned long, bool)+0x68>)
 8029bd0:	4a0b      	ldr	r2, [pc, #44]	; (8029c00 <HOME_runTask(COMM_CCP_home_t*, unsigned long, bool)+0x6c>)
 8029bd2:	9500      	str	r5, [sp, #0]
 8029bd4:	a802      	add	r0, sp, #8
 8029bd6:	463b      	mov	r3, r7
 8029bd8:	f7fe f9a0 	bl	8027f1c <SM_RUNNER_runStateMachine>
 8029bdc:	a902      	add	r1, sp, #8
 8029bde:	4620      	mov	r0, r4
 8029be0:	f002 f882 	bl	802bce8 <TaskStatus::TaskStatus(TaskStatus const&)>
 8029be4:	4620      	mov	r0, r4
 8029be6:	b004      	add	sp, #16
 8029be8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8029bec:	2209      	movs	r2, #9
 8029bee:	2102      	movs	r1, #2
 8029bf0:	f002 f872 	bl	802bcd8 <TaskStatus::TaskStatus(TaskStatus::Result_e, unsigned int)>
 8029bf4:	e7f6      	b.n	8029be4 <HOME_runTask(COMM_CCP_home_t*, unsigned long, bool)+0x50>
 8029bf6:	bf00      	nop
 8029bf8:	2000f630 	.word	0x2000f630
 8029bfc:	20001034 	.word	0x20001034
 8029c00:	20004df4 	.word	0x20004df4
 8029c04:	20004df0 	.word	0x20004df0

08029c08 <FULL_HOME_mainStateMachine(unsigned long)>:
 8029c08:	b570      	push	{r4, r5, r6, lr}
 8029c0a:	4e2b      	ldr	r6, [pc, #172]	; (8029cb8 <FULL_HOME_mainStateMachine(unsigned long)+0xb0>)
 8029c0c:	b086      	sub	sp, #24
 8029c0e:	460d      	mov	r5, r1
 8029c10:	2100      	movs	r1, #0
 8029c12:	4604      	mov	r4, r0
 8029c14:	f002 f85a 	bl	802bccc <TaskStatus::TaskStatus(TaskStatus::Result_e)>
 8029c18:	7833      	ldrb	r3, [r6, #0]
 8029c1a:	2b03      	cmp	r3, #3
 8029c1c:	d849      	bhi.n	8029cb2 <FULL_HOME_mainStateMachine(unsigned long)+0xaa>
 8029c1e:	e8df f003 	tbb	[pc, r3]
 8029c22:	170b      	.short	0x170b
 8029c24:	022d      	.short	0x022d
 8029c26:	4824      	ldr	r0, [pc, #144]	; (8029cb8 <FULL_HOME_mainStateMachine(unsigned long)+0xb0>)
 8029c28:	2101      	movs	r1, #1
 8029c2a:	f7fe fb69 	bl	8028300 <SM_RUNNER_setComplete>
 8029c2e:	2301      	movs	r3, #1
 8029c30:	7023      	strb	r3, [r4, #0]
 8029c32:	4620      	mov	r0, r4
 8029c34:	b006      	add	sp, #24
 8029c36:	bd70      	pop	{r4, r5, r6, pc}
 8029c38:	78b1      	ldrb	r1, [r6, #2]
 8029c3a:	a804      	add	r0, sp, #16
 8029c3c:	2200      	movs	r2, #0
 8029c3e:	f7fd ff79 	bl	8027b34 <ACTIONS_powerAllAxis(bool, AXIS_powerState_t)>
 8029c42:	a904      	add	r1, sp, #16
 8029c44:	4620      	mov	r0, r4
 8029c46:	f002 f857 	bl	802bcf8 <TaskStatus::operator=(TaskStatus const&)>
 8029c4a:	4620      	mov	r0, r4
 8029c4c:	b006      	add	sp, #24
 8029c4e:	bd70      	pop	{r4, r5, r6, pc}
 8029c50:	4b1a      	ldr	r3, [pc, #104]	; (8029cbc <FULL_HOME_mainStateMachine(unsigned long)+0xb4>)
 8029c52:	78b1      	ldrb	r1, [r6, #2]
 8029c54:	681d      	ldr	r5, [r3, #0]
 8029c56:	f8ad 500c 	strh.w	r5, [sp, #12]
 8029c5a:	2201      	movs	r2, #1
 8029c5c:	a804      	add	r0, sp, #16
 8029c5e:	9200      	str	r2, [sp, #0]
 8029c60:	2303      	movs	r3, #3
 8029c62:	aa03      	add	r2, sp, #12
 8029c64:	0c2d      	lsrs	r5, r5, #16
 8029c66:	f88d 500e 	strb.w	r5, [sp, #14]
 8029c6a:	f7fd ff41 	bl	8027af0 <ACTIONS_powerList(bool, ROBOT_axisIndex_t const*, unsigned char, AXIS_powerState_t)>
 8029c6e:	a904      	add	r1, sp, #16
 8029c70:	4620      	mov	r0, r4
 8029c72:	f002 f841 	bl	802bcf8 <TaskStatus::operator=(TaskStatus const&)>
 8029c76:	4620      	mov	r0, r4
 8029c78:	b006      	add	sp, #24
 8029c7a:	bd70      	pop	{r4, r5, r6, pc}
 8029c7c:	78b3      	ldrb	r3, [r6, #2]
 8029c7e:	4a10      	ldr	r2, [pc, #64]	; (8029cc0 <FULL_HOME_mainStateMachine(unsigned long)+0xb8>)
 8029c80:	9300      	str	r3, [sp, #0]
 8029c82:	a804      	add	r0, sp, #16
 8029c84:	462b      	mov	r3, r5
 8029c86:	490f      	ldr	r1, [pc, #60]	; (8029cc4 <FULL_HOME_mainStateMachine(unsigned long)+0xbc>)
 8029c88:	f7fe f948 	bl	8027f1c <SM_RUNNER_runStateMachine>
 8029c8c:	a904      	add	r1, sp, #16
 8029c8e:	4620      	mov	r0, r4
 8029c90:	f002 f832 	bl	802bcf8 <TaskStatus::operator=(TaskStatus const&)>
 8029c94:	78b3      	ldrb	r3, [r6, #2]
 8029c96:	4a0c      	ldr	r2, [pc, #48]	; (8029cc8 <FULL_HOME_mainStateMachine(unsigned long)+0xc0>)
 8029c98:	9300      	str	r3, [sp, #0]
 8029c9a:	a804      	add	r0, sp, #16
 8029c9c:	462b      	mov	r3, r5
 8029c9e:	490b      	ldr	r1, [pc, #44]	; (8029ccc <FULL_HOME_mainStateMachine(unsigned long)+0xc4>)
 8029ca0:	f7fe f93c 	bl	8027f1c <SM_RUNNER_runStateMachine>
 8029ca4:	a904      	add	r1, sp, #16
 8029ca6:	4620      	mov	r0, r4
 8029ca8:	f002 f830 	bl	802bd0c <TaskStatus::operator&=(TaskStatus const&)>
 8029cac:	4620      	mov	r0, r4
 8029cae:	b006      	add	sp, #24
 8029cb0:	bd70      	pop	{r4, r5, r6, pc}
 8029cb2:	2302      	movs	r3, #2
 8029cb4:	7023      	strb	r3, [r4, #0]
 8029cb6:	e7bc      	b.n	8029c32 <FULL_HOME_mainStateMachine(unsigned long)+0x2a>
 8029cb8:	20004e30 	.word	0x20004e30
 8029cbc:	08045db0 	.word	0x08045db0
 8029cc0:	20004e08 	.word	0x20004e08
 8029cc4:	200010c4 	.word	0x200010c4
 8029cc8:	20004e1c 	.word	0x20004e1c
 8029ccc:	20001144 	.word	0x20001144

08029cd0 <FULL_HOME_topAssemblyStateMachine(unsigned long)>:
 8029cd0:	b510      	push	{r4, lr}
 8029cd2:	2100      	movs	r1, #0
 8029cd4:	b084      	sub	sp, #16
 8029cd6:	4604      	mov	r4, r0
 8029cd8:	f001 fff8 	bl	802bccc <TaskStatus::TaskStatus(TaskStatus::Result_e)>
 8029cdc:	4a2c      	ldr	r2, [pc, #176]	; (8029d90 <FULL_HOME_topAssemblyStateMachine(unsigned long)+0xc0>)
 8029cde:	7813      	ldrb	r3, [r2, #0]
 8029ce0:	2b05      	cmp	r3, #5
 8029ce2:	d852      	bhi.n	8029d8a <FULL_HOME_topAssemblyStateMachine(unsigned long)+0xba>
 8029ce4:	e8df f003 	tbb	[pc, r3]
 8029ce8:	3a2a1b0c 	.word	0x3a2a1b0c
 8029cec:	034a      	.short	0x034a
 8029cee:	4828      	ldr	r0, [pc, #160]	; (8029d90 <FULL_HOME_topAssemblyStateMachine(unsigned long)+0xc0>)
 8029cf0:	2101      	movs	r1, #1
 8029cf2:	f7fe fb05 	bl	8028300 <SM_RUNNER_setComplete>
 8029cf6:	2301      	movs	r3, #1
 8029cf8:	7023      	strb	r3, [r4, #0]
 8029cfa:	4620      	mov	r0, r4
 8029cfc:	b004      	add	sp, #16
 8029cfe:	bd10      	pop	{r4, pc}
 8029d00:	7891      	ldrb	r1, [r2, #2]
 8029d02:	a802      	add	r0, sp, #8
 8029d04:	eeb8 0a00 	vmov.f32	s0, #128	; 0xc0000000 -2.0
 8029d08:	2302      	movs	r3, #2
 8029d0a:	2210      	movs	r2, #16
 8029d0c:	f7fd fc72 	bl	80275f4 <ACTIONS_home(bool, ROBOT_axisIndex_t, AXIS_homeType_t, float)>
 8029d10:	a902      	add	r1, sp, #8
 8029d12:	4620      	mov	r0, r4
 8029d14:	f001 fff0 	bl	802bcf8 <TaskStatus::operator=(TaskStatus const&)>
 8029d18:	4620      	mov	r0, r4
 8029d1a:	b004      	add	sp, #16
 8029d1c:	bd10      	pop	{r4, pc}
 8029d1e:	7891      	ldrb	r1, [r2, #2]
 8029d20:	ed9f 0a1c 	vldr	s0, [pc, #112]	; 8029d94 <FULL_HOME_topAssemblyStateMachine(unsigned long)+0xc4>
 8029d24:	a802      	add	r0, sp, #8
 8029d26:	2302      	movs	r3, #2
 8029d28:	2211      	movs	r2, #17
 8029d2a:	f7fd fc63 	bl	80275f4 <ACTIONS_home(bool, ROBOT_axisIndex_t, AXIS_homeType_t, float)>
 8029d2e:	a902      	add	r1, sp, #8
 8029d30:	4620      	mov	r0, r4
 8029d32:	f001 ffe1 	bl	802bcf8 <TaskStatus::operator=(TaskStatus const&)>
 8029d36:	4620      	mov	r0, r4
 8029d38:	b004      	add	sp, #16
 8029d3a:	bd10      	pop	{r4, pc}
 8029d3c:	2300      	movs	r3, #0
 8029d3e:	7891      	ldrb	r1, [r2, #2]
 8029d40:	9300      	str	r3, [sp, #0]
 8029d42:	a802      	add	r0, sp, #8
 8029d44:	eeb0 0a00 	vmov.f32	s0, #0	; 0x40000000  2.0
 8029d48:	2210      	movs	r2, #16
 8029d4a:	f7fd fd5d 	bl	8027808 <ACTIONS_move(bool, ROBOT_axisIndex_t, float, AXIS_moveType_t, AXIS_mode_t)>
 8029d4e:	a902      	add	r1, sp, #8
 8029d50:	4620      	mov	r0, r4
 8029d52:	f001 ffd1 	bl	802bcf8 <TaskStatus::operator=(TaskStatus const&)>
 8029d56:	4620      	mov	r0, r4
 8029d58:	b004      	add	sp, #16
 8029d5a:	bd10      	pop	{r4, pc}
 8029d5c:	2300      	movs	r3, #0
 8029d5e:	ed9f 0a0e 	vldr	s0, [pc, #56]	; 8029d98 <FULL_HOME_topAssemblyStateMachine(unsigned long)+0xc8>
 8029d62:	7891      	ldrb	r1, [r2, #2]
 8029d64:	9300      	str	r3, [sp, #0]
 8029d66:	a802      	add	r0, sp, #8
 8029d68:	2211      	movs	r2, #17
 8029d6a:	f7fd fd4d 	bl	8027808 <ACTIONS_move(bool, ROBOT_axisIndex_t, float, AXIS_moveType_t, AXIS_mode_t)>
 8029d6e:	a902      	add	r1, sp, #8
 8029d70:	4620      	mov	r0, r4
 8029d72:	f001 ffc1 	bl	802bcf8 <TaskStatus::operator=(TaskStatus const&)>
 8029d76:	4620      	mov	r0, r4
 8029d78:	b004      	add	sp, #16
 8029d7a:	bd10      	pop	{r4, pc}
 8029d7c:	2300      	movs	r3, #0
 8029d7e:	7891      	ldrb	r1, [r2, #2]
 8029d80:	ed9f 0a06 	vldr	s0, [pc, #24]	; 8029d9c <FULL_HOME_topAssemblyStateMachine(unsigned long)+0xcc>
 8029d84:	9300      	str	r3, [sp, #0]
 8029d86:	a802      	add	r0, sp, #8
 8029d88:	e7ee      	b.n	8029d68 <FULL_HOME_topAssemblyStateMachine(unsigned long)+0x98>
 8029d8a:	2302      	movs	r3, #2
 8029d8c:	7023      	strb	r3, [r4, #0]
 8029d8e:	e7b4      	b.n	8029cfa <FULL_HOME_topAssemblyStateMachine(unsigned long)+0x2a>
 8029d90:	20004e08 	.word	0x20004e08
 8029d94:	c0a2e148 	.word	0xc0a2e148
 8029d98:	43870000 	.word	0x43870000
 8029d9c:	43070000 	.word	0x43070000

08029da0 <FULL_HOME_bottomAssemblyStateMachine(unsigned long)>:
 8029da0:	b510      	push	{r4, lr}
 8029da2:	2100      	movs	r1, #0
 8029da4:	b084      	sub	sp, #16
 8029da6:	4604      	mov	r4, r0
 8029da8:	f001 ff90 	bl	802bccc <TaskStatus::TaskStatus(TaskStatus::Result_e)>
 8029dac:	4a5f      	ldr	r2, [pc, #380]	; (8029f2c <FULL_HOME_bottomAssemblyStateMachine(unsigned long)+0x18c>)
 8029dae:	7813      	ldrb	r3, [r2, #0]
 8029db0:	2b0f      	cmp	r3, #15
 8029db2:	f200 80b7 	bhi.w	8029f24 <FULL_HOME_bottomAssemblyStateMachine(unsigned long)+0x184>
 8029db6:	e8df f003 	tbb	[pc, r3]
 8029dba:	1f10      	.short	0x1f10
 8029dbc:	433c3525 	.word	0x433c3525
 8029dc0:	6d675852 	.word	0x6d675852
 8029dc4:	9d96857e 	.word	0x9d96857e
 8029dc8:	08a8      	.short	0x08a8
 8029dca:	2101      	movs	r1, #1
 8029dcc:	4857      	ldr	r0, [pc, #348]	; (8029f2c <FULL_HOME_bottomAssemblyStateMachine(unsigned long)+0x18c>)
 8029dce:	7021      	strb	r1, [r4, #0]
 8029dd0:	f7fe fa96 	bl	8028300 <SM_RUNNER_setComplete>
 8029dd4:	4620      	mov	r0, r4
 8029dd6:	b004      	add	sp, #16
 8029dd8:	bd10      	pop	{r4, pc}
 8029dda:	7891      	ldrb	r1, [r2, #2]
 8029ddc:	a802      	add	r0, sp, #8
 8029dde:	eebe 0a00 	vmov.f32	s0, #224	; 0xbf000000 -0.5
 8029de2:	2302      	movs	r3, #2
 8029de4:	220f      	movs	r2, #15
 8029de6:	f7fd fc05 	bl	80275f4 <ACTIONS_home(bool, ROBOT_axisIndex_t, AXIS_homeType_t, float)>
 8029dea:	a902      	add	r1, sp, #8
 8029dec:	4620      	mov	r0, r4
 8029dee:	f001 ff83 	bl	802bcf8 <TaskStatus::operator=(TaskStatus const&)>
 8029df2:	4620      	mov	r0, r4
 8029df4:	b004      	add	sp, #16
 8029df6:	bd10      	pop	{r4, pc}
 8029df8:	7891      	ldrb	r1, [r2, #2]
 8029dfa:	ed9f 0a4d 	vldr	s0, [pc, #308]	; 8029f30 <FULL_HOME_bottomAssemblyStateMachine(unsigned long)+0x190>
 8029dfe:	a802      	add	r0, sp, #8
 8029e00:	2301      	movs	r3, #1
 8029e02:	e7ef      	b.n	8029de4 <FULL_HOME_bottomAssemblyStateMachine(unsigned long)+0x44>
 8029e04:	2300      	movs	r3, #0
 8029e06:	ed9f 0a4b 	vldr	s0, [pc, #300]	; 8029f34 <FULL_HOME_bottomAssemblyStateMachine(unsigned long)+0x194>
 8029e0a:	7891      	ldrb	r1, [r2, #2]
 8029e0c:	9300      	str	r3, [sp, #0]
 8029e0e:	a802      	add	r0, sp, #8
 8029e10:	220f      	movs	r2, #15
 8029e12:	f7fd fcf9 	bl	8027808 <ACTIONS_move(bool, ROBOT_axisIndex_t, float, AXIS_moveType_t, AXIS_mode_t)>
 8029e16:	a902      	add	r1, sp, #8
 8029e18:	4620      	mov	r0, r4
 8029e1a:	f001 ff6d 	bl	802bcf8 <TaskStatus::operator=(TaskStatus const&)>
 8029e1e:	4620      	mov	r0, r4
 8029e20:	b004      	add	sp, #16
 8029e22:	bd10      	pop	{r4, pc}
 8029e24:	2300      	movs	r3, #0
 8029e26:	7891      	ldrb	r1, [r2, #2]
 8029e28:	ed9f 0a43 	vldr	s0, [pc, #268]	; 8029f38 <FULL_HOME_bottomAssemblyStateMachine(unsigned long)+0x198>
 8029e2c:	9300      	str	r3, [sp, #0]
 8029e2e:	a802      	add	r0, sp, #8
 8029e30:	e7ee      	b.n	8029e10 <FULL_HOME_bottomAssemblyStateMachine(unsigned long)+0x70>
 8029e32:	2300      	movs	r3, #0
 8029e34:	7891      	ldrb	r1, [r2, #2]
 8029e36:	ed9f 0a41 	vldr	s0, [pc, #260]	; 8029f3c <FULL_HOME_bottomAssemblyStateMachine(unsigned long)+0x19c>
 8029e3a:	9300      	str	r3, [sp, #0]
 8029e3c:	a802      	add	r0, sp, #8
 8029e3e:	e7e7      	b.n	8029e10 <FULL_HOME_bottomAssemblyStateMachine(unsigned long)+0x70>
 8029e40:	7891      	ldrb	r1, [r2, #2]
 8029e42:	a802      	add	r0, sp, #8
 8029e44:	eeb2 0a04 	vmov.f32	s0, #36	; 0x41200000  10.0
 8029e48:	2301      	movs	r3, #1
 8029e4a:	221a      	movs	r2, #26
 8029e4c:	f7fd fbd2 	bl	80275f4 <ACTIONS_home(bool, ROBOT_axisIndex_t, AXIS_homeType_t, float)>
 8029e50:	a902      	add	r1, sp, #8
 8029e52:	4620      	mov	r0, r4
 8029e54:	f001 ff50 	bl	802bcf8 <TaskStatus::operator=(TaskStatus const&)>
 8029e58:	4620      	mov	r0, r4
 8029e5a:	b004      	add	sp, #16
 8029e5c:	bd10      	pop	{r4, pc}
 8029e5e:	7891      	ldrb	r1, [r2, #2]
 8029e60:	a802      	add	r0, sp, #8
 8029e62:	eeb8 0a04 	vmov.f32	s0, #132	; 0xc0200000 -2.5
 8029e66:	2302      	movs	r3, #2
 8029e68:	e7ef      	b.n	8029e4a <FULL_HOME_bottomAssemblyStateMachine(unsigned long)+0xaa>
 8029e6a:	7891      	ldrb	r1, [r2, #2]
 8029e6c:	a802      	add	r0, sp, #8
 8029e6e:	eeb2 0a04 	vmov.f32	s0, #36	; 0x41200000  10.0
 8029e72:	2301      	movs	r3, #1
 8029e74:	221b      	movs	r2, #27
 8029e76:	f7fd fbbd 	bl	80275f4 <ACTIONS_home(bool, ROBOT_axisIndex_t, AXIS_homeType_t, float)>
 8029e7a:	a902      	add	r1, sp, #8
 8029e7c:	4620      	mov	r0, r4
 8029e7e:	f001 ff3b 	bl	802bcf8 <TaskStatus::operator=(TaskStatus const&)>
 8029e82:	4620      	mov	r0, r4
 8029e84:	b004      	add	sp, #16
 8029e86:	bd10      	pop	{r4, pc}
 8029e88:	7891      	ldrb	r1, [r2, #2]
 8029e8a:	a802      	add	r0, sp, #8
 8029e8c:	eeb8 0a04 	vmov.f32	s0, #132	; 0xc0200000 -2.5
 8029e90:	2302      	movs	r3, #2
 8029e92:	e7ef      	b.n	8029e74 <FULL_HOME_bottomAssemblyStateMachine(unsigned long)+0xd4>
 8029e94:	4b2a      	ldr	r3, [pc, #168]	; (8029f40 <FULL_HOME_bottomAssemblyStateMachine(unsigned long)+0x1a0>)
 8029e96:	7891      	ldrb	r1, [r2, #2]
 8029e98:	ed93 0a00 	vldr	s0, [r3]
 8029e9c:	2300      	movs	r3, #0
 8029e9e:	a802      	add	r0, sp, #8
 8029ea0:	9300      	str	r3, [sp, #0]
 8029ea2:	221a      	movs	r2, #26
 8029ea4:	f7fd fcb0 	bl	8027808 <ACTIONS_move(bool, ROBOT_axisIndex_t, float, AXIS_moveType_t, AXIS_mode_t)>
 8029ea8:	a902      	add	r1, sp, #8
 8029eaa:	4620      	mov	r0, r4
 8029eac:	f001 ff24 	bl	802bcf8 <TaskStatus::operator=(TaskStatus const&)>
 8029eb0:	4620      	mov	r0, r4
 8029eb2:	b004      	add	sp, #16
 8029eb4:	bd10      	pop	{r4, pc}
 8029eb6:	2300      	movs	r3, #0
 8029eb8:	7891      	ldrb	r1, [r2, #2]
 8029eba:	ed9f 0a22 	vldr	s0, [pc, #136]	; 8029f44 <FULL_HOME_bottomAssemblyStateMachine(unsigned long)+0x1a4>
 8029ebe:	9300      	str	r3, [sp, #0]
 8029ec0:	a802      	add	r0, sp, #8
 8029ec2:	e7ee      	b.n	8029ea2 <FULL_HOME_bottomAssemblyStateMachine(unsigned long)+0x102>
 8029ec4:	4b1e      	ldr	r3, [pc, #120]	; (8029f40 <FULL_HOME_bottomAssemblyStateMachine(unsigned long)+0x1a0>)
 8029ec6:	7891      	ldrb	r1, [r2, #2]
 8029ec8:	ed93 0a00 	vldr	s0, [r3]
 8029ecc:	2300      	movs	r3, #0
 8029ece:	a802      	add	r0, sp, #8
 8029ed0:	9300      	str	r3, [sp, #0]
 8029ed2:	221b      	movs	r2, #27
 8029ed4:	f7fd fc98 	bl	8027808 <ACTIONS_move(bool, ROBOT_axisIndex_t, float, AXIS_moveType_t, AXIS_mode_t)>
 8029ed8:	a902      	add	r1, sp, #8
 8029eda:	4620      	mov	r0, r4
 8029edc:	f001 ff0c 	bl	802bcf8 <TaskStatus::operator=(TaskStatus const&)>
 8029ee0:	4620      	mov	r0, r4
 8029ee2:	b004      	add	sp, #16
 8029ee4:	bd10      	pop	{r4, pc}
 8029ee6:	2300      	movs	r3, #0
 8029ee8:	7891      	ldrb	r1, [r2, #2]
 8029eea:	ed9f 0a16 	vldr	s0, [pc, #88]	; 8029f44 <FULL_HOME_bottomAssemblyStateMachine(unsigned long)+0x1a4>
 8029eee:	9300      	str	r3, [sp, #0]
 8029ef0:	a802      	add	r0, sp, #8
 8029ef2:	e7ee      	b.n	8029ed2 <FULL_HOME_bottomAssemblyStateMachine(unsigned long)+0x132>
 8029ef4:	7891      	ldrb	r1, [r2, #2]
 8029ef6:	a802      	add	r0, sp, #8
 8029ef8:	2301      	movs	r3, #1
 8029efa:	220c      	movs	r2, #12
 8029efc:	f7fd fda6 	bl	8027a4c <ACTIONS_power(bool, ROBOT_axisIndex_t, AXIS_powerState_t)>
 8029f00:	a902      	add	r1, sp, #8
 8029f02:	4620      	mov	r0, r4
 8029f04:	f001 fef8 	bl	802bcf8 <TaskStatus::operator=(TaskStatus const&)>
 8029f08:	e764      	b.n	8029dd4 <FULL_HOME_bottomAssemblyStateMachine(unsigned long)+0x34>
 8029f0a:	7891      	ldrb	r1, [r2, #2]
 8029f0c:	ed9f 0a0e 	vldr	s0, [pc, #56]	; 8029f48 <FULL_HOME_bottomAssemblyStateMachine(unsigned long)+0x1a8>
 8029f10:	a802      	add	r0, sp, #8
 8029f12:	2300      	movs	r3, #0
 8029f14:	220c      	movs	r2, #12
 8029f16:	f7fd fb6d 	bl	80275f4 <ACTIONS_home(bool, ROBOT_axisIndex_t, AXIS_homeType_t, float)>
 8029f1a:	a902      	add	r1, sp, #8
 8029f1c:	4620      	mov	r0, r4
 8029f1e:	f001 feeb 	bl	802bcf8 <TaskStatus::operator=(TaskStatus const&)>
 8029f22:	e757      	b.n	8029dd4 <FULL_HOME_bottomAssemblyStateMachine(unsigned long)+0x34>
 8029f24:	2302      	movs	r3, #2
 8029f26:	7023      	strb	r3, [r4, #0]
 8029f28:	e754      	b.n	8029dd4 <FULL_HOME_bottomAssemblyStateMachine(unsigned long)+0x34>
 8029f2a:	bf00      	nop
 8029f2c:	20004e1c 	.word	0x20004e1c
 8029f30:	42b90000 	.word	0x42b90000
 8029f34:	42800000 	.word	0x42800000
 8029f38:	42b80000 	.word	0x42b80000
 8029f3c:	42a00000 	.word	0x42a00000
 8029f40:	20000078 	.word	0x20000078
 8029f44:	c019999a 	.word	0xc019999a
 8029f48:	00000000 	.word	0x00000000

08029f4c <FULL_HOME_run(COMM_CCP_homingModes_t, unsigned long, bool)>:
 8029f4c:	b570      	push	{r4, r5, r6, lr}
 8029f4e:	4604      	mov	r4, r0
 8029f50:	b084      	sub	sp, #16
 8029f52:	b153      	cbz	r3, 8029f6a <FULL_HOME_run(COMM_CCP_homingModes_t, unsigned long, bool)+0x1e>
 8029f54:	1f8d      	subs	r5, r1, #6
 8029f56:	2d01      	cmp	r5, #1
 8029f58:	d815      	bhi.n	8029f86 <FULL_HOME_run(COMM_CCP_homingModes_t, unsigned long, bool)+0x3a>
 8029f5a:	480e      	ldr	r0, [pc, #56]	; (8029f94 <FULL_HOME_run(COMM_CCP_homingModes_t, unsigned long, bool)+0x48>)
 8029f5c:	4e0e      	ldr	r6, [pc, #56]	; (8029f98 <FULL_HOME_run(COMM_CCP_homingModes_t, unsigned long, bool)+0x4c>)
 8029f5e:	4d0f      	ldr	r5, [pc, #60]	; (8029f9c <FULL_HOME_run(COMM_CCP_homingModes_t, unsigned long, bool)+0x50>)
 8029f60:	2906      	cmp	r1, #6
 8029f62:	bf0c      	ite	eq
 8029f64:	4601      	moveq	r1, r0
 8029f66:	4631      	movne	r1, r6
 8029f68:	60e9      	str	r1, [r5, #12]
 8029f6a:	9300      	str	r3, [sp, #0]
 8029f6c:	a802      	add	r0, sp, #8
 8029f6e:	4613      	mov	r3, r2
 8029f70:	490b      	ldr	r1, [pc, #44]	; (8029fa0 <FULL_HOME_run(COMM_CCP_homingModes_t, unsigned long, bool)+0x54>)
 8029f72:	4a0c      	ldr	r2, [pc, #48]	; (8029fa4 <FULL_HOME_run(COMM_CCP_homingModes_t, unsigned long, bool)+0x58>)
 8029f74:	f7fd ffd2 	bl	8027f1c <SM_RUNNER_runStateMachine>
 8029f78:	a902      	add	r1, sp, #8
 8029f7a:	4620      	mov	r0, r4
 8029f7c:	f001 feb4 	bl	802bce8 <TaskStatus::TaskStatus(TaskStatus const&)>
 8029f80:	4620      	mov	r0, r4
 8029f82:	b004      	add	sp, #16
 8029f84:	bd70      	pop	{r4, r5, r6, pc}
 8029f86:	2209      	movs	r2, #9
 8029f88:	2102      	movs	r1, #2
 8029f8a:	f001 fea5 	bl	802bcd8 <TaskStatus::TaskStatus(TaskStatus::Result_e, unsigned int)>
 8029f8e:	4620      	mov	r0, r4
 8029f90:	b004      	add	sp, #16
 8029f92:	bd70      	pop	{r4, r5, r6, pc}
 8029f94:	20001244 	.word	0x20001244
 8029f98:	20001164 	.word	0x20001164
 8029f9c:	20001144 	.word	0x20001144
 8029fa0:	200010a4 	.word	0x200010a4
 8029fa4:	20004e30 	.word	0x20004e30

08029fa8 <INSTANT_HOME_mainStateMachine(unsigned long)>:
 8029fa8:	b510      	push	{r4, lr}
 8029faa:	2100      	movs	r1, #0
 8029fac:	b082      	sub	sp, #8
 8029fae:	4604      	mov	r4, r0
 8029fb0:	f001 fe8c 	bl	802bccc <TaskStatus::TaskStatus(TaskStatus::Result_e)>
 8029fb4:	4a56      	ldr	r2, [pc, #344]	; (802a110 <INSTANT_HOME_mainStateMachine(unsigned long)+0x168>)
 8029fb6:	7813      	ldrb	r3, [r2, #0]
 8029fb8:	2b08      	cmp	r3, #8
 8029fba:	f200 80a5 	bhi.w	802a108 <INSTANT_HOME_mainStateMachine(unsigned long)+0x160>
 8029fbe:	e8df f003 	tbb	[pc, r3]
 8029fc2:	1a0e      	.short	0x1a0e
 8029fc4:	68523c26 	.word	0x68523c26
 8029fc8:	947e      	.short	0x947e
 8029fca:	05          	.byte	0x05
 8029fcb:	00          	.byte	0x00
 8029fcc:	4850      	ldr	r0, [pc, #320]	; (802a110 <INSTANT_HOME_mainStateMachine(unsigned long)+0x168>)
 8029fce:	2101      	movs	r1, #1
 8029fd0:	f7fe f996 	bl	8028300 <SM_RUNNER_setComplete>
 8029fd4:	2301      	movs	r3, #1
 8029fd6:	7023      	strb	r3, [r4, #0]
 8029fd8:	4620      	mov	r0, r4
 8029fda:	b002      	add	sp, #8
 8029fdc:	bd10      	pop	{r4, pc}
 8029fde:	7891      	ldrb	r1, [r2, #2]
 8029fe0:	4668      	mov	r0, sp
 8029fe2:	2201      	movs	r2, #1
 8029fe4:	f7fd fda6 	bl	8027b34 <ACTIONS_powerAllAxis(bool, AXIS_powerState_t)>
 8029fe8:	4669      	mov	r1, sp
 8029fea:	4620      	mov	r0, r4
 8029fec:	f001 fe84 	bl	802bcf8 <TaskStatus::operator=(TaskStatus const&)>
 8029ff0:	4620      	mov	r0, r4
 8029ff2:	b002      	add	sp, #8
 8029ff4:	bd10      	pop	{r4, pc}
 8029ff6:	7891      	ldrb	r1, [r2, #2]
 8029ff8:	4668      	mov	r0, sp
 8029ffa:	2200      	movs	r2, #0
 8029ffc:	f7fd fd9a 	bl	8027b34 <ACTIONS_powerAllAxis(bool, AXIS_powerState_t)>
 802a000:	4669      	mov	r1, sp
 802a002:	4620      	mov	r0, r4
 802a004:	f001 fe78 	bl	802bcf8 <TaskStatus::operator=(TaskStatus const&)>
 802a008:	4620      	mov	r0, r4
 802a00a:	b002      	add	sp, #8
 802a00c:	bd10      	pop	{r4, pc}
 802a00e:	4b41      	ldr	r3, [pc, #260]	; (802a114 <INSTANT_HOME_mainStateMachine(unsigned long)+0x16c>)
 802a010:	4841      	ldr	r0, [pc, #260]	; (802a118 <INSTANT_HOME_mainStateMachine(unsigned long)+0x170>)
 802a012:	781b      	ldrb	r3, [r3, #0]
 802a014:	7891      	ldrb	r1, [r2, #2]
 802a016:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 802a01a:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
 802a01e:	ed93 0a03 	vldr	s0, [r3, #12]
 802a022:	4668      	mov	r0, sp
 802a024:	2300      	movs	r3, #0
 802a026:	2210      	movs	r2, #16
 802a028:	f7fd fae4 	bl	80275f4 <ACTIONS_home(bool, ROBOT_axisIndex_t, AXIS_homeType_t, float)>
 802a02c:	4669      	mov	r1, sp
 802a02e:	4620      	mov	r0, r4
 802a030:	f001 fe62 	bl	802bcf8 <TaskStatus::operator=(TaskStatus const&)>
 802a034:	4620      	mov	r0, r4
 802a036:	b002      	add	sp, #8
 802a038:	bd10      	pop	{r4, pc}
 802a03a:	4b36      	ldr	r3, [pc, #216]	; (802a114 <INSTANT_HOME_mainStateMachine(unsigned long)+0x16c>)
 802a03c:	4836      	ldr	r0, [pc, #216]	; (802a118 <INSTANT_HOME_mainStateMachine(unsigned long)+0x170>)
 802a03e:	781b      	ldrb	r3, [r3, #0]
 802a040:	7891      	ldrb	r1, [r2, #2]
 802a042:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 802a046:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
 802a04a:	ed93 0a02 	vldr	s0, [r3, #8]
 802a04e:	4668      	mov	r0, sp
 802a050:	2300      	movs	r3, #0
 802a052:	2211      	movs	r2, #17
 802a054:	f7fd face 	bl	80275f4 <ACTIONS_home(bool, ROBOT_axisIndex_t, AXIS_homeType_t, float)>
 802a058:	4669      	mov	r1, sp
 802a05a:	4620      	mov	r0, r4
 802a05c:	f001 fe4c 	bl	802bcf8 <TaskStatus::operator=(TaskStatus const&)>
 802a060:	4620      	mov	r0, r4
 802a062:	b002      	add	sp, #8
 802a064:	bd10      	pop	{r4, pc}
 802a066:	4b2b      	ldr	r3, [pc, #172]	; (802a114 <INSTANT_HOME_mainStateMachine(unsigned long)+0x16c>)
 802a068:	482b      	ldr	r0, [pc, #172]	; (802a118 <INSTANT_HOME_mainStateMachine(unsigned long)+0x170>)
 802a06a:	781b      	ldrb	r3, [r3, #0]
 802a06c:	7891      	ldrb	r1, [r2, #2]
 802a06e:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 802a072:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
 802a076:	ed93 0a01 	vldr	s0, [r3, #4]
 802a07a:	4668      	mov	r0, sp
 802a07c:	2300      	movs	r3, #0
 802a07e:	220f      	movs	r2, #15
 802a080:	f7fd fab8 	bl	80275f4 <ACTIONS_home(bool, ROBOT_axisIndex_t, AXIS_homeType_t, float)>
 802a084:	4669      	mov	r1, sp
 802a086:	4620      	mov	r0, r4
 802a088:	f001 fe36 	bl	802bcf8 <TaskStatus::operator=(TaskStatus const&)>
 802a08c:	4620      	mov	r0, r4
 802a08e:	b002      	add	sp, #8
 802a090:	bd10      	pop	{r4, pc}
 802a092:	4b20      	ldr	r3, [pc, #128]	; (802a114 <INSTANT_HOME_mainStateMachine(unsigned long)+0x16c>)
 802a094:	4820      	ldr	r0, [pc, #128]	; (802a118 <INSTANT_HOME_mainStateMachine(unsigned long)+0x170>)
 802a096:	781b      	ldrb	r3, [r3, #0]
 802a098:	7891      	ldrb	r1, [r2, #2]
 802a09a:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 802a09e:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
 802a0a2:	ed93 0a04 	vldr	s0, [r3, #16]
 802a0a6:	4668      	mov	r0, sp
 802a0a8:	2300      	movs	r3, #0
 802a0aa:	221a      	movs	r2, #26
 802a0ac:	f7fd faa2 	bl	80275f4 <ACTIONS_home(bool, ROBOT_axisIndex_t, AXIS_homeType_t, float)>
 802a0b0:	4669      	mov	r1, sp
 802a0b2:	4620      	mov	r0, r4
 802a0b4:	f001 fe20 	bl	802bcf8 <TaskStatus::operator=(TaskStatus const&)>
 802a0b8:	4620      	mov	r0, r4
 802a0ba:	b002      	add	sp, #8
 802a0bc:	bd10      	pop	{r4, pc}
 802a0be:	4b15      	ldr	r3, [pc, #84]	; (802a114 <INSTANT_HOME_mainStateMachine(unsigned long)+0x16c>)
 802a0c0:	4815      	ldr	r0, [pc, #84]	; (802a118 <INSTANT_HOME_mainStateMachine(unsigned long)+0x170>)
 802a0c2:	781b      	ldrb	r3, [r3, #0]
 802a0c4:	7891      	ldrb	r1, [r2, #2]
 802a0c6:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 802a0ca:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
 802a0ce:	ed93 0a05 	vldr	s0, [r3, #20]
 802a0d2:	4668      	mov	r0, sp
 802a0d4:	2300      	movs	r3, #0
 802a0d6:	221b      	movs	r2, #27
 802a0d8:	f7fd fa8c 	bl	80275f4 <ACTIONS_home(bool, ROBOT_axisIndex_t, AXIS_homeType_t, float)>
 802a0dc:	4669      	mov	r1, sp
 802a0de:	4620      	mov	r0, r4
 802a0e0:	f001 fe0a 	bl	802bcf8 <TaskStatus::operator=(TaskStatus const&)>
 802a0e4:	4620      	mov	r0, r4
 802a0e6:	b002      	add	sp, #8
 802a0e8:	bd10      	pop	{r4, pc}
 802a0ea:	7891      	ldrb	r1, [r2, #2]
 802a0ec:	ed9f 0a0b 	vldr	s0, [pc, #44]	; 802a11c <INSTANT_HOME_mainStateMachine(unsigned long)+0x174>
 802a0f0:	4668      	mov	r0, sp
 802a0f2:	2300      	movs	r3, #0
 802a0f4:	220c      	movs	r2, #12
 802a0f6:	f7fd fa7d 	bl	80275f4 <ACTIONS_home(bool, ROBOT_axisIndex_t, AXIS_homeType_t, float)>
 802a0fa:	4669      	mov	r1, sp
 802a0fc:	4620      	mov	r0, r4
 802a0fe:	f001 fdfb 	bl	802bcf8 <TaskStatus::operator=(TaskStatus const&)>
 802a102:	4620      	mov	r0, r4
 802a104:	b002      	add	sp, #8
 802a106:	bd10      	pop	{r4, pc}
 802a108:	2302      	movs	r3, #2
 802a10a:	7023      	strb	r3, [r4, #0]
 802a10c:	e764      	b.n	8029fd8 <INSTANT_HOME_mainStateMachine(unsigned long)+0x30>
 802a10e:	bf00      	nop
 802a110:	20004e48 	.word	0x20004e48
 802a114:	20004e44 	.word	0x20004e44
 802a118:	20001314 	.word	0x20001314
 802a11c:	00000000 	.word	0x00000000

0802a120 <INSTANT_HOME_run(COMM_CCP_homingModes_t, unsigned long, bool)>:
 802a120:	b530      	push	{r4, r5, lr}
 802a122:	4604      	mov	r4, r0
 802a124:	b085      	sub	sp, #20
 802a126:	b123      	cbz	r3, 802a132 <INSTANT_HOME_run(COMM_CCP_homingModes_t, unsigned long, bool)+0x12>
 802a128:	1f8d      	subs	r5, r1, #6
 802a12a:	2d01      	cmp	r5, #1
 802a12c:	d90f      	bls.n	802a14e <INSTANT_HOME_run(COMM_CCP_homingModes_t, unsigned long, bool)+0x2e>
 802a12e:	480b      	ldr	r0, [pc, #44]	; (802a15c <INSTANT_HOME_run(COMM_CCP_homingModes_t, unsigned long, bool)+0x3c>)
 802a130:	7001      	strb	r1, [r0, #0]
 802a132:	9300      	str	r3, [sp, #0]
 802a134:	a802      	add	r0, sp, #8
 802a136:	4613      	mov	r3, r2
 802a138:	4909      	ldr	r1, [pc, #36]	; (802a160 <INSTANT_HOME_run(COMM_CCP_homingModes_t, unsigned long, bool)+0x40>)
 802a13a:	4a0a      	ldr	r2, [pc, #40]	; (802a164 <INSTANT_HOME_run(COMM_CCP_homingModes_t, unsigned long, bool)+0x44>)
 802a13c:	f7fd feee 	bl	8027f1c <SM_RUNNER_runStateMachine>
 802a140:	a902      	add	r1, sp, #8
 802a142:	4620      	mov	r0, r4
 802a144:	f001 fdd0 	bl	802bce8 <TaskStatus::TaskStatus(TaskStatus const&)>
 802a148:	4620      	mov	r0, r4
 802a14a:	b005      	add	sp, #20
 802a14c:	bd30      	pop	{r4, r5, pc}
 802a14e:	2209      	movs	r2, #9
 802a150:	2102      	movs	r1, #2
 802a152:	f001 fdc1 	bl	802bcd8 <TaskStatus::TaskStatus(TaskStatus::Result_e, unsigned int)>
 802a156:	4620      	mov	r0, r4
 802a158:	b005      	add	sp, #20
 802a15a:	bd30      	pop	{r4, r5, pc}
 802a15c:	20004e44 	.word	0x20004e44
 802a160:	20001444 	.word	0x20001444
 802a164:	20004e48 	.word	0x20004e48

0802a168 <_GLOBAL__sub_I__Z16INSTANT_HOME_run22COMM_CCP_homingModes_tmb>:
 802a168:	4a06      	ldr	r2, [pc, #24]	; (802a184 <_GLOBAL__sub_I__Z16INSTANT_HOME_run22COMM_CCP_homingModes_tmb+0x1c>)
 802a16a:	4b07      	ldr	r3, [pc, #28]	; (802a188 <_GLOBAL__sub_I__Z16INSTANT_HOME_run22COMM_CCP_homingModes_tmb+0x20>)
 802a16c:	6812      	ldr	r2, [r2, #0]
 802a16e:	611a      	str	r2, [r3, #16]
 802a170:	615a      	str	r2, [r3, #20]
 802a172:	629a      	str	r2, [r3, #40]	; 0x28
 802a174:	62da      	str	r2, [r3, #44]	; 0x2c
 802a176:	641a      	str	r2, [r3, #64]	; 0x40
 802a178:	645a      	str	r2, [r3, #68]	; 0x44
 802a17a:	65da      	str	r2, [r3, #92]	; 0x5c
 802a17c:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
 802a180:	4770      	bx	lr
 802a182:	bf00      	nop
 802a184:	20000078 	.word	0x20000078
 802a188:	20001314 	.word	0x20001314

0802a18c <LOCATE_mainStateMachine(unsigned long)>:
 802a18c:	b570      	push	{r4, r5, r6, lr}
 802a18e:	460d      	mov	r5, r1
 802a190:	b090      	sub	sp, #64	; 0x40
 802a192:	2100      	movs	r1, #0
 802a194:	4604      	mov	r4, r0
 802a196:	f001 fd99 	bl	802bccc <TaskStatus::TaskStatus(TaskStatus::Result_e)>
 802a19a:	4b25      	ldr	r3, [pc, #148]	; (802a230 <LOCATE_mainStateMachine(unsigned long)+0xa4>)
 802a19c:	781b      	ldrb	r3, [r3, #0]
 802a19e:	2b04      	cmp	r3, #4
 802a1a0:	d842      	bhi.n	802a228 <LOCATE_mainStateMachine(unsigned long)+0x9c>
 802a1a2:	e8df f003 	tbb	[pc, r3]
 802a1a6:	1d0b      	.short	0x1d0b
 802a1a8:	2c25      	.short	0x2c25
 802a1aa:	03          	.byte	0x03
 802a1ab:	00          	.byte	0x00
 802a1ac:	2101      	movs	r1, #1
 802a1ae:	4820      	ldr	r0, [pc, #128]	; (802a230 <LOCATE_mainStateMachine(unsigned long)+0xa4>)
 802a1b0:	7021      	strb	r1, [r4, #0]
 802a1b2:	f7fe f8a5 	bl	8028300 <SM_RUNNER_setComplete>
 802a1b6:	4620      	mov	r0, r4
 802a1b8:	b010      	add	sp, #64	; 0x40
 802a1ba:	bd70      	pop	{r4, r5, r6, pc}
 802a1bc:	4d1d      	ldr	r5, [pc, #116]	; (802a234 <LOCATE_mainStateMachine(unsigned long)+0xa8>)
 802a1be:	201b      	movs	r0, #27
 802a1c0:	7829      	ldrb	r1, [r5, #0]
 802a1c2:	f7fa f847 	bl	8024254 <CCP_setMirrorData>
 802a1c6:	7869      	ldrb	r1, [r5, #1]
 802a1c8:	201c      	movs	r0, #28
 802a1ca:	f7fa f843 	bl	8024254 <CCP_setMirrorData>
 802a1ce:	78a9      	ldrb	r1, [r5, #2]
 802a1d0:	201d      	movs	r0, #29
 802a1d2:	f7fa f83f 	bl	8024254 <CCP_setMirrorData>
 802a1d6:	2301      	movs	r3, #1
 802a1d8:	4620      	mov	r0, r4
 802a1da:	7023      	strb	r3, [r4, #0]
 802a1dc:	b010      	add	sp, #64	; 0x40
 802a1de:	bd70      	pop	{r4, r5, r6, pc}
 802a1e0:	2000      	movs	r0, #0
 802a1e2:	f004 ff81 	bl	802f0e8 <CAMERA_activateProfile(CAMERA_configProfile_t)>
 802a1e6:	2301      	movs	r3, #1
 802a1e8:	4620      	mov	r0, r4
 802a1ea:	7023      	strb	r3, [r4, #0]
 802a1ec:	b010      	add	sp, #64	; 0x40
 802a1ee:	bd70      	pop	{r4, r5, r6, pc}
 802a1f0:	f004 ff0c 	bl	802f00c <CAMERA_trigger()>
 802a1f4:	2301      	movs	r3, #1
 802a1f6:	4620      	mov	r0, r4
 802a1f8:	7023      	strb	r3, [r4, #0]
 802a1fa:	b010      	add	sp, #64	; 0x40
 802a1fc:	bd70      	pop	{r4, r5, r6, pc}
 802a1fe:	076b      	lsls	r3, r5, #29
 802a200:	d5d9      	bpl.n	802a1b6 <LOCATE_mainStateMachine(unsigned long)+0x2a>
 802a202:	4668      	mov	r0, sp
 802a204:	466d      	mov	r5, sp
 802a206:	f004 fd7d 	bl	802ed04 <CAMERA_getResponseData()>
 802a20a:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 802a20c:	ae09      	add	r6, sp, #36	; 0x24
 802a20e:	c60f      	stmia	r6!, {r0, r1, r2, r3}
 802a210:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 802a214:	e886 0007 	stmia.w	r6, {r0, r1, r2}
 802a218:	2204      	movs	r2, #4
 802a21a:	a909      	add	r1, sp, #36	; 0x24
 802a21c:	2000      	movs	r0, #0
 802a21e:	f7f9 fee3 	bl	8023fe8 <CCP_sendPriorityMessage>
 802a222:	2301      	movs	r3, #1
 802a224:	7023      	strb	r3, [r4, #0]
 802a226:	e7c6      	b.n	802a1b6 <LOCATE_mainStateMachine(unsigned long)+0x2a>
 802a228:	2302      	movs	r3, #2
 802a22a:	7023      	strb	r3, [r4, #0]
 802a22c:	e7c3      	b.n	802a1b6 <LOCATE_mainStateMachine(unsigned long)+0x2a>
 802a22e:	bf00      	nop
 802a230:	20004e60 	.word	0x20004e60
 802a234:	20004e5c 	.word	0x20004e5c

0802a238 <LOCATE_runTask(void*, unsigned long, bool)>:
 802a238:	b530      	push	{r4, r5, lr}
 802a23a:	4604      	mov	r4, r0
 802a23c:	b085      	sub	sp, #20
 802a23e:	b12b      	cbz	r3, 802a24c <LOCATE_runTask(void*, unsigned long, bool)+0x14>
 802a240:	b191      	cbz	r1, 802a268 <LOCATE_runTask(void*, unsigned long, bool)+0x30>
 802a242:	480d      	ldr	r0, [pc, #52]	; (802a278 <LOCATE_runTask(void*, unsigned long, bool)+0x40>)
 802a244:	880d      	ldrh	r5, [r1, #0]
 802a246:	7889      	ldrb	r1, [r1, #2]
 802a248:	8005      	strh	r5, [r0, #0]
 802a24a:	7081      	strb	r1, [r0, #2]
 802a24c:	9300      	str	r3, [sp, #0]
 802a24e:	a802      	add	r0, sp, #8
 802a250:	4613      	mov	r3, r2
 802a252:	490a      	ldr	r1, [pc, #40]	; (802a27c <LOCATE_runTask(void*, unsigned long, bool)+0x44>)
 802a254:	4a0a      	ldr	r2, [pc, #40]	; (802a280 <LOCATE_runTask(void*, unsigned long, bool)+0x48>)
 802a256:	f7fd fe61 	bl	8027f1c <SM_RUNNER_runStateMachine>
 802a25a:	a902      	add	r1, sp, #8
 802a25c:	4620      	mov	r0, r4
 802a25e:	f001 fd43 	bl	802bce8 <TaskStatus::TaskStatus(TaskStatus const&)>
 802a262:	4620      	mov	r0, r4
 802a264:	b005      	add	sp, #20
 802a266:	bd30      	pop	{r4, r5, pc}
 802a268:	2209      	movs	r2, #9
 802a26a:	2102      	movs	r1, #2
 802a26c:	f001 fd34 	bl	802bcd8 <TaskStatus::TaskStatus(TaskStatus::Result_e, unsigned int)>
 802a270:	4620      	mov	r0, r4
 802a272:	b005      	add	sp, #20
 802a274:	bd30      	pop	{r4, r5, pc}
 802a276:	bf00      	nop
 802a278:	20004e5c 	.word	0x20004e5c
 802a27c:	200014b4 	.word	0x200014b4
 802a280:	20004e60 	.word	0x20004e60

0802a284 <LOCATE_updateDeadReckoningRunTask(void*, unsigned long, bool)>:
 802a284:	b538      	push	{r3, r4, r5, lr}
 802a286:	4604      	mov	r4, r0
 802a288:	b1b1      	cbz	r1, 802a2b8 <LOCATE_updateDeadReckoningRunTask(void*, unsigned long, bool)+0x34>
 802a28a:	4d0e      	ldr	r5, [pc, #56]	; (802a2c4 <LOCATE_updateDeadReckoningRunTask(void*, unsigned long, bool)+0x40>)
 802a28c:	880b      	ldrh	r3, [r1, #0]
 802a28e:	802b      	strh	r3, [r5, #0]
 802a290:	201b      	movs	r0, #27
 802a292:	788b      	ldrb	r3, [r1, #2]
 802a294:	7829      	ldrb	r1, [r5, #0]
 802a296:	70ab      	strb	r3, [r5, #2]
 802a298:	f7f9 ffdc 	bl	8024254 <CCP_setMirrorData>
 802a29c:	7869      	ldrb	r1, [r5, #1]
 802a29e:	201c      	movs	r0, #28
 802a2a0:	f7f9 ffd8 	bl	8024254 <CCP_setMirrorData>
 802a2a4:	78a9      	ldrb	r1, [r5, #2]
 802a2a6:	201d      	movs	r0, #29
 802a2a8:	f7f9 ffd4 	bl	8024254 <CCP_setMirrorData>
 802a2ac:	2101      	movs	r1, #1
 802a2ae:	4620      	mov	r0, r4
 802a2b0:	f001 fd0c 	bl	802bccc <TaskStatus::TaskStatus(TaskStatus::Result_e)>
 802a2b4:	4620      	mov	r0, r4
 802a2b6:	bd38      	pop	{r3, r4, r5, pc}
 802a2b8:	2209      	movs	r2, #9
 802a2ba:	2102      	movs	r1, #2
 802a2bc:	f001 fd0c 	bl	802bcd8 <TaskStatus::TaskStatus(TaskStatus::Result_e, unsigned int)>
 802a2c0:	4620      	mov	r0, r4
 802a2c2:	bd38      	pop	{r3, r4, r5, pc}
 802a2c4:	20004e5c 	.word	0x20004e5c

0802a2c8 <PRELAUNCH_mainStateMachine(unsigned long)>:
 802a2c8:	b5f0      	push	{r4, r5, r6, r7, lr}
 802a2ca:	460d      	mov	r5, r1
 802a2cc:	b087      	sub	sp, #28
 802a2ce:	2100      	movs	r1, #0
 802a2d0:	4604      	mov	r4, r0
 802a2d2:	f001 fcfb 	bl	802bccc <TaskStatus::TaskStatus(TaskStatus::Result_e)>
 802a2d6:	4a56      	ldr	r2, [pc, #344]	; (802a430 <PRELAUNCH_mainStateMachine(unsigned long)+0x168>)
 802a2d8:	7813      	ldrb	r3, [r2, #0]
 802a2da:	2b0a      	cmp	r3, #10
 802a2dc:	f200 80a4 	bhi.w	802a428 <PRELAUNCH_mainStateMachine(unsigned long)+0x160>
 802a2e0:	e8df f003 	tbb	[pc, r3]
 802a2e4:	4a2c1f14 	.word	0x4a2c1f14
 802a2e8:	706c5c58 	.word	0x706c5c58
 802a2ec:	8981      	.short	0x8981
 802a2ee:	06          	.byte	0x06
 802a2ef:	00          	.byte	0x00
 802a2f0:	4b50      	ldr	r3, [pc, #320]	; (802a434 <PRELAUNCH_mainStateMachine(unsigned long)+0x16c>)
 802a2f2:	781b      	ldrb	r3, [r3, #0]
 802a2f4:	2b03      	cmp	r3, #3
 802a2f6:	f240 8090 	bls.w	802a41a <PRELAUNCH_mainStateMachine(unsigned long)+0x152>
 802a2fa:	484d      	ldr	r0, [pc, #308]	; (802a430 <PRELAUNCH_mainStateMachine(unsigned long)+0x168>)
 802a2fc:	2101      	movs	r1, #1
 802a2fe:	f7fd ffff 	bl	8028300 <SM_RUNNER_setComplete>
 802a302:	2301      	movs	r3, #1
 802a304:	7023      	strb	r3, [r4, #0]
 802a306:	4620      	mov	r0, r4
 802a308:	b007      	add	sp, #28
 802a30a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 802a30c:	7891      	ldrb	r1, [r2, #2]
 802a30e:	a804      	add	r0, sp, #16
 802a310:	2300      	movs	r3, #0
 802a312:	220c      	movs	r2, #12
 802a314:	f7fd fb9a 	bl	8027a4c <ACTIONS_power(bool, ROBOT_axisIndex_t, AXIS_powerState_t)>
 802a318:	a904      	add	r1, sp, #16
 802a31a:	4620      	mov	r0, r4
 802a31c:	f001 fcec 	bl	802bcf8 <TaskStatus::operator=(TaskStatus const&)>
 802a320:	e7f1      	b.n	802a306 <PRELAUNCH_mainStateMachine(unsigned long)+0x3e>
 802a322:	7891      	ldrb	r1, [r2, #2]
 802a324:	a804      	add	r0, sp, #16
 802a326:	2301      	movs	r3, #1
 802a328:	220f      	movs	r2, #15
 802a32a:	f7fd fb8f 	bl	8027a4c <ACTIONS_power(bool, ROBOT_axisIndex_t, AXIS_powerState_t)>
 802a32e:	a904      	add	r1, sp, #16
 802a330:	4620      	mov	r0, r4
 802a332:	f001 fce1 	bl	802bcf8 <TaskStatus::operator=(TaskStatus const&)>
 802a336:	4620      	mov	r0, r4
 802a338:	b007      	add	sp, #28
 802a33a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 802a33c:	493e      	ldr	r1, [pc, #248]	; (802a438 <PRELAUNCH_mainStateMachine(unsigned long)+0x170>)
 802a33e:	4b3f      	ldr	r3, [pc, #252]	; (802a43c <PRELAUNCH_mainStateMachine(unsigned long)+0x174>)
 802a340:	680e      	ldr	r6, [r1, #0]
 802a342:	4f3f      	ldr	r7, [pc, #252]	; (802a440 <PRELAUNCH_mainStateMachine(unsigned long)+0x178>)
 802a344:	7891      	ldrb	r1, [r2, #2]
 802a346:	4d3f      	ldr	r5, [pc, #252]	; (802a444 <PRELAUNCH_mainStateMachine(unsigned long)+0x17c>)
 802a348:	9700      	str	r7, [sp, #0]
 802a34a:	2214      	movs	r2, #20
 802a34c:	f04f 0c00 	mov.w	ip, #0
 802a350:	f04f 4085 	mov.w	r0, #1115684864	; 0x42800000
 802a354:	609e      	str	r6, [r3, #8]
 802a356:	e9cd 2c02 	strd	r2, ip, [sp, #8]
 802a35a:	2203      	movs	r2, #3
 802a35c:	9201      	str	r2, [sp, #4]
 802a35e:	6018      	str	r0, [r3, #0]
 802a360:	605d      	str	r5, [r3, #4]
 802a362:	a804      	add	r0, sp, #16
 802a364:	4a38      	ldr	r2, [pc, #224]	; (802a448 <PRELAUNCH_mainStateMachine(unsigned long)+0x180>)
 802a366:	f7fd fb39 	bl	80279dc <ACTIONS_moveList(bool, ROBOT_axisIndex_t const*, float*, AXIS_moveType_t*, unsigned char, unsigned int, AXIS_mode_t)>
 802a36a:	a904      	add	r1, sp, #16
 802a36c:	4620      	mov	r0, r4
 802a36e:	f001 fcc3 	bl	802bcf8 <TaskStatus::operator=(TaskStatus const&)>
 802a372:	4620      	mov	r0, r4
 802a374:	b007      	add	sp, #28
 802a376:	bdf0      	pop	{r4, r5, r6, r7, pc}
 802a378:	2300      	movs	r3, #0
 802a37a:	7891      	ldrb	r1, [r2, #2]
 802a37c:	ed9f 0a33 	vldr	s0, [pc, #204]	; 802a44c <PRELAUNCH_mainStateMachine(unsigned long)+0x184>
 802a380:	9300      	str	r3, [sp, #0]
 802a382:	a804      	add	r0, sp, #16
 802a384:	220f      	movs	r2, #15
 802a386:	f7fd fa3f 	bl	8027808 <ACTIONS_move(bool, ROBOT_axisIndex_t, float, AXIS_moveType_t, AXIS_mode_t)>
 802a38a:	a904      	add	r1, sp, #16
 802a38c:	4620      	mov	r0, r4
 802a38e:	f001 fcb3 	bl	802bcf8 <TaskStatus::operator=(TaskStatus const&)>
 802a392:	e7b8      	b.n	802a306 <PRELAUNCH_mainStateMachine(unsigned long)+0x3e>
 802a394:	7891      	ldrb	r1, [r2, #2]
 802a396:	a804      	add	r0, sp, #16
 802a398:	2300      	movs	r3, #0
 802a39a:	e7c5      	b.n	802a328 <PRELAUNCH_mainStateMachine(unsigned long)+0x60>
 802a39c:	2300      	movs	r3, #0
 802a39e:	ed9f 0a2c 	vldr	s0, [pc, #176]	; 802a450 <PRELAUNCH_mainStateMachine(unsigned long)+0x188>
 802a3a2:	7891      	ldrb	r1, [r2, #2]
 802a3a4:	9300      	str	r3, [sp, #0]
 802a3a6:	a804      	add	r0, sp, #16
 802a3a8:	221b      	movs	r2, #27
 802a3aa:	f7fd fa2d 	bl	8027808 <ACTIONS_move(bool, ROBOT_axisIndex_t, float, AXIS_moveType_t, AXIS_mode_t)>
 802a3ae:	a904      	add	r1, sp, #16
 802a3b0:	4620      	mov	r0, r4
 802a3b2:	f001 fca1 	bl	802bcf8 <TaskStatus::operator=(TaskStatus const&)>
 802a3b6:	4620      	mov	r0, r4
 802a3b8:	b007      	add	sp, #28
 802a3ba:	bdf0      	pop	{r4, r5, r6, r7, pc}
 802a3bc:	f3c5 03c0 	ubfx	r3, r5, #3, #1
 802a3c0:	7023      	strb	r3, [r4, #0]
 802a3c2:	e7a0      	b.n	802a306 <PRELAUNCH_mainStateMachine(unsigned long)+0x3e>
 802a3c4:	7891      	ldrb	r1, [r2, #2]
 802a3c6:	4b1d      	ldr	r3, [pc, #116]	; (802a43c <PRELAUNCH_mainStateMachine(unsigned long)+0x174>)
 802a3c8:	4d1e      	ldr	r5, [pc, #120]	; (802a444 <PRELAUNCH_mainStateMachine(unsigned long)+0x17c>)
 802a3ca:	4e1d      	ldr	r6, [pc, #116]	; (802a440 <PRELAUNCH_mainStateMachine(unsigned long)+0x178>)
 802a3cc:	9600      	str	r6, [sp, #0]
 802a3ce:	2214      	movs	r2, #20
 802a3d0:	2700      	movs	r7, #0
 802a3d2:	e9cd 2702 	strd	r2, r7, [sp, #8]
 802a3d6:	2000      	movs	r0, #0
 802a3d8:	2203      	movs	r2, #3
 802a3da:	9201      	str	r2, [sp, #4]
 802a3dc:	6018      	str	r0, [r3, #0]
 802a3de:	605d      	str	r5, [r3, #4]
 802a3e0:	a804      	add	r0, sp, #16
 802a3e2:	609d      	str	r5, [r3, #8]
 802a3e4:	e7be      	b.n	802a364 <PRELAUNCH_mainStateMachine(unsigned long)+0x9c>
 802a3e6:	4b14      	ldr	r3, [pc, #80]	; (802a438 <PRELAUNCH_mainStateMachine(unsigned long)+0x170>)
 802a3e8:	7891      	ldrb	r1, [r2, #2]
 802a3ea:	ed93 0a00 	vldr	s0, [r3]
 802a3ee:	2300      	movs	r3, #0
 802a3f0:	a804      	add	r0, sp, #16
 802a3f2:	9300      	str	r3, [sp, #0]
 802a3f4:	e7d8      	b.n	802a3a8 <PRELAUNCH_mainStateMachine(unsigned long)+0xe0>
 802a3f6:	4910      	ldr	r1, [pc, #64]	; (802a438 <PRELAUNCH_mainStateMachine(unsigned long)+0x170>)
 802a3f8:	4e11      	ldr	r6, [pc, #68]	; (802a440 <PRELAUNCH_mainStateMachine(unsigned long)+0x178>)
 802a3fa:	6808      	ldr	r0, [r1, #0]
 802a3fc:	4b0f      	ldr	r3, [pc, #60]	; (802a43c <PRELAUNCH_mainStateMachine(unsigned long)+0x174>)
 802a3fe:	7891      	ldrb	r1, [r2, #2]
 802a400:	9600      	str	r6, [sp, #0]
 802a402:	2214      	movs	r2, #20
 802a404:	2600      	movs	r6, #0
 802a406:	e9cd 2602 	strd	r2, r6, [sp, #8]
 802a40a:	4d12      	ldr	r5, [pc, #72]	; (802a454 <PRELAUNCH_mainStateMachine(unsigned long)+0x18c>)
 802a40c:	2203      	movs	r2, #3
 802a40e:	9201      	str	r2, [sp, #4]
 802a410:	6058      	str	r0, [r3, #4]
 802a412:	6098      	str	r0, [r3, #8]
 802a414:	601d      	str	r5, [r3, #0]
 802a416:	a804      	add	r0, sp, #16
 802a418:	e7a4      	b.n	802a364 <PRELAUNCH_mainStateMachine(unsigned long)+0x9c>
 802a41a:	4a0f      	ldr	r2, [pc, #60]	; (802a458 <PRELAUNCH_mainStateMachine(unsigned long)+0x190>)
 802a41c:	480f      	ldr	r0, [pc, #60]	; (802a45c <PRELAUNCH_mainStateMachine(unsigned long)+0x194>)
 802a41e:	f852 1023 	ldr.w	r1, [r2, r3, lsl #2]
 802a422:	f7f8 fb4b 	bl	8022abc <Robot::updateArticulation(Articulation::State_e)>
 802a426:	e768      	b.n	802a2fa <PRELAUNCH_mainStateMachine(unsigned long)+0x32>
 802a428:	2302      	movs	r3, #2
 802a42a:	7023      	strb	r3, [r4, #0]
 802a42c:	e76b      	b.n	802a306 <PRELAUNCH_mainStateMachine(unsigned long)+0x3e>
 802a42e:	bf00      	nop
 802a430:	20004e88 	.word	0x20004e88
 802a434:	20004e74 	.word	0x20004e74
 802a438:	20000078 	.word	0x20000078
 802a43c:	20004e7c 	.word	0x20004e7c
 802a440:	20004e78 	.word	0x20004e78
 802a444:	c019999a 	.word	0xc019999a
 802a448:	08045f1c 	.word	0x08045f1c
 802a44c:	00000000 	.word	0x00000000
 802a450:	c019999a 	.word	0xc019999a
 802a454:	42a00000 	.word	0x42a00000
 802a458:	08045efc 	.word	0x08045efc
 802a45c:	2000f630 	.word	0x2000f630

0802a460 <PRELAUNCH_runTask(void*, unsigned long, bool)>:
 802a460:	b5f0      	push	{r4, r5, r6, r7, lr}
 802a462:	4617      	mov	r7, r2
 802a464:	b085      	sub	sp, #20
 802a466:	461e      	mov	r6, r3
 802a468:	4604      	mov	r4, r0
 802a46a:	b18b      	cbz	r3, 802a490 <PRELAUNCH_runTask(void*, unsigned long, bool)+0x30>
 802a46c:	b1f1      	cbz	r1, 802a4ac <PRELAUNCH_runTask(void*, unsigned long, bool)+0x4c>
 802a46e:	4d16      	ldr	r5, [pc, #88]	; (802a4c8 <PRELAUNCH_runTask(void*, unsigned long, bool)+0x68>)
 802a470:	2202      	movs	r2, #2
 802a472:	4628      	mov	r0, r5
 802a474:	f015 f8c5 	bl	803f602 <__aeabi_memcpy>
 802a478:	7869      	ldrb	r1, [r5, #1]
 802a47a:	4814      	ldr	r0, [pc, #80]	; (802a4cc <PRELAUNCH_runTask(void*, unsigned long, bool)+0x6c>)
 802a47c:	f7f8 fc14 	bl	8022ca8 <Robot::setBusVoltage(unsigned char)>
 802a480:	782b      	ldrb	r3, [r5, #0]
 802a482:	2b03      	cmp	r3, #3
 802a484:	d817      	bhi.n	802a4b6 <PRELAUNCH_runTask(void*, unsigned long, bool)+0x56>
 802a486:	4912      	ldr	r1, [pc, #72]	; (802a4d0 <PRELAUNCH_runTask(void*, unsigned long, bool)+0x70>)
 802a488:	4a12      	ldr	r2, [pc, #72]	; (802a4d4 <PRELAUNCH_runTask(void*, unsigned long, bool)+0x74>)
 802a48a:	f851 3023 	ldr.w	r3, [r1, r3, lsl #2]
 802a48e:	60d3      	str	r3, [r2, #12]
 802a490:	4910      	ldr	r1, [pc, #64]	; (802a4d4 <PRELAUNCH_runTask(void*, unsigned long, bool)+0x74>)
 802a492:	4a11      	ldr	r2, [pc, #68]	; (802a4d8 <PRELAUNCH_runTask(void*, unsigned long, bool)+0x78>)
 802a494:	9600      	str	r6, [sp, #0]
 802a496:	a802      	add	r0, sp, #8
 802a498:	463b      	mov	r3, r7
 802a49a:	f7fd fd3f 	bl	8027f1c <SM_RUNNER_runStateMachine>
 802a49e:	a902      	add	r1, sp, #8
 802a4a0:	4620      	mov	r0, r4
 802a4a2:	f001 fc21 	bl	802bce8 <TaskStatus::TaskStatus(TaskStatus const&)>
 802a4a6:	4620      	mov	r0, r4
 802a4a8:	b005      	add	sp, #20
 802a4aa:	bdf0      	pop	{r4, r5, r6, r7, pc}
 802a4ac:	2209      	movs	r2, #9
 802a4ae:	2102      	movs	r1, #2
 802a4b0:	f001 fc12 	bl	802bcd8 <TaskStatus::TaskStatus(TaskStatus::Result_e, unsigned int)>
 802a4b4:	e7f7      	b.n	802a4a6 <PRELAUNCH_runTask(void*, unsigned long, bool)+0x46>
 802a4b6:	2209      	movs	r2, #9
 802a4b8:	2102      	movs	r1, #2
 802a4ba:	4620      	mov	r0, r4
 802a4bc:	f001 fc0c 	bl	802bcd8 <TaskStatus::TaskStatus(TaskStatus::Result_e, unsigned int)>
 802a4c0:	4620      	mov	r0, r4
 802a4c2:	b005      	add	sp, #20
 802a4c4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 802a4c6:	bf00      	nop
 802a4c8:	20004e74 	.word	0x20004e74
 802a4cc:	2000f630 	.word	0x2000f630
 802a4d0:	08045f0c 	.word	0x08045f0c
 802a4d4:	200015e4 	.word	0x200015e4
 802a4d8:	20004e88 	.word	0x20004e88

0802a4dc <_GLOBAL__sub_I__Z17PRELAUNCH_runTaskPvmb>:
 802a4dc:	4b01      	ldr	r3, [pc, #4]	; (802a4e4 <_GLOBAL__sub_I__Z17PRELAUNCH_runTaskPvmb+0x8>)
 802a4de:	4a02      	ldr	r2, [pc, #8]	; (802a4e8 <_GLOBAL__sub_I__Z17PRELAUNCH_runTaskPvmb+0xc>)
 802a4e0:	60da      	str	r2, [r3, #12]
 802a4e2:	4770      	bx	lr
 802a4e4:	200015e4 	.word	0x200015e4
 802a4e8:	20001554 	.word	0x20001554

0802a4ec <LAUNCH_errorStateMachine(unsigned long)>:
 802a4ec:	b510      	push	{r4, lr}
 802a4ee:	2102      	movs	r1, #2
 802a4f0:	b082      	sub	sp, #8
 802a4f2:	4604      	mov	r4, r0
 802a4f4:	f001 fbea 	bl	802bccc <TaskStatus::TaskStatus(TaskStatus::Result_e)>
 802a4f8:	4b09      	ldr	r3, [pc, #36]	; (802a520 <LAUNCH_errorStateMachine(unsigned long)+0x34>)
 802a4fa:	795b      	ldrb	r3, [r3, #5]
 802a4fc:	b113      	cbz	r3, 802a504 <LAUNCH_errorStateMachine(unsigned long)+0x18>
 802a4fe:	4620      	mov	r0, r4
 802a500:	b002      	add	sp, #8
 802a502:	bd10      	pop	{r4, pc}
 802a504:	4b07      	ldr	r3, [pc, #28]	; (802a524 <LAUNCH_errorStateMachine(unsigned long)+0x38>)
 802a506:	4668      	mov	r0, sp
 802a508:	681a      	ldr	r2, [r3, #0]
 802a50a:	2102      	movs	r1, #2
 802a50c:	f001 fbe4 	bl	802bcd8 <TaskStatus::TaskStatus(TaskStatus::Result_e, unsigned int)>
 802a510:	4669      	mov	r1, sp
 802a512:	4620      	mov	r0, r4
 802a514:	f001 fbf0 	bl	802bcf8 <TaskStatus::operator=(TaskStatus const&)>
 802a518:	4620      	mov	r0, r4
 802a51a:	b002      	add	sp, #8
 802a51c:	bd10      	pop	{r4, pc}
 802a51e:	bf00      	nop
 802a520:	20004eb4 	.word	0x20004eb4
 802a524:	20004eac 	.word	0x20004eac

0802a528 <LAUNCH_mainStateMachine(unsigned long)>:
 802a528:	b530      	push	{r4, r5, lr}
 802a52a:	460d      	mov	r5, r1
 802a52c:	b08b      	sub	sp, #44	; 0x2c
 802a52e:	2100      	movs	r1, #0
 802a530:	4604      	mov	r4, r0
 802a532:	f001 fbcb 	bl	802bccc <TaskStatus::TaskStatus(TaskStatus::Result_e)>
 802a536:	4a43      	ldr	r2, [pc, #268]	; (802a644 <LAUNCH_mainStateMachine(unsigned long)+0x11c>)
 802a538:	7813      	ldrb	r3, [r2, #0]
 802a53a:	2b08      	cmp	r3, #8
 802a53c:	d87e      	bhi.n	802a63c <LAUNCH_mainStateMachine(unsigned long)+0x114>
 802a53e:	e8df f003 	tbb	[pc, r3]
 802a542:	5c10      	.short	0x5c10
 802a544:	2c234c43 	.word	0x2c234c43
 802a548:	3f38      	.short	0x3f38
 802a54a:	05          	.byte	0x05
 802a54b:	00          	.byte	0x00
 802a54c:	2101      	movs	r1, #1
 802a54e:	483d      	ldr	r0, [pc, #244]	; (802a644 <LAUNCH_mainStateMachine(unsigned long)+0x11c>)
 802a550:	7021      	strb	r1, [r4, #0]
 802a552:	f7fd fed5 	bl	8028300 <SM_RUNNER_setComplete>
 802a556:	7823      	ldrb	r3, [r4, #0]
 802a558:	2b02      	cmp	r3, #2
 802a55a:	d00f      	beq.n	802a57c <LAUNCH_mainStateMachine(unsigned long)+0x54>
 802a55c:	4620      	mov	r0, r4
 802a55e:	b00b      	add	sp, #44	; 0x2c
 802a560:	bd30      	pop	{r4, r5, pc}
 802a562:	7891      	ldrb	r1, [r2, #2]
 802a564:	2301      	movs	r3, #1
 802a566:	a803      	add	r0, sp, #12
 802a568:	220c      	movs	r2, #12
 802a56a:	f7fd fa6f 	bl	8027a4c <ACTIONS_power(bool, ROBOT_axisIndex_t, AXIS_powerState_t)>
 802a56e:	a903      	add	r1, sp, #12
 802a570:	4620      	mov	r0, r4
 802a572:	f001 fbc1 	bl	802bcf8 <TaskStatus::operator=(TaskStatus const&)>
 802a576:	7823      	ldrb	r3, [r4, #0]
 802a578:	2b02      	cmp	r3, #2
 802a57a:	d1ef      	bne.n	802a55c <LAUNCH_mainStateMachine(unsigned long)+0x34>
 802a57c:	4b32      	ldr	r3, [pc, #200]	; (802a648 <LAUNCH_mainStateMachine(unsigned long)+0x120>)
 802a57e:	6862      	ldr	r2, [r4, #4]
 802a580:	601a      	str	r2, [r3, #0]
 802a582:	4620      	mov	r0, r4
 802a584:	b00b      	add	sp, #44	; 0x2c
 802a586:	bd30      	pop	{r4, r5, pc}
 802a588:	2102      	movs	r1, #2
 802a58a:	4608      	mov	r0, r1
 802a58c:	f7f9 fd5e 	bl	802404c <CCP_sendProgressMessage>
 802a590:	2301      	movs	r3, #1
 802a592:	4620      	mov	r0, r4
 802a594:	7023      	strb	r3, [r4, #0]
 802a596:	b00b      	add	sp, #44	; 0x2c
 802a598:	bd30      	pop	{r4, r5, pc}
 802a59a:	7893      	ldrb	r3, [r2, #2]
 802a59c:	4629      	mov	r1, r5
 802a59e:	a803      	add	r0, sp, #12
 802a5a0:	2201      	movs	r2, #1
 802a5a2:	f7fe f843 	bl	802862c <ATTIC_EXIT_runTask(unsigned long, ATTIC_EXIT_stage_t, bool)>
 802a5a6:	a903      	add	r1, sp, #12
 802a5a8:	4620      	mov	r0, r4
 802a5aa:	f001 fba5 	bl	802bcf8 <TaskStatus::operator=(TaskStatus const&)>
 802a5ae:	7823      	ldrb	r3, [r4, #0]
 802a5b0:	e7d2      	b.n	802a558 <LAUNCH_mainStateMachine(unsigned long)+0x30>
 802a5b2:	f004 fd2b 	bl	802f00c <CAMERA_trigger()>
 802a5b6:	2301      	movs	r3, #1
 802a5b8:	4620      	mov	r0, r4
 802a5ba:	7023      	strb	r3, [r4, #0]
 802a5bc:	b00b      	add	sp, #44	; 0x2c
 802a5be:	bd30      	pop	{r4, r5, pc}
 802a5c0:	076b      	lsls	r3, r5, #29
 802a5c2:	d42e      	bmi.n	802a622 <LAUNCH_mainStateMachine(unsigned long)+0xfa>
 802a5c4:	7823      	ldrb	r3, [r4, #0]
 802a5c6:	e7c7      	b.n	802a558 <LAUNCH_mainStateMachine(unsigned long)+0x30>
 802a5c8:	2102      	movs	r1, #2
 802a5ca:	2001      	movs	r0, #1
 802a5cc:	f7f9 fd3e 	bl	802404c <CCP_sendProgressMessage>
 802a5d0:	2301      	movs	r3, #1
 802a5d2:	4620      	mov	r0, r4
 802a5d4:	7023      	strb	r3, [r4, #0]
 802a5d6:	b00b      	add	sp, #44	; 0x2c
 802a5d8:	bd30      	pop	{r4, r5, pc}
 802a5da:	4b1c      	ldr	r3, [pc, #112]	; (802a64c <LAUNCH_mainStateMachine(unsigned long)+0x124>)
 802a5dc:	7891      	ldrb	r1, [r2, #2]
 802a5de:	ed93 0a01 	vldr	s0, [r3, #4]
 802a5e2:	2300      	movs	r3, #0
 802a5e4:	9300      	str	r3, [sp, #0]
 802a5e6:	a803      	add	r0, sp, #12
 802a5e8:	220c      	movs	r2, #12
 802a5ea:	f7fd f90d 	bl	8027808 <ACTIONS_move(bool, ROBOT_axisIndex_t, float, AXIS_moveType_t, AXIS_mode_t)>
 802a5ee:	a903      	add	r1, sp, #12
 802a5f0:	4620      	mov	r0, r4
 802a5f2:	f001 fb81 	bl	802bcf8 <TaskStatus::operator=(TaskStatus const&)>
 802a5f6:	7823      	ldrb	r3, [r4, #0]
 802a5f8:	e7ae      	b.n	802a558 <LAUNCH_mainStateMachine(unsigned long)+0x30>
 802a5fa:	7891      	ldrb	r1, [r2, #2]
 802a5fc:	eddf 1a14 	vldr	s3, [pc, #80]	; 802a650 <LAUNCH_mainStateMachine(unsigned long)+0x128>
 802a600:	ed9f 1a14 	vldr	s2, [pc, #80]	; 802a654 <LAUNCH_mainStateMachine(unsigned long)+0x12c>
 802a604:	ed9f 0a14 	vldr	s0, [pc, #80]	; 802a658 <LAUNCH_mainStateMachine(unsigned long)+0x130>
 802a608:	2301      	movs	r3, #1
 802a60a:	a803      	add	r0, sp, #12
 802a60c:	eef1 0a00 	vmov.f32	s1, #16	; 0x40800000  4.0
 802a610:	220c      	movs	r2, #12
 802a612:	f7fd f851 	bl	80276b8 <ACTIONS_home(bool, ROBOT_axisIndex_t, AXIS_homeType_t, float, float, float, float)>
 802a616:	a903      	add	r1, sp, #12
 802a618:	4620      	mov	r0, r4
 802a61a:	f001 fb6d 	bl	802bcf8 <TaskStatus::operator=(TaskStatus const&)>
 802a61e:	7823      	ldrb	r3, [r4, #0]
 802a620:	e79a      	b.n	802a558 <LAUNCH_mainStateMachine(unsigned long)+0x30>
 802a622:	a803      	add	r0, sp, #12
 802a624:	f004 fb6e 	bl	802ed04 <CAMERA_getResponseData()>
 802a628:	9b03      	ldr	r3, [sp, #12]
 802a62a:	3301      	adds	r3, #1
 802a62c:	d002      	beq.n	802a634 <LAUNCH_mainStateMachine(unsigned long)+0x10c>
 802a62e:	2301      	movs	r3, #1
 802a630:	7023      	strb	r3, [r4, #0]
 802a632:	e793      	b.n	802a55c <LAUNCH_mainStateMachine(unsigned long)+0x34>
 802a634:	2302      	movs	r3, #2
 802a636:	7023      	strb	r3, [r4, #0]
 802a638:	6063      	str	r3, [r4, #4]
 802a63a:	e79f      	b.n	802a57c <LAUNCH_mainStateMachine(unsigned long)+0x54>
 802a63c:	2302      	movs	r3, #2
 802a63e:	7023      	strb	r3, [r4, #0]
 802a640:	e79c      	b.n	802a57c <LAUNCH_mainStateMachine(unsigned long)+0x54>
 802a642:	bf00      	nop
 802a644:	20004eb4 	.word	0x20004eb4
 802a648:	20004eac 	.word	0x20004eac
 802a64c:	20004e9c 	.word	0x20004e9c
 802a650:	43480000 	.word	0x43480000
 802a654:	42340000 	.word	0x42340000
 802a658:	43070000 	.word	0x43070000

0802a65c <LAUNCH_setup()>:
 802a65c:	b570      	push	{r4, r5, r6, lr}
 802a65e:	b08e      	sub	sp, #56	; 0x38
 802a660:	ad09      	add	r5, sp, #36	; 0x24
 802a662:	4929      	ldr	r1, [pc, #164]	; (802a708 <LAUNCH_setup()+0xac>)
 802a664:	4604      	mov	r4, r0
 802a666:	4628      	mov	r0, r5
 802a668:	f005 fd9e 	bl	80301a8 <Nest::getAtticPositions()>
 802a66c:	f89d 3034 	ldrb.w	r3, [sp, #52]	; 0x34
 802a670:	b33b      	cbz	r3, 802a6c2 <LAUNCH_setup()+0x66>
 802a672:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
 802a676:	ad05      	add	r5, sp, #20
 802a678:	e885 000f 	stmia.w	r5, {r0, r1, r2, r3}
 802a67c:	ad01      	add	r5, sp, #4
 802a67e:	e885 000f 	stmia.w	r5, {r0, r1, r2, r3}
 802a682:	4d22      	ldr	r5, [pc, #136]	; (802a70c <LAUNCH_setup()+0xb0>)
 802a684:	4e22      	ldr	r6, [pc, #136]	; (802a710 <LAUNCH_setup()+0xb4>)
 802a686:	e885 000f 	stmia.w	r5, {r0, r1, r2, r3}
 802a68a:	2200      	movs	r2, #0
 802a68c:	ed95 0a01 	vldr	s0, [r5, #4]
 802a690:	4820      	ldr	r0, [pc, #128]	; (802a714 <LAUNCH_setup()+0xb8>)
 802a692:	6032      	str	r2, [r6, #0]
 802a694:	210c      	movs	r1, #12
 802a696:	f7f8 fafd 	bl	8022c94 <Robot::estimateMoveTime(ROBOT_axisIndex_t, float, AXIS_mode_t)>
 802a69a:	4605      	mov	r5, r0
 802a69c:	481d      	ldr	r0, [pc, #116]	; (802a714 <LAUNCH_setup()+0xb8>)
 802a69e:	f7f8 fa09 	bl	8022ab4 <Robot::getArticulation()>
 802a6a2:	f505 45c3 	add.w	r5, r5, #24960	; 0x6180
 802a6a6:	2840      	cmp	r0, #64	; 0x40
 802a6a8:	f105 0528 	add.w	r5, r5, #40	; 0x28
 802a6ac:	d011      	beq.n	802a6d2 <LAUNCH_setup()+0x76>
 802a6ae:	2880      	cmp	r0, #128	; 0x80
 802a6b0:	d01e      	beq.n	802a6f0 <LAUNCH_setup()+0x94>
 802a6b2:	2216      	movs	r2, #22
 802a6b4:	2102      	movs	r1, #2
 802a6b6:	4620      	mov	r0, r4
 802a6b8:	f001 fb0e 	bl	802bcd8 <TaskStatus::TaskStatus(TaskStatus::Result_e, unsigned int)>
 802a6bc:	4620      	mov	r0, r4
 802a6be:	b00e      	add	sp, #56	; 0x38
 802a6c0:	bd70      	pop	{r4, r5, r6, pc}
 802a6c2:	2206      	movs	r2, #6
 802a6c4:	2102      	movs	r1, #2
 802a6c6:	4620      	mov	r0, r4
 802a6c8:	f001 fb06 	bl	802bcd8 <TaskStatus::TaskStatus(TaskStatus::Result_e, unsigned int)>
 802a6cc:	4620      	mov	r0, r4
 802a6ce:	b00e      	add	sp, #56	; 0x38
 802a6d0:	bd70      	pop	{r4, r5, r6, pc}
 802a6d2:	4b11      	ldr	r3, [pc, #68]	; (802a718 <LAUNCH_setup()+0xbc>)
 802a6d4:	4a11      	ldr	r2, [pc, #68]	; (802a71c <LAUNCH_setup()+0xc0>)
 802a6d6:	635d      	str	r5, [r3, #52]	; 0x34
 802a6d8:	2180      	movs	r1, #128	; 0x80
 802a6da:	480e      	ldr	r0, [pc, #56]	; (802a714 <LAUNCH_setup()+0xb8>)
 802a6dc:	60d3      	str	r3, [r2, #12]
 802a6de:	f7f8 f9ed 	bl	8022abc <Robot::updateArticulation(Articulation::State_e)>
 802a6e2:	2101      	movs	r1, #1
 802a6e4:	4620      	mov	r0, r4
 802a6e6:	f001 faf1 	bl	802bccc <TaskStatus::TaskStatus(TaskStatus::Result_e)>
 802a6ea:	4620      	mov	r0, r4
 802a6ec:	b00e      	add	sp, #56	; 0x38
 802a6ee:	bd70      	pop	{r4, r5, r6, pc}
 802a6f0:	4b0b      	ldr	r3, [pc, #44]	; (802a720 <LAUNCH_setup()+0xc4>)
 802a6f2:	4a0a      	ldr	r2, [pc, #40]	; (802a71c <LAUNCH_setup()+0xc0>)
 802a6f4:	605d      	str	r5, [r3, #4]
 802a6f6:	2101      	movs	r1, #1
 802a6f8:	4620      	mov	r0, r4
 802a6fa:	60d3      	str	r3, [r2, #12]
 802a6fc:	f001 fae6 	bl	802bccc <TaskStatus::TaskStatus(TaskStatus::Result_e)>
 802a700:	4620      	mov	r0, r4
 802a702:	b00e      	add	sp, #56	; 0x38
 802a704:	bd70      	pop	{r4, r5, r6, pc}
 802a706:	bf00      	nop
 802a708:	20004b30 	.word	0x20004b30
 802a70c:	20004e9c 	.word	0x20004e9c
 802a710:	20004eac 	.word	0x20004eac
 802a714:	2000f630 	.word	0x2000f630
 802a718:	20001614 	.word	0x20001614
 802a71c:	20001714 	.word	0x20001714
 802a720:	200016a4 	.word	0x200016a4

0802a724 <LAUNCH_runTask(void*, unsigned long, bool)>:
 802a724:	b5f0      	push	{r4, r5, r6, r7, lr}
 802a726:	4616      	mov	r6, r2
 802a728:	b085      	sub	sp, #20
 802a72a:	461d      	mov	r5, r3
 802a72c:	4604      	mov	r4, r0
 802a72e:	b14b      	cbz	r3, 802a744 <LAUNCH_runTask(void*, unsigned long, bool)+0x20>
 802a730:	b1b1      	cbz	r1, 802a760 <LAUNCH_runTask(void*, unsigned long, bool)+0x3c>
 802a732:	4f0e      	ldr	r7, [pc, #56]	; (802a76c <LAUNCH_runTask(void*, unsigned long, bool)+0x48>)
 802a734:	2204      	movs	r2, #4
 802a736:	4638      	mov	r0, r7
 802a738:	f014 ff63 	bl	803f602 <__aeabi_memcpy>
 802a73c:	7839      	ldrb	r1, [r7, #0]
 802a73e:	480c      	ldr	r0, [pc, #48]	; (802a770 <LAUNCH_runTask(void*, unsigned long, bool)+0x4c>)
 802a740:	f005 fc76 	bl	8030030 <Nest::setHeight_bins(unsigned char)>
 802a744:	490b      	ldr	r1, [pc, #44]	; (802a774 <LAUNCH_runTask(void*, unsigned long, bool)+0x50>)
 802a746:	4a0c      	ldr	r2, [pc, #48]	; (802a778 <LAUNCH_runTask(void*, unsigned long, bool)+0x54>)
 802a748:	9500      	str	r5, [sp, #0]
 802a74a:	a802      	add	r0, sp, #8
 802a74c:	4633      	mov	r3, r6
 802a74e:	f7fd fbe5 	bl	8027f1c <SM_RUNNER_runStateMachine>
 802a752:	a902      	add	r1, sp, #8
 802a754:	4620      	mov	r0, r4
 802a756:	f001 fac7 	bl	802bce8 <TaskStatus::TaskStatus(TaskStatus const&)>
 802a75a:	4620      	mov	r0, r4
 802a75c:	b005      	add	sp, #20
 802a75e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 802a760:	2209      	movs	r2, #9
 802a762:	2102      	movs	r1, #2
 802a764:	f001 fab8 	bl	802bcd8 <TaskStatus::TaskStatus(TaskStatus::Result_e, unsigned int)>
 802a768:	e7f7      	b.n	802a75a <LAUNCH_runTask(void*, unsigned long, bool)+0x36>
 802a76a:	bf00      	nop
 802a76c:	20004eb0 	.word	0x20004eb0
 802a770:	20004b30 	.word	0x20004b30
 802a774:	20001714 	.word	0x20001714
 802a778:	20004eb4 	.word	0x20004eb4

0802a77c <RECOVERY_mainStateMachine(unsigned long)>:
 802a77c:	b570      	push	{r4, r5, r6, lr}
 802a77e:	460e      	mov	r6, r1
 802a780:	b082      	sub	sp, #8
 802a782:	2101      	movs	r1, #1
 802a784:	4604      	mov	r4, r0
 802a786:	f001 faa1 	bl	802bccc <TaskStatus::TaskStatus(TaskStatus::Result_e)>
 802a78a:	481f      	ldr	r0, [pc, #124]	; (802a808 <RECOVERY_mainStateMachine(unsigned long)+0x8c>)
 802a78c:	7805      	ldrb	r5, [r0, #0]
 802a78e:	b1ad      	cbz	r5, 802a7bc <RECOVERY_mainStateMachine(unsigned long)+0x40>
 802a790:	2d01      	cmp	r5, #1
 802a792:	d025      	beq.n	802a7e0 <RECOVERY_mainStateMachine(unsigned long)+0x64>
 802a794:	2302      	movs	r3, #2
 802a796:	481d      	ldr	r0, [pc, #116]	; (802a80c <RECOVERY_mainStateMachine(unsigned long)+0x90>)
 802a798:	7023      	strb	r3, [r4, #0]
 802a79a:	212f      	movs	r1, #47	; 0x2f
 802a79c:	f014 fddf 	bl	803f35e <strrchr>
 802a7a0:	b328      	cbz	r0, 802a7ee <RECOVERY_mainStateMachine(unsigned long)+0x72>
 802a7a2:	212f      	movs	r1, #47	; 0x2f
 802a7a4:	4819      	ldr	r0, [pc, #100]	; (802a80c <RECOVERY_mainStateMachine(unsigned long)+0x90>)
 802a7a6:	f014 fdda 	bl	803f35e <strrchr>
 802a7aa:	1c41      	adds	r1, r0, #1
 802a7ac:	4b18      	ldr	r3, [pc, #96]	; (802a810 <RECOVERY_mainStateMachine(unsigned long)+0x94>)
 802a7ae:	227b      	movs	r2, #123	; 0x7b
 802a7b0:	2000      	movs	r0, #0
 802a7b2:	f7f7 fff1 	bl	8022798 <DEBUG_logMsg>
 802a7b6:	4620      	mov	r0, r4
 802a7b8:	b002      	add	sp, #8
 802a7ba:	bd70      	pop	{r4, r5, r6, pc}
 802a7bc:	4b15      	ldr	r3, [pc, #84]	; (802a814 <RECOVERY_mainStateMachine(unsigned long)+0x98>)
 802a7be:	4916      	ldr	r1, [pc, #88]	; (802a818 <RECOVERY_mainStateMachine(unsigned long)+0x9c>)
 802a7c0:	781d      	ldrb	r5, [r3, #0]
 802a7c2:	4b16      	ldr	r3, [pc, #88]	; (802a81c <RECOVERY_mainStateMachine(unsigned long)+0xa0>)
 802a7c4:	7882      	ldrb	r2, [r0, #2]
 802a7c6:	f851 5025 	ldr.w	r5, [r1, r5, lsl #2]
 802a7ca:	781b      	ldrb	r3, [r3, #0]
 802a7cc:	4631      	mov	r1, r6
 802a7ce:	4668      	mov	r0, sp
 802a7d0:	47a8      	blx	r5
 802a7d2:	4669      	mov	r1, sp
 802a7d4:	4620      	mov	r0, r4
 802a7d6:	f001 fa8f 	bl	802bcf8 <TaskStatus::operator=(TaskStatus const&)>
 802a7da:	4620      	mov	r0, r4
 802a7dc:	b002      	add	sp, #8
 802a7de:	bd70      	pop	{r4, r5, r6, pc}
 802a7e0:	4629      	mov	r1, r5
 802a7e2:	f7fd fd8d 	bl	8028300 <SM_RUNNER_setComplete>
 802a7e6:	4620      	mov	r0, r4
 802a7e8:	7025      	strb	r5, [r4, #0]
 802a7ea:	b002      	add	sp, #8
 802a7ec:	bd70      	pop	{r4, r5, r6, pc}
 802a7ee:	4807      	ldr	r0, [pc, #28]	; (802a80c <RECOVERY_mainStateMachine(unsigned long)+0x90>)
 802a7f0:	215c      	movs	r1, #92	; 0x5c
 802a7f2:	f014 fdb4 	bl	803f35e <strrchr>
 802a7f6:	b128      	cbz	r0, 802a804 <RECOVERY_mainStateMachine(unsigned long)+0x88>
 802a7f8:	215c      	movs	r1, #92	; 0x5c
 802a7fa:	4804      	ldr	r0, [pc, #16]	; (802a80c <RECOVERY_mainStateMachine(unsigned long)+0x90>)
 802a7fc:	f014 fdaf 	bl	803f35e <strrchr>
 802a800:	1c41      	adds	r1, r0, #1
 802a802:	e7d3      	b.n	802a7ac <RECOVERY_mainStateMachine(unsigned long)+0x30>
 802a804:	4901      	ldr	r1, [pc, #4]	; (802a80c <RECOVERY_mainStateMachine(unsigned long)+0x90>)
 802a806:	e7d1      	b.n	802a7ac <RECOVERY_mainStateMachine(unsigned long)+0x30>
 802a808:	20004ecc 	.word	0x20004ecc
 802a80c:	08045f74 	.word	0x08045f74
 802a810:	08045fb8 	.word	0x08045fb8
 802a814:	20004ec8 	.word	0x20004ec8
 802a818:	08046010 	.word	0x08046010
 802a81c:	20004ec9 	.word	0x20004ec9

0802a820 <RECOVERY_runTask(COMM_CCP_recovery_t*, unsigned long, bool)>:
 802a820:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802a824:	4604      	mov	r4, r0
 802a826:	b082      	sub	sp, #8
 802a828:	4617      	mov	r7, r2
 802a82a:	461d      	mov	r5, r3
 802a82c:	b953      	cbnz	r3, 802a844 <RECOVERY_runTask(COMM_CCP_recovery_t*, unsigned long, bool)+0x24>
 802a82e:	4620      	mov	r0, r4
 802a830:	4a1e      	ldr	r2, [pc, #120]	; (802a8ac <RECOVERY_runTask(COMM_CCP_recovery_t*, unsigned long, bool)+0x8c>)
 802a832:	491f      	ldr	r1, [pc, #124]	; (802a8b0 <RECOVERY_runTask(COMM_CCP_recovery_t*, unsigned long, bool)+0x90>)
 802a834:	9500      	str	r5, [sp, #0]
 802a836:	463b      	mov	r3, r7
 802a838:	f7fd fb70 	bl	8027f1c <SM_RUNNER_runStateMachine>
 802a83c:	4620      	mov	r0, r4
 802a83e:	b002      	add	sp, #8
 802a840:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802a844:	460e      	mov	r6, r1
 802a846:	481b      	ldr	r0, [pc, #108]	; (802a8b4 <RECOVERY_runTask(COMM_CCP_recovery_t*, unsigned long, bool)+0x94>)
 802a848:	7849      	ldrb	r1, [r1, #1]
 802a84a:	f8df 8078 	ldr.w	r8, [pc, #120]	; 802a8c4 <RECOVERY_runTask(COMM_CCP_recovery_t*, unsigned long, bool)+0xa4>
 802a84e:	f7f8 fa2b 	bl	8022ca8 <Robot::setBusVoltage(unsigned char)>
 802a852:	4b19      	ldr	r3, [pc, #100]	; (802a8b8 <RECOVERY_runTask(COMM_CCP_recovery_t*, unsigned long, bool)+0x98>)
 802a854:	7832      	ldrb	r2, [r6, #0]
 802a856:	701a      	strb	r2, [r3, #0]
 802a858:	f7fa ffc4 	bl	80257e4 <ANTCTRL_getLastTaskId>
 802a85c:	1e43      	subs	r3, r0, #1
 802a85e:	bf18      	it	ne
 802a860:	2301      	movne	r3, #1
 802a862:	4606      	mov	r6, r0
 802a864:	212f      	movs	r1, #47	; 0x2f
 802a866:	4815      	ldr	r0, [pc, #84]	; (802a8bc <RECOVERY_runTask(COMM_CCP_recovery_t*, unsigned long, bool)+0x9c>)
 802a868:	f888 3000 	strb.w	r3, [r8]
 802a86c:	f014 fd77 	bl	803f35e <strrchr>
 802a870:	b170      	cbz	r0, 802a890 <RECOVERY_runTask(COMM_CCP_recovery_t*, unsigned long, bool)+0x70>
 802a872:	212f      	movs	r1, #47	; 0x2f
 802a874:	4811      	ldr	r0, [pc, #68]	; (802a8bc <RECOVERY_runTask(COMM_CCP_recovery_t*, unsigned long, bool)+0x9c>)
 802a876:	f014 fd72 	bl	803f35e <strrchr>
 802a87a:	1c41      	adds	r1, r0, #1
 802a87c:	f898 3000 	ldrb.w	r3, [r8]
 802a880:	225b      	movs	r2, #91	; 0x5b
 802a882:	e9cd 6300 	strd	r6, r3, [sp]
 802a886:	2002      	movs	r0, #2
 802a888:	4b0d      	ldr	r3, [pc, #52]	; (802a8c0 <RECOVERY_runTask(COMM_CCP_recovery_t*, unsigned long, bool)+0xa0>)
 802a88a:	f7f7 ff85 	bl	8022798 <DEBUG_logMsg>
 802a88e:	e7ce      	b.n	802a82e <RECOVERY_runTask(COMM_CCP_recovery_t*, unsigned long, bool)+0xe>
 802a890:	480a      	ldr	r0, [pc, #40]	; (802a8bc <RECOVERY_runTask(COMM_CCP_recovery_t*, unsigned long, bool)+0x9c>)
 802a892:	215c      	movs	r1, #92	; 0x5c
 802a894:	f014 fd63 	bl	803f35e <strrchr>
 802a898:	b128      	cbz	r0, 802a8a6 <RECOVERY_runTask(COMM_CCP_recovery_t*, unsigned long, bool)+0x86>
 802a89a:	215c      	movs	r1, #92	; 0x5c
 802a89c:	4807      	ldr	r0, [pc, #28]	; (802a8bc <RECOVERY_runTask(COMM_CCP_recovery_t*, unsigned long, bool)+0x9c>)
 802a89e:	f014 fd5e 	bl	803f35e <strrchr>
 802a8a2:	1c41      	adds	r1, r0, #1
 802a8a4:	e7ea      	b.n	802a87c <RECOVERY_runTask(COMM_CCP_recovery_t*, unsigned long, bool)+0x5c>
 802a8a6:	4905      	ldr	r1, [pc, #20]	; (802a8bc <RECOVERY_runTask(COMM_CCP_recovery_t*, unsigned long, bool)+0x9c>)
 802a8a8:	e7e8      	b.n	802a87c <RECOVERY_runTask(COMM_CCP_recovery_t*, unsigned long, bool)+0x5c>
 802a8aa:	bf00      	nop
 802a8ac:	20004ecc 	.word	0x20004ecc
 802a8b0:	20001754 	.word	0x20001754
 802a8b4:	2000f630 	.word	0x2000f630
 802a8b8:	20004ec9 	.word	0x20004ec9
 802a8bc:	08045f74 	.word	0x08045f74
 802a8c0:	08045fd0 	.word	0x08045fd0
 802a8c4:	20004ec8 	.word	0x20004ec8

0802a8c8 <RECOVERY_moveMainStateMachine(unsigned long)>:
 802a8c8:	b5f0      	push	{r4, r5, r6, r7, lr}
 802a8ca:	460e      	mov	r6, r1
 802a8cc:	b08f      	sub	sp, #60	; 0x3c
 802a8ce:	2100      	movs	r1, #0
 802a8d0:	4604      	mov	r4, r0
 802a8d2:	f001 f9fb 	bl	802bccc <TaskStatus::TaskStatus(TaskStatus::Result_e)>
 802a8d6:	4866      	ldr	r0, [pc, #408]	; (802aa70 <RECOVERY_moveMainStateMachine(unsigned long)+0x1a8>)
 802a8d8:	4f66      	ldr	r7, [pc, #408]	; (802aa74 <RECOVERY_moveMainStateMachine(unsigned long)+0x1ac>)
 802a8da:	7803      	ldrb	r3, [r0, #0]
 802a8dc:	783a      	ldrb	r2, [r7, #0]
 802a8de:	f88d 202c 	strb.w	r2, [sp, #44]	; 0x2c
 802a8e2:	250f      	movs	r5, #15
 802a8e4:	f88d 502d 	strb.w	r5, [sp, #45]	; 0x2d
 802a8e8:	2b0c      	cmp	r3, #12
 802a8ea:	f200 80bd 	bhi.w	802aa68 <RECOVERY_moveMainStateMachine(unsigned long)+0x1a0>
 802a8ee:	e8df f003 	tbb	[pc, r3]
 802a8f2:	1b10      	.short	0x1b10
 802a8f4:	46433324 	.word	0x46433324
 802a8f8:	a07a7266 	.word	0xa07a7266
 802a8fc:	b5ae      	.short	0xb5ae
 802a8fe:	07          	.byte	0x07
 802a8ff:	00          	.byte	0x00
 802a900:	485b      	ldr	r0, [pc, #364]	; (802aa70 <RECOVERY_moveMainStateMachine(unsigned long)+0x1a8>)
 802a902:	2101      	movs	r1, #1
 802a904:	f7fd fcfc 	bl	8028300 <SM_RUNNER_setComplete>
 802a908:	2301      	movs	r3, #1
 802a90a:	7023      	strb	r3, [r4, #0]
 802a90c:	4620      	mov	r0, r4
 802a90e:	b00f      	add	sp, #60	; 0x3c
 802a910:	bdf0      	pop	{r4, r5, r6, r7, pc}
 802a912:	2a08      	cmp	r2, #8
 802a914:	bf0c      	ite	eq
 802a916:	2003      	moveq	r0, #3
 802a918:	2004      	movne	r0, #4
 802a91a:	f004 fbe5 	bl	802f0e8 <CAMERA_activateProfile(CAMERA_configProfile_t)>
 802a91e:	2301      	movs	r3, #1
 802a920:	4620      	mov	r0, r4
 802a922:	7023      	strb	r3, [r4, #0]
 802a924:	b00f      	add	sp, #60	; 0x3c
 802a926:	bdf0      	pop	{r4, r5, r6, r7, pc}
 802a928:	7881      	ldrb	r1, [r0, #2]
 802a92a:	a80c      	add	r0, sp, #48	; 0x30
 802a92c:	f7fd f960 	bl	8027bf0 <ACTIONS_resetAll(bool)>
 802a930:	a90c      	add	r1, sp, #48	; 0x30
 802a932:	4620      	mov	r0, r4
 802a934:	f001 f9e0 	bl	802bcf8 <TaskStatus::operator=(TaskStatus const&)>
 802a938:	e7e8      	b.n	802a90c <RECOVERY_moveMainStateMachine(unsigned long)+0x44>
 802a93a:	2301      	movs	r3, #1
 802a93c:	7881      	ldrb	r1, [r0, #2]
 802a93e:	9300      	str	r3, [sp, #0]
 802a940:	a80c      	add	r0, sp, #48	; 0x30
 802a942:	2302      	movs	r3, #2
 802a944:	aa0b      	add	r2, sp, #44	; 0x2c
 802a946:	f7fd f8d3 	bl	8027af0 <ACTIONS_powerList(bool, ROBOT_axisIndex_t const*, unsigned char, AXIS_powerState_t)>
 802a94a:	a90c      	add	r1, sp, #48	; 0x30
 802a94c:	4620      	mov	r0, r4
 802a94e:	f001 f9d3 	bl	802bcf8 <TaskStatus::operator=(TaskStatus const&)>
 802a952:	4620      	mov	r0, r4
 802a954:	b00f      	add	sp, #60	; 0x3c
 802a956:	bdf0      	pop	{r4, r5, r6, r7, pc}
 802a958:	2300      	movs	r3, #0
 802a95a:	ed97 0a01 	vldr	s0, [r7, #4]
 802a95e:	7881      	ldrb	r1, [r0, #2]
 802a960:	9300      	str	r3, [sp, #0]
 802a962:	a80c      	add	r0, sp, #48	; 0x30
 802a964:	220f      	movs	r2, #15
 802a966:	f7fc ff4f 	bl	8027808 <ACTIONS_move(bool, ROBOT_axisIndex_t, float, AXIS_moveType_t, AXIS_mode_t)>
 802a96a:	a90c      	add	r1, sp, #48	; 0x30
 802a96c:	4620      	mov	r0, r4
 802a96e:	f001 f9c3 	bl	802bcf8 <TaskStatus::operator=(TaskStatus const&)>
 802a972:	4620      	mov	r0, r4
 802a974:	b00f      	add	sp, #60	; 0x3c
 802a976:	bdf0      	pop	{r4, r5, r6, r7, pc}
 802a978:	f004 fb48 	bl	802f00c <CAMERA_trigger()>
 802a97c:	e7cf      	b.n	802a91e <RECOVERY_moveMainStateMachine(unsigned long)+0x56>
 802a97e:	2302      	movs	r3, #2
 802a980:	7881      	ldrb	r1, [r0, #2]
 802a982:	ed97 0a03 	vldr	s0, [r7, #12]
 802a986:	9300      	str	r3, [sp, #0]
 802a988:	a80c      	add	r0, sp, #48	; 0x30
 802a98a:	2301      	movs	r3, #1
 802a98c:	f7fc ff3c 	bl	8027808 <ACTIONS_move(bool, ROBOT_axisIndex_t, float, AXIS_moveType_t, AXIS_mode_t)>
 802a990:	a90c      	add	r1, sp, #48	; 0x30
 802a992:	4620      	mov	r0, r4
 802a994:	f001 f9b0 	bl	802bcf8 <TaskStatus::operator=(TaskStatus const&)>
 802a998:	7823      	ldrb	r3, [r4, #0]
 802a99a:	2b01      	cmp	r3, #1
 802a99c:	d060      	beq.n	802aa60 <RECOVERY_moveMainStateMachine(unsigned long)+0x198>
 802a99e:	0772      	lsls	r2, r6, #29
 802a9a0:	d5b4      	bpl.n	802a90c <RECOVERY_moveMainStateMachine(unsigned long)+0x44>
 802a9a2:	a802      	add	r0, sp, #8
 802a9a4:	ad02      	add	r5, sp, #8
 802a9a6:	f004 f9ad 	bl	802ed04 <CAMERA_getResponseData()>
 802a9aa:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 802a9ac:	4e32      	ldr	r6, [pc, #200]	; (802aa78 <RECOVERY_moveMainStateMachine(unsigned long)+0x1b0>)
 802a9ae:	c60f      	stmia	r6!, {r0, r1, r2, r3}
 802a9b0:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 802a9b4:	2301      	movs	r3, #1
 802a9b6:	e886 0007 	stmia.w	r6, {r0, r1, r2}
 802a9ba:	7023      	strb	r3, [r4, #0]
 802a9bc:	e7a6      	b.n	802a90c <RECOVERY_moveMainStateMachine(unsigned long)+0x44>
 802a9be:	7d7b      	ldrb	r3, [r7, #21]
 802a9c0:	2b00      	cmp	r3, #0
 802a9c2:	d1ac      	bne.n	802a91e <RECOVERY_moveMainStateMachine(unsigned long)+0x56>
 802a9c4:	7881      	ldrb	r1, [r0, #2]
 802a9c6:	a80c      	add	r0, sp, #48	; 0x30
 802a9c8:	f7fd f92a 	bl	8027c20 <ACTIONS_stop(bool, ROBOT_axisIndex_t)>
 802a9cc:	a90c      	add	r1, sp, #48	; 0x30
 802a9ce:	4620      	mov	r0, r4
 802a9d0:	f001 f992 	bl	802bcf8 <TaskStatus::operator=(TaskStatus const&)>
 802a9d4:	e79a      	b.n	802a90c <RECOVERY_moveMainStateMachine(unsigned long)+0x44>
 802a9d6:	2000      	movs	r0, #0
 802a9d8:	f004 fb86 	bl	802f0e8 <CAMERA_activateProfile(CAMERA_configProfile_t)>
 802a9dc:	f004 fb16 	bl	802f00c <CAMERA_trigger()>
 802a9e0:	2301      	movs	r3, #1
 802a9e2:	7023      	strb	r3, [r4, #0]
 802a9e4:	e792      	b.n	802a90c <RECOVERY_moveMainStateMachine(unsigned long)+0x44>
 802a9e6:	0773      	lsls	r3, r6, #29
 802a9e8:	d590      	bpl.n	802a90c <RECOVERY_moveMainStateMachine(unsigned long)+0x44>
 802a9ea:	a802      	add	r0, sp, #8
 802a9ec:	ad02      	add	r5, sp, #8
 802a9ee:	f004 f989 	bl	802ed04 <CAMERA_getResponseData()>
 802a9f2:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 802a9f4:	f8df c080 	ldr.w	ip, [pc, #128]	; 802aa78 <RECOVERY_moveMainStateMachine(unsigned long)+0x1b0>
 802a9f8:	4666      	mov	r6, ip
 802a9fa:	c60f      	stmia	r6!, {r0, r1, r2, r3}
 802a9fc:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 802aa00:	f8dc 3000 	ldr.w	r3, [ip]
 802aa04:	3301      	adds	r3, #1
 802aa06:	e886 0007 	stmia.w	r6, {r0, r1, r2}
 802aa0a:	d02d      	beq.n	802aa68 <RECOVERY_moveMainStateMachine(unsigned long)+0x1a0>
 802aa0c:	783b      	ldrb	r3, [r7, #0]
 802aa0e:	2b08      	cmp	r3, #8
 802aa10:	bf0c      	ite	eq
 802aa12:	f8dc 0004 	ldreq.w	r0, [ip, #4]
 802aa16:	f8dc 0008 	ldrne.w	r0, [ip, #8]
 802aa1a:	f013 fd1e 	bl	803e45a <__aeabi_f2d>
 802aa1e:	4b17      	ldr	r3, [pc, #92]	; (802aa7c <RECOVERY_moveMainStateMachine(unsigned long)+0x1b4>)
 802aa20:	2200      	movs	r2, #0
 802aa22:	f013 fe23 	bl	803e66c <__aeabi_ddiv>
 802aa26:	f013 fd34 	bl	803e492 <__aeabi_d2f>
 802aa2a:	2301      	movs	r3, #1
 802aa2c:	6138      	str	r0, [r7, #16]
 802aa2e:	7023      	strb	r3, [r4, #0]
 802aa30:	e76c      	b.n	802a90c <RECOVERY_moveMainStateMachine(unsigned long)+0x44>
 802aa32:	2302      	movs	r3, #2
 802aa34:	7881      	ldrb	r1, [r0, #2]
 802aa36:	ed97 0a04 	vldr	s0, [r7, #16]
 802aa3a:	9300      	str	r3, [sp, #0]
 802aa3c:	a80c      	add	r0, sp, #48	; 0x30
 802aa3e:	2301      	movs	r3, #1
 802aa40:	f7fc fee2 	bl	8027808 <ACTIONS_move(bool, ROBOT_axisIndex_t, float, AXIS_moveType_t, AXIS_mode_t)>
 802aa44:	a90c      	add	r1, sp, #48	; 0x30
 802aa46:	4620      	mov	r0, r4
 802aa48:	f001 f956 	bl	802bcf8 <TaskStatus::operator=(TaskStatus const&)>
 802aa4c:	e75e      	b.n	802a90c <RECOVERY_moveMainStateMachine(unsigned long)+0x44>
 802aa4e:	2300      	movs	r3, #0
 802aa50:	7881      	ldrb	r1, [r0, #2]
 802aa52:	ed97 0a02 	vldr	s0, [r7, #8]
 802aa56:	9300      	str	r3, [sp, #0]
 802aa58:	a80c      	add	r0, sp, #48	; 0x30
 802aa5a:	e783      	b.n	802a964 <RECOVERY_moveMainStateMachine(unsigned long)+0x9c>
 802aa5c:	2300      	movs	r3, #0
 802aa5e:	e76d      	b.n	802a93c <RECOVERY_moveMainStateMachine(unsigned long)+0x74>
 802aa60:	757b      	strb	r3, [r7, #21]
 802aa62:	f004 fb15 	bl	802f090 <CAMERA_stop()>
 802aa66:	e79a      	b.n	802a99e <RECOVERY_moveMainStateMachine(unsigned long)+0xd6>
 802aa68:	2302      	movs	r3, #2
 802aa6a:	7023      	strb	r3, [r4, #0]
 802aa6c:	e74e      	b.n	802a90c <RECOVERY_moveMainStateMachine(unsigned long)+0x44>
 802aa6e:	bf00      	nop
 802aa70:	20004f18 	.word	0x20004f18
 802aa74:	20004efc 	.word	0x20004efc
 802aa78:	20004ee0 	.word	0x20004ee0
 802aa7c:	408f4000 	.word	0x408f4000

0802aa80 <RECOVERY_setup()>:
 802aa80:	b538      	push	{r3, r4, r5, lr}
 802aa82:	2218      	movs	r2, #24
 802aa84:	2100      	movs	r1, #0
 802aa86:	4604      	mov	r4, r0
 802aa88:	4831      	ldr	r0, [pc, #196]	; (802ab50 <RECOVERY_setup()+0xd0>)
 802aa8a:	4d32      	ldr	r5, [pc, #200]	; (802ab54 <RECOVERY_setup()+0xd4>)
 802aa8c:	f014 fde2 	bl	803f654 <memset>
 802aa90:	f7fa feb6 	bl	8025800 <ANTCTRL_getLastTaskPayload>
 802aa94:	f9b0 3005 	ldrsh.w	r3, [r0, #5]
 802aa98:	eddf 6a2f 	vldr	s13, [pc, #188]	; 802ab58 <RECOVERY_setup()+0xd8>
 802aa9c:	ee07 3a10 	vmov	s14, r3
 802aaa0:	f9b0 3003 	ldrsh.w	r3, [r0, #3]
 802aaa4:	ee07 3a90 	vmov	s15, r3
 802aaa8:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 802aaac:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 802aab0:	782b      	ldrb	r3, [r5, #0]
 802aab2:	eee7 7a26 	vfma.f32	s15, s14, s13
 802aab6:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 802aaba:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802aabe:	dd38      	ble.n	802ab32 <RECOVERY_setup()+0xb2>
 802aac0:	2b01      	cmp	r3, #1
 802aac2:	d02d      	beq.n	802ab20 <RECOVERY_setup()+0xa0>
 802aac4:	ed9f 0a25 	vldr	s0, [pc, #148]	; 802ab5c <RECOVERY_setup()+0xdc>
 802aac8:	eddf 7a25 	vldr	s15, [pc, #148]	; 802ab60 <RECOVERY_setup()+0xe0>
 802aacc:	2b02      	cmp	r3, #2
 802aace:	bf18      	it	ne
 802aad0:	eeb0 0a67 	vmovne.f32	s0, s15
 802aad4:	4b1e      	ldr	r3, [pc, #120]	; (802ab50 <RECOVERY_setup()+0xd0>)
 802aad6:	ed9f 7a23 	vldr	s14, [pc, #140]	; 802ab64 <RECOVERY_setup()+0xe4>
 802aada:	ed83 0a03 	vstr	s0, [r3, #12]
 802aade:	7802      	ldrb	r2, [r0, #0]
 802aae0:	eddf 7a21 	vldr	s15, [pc, #132]	; 802ab68 <RECOVERY_setup()+0xe8>
 802aae4:	4921      	ldr	r1, [pc, #132]	; (802ab6c <RECOVERY_setup()+0xec>)
 802aae6:	6099      	str	r1, [r3, #8]
 802aae8:	2a01      	cmp	r2, #1
 802aaea:	bf14      	ite	ne
 802aaec:	2109      	movne	r1, #9
 802aaee:	2108      	moveq	r1, #8
 802aaf0:	bf08      	it	eq
 802aaf2:	eef0 7a47 	vmoveq.f32	s15, s14
 802aaf6:	2202      	movs	r2, #2
 802aaf8:	481d      	ldr	r0, [pc, #116]	; (802ab70 <RECOVERY_setup()+0xf0>)
 802aafa:	7019      	strb	r1, [r3, #0]
 802aafc:	edc3 7a01 	vstr	s15, [r3, #4]
 802ab00:	f7f8 f8c8 	bl	8022c94 <Robot::estimateMoveTime(ROBOT_axisIndex_t, float, AXIS_mode_t)>
 802ab04:	491b      	ldr	r1, [pc, #108]	; (802ab74 <RECOVERY_setup()+0xf4>)
 802ab06:	782a      	ldrb	r2, [r5, #0]
 802ab08:	f500 509c 	add.w	r0, r0, #4992	; 0x1380
 802ab0c:	3008      	adds	r0, #8
 802ab0e:	6548      	str	r0, [r1, #84]	; 0x54
 802ab10:	b94a      	cbnz	r2, 802ab26 <RECOVERY_setup()+0xa6>
 802ab12:	220b      	movs	r2, #11
 802ab14:	2102      	movs	r1, #2
 802ab16:	4620      	mov	r0, r4
 802ab18:	f001 f8de 	bl	802bcd8 <TaskStatus::TaskStatus(TaskStatus::Result_e, unsigned int)>
 802ab1c:	4620      	mov	r0, r4
 802ab1e:	bd38      	pop	{r3, r4, r5, pc}
 802ab20:	ed9f 0a15 	vldr	s0, [pc, #84]	; 802ab78 <RECOVERY_setup()+0xf8>
 802ab24:	e7d6      	b.n	802aad4 <RECOVERY_setup()+0x54>
 802ab26:	2101      	movs	r1, #1
 802ab28:	4620      	mov	r0, r4
 802ab2a:	f001 f8cf 	bl	802bccc <TaskStatus::TaskStatus(TaskStatus::Result_e)>
 802ab2e:	4620      	mov	r0, r4
 802ab30:	bd38      	pop	{r3, r4, r5, pc}
 802ab32:	2b01      	cmp	r3, #1
 802ab34:	d008      	beq.n	802ab48 <RECOVERY_setup()+0xc8>
 802ab36:	ed9f 0a0a 	vldr	s0, [pc, #40]	; 802ab60 <RECOVERY_setup()+0xe0>
 802ab3a:	eddf 7a0f 	vldr	s15, [pc, #60]	; 802ab78 <RECOVERY_setup()+0xf8>
 802ab3e:	2b02      	cmp	r3, #2
 802ab40:	bf08      	it	eq
 802ab42:	eeb0 0a67 	vmoveq.f32	s0, s15
 802ab46:	e7c5      	b.n	802aad4 <RECOVERY_setup()+0x54>
 802ab48:	ed9f 0a04 	vldr	s0, [pc, #16]	; 802ab5c <RECOVERY_setup()+0xdc>
 802ab4c:	e7c2      	b.n	802aad4 <RECOVERY_setup()+0x54>
 802ab4e:	bf00      	nop
 802ab50:	20004efc 	.word	0x20004efc
 802ab54:	20004f14 	.word	0x20004f14
 802ab58:	38000000 	.word	0x38000000
 802ab5c:	bf39999a 	.word	0xbf39999a
 802ab60:	00000000 	.word	0x00000000
 802ab64:	42b80000 	.word	0x42b80000
 802ab68:	42800000 	.word	0x42800000
 802ab6c:	42a00000 	.word	0x42a00000
 802ab70:	2000f630 	.word	0x2000f630
 802ab74:	20001774 	.word	0x20001774
 802ab78:	3f39999a 	.word	0x3f39999a

0802ab7c <RECOVERY_moveRecovery(unsigned long, bool, COMM_CCP_recoveryDirection_t)>:
 802ab7c:	b510      	push	{r4, lr}
 802ab7e:	b084      	sub	sp, #16
 802ab80:	b10a      	cbz	r2, 802ab86 <RECOVERY_moveRecovery(unsigned long, bool, COMM_CCP_recoveryDirection_t)+0xa>
 802ab82:	4c06      	ldr	r4, [pc, #24]	; (802ab9c <RECOVERY_moveRecovery(unsigned long, bool, COMM_CCP_recoveryDirection_t)+0x20>)
 802ab84:	7023      	strb	r3, [r4, #0]
 802ab86:	9200      	str	r2, [sp, #0]
 802ab88:	460b      	mov	r3, r1
 802ab8a:	4a05      	ldr	r2, [pc, #20]	; (802aba0 <RECOVERY_moveRecovery(unsigned long, bool, COMM_CCP_recoveryDirection_t)+0x24>)
 802ab8c:	4905      	ldr	r1, [pc, #20]	; (802aba4 <RECOVERY_moveRecovery(unsigned long, bool, COMM_CCP_recoveryDirection_t)+0x28>)
 802ab8e:	9003      	str	r0, [sp, #12]
 802ab90:	f7fd f9c4 	bl	8027f1c <SM_RUNNER_runStateMachine>
 802ab94:	9803      	ldr	r0, [sp, #12]
 802ab96:	b004      	add	sp, #16
 802ab98:	bd10      	pop	{r4, pc}
 802ab9a:	bf00      	nop
 802ab9c:	20004f14 	.word	0x20004f14
 802aba0:	20004f18 	.word	0x20004f18
 802aba4:	20001844 	.word	0x20001844

0802aba8 <RECOVERY_noMoveMainStateMachine(unsigned long)>:
 802aba8:	b5f0      	push	{r4, r5, r6, r7, lr}
 802abaa:	460d      	mov	r5, r1
 802abac:	b08f      	sub	sp, #60	; 0x3c
 802abae:	2100      	movs	r1, #0
 802abb0:	4604      	mov	r4, r0
 802abb2:	f001 f88b 	bl	802bccc <TaskStatus::TaskStatus(TaskStatus::Result_e)>
 802abb6:	4a40      	ldr	r2, [pc, #256]	; (802acb8 <RECOVERY_noMoveMainStateMachine(unsigned long)+0x110>)
 802abb8:	4940      	ldr	r1, [pc, #256]	; (802acbc <RECOVERY_noMoveMainStateMachine(unsigned long)+0x114>)
 802abba:	7813      	ldrb	r3, [r2, #0]
 802abbc:	8809      	ldrh	r1, [r1, #0]
 802abbe:	f8ad 102c 	strh.w	r1, [sp, #44]	; 0x2c
 802abc2:	2b09      	cmp	r3, #9
 802abc4:	d874      	bhi.n	802acb0 <RECOVERY_noMoveMainStateMachine(unsigned long)+0x108>
 802abc6:	e8df f003 	tbb	[pc, r3]
 802abca:	140e      	.short	0x140e
 802abcc:	4437221d 	.word	0x4437221d
 802abd0:	05695b54 	.word	0x05695b54
 802abd4:	4838      	ldr	r0, [pc, #224]	; (802acb8 <RECOVERY_noMoveMainStateMachine(unsigned long)+0x110>)
 802abd6:	2101      	movs	r1, #1
 802abd8:	f7fd fb92 	bl	8028300 <SM_RUNNER_setComplete>
 802abdc:	2301      	movs	r3, #1
 802abde:	7023      	strb	r3, [r4, #0]
 802abe0:	4620      	mov	r0, r4
 802abe2:	b00f      	add	sp, #60	; 0x3c
 802abe4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 802abe6:	2000      	movs	r0, #0
 802abe8:	f004 fa7e 	bl	802f0e8 <CAMERA_activateProfile(CAMERA_configProfile_t)>
 802abec:	2301      	movs	r3, #1
 802abee:	7023      	strb	r3, [r4, #0]
 802abf0:	e7f6      	b.n	802abe0 <RECOVERY_noMoveMainStateMachine(unsigned long)+0x38>
 802abf2:	7891      	ldrb	r1, [r2, #2]
 802abf4:	a80c      	add	r0, sp, #48	; 0x30
 802abf6:	f7fc fffb 	bl	8027bf0 <ACTIONS_resetAll(bool)>
 802abfa:	a90c      	add	r1, sp, #48	; 0x30
 802abfc:	4620      	mov	r0, r4
 802abfe:	f001 f87b 	bl	802bcf8 <TaskStatus::operator=(TaskStatus const&)>
 802ac02:	e7ed      	b.n	802abe0 <RECOVERY_noMoveMainStateMachine(unsigned long)+0x38>
 802ac04:	f004 fa02 	bl	802f00c <CAMERA_trigger()>
 802ac08:	2301      	movs	r3, #1
 802ac0a:	7023      	strb	r3, [r4, #0]
 802ac0c:	e7e8      	b.n	802abe0 <RECOVERY_noMoveMainStateMachine(unsigned long)+0x38>
 802ac0e:	076e      	lsls	r6, r5, #29
 802ac10:	d5e6      	bpl.n	802abe0 <RECOVERY_noMoveMainStateMachine(unsigned long)+0x38>
 802ac12:	a802      	add	r0, sp, #8
 802ac14:	ad02      	add	r5, sp, #8
 802ac16:	f004 f875 	bl	802ed04 <CAMERA_getResponseData()>
 802ac1a:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 802ac1c:	4f28      	ldr	r7, [pc, #160]	; (802acc0 <RECOVERY_noMoveMainStateMachine(unsigned long)+0x118>)
 802ac1e:	463e      	mov	r6, r7
 802ac20:	c60f      	stmia	r6!, {r0, r1, r2, r3}
 802ac22:	683b      	ldr	r3, [r7, #0]
 802ac24:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 802ac28:	1c5d      	adds	r5, r3, #1
 802ac2a:	bf14      	ite	ne
 802ac2c:	2301      	movne	r3, #1
 802ac2e:	2302      	moveq	r3, #2
 802ac30:	e886 0007 	stmia.w	r6, {r0, r1, r2}
 802ac34:	7023      	strb	r3, [r4, #0]
 802ac36:	e7d3      	b.n	802abe0 <RECOVERY_noMoveMainStateMachine(unsigned long)+0x38>
 802ac38:	2301      	movs	r3, #1
 802ac3a:	7891      	ldrb	r1, [r2, #2]
 802ac3c:	9300      	str	r3, [sp, #0]
 802ac3e:	a80c      	add	r0, sp, #48	; 0x30
 802ac40:	2302      	movs	r3, #2
 802ac42:	aa0b      	add	r2, sp, #44	; 0x2c
 802ac44:	f7fc ff54 	bl	8027af0 <ACTIONS_powerList(bool, ROBOT_axisIndex_t const*, unsigned char, AXIS_powerState_t)>
 802ac48:	a90c      	add	r1, sp, #48	; 0x30
 802ac4a:	4620      	mov	r0, r4
 802ac4c:	f001 f854 	bl	802bcf8 <TaskStatus::operator=(TaskStatus const&)>
 802ac50:	e7c6      	b.n	802abe0 <RECOVERY_noMoveMainStateMachine(unsigned long)+0x38>
 802ac52:	2300      	movs	r3, #0
 802ac54:	ed9f 0a1b 	vldr	s0, [pc, #108]	; 802acc4 <RECOVERY_noMoveMainStateMachine(unsigned long)+0x11c>
 802ac58:	7891      	ldrb	r1, [r2, #2]
 802ac5a:	9300      	str	r3, [sp, #0]
 802ac5c:	a80c      	add	r0, sp, #48	; 0x30
 802ac5e:	2210      	movs	r2, #16
 802ac60:	f7fc fdd2 	bl	8027808 <ACTIONS_move(bool, ROBOT_axisIndex_t, float, AXIS_moveType_t, AXIS_mode_t)>
 802ac64:	a90c      	add	r1, sp, #48	; 0x30
 802ac66:	4620      	mov	r0, r4
 802ac68:	f001 f846 	bl	802bcf8 <TaskStatus::operator=(TaskStatus const&)>
 802ac6c:	4620      	mov	r0, r4
 802ac6e:	b00f      	add	sp, #60	; 0x3c
 802ac70:	bdf0      	pop	{r4, r5, r6, r7, pc}
 802ac72:	2300      	movs	r3, #0
 802ac74:	7891      	ldrb	r1, [r2, #2]
 802ac76:	9300      	str	r3, [sp, #0]
 802ac78:	a80c      	add	r0, sp, #48	; 0x30
 802ac7a:	eeb0 0a00 	vmov.f32	s0, #0	; 0x40000000  2.0
 802ac7e:	e7ee      	b.n	802ac5e <RECOVERY_noMoveMainStateMachine(unsigned long)+0xb6>
 802ac80:	2300      	movs	r3, #0
 802ac82:	7891      	ldrb	r1, [r2, #2]
 802ac84:	ed9f 0a10 	vldr	s0, [pc, #64]	; 802acc8 <RECOVERY_noMoveMainStateMachine(unsigned long)+0x120>
 802ac88:	9300      	str	r3, [sp, #0]
 802ac8a:	a80c      	add	r0, sp, #48	; 0x30
 802ac8c:	2211      	movs	r2, #17
 802ac8e:	f7fc fdbb 	bl	8027808 <ACTIONS_move(bool, ROBOT_axisIndex_t, float, AXIS_moveType_t, AXIS_mode_t)>
 802ac92:	a90c      	add	r1, sp, #48	; 0x30
 802ac94:	4620      	mov	r0, r4
 802ac96:	f001 f82f 	bl	802bcf8 <TaskStatus::operator=(TaskStatus const&)>
 802ac9a:	e7a1      	b.n	802abe0 <RECOVERY_noMoveMainStateMachine(unsigned long)+0x38>
 802ac9c:	7891      	ldrb	r1, [r2, #2]
 802ac9e:	a80c      	add	r0, sp, #48	; 0x30
 802aca0:	2200      	movs	r2, #0
 802aca2:	f7fc ff47 	bl	8027b34 <ACTIONS_powerAllAxis(bool, AXIS_powerState_t)>
 802aca6:	a90c      	add	r1, sp, #48	; 0x30
 802aca8:	4620      	mov	r0, r4
 802acaa:	f001 f825 	bl	802bcf8 <TaskStatus::operator=(TaskStatus const&)>
 802acae:	e797      	b.n	802abe0 <RECOVERY_noMoveMainStateMachine(unsigned long)+0x38>
 802acb0:	2302      	movs	r3, #2
 802acb2:	7023      	strb	r3, [r4, #0]
 802acb4:	e794      	b.n	802abe0 <RECOVERY_noMoveMainStateMachine(unsigned long)+0x38>
 802acb6:	bf00      	nop
 802acb8:	20004f48 	.word	0x20004f48
 802acbc:	08046150 	.word	0x08046150
 802acc0:	20004f2c 	.word	0x20004f2c
 802acc4:	00000000 	.word	0x00000000
 802acc8:	43070000 	.word	0x43070000

0802accc <RECOVERY_noMoveRecovery(unsigned long, bool, COMM_CCP_recoveryDirection_t)>:
 802accc:	b530      	push	{r4, r5, lr}
 802acce:	460b      	mov	r3, r1
 802acd0:	b085      	sub	sp, #20
 802acd2:	4604      	mov	r4, r0
 802acd4:	4615      	mov	r5, r2
 802acd6:	b942      	cbnz	r2, 802acea <RECOVERY_noMoveRecovery(unsigned long, bool, COMM_CCP_recoveryDirection_t)+0x1e>
 802acd8:	4620      	mov	r0, r4
 802acda:	4a08      	ldr	r2, [pc, #32]	; (802acfc <RECOVERY_noMoveRecovery(unsigned long, bool, COMM_CCP_recoveryDirection_t)+0x30>)
 802acdc:	4908      	ldr	r1, [pc, #32]	; (802ad00 <RECOVERY_noMoveRecovery(unsigned long, bool, COMM_CCP_recoveryDirection_t)+0x34>)
 802acde:	9500      	str	r5, [sp, #0]
 802ace0:	f7fd f91c 	bl	8027f1c <SM_RUNNER_runStateMachine>
 802ace4:	4620      	mov	r0, r4
 802ace6:	b005      	add	sp, #20
 802ace8:	bd30      	pop	{r4, r5, pc}
 802acea:	9103      	str	r1, [sp, #12]
 802acec:	4805      	ldr	r0, [pc, #20]	; (802ad04 <RECOVERY_noMoveRecovery(unsigned long, bool, COMM_CCP_recoveryDirection_t)+0x38>)
 802acee:	221c      	movs	r2, #28
 802acf0:	2100      	movs	r1, #0
 802acf2:	f014 fcaf 	bl	803f654 <memset>
 802acf6:	9b03      	ldr	r3, [sp, #12]
 802acf8:	e7ee      	b.n	802acd8 <RECOVERY_noMoveRecovery(unsigned long, bool, COMM_CCP_recoveryDirection_t)+0xc>
 802acfa:	bf00      	nop
 802acfc:	20004f48 	.word	0x20004f48
 802ad00:	20001904 	.word	0x20001904
 802ad04:	20004f2c 	.word	0x20004f2c

0802ad08 <CAMERA_CALIBRATION_cameraTriggerCallback(void*)>:
 802ad08:	f004 b980 	b.w	802f00c <CAMERA_trigger()>

0802ad0c <CAMERA_CALIBRATION_calibrateDirection(CAMERA_CALIBRATION_direction_t, unsigned long, bool)>:
 802ad0c:	b5f0      	push	{r4, r5, r6, r7, lr}
 802ad0e:	4604      	mov	r4, r0
 802ad10:	b083      	sub	sp, #12
 802ad12:	4617      	mov	r7, r2
 802ad14:	461d      	mov	r5, r3
 802ad16:	b94b      	cbnz	r3, 802ad2c <CAMERA_CALIBRATION_calibrateDirection(CAMERA_CALIBRATION_direction_t, unsigned long, bool)+0x20>
 802ad18:	4620      	mov	r0, r4
 802ad1a:	4a0e      	ldr	r2, [pc, #56]	; (802ad54 <CAMERA_CALIBRATION_calibrateDirection(CAMERA_CALIBRATION_direction_t, unsigned long, bool)+0x48>)
 802ad1c:	490e      	ldr	r1, [pc, #56]	; (802ad58 <CAMERA_CALIBRATION_calibrateDirection(CAMERA_CALIBRATION_direction_t, unsigned long, bool)+0x4c>)
 802ad1e:	9500      	str	r5, [sp, #0]
 802ad20:	463b      	mov	r3, r7
 802ad22:	f7fd f8fb 	bl	8027f1c <SM_RUNNER_runStateMachine>
 802ad26:	4620      	mov	r0, r4
 802ad28:	b003      	add	sp, #12
 802ad2a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 802ad2c:	4e0b      	ldr	r6, [pc, #44]	; (802ad5c <CAMERA_CALIBRATION_calibrateDirection(CAMERA_CALIBRATION_direction_t, unsigned long, bool)+0x50>)
 802ad2e:	f8df c030 	ldr.w	ip, [pc, #48]	; 802ad60 <CAMERA_CALIBRATION_calibrateDirection(CAMERA_CALIBRATION_direction_t, unsigned long, bool)+0x54>
 802ad32:	eb01 0181 	add.w	r1, r1, r1, lsl #2
 802ad36:	eb06 0681 	add.w	r6, r6, r1, lsl #2
 802ad3a:	2300      	movs	r3, #0
 802ad3c:	7433      	strb	r3, [r6, #16]
 802ad3e:	ce0f      	ldmia	r6!, {r0, r1, r2, r3}
 802ad40:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 802ad44:	6833      	ldr	r3, [r6, #0]
 802ad46:	4803      	ldr	r0, [pc, #12]	; (802ad54 <CAMERA_CALIBRATION_calibrateDirection(CAMERA_CALIBRATION_direction_t, unsigned long, bool)+0x48>)
 802ad48:	f8cc 3000 	str.w	r3, [ip]
 802ad4c:	f7fd fada 	bl	8028304 <SM_RUNNER_restart>
 802ad50:	e7e2      	b.n	802ad18 <CAMERA_CALIBRATION_calibrateDirection(CAMERA_CALIBRATION_direction_t, unsigned long, bool)+0xc>
 802ad52:	bf00      	nop
 802ad54:	20004fd0 	.word	0x20004fd0
 802ad58:	20001a64 	.word	0x20001a64
 802ad5c:	20001a14 	.word	0x20001a14
 802ad60:	20004f70 	.word	0x20004f70

0802ad64 <CAMERA_CALIBRATION_singleDirectionStateMachine(unsigned long)>:
 802ad64:	b5f0      	push	{r4, r5, r6, r7, lr}
 802ad66:	460d      	mov	r5, r1
 802ad68:	b08d      	sub	sp, #52	; 0x34
 802ad6a:	2100      	movs	r1, #0
 802ad6c:	4604      	mov	r4, r0
 802ad6e:	f000 ffad 	bl	802bccc <TaskStatus::TaskStatus(TaskStatus::Result_e)>
 802ad72:	4a61      	ldr	r2, [pc, #388]	; (802aef8 <CAMERA_CALIBRATION_singleDirectionStateMachine(unsigned long)+0x194>)
 802ad74:	7813      	ldrb	r3, [r2, #0]
 802ad76:	2b06      	cmp	r3, #6
 802ad78:	d839      	bhi.n	802adee <CAMERA_CALIBRATION_singleDirectionStateMachine(unsigned long)+0x8a>
 802ad7a:	e8df f003 	tbb	[pc, r3]
 802ad7e:	1e0d      	.short	0x1e0d
 802ad80:	67563d2e 	.word	0x67563d2e
 802ad84:	04          	.byte	0x04
 802ad85:	00          	.byte	0x00
 802ad86:	485c      	ldr	r0, [pc, #368]	; (802aef8 <CAMERA_CALIBRATION_singleDirectionStateMachine(unsigned long)+0x194>)
 802ad88:	2101      	movs	r1, #1
 802ad8a:	f7fd fab9 	bl	8028300 <SM_RUNNER_setComplete>
 802ad8e:	2301      	movs	r3, #1
 802ad90:	7023      	strb	r3, [r4, #0]
 802ad92:	4620      	mov	r0, r4
 802ad94:	b00d      	add	sp, #52	; 0x34
 802ad96:	bdf0      	pop	{r4, r5, r6, r7, pc}
 802ad98:	4b58      	ldr	r3, [pc, #352]	; (802aefc <CAMERA_CALIBRATION_singleDirectionStateMachine(unsigned long)+0x198>)
 802ad9a:	7891      	ldrb	r1, [r2, #2]
 802ad9c:	ed93 0a02 	vldr	s0, [r3, #8]
 802ada0:	2300      	movs	r3, #0
 802ada2:	a805      	add	r0, sp, #20
 802ada4:	9300      	str	r3, [sp, #0]
 802ada6:	220f      	movs	r2, #15
 802ada8:	f7fc fd2e 	bl	8027808 <ACTIONS_move(bool, ROBOT_axisIndex_t, float, AXIS_moveType_t, AXIS_mode_t)>
 802adac:	a905      	add	r1, sp, #20
 802adae:	4620      	mov	r0, r4
 802adb0:	f000 ffa2 	bl	802bcf8 <TaskStatus::operator=(TaskStatus const&)>
 802adb4:	4620      	mov	r0, r4
 802adb6:	b00d      	add	sp, #52	; 0x34
 802adb8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 802adba:	4b50      	ldr	r3, [pc, #320]	; (802aefc <CAMERA_CALIBRATION_singleDirectionStateMachine(unsigned long)+0x198>)
 802adbc:	7891      	ldrb	r1, [r2, #2]
 802adbe:	789a      	ldrb	r2, [r3, #2]
 802adc0:	2319      	movs	r3, #25
 802adc2:	a805      	add	r0, sp, #20
 802adc4:	9300      	str	r3, [sp, #0]
 802adc6:	2301      	movs	r3, #1
 802adc8:	f7fc ff98 	bl	8027cfc <ACTIONS_enableTelemetry(bool, ROBOT_axisIndex_t, bool, unsigned int)>
 802adcc:	a905      	add	r1, sp, #20
 802adce:	4620      	mov	r0, r4
 802add0:	f000 ff92 	bl	802bcf8 <TaskStatus::operator=(TaskStatus const&)>
 802add4:	4620      	mov	r0, r4
 802add6:	b00d      	add	sp, #52	; 0x34
 802add8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 802adda:	4b48      	ldr	r3, [pc, #288]	; (802aefc <CAMERA_CALIBRATION_singleDirectionStateMachine(unsigned long)+0x198>)
 802addc:	4948      	ldr	r1, [pc, #288]	; (802af00 <CAMERA_CALIBRATION_singleDirectionStateMachine(unsigned long)+0x19c>)
 802adde:	789a      	ldrb	r2, [r3, #2]
 802ade0:	a805      	add	r0, sp, #20
 802ade2:	f7f7 fe81 	bl	8022ae8 <Robot::getAxis(ROBOT_axisIndex_t)>
 802ade6:	f89d 3018 	ldrb.w	r3, [sp, #24]
 802adea:	2b00      	cmp	r3, #0
 802adec:	d16a      	bne.n	802aec4 <CAMERA_CALIBRATION_singleDirectionStateMachine(unsigned long)+0x160>
 802adee:	2302      	movs	r3, #2
 802adf0:	4620      	mov	r0, r4
 802adf2:	7023      	strb	r3, [r4, #0]
 802adf4:	b00d      	add	sp, #52	; 0x34
 802adf6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 802adf8:	4e40      	ldr	r6, [pc, #256]	; (802aefc <CAMERA_CALIBRATION_singleDirectionStateMachine(unsigned long)+0x198>)
 802adfa:	7c33      	ldrb	r3, [r6, #16]
 802adfc:	af05      	add	r7, sp, #20
 802adfe:	2b00      	cmp	r3, #0
 802ae00:	d034      	beq.n	802ae6c <CAMERA_CALIBRATION_singleDirectionStateMachine(unsigned long)+0x108>
 802ae02:	7891      	ldrb	r1, [r2, #2]
 802ae04:	7872      	ldrb	r2, [r6, #1]
 802ae06:	4638      	mov	r0, r7
 802ae08:	f7fc ff0a 	bl	8027c20 <ACTIONS_stop(bool, ROBOT_axisIndex_t)>
 802ae0c:	4639      	mov	r1, r7
 802ae0e:	4620      	mov	r0, r4
 802ae10:	f000 ff72 	bl	802bcf8 <TaskStatus::operator=(TaskStatus const&)>
 802ae14:	076b      	lsls	r3, r5, #29
 802ae16:	d438      	bmi.n	802ae8a <CAMERA_CALIBRATION_singleDirectionStateMachine(unsigned long)+0x126>
 802ae18:	7823      	ldrb	r3, [r4, #0]
 802ae1a:	2b01      	cmp	r3, #1
 802ae1c:	d1b9      	bne.n	802ad92 <CAMERA_CALIBRATION_singleDirectionStateMachine(unsigned long)+0x2e>
 802ae1e:	7c32      	ldrb	r2, [r6, #16]
 802ae20:	2a00      	cmp	r2, #0
 802ae22:	bf08      	it	eq
 802ae24:	2302      	moveq	r3, #2
 802ae26:	7023      	strb	r3, [r4, #0]
 802ae28:	e7b3      	b.n	802ad92 <CAMERA_CALIBRATION_singleDirectionStateMachine(unsigned long)+0x2e>
 802ae2a:	4b34      	ldr	r3, [pc, #208]	; (802aefc <CAMERA_CALIBRATION_singleDirectionStateMachine(unsigned long)+0x198>)
 802ae2c:	4934      	ldr	r1, [pc, #208]	; (802af00 <CAMERA_CALIBRATION_singleDirectionStateMachine(unsigned long)+0x19c>)
 802ae2e:	789a      	ldrb	r2, [r3, #2]
 802ae30:	a805      	add	r0, sp, #20
 802ae32:	f7f7 fe59 	bl	8022ae8 <Robot::getAxis(ROBOT_axisIndex_t)>
 802ae36:	f89d 3018 	ldrb.w	r3, [sp, #24]
 802ae3a:	2b00      	cmp	r3, #0
 802ae3c:	d0d7      	beq.n	802adee <CAMERA_CALIBRATION_singleDirectionStateMachine(unsigned long)+0x8a>
 802ae3e:	4931      	ldr	r1, [pc, #196]	; (802af04 <CAMERA_CALIBRATION_singleDirectionStateMachine(unsigned long)+0x1a0>)
 802ae40:	9805      	ldr	r0, [sp, #20]
 802ae42:	f7f8 f8b7 	bl	8022fb4 <AxisBase::removeDataSubscriber(SubscriberBase*)>
 802ae46:	2301      	movs	r3, #1
 802ae48:	7023      	strb	r3, [r4, #0]
 802ae4a:	e7a2      	b.n	802ad92 <CAMERA_CALIBRATION_singleDirectionStateMachine(unsigned long)+0x2e>
 802ae4c:	4b2b      	ldr	r3, [pc, #172]	; (802aefc <CAMERA_CALIBRATION_singleDirectionStateMachine(unsigned long)+0x198>)
 802ae4e:	7891      	ldrb	r1, [r2, #2]
 802ae50:	789a      	ldrb	r2, [r3, #2]
 802ae52:	2319      	movs	r3, #25
 802ae54:	a805      	add	r0, sp, #20
 802ae56:	9300      	str	r3, [sp, #0]
 802ae58:	2300      	movs	r3, #0
 802ae5a:	f7fc ff4f 	bl	8027cfc <ACTIONS_enableTelemetry(bool, ROBOT_axisIndex_t, bool, unsigned int)>
 802ae5e:	a905      	add	r1, sp, #20
 802ae60:	4620      	mov	r0, r4
 802ae62:	f000 ff49 	bl	802bcf8 <TaskStatus::operator=(TaskStatus const&)>
 802ae66:	4620      	mov	r0, r4
 802ae68:	b00d      	add	sp, #52	; 0x34
 802ae6a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 802ae6c:	2303      	movs	r3, #3
 802ae6e:	7891      	ldrb	r1, [r2, #2]
 802ae70:	ed96 0a01 	vldr	s0, [r6, #4]
 802ae74:	9300      	str	r3, [sp, #0]
 802ae76:	4638      	mov	r0, r7
 802ae78:	7872      	ldrb	r2, [r6, #1]
 802ae7a:	2301      	movs	r3, #1
 802ae7c:	f7fc fcc4 	bl	8027808 <ACTIONS_move(bool, ROBOT_axisIndex_t, float, AXIS_moveType_t, AXIS_mode_t)>
 802ae80:	4639      	mov	r1, r7
 802ae82:	4620      	mov	r0, r4
 802ae84:	f000 ff38 	bl	802bcf8 <TaskStatus::operator=(TaskStatus const&)>
 802ae88:	e7c4      	b.n	802ae14 <CAMERA_CALIBRATION_singleDirectionStateMachine(unsigned long)+0xb0>
 802ae8a:	4638      	mov	r0, r7
 802ae8c:	f003 ff3a 	bl	802ed04 <CAMERA_getResponseData()>
 802ae90:	e9dd 0508 	ldrd	r0, r5, [sp, #32]
 802ae94:	7832      	ldrb	r2, [r6, #0]
 802ae96:	4b1c      	ldr	r3, [pc, #112]	; (802af08 <CAMERA_CALIBRATION_singleDirectionStateMachine(unsigned long)+0x1a4>)
 802ae98:	491c      	ldr	r1, [pc, #112]	; (802af0c <CAMERA_CALIBRATION_singleDirectionStateMachine(unsigned long)+0x1a8>)
 802ae9a:	f843 0032 	str.w	r0, [r3, r2, lsl #3]
 802ae9e:	eb02 0082 	add.w	r0, r2, r2, lsl #2
 802aea2:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 802aea6:	eb01 0280 	add.w	r2, r1, r0, lsl #2
 802aeaa:	2101      	movs	r1, #1
 802aeac:	7411      	strb	r1, [r2, #16]
 802aeae:	a803      	add	r0, sp, #12
 802aeb0:	7872      	ldrb	r2, [r6, #1]
 802aeb2:	605d      	str	r5, [r3, #4]
 802aeb4:	7431      	strb	r1, [r6, #16]
 802aeb6:	f7fc feb3 	bl	8027c20 <ACTIONS_stop(bool, ROBOT_axisIndex_t)>
 802aeba:	a903      	add	r1, sp, #12
 802aebc:	4620      	mov	r0, r4
 802aebe:	f000 ff1b 	bl	802bcf8 <TaskStatus::operator=(TaskStatus const&)>
 802aec2:	e7a9      	b.n	802ae18 <CAMERA_CALIBRATION_singleDirectionStateMachine(unsigned long)+0xb4>
 802aec4:	9d05      	ldr	r5, [sp, #20]
 802aec6:	490f      	ldr	r1, [pc, #60]	; (802af04 <CAMERA_CALIBRATION_singleDirectionStateMachine(unsigned long)+0x1a0>)
 802aec8:	4628      	mov	r0, r5
 802aeca:	f7f8 f86f 	bl	8022fac <AxisBase::addDataSubscriber(SubscriberBase*)>
 802aece:	4910      	ldr	r1, [pc, #64]	; (802af10 <CAMERA_CALIBRATION_singleDirectionStateMachine(unsigned long)+0x1ac>)
 802aed0:	480c      	ldr	r0, [pc, #48]	; (802af04 <CAMERA_CALIBRATION_singleDirectionStateMachine(unsigned long)+0x1a0>)
 802aed2:	2200      	movs	r2, #0
 802aed4:	f005 fd74 	bl	80309c0 <ProgressMonitor::registerUpdateCallback(void (*)(void*), void*)>
 802aed8:	480a      	ldr	r0, [pc, #40]	; (802af04 <CAMERA_CALIBRATION_singleDirectionStateMachine(unsigned long)+0x1a0>)
 802aeda:	f005 fdc5 	bl	8030a68 <AxisTelemetryMonitor::resetOnUpdate()>
 802aede:	ed9f 0a0d 	vldr	s0, [pc, #52]	; 802af14 <CAMERA_CALIBRATION_singleDirectionStateMachine(unsigned long)+0x1b0>
 802aee2:	4628      	mov	r0, r5
 802aee4:	f7f8 f802 	bl	8022eec <AxisBase::convertToEncoderCounts(float)>
 802aee8:	4601      	mov	r1, r0
 802aeea:	4806      	ldr	r0, [pc, #24]	; (802af04 <CAMERA_CALIBRATION_singleDirectionStateMachine(unsigned long)+0x1a0>)
 802aeec:	f005 fdb2 	bl	8030a54 <AxisTelemetryMonitor::setUpdateInterval(unsigned int)>
 802aef0:	2301      	movs	r3, #1
 802aef2:	7023      	strb	r3, [r4, #0]
 802aef4:	e74d      	b.n	802ad92 <CAMERA_CALIBRATION_singleDirectionStateMachine(unsigned long)+0x2e>
 802aef6:	bf00      	nop
 802aef8:	20004fd0 	.word	0x20004fd0
 802aefc:	20004f70 	.word	0x20004f70
 802af00:	2000f630 	.word	0x2000f630
 802af04:	20004fa4 	.word	0x20004fa4
 802af08:	20004f84 	.word	0x20004f84
 802af0c:	20001a14 	.word	0x20001a14
 802af10:	0802ad09 	.word	0x0802ad09
 802af14:	3c75c28f 	.word	0x3c75c28f

0802af18 <CAMERA_CALIBRATION_mainStateMachine(unsigned long)>:
 802af18:	b5f0      	push	{r4, r5, r6, r7, lr}
 802af1a:	460d      	mov	r5, r1
 802af1c:	b087      	sub	sp, #28
 802af1e:	2100      	movs	r1, #0
 802af20:	4604      	mov	r4, r0
 802af22:	f000 fed3 	bl	802bccc <TaskStatus::TaskStatus(TaskStatus::Result_e)>
 802af26:	4ab3      	ldr	r2, [pc, #716]	; (802b1f4 <CAMERA_CALIBRATION_mainStateMachine(unsigned long)+0x2dc>)
 802af28:	7813      	ldrb	r3, [r2, #0]
 802af2a:	2b0a      	cmp	r3, #10
 802af2c:	f200 815e 	bhi.w	802b1ec <CAMERA_CALIBRATION_mainStateMachine(unsigned long)+0x2d4>
 802af30:	e8df f013 	tbh	[pc, r3, lsl #1]
 802af34:	00270014 	.word	0x00270014
 802af38:	002f002c 	.word	0x002f002c
 802af3c:	0045003a 	.word	0x0045003a
 802af40:	005b0050 	.word	0x005b0050
 802af44:	010d00ff 	.word	0x010d00ff
 802af48:	000b      	.short	0x000b
 802af4a:	48aa      	ldr	r0, [pc, #680]	; (802b1f4 <CAMERA_CALIBRATION_mainStateMachine(unsigned long)+0x2dc>)
 802af4c:	2101      	movs	r1, #1
 802af4e:	f7fd f9d7 	bl	8028300 <SM_RUNNER_setComplete>
 802af52:	2301      	movs	r3, #1
 802af54:	7023      	strb	r3, [r4, #0]
 802af56:	4620      	mov	r0, r4
 802af58:	b007      	add	sp, #28
 802af5a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 802af5c:	4ba6      	ldr	r3, [pc, #664]	; (802b1f8 <CAMERA_CALIBRATION_mainStateMachine(unsigned long)+0x2e0>)
 802af5e:	7891      	ldrb	r1, [r2, #2]
 802af60:	881b      	ldrh	r3, [r3, #0]
 802af62:	f8ad 300c 	strh.w	r3, [sp, #12]
 802af66:	2301      	movs	r3, #1
 802af68:	a804      	add	r0, sp, #16
 802af6a:	9300      	str	r3, [sp, #0]
 802af6c:	aa03      	add	r2, sp, #12
 802af6e:	2302      	movs	r3, #2
 802af70:	f7fc fdbe 	bl	8027af0 <ACTIONS_powerList(bool, ROBOT_axisIndex_t const*, unsigned char, AXIS_powerState_t)>
 802af74:	a904      	add	r1, sp, #16
 802af76:	4620      	mov	r0, r4
 802af78:	f000 febe 	bl	802bcf8 <TaskStatus::operator=(TaskStatus const&)>
 802af7c:	4620      	mov	r0, r4
 802af7e:	b007      	add	sp, #28
 802af80:	bdf0      	pop	{r4, r5, r6, r7, pc}
 802af82:	f004 f843 	bl	802f00c <CAMERA_trigger()>
 802af86:	2301      	movs	r3, #1
 802af88:	7023      	strb	r3, [r4, #0]
 802af8a:	e7e4      	b.n	802af56 <CAMERA_CALIBRATION_mainStateMachine(unsigned long)+0x3e>
 802af8c:	076b      	lsls	r3, r5, #29
 802af8e:	d5e2      	bpl.n	802af56 <CAMERA_CALIBRATION_mainStateMachine(unsigned long)+0x3e>
 802af90:	e7df      	b.n	802af52 <CAMERA_CALIBRATION_mainStateMachine(unsigned long)+0x3a>
 802af92:	7893      	ldrb	r3, [r2, #2]
 802af94:	a804      	add	r0, sp, #16
 802af96:	462a      	mov	r2, r5
 802af98:	2101      	movs	r1, #1
 802af9a:	f7ff feb7 	bl	802ad0c <CAMERA_CALIBRATION_calibrateDirection(CAMERA_CALIBRATION_direction_t, unsigned long, bool)>
 802af9e:	a904      	add	r1, sp, #16
 802afa0:	4620      	mov	r0, r4
 802afa2:	f000 fea9 	bl	802bcf8 <TaskStatus::operator=(TaskStatus const&)>
 802afa6:	e7d6      	b.n	802af56 <CAMERA_CALIBRATION_mainStateMachine(unsigned long)+0x3e>
 802afa8:	7893      	ldrb	r3, [r2, #2]
 802afaa:	a804      	add	r0, sp, #16
 802afac:	462a      	mov	r2, r5
 802afae:	2100      	movs	r1, #0
 802afb0:	f7ff feac 	bl	802ad0c <CAMERA_CALIBRATION_calibrateDirection(CAMERA_CALIBRATION_direction_t, unsigned long, bool)>
 802afb4:	a904      	add	r1, sp, #16
 802afb6:	4620      	mov	r0, r4
 802afb8:	f000 fe9e 	bl	802bcf8 <TaskStatus::operator=(TaskStatus const&)>
 802afbc:	e7cb      	b.n	802af56 <CAMERA_CALIBRATION_mainStateMachine(unsigned long)+0x3e>
 802afbe:	7893      	ldrb	r3, [r2, #2]
 802afc0:	a804      	add	r0, sp, #16
 802afc2:	462a      	mov	r2, r5
 802afc4:	2103      	movs	r1, #3
 802afc6:	f7ff fea1 	bl	802ad0c <CAMERA_CALIBRATION_calibrateDirection(CAMERA_CALIBRATION_direction_t, unsigned long, bool)>
 802afca:	a904      	add	r1, sp, #16
 802afcc:	4620      	mov	r0, r4
 802afce:	f000 fe93 	bl	802bcf8 <TaskStatus::operator=(TaskStatus const&)>
 802afd2:	e7c0      	b.n	802af56 <CAMERA_CALIBRATION_mainStateMachine(unsigned long)+0x3e>
 802afd4:	7893      	ldrb	r3, [r2, #2]
 802afd6:	a804      	add	r0, sp, #16
 802afd8:	462a      	mov	r2, r5
 802afda:	2102      	movs	r1, #2
 802afdc:	f7ff fe96 	bl	802ad0c <CAMERA_CALIBRATION_calibrateDirection(CAMERA_CALIBRATION_direction_t, unsigned long, bool)>
 802afe0:	a904      	add	r1, sp, #16
 802afe2:	4620      	mov	r0, r4
 802afe4:	f000 fe88 	bl	802bcf8 <TaskStatus::operator=(TaskStatus const&)>
 802afe8:	e7b5      	b.n	802af56 <CAMERA_CALIBRATION_mainStateMachine(unsigned long)+0x3e>
 802afea:	4b84      	ldr	r3, [pc, #528]	; (802b1fc <CAMERA_CALIBRATION_mainStateMachine(unsigned long)+0x2e4>)
 802afec:	7c1a      	ldrb	r2, [r3, #16]
 802afee:	f893 0024 	ldrb.w	r0, [r3, #36]	; 0x24
 802aff2:	f893 1038 	ldrb.w	r1, [r3, #56]	; 0x38
 802aff6:	4002      	ands	r2, r0
 802aff8:	420a      	tst	r2, r1
 802affa:	f000 80af 	beq.w	802b15c <CAMERA_CALIBRATION_mainStateMachine(unsigned long)+0x244>
 802affe:	f893 304c 	ldrb.w	r3, [r3, #76]	; 0x4c
 802b002:	2b00      	cmp	r3, #0
 802b004:	f000 80aa 	beq.w	802b15c <CAMERA_CALIBRATION_mainStateMachine(unsigned long)+0x244>
 802b008:	4d7d      	ldr	r5, [pc, #500]	; (802b200 <CAMERA_CALIBRATION_mainStateMachine(unsigned long)+0x2e8>)
 802b00a:	487e      	ldr	r0, [pc, #504]	; (802b204 <CAMERA_CALIBRATION_mainStateMachine(unsigned long)+0x2ec>)
 802b00c:	68ae      	ldr	r6, [r5, #8]
 802b00e:	69e9      	ldr	r1, [r5, #28]
 802b010:	682a      	ldr	r2, [r5, #0]
 802b012:	696b      	ldr	r3, [r5, #20]
 802b014:	4432      	add	r2, r6
 802b016:	440b      	add	r3, r1
 802b018:	ee07 2a10 	vmov	s14, r2
 802b01c:	ee07 3a90 	vmov	s15, r3
 802b020:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 802b024:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 802b028:	eef6 6a00 	vmov.f32	s13, #96	; 0x3f000000  0.5
 802b02c:	ee27 7a26 	vmul.f32	s14, s14, s13
 802b030:	ee67 7aa6 	vmul.f32	s15, s15, s13
 802b034:	eebd 7ac7 	vcvt.s32.f32	s14, s14
 802b038:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 802b03c:	212f      	movs	r1, #47	; 0x2f
 802b03e:	ee17 6a10 	vmov	r6, s14
 802b042:	ee17 7a90 	vmov	r7, s15
 802b046:	f014 f98a 	bl	803f35e <strrchr>
 802b04a:	2800      	cmp	r0, #0
 802b04c:	f000 80b9 	beq.w	802b1c2 <CAMERA_CALIBRATION_mainStateMachine(unsigned long)+0x2aa>
 802b050:	212f      	movs	r1, #47	; 0x2f
 802b052:	486c      	ldr	r0, [pc, #432]	; (802b204 <CAMERA_CALIBRATION_mainStateMachine(unsigned long)+0x2ec>)
 802b054:	f014 f983 	bl	803f35e <strrchr>
 802b058:	1c41      	adds	r1, r0, #1
 802b05a:	2002      	movs	r0, #2
 802b05c:	e9cd 6700 	strd	r6, r7, [sp]
 802b060:	4b69      	ldr	r3, [pc, #420]	; (802b208 <CAMERA_CALIBRATION_mainStateMachine(unsigned long)+0x2f0>)
 802b062:	f240 2225 	movw	r2, #549	; 0x225
 802b066:	f7f7 fb97 	bl	8022798 <DEBUG_logMsg>
 802b06a:	4866      	ldr	r0, [pc, #408]	; (802b204 <CAMERA_CALIBRATION_mainStateMachine(unsigned long)+0x2ec>)
 802b06c:	212f      	movs	r1, #47	; 0x2f
 802b06e:	f014 f976 	bl	803f35e <strrchr>
 802b072:	2800      	cmp	r0, #0
 802b074:	f000 808f 	beq.w	802b196 <CAMERA_CALIBRATION_mainStateMachine(unsigned long)+0x27e>
 802b078:	212f      	movs	r1, #47	; 0x2f
 802b07a:	4862      	ldr	r0, [pc, #392]	; (802b204 <CAMERA_CALIBRATION_mainStateMachine(unsigned long)+0x2ec>)
 802b07c:	f014 f96f 	bl	803f35e <strrchr>
 802b080:	1c41      	adds	r1, r0, #1
 802b082:	e9d5 3200 	ldrd	r3, r2, [r5]
 802b086:	2002      	movs	r0, #2
 802b088:	e9cd 3200 	strd	r3, r2, [sp]
 802b08c:	4b5f      	ldr	r3, [pc, #380]	; (802b20c <CAMERA_CALIBRATION_mainStateMachine(unsigned long)+0x2f4>)
 802b08e:	f240 2226 	movw	r2, #550	; 0x226
 802b092:	f7f7 fb81 	bl	8022798 <DEBUG_logMsg>
 802b096:	485b      	ldr	r0, [pc, #364]	; (802b204 <CAMERA_CALIBRATION_mainStateMachine(unsigned long)+0x2ec>)
 802b098:	212f      	movs	r1, #47	; 0x2f
 802b09a:	f014 f960 	bl	803f35e <strrchr>
 802b09e:	2800      	cmp	r0, #0
 802b0a0:	f000 8084 	beq.w	802b1ac <CAMERA_CALIBRATION_mainStateMachine(unsigned long)+0x294>
 802b0a4:	212f      	movs	r1, #47	; 0x2f
 802b0a6:	4857      	ldr	r0, [pc, #348]	; (802b204 <CAMERA_CALIBRATION_mainStateMachine(unsigned long)+0x2ec>)
 802b0a8:	f014 f959 	bl	803f35e <strrchr>
 802b0ac:	1c41      	adds	r1, r0, #1
 802b0ae:	e9d5 3202 	ldrd	r3, r2, [r5, #8]
 802b0b2:	2002      	movs	r0, #2
 802b0b4:	e9cd 3200 	strd	r3, r2, [sp]
 802b0b8:	4b55      	ldr	r3, [pc, #340]	; (802b210 <CAMERA_CALIBRATION_mainStateMachine(unsigned long)+0x2f8>)
 802b0ba:	f240 2227 	movw	r2, #551	; 0x227
 802b0be:	f7f7 fb6b 	bl	8022798 <DEBUG_logMsg>
 802b0c2:	4850      	ldr	r0, [pc, #320]	; (802b204 <CAMERA_CALIBRATION_mainStateMachine(unsigned long)+0x2ec>)
 802b0c4:	212f      	movs	r1, #47	; 0x2f
 802b0c6:	f014 f94a 	bl	803f35e <strrchr>
 802b0ca:	2800      	cmp	r0, #0
 802b0cc:	d058      	beq.n	802b180 <CAMERA_CALIBRATION_mainStateMachine(unsigned long)+0x268>
 802b0ce:	212f      	movs	r1, #47	; 0x2f
 802b0d0:	484c      	ldr	r0, [pc, #304]	; (802b204 <CAMERA_CALIBRATION_mainStateMachine(unsigned long)+0x2ec>)
 802b0d2:	f014 f944 	bl	803f35e <strrchr>
 802b0d6:	1c41      	adds	r1, r0, #1
 802b0d8:	e9d5 3204 	ldrd	r3, r2, [r5, #16]
 802b0dc:	2002      	movs	r0, #2
 802b0de:	e9cd 3200 	strd	r3, r2, [sp]
 802b0e2:	4b4c      	ldr	r3, [pc, #304]	; (802b214 <CAMERA_CALIBRATION_mainStateMachine(unsigned long)+0x2fc>)
 802b0e4:	f44f 720a 	mov.w	r2, #552	; 0x228
 802b0e8:	f7f7 fb56 	bl	8022798 <DEBUG_logMsg>
 802b0ec:	4845      	ldr	r0, [pc, #276]	; (802b204 <CAMERA_CALIBRATION_mainStateMachine(unsigned long)+0x2ec>)
 802b0ee:	212f      	movs	r1, #47	; 0x2f
 802b0f0:	f014 f935 	bl	803f35e <strrchr>
 802b0f4:	2800      	cmp	r0, #0
 802b0f6:	d038      	beq.n	802b16a <CAMERA_CALIBRATION_mainStateMachine(unsigned long)+0x252>
 802b0f8:	212f      	movs	r1, #47	; 0x2f
 802b0fa:	4842      	ldr	r0, [pc, #264]	; (802b204 <CAMERA_CALIBRATION_mainStateMachine(unsigned long)+0x2ec>)
 802b0fc:	f014 f92f 	bl	803f35e <strrchr>
 802b100:	1c41      	adds	r1, r0, #1
 802b102:	e9d5 3206 	ldrd	r3, r2, [r5, #24]
 802b106:	2002      	movs	r0, #2
 802b108:	e9cd 3200 	strd	r3, r2, [sp]
 802b10c:	4b42      	ldr	r3, [pc, #264]	; (802b218 <CAMERA_CALIBRATION_mainStateMachine(unsigned long)+0x300>)
 802b10e:	f240 2229 	movw	r2, #553	; 0x229
 802b112:	f7f7 fb41 	bl	8022798 <DEBUG_logMsg>
 802b116:	ad04      	add	r5, sp, #16
 802b118:	4639      	mov	r1, r7
 802b11a:	4630      	mov	r0, r6
 802b11c:	f003 ffbe 	bl	802f09c <CAMERA_setPixelCenterOffsets(int, int)>
 802b120:	4628      	mov	r0, r5
 802b122:	2101      	movs	r1, #1
 802b124:	f000 fdd2 	bl	802bccc <TaskStatus::TaskStatus(TaskStatus::Result_e)>
 802b128:	4629      	mov	r1, r5
 802b12a:	4620      	mov	r0, r4
 802b12c:	f000 fde4 	bl	802bcf8 <TaskStatus::operator=(TaskStatus const&)>
 802b130:	e711      	b.n	802af56 <CAMERA_CALIBRATION_mainStateMachine(unsigned long)+0x3e>
 802b132:	2300      	movs	r3, #0
 802b134:	7891      	ldrb	r1, [r2, #2]
 802b136:	ed9f 0a39 	vldr	s0, [pc, #228]	; 802b21c <CAMERA_CALIBRATION_mainStateMachine(unsigned long)+0x304>
 802b13a:	9300      	str	r3, [sp, #0]
 802b13c:	a804      	add	r0, sp, #16
 802b13e:	220f      	movs	r2, #15
 802b140:	f7fc fb62 	bl	8027808 <ACTIONS_move(bool, ROBOT_axisIndex_t, float, AXIS_moveType_t, AXIS_mode_t)>
 802b144:	a904      	add	r1, sp, #16
 802b146:	4620      	mov	r0, r4
 802b148:	f000 fdd6 	bl	802bcf8 <TaskStatus::operator=(TaskStatus const&)>
 802b14c:	e703      	b.n	802af56 <CAMERA_CALIBRATION_mainStateMachine(unsigned long)+0x3e>
 802b14e:	4b2a      	ldr	r3, [pc, #168]	; (802b1f8 <CAMERA_CALIBRATION_mainStateMachine(unsigned long)+0x2e0>)
 802b150:	7891      	ldrb	r1, [r2, #2]
 802b152:	881b      	ldrh	r3, [r3, #0]
 802b154:	f8ad 300c 	strh.w	r3, [sp, #12]
 802b158:	2300      	movs	r3, #0
 802b15a:	e705      	b.n	802af68 <CAMERA_CALIBRATION_mainStateMachine(unsigned long)+0x50>
 802b15c:	ad04      	add	r5, sp, #16
 802b15e:	4628      	mov	r0, r5
 802b160:	2208      	movs	r2, #8
 802b162:	2101      	movs	r1, #1
 802b164:	f000 fdb8 	bl	802bcd8 <TaskStatus::TaskStatus(TaskStatus::Result_e, unsigned int)>
 802b168:	e7de      	b.n	802b128 <CAMERA_CALIBRATION_mainStateMachine(unsigned long)+0x210>
 802b16a:	4826      	ldr	r0, [pc, #152]	; (802b204 <CAMERA_CALIBRATION_mainStateMachine(unsigned long)+0x2ec>)
 802b16c:	215c      	movs	r1, #92	; 0x5c
 802b16e:	f014 f8f6 	bl	803f35e <strrchr>
 802b172:	b388      	cbz	r0, 802b1d8 <CAMERA_CALIBRATION_mainStateMachine(unsigned long)+0x2c0>
 802b174:	215c      	movs	r1, #92	; 0x5c
 802b176:	4823      	ldr	r0, [pc, #140]	; (802b204 <CAMERA_CALIBRATION_mainStateMachine(unsigned long)+0x2ec>)
 802b178:	f014 f8f1 	bl	803f35e <strrchr>
 802b17c:	1c41      	adds	r1, r0, #1
 802b17e:	e7c0      	b.n	802b102 <CAMERA_CALIBRATION_mainStateMachine(unsigned long)+0x1ea>
 802b180:	4820      	ldr	r0, [pc, #128]	; (802b204 <CAMERA_CALIBRATION_mainStateMachine(unsigned long)+0x2ec>)
 802b182:	215c      	movs	r1, #92	; 0x5c
 802b184:	f014 f8eb 	bl	803f35e <strrchr>
 802b188:	b340      	cbz	r0, 802b1dc <CAMERA_CALIBRATION_mainStateMachine(unsigned long)+0x2c4>
 802b18a:	215c      	movs	r1, #92	; 0x5c
 802b18c:	481d      	ldr	r0, [pc, #116]	; (802b204 <CAMERA_CALIBRATION_mainStateMachine(unsigned long)+0x2ec>)
 802b18e:	f014 f8e6 	bl	803f35e <strrchr>
 802b192:	1c41      	adds	r1, r0, #1
 802b194:	e7a0      	b.n	802b0d8 <CAMERA_CALIBRATION_mainStateMachine(unsigned long)+0x1c0>
 802b196:	481b      	ldr	r0, [pc, #108]	; (802b204 <CAMERA_CALIBRATION_mainStateMachine(unsigned long)+0x2ec>)
 802b198:	215c      	movs	r1, #92	; 0x5c
 802b19a:	f014 f8e0 	bl	803f35e <strrchr>
 802b19e:	b308      	cbz	r0, 802b1e4 <CAMERA_CALIBRATION_mainStateMachine(unsigned long)+0x2cc>
 802b1a0:	215c      	movs	r1, #92	; 0x5c
 802b1a2:	4818      	ldr	r0, [pc, #96]	; (802b204 <CAMERA_CALIBRATION_mainStateMachine(unsigned long)+0x2ec>)
 802b1a4:	f014 f8db 	bl	803f35e <strrchr>
 802b1a8:	1c41      	adds	r1, r0, #1
 802b1aa:	e76a      	b.n	802b082 <CAMERA_CALIBRATION_mainStateMachine(unsigned long)+0x16a>
 802b1ac:	4815      	ldr	r0, [pc, #84]	; (802b204 <CAMERA_CALIBRATION_mainStateMachine(unsigned long)+0x2ec>)
 802b1ae:	215c      	movs	r1, #92	; 0x5c
 802b1b0:	f014 f8d5 	bl	803f35e <strrchr>
 802b1b4:	b1a0      	cbz	r0, 802b1e0 <CAMERA_CALIBRATION_mainStateMachine(unsigned long)+0x2c8>
 802b1b6:	215c      	movs	r1, #92	; 0x5c
 802b1b8:	4812      	ldr	r0, [pc, #72]	; (802b204 <CAMERA_CALIBRATION_mainStateMachine(unsigned long)+0x2ec>)
 802b1ba:	f014 f8d0 	bl	803f35e <strrchr>
 802b1be:	1c41      	adds	r1, r0, #1
 802b1c0:	e775      	b.n	802b0ae <CAMERA_CALIBRATION_mainStateMachine(unsigned long)+0x196>
 802b1c2:	4810      	ldr	r0, [pc, #64]	; (802b204 <CAMERA_CALIBRATION_mainStateMachine(unsigned long)+0x2ec>)
 802b1c4:	215c      	movs	r1, #92	; 0x5c
 802b1c6:	f014 f8ca 	bl	803f35e <strrchr>
 802b1ca:	b168      	cbz	r0, 802b1e8 <CAMERA_CALIBRATION_mainStateMachine(unsigned long)+0x2d0>
 802b1cc:	215c      	movs	r1, #92	; 0x5c
 802b1ce:	480d      	ldr	r0, [pc, #52]	; (802b204 <CAMERA_CALIBRATION_mainStateMachine(unsigned long)+0x2ec>)
 802b1d0:	f014 f8c5 	bl	803f35e <strrchr>
 802b1d4:	1c41      	adds	r1, r0, #1
 802b1d6:	e740      	b.n	802b05a <CAMERA_CALIBRATION_mainStateMachine(unsigned long)+0x142>
 802b1d8:	490a      	ldr	r1, [pc, #40]	; (802b204 <CAMERA_CALIBRATION_mainStateMachine(unsigned long)+0x2ec>)
 802b1da:	e792      	b.n	802b102 <CAMERA_CALIBRATION_mainStateMachine(unsigned long)+0x1ea>
 802b1dc:	4909      	ldr	r1, [pc, #36]	; (802b204 <CAMERA_CALIBRATION_mainStateMachine(unsigned long)+0x2ec>)
 802b1de:	e77b      	b.n	802b0d8 <CAMERA_CALIBRATION_mainStateMachine(unsigned long)+0x1c0>
 802b1e0:	4908      	ldr	r1, [pc, #32]	; (802b204 <CAMERA_CALIBRATION_mainStateMachine(unsigned long)+0x2ec>)
 802b1e2:	e764      	b.n	802b0ae <CAMERA_CALIBRATION_mainStateMachine(unsigned long)+0x196>
 802b1e4:	4907      	ldr	r1, [pc, #28]	; (802b204 <CAMERA_CALIBRATION_mainStateMachine(unsigned long)+0x2ec>)
 802b1e6:	e74c      	b.n	802b082 <CAMERA_CALIBRATION_mainStateMachine(unsigned long)+0x16a>
 802b1e8:	4906      	ldr	r1, [pc, #24]	; (802b204 <CAMERA_CALIBRATION_mainStateMachine(unsigned long)+0x2ec>)
 802b1ea:	e736      	b.n	802b05a <CAMERA_CALIBRATION_mainStateMachine(unsigned long)+0x142>
 802b1ec:	2302      	movs	r3, #2
 802b1ee:	7023      	strb	r3, [r4, #0]
 802b1f0:	e6b1      	b.n	802af56 <CAMERA_CALIBRATION_mainStateMachine(unsigned long)+0x3e>
 802b1f2:	bf00      	nop
 802b1f4:	20004f5c 	.word	0x20004f5c
 802b1f8:	080463a0 	.word	0x080463a0
 802b1fc:	20001a14 	.word	0x20001a14
 802b200:	20004f84 	.word	0x20004f84
 802b204:	08046154 	.word	0x08046154
 802b208:	080461a4 	.word	0x080461a4
 802b20c:	080461d4 	.word	0x080461d4
 802b210:	080461e8 	.word	0x080461e8
 802b214:	080461fc 	.word	0x080461fc
 802b218:	08046210 	.word	0x08046210
 802b21c:	42a00000 	.word	0x42a00000

0802b220 <CAMERA_CALIBRATION_errorStateMachine(unsigned long)>:
 802b220:	b530      	push	{r4, r5, lr}
 802b222:	4d16      	ldr	r5, [pc, #88]	; (802b27c <CAMERA_CALIBRATION_errorStateMachine(unsigned long)+0x5c>)
 802b224:	2100      	movs	r1, #0
 802b226:	b083      	sub	sp, #12
 802b228:	4604      	mov	r4, r0
 802b22a:	f000 fd4f 	bl	802bccc <TaskStatus::TaskStatus(TaskStatus::Result_e)>
 802b22e:	7969      	ldrb	r1, [r5, #5]
 802b230:	b131      	cbz	r1, 802b240 <CAMERA_CALIBRATION_errorStateMachine(unsigned long)+0x20>
 802b232:	2901      	cmp	r1, #1
 802b234:	d017      	beq.n	802b266 <CAMERA_CALIBRATION_errorStateMachine(unsigned long)+0x46>
 802b236:	2302      	movs	r3, #2
 802b238:	4620      	mov	r0, r4
 802b23a:	7023      	strb	r3, [r4, #0]
 802b23c:	b003      	add	sp, #12
 802b23e:	bd30      	pop	{r4, r5, pc}
 802b240:	4668      	mov	r0, sp
 802b242:	f000 fd43 	bl	802bccc <TaskStatus::TaskStatus(TaskStatus::Result_e)>
 802b246:	782b      	ldrb	r3, [r5, #0]
 802b248:	1eda      	subs	r2, r3, #3
 802b24a:	2a03      	cmp	r2, #3
 802b24c:	d812      	bhi.n	802b274 <CAMERA_CALIBRATION_errorStateMachine(unsigned long)+0x54>
 802b24e:	3b01      	subs	r3, #1
 802b250:	2201      	movs	r2, #1
 802b252:	702b      	strb	r3, [r5, #0]
 802b254:	f88d 2000 	strb.w	r2, [sp]
 802b258:	4669      	mov	r1, sp
 802b25a:	4620      	mov	r0, r4
 802b25c:	f000 fd4c 	bl	802bcf8 <TaskStatus::operator=(TaskStatus const&)>
 802b260:	4620      	mov	r0, r4
 802b262:	b003      	add	sp, #12
 802b264:	bd30      	pop	{r4, r5, pc}
 802b266:	4628      	mov	r0, r5
 802b268:	2100      	movs	r1, #0
 802b26a:	f7fd f837 	bl	80282dc <SM_RUNNER_setError>
 802b26e:	4620      	mov	r0, r4
 802b270:	b003      	add	sp, #12
 802b272:	bd30      	pop	{r4, r5, pc}
 802b274:	2302      	movs	r3, #2
 802b276:	f88d 3000 	strb.w	r3, [sp]
 802b27a:	e7ed      	b.n	802b258 <CAMERA_CALIBRATION_errorStateMachine(unsigned long)+0x38>
 802b27c:	20004f5c 	.word	0x20004f5c

0802b280 <CAMERA_CALIBRATION_runTask(void*, unsigned long, bool)>:
 802b280:	b510      	push	{r4, lr}
 802b282:	b082      	sub	sp, #8
 802b284:	4904      	ldr	r1, [pc, #16]	; (802b298 <CAMERA_CALIBRATION_runTask(void*, unsigned long, bool)+0x18>)
 802b286:	9300      	str	r3, [sp, #0]
 802b288:	4613      	mov	r3, r2
 802b28a:	4a04      	ldr	r2, [pc, #16]	; (802b29c <CAMERA_CALIBRATION_runTask(void*, unsigned long, bool)+0x1c>)
 802b28c:	4604      	mov	r4, r0
 802b28e:	f7fc fe45 	bl	8027f1c <SM_RUNNER_runStateMachine>
 802b292:	4620      	mov	r0, r4
 802b294:	b002      	add	sp, #8
 802b296:	bd10      	pop	{r4, pc}
 802b298:	20001924 	.word	0x20001924
 802b29c:	20004f5c 	.word	0x20004f5c

0802b2a0 <_GLOBAL__sub_I__Z26CAMERA_CALIBRATION_runTaskPvmb>:
 802b2a0:	4801      	ldr	r0, [pc, #4]	; (802b2a8 <_GLOBAL__sub_I__Z26CAMERA_CALIBRATION_runTaskPvmb+0x8>)
 802b2a2:	f005 bbcb 	b.w	8030a3c <AxisTelemetryMonitor::AxisTelemetryMonitor()>
 802b2a6:	bf00      	nop
 802b2a8:	20004fa4 	.word	0x20004fa4

0802b2ac <TORQUE_SHARING_mainStateMachine(unsigned long)>:
 802b2ac:	b530      	push	{r4, r5, lr}
 802b2ae:	2100      	movs	r1, #0
 802b2b0:	b085      	sub	sp, #20
 802b2b2:	4604      	mov	r4, r0
 802b2b4:	f000 fd0a 	bl	802bccc <TaskStatus::TaskStatus(TaskStatus::Result_e)>
 802b2b8:	4a27      	ldr	r2, [pc, #156]	; (802b358 <TORQUE_SHARING_mainStateMachine(unsigned long)+0xac>)
 802b2ba:	7813      	ldrb	r3, [r2, #0]
 802b2bc:	2b03      	cmp	r3, #3
 802b2be:	d847      	bhi.n	802b350 <TORQUE_SHARING_mainStateMachine(unsigned long)+0xa4>
 802b2c0:	e8df f003 	tbb	[pc, r3]
 802b2c4:	020a1a36 	.word	0x020a1a36
 802b2c8:	2101      	movs	r1, #1
 802b2ca:	4823      	ldr	r0, [pc, #140]	; (802b358 <TORQUE_SHARING_mainStateMachine(unsigned long)+0xac>)
 802b2cc:	7021      	strb	r1, [r4, #0]
 802b2ce:	f7fd f817 	bl	8028300 <SM_RUNNER_setComplete>
 802b2d2:	4620      	mov	r0, r4
 802b2d4:	b005      	add	sp, #20
 802b2d6:	bd30      	pop	{r4, r5, pc}
 802b2d8:	4b20      	ldr	r3, [pc, #128]	; (802b35c <TORQUE_SHARING_mainStateMachine(unsigned long)+0xb0>)
 802b2da:	7891      	ldrb	r1, [r2, #2]
 802b2dc:	781a      	ldrb	r2, [r3, #0]
 802b2de:	2328      	movs	r3, #40	; 0x28
 802b2e0:	a802      	add	r0, sp, #8
 802b2e2:	9300      	str	r3, [sp, #0]
 802b2e4:	2300      	movs	r3, #0
 802b2e6:	f7fc fd09 	bl	8027cfc <ACTIONS_enableTelemetry(bool, ROBOT_axisIndex_t, bool, unsigned int)>
 802b2ea:	a902      	add	r1, sp, #8
 802b2ec:	4620      	mov	r0, r4
 802b2ee:	f000 fd03 	bl	802bcf8 <TaskStatus::operator=(TaskStatus const&)>
 802b2f2:	4620      	mov	r0, r4
 802b2f4:	b005      	add	sp, #20
 802b2f6:	bd30      	pop	{r4, r5, pc}
 802b2f8:	4819      	ldr	r0, [pc, #100]	; (802b360 <TORQUE_SHARING_mainStateMachine(unsigned long)+0xb4>)
 802b2fa:	f005 fc09 	bl	8030b10 <TorqueMonitor::isFull()>
 802b2fe:	4605      	mov	r5, r0
 802b300:	4818      	ldr	r0, [pc, #96]	; (802b364 <TORQUE_SHARING_mainStateMachine(unsigned long)+0xb8>)
 802b302:	f005 fc05 	bl	8030b10 <TorqueMonitor::isFull()>
 802b306:	4005      	ands	r5, r0
 802b308:	4817      	ldr	r0, [pc, #92]	; (802b368 <TORQUE_SHARING_mainStateMachine(unsigned long)+0xbc>)
 802b30a:	f005 fc01 	bl	8030b10 <TorqueMonitor::isFull()>
 802b30e:	b2ed      	uxtb	r5, r5
 802b310:	4603      	mov	r3, r0
 802b312:	4816      	ldr	r0, [pc, #88]	; (802b36c <TORQUE_SHARING_mainStateMachine(unsigned long)+0xc0>)
 802b314:	401d      	ands	r5, r3
 802b316:	f005 fbfb 	bl	8030b10 <TorqueMonitor::isFull()>
 802b31a:	2800      	cmp	r0, #0
 802b31c:	d0d9      	beq.n	802b2d2 <TORQUE_SHARING_mainStateMachine(unsigned long)+0x26>
 802b31e:	2d00      	cmp	r5, #0
 802b320:	d0d7      	beq.n	802b2d2 <TORQUE_SHARING_mainStateMachine(unsigned long)+0x26>
 802b322:	4a13      	ldr	r2, [pc, #76]	; (802b370 <TORQUE_SHARING_mainStateMachine(unsigned long)+0xc4>)
 802b324:	2301      	movs	r3, #1
 802b326:	4620      	mov	r0, r4
 802b328:	7013      	strb	r3, [r2, #0]
 802b32a:	7023      	strb	r3, [r4, #0]
 802b32c:	b005      	add	sp, #20
 802b32e:	bd30      	pop	{r4, r5, pc}
 802b330:	4b0a      	ldr	r3, [pc, #40]	; (802b35c <TORQUE_SHARING_mainStateMachine(unsigned long)+0xb0>)
 802b332:	7891      	ldrb	r1, [r2, #2]
 802b334:	781a      	ldrb	r2, [r3, #0]
 802b336:	2328      	movs	r3, #40	; 0x28
 802b338:	a802      	add	r0, sp, #8
 802b33a:	9300      	str	r3, [sp, #0]
 802b33c:	2301      	movs	r3, #1
 802b33e:	f7fc fcdd 	bl	8027cfc <ACTIONS_enableTelemetry(bool, ROBOT_axisIndex_t, bool, unsigned int)>
 802b342:	a902      	add	r1, sp, #8
 802b344:	4620      	mov	r0, r4
 802b346:	f000 fcd7 	bl	802bcf8 <TaskStatus::operator=(TaskStatus const&)>
 802b34a:	4620      	mov	r0, r4
 802b34c:	b005      	add	sp, #20
 802b34e:	bd30      	pop	{r4, r5, pc}
 802b350:	2302      	movs	r3, #2
 802b352:	7023      	strb	r3, [r4, #0]
 802b354:	e7bd      	b.n	802b2d2 <TORQUE_SHARING_mainStateMachine(unsigned long)+0x26>
 802b356:	bf00      	nop
 802b358:	20005000 	.word	0x20005000
 802b35c:	20005054 	.word	0x20005054
 802b360:	20005014 	.word	0x20005014
 802b364:	20005024 	.word	0x20005024
 802b368:	20005034 	.word	0x20005034
 802b36c:	20005044 	.word	0x20005044
 802b370:	20004fe4 	.word	0x20004fe4

0802b374 <__tcf_0>:
 802b374:	b538      	push	{r3, r4, r5, lr}
 802b376:	4c05      	ldr	r4, [pc, #20]	; (802b38c <__tcf_0+0x18>)
 802b378:	f1a4 0540 	sub.w	r5, r4, #64	; 0x40
 802b37c:	3c10      	subs	r4, #16
 802b37e:	4620      	mov	r0, r4
 802b380:	f005 fbb2 	bl	8030ae8 <TorqueMonitor::~TorqueMonitor()>
 802b384:	42ac      	cmp	r4, r5
 802b386:	d1f9      	bne.n	802b37c <__tcf_0+0x8>
 802b388:	bd38      	pop	{r3, r4, r5, pc}
 802b38a:	bf00      	nop
 802b38c:	20005054 	.word	0x20005054

0802b390 <TORQUE_SHARING_tearDown()>:
 802b390:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802b394:	4c0f      	ldr	r4, [pc, #60]	; (802b3d4 <TORQUE_SHARING_tearDown()+0x44>)
 802b396:	4d10      	ldr	r5, [pc, #64]	; (802b3d8 <TORQUE_SHARING_tearDown()+0x48>)
 802b398:	f8df 8040 	ldr.w	r8, [pc, #64]	; 802b3dc <TORQUE_SHARING_tearDown()+0x4c>
 802b39c:	b082      	sub	sp, #8
 802b39e:	4606      	mov	r6, r0
 802b3a0:	1d27      	adds	r7, r4, #4
 802b3a2:	4641      	mov	r1, r8
 802b3a4:	f814 2b01 	ldrb.w	r2, [r4], #1
 802b3a8:	4668      	mov	r0, sp
 802b3aa:	f7f7 fb9d 	bl	8022ae8 <Robot::getAxis(ROBOT_axisIndex_t)>
 802b3ae:	f89d 3004 	ldrb.w	r3, [sp, #4]
 802b3b2:	4629      	mov	r1, r5
 802b3b4:	3510      	adds	r5, #16
 802b3b6:	b113      	cbz	r3, 802b3be <TORQUE_SHARING_tearDown()+0x2e>
 802b3b8:	9800      	ldr	r0, [sp, #0]
 802b3ba:	f7f7 fdfb 	bl	8022fb4 <AxisBase::removeDataSubscriber(SubscriberBase*)>
 802b3be:	42bc      	cmp	r4, r7
 802b3c0:	d1ef      	bne.n	802b3a2 <TORQUE_SHARING_tearDown()+0x12>
 802b3c2:	2101      	movs	r1, #1
 802b3c4:	4630      	mov	r0, r6
 802b3c6:	f000 fc81 	bl	802bccc <TaskStatus::TaskStatus(TaskStatus::Result_e)>
 802b3ca:	4630      	mov	r0, r6
 802b3cc:	b002      	add	sp, #8
 802b3ce:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802b3d2:	bf00      	nop
 802b3d4:	20004fe8 	.word	0x20004fe8
 802b3d8:	20005014 	.word	0x20005014
 802b3dc:	2000f630 	.word	0x2000f630

0802b3e0 <TORQUE_SHARING_setup()>:
 802b3e0:	4b21      	ldr	r3, [pc, #132]	; (802b468 <TORQUE_SHARING_setup()+0x88>)
 802b3e2:	4922      	ldr	r1, [pc, #136]	; (802b46c <TORQUE_SHARING_setup()+0x8c>)
 802b3e4:	781b      	ldrb	r3, [r3, #0]
 802b3e6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802b3ea:	2b0b      	cmp	r3, #11
 802b3ec:	bf0c      	ite	eq
 802b3ee:	2400      	moveq	r4, #0
 802b3f0:	2404      	movne	r4, #4
 802b3f2:	4d1f      	ldr	r5, [pc, #124]	; (802b470 <TORQUE_SHARING_setup()+0x90>)
 802b3f4:	4623      	mov	r3, r4
 802b3f6:	bf0c      	ite	eq
 802b3f8:	f04f 0c04 	moveq.w	ip, #4
 802b3fc:	f04f 0c00 	movne.w	ip, #0
 802b400:	b082      	sub	sp, #8
 802b402:	4606      	mov	r6, r0
 802b404:	3404      	adds	r4, #4
 802b406:	ebac 0c03 	sub.w	ip, ip, r3
 802b40a:	462a      	mov	r2, r5
 802b40c:	1c5f      	adds	r7, r3, #1
 802b40e:	eb03 000c 	add.w	r0, r3, ip
 802b412:	f802 3b01 	strb.w	r3, [r2], #1
 802b416:	b2fb      	uxtb	r3, r7
 802b418:	42a3      	cmp	r3, r4
 802b41a:	f801 0b01 	strb.w	r0, [r1], #1
 802b41e:	d1f5      	bne.n	802b40c <TORQUE_SHARING_setup()+0x2c>
 802b420:	4b14      	ldr	r3, [pc, #80]	; (802b474 <TORQUE_SHARING_setup()+0x94>)
 802b422:	4c15      	ldr	r4, [pc, #84]	; (802b478 <TORQUE_SHARING_setup()+0x98>)
 802b424:	f8df 8058 	ldr.w	r8, [pc, #88]	; 802b480 <TORQUE_SHARING_setup()+0xa0>
 802b428:	4f14      	ldr	r7, [pc, #80]	; (802b47c <TORQUE_SHARING_setup()+0x9c>)
 802b42a:	2200      	movs	r2, #0
 802b42c:	701a      	strb	r2, [r3, #0]
 802b42e:	4639      	mov	r1, r7
 802b430:	f815 2b01 	ldrb.w	r2, [r5], #1
 802b434:	4668      	mov	r0, sp
 802b436:	f7f7 fb57 	bl	8022ae8 <Robot::getAxis(ROBOT_axisIndex_t)>
 802b43a:	f89d 3004 	ldrb.w	r3, [sp, #4]
 802b43e:	4621      	mov	r1, r4
 802b440:	b113      	cbz	r3, 802b448 <TORQUE_SHARING_setup()+0x68>
 802b442:	9800      	ldr	r0, [sp, #0]
 802b444:	f7f7 fdb2 	bl	8022fac <AxisBase::addDataSubscriber(SubscriberBase*)>
 802b448:	4620      	mov	r0, r4
 802b44a:	f005 fb59 	bl	8030b00 <TorqueMonitor::reset()>
 802b44e:	45a8      	cmp	r8, r5
 802b450:	f104 0410 	add.w	r4, r4, #16
 802b454:	d1eb      	bne.n	802b42e <TORQUE_SHARING_setup()+0x4e>
 802b456:	2101      	movs	r1, #1
 802b458:	4630      	mov	r0, r6
 802b45a:	f000 fc37 	bl	802bccc <TaskStatus::TaskStatus(TaskStatus::Result_e)>
 802b45e:	4630      	mov	r0, r6
 802b460:	b002      	add	sp, #8
 802b462:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802b466:	bf00      	nop
 802b468:	20005054 	.word	0x20005054
 802b46c:	20004fec 	.word	0x20004fec
 802b470:	20004fe8 	.word	0x20004fe8
 802b474:	20004fe4 	.word	0x20004fe4
 802b478:	20005014 	.word	0x20005014
 802b47c:	2000f630 	.word	0x2000f630
 802b480:	20004fec 	.word	0x20004fec

0802b484 <TORQUE_SHARING_runTask(ROBOT_axisIndex_t, unsigned long, bool)>:
 802b484:	b530      	push	{r4, r5, lr}
 802b486:	4604      	mov	r4, r0
 802b488:	b085      	sub	sp, #20
 802b48a:	b12b      	cbz	r3, 802b498 <TORQUE_SHARING_runTask(ROBOT_axisIndex_t, unsigned long, bool)+0x14>
 802b48c:	f1a1 050a 	sub.w	r5, r1, #10
 802b490:	2d01      	cmp	r5, #1
 802b492:	d80f      	bhi.n	802b4b4 <TORQUE_SHARING_runTask(ROBOT_axisIndex_t, unsigned long, bool)+0x30>
 802b494:	480b      	ldr	r0, [pc, #44]	; (802b4c4 <TORQUE_SHARING_runTask(ROBOT_axisIndex_t, unsigned long, bool)+0x40>)
 802b496:	7001      	strb	r1, [r0, #0]
 802b498:	9300      	str	r3, [sp, #0]
 802b49a:	a802      	add	r0, sp, #8
 802b49c:	4613      	mov	r3, r2
 802b49e:	490a      	ldr	r1, [pc, #40]	; (802b4c8 <TORQUE_SHARING_runTask(ROBOT_axisIndex_t, unsigned long, bool)+0x44>)
 802b4a0:	4a0a      	ldr	r2, [pc, #40]	; (802b4cc <TORQUE_SHARING_runTask(ROBOT_axisIndex_t, unsigned long, bool)+0x48>)
 802b4a2:	f7fc fd3b 	bl	8027f1c <SM_RUNNER_runStateMachine>
 802b4a6:	a902      	add	r1, sp, #8
 802b4a8:	4620      	mov	r0, r4
 802b4aa:	f000 fc1d 	bl	802bce8 <TaskStatus::TaskStatus(TaskStatus const&)>
 802b4ae:	4620      	mov	r0, r4
 802b4b0:	b005      	add	sp, #20
 802b4b2:	bd30      	pop	{r4, r5, pc}
 802b4b4:	220a      	movs	r2, #10
 802b4b6:	2102      	movs	r1, #2
 802b4b8:	f000 fc0e 	bl	802bcd8 <TaskStatus::TaskStatus(TaskStatus::Result_e, unsigned int)>
 802b4bc:	4620      	mov	r0, r4
 802b4be:	b005      	add	sp, #20
 802b4c0:	bd30      	pop	{r4, r5, pc}
 802b4c2:	bf00      	nop
 802b4c4:	20005054 	.word	0x20005054
 802b4c8:	20001b34 	.word	0x20001b34
 802b4cc:	20005000 	.word	0x20005000

0802b4d0 <TORQUE_SHARING_getSecondaryAxisHomingTorque(ROBOT_axisIndex_t)>:
 802b4d0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802b4d4:	4b3c      	ldr	r3, [pc, #240]	; (802b5c8 <TORQUE_SHARING_getSecondaryAxisHomingTorque(ROBOT_axisIndex_t)+0xf8>)
 802b4d6:	ed2d 8b04 	vpush	{d8-d9}
 802b4da:	781b      	ldrb	r3, [r3, #0]
 802b4dc:	428b      	cmp	r3, r1
 802b4de:	b08b      	sub	sp, #44	; 0x2c
 802b4e0:	4604      	mov	r4, r0
 802b4e2:	d05c      	beq.n	802b59e <TORQUE_SHARING_getSecondaryAxisHomingTorque(ROBOT_axisIndex_t)+0xce>
 802b4e4:	4b39      	ldr	r3, [pc, #228]	; (802b5cc <TORQUE_SHARING_getSecondaryAxisHomingTorque(ROBOT_axisIndex_t)+0xfc>)
 802b4e6:	781b      	ldrb	r3, [r3, #0]
 802b4e8:	2b00      	cmp	r3, #0
 802b4ea:	d058      	beq.n	802b59e <TORQUE_SHARING_getSecondaryAxisHomingTorque(ROBOT_axisIndex_t)+0xce>
 802b4ec:	4f38      	ldr	r7, [pc, #224]	; (802b5d0 <TORQUE_SHARING_getSecondaryAxisHomingTorque(ROBOT_axisIndex_t)+0x100>)
 802b4ee:	f8df a0fc 	ldr.w	sl, [pc, #252]	; 802b5ec <TORQUE_SHARING_getSecondaryAxisHomingTorque(ROBOT_axisIndex_t)+0x11c>
 802b4f2:	f8df 90fc 	ldr.w	r9, [pc, #252]	; 802b5f0 <TORQUE_SHARING_getSecondaryAxisHomingTorque(ROBOT_axisIndex_t)+0x120>
 802b4f6:	ed9f 9a37 	vldr	s18, [pc, #220]	; 802b5d4 <TORQUE_SHARING_getSecondaryAxisHomingTorque(ROBOT_axisIndex_t)+0x104>
 802b4fa:	eddf 8a37 	vldr	s17, [pc, #220]	; 802b5d8 <TORQUE_SHARING_getSecondaryAxisHomingTorque(ROBOT_axisIndex_t)+0x108>
 802b4fe:	f8df 80f4 	ldr.w	r8, [pc, #244]	; 802b5f4 <TORQUE_SHARING_getSecondaryAxisHomingTorque(ROBOT_axisIndex_t)+0x124>
 802b502:	4d36      	ldr	r5, [pc, #216]	; (802b5dc <TORQUE_SHARING_getSecondaryAxisHomingTorque(ROBOT_axisIndex_t)+0x10c>)
 802b504:	9009      	str	r0, [sp, #36]	; 0x24
 802b506:	46bb      	mov	fp, r7
 802b508:	4658      	mov	r0, fp
 802b50a:	f005 fb03 	bl	8030b14 <TorqueMonitor::getAverage()>
 802b50e:	f013 fb13 	bl	803eb38 <fabs(float)>
 802b512:	ee80 8a09 	vdiv.f32	s16, s0, s18
 802b516:	212f      	movs	r1, #47	; 0x2f
 802b518:	4831      	ldr	r0, [pc, #196]	; (802b5e0 <TORQUE_SHARING_getSecondaryAxisHomingTorque(ROBOT_axisIndex_t)+0x110>)
 802b51a:	eef5 7a00 	vmov.f32	s15, #80	; 0x3e800000  0.250
 802b51e:	eee8 7a28 	vfma.f32	s15, s16, s17
 802b522:	ece5 7a01 	vstmia	r5!, {s15}
 802b526:	f013 ff1a 	bl	803f35e <strrchr>
 802b52a:	4603      	mov	r3, r0
 802b52c:	212f      	movs	r1, #47	; 0x2f
 802b52e:	482c      	ldr	r0, [pc, #176]	; (802b5e0 <TORQUE_SHARING_getSecondaryAxisHomingTorque(ROBOT_axisIndex_t)+0x110>)
 802b530:	2b00      	cmp	r3, #0
 802b532:	d03d      	beq.n	802b5b0 <TORQUE_SHARING_getSecondaryAxisHomingTorque(ROBOT_axisIndex_t)+0xe0>
 802b534:	f013 ff13 	bl	803f35e <strrchr>
 802b538:	1c44      	adds	r4, r0, #1
 802b53a:	f81a 1b01 	ldrb.w	r1, [sl], #1
 802b53e:	4640      	mov	r0, r8
 802b540:	f7f7 fb9a 	bl	8022c78 <Robot::getAxisName(ROBOT_axisIndex_t)>
 802b544:	f819 1b01 	ldrb.w	r1, [r9], #1
 802b548:	4606      	mov	r6, r0
 802b54a:	4640      	mov	r0, r8
 802b54c:	f7f7 fb94 	bl	8022c78 <Robot::getAxisName(ROBOT_axisIndex_t)>
 802b550:	4607      	mov	r7, r0
 802b552:	f855 0c04 	ldr.w	r0, [r5, #-4]
 802b556:	f012 ff80 	bl	803e45a <__aeabi_f2d>
 802b55a:	4602      	mov	r2, r0
 802b55c:	460b      	mov	r3, r1
 802b55e:	ee18 0a10 	vmov	r0, s16
 802b562:	e9cd 2306 	strd	r2, r3, [sp, #24]
 802b566:	9704      	str	r7, [sp, #16]
 802b568:	f012 ff77 	bl	803e45a <__aeabi_f2d>
 802b56c:	4b1d      	ldr	r3, [pc, #116]	; (802b5e4 <TORQUE_SHARING_getSecondaryAxisHomingTorque(ROBOT_axisIndex_t)+0x114>)
 802b56e:	9600      	str	r6, [sp, #0]
 802b570:	e9cd 0102 	strd	r0, r1, [sp, #8]
 802b574:	2276      	movs	r2, #118	; 0x76
 802b576:	4621      	mov	r1, r4
 802b578:	2002      	movs	r0, #2
 802b57a:	f7f7 f90d 	bl	8022798 <DEBUG_logMsg>
 802b57e:	4b1a      	ldr	r3, [pc, #104]	; (802b5e8 <TORQUE_SHARING_getSecondaryAxisHomingTorque(ROBOT_axisIndex_t)+0x118>)
 802b580:	429d      	cmp	r5, r3
 802b582:	f10b 0b10 	add.w	fp, fp, #16
 802b586:	d1bf      	bne.n	802b508 <TORQUE_SHARING_getSecondaryAxisHomingTorque(ROBOT_axisIndex_t)+0x38>
 802b588:	9c09      	ldr	r4, [sp, #36]	; 0x24
 802b58a:	4a14      	ldr	r2, [pc, #80]	; (802b5dc <TORQUE_SHARING_getSecondaryAxisHomingTorque(ROBOT_axisIndex_t)+0x10c>)
 802b58c:	6022      	str	r2, [r4, #0]
 802b58e:	2301      	movs	r3, #1
 802b590:	4620      	mov	r0, r4
 802b592:	7123      	strb	r3, [r4, #4]
 802b594:	b00b      	add	sp, #44	; 0x2c
 802b596:	ecbd 8b04 	vpop	{d8-d9}
 802b59a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802b59e:	2300      	movs	r3, #0
 802b5a0:	4620      	mov	r0, r4
 802b5a2:	6023      	str	r3, [r4, #0]
 802b5a4:	7123      	strb	r3, [r4, #4]
 802b5a6:	b00b      	add	sp, #44	; 0x2c
 802b5a8:	ecbd 8b04 	vpop	{d8-d9}
 802b5ac:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802b5b0:	480b      	ldr	r0, [pc, #44]	; (802b5e0 <TORQUE_SHARING_getSecondaryAxisHomingTorque(ROBOT_axisIndex_t)+0x110>)
 802b5b2:	215c      	movs	r1, #92	; 0x5c
 802b5b4:	4604      	mov	r4, r0
 802b5b6:	f013 fed2 	bl	803f35e <strrchr>
 802b5ba:	4602      	mov	r2, r0
 802b5bc:	215c      	movs	r1, #92	; 0x5c
 802b5be:	4620      	mov	r0, r4
 802b5c0:	2a00      	cmp	r2, #0
 802b5c2:	d1b7      	bne.n	802b534 <TORQUE_SHARING_getSecondaryAxisHomingTorque(ROBOT_axisIndex_t)+0x64>
 802b5c4:	e7b9      	b.n	802b53a <TORQUE_SHARING_getSecondaryAxisHomingTorque(ROBOT_axisIndex_t)+0x6a>
 802b5c6:	bf00      	nop
 802b5c8:	20005054 	.word	0x20005054
 802b5cc:	20004fe4 	.word	0x20004fe4
 802b5d0:	20005014 	.word	0x20005014
 802b5d4:	447a0000 	.word	0x447a0000
 802b5d8:	3eb33333 	.word	0x3eb33333
 802b5dc:	20004ff0 	.word	0x20004ff0
 802b5e0:	080463a4 	.word	0x080463a4
 802b5e4:	080463f4 	.word	0x080463f4
 802b5e8:	20005000 	.word	0x20005000
 802b5ec:	20004fe8 	.word	0x20004fe8
 802b5f0:	20004fec 	.word	0x20004fec
 802b5f4:	2000f630 	.word	0x2000f630
 802b5f8:	81010ac9 	.word	0x81010ac9
 802b5fc:	81afb0b0 	.word	0x81afb0b0
 802b600:	00000000 	.word	0x00000000

0802b604 <_GLOBAL__sub_I__Z22TORQUE_SHARING_runTask17ROBOT_axisIndex_tmb>:
 802b604:	b538      	push	{r3, r4, r5, lr}
 802b606:	4816      	ldr	r0, [pc, #88]	; (802b660 <_GLOBAL__sub_I__Z22TORQUE_SHARING_runTask17ROBOT_axisIndex_tmb+0x5c>)
 802b608:	2105      	movs	r1, #5
 802b60a:	f005 fa57 	bl	8030abc <TorqueMonitor::TorqueMonitor(unsigned short)>
 802b60e:	4815      	ldr	r0, [pc, #84]	; (802b664 <_GLOBAL__sub_I__Z22TORQUE_SHARING_runTask17ROBOT_axisIndex_tmb+0x60>)
 802b610:	2105      	movs	r1, #5
 802b612:	f005 fa53 	bl	8030abc <TorqueMonitor::TorqueMonitor(unsigned short)>
 802b616:	4814      	ldr	r0, [pc, #80]	; (802b668 <_GLOBAL__sub_I__Z22TORQUE_SHARING_runTask17ROBOT_axisIndex_tmb+0x64>)
 802b618:	2105      	movs	r1, #5
 802b61a:	f005 fa4f 	bl	8030abc <TorqueMonitor::TorqueMonitor(unsigned short)>
 802b61e:	4813      	ldr	r0, [pc, #76]	; (802b66c <_GLOBAL__sub_I__Z22TORQUE_SHARING_runTask17ROBOT_axisIndex_tmb+0x68>)
 802b620:	2105      	movs	r1, #5
 802b622:	f005 fa4b 	bl	8030abc <TorqueMonitor::TorqueMonitor(unsigned short)>
 802b626:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 802b62a:	4a11      	ldr	r2, [pc, #68]	; (802b670 <_GLOBAL__sub_I__Z22TORQUE_SHARING_runTask17ROBOT_axisIndex_tmb+0x6c>)
 802b62c:	4911      	ldr	r1, [pc, #68]	; (802b674 <_GLOBAL__sub_I__Z22TORQUE_SHARING_runTask17ROBOT_axisIndex_tmb+0x70>)
 802b62e:	2000      	movs	r0, #0
 802b630:	f013 bbe4 	b.w	803edfc <__aeabi_atexit>
 802b634:	2303      	movs	r3, #3
 802b636:	4d0a      	ldr	r5, [pc, #40]	; (802b660 <_GLOBAL__sub_I__Z22TORQUE_SHARING_runTask17ROBOT_axisIndex_tmb+0x5c>)
 802b638:	f1c3 0303 	rsb	r3, r3, #3
 802b63c:	eb05 1403 	add.w	r4, r5, r3, lsl #4
 802b640:	42ac      	cmp	r4, r5
 802b642:	d107      	bne.n	802b654 <_GLOBAL__sub_I__Z22TORQUE_SHARING_runTask17ROBOT_axisIndex_tmb+0x50>
 802b644:	f014 f892 	bl	803f76c <__cxa_end_cleanup>
 802b648:	2300      	movs	r3, #0
 802b64a:	e7f4      	b.n	802b636 <_GLOBAL__sub_I__Z22TORQUE_SHARING_runTask17ROBOT_axisIndex_tmb+0x32>
 802b64c:	2301      	movs	r3, #1
 802b64e:	e7f2      	b.n	802b636 <_GLOBAL__sub_I__Z22TORQUE_SHARING_runTask17ROBOT_axisIndex_tmb+0x32>
 802b650:	2302      	movs	r3, #2
 802b652:	e7f0      	b.n	802b636 <_GLOBAL__sub_I__Z22TORQUE_SHARING_runTask17ROBOT_axisIndex_tmb+0x32>
 802b654:	3c10      	subs	r4, #16
 802b656:	4620      	mov	r0, r4
 802b658:	f005 fa46 	bl	8030ae8 <TorqueMonitor::~TorqueMonitor()>
 802b65c:	e7f0      	b.n	802b640 <_GLOBAL__sub_I__Z22TORQUE_SHARING_runTask17ROBOT_axisIndex_tmb+0x3c>
 802b65e:	bf00      	nop
 802b660:	20005014 	.word	0x20005014
 802b664:	20005024 	.word	0x20005024
 802b668:	20005034 	.word	0x20005034
 802b66c:	20005044 	.word	0x20005044
 802b670:	200124cc 	.word	0x200124cc
 802b674:	0802b375 	.word	0x0802b375
 802b678:	00014879 	.word	0x00014879
 802b67c:	00b108a9 	.word	0x00b108a9
 802b680:	1401ffff 	.word	0x1401ffff
 802b684:	00300406 	.word	0x00300406
 802b688:	004c040e 	.word	0x004c040e
 802b68c:	00480416 	.word	0x00480416
 802b690:	0044041e 	.word	0x0044041e
 802b694:	00000440 	.word	0x00000440

0802b698 <SELF_LIFT_errorStateMachine(unsigned long)>:
 802b698:	b5f0      	push	{r4, r5, r6, r7, lr}
 802b69a:	4f23      	ldr	r7, [pc, #140]	; (802b728 <SELF_LIFT_errorStateMachine(unsigned long)+0x90>)
 802b69c:	b085      	sub	sp, #20
 802b69e:	460e      	mov	r6, r1
 802b6a0:	2100      	movs	r1, #0
 802b6a2:	4604      	mov	r4, r0
 802b6a4:	f000 fb12 	bl	802bccc <TaskStatus::TaskStatus(TaskStatus::Result_e)>
 802b6a8:	797d      	ldrb	r5, [r7, #5]
 802b6aa:	b135      	cbz	r5, 802b6ba <SELF_LIFT_errorStateMachine(unsigned long)+0x22>
 802b6ac:	2d01      	cmp	r5, #1
 802b6ae:	d01f      	beq.n	802b6f0 <SELF_LIFT_errorStateMachine(unsigned long)+0x58>
 802b6b0:	2302      	movs	r3, #2
 802b6b2:	4620      	mov	r0, r4
 802b6b4:	7023      	strb	r3, [r4, #0]
 802b6b6:	b005      	add	sp, #20
 802b6b8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 802b6ba:	4668      	mov	r0, sp
 802b6bc:	4629      	mov	r1, r5
 802b6be:	f000 fb05 	bl	802bccc <TaskStatus::TaskStatus(TaskStatus::Result_e)>
 802b6c2:	783b      	ldrb	r3, [r7, #0]
 802b6c4:	2b04      	cmp	r3, #4
 802b6c6:	d91f      	bls.n	802b708 <SELF_LIFT_errorStateMachine(unsigned long)+0x70>
 802b6c8:	3b05      	subs	r3, #5
 802b6ca:	2b04      	cmp	r3, #4
 802b6cc:	d827      	bhi.n	802b71e <SELF_LIFT_errorStateMachine(unsigned long)+0x86>
 802b6ce:	a802      	add	r0, sp, #8
 802b6d0:	2101      	movs	r1, #1
 802b6d2:	79fb      	ldrb	r3, [r7, #7]
 802b6d4:	4632      	mov	r2, r6
 802b6d6:	f000 faad 	bl	802bc34 <SELF_LIFT_homingErrorHandler(SELF_LIFT_errorHandler_t, unsigned long, bool)>
 802b6da:	a902      	add	r1, sp, #8
 802b6dc:	4668      	mov	r0, sp
 802b6de:	f000 fb0b 	bl	802bcf8 <TaskStatus::operator=(TaskStatus const&)>
 802b6e2:	4669      	mov	r1, sp
 802b6e4:	4620      	mov	r0, r4
 802b6e6:	f000 fb07 	bl	802bcf8 <TaskStatus::operator=(TaskStatus const&)>
 802b6ea:	4620      	mov	r0, r4
 802b6ec:	b005      	add	sp, #20
 802b6ee:	bdf0      	pop	{r4, r5, r6, r7, pc}
 802b6f0:	2102      	movs	r1, #2
 802b6f2:	480e      	ldr	r0, [pc, #56]	; (802b72c <SELF_LIFT_errorStateMachine(unsigned long)+0x94>)
 802b6f4:	f7f7 f9e2 	bl	8022abc <Robot::updateArticulation(Articulation::State_e)>
 802b6f8:	4638      	mov	r0, r7
 802b6fa:	f7fc fe0b 	bl	8028314 <SM_RUNNER_abort>
 802b6fe:	2302      	movs	r3, #2
 802b700:	4620      	mov	r0, r4
 802b702:	7023      	strb	r3, [r4, #0]
 802b704:	b005      	add	sp, #20
 802b706:	bdf0      	pop	{r4, r5, r6, r7, pc}
 802b708:	4629      	mov	r1, r5
 802b70a:	a802      	add	r0, sp, #8
 802b70c:	79fb      	ldrb	r3, [r7, #7]
 802b70e:	4632      	mov	r2, r6
 802b710:	f000 fa90 	bl	802bc34 <SELF_LIFT_homingErrorHandler(SELF_LIFT_errorHandler_t, unsigned long, bool)>
 802b714:	a902      	add	r1, sp, #8
 802b716:	4668      	mov	r0, sp
 802b718:	f000 faee 	bl	802bcf8 <TaskStatus::operator=(TaskStatus const&)>
 802b71c:	e7e1      	b.n	802b6e2 <SELF_LIFT_errorStateMachine(unsigned long)+0x4a>
 802b71e:	2301      	movs	r3, #1
 802b720:	f88d 3000 	strb.w	r3, [sp]
 802b724:	e7dd      	b.n	802b6e2 <SELF_LIFT_errorStateMachine(unsigned long)+0x4a>
 802b726:	bf00      	nop
 802b728:	20005084 	.word	0x20005084
 802b72c:	2000f630 	.word	0x2000f630

0802b730 <SELF_LIFT_mainStateMachine(unsigned long)>:
 802b730:	b5f0      	push	{r4, r5, r6, r7, lr}
 802b732:	4e90      	ldr	r6, [pc, #576]	; (802b974 <SELF_LIFT_mainStateMachine(unsigned long)+0x244>)
 802b734:	b099      	sub	sp, #100	; 0x64
 802b736:	460d      	mov	r5, r1
 802b738:	2100      	movs	r1, #0
 802b73a:	4604      	mov	r4, r0
 802b73c:	f000 fac6 	bl	802bccc <TaskStatus::TaskStatus(TaskStatus::Result_e)>
 802b740:	7833      	ldrb	r3, [r6, #0]
 802b742:	2b0b      	cmp	r3, #11
 802b744:	f200 8112 	bhi.w	802b96c <SELF_LIFT_mainStateMachine(unsigned long)+0x23c>
 802b748:	e8df f013 	tbh	[pc, r3, lsl #1]
 802b74c:	0029001c 	.word	0x0029001c
 802b750:	0058004a 	.word	0x0058004a
 802b754:	00770063 	.word	0x00770063
 802b758:	009b008c 	.word	0x009b008c
 802b75c:	00c700bc 	.word	0x00c700bc
 802b760:	000c00fe 	.word	0x000c00fe
 802b764:	4b84      	ldr	r3, [pc, #528]	; (802b978 <SELF_LIFT_mainStateMachine(unsigned long)+0x248>)
 802b766:	781b      	ldrb	r3, [r3, #0]
 802b768:	2b00      	cmp	r3, #0
 802b76a:	f000 80f8 	beq.w	802b95e <SELF_LIFT_mainStateMachine(unsigned long)+0x22e>
 802b76e:	4883      	ldr	r0, [pc, #524]	; (802b97c <SELF_LIFT_mainStateMachine(unsigned long)+0x24c>)
 802b770:	2180      	movs	r1, #128	; 0x80
 802b772:	f7f7 f9a3 	bl	8022abc <Robot::updateArticulation(Articulation::State_e)>
 802b776:	487f      	ldr	r0, [pc, #508]	; (802b974 <SELF_LIFT_mainStateMachine(unsigned long)+0x244>)
 802b778:	2101      	movs	r1, #1
 802b77a:	f7fc fdc1 	bl	8028300 <SM_RUNNER_setComplete>
 802b77e:	2301      	movs	r3, #1
 802b780:	7023      	strb	r3, [r4, #0]
 802b782:	e009      	b.n	802b798 <SELF_LIFT_mainStateMachine(unsigned long)+0x68>
 802b784:	78b1      	ldrb	r1, [r6, #2]
 802b786:	a814      	add	r0, sp, #80	; 0x50
 802b788:	2301      	movs	r3, #1
 802b78a:	220f      	movs	r2, #15
 802b78c:	f7fc f95e 	bl	8027a4c <ACTIONS_power(bool, ROBOT_axisIndex_t, AXIS_powerState_t)>
 802b790:	a914      	add	r1, sp, #80	; 0x50
 802b792:	4620      	mov	r0, r4
 802b794:	f000 fab0 	bl	802bcf8 <TaskStatus::operator=(TaskStatus const&)>
 802b798:	4620      	mov	r0, r4
 802b79a:	b019      	add	sp, #100	; 0x64
 802b79c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 802b79e:	4b78      	ldr	r3, [pc, #480]	; (802b980 <SELF_LIFT_mainStateMachine(unsigned long)+0x250>)
 802b7a0:	f833 2b04 	ldrh.w	r2, [r3], #4
 802b7a4:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 802b7a8:	e893 0003 	ldmia.w	r3, {r0, r1}
 802b7ac:	f44f 7296 	mov.w	r2, #300	; 0x12c
 802b7b0:	ab10      	add	r3, sp, #64	; 0x40
 802b7b2:	2500      	movs	r5, #0
 802b7b4:	e883 0003 	stmia.w	r3, {r0, r1}
 802b7b8:	78b1      	ldrb	r1, [r6, #2]
 802b7ba:	2002      	movs	r0, #2
 802b7bc:	e9cd 2502 	strd	r2, r5, [sp, #8]
 802b7c0:	aa0c      	add	r2, sp, #48	; 0x30
 802b7c2:	e9cd 2000 	strd	r2, r0, [sp]
 802b7c6:	a814      	add	r0, sp, #80	; 0x50
 802b7c8:	aa0a      	add	r2, sp, #40	; 0x28
 802b7ca:	f8ad 5030 	strh.w	r5, [sp, #48]	; 0x30
 802b7ce:	f7fc f905 	bl	80279dc <ACTIONS_moveList(bool, ROBOT_axisIndex_t const*, float*, AXIS_moveType_t*, unsigned char, unsigned int, AXIS_mode_t)>
 802b7d2:	a914      	add	r1, sp, #80	; 0x50
 802b7d4:	4620      	mov	r0, r4
 802b7d6:	f000 fa8f 	bl	802bcf8 <TaskStatus::operator=(TaskStatus const&)>
 802b7da:	4620      	mov	r0, r4
 802b7dc:	b019      	add	sp, #100	; 0x64
 802b7de:	bdf0      	pop	{r4, r5, r6, r7, pc}
 802b7e0:	2300      	movs	r3, #0
 802b7e2:	78b1      	ldrb	r1, [r6, #2]
 802b7e4:	ed9f 0a67 	vldr	s0, [pc, #412]	; 802b984 <SELF_LIFT_mainStateMachine(unsigned long)+0x254>
 802b7e8:	9300      	str	r3, [sp, #0]
 802b7ea:	a814      	add	r0, sp, #80	; 0x50
 802b7ec:	220f      	movs	r2, #15
 802b7ee:	f7fc f80b 	bl	8027808 <ACTIONS_move(bool, ROBOT_axisIndex_t, float, AXIS_moveType_t, AXIS_mode_t)>
 802b7f2:	a914      	add	r1, sp, #80	; 0x50
 802b7f4:	4620      	mov	r0, r4
 802b7f6:	f000 fa7f 	bl	802bcf8 <TaskStatus::operator=(TaskStatus const&)>
 802b7fa:	e7cd      	b.n	802b798 <SELF_LIFT_mainStateMachine(unsigned long)+0x68>
 802b7fc:	78b1      	ldrb	r1, [r6, #2]
 802b7fe:	a814      	add	r0, sp, #80	; 0x50
 802b800:	2301      	movs	r3, #1
 802b802:	220b      	movs	r2, #11
 802b804:	f7fc f922 	bl	8027a4c <ACTIONS_power(bool, ROBOT_axisIndex_t, AXIS_powerState_t)>
 802b808:	a914      	add	r1, sp, #80	; 0x50
 802b80a:	4620      	mov	r0, r4
 802b80c:	f000 fa74 	bl	802bcf8 <TaskStatus::operator=(TaskStatus const&)>
 802b810:	e7c2      	b.n	802b798 <SELF_LIFT_mainStateMachine(unsigned long)+0x68>
 802b812:	4b5d      	ldr	r3, [pc, #372]	; (802b988 <SELF_LIFT_mainStateMachine(unsigned long)+0x258>)
 802b814:	78b1      	ldrb	r1, [r6, #2]
 802b816:	ed93 0a00 	vldr	s0, [r3]
 802b81a:	eddf 1a5c 	vldr	s3, [pc, #368]	; 802b98c <SELF_LIFT_mainStateMachine(unsigned long)+0x25c>
 802b81e:	ed9f 1a5c 	vldr	s2, [pc, #368]	; 802b990 <SELF_LIFT_mainStateMachine(unsigned long)+0x260>
 802b822:	a814      	add	r0, sp, #80	; 0x50
 802b824:	eef1 0a0a 	vmov.f32	s1, #26	; 0x40d00000  6.5
 802b828:	2301      	movs	r3, #1
 802b82a:	220b      	movs	r2, #11
 802b82c:	f7fb ff44 	bl	80276b8 <ACTIONS_home(bool, ROBOT_axisIndex_t, AXIS_homeType_t, float, float, float, float)>
 802b830:	a914      	add	r1, sp, #80	; 0x50
 802b832:	4620      	mov	r0, r4
 802b834:	f000 fa60 	bl	802bcf8 <TaskStatus::operator=(TaskStatus const&)>
 802b838:	e7ae      	b.n	802b798 <SELF_LIFT_mainStateMachine(unsigned long)+0x68>
 802b83a:	4a56      	ldr	r2, [pc, #344]	; (802b994 <SELF_LIFT_mainStateMachine(unsigned long)+0x264>)
 802b83c:	4b50      	ldr	r3, [pc, #320]	; (802b980 <SELF_LIFT_mainStateMachine(unsigned long)+0x250>)
 802b83e:	6890      	ldr	r0, [r2, #8]
 802b840:	9011      	str	r0, [sp, #68]	; 0x44
 802b842:	2500      	movs	r5, #0
 802b844:	2001      	movs	r0, #1
 802b846:	78b1      	ldrb	r1, [r6, #2]
 802b848:	899b      	ldrh	r3, [r3, #12]
 802b84a:	4a53      	ldr	r2, [pc, #332]	; (802b998 <SELF_LIFT_mainStateMachine(unsigned long)+0x268>)
 802b84c:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 802b850:	e9cd 5002 	strd	r5, r0, [sp, #8]
 802b854:	2002      	movs	r0, #2
 802b856:	9001      	str	r0, [sp, #4]
 802b858:	a80c      	add	r0, sp, #48	; 0x30
 802b85a:	9000      	str	r0, [sp, #0]
 802b85c:	ab10      	add	r3, sp, #64	; 0x40
 802b85e:	a814      	add	r0, sp, #80	; 0x50
 802b860:	9210      	str	r2, [sp, #64]	; 0x40
 802b862:	e7b1      	b.n	802b7c8 <SELF_LIFT_mainStateMachine(unsigned long)+0x98>
 802b864:	2301      	movs	r3, #1
 802b866:	78b1      	ldrb	r1, [r6, #2]
 802b868:	ed9f 0a4c 	vldr	s0, [pc, #304]	; 802b99c <SELF_LIFT_mainStateMachine(unsigned long)+0x26c>
 802b86c:	9300      	str	r3, [sp, #0]
 802b86e:	a814      	add	r0, sp, #80	; 0x50
 802b870:	2300      	movs	r3, #0
 802b872:	220b      	movs	r2, #11
 802b874:	f7fb ffc8 	bl	8027808 <ACTIONS_move(bool, ROBOT_axisIndex_t, float, AXIS_moveType_t, AXIS_mode_t)>
 802b878:	a914      	add	r1, sp, #80	; 0x50
 802b87a:	4620      	mov	r0, r4
 802b87c:	f000 fa3c 	bl	802bcf8 <TaskStatus::operator=(TaskStatus const&)>
 802b880:	e78a      	b.n	802b798 <SELF_LIFT_mainStateMachine(unsigned long)+0x68>
 802b882:	462a      	mov	r2, r5
 802b884:	78b3      	ldrb	r3, [r6, #2]
 802b886:	a814      	add	r0, sp, #80	; 0x50
 802b888:	210b      	movs	r1, #11
 802b88a:	f7ff fdfb 	bl	802b484 <TORQUE_SHARING_runTask(ROBOT_axisIndex_t, unsigned long, bool)>
 802b88e:	a914      	add	r1, sp, #80	; 0x50
 802b890:	4620      	mov	r0, r4
 802b892:	f000 fa31 	bl	802bcf8 <TaskStatus::operator=(TaskStatus const&)>
 802b896:	7825      	ldrb	r5, [r4, #0]
 802b898:	2d01      	cmp	r5, #1
 802b89a:	f47f af7d 	bne.w	802b798 <SELF_LIFT_mainStateMachine(unsigned long)+0x68>
 802b89e:	a814      	add	r0, sp, #80	; 0x50
 802b8a0:	210a      	movs	r1, #10
 802b8a2:	f7ff fe15 	bl	802b4d0 <TORQUE_SHARING_getSecondaryAxisHomingTorque(ROBOT_axisIndex_t)>
 802b8a6:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 802b8aa:	2b00      	cmp	r3, #0
 802b8ac:	d05c      	beq.n	802b968 <SELF_LIFT_mainStateMachine(unsigned long)+0x238>
 802b8ae:	9a14      	ldr	r2, [sp, #80]	; 0x50
 802b8b0:	4b3b      	ldr	r3, [pc, #236]	; (802b9a0 <SELF_LIFT_mainStateMachine(unsigned long)+0x270>)
 802b8b2:	6811      	ldr	r1, [r2, #0]
 802b8b4:	6019      	str	r1, [r3, #0]
 802b8b6:	6851      	ldr	r1, [r2, #4]
 802b8b8:	6059      	str	r1, [r3, #4]
 802b8ba:	6891      	ldr	r1, [r2, #8]
 802b8bc:	6099      	str	r1, [r3, #8]
 802b8be:	68d2      	ldr	r2, [r2, #12]
 802b8c0:	60da      	str	r2, [r3, #12]
 802b8c2:	e769      	b.n	802b798 <SELF_LIFT_mainStateMachine(unsigned long)+0x68>
 802b8c4:	78b1      	ldrb	r1, [r6, #2]
 802b8c6:	a814      	add	r0, sp, #80	; 0x50
 802b8c8:	2301      	movs	r3, #1
 802b8ca:	220a      	movs	r2, #10
 802b8cc:	f7fc f8be 	bl	8027a4c <ACTIONS_power(bool, ROBOT_axisIndex_t, AXIS_powerState_t)>
 802b8d0:	a914      	add	r1, sp, #80	; 0x50
 802b8d2:	4620      	mov	r0, r4
 802b8d4:	f000 fa10 	bl	802bcf8 <TaskStatus::operator=(TaskStatus const&)>
 802b8d8:	e75e      	b.n	802b798 <SELF_LIFT_mainStateMachine(unsigned long)+0x68>
 802b8da:	4d29      	ldr	r5, [pc, #164]	; (802b980 <SELF_LIFT_mainStateMachine(unsigned long)+0x250>)
 802b8dc:	4f31      	ldr	r7, [pc, #196]	; (802b9a4 <SELF_LIFT_mainStateMachine(unsigned long)+0x274>)
 802b8de:	f105 0318 	add.w	r3, r5, #24
 802b8e2:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 802b8e4:	f10d 0c40 	add.w	ip, sp, #64	; 0x40
 802b8e8:	e88c 000f 	stmia.w	ip, {r0, r1, r2, r3}
 802b8ec:	f105 0328 	add.w	r3, r5, #40	; 0x28
 802b8f0:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 802b8f2:	edd7 7a00 	vldr	s15, [r7]
 802b8f6:	692f      	ldr	r7, [r5, #16]
 802b8f8:	f8cd c008 	str.w	ip, [sp, #8]
 802b8fc:	9706      	str	r7, [sp, #24]
 802b8fe:	696d      	ldr	r5, [r5, #20]
 802b900:	9507      	str	r5, [sp, #28]
 802b902:	af14      	add	r7, sp, #80	; 0x50
 802b904:	e887 000f 	stmia.w	r7, {r0, r1, r2, r3}
 802b908:	78b1      	ldrb	r1, [r6, #2]
 802b90a:	9703      	str	r7, [sp, #12]
 802b90c:	9f06      	ldr	r7, [sp, #24]
 802b90e:	9708      	str	r7, [sp, #32]
 802b910:	eeb1 7a67 	vneg.f32	s14, s15
 802b914:	ab0c      	add	r3, sp, #48	; 0x30
 802b916:	4e22      	ldr	r6, [pc, #136]	; (802b9a0 <SELF_LIFT_mainStateMachine(unsigned long)+0x270>)
 802b918:	9f07      	ldr	r7, [sp, #28]
 802b91a:	9300      	str	r3, [sp, #0]
 802b91c:	2504      	movs	r5, #4
 802b91e:	a80a      	add	r0, sp, #40	; 0x28
 802b920:	edcd 7a0d 	vstr	s15, [sp, #52]	; 0x34
 802b924:	edcd 7a0f 	vstr	s15, [sp, #60]	; 0x3c
 802b928:	ed8d 7a0c 	vstr	s14, [sp, #48]	; 0x30
 802b92c:	ed8d 7a0e 	vstr	s14, [sp, #56]	; 0x38
 802b930:	ab09      	add	r3, sp, #36	; 0x24
 802b932:	9709      	str	r7, [sp, #36]	; 0x24
 802b934:	aa08      	add	r2, sp, #32
 802b936:	9504      	str	r5, [sp, #16]
 802b938:	9601      	str	r6, [sp, #4]
 802b93a:	f7fb ff2b 	bl	8027794 <ACTIONS_homeList(bool, ROBOT_axisIndex_t const*, AXIS_homeType_t*, float*, float*, float*, float*, unsigned char)>
 802b93e:	a90a      	add	r1, sp, #40	; 0x28
 802b940:	4620      	mov	r0, r4
 802b942:	f000 f9d9 	bl	802bcf8 <TaskStatus::operator=(TaskStatus const&)>
 802b946:	e727      	b.n	802b798 <SELF_LIFT_mainStateMachine(unsigned long)+0x68>
 802b948:	4629      	mov	r1, r5
 802b94a:	a814      	add	r0, sp, #80	; 0x50
 802b94c:	78b3      	ldrb	r3, [r6, #2]
 802b94e:	2201      	movs	r2, #1
 802b950:	f7fd ff8c 	bl	802986c <BASEMENT_EXIT_runTask(unsigned long, BASEMENT_EXIT_turretState_t, bool)>
 802b954:	a914      	add	r1, sp, #80	; 0x50
 802b956:	4620      	mov	r0, r4
 802b958:	f000 f9ce 	bl	802bcf8 <TaskStatus::operator=(TaskStatus const&)>
 802b95c:	e71c      	b.n	802b798 <SELF_LIFT_mainStateMachine(unsigned long)+0x68>
 802b95e:	2102      	movs	r1, #2
 802b960:	4806      	ldr	r0, [pc, #24]	; (802b97c <SELF_LIFT_mainStateMachine(unsigned long)+0x24c>)
 802b962:	f7f7 f8ab 	bl	8022abc <Robot::updateArticulation(Articulation::State_e)>
 802b966:	e706      	b.n	802b776 <SELF_LIFT_mainStateMachine(unsigned long)+0x46>
 802b968:	7025      	strb	r5, [r4, #0]
 802b96a:	e715      	b.n	802b798 <SELF_LIFT_mainStateMachine(unsigned long)+0x68>
 802b96c:	2302      	movs	r3, #2
 802b96e:	7023      	strb	r3, [r4, #0]
 802b970:	e712      	b.n	802b798 <SELF_LIFT_mainStateMachine(unsigned long)+0x68>
 802b972:	bf00      	nop
 802b974:	20005084 	.word	0x20005084
 802b978:	20005058 	.word	0x20005058
 802b97c:	2000f630 	.word	0x2000f630
 802b980:	08046484 	.word	0x08046484
 802b984:	00000000 	.word	0x00000000
 802b988:	20005080 	.word	0x20005080
 802b98c:	43480000 	.word	0x43480000
 802b990:	42340000 	.word	0x42340000
 802b994:	20005070 	.word	0x20005070
 802b998:	c019999a 	.word	0xc019999a
 802b99c:	43200000 	.word	0x43200000
 802b9a0:	20005060 	.word	0x20005060
 802b9a4:	2000505c 	.word	0x2000505c

0802b9a8 <SELF_LIFT_setup()>:
 802b9a8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802b9ac:	f8df 80d0 	ldr.w	r8, [pc, #208]	; 802ba80 <SELF_LIFT_setup()+0xd8>
 802b9b0:	4f2c      	ldr	r7, [pc, #176]	; (802ba64 <SELF_LIFT_setup()+0xbc>)
 802b9b2:	b092      	sub	sp, #72	; 0x48
 802b9b4:	4606      	mov	r6, r0
 802b9b6:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 802b9ba:	4640      	mov	r0, r8
 802b9bc:	f7f7 f87e 	bl	8022abc <Robot::updateArticulation(Articulation::State_e)>
 802b9c0:	4829      	ldr	r0, [pc, #164]	; (802ba68 <SELF_LIFT_setup()+0xc0>)
 802b9c2:	f004 fc6f 	bl	80302a4 <Nest::getBasementPositions()>
 802b9c6:	ab01      	add	r3, sp, #4
 802b9c8:	edcd 0a02 	vstr	s1, [sp, #8]
 802b9cc:	ed8d 1a03 	vstr	s2, [sp, #12]
 802b9d0:	edcd 1a04 	vstr	s3, [sp, #16]
 802b9d4:	ed8d 0a01 	vstr	s0, [sp, #4]
 802b9d8:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 802b9da:	ac09      	add	r4, sp, #36	; 0x24
 802b9dc:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 802b9e0:	ac05      	add	r4, sp, #20
 802b9e2:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 802b9e6:	4c21      	ldr	r4, [pc, #132]	; (802ba6c <SELF_LIFT_setup()+0xc4>)
 802b9e8:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 802b9ec:	ad0d      	add	r5, sp, #52	; 0x34
 802b9ee:	e885 000f 	stmia.w	r5, {r0, r1, r2, r3}
 802b9f2:	4d1f      	ldr	r5, [pc, #124]	; (802ba70 <SELF_LIFT_setup()+0xc8>)
 802b9f4:	68e3      	ldr	r3, [r4, #12]
 802b9f6:	602b      	str	r3, [r5, #0]
 802b9f8:	4640      	mov	r0, r8
 802b9fa:	210a      	movs	r1, #10
 802b9fc:	f7f7 f8d2 	bl	8022ba4 <Robot::getAxisMechanicalRatio(ROBOT_axisIndex_t)>
 802ba00:	4640      	mov	r0, r8
 802ba02:	2104      	movs	r1, #4
 802ba04:	ee10 4a10 	vmov	r4, s0
 802ba08:	f7f7 f8cc 	bl	8022ba4 <Robot::getAxisMechanicalRatio(ROBOT_axisIndex_t)>
 802ba0c:	4620      	mov	r0, r4
 802ba0e:	ee10 5a10 	vmov	r5, s0
 802ba12:	f012 fd22 	bl	803e45a <__aeabi_f2d>
 802ba16:	4b17      	ldr	r3, [pc, #92]	; (802ba74 <SELF_LIFT_setup()+0xcc>)
 802ba18:	2200      	movs	r2, #0
 802ba1a:	f012 fd71 	bl	803e500 <__aeabi_dmul>
 802ba1e:	4602      	mov	r2, r0
 802ba20:	4628      	mov	r0, r5
 802ba22:	4614      	mov	r4, r2
 802ba24:	460d      	mov	r5, r1
 802ba26:	f012 fd18 	bl	803e45a <__aeabi_f2d>
 802ba2a:	4602      	mov	r2, r0
 802ba2c:	460b      	mov	r3, r1
 802ba2e:	4620      	mov	r0, r4
 802ba30:	4629      	mov	r1, r5
 802ba32:	f012 fe1b 	bl	803e66c <__aeabi_ddiv>
 802ba36:	f012 fd2c 	bl	803e492 <__aeabi_d2f>
 802ba3a:	eddf 7a0f 	vldr	s15, [pc, #60]	; 802ba78 <SELF_LIFT_setup()+0xd0>
 802ba3e:	eddf 6a0f 	vldr	s13, [pc, #60]	; 802ba7c <SELF_LIFT_setup()+0xd4>
 802ba42:	ee07 0a10 	vmov	s14, r0
 802ba46:	ee67 7a27 	vmul.f32	s15, s14, s15
 802ba4a:	4630      	mov	r0, r6
 802ba4c:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 802ba50:	2101      	movs	r1, #1
 802ba52:	ed87 7a00 	vstr	s14, [r7]
 802ba56:	f000 f939 	bl	802bccc <TaskStatus::TaskStatus(TaskStatus::Result_e)>
 802ba5a:	4630      	mov	r0, r6
 802ba5c:	b012      	add	sp, #72	; 0x48
 802ba5e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802ba62:	bf00      	nop
 802ba64:	2000505c 	.word	0x2000505c
 802ba68:	20004b30 	.word	0x20004b30
 802ba6c:	20005070 	.word	0x20005070
 802ba70:	20005080 	.word	0x20005080
 802ba74:	408f4000 	.word	0x408f4000
 802ba78:	43200000 	.word	0x43200000
 802ba7c:	447a0000 	.word	0x447a0000
 802ba80:	2000f630 	.word	0x2000f630

0802ba84 <SELF_LIFT_runTask(void*, unsigned long, bool)>:
 802ba84:	b5f0      	push	{r4, r5, r6, r7, lr}
 802ba86:	4604      	mov	r4, r0
 802ba88:	b085      	sub	sp, #20
 802ba8a:	4616      	mov	r6, r2
 802ba8c:	461d      	mov	r5, r3
 802ba8e:	b1ab      	cbz	r3, 802babc <SELF_LIFT_runTask(void*, unsigned long, bool)+0x38>
 802ba90:	4f18      	ldr	r7, [pc, #96]	; (802baf4 <SELF_LIFT_runTask(void*, unsigned long, bool)+0x70>)
 802ba92:	2202      	movs	r2, #2
 802ba94:	4638      	mov	r0, r7
 802ba96:	f013 fdb4 	bl	803f602 <__aeabi_memcpy>
 802ba9a:	4817      	ldr	r0, [pc, #92]	; (802baf8 <SELF_LIFT_runTask(void*, unsigned long, bool)+0x74>)
 802ba9c:	f7f7 f80a 	bl	8022ab4 <Robot::getArticulation()>
 802baa0:	783b      	ldrb	r3, [r7, #0]
 802baa2:	b1cb      	cbz	r3, 802bad8 <SELF_LIFT_runTask(void*, unsigned long, bool)+0x54>
 802baa4:	2b01      	cmp	r3, #1
 802baa6:	d119      	bne.n	802badc <SELF_LIFT_runTask(void*, unsigned long, bool)+0x58>
 802baa8:	f010 0f0e 	tst.w	r0, #14
 802baac:	d016      	beq.n	802badc <SELF_LIFT_runTask(void*, unsigned long, bool)+0x58>
 802baae:	4b13      	ldr	r3, [pc, #76]	; (802bafc <SELF_LIFT_runTask(void*, unsigned long, bool)+0x78>)
 802bab0:	4a13      	ldr	r2, [pc, #76]	; (802bb00 <SELF_LIFT_runTask(void*, unsigned long, bool)+0x7c>)
 802bab2:	60da      	str	r2, [r3, #12]
 802bab4:	7879      	ldrb	r1, [r7, #1]
 802bab6:	4810      	ldr	r0, [pc, #64]	; (802baf8 <SELF_LIFT_runTask(void*, unsigned long, bool)+0x74>)
 802bab8:	f7f7 f8f6 	bl	8022ca8 <Robot::setBusVoltage(unsigned char)>
 802babc:	4a11      	ldr	r2, [pc, #68]	; (802bb04 <SELF_LIFT_runTask(void*, unsigned long, bool)+0x80>)
 802babe:	490f      	ldr	r1, [pc, #60]	; (802bafc <SELF_LIFT_runTask(void*, unsigned long, bool)+0x78>)
 802bac0:	9500      	str	r5, [sp, #0]
 802bac2:	4633      	mov	r3, r6
 802bac4:	a802      	add	r0, sp, #8
 802bac6:	f7fc fa29 	bl	8027f1c <SM_RUNNER_runStateMachine>
 802baca:	a902      	add	r1, sp, #8
 802bacc:	4620      	mov	r0, r4
 802bace:	f000 f90b 	bl	802bce8 <TaskStatus::TaskStatus(TaskStatus const&)>
 802bad2:	4620      	mov	r0, r4
 802bad4:	b005      	add	sp, #20
 802bad6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 802bad8:	2880      	cmp	r0, #128	; 0x80
 802bada:	d007      	beq.n	802baec <SELF_LIFT_runTask(void*, unsigned long, bool)+0x68>
 802badc:	2209      	movs	r2, #9
 802bade:	2102      	movs	r1, #2
 802bae0:	4620      	mov	r0, r4
 802bae2:	f000 f8f9 	bl	802bcd8 <TaskStatus::TaskStatus(TaskStatus::Result_e, unsigned int)>
 802bae6:	4620      	mov	r0, r4
 802bae8:	b005      	add	sp, #20
 802baea:	bdf0      	pop	{r4, r5, r6, r7, pc}
 802baec:	4b03      	ldr	r3, [pc, #12]	; (802bafc <SELF_LIFT_runTask(void*, unsigned long, bool)+0x78>)
 802baee:	4a06      	ldr	r2, [pc, #24]	; (802bb08 <SELF_LIFT_runTask(void*, unsigned long, bool)+0x84>)
 802baf0:	60da      	str	r2, [r3, #12]
 802baf2:	e7df      	b.n	802bab4 <SELF_LIFT_runTask(void*, unsigned long, bool)+0x30>
 802baf4:	20005058 	.word	0x20005058
 802baf8:	2000f630 	.word	0x2000f630
 802bafc:	20001c44 	.word	0x20001c44
 802bb00:	20001b94 	.word	0x20001b94
 802bb04:	20005084 	.word	0x20005084
 802bb08:	20001b54 	.word	0x20001b54

0802bb0c <SELF_LIFT_homingErrorStateMachine(unsigned long)>:
 802bb0c:	b530      	push	{r4, r5, lr}
 802bb0e:	460d      	mov	r5, r1
 802bb10:	b085      	sub	sp, #20
 802bb12:	2100      	movs	r1, #0
 802bb14:	4604      	mov	r4, r0
 802bb16:	f000 f8d9 	bl	802bccc <TaskStatus::TaskStatus(TaskStatus::Result_e)>
 802bb1a:	4a41      	ldr	r2, [pc, #260]	; (802bc20 <SELF_LIFT_homingErrorStateMachine(unsigned long)+0x114>)
 802bb1c:	7813      	ldrb	r3, [r2, #0]
 802bb1e:	2b0a      	cmp	r3, #10
 802bb20:	d87b      	bhi.n	802bc1a <SELF_LIFT_homingErrorStateMachine(unsigned long)+0x10e>
 802bb22:	e8df f003 	tbb	[pc, r3]
 802bb26:	1c0f      	.short	0x1c0f
 802bb28:	41312d20 	.word	0x41312d20
 802bb2c:	6f615750 	.word	0x6f615750
 802bb30:	06          	.byte	0x06
 802bb31:	00          	.byte	0x00
 802bb32:	483b      	ldr	r0, [pc, #236]	; (802bc20 <SELF_LIFT_homingErrorStateMachine(unsigned long)+0x114>)
 802bb34:	2101      	movs	r1, #1
 802bb36:	f7fc fbe3 	bl	8028300 <SM_RUNNER_setComplete>
 802bb3a:	2301      	movs	r3, #1
 802bb3c:	7023      	strb	r3, [r4, #0]
 802bb3e:	4620      	mov	r0, r4
 802bb40:	b005      	add	sp, #20
 802bb42:	bd30      	pop	{r4, r5, pc}
 802bb44:	7891      	ldrb	r1, [r2, #2]
 802bb46:	a802      	add	r0, sp, #8
 802bb48:	2301      	movs	r3, #1
 802bb4a:	220c      	movs	r2, #12
 802bb4c:	f7fb ff7e 	bl	8027a4c <ACTIONS_power(bool, ROBOT_axisIndex_t, AXIS_powerState_t)>
 802bb50:	a902      	add	r1, sp, #8
 802bb52:	4620      	mov	r0, r4
 802bb54:	f000 f8d0 	bl	802bcf8 <TaskStatus::operator=(TaskStatus const&)>
 802bb58:	4620      	mov	r0, r4
 802bb5a:	b005      	add	sp, #20
 802bb5c:	bd30      	pop	{r4, r5, pc}
 802bb5e:	7891      	ldrb	r1, [r2, #2]
 802bb60:	a802      	add	r0, sp, #8
 802bb62:	2300      	movs	r3, #0
 802bb64:	e7f1      	b.n	802bb4a <SELF_LIFT_homingErrorStateMachine(unsigned long)+0x3e>
 802bb66:	7891      	ldrb	r1, [r2, #2]
 802bb68:	a802      	add	r0, sp, #8
 802bb6a:	2301      	movs	r3, #1
 802bb6c:	220f      	movs	r2, #15
 802bb6e:	f7fb ff6d 	bl	8027a4c <ACTIONS_power(bool, ROBOT_axisIndex_t, AXIS_powerState_t)>
 802bb72:	a902      	add	r1, sp, #8
 802bb74:	4620      	mov	r0, r4
 802bb76:	f000 f8bf 	bl	802bcf8 <TaskStatus::operator=(TaskStatus const&)>
 802bb7a:	4620      	mov	r0, r4
 802bb7c:	b005      	add	sp, #20
 802bb7e:	bd30      	pop	{r4, r5, pc}
 802bb80:	7891      	ldrb	r1, [r2, #2]
 802bb82:	a802      	add	r0, sp, #8
 802bb84:	2300      	movs	r3, #0
 802bb86:	e7f1      	b.n	802bb6c <SELF_LIFT_homingErrorStateMachine(unsigned long)+0x60>
 802bb88:	2300      	movs	r3, #0
 802bb8a:	ed9f 0a26 	vldr	s0, [pc, #152]	; 802bc24 <SELF_LIFT_homingErrorStateMachine(unsigned long)+0x118>
 802bb8e:	7891      	ldrb	r1, [r2, #2]
 802bb90:	9300      	str	r3, [sp, #0]
 802bb92:	a802      	add	r0, sp, #8
 802bb94:	220f      	movs	r2, #15
 802bb96:	f7fb fe37 	bl	8027808 <ACTIONS_move(bool, ROBOT_axisIndex_t, float, AXIS_moveType_t, AXIS_mode_t)>
 802bb9a:	a902      	add	r1, sp, #8
 802bb9c:	4620      	mov	r0, r4
 802bb9e:	f000 f8ab 	bl	802bcf8 <TaskStatus::operator=(TaskStatus const&)>
 802bba2:	4620      	mov	r0, r4
 802bba4:	b005      	add	sp, #20
 802bba6:	bd30      	pop	{r4, r5, pc}
 802bba8:	4b1f      	ldr	r3, [pc, #124]	; (802bc28 <SELF_LIFT_homingErrorStateMachine(unsigned long)+0x11c>)
 802bbaa:	7891      	ldrb	r1, [r2, #2]
 802bbac:	ed93 0a00 	vldr	s0, [r3]
 802bbb0:	2300      	movs	r3, #0
 802bbb2:	a802      	add	r0, sp, #8
 802bbb4:	9300      	str	r3, [sp, #0]
 802bbb6:	221a      	movs	r2, #26
 802bbb8:	f7fb fe26 	bl	8027808 <ACTIONS_move(bool, ROBOT_axisIndex_t, float, AXIS_moveType_t, AXIS_mode_t)>
 802bbbc:	a902      	add	r1, sp, #8
 802bbbe:	4620      	mov	r0, r4
 802bbc0:	f000 f89a 	bl	802bcf8 <TaskStatus::operator=(TaskStatus const&)>
 802bbc4:	e7bb      	b.n	802bb3e <SELF_LIFT_homingErrorStateMachine(unsigned long)+0x32>
 802bbc6:	2300      	movs	r3, #0
 802bbc8:	7891      	ldrb	r1, [r2, #2]
 802bbca:	ed9f 0a18 	vldr	s0, [pc, #96]	; 802bc2c <SELF_LIFT_homingErrorStateMachine(unsigned long)+0x120>
 802bbce:	9300      	str	r3, [sp, #0]
 802bbd0:	a802      	add	r0, sp, #8
 802bbd2:	e7df      	b.n	802bb94 <SELF_LIFT_homingErrorStateMachine(unsigned long)+0x88>
 802bbd4:	7891      	ldrb	r1, [r2, #2]
 802bbd6:	a802      	add	r0, sp, #8
 802bbd8:	220c      	movs	r2, #12
 802bbda:	f7fb ffb9 	bl	8027b50 <ACTIONS_reset(bool, ROBOT_axisIndex_t)>
 802bbde:	a902      	add	r1, sp, #8
 802bbe0:	4620      	mov	r0, r4
 802bbe2:	f000 f889 	bl	802bcf8 <TaskStatus::operator=(TaskStatus const&)>
 802bbe6:	e7aa      	b.n	802bb3e <SELF_LIFT_homingErrorStateMachine(unsigned long)+0x32>
 802bbe8:	4b11      	ldr	r3, [pc, #68]	; (802bc30 <SELF_LIFT_homingErrorStateMachine(unsigned long)+0x124>)
 802bbea:	7891      	ldrb	r1, [r2, #2]
 802bbec:	ed93 0a00 	vldr	s0, [r3]
 802bbf0:	a802      	add	r0, sp, #8
 802bbf2:	2300      	movs	r3, #0
 802bbf4:	220c      	movs	r2, #12
 802bbf6:	f7fb fcfd 	bl	80275f4 <ACTIONS_home(bool, ROBOT_axisIndex_t, AXIS_homeType_t, float)>
 802bbfa:	a902      	add	r1, sp, #8
 802bbfc:	4620      	mov	r0, r4
 802bbfe:	f000 f87b 	bl	802bcf8 <TaskStatus::operator=(TaskStatus const&)>
 802bc02:	e79c      	b.n	802bb3e <SELF_LIFT_homingErrorStateMachine(unsigned long)+0x32>
 802bc04:	7893      	ldrb	r3, [r2, #2]
 802bc06:	4629      	mov	r1, r5
 802bc08:	a802      	add	r0, sp, #8
 802bc0a:	2201      	movs	r2, #1
 802bc0c:	f7fd fe2e 	bl	802986c <BASEMENT_EXIT_runTask(unsigned long, BASEMENT_EXIT_turretState_t, bool)>
 802bc10:	a902      	add	r1, sp, #8
 802bc12:	4620      	mov	r0, r4
 802bc14:	f000 f870 	bl	802bcf8 <TaskStatus::operator=(TaskStatus const&)>
 802bc18:	e791      	b.n	802bb3e <SELF_LIFT_homingErrorStateMachine(unsigned long)+0x32>
 802bc1a:	2302      	movs	r3, #2
 802bc1c:	7023      	strb	r3, [r4, #0]
 802bc1e:	e78e      	b.n	802bb3e <SELF_LIFT_homingErrorStateMachine(unsigned long)+0x32>
 802bc20:	200050ac 	.word	0x200050ac
 802bc24:	420c0000 	.word	0x420c0000
 802bc28:	20000078 	.word	0x20000078
 802bc2c:	42a00000 	.word	0x42a00000
 802bc30:	20005098 	.word	0x20005098

0802bc34 <SELF_LIFT_homingErrorHandler(SELF_LIFT_errorHandler_t, unsigned long, bool)>:
 802bc34:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802bc38:	4606      	mov	r6, r0
 802bc3a:	b094      	sub	sp, #80	; 0x50
 802bc3c:	4690      	mov	r8, r2
 802bc3e:	461f      	mov	r7, r3
 802bc40:	b97b      	cbnz	r3, 802bc62 <SELF_LIFT_homingErrorHandler(SELF_LIFT_errorHandler_t, unsigned long, bool)+0x2e>
 802bc42:	ad0f      	add	r5, sp, #60	; 0x3c
 802bc44:	4a1a      	ldr	r2, [pc, #104]	; (802bcb0 <SELF_LIFT_homingErrorHandler(SELF_LIFT_errorHandler_t, unsigned long, bool)+0x7c>)
 802bc46:	491b      	ldr	r1, [pc, #108]	; (802bcb4 <SELF_LIFT_homingErrorHandler(SELF_LIFT_errorHandler_t, unsigned long, bool)+0x80>)
 802bc48:	9700      	str	r7, [sp, #0]
 802bc4a:	4643      	mov	r3, r8
 802bc4c:	4628      	mov	r0, r5
 802bc4e:	f7fc f965 	bl	8027f1c <SM_RUNNER_runStateMachine>
 802bc52:	4629      	mov	r1, r5
 802bc54:	4630      	mov	r0, r6
 802bc56:	f000 f847 	bl	802bce8 <TaskStatus::TaskStatus(TaskStatus const&)>
 802bc5a:	4630      	mov	r0, r6
 802bc5c:	b014      	add	sp, #80	; 0x50
 802bc5e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802bc62:	4b15      	ldr	r3, [pc, #84]	; (802bcb8 <SELF_LIFT_homingErrorHandler(SELF_LIFT_errorHandler_t, unsigned long, bool)+0x84>)
 802bc64:	4c15      	ldr	r4, [pc, #84]	; (802bcbc <SELF_LIFT_homingErrorHandler(SELF_LIFT_errorHandler_t, unsigned long, bool)+0x88>)
 802bc66:	4a13      	ldr	r2, [pc, #76]	; (802bcb4 <SELF_LIFT_homingErrorHandler(SELF_LIFT_errorHandler_t, unsigned long, bool)+0x80>)
 802bc68:	4815      	ldr	r0, [pc, #84]	; (802bcc0 <SELF_LIFT_homingErrorHandler(SELF_LIFT_errorHandler_t, unsigned long, bool)+0x8c>)
 802bc6a:	2900      	cmp	r1, #0
 802bc6c:	bf0c      	ite	eq
 802bc6e:	4619      	moveq	r1, r3
 802bc70:	4621      	movne	r1, r4
 802bc72:	60d1      	str	r1, [r2, #12]
 802bc74:	f004 fb16 	bl	80302a4 <Nest::getBasementPositions()>
 802bc78:	ab03      	add	r3, sp, #12
 802bc7a:	ed8d 0a03 	vstr	s0, [sp, #12]
 802bc7e:	edcd 0a04 	vstr	s1, [sp, #16]
 802bc82:	ed8d 1a05 	vstr	s2, [sp, #20]
 802bc86:	edcd 1a06 	vstr	s3, [sp, #24]
 802bc8a:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 802bc8c:	ac0b      	add	r4, sp, #44	; 0x2c
 802bc8e:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 802bc92:	ac07      	add	r4, sp, #28
 802bc94:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 802bc98:	4c0a      	ldr	r4, [pc, #40]	; (802bcc4 <SELF_LIFT_homingErrorHandler(SELF_LIFT_errorHandler_t, unsigned long, bool)+0x90>)
 802bc9a:	f8df c02c 	ldr.w	ip, [pc, #44]	; 802bcc8 <SELF_LIFT_homingErrorHandler(SELF_LIFT_errorHandler_t, unsigned long, bool)+0x94>
 802bc9e:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 802bca2:	ad0f      	add	r5, sp, #60	; 0x3c
 802bca4:	e885 000f 	stmia.w	r5, {r0, r1, r2, r3}
 802bca8:	6823      	ldr	r3, [r4, #0]
 802bcaa:	f8cc 3000 	str.w	r3, [ip]
 802bcae:	e7c9      	b.n	802bc44 <SELF_LIFT_homingErrorHandler(SELF_LIFT_errorHandler_t, unsigned long, bool)+0x10>
 802bcb0:	200050ac 	.word	0x200050ac
 802bcb4:	20001d34 	.word	0x20001d34
 802bcb8:	20001cb4 	.word	0x20001cb4
 802bcbc:	20001c64 	.word	0x20001c64
 802bcc0:	20004b30 	.word	0x20004b30
 802bcc4:	2000509c 	.word	0x2000509c
 802bcc8:	20005098 	.word	0x20005098

0802bccc <TaskStatus::TaskStatus(TaskStatus::Result_e)>:
 802bccc:	2200      	movs	r2, #0
 802bcce:	7001      	strb	r1, [r0, #0]
 802bcd0:	7042      	strb	r2, [r0, #1]
 802bcd2:	6042      	str	r2, [r0, #4]
 802bcd4:	4770      	bx	lr
 802bcd6:	bf00      	nop

0802bcd8 <TaskStatus::TaskStatus(TaskStatus::Result_e, unsigned int)>:
 802bcd8:	b410      	push	{r4}
 802bcda:	2401      	movs	r4, #1
 802bcdc:	7044      	strb	r4, [r0, #1]
 802bcde:	7001      	strb	r1, [r0, #0]
 802bce0:	f85d 4b04 	ldr.w	r4, [sp], #4
 802bce4:	6042      	str	r2, [r0, #4]
 802bce6:	4770      	bx	lr

0802bce8 <TaskStatus::TaskStatus(TaskStatus const&)>:
 802bce8:	b410      	push	{r4}
 802bcea:	880c      	ldrh	r4, [r1, #0]
 802bcec:	684a      	ldr	r2, [r1, #4]
 802bcee:	8004      	strh	r4, [r0, #0]
 802bcf0:	6042      	str	r2, [r0, #4]
 802bcf2:	f85d 4b04 	ldr.w	r4, [sp], #4
 802bcf6:	4770      	bx	lr

0802bcf8 <TaskStatus::operator=(TaskStatus const&)>:
 802bcf8:	b430      	push	{r4, r5}
 802bcfa:	780d      	ldrb	r5, [r1, #0]
 802bcfc:	684c      	ldr	r4, [r1, #4]
 802bcfe:	784a      	ldrb	r2, [r1, #1]
 802bd00:	7042      	strb	r2, [r0, #1]
 802bd02:	7005      	strb	r5, [r0, #0]
 802bd04:	6044      	str	r4, [r0, #4]
 802bd06:	bc30      	pop	{r4, r5}
 802bd08:	4770      	bx	lr
 802bd0a:	bf00      	nop

0802bd0c <TaskStatus::operator&=(TaskStatus const&)>:
 802bd0c:	7803      	ldrb	r3, [r0, #0]
 802bd0e:	2b02      	cmp	r3, #2
 802bd10:	d00b      	beq.n	802bd2a <TaskStatus::operator&=(TaskStatus const&)+0x1e>
 802bd12:	780a      	ldrb	r2, [r1, #0]
 802bd14:	2a02      	cmp	r2, #2
 802bd16:	d008      	beq.n	802bd2a <TaskStatus::operator&=(TaskStatus const&)+0x1e>
 802bd18:	b103      	cbz	r3, 802bd1c <TaskStatus::operator&=(TaskStatus const&)+0x10>
 802bd1a:	b942      	cbnz	r2, 802bd2e <TaskStatus::operator&=(TaskStatus const&)+0x22>
 802bd1c:	2300      	movs	r3, #0
 802bd1e:	7003      	strb	r3, [r0, #0]
 802bd20:	784b      	ldrb	r3, [r1, #1]
 802bd22:	b93b      	cbnz	r3, 802bd34 <TaskStatus::operator&=(TaskStatus const&)+0x28>
 802bd24:	6843      	ldr	r3, [r0, #4]
 802bd26:	6043      	str	r3, [r0, #4]
 802bd28:	4770      	bx	lr
 802bd2a:	2302      	movs	r3, #2
 802bd2c:	7003      	strb	r3, [r0, #0]
 802bd2e:	784b      	ldrb	r3, [r1, #1]
 802bd30:	2b00      	cmp	r3, #0
 802bd32:	d0f7      	beq.n	802bd24 <TaskStatus::operator&=(TaskStatus const&)+0x18>
 802bd34:	684b      	ldr	r3, [r1, #4]
 802bd36:	6043      	str	r3, [r0, #4]
 802bd38:	4770      	bx	lr
 802bd3a:	bf00      	nop

0802bd3c <TaskManager::TaskManager()>:
 802bd3c:	2200      	movs	r2, #0
 802bd3e:	e9c0 2200 	strd	r2, r2, [r0]
 802bd42:	7202      	strb	r2, [r0, #8]
 802bd44:	f8c0 2009 	str.w	r2, [r0, #9]
 802bd48:	f8c0 200d 	str.w	r2, [r0, #13]
 802bd4c:	f8c0 2011 	str.w	r2, [r0, #17]
 802bd50:	f8c0 2015 	str.w	r2, [r0, #21]
 802bd54:	f8c0 2019 	str.w	r2, [r0, #25]
 802bd58:	7742      	strb	r2, [r0, #29]
 802bd5a:	4770      	bx	lr

0802bd5c <TaskManager::setState(TaskManager::State_e)>:
 802bd5c:	7201      	strb	r1, [r0, #8]
 802bd5e:	4770      	bx	lr

0802bd60 <TaskManager::startTask(COMM_source_t, unsigned char, unsigned char*, unsigned short, Articulation::State_e, unsigned char)>:
 802bd60:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 802bd64:	4680      	mov	r8, r0
 802bd66:	4607      	mov	r7, r0
 802bd68:	f858 0f09 	ldr.w	r0, [r8, #9]!
 802bd6c:	f8d8 4008 	ldr.w	r4, [r8, #8]
 802bd70:	f8d8 600c 	ldr.w	r6, [r8, #12]
 802bd74:	f8d8 5004 	ldr.w	r5, [r8, #4]
 802bd78:	f8c7 5022 	str.w	r5, [r7, #34]	; 0x22
 802bd7c:	f8c7 602a 	str.w	r6, [r7, #42]	; 0x2a
 802bd80:	f8c7 4026 	str.w	r4, [r7, #38]	; 0x26
 802bd84:	f8c7 001e 	str.w	r0, [r7, #30]
 802bd88:	f8d8 0010 	ldr.w	r0, [r8, #16]
 802bd8c:	f8c7 002e 	str.w	r0, [r7, #46]	; 0x2e
 802bd90:	b084      	sub	sp, #16
 802bd92:	f898 0014 	ldrb.w	r0, [r8, #20]
 802bd96:	683c      	ldr	r4, [r7, #0]
 802bd98:	f887 0032 	strb.w	r0, [r7, #50]	; 0x32
 802bd9c:	4616      	mov	r6, r2
 802bd9e:	607c      	str	r4, [r7, #4]
 802bda0:	f8bd 2030 	ldrh.w	r2, [sp, #48]	; 0x30
 802bda4:	f89d 9038 	ldrb.w	r9, [sp, #56]	; 0x38
 802bda8:	468a      	mov	sl, r1
 802bdaa:	4640      	mov	r0, r8
 802bdac:	4619      	mov	r1, r3
 802bdae:	f013 fc28 	bl	803f602 <__aeabi_memcpy>
 802bdb2:	2e06      	cmp	r6, #6
 802bdb4:	d051      	beq.n	802be5a <TaskManager::startTask(COMM_source_t, unsigned char, unsigned char*, unsigned short, Articulation::State_e, unsigned char)+0xfa>
 802bdb6:	2e0d      	cmp	r6, #13
 802bdb8:	d07e      	beq.n	802beb8 <TaskManager::startTask(COMM_source_t, unsigned char, unsigned char*, unsigned short, Articulation::State_e, unsigned char)+0x158>
 802bdba:	7a3b      	ldrb	r3, [r7, #8]
 802bdbc:	2b01      	cmp	r3, #1
 802bdbe:	d078      	beq.n	802beb2 <TaskManager::startTask(COMM_source_t, unsigned char, unsigned char*, unsigned short, Articulation::State_e, unsigned char)+0x152>
 802bdc0:	2b02      	cmp	r3, #2
 802bdc2:	d071      	beq.n	802bea8 <TaskManager::startTask(COMM_source_t, unsigned char, unsigned char*, unsigned short, Articulation::State_e, unsigned char)+0x148>
 802bdc4:	486e      	ldr	r0, [pc, #440]	; (802bf80 <TaskManager::startTask(COMM_source_t, unsigned char, unsigned char*, unsigned short, Articulation::State_e, unsigned char)+0x220>)
 802bdc6:	250b      	movs	r5, #11
 802bdc8:	4603      	mov	r3, r0
 802bdca:	2400      	movs	r4, #0
 802bdcc:	e005      	b.n	802bdda <TaskManager::startTask(COMM_source_t, unsigned char, unsigned char*, unsigned short, Articulation::State_e, unsigned char)+0x7a>
 802bdce:	3401      	adds	r4, #1
 802bdd0:	2c1f      	cmp	r4, #31
 802bdd2:	f103 0314 	add.w	r3, r3, #20
 802bdd6:	d028      	beq.n	802be2a <TaskManager::startTask(COMM_source_t, unsigned char, unsigned char*, unsigned short, Articulation::State_e, unsigned char)+0xca>
 802bdd8:	785d      	ldrb	r5, [r3, #1]
 802bdda:	42ae      	cmp	r6, r5
 802bddc:	461a      	mov	r2, r3
 802bdde:	d1f6      	bne.n	802bdce <TaskManager::startTask(COMM_source_t, unsigned char, unsigned char*, unsigned short, Articulation::State_e, unsigned char)+0x6e>
 802bde0:	7819      	ldrb	r1, [r3, #0]
 802bde2:	4551      	cmp	r1, sl
 802bde4:	d1f3      	bne.n	802bdce <TaskManager::startTask(COMM_source_t, unsigned char, unsigned char*, unsigned short, Articulation::State_e, unsigned char)+0x6e>
 802bde6:	eb04 0484 	add.w	r4, r4, r4, lsl #2
 802bdea:	eb00 0484 	add.w	r4, r0, r4, lsl #2
 802bdee:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 802bdf0:	603b      	str	r3, [r7, #0]
 802bdf2:	68e3      	ldr	r3, [r4, #12]
 802bdf4:	421a      	tst	r2, r3
 802bdf6:	d076      	beq.n	802bee6 <TaskManager::startTask(COMM_source_t, unsigned char, unsigned char*, unsigned short, Articulation::State_e, unsigned char)+0x186>
 802bdf8:	7c23      	ldrb	r3, [r4, #16]
 802bdfa:	454b      	cmp	r3, r9
 802bdfc:	f200 80b8 	bhi.w	802bf70 <TaskManager::startTask(COMM_source_t, unsigned char, unsigned char*, unsigned short, Articulation::State_e, unsigned char)+0x210>
 802be00:	68a4      	ldr	r4, [r4, #8]
 802be02:	4641      	mov	r1, r8
 802be04:	2301      	movs	r3, #1
 802be06:	2200      	movs	r2, #0
 802be08:	a802      	add	r0, sp, #8
 802be0a:	47a0      	blx	r4
 802be0c:	f89d 4008 	ldrb.w	r4, [sp, #8]
 802be10:	2c01      	cmp	r4, #1
 802be12:	f000 8086 	beq.w	802bf22 <TaskManager::startTask(COMM_source_t, unsigned char, unsigned char*, unsigned short, Articulation::State_e, unsigned char)+0x1c2>
 802be16:	2c02      	cmp	r4, #2
 802be18:	d06e      	beq.n	802bef8 <TaskManager::startTask(COMM_source_t, unsigned char, unsigned char*, unsigned short, Articulation::State_e, unsigned char)+0x198>
 802be1a:	2c00      	cmp	r4, #0
 802be1c:	d146      	bne.n	802beac <TaskManager::startTask(COMM_source_t, unsigned char, unsigned char*, unsigned short, Articulation::State_e, unsigned char)+0x14c>
 802be1e:	4a59      	ldr	r2, [pc, #356]	; (802bf84 <TaskManager::startTask(COMM_source_t, unsigned char, unsigned char*, unsigned short, Articulation::State_e, unsigned char)+0x224>)
 802be20:	4d59      	ldr	r5, [pc, #356]	; (802bf88 <TaskManager::startTask(COMM_source_t, unsigned char, unsigned char*, unsigned short, Articulation::State_e, unsigned char)+0x228>)
 802be22:	2301      	movs	r3, #1
 802be24:	7013      	strb	r3, [r2, #0]
 802be26:	723b      	strb	r3, [r7, #8]
 802be28:	e002      	b.n	802be30 <TaskManager::startTask(COMM_source_t, unsigned char, unsigned char*, unsigned short, Articulation::State_e, unsigned char)+0xd0>
 802be2a:	4d58      	ldr	r5, [pc, #352]	; (802bf8c <TaskManager::startTask(COMM_source_t, unsigned char, unsigned char*, unsigned short, Articulation::State_e, unsigned char)+0x22c>)
 802be2c:	603a      	str	r2, [r7, #0]
 802be2e:	2404      	movs	r4, #4
 802be30:	4857      	ldr	r0, [pc, #348]	; (802bf90 <TaskManager::startTask(COMM_source_t, unsigned char, unsigned char*, unsigned short, Articulation::State_e, unsigned char)+0x230>)
 802be32:	212f      	movs	r1, #47	; 0x2f
 802be34:	f013 fa93 	bl	803f35e <strrchr>
 802be38:	b358      	cbz	r0, 802be92 <TaskManager::startTask(COMM_source_t, unsigned char, unsigned char*, unsigned short, Articulation::State_e, unsigned char)+0x132>
 802be3a:	212f      	movs	r1, #47	; 0x2f
 802be3c:	4854      	ldr	r0, [pc, #336]	; (802bf90 <TaskManager::startTask(COMM_source_t, unsigned char, unsigned char*, unsigned short, Articulation::State_e, unsigned char)+0x230>)
 802be3e:	f013 fa8e 	bl	803f35e <strrchr>
 802be42:	1c41      	adds	r1, r0, #1
 802be44:	4b53      	ldr	r3, [pc, #332]	; (802bf94 <TaskManager::startTask(COMM_source_t, unsigned char, unsigned char*, unsigned short, Articulation::State_e, unsigned char)+0x234>)
 802be46:	9500      	str	r5, [sp, #0]
 802be48:	f240 222e 	movw	r2, #558	; 0x22e
 802be4c:	2002      	movs	r0, #2
 802be4e:	f7f6 fca3 	bl	8022798 <DEBUG_logMsg>
 802be52:	4620      	mov	r0, r4
 802be54:	b004      	add	sp, #16
 802be56:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802be5a:	f1ba 0f06 	cmp.w	sl, #6
 802be5e:	d1ac      	bne.n	802bdba <TaskManager::startTask(COMM_source_t, unsigned char, unsigned char*, unsigned short, Articulation::State_e, unsigned char)+0x5a>
 802be60:	f44f 6080 	mov.w	r0, #1024	; 0x400
 802be64:	f7f9 fcb6 	bl	80257d4 <ANTCTRL_setEvent>
 802be68:	4b4b      	ldr	r3, [pc, #300]	; (802bf98 <TaskManager::startTask(COMM_source_t, unsigned char, unsigned char*, unsigned short, Articulation::State_e, unsigned char)+0x238>)
 802be6a:	4849      	ldr	r0, [pc, #292]	; (802bf90 <TaskManager::startTask(COMM_source_t, unsigned char, unsigned char*, unsigned short, Articulation::State_e, unsigned char)+0x230>)
 802be6c:	2201      	movs	r2, #1
 802be6e:	212f      	movs	r1, #47	; 0x2f
 802be70:	701a      	strb	r2, [r3, #0]
 802be72:	f013 fa74 	bl	803f35e <strrchr>
 802be76:	2800      	cmp	r0, #0
 802be78:	d064      	beq.n	802bf44 <TaskManager::startTask(COMM_source_t, unsigned char, unsigned char*, unsigned short, Articulation::State_e, unsigned char)+0x1e4>
 802be7a:	212f      	movs	r1, #47	; 0x2f
 802be7c:	4844      	ldr	r0, [pc, #272]	; (802bf90 <TaskManager::startTask(COMM_source_t, unsigned char, unsigned char*, unsigned short, Articulation::State_e, unsigned char)+0x230>)
 802be7e:	f013 fa6e 	bl	803f35e <strrchr>
 802be82:	1c41      	adds	r1, r0, #1
 802be84:	4b45      	ldr	r3, [pc, #276]	; (802bf9c <TaskManager::startTask(COMM_source_t, unsigned char, unsigned char*, unsigned short, Articulation::State_e, unsigned char)+0x23c>)
 802be86:	f240 12e5 	movw	r2, #485	; 0x1e5
 802be8a:	2001      	movs	r0, #1
 802be8c:	f7f6 fc84 	bl	8022798 <DEBUG_logMsg>
 802be90:	e793      	b.n	802bdba <TaskManager::startTask(COMM_source_t, unsigned char, unsigned char*, unsigned short, Articulation::State_e, unsigned char)+0x5a>
 802be92:	483f      	ldr	r0, [pc, #252]	; (802bf90 <TaskManager::startTask(COMM_source_t, unsigned char, unsigned char*, unsigned short, Articulation::State_e, unsigned char)+0x230>)
 802be94:	215c      	movs	r1, #92	; 0x5c
 802be96:	f013 fa62 	bl	803f35e <strrchr>
 802be9a:	b310      	cbz	r0, 802bee2 <TaskManager::startTask(COMM_source_t, unsigned char, unsigned char*, unsigned short, Articulation::State_e, unsigned char)+0x182>
 802be9c:	215c      	movs	r1, #92	; 0x5c
 802be9e:	483c      	ldr	r0, [pc, #240]	; (802bf90 <TaskManager::startTask(COMM_source_t, unsigned char, unsigned char*, unsigned short, Articulation::State_e, unsigned char)+0x230>)
 802bea0:	f013 fa5d 	bl	803f35e <strrchr>
 802bea4:	1c41      	adds	r1, r0, #1
 802bea6:	e7cd      	b.n	802be44 <TaskManager::startTask(COMM_source_t, unsigned char, unsigned char*, unsigned short, Articulation::State_e, unsigned char)+0xe4>
 802bea8:	2e0d      	cmp	r6, #13
 802beaa:	d08b      	beq.n	802bdc4 <TaskManager::startTask(COMM_source_t, unsigned char, unsigned char*, unsigned short, Articulation::State_e, unsigned char)+0x64>
 802beac:	4d3c      	ldr	r5, [pc, #240]	; (802bfa0 <TaskManager::startTask(COMM_source_t, unsigned char, unsigned char*, unsigned short, Articulation::State_e, unsigned char)+0x240>)
 802beae:	2403      	movs	r4, #3
 802beb0:	e7be      	b.n	802be30 <TaskManager::startTask(COMM_source_t, unsigned char, unsigned char*, unsigned short, Articulation::State_e, unsigned char)+0xd0>
 802beb2:	4d3c      	ldr	r5, [pc, #240]	; (802bfa4 <TaskManager::startTask(COMM_source_t, unsigned char, unsigned char*, unsigned short, Articulation::State_e, unsigned char)+0x244>)
 802beb4:	2402      	movs	r4, #2
 802beb6:	e7bb      	b.n	802be30 <TaskManager::startTask(COMM_source_t, unsigned char, unsigned char*, unsigned short, Articulation::State_e, unsigned char)+0xd0>
 802beb8:	4b37      	ldr	r3, [pc, #220]	; (802bf98 <TaskManager::startTask(COMM_source_t, unsigned char, unsigned char*, unsigned short, Articulation::State_e, unsigned char)+0x238>)
 802beba:	4835      	ldr	r0, [pc, #212]	; (802bf90 <TaskManager::startTask(COMM_source_t, unsigned char, unsigned char*, unsigned short, Articulation::State_e, unsigned char)+0x230>)
 802bebc:	2200      	movs	r2, #0
 802bebe:	212f      	movs	r1, #47	; 0x2f
 802bec0:	701a      	strb	r2, [r3, #0]
 802bec2:	f013 fa4c 	bl	803f35e <strrchr>
 802bec6:	2800      	cmp	r0, #0
 802bec8:	d02f      	beq.n	802bf2a <TaskManager::startTask(COMM_source_t, unsigned char, unsigned char*, unsigned short, Articulation::State_e, unsigned char)+0x1ca>
 802beca:	212f      	movs	r1, #47	; 0x2f
 802becc:	4830      	ldr	r0, [pc, #192]	; (802bf90 <TaskManager::startTask(COMM_source_t, unsigned char, unsigned char*, unsigned short, Articulation::State_e, unsigned char)+0x230>)
 802bece:	f013 fa46 	bl	803f35e <strrchr>
 802bed2:	1c41      	adds	r1, r0, #1
 802bed4:	4b34      	ldr	r3, [pc, #208]	; (802bfa8 <TaskManager::startTask(COMM_source_t, unsigned char, unsigned char*, unsigned short, Articulation::State_e, unsigned char)+0x248>)
 802bed6:	f44f 72f5 	mov.w	r2, #490	; 0x1ea
 802beda:	2001      	movs	r0, #1
 802bedc:	f7f6 fc5c 	bl	8022798 <DEBUG_logMsg>
 802bee0:	e76b      	b.n	802bdba <TaskManager::startTask(COMM_source_t, unsigned char, unsigned char*, unsigned short, Articulation::State_e, unsigned char)+0x5a>
 802bee2:	492b      	ldr	r1, [pc, #172]	; (802bf90 <TaskManager::startTask(COMM_source_t, unsigned char, unsigned char*, unsigned short, Articulation::State_e, unsigned char)+0x230>)
 802bee4:	e7ae      	b.n	802be44 <TaskManager::startTask(COMM_source_t, unsigned char, unsigned char*, unsigned short, Articulation::State_e, unsigned char)+0xe4>
 802bee6:	7c22      	ldrb	r2, [r4, #16]
 802bee8:	4b30      	ldr	r3, [pc, #192]	; (802bfac <TaskManager::startTask(COMM_source_t, unsigned char, unsigned char*, unsigned short, Articulation::State_e, unsigned char)+0x24c>)
 802beea:	4d31      	ldr	r5, [pc, #196]	; (802bfb0 <TaskManager::startTask(COMM_source_t, unsigned char, unsigned char*, unsigned short, Articulation::State_e, unsigned char)+0x250>)
 802beec:	454a      	cmp	r2, r9
 802beee:	bf96      	itet	ls
 802bef0:	461d      	movls	r5, r3
 802bef2:	2406      	movhi	r4, #6
 802bef4:	2405      	movls	r4, #5
 802bef6:	e79b      	b.n	802be30 <TaskManager::startTask(COMM_source_t, unsigned char, unsigned char*, unsigned short, Articulation::State_e, unsigned char)+0xd0>
 802bef8:	4825      	ldr	r0, [pc, #148]	; (802bf90 <TaskManager::startTask(COMM_source_t, unsigned char, unsigned char*, unsigned short, Articulation::State_e, unsigned char)+0x230>)
 802befa:	212f      	movs	r1, #47	; 0x2f
 802befc:	f013 fa2f 	bl	803f35e <strrchr>
 802bf00:	b358      	cbz	r0, 802bf5a <TaskManager::startTask(COMM_source_t, unsigned char, unsigned char*, unsigned short, Articulation::State_e, unsigned char)+0x1fa>
 802bf02:	212f      	movs	r1, #47	; 0x2f
 802bf04:	4822      	ldr	r0, [pc, #136]	; (802bf90 <TaskManager::startTask(COMM_source_t, unsigned char, unsigned char*, unsigned short, Articulation::State_e, unsigned char)+0x230>)
 802bf06:	f013 fa2a 	bl	803f35e <strrchr>
 802bf0a:	1c41      	adds	r1, r0, #1
 802bf0c:	9b03      	ldr	r3, [sp, #12]
 802bf0e:	9300      	str	r3, [sp, #0]
 802bf10:	f240 2222 	movw	r2, #546	; 0x222
 802bf14:	4b27      	ldr	r3, [pc, #156]	; (802bfb4 <TaskManager::startTask(COMM_source_t, unsigned char, unsigned char*, unsigned short, Articulation::State_e, unsigned char)+0x254>)
 802bf16:	4d22      	ldr	r5, [pc, #136]	; (802bfa0 <TaskManager::startTask(COMM_source_t, unsigned char, unsigned char*, unsigned short, Articulation::State_e, unsigned char)+0x240>)
 802bf18:	2000      	movs	r0, #0
 802bf1a:	f7f6 fc3d 	bl	8022798 <DEBUG_logMsg>
 802bf1e:	2403      	movs	r4, #3
 802bf20:	e786      	b.n	802be30 <TaskManager::startTask(COMM_source_t, unsigned char, unsigned char*, unsigned short, Articulation::State_e, unsigned char)+0xd0>
 802bf22:	2300      	movs	r3, #0
 802bf24:	4d24      	ldr	r5, [pc, #144]	; (802bfb8 <TaskManager::startTask(COMM_source_t, unsigned char, unsigned char*, unsigned short, Articulation::State_e, unsigned char)+0x258>)
 802bf26:	723b      	strb	r3, [r7, #8]
 802bf28:	e782      	b.n	802be30 <TaskManager::startTask(COMM_source_t, unsigned char, unsigned char*, unsigned short, Articulation::State_e, unsigned char)+0xd0>
 802bf2a:	4819      	ldr	r0, [pc, #100]	; (802bf90 <TaskManager::startTask(COMM_source_t, unsigned char, unsigned char*, unsigned short, Articulation::State_e, unsigned char)+0x230>)
 802bf2c:	215c      	movs	r1, #92	; 0x5c
 802bf2e:	f013 fa16 	bl	803f35e <strrchr>
 802bf32:	b128      	cbz	r0, 802bf40 <TaskManager::startTask(COMM_source_t, unsigned char, unsigned char*, unsigned short, Articulation::State_e, unsigned char)+0x1e0>
 802bf34:	215c      	movs	r1, #92	; 0x5c
 802bf36:	4816      	ldr	r0, [pc, #88]	; (802bf90 <TaskManager::startTask(COMM_source_t, unsigned char, unsigned char*, unsigned short, Articulation::State_e, unsigned char)+0x230>)
 802bf38:	f013 fa11 	bl	803f35e <strrchr>
 802bf3c:	1c41      	adds	r1, r0, #1
 802bf3e:	e7c9      	b.n	802bed4 <TaskManager::startTask(COMM_source_t, unsigned char, unsigned char*, unsigned short, Articulation::State_e, unsigned char)+0x174>
 802bf40:	4913      	ldr	r1, [pc, #76]	; (802bf90 <TaskManager::startTask(COMM_source_t, unsigned char, unsigned char*, unsigned short, Articulation::State_e, unsigned char)+0x230>)
 802bf42:	e7c7      	b.n	802bed4 <TaskManager::startTask(COMM_source_t, unsigned char, unsigned char*, unsigned short, Articulation::State_e, unsigned char)+0x174>
 802bf44:	4812      	ldr	r0, [pc, #72]	; (802bf90 <TaskManager::startTask(COMM_source_t, unsigned char, unsigned char*, unsigned short, Articulation::State_e, unsigned char)+0x230>)
 802bf46:	215c      	movs	r1, #92	; 0x5c
 802bf48:	f013 fa09 	bl	803f35e <strrchr>
 802bf4c:	b1a8      	cbz	r0, 802bf7a <TaskManager::startTask(COMM_source_t, unsigned char, unsigned char*, unsigned short, Articulation::State_e, unsigned char)+0x21a>
 802bf4e:	215c      	movs	r1, #92	; 0x5c
 802bf50:	480f      	ldr	r0, [pc, #60]	; (802bf90 <TaskManager::startTask(COMM_source_t, unsigned char, unsigned char*, unsigned short, Articulation::State_e, unsigned char)+0x230>)
 802bf52:	f013 fa04 	bl	803f35e <strrchr>
 802bf56:	1c41      	adds	r1, r0, #1
 802bf58:	e794      	b.n	802be84 <TaskManager::startTask(COMM_source_t, unsigned char, unsigned char*, unsigned short, Articulation::State_e, unsigned char)+0x124>
 802bf5a:	480d      	ldr	r0, [pc, #52]	; (802bf90 <TaskManager::startTask(COMM_source_t, unsigned char, unsigned char*, unsigned short, Articulation::State_e, unsigned char)+0x230>)
 802bf5c:	215c      	movs	r1, #92	; 0x5c
 802bf5e:	f013 f9fe 	bl	803f35e <strrchr>
 802bf62:	b140      	cbz	r0, 802bf76 <TaskManager::startTask(COMM_source_t, unsigned char, unsigned char*, unsigned short, Articulation::State_e, unsigned char)+0x216>
 802bf64:	215c      	movs	r1, #92	; 0x5c
 802bf66:	480a      	ldr	r0, [pc, #40]	; (802bf90 <TaskManager::startTask(COMM_source_t, unsigned char, unsigned char*, unsigned short, Articulation::State_e, unsigned char)+0x230>)
 802bf68:	f013 f9f9 	bl	803f35e <strrchr>
 802bf6c:	1c41      	adds	r1, r0, #1
 802bf6e:	e7cd      	b.n	802bf0c <TaskManager::startTask(COMM_source_t, unsigned char, unsigned char*, unsigned short, Articulation::State_e, unsigned char)+0x1ac>
 802bf70:	4d0f      	ldr	r5, [pc, #60]	; (802bfb0 <TaskManager::startTask(COMM_source_t, unsigned char, unsigned char*, unsigned short, Articulation::State_e, unsigned char)+0x250>)
 802bf72:	2406      	movs	r4, #6
 802bf74:	e75c      	b.n	802be30 <TaskManager::startTask(COMM_source_t, unsigned char, unsigned char*, unsigned short, Articulation::State_e, unsigned char)+0xd0>
 802bf76:	4906      	ldr	r1, [pc, #24]	; (802bf90 <TaskManager::startTask(COMM_source_t, unsigned char, unsigned char*, unsigned short, Articulation::State_e, unsigned char)+0x230>)
 802bf78:	e7c8      	b.n	802bf0c <TaskManager::startTask(COMM_source_t, unsigned char, unsigned char*, unsigned short, Articulation::State_e, unsigned char)+0x1ac>
 802bf7a:	4905      	ldr	r1, [pc, #20]	; (802bf90 <TaskManager::startTask(COMM_source_t, unsigned char, unsigned char*, unsigned short, Articulation::State_e, unsigned char)+0x230>)
 802bf7c:	e782      	b.n	802be84 <TaskManager::startTask(COMM_source_t, unsigned char, unsigned char*, unsigned short, Articulation::State_e, unsigned char)+0x124>
 802bf7e:	bf00      	nop
 802bf80:	080467dc 	.word	0x080467dc
 802bf84:	2000e480 	.word	0x2000e480
 802bf88:	08046588 	.word	0x08046588
 802bf8c:	080465d0 	.word	0x080465d0
 802bf90:	0804653c 	.word	0x0804653c
 802bf94:	08046678 	.word	0x08046678
 802bf98:	2000e481 	.word	0x2000e481
 802bf9c:	080443f0 	.word	0x080443f0
 802bfa0:	080465b0 	.word	0x080465b0
 802bfa4:	080465ec 	.word	0x080465ec
 802bfa8:	08046644 	.word	0x08046644
 802bfac:	08046624 	.word	0x08046624
 802bfb0:	08046604 	.word	0x08046604
 802bfb4:	08046658 	.word	0x08046658
 802bfb8:	0804659c 	.word	0x0804659c

0802bfbc <TaskManager::runTask(unsigned int)>:
 802bfbc:	b538      	push	{r3, r4, r5, lr}
 802bfbe:	f851 3b09 	ldr.w	r3, [r1], #9
 802bfc2:	4604      	mov	r4, r0
 802bfc4:	689d      	ldr	r5, [r3, #8]
 802bfc6:	2300      	movs	r3, #0
 802bfc8:	47a8      	blx	r5
 802bfca:	4620      	mov	r0, r4
 802bfcc:	bd38      	pop	{r3, r4, r5, pc}
 802bfce:	bf00      	nop

0802bfd0 <TaskManager::getTask()>:
 802bfd0:	6800      	ldr	r0, [r0, #0]
 802bfd2:	4770      	bx	lr

0802bfd4 <TaskManager::getLastTask()>:
 802bfd4:	6840      	ldr	r0, [r0, #4]
 802bfd6:	4770      	bx	lr

0802bfd8 <TaskManager::getLastTaskPayload()>:
 802bfd8:	301e      	adds	r0, #30
 802bfda:	4770      	bx	lr

0802bfdc <TaskManager::isTaskActive()>:
 802bfdc:	7a00      	ldrb	r0, [r0, #8]
 802bfde:	f1a0 0001 	sub.w	r0, r0, #1
 802bfe2:	fab0 f080 	clz	r0, r0
 802bfe6:	0940      	lsrs	r0, r0, #5
 802bfe8:	4770      	bx	lr
 802bfea:	bf00      	nop

0802bfec <POWERMODE_mainStateMachine(unsigned long)>:
 802bfec:	b570      	push	{r4, r5, r6, lr}
 802bfee:	2100      	movs	r1, #0
 802bff0:	b08c      	sub	sp, #48	; 0x30
 802bff2:	4d3f      	ldr	r5, [pc, #252]	; (802c0f0 <POWERMODE_mainStateMachine(unsigned long)+0x104>)
 802bff4:	4604      	mov	r4, r0
 802bff6:	f7ff fe69 	bl	802bccc <TaskStatus::TaskStatus(TaskStatus::Result_e)>
 802bffa:	4a3e      	ldr	r2, [pc, #248]	; (802c0f4 <POWERMODE_mainStateMachine(unsigned long)+0x108>)
 802bffc:	782b      	ldrb	r3, [r5, #0]
 802bffe:	8811      	ldrh	r1, [r2, #0]
 802c000:	8892      	ldrh	r2, [r2, #4]
 802c002:	f8ad 1014 	strh.w	r1, [sp, #20]
 802c006:	f8ad 2018 	strh.w	r2, [sp, #24]
 802c00a:	2b06      	cmp	r3, #6
 802c00c:	d86d      	bhi.n	802c0ea <POWERMODE_mainStateMachine(unsigned long)+0xfe>
 802c00e:	e8df f003 	tbb	[pc, r3]
 802c012:	2112      	.short	0x2112
 802c014:	5f5d4d3c 	.word	0x5f5d4d3c
 802c018:	04          	.byte	0x04
 802c019:	00          	.byte	0x00
 802c01a:	4b37      	ldr	r3, [pc, #220]	; (802c0f8 <POWERMODE_mainStateMachine(unsigned long)+0x10c>)
 802c01c:	4837      	ldr	r0, [pc, #220]	; (802c0fc <POWERMODE_mainStateMachine(unsigned long)+0x110>)
 802c01e:	6819      	ldr	r1, [r3, #0]
 802c020:	f7f6 fd4c 	bl	8022abc <Robot::updateArticulation(Articulation::State_e)>
 802c024:	4832      	ldr	r0, [pc, #200]	; (802c0f0 <POWERMODE_mainStateMachine(unsigned long)+0x104>)
 802c026:	2101      	movs	r1, #1
 802c028:	f7fc f96a 	bl	8028300 <SM_RUNNER_setComplete>
 802c02c:	2301      	movs	r3, #1
 802c02e:	7023      	strb	r3, [r4, #0]
 802c030:	4620      	mov	r0, r4
 802c032:	b00c      	add	sp, #48	; 0x30
 802c034:	bd70      	pop	{r4, r5, r6, pc}
 802c036:	2301      	movs	r3, #1
 802c038:	78a9      	ldrb	r1, [r5, #2]
 802c03a:	9300      	str	r3, [sp, #0]
 802c03c:	a80a      	add	r0, sp, #40	; 0x28
 802c03e:	2302      	movs	r3, #2
 802c040:	aa05      	add	r2, sp, #20
 802c042:	f7fb fd55 	bl	8027af0 <ACTIONS_powerList(bool, ROBOT_axisIndex_t const*, unsigned char, AXIS_powerState_t)>
 802c046:	a90a      	add	r1, sp, #40	; 0x28
 802c048:	4620      	mov	r0, r4
 802c04a:	f7ff fe55 	bl	802bcf8 <TaskStatus::operator=(TaskStatus const&)>
 802c04e:	4620      	mov	r0, r4
 802c050:	b00c      	add	sp, #48	; 0x30
 802c052:	bd70      	pop	{r4, r5, r6, pc}
 802c054:	4b2a      	ldr	r3, [pc, #168]	; (802c100 <POWERMODE_mainStateMachine(unsigned long)+0x114>)
 802c056:	e893 0003 	ldmia.w	r3, {r0, r1}
 802c05a:	ab08      	add	r3, sp, #32
 802c05c:	e883 0003 	stmia.w	r3, {r0, r1}
 802c060:	2600      	movs	r6, #0
 802c062:	aa07      	add	r2, sp, #28
 802c064:	2002      	movs	r0, #2
 802c066:	e9cd 2000 	strd	r2, r0, [sp]
 802c06a:	78a9      	ldrb	r1, [r5, #2]
 802c06c:	f8ad 601c 	strh.w	r6, [sp, #28]
 802c070:	a80a      	add	r0, sp, #40	; 0x28
 802c072:	aa06      	add	r2, sp, #24
 802c074:	e9cd 6602 	strd	r6, r6, [sp, #8]
 802c078:	f7fb fcb0 	bl	80279dc <ACTIONS_moveList(bool, ROBOT_axisIndex_t const*, float*, AXIS_moveType_t*, unsigned char, unsigned int, AXIS_mode_t)>
 802c07c:	a90a      	add	r1, sp, #40	; 0x28
 802c07e:	4620      	mov	r0, r4
 802c080:	f7ff fe3a 	bl	802bcf8 <TaskStatus::operator=(TaskStatus const&)>
 802c084:	4620      	mov	r0, r4
 802c086:	b00c      	add	sp, #48	; 0x30
 802c088:	bd70      	pop	{r4, r5, r6, pc}
 802c08a:	4b1e      	ldr	r3, [pc, #120]	; (802c104 <POWERMODE_mainStateMachine(unsigned long)+0x118>)
 802c08c:	78a9      	ldrb	r1, [r5, #2]
 802c08e:	ed93 0a00 	vldr	s0, [r3]
 802c092:	2300      	movs	r3, #0
 802c094:	a80a      	add	r0, sp, #40	; 0x28
 802c096:	9300      	str	r3, [sp, #0]
 802c098:	221b      	movs	r2, #27
 802c09a:	f7fb fbb5 	bl	8027808 <ACTIONS_move(bool, ROBOT_axisIndex_t, float, AXIS_moveType_t, AXIS_mode_t)>
 802c09e:	a90a      	add	r1, sp, #40	; 0x28
 802c0a0:	4620      	mov	r0, r4
 802c0a2:	f7ff fe29 	bl	802bcf8 <TaskStatus::operator=(TaskStatus const&)>
 802c0a6:	4620      	mov	r0, r4
 802c0a8:	b00c      	add	sp, #48	; 0x30
 802c0aa:	bd70      	pop	{r4, r5, r6, pc}
 802c0ac:	2300      	movs	r3, #0
 802c0ae:	78a9      	ldrb	r1, [r5, #2]
 802c0b0:	ed9f 0a15 	vldr	s0, [pc, #84]	; 802c108 <POWERMODE_mainStateMachine(unsigned long)+0x11c>
 802c0b4:	9300      	str	r3, [sp, #0]
 802c0b6:	a80a      	add	r0, sp, #40	; 0x28
 802c0b8:	220f      	movs	r2, #15
 802c0ba:	f7fb fba5 	bl	8027808 <ACTIONS_move(bool, ROBOT_axisIndex_t, float, AXIS_moveType_t, AXIS_mode_t)>
 802c0be:	a90a      	add	r1, sp, #40	; 0x28
 802c0c0:	4620      	mov	r0, r4
 802c0c2:	f7ff fe19 	bl	802bcf8 <TaskStatus::operator=(TaskStatus const&)>
 802c0c6:	4620      	mov	r0, r4
 802c0c8:	b00c      	add	sp, #48	; 0x30
 802c0ca:	bd70      	pop	{r4, r5, r6, pc}
 802c0cc:	2300      	movs	r3, #0
 802c0ce:	e7b3      	b.n	802c038 <POWERMODE_mainStateMachine(unsigned long)+0x4c>
 802c0d0:	78a9      	ldrb	r1, [r5, #2]
 802c0d2:	a80a      	add	r0, sp, #40	; 0x28
 802c0d4:	2300      	movs	r3, #0
 802c0d6:	220f      	movs	r2, #15
 802c0d8:	f7fb fcb8 	bl	8027a4c <ACTIONS_power(bool, ROBOT_axisIndex_t, AXIS_powerState_t)>
 802c0dc:	a90a      	add	r1, sp, #40	; 0x28
 802c0de:	4620      	mov	r0, r4
 802c0e0:	f7ff fe0a 	bl	802bcf8 <TaskStatus::operator=(TaskStatus const&)>
 802c0e4:	4620      	mov	r0, r4
 802c0e6:	b00c      	add	sp, #48	; 0x30
 802c0e8:	bd70      	pop	{r4, r5, r6, pc}
 802c0ea:	2302      	movs	r3, #2
 802c0ec:	7023      	strb	r3, [r4, #0]
 802c0ee:	e79f      	b.n	802c030 <POWERMODE_mainStateMachine(unsigned long)+0x44>
 802c0f0:	200050c4 	.word	0x200050c4
 802c0f4:	08046a88 	.word	0x08046a88
 802c0f8:	200050c0 	.word	0x200050c0
 802c0fc:	2000f630 	.word	0x2000f630
 802c100:	08046a90 	.word	0x08046a90
 802c104:	20000078 	.word	0x20000078
 802c108:	42a00000 	.word	0x42a00000

0802c10c <POWERMODE_setup()>:
 802c10c:	b510      	push	{r4, lr}
 802c10e:	4604      	mov	r4, r0
 802c110:	4810      	ldr	r0, [pc, #64]	; (802c154 <POWERMODE_setup()+0x48>)
 802c112:	f7f6 fdcb 	bl	8022cac <Robot::isInAttic()>
 802c116:	4b10      	ldr	r3, [pc, #64]	; (802c158 <POWERMODE_setup()+0x4c>)
 802c118:	781b      	ldrb	r3, [r3, #0]
 802c11a:	b963      	cbnz	r3, 802c136 <POWERMODE_setup()+0x2a>
 802c11c:	2800      	cmp	r0, #0
 802c11e:	4b0f      	ldr	r3, [pc, #60]	; (802c15c <POWERMODE_setup()+0x50>)
 802c120:	bf14      	ite	ne
 802c122:	f44f 7280 	movne.w	r2, #256	; 0x100
 802c126:	2202      	moveq	r2, #2
 802c128:	601a      	str	r2, [r3, #0]
 802c12a:	2101      	movs	r1, #1
 802c12c:	4620      	mov	r0, r4
 802c12e:	f7ff fdcd 	bl	802bccc <TaskStatus::TaskStatus(TaskStatus::Result_e)>
 802c132:	4620      	mov	r0, r4
 802c134:	bd10      	pop	{r4, pc}
 802c136:	2b02      	cmp	r3, #2
 802c138:	d1f7      	bne.n	802c12a <POWERMODE_setup()+0x1e>
 802c13a:	2800      	cmp	r0, #0
 802c13c:	4b07      	ldr	r3, [pc, #28]	; (802c15c <POWERMODE_setup()+0x50>)
 802c13e:	bf14      	ite	ne
 802c140:	f44f 6200 	movne.w	r2, #2048	; 0x800
 802c144:	2210      	moveq	r2, #16
 802c146:	2101      	movs	r1, #1
 802c148:	4620      	mov	r0, r4
 802c14a:	601a      	str	r2, [r3, #0]
 802c14c:	f7ff fdbe 	bl	802bccc <TaskStatus::TaskStatus(TaskStatus::Result_e)>
 802c150:	4620      	mov	r0, r4
 802c152:	bd10      	pop	{r4, pc}
 802c154:	2000f630 	.word	0x2000f630
 802c158:	200050d8 	.word	0x200050d8
 802c15c:	200050c0 	.word	0x200050c0

0802c160 <POWERMODE_runTask(void*, unsigned long, bool)>:
 802c160:	b5f0      	push	{r4, r5, r6, r7, lr}
 802c162:	461c      	mov	r4, r3
 802c164:	b085      	sub	sp, #20
 802c166:	4613      	mov	r3, r2
 802c168:	b184      	cbz	r4, 802c18c <POWERMODE_runTask(void*, unsigned long, bool)+0x2c>
 802c16a:	780a      	ldrb	r2, [r1, #0]
 802c16c:	4f0c      	ldr	r7, [pc, #48]	; (802c1a0 <POWERMODE_runTask(void*, unsigned long, bool)+0x40>)
 802c16e:	490d      	ldr	r1, [pc, #52]	; (802c1a4 <POWERMODE_runTask(void*, unsigned long, bool)+0x44>)
 802c170:	4d0d      	ldr	r5, [pc, #52]	; (802c1a8 <POWERMODE_runTask(void*, unsigned long, bool)+0x48>)
 802c172:	4e0e      	ldr	r6, [pc, #56]	; (802c1ac <POWERMODE_runTask(void*, unsigned long, bool)+0x4c>)
 802c174:	702a      	strb	r2, [r5, #0]
 802c176:	2a00      	cmp	r2, #0
 802c178:	bf18      	it	ne
 802c17a:	4639      	movne	r1, r7
 802c17c:	f1a2 0203 	sub.w	r2, r2, #3
 802c180:	60f1      	str	r1, [r6, #12]
 802c182:	fab2 f282 	clz	r2, r2
 802c186:	490a      	ldr	r1, [pc, #40]	; (802c1b0 <POWERMODE_runTask(void*, unsigned long, bool)+0x50>)
 802c188:	0952      	lsrs	r2, r2, #5
 802c18a:	700a      	strb	r2, [r1, #0]
 802c18c:	4a09      	ldr	r2, [pc, #36]	; (802c1b4 <POWERMODE_runTask(void*, unsigned long, bool)+0x54>)
 802c18e:	4907      	ldr	r1, [pc, #28]	; (802c1ac <POWERMODE_runTask(void*, unsigned long, bool)+0x4c>)
 802c190:	9400      	str	r4, [sp, #0]
 802c192:	9003      	str	r0, [sp, #12]
 802c194:	f7fb fec2 	bl	8027f1c <SM_RUNNER_runStateMachine>
 802c198:	9803      	ldr	r0, [sp, #12]
 802c19a:	b005      	add	sp, #20
 802c19c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 802c19e:	bf00      	nop
 802c1a0:	20001da4 	.word	0x20001da4
 802c1a4:	20001d54 	.word	0x20001d54
 802c1a8:	200050d8 	.word	0x200050d8
 802c1ac:	20001de4 	.word	0x20001de4
 802c1b0:	2000e482 	.word	0x2000e482
 802c1b4:	200050c4 	.word	0x200050c4

0802c1b8 <UPGRADER_metadataMainStateMachine(unsigned long)>:
 802c1b8:	b5f0      	push	{r4, r5, r6, r7, lr}
 802c1ba:	4e1a      	ldr	r6, [pc, #104]	; (802c224 <UPGRADER_metadataMainStateMachine(unsigned long)+0x6c>)
 802c1bc:	b083      	sub	sp, #12
 802c1be:	2100      	movs	r1, #0
 802c1c0:	4604      	mov	r4, r0
 802c1c2:	f7ff fd83 	bl	802bccc <TaskStatus::TaskStatus(TaskStatus::Result_e)>
 802c1c6:	7835      	ldrb	r5, [r6, #0]
 802c1c8:	b1f5      	cbz	r5, 802c208 <UPGRADER_metadataMainStateMachine(unsigned long)+0x50>
 802c1ca:	2d01      	cmp	r5, #1
 802c1cc:	d117      	bne.n	802c1fe <UPGRADER_metadataMainStateMachine(unsigned long)+0x46>
 802c1ce:	4816      	ldr	r0, [pc, #88]	; (802c228 <UPGRADER_metadataMainStateMachine(unsigned long)+0x70>)
 802c1d0:	f006 fd8c 	bl	8032cec <UPG_MNGR_isRespReceived>
 802c1d4:	4607      	mov	r7, r0
 802c1d6:	b110      	cbz	r0, 802c1de <UPGRADER_metadataMainStateMachine(unsigned long)+0x26>
 802c1d8:	4620      	mov	r0, r4
 802c1da:	b003      	add	sp, #12
 802c1dc:	bdf0      	pop	{r4, r5, r6, r7, pc}
 802c1de:	4b13      	ldr	r3, [pc, #76]	; (802c22c <UPGRADER_metadataMainStateMachine(unsigned long)+0x74>)
 802c1e0:	6819      	ldr	r1, [r3, #0]
 802c1e2:	9101      	str	r1, [sp, #4]
 802c1e4:	f001 f8ac 	bl	802d340 <TIME_getTimeMsec>
 802c1e8:	9901      	ldr	r1, [sp, #4]
 802c1ea:	4602      	mov	r2, r0
 802c1ec:	4638      	mov	r0, r7
 802c1ee:	f006 ffd7 	bl	80331a0 <UPG_MNGR_submitTimeStamp>
 802c1f2:	f006 fe6b 	bl	8032ecc <UPG_MNGR_setStatusMetaDataSent>
 802c1f6:	4629      	mov	r1, r5
 802c1f8:	4630      	mov	r0, r6
 802c1fa:	f7fc f881 	bl	8028300 <SM_RUNNER_setComplete>
 802c1fe:	2301      	movs	r3, #1
 802c200:	7023      	strb	r3, [r4, #0]
 802c202:	4620      	mov	r0, r4
 802c204:	b003      	add	sp, #12
 802c206:	bdf0      	pop	{r4, r5, r6, r7, pc}
 802c208:	4807      	ldr	r0, [pc, #28]	; (802c228 <UPGRADER_metadataMainStateMachine(unsigned long)+0x70>)
 802c20a:	f006 fc6f 	bl	8032aec <UPG_MNGR_sendMetaData>
 802c20e:	4606      	mov	r6, r0
 802c210:	f001 f896 	bl	802d340 <TIME_getTimeMsec>
 802c214:	4b05      	ldr	r3, [pc, #20]	; (802c22c <UPGRADER_metadataMainStateMachine(unsigned long)+0x74>)
 802c216:	e9c3 0500 	strd	r0, r5, [r3]
 802c21a:	2e00      	cmp	r6, #0
 802c21c:	d1dc      	bne.n	802c1d8 <UPGRADER_metadataMainStateMachine(unsigned long)+0x20>
 802c21e:	2301      	movs	r3, #1
 802c220:	7023      	strb	r3, [r4, #0]
 802c222:	e7ee      	b.n	802c202 <UPGRADER_metadataMainStateMachine(unsigned long)+0x4a>
 802c224:	200050e0 	.word	0x200050e0
 802c228:	200050dc 	.word	0x200050dc
 802c22c:	200050f8 	.word	0x200050f8

0802c230 <UPGRADER_runTaskCcpCmdMetaData(void*, unsigned long, bool)>:
 802c230:	b5f0      	push	{r4, r5, r6, r7, lr}
 802c232:	b087      	sub	sp, #28
 802c234:	461d      	mov	r5, r3
 802c236:	4604      	mov	r4, r0
 802c238:	460e      	mov	r6, r1
 802c23a:	a802      	add	r0, sp, #8
 802c23c:	2101      	movs	r1, #1
 802c23e:	4617      	mov	r7, r2
 802c240:	f7ff fd44 	bl	802bccc <TaskStatus::TaskStatus(TaskStatus::Result_e)>
 802c244:	b125      	cbz	r5, 802c250 <UPGRADER_runTaskCcpCmdMetaData(void*, unsigned long, bool)+0x20>
 802c246:	b1ae      	cbz	r6, 802c274 <UPGRADER_runTaskCcpCmdMetaData(void*, unsigned long, bool)+0x44>
 802c248:	4630      	mov	r0, r6
 802c24a:	f006 fba9 	bl	80329a0 <UPG_MNGR_confirmMetaData>
 802c24e:	b9c8      	cbnz	r0, 802c284 <UPGRADER_runTaskCcpCmdMetaData(void*, unsigned long, bool)+0x54>
 802c250:	4a10      	ldr	r2, [pc, #64]	; (802c294 <UPGRADER_runTaskCcpCmdMetaData(void*, unsigned long, bool)+0x64>)
 802c252:	4911      	ldr	r1, [pc, #68]	; (802c298 <UPGRADER_runTaskCcpCmdMetaData(void*, unsigned long, bool)+0x68>)
 802c254:	9500      	str	r5, [sp, #0]
 802c256:	463b      	mov	r3, r7
 802c258:	a804      	add	r0, sp, #16
 802c25a:	f7fb fe5f 	bl	8027f1c <SM_RUNNER_runStateMachine>
 802c25e:	a904      	add	r1, sp, #16
 802c260:	a802      	add	r0, sp, #8
 802c262:	f7ff fd49 	bl	802bcf8 <TaskStatus::operator=(TaskStatus const&)>
 802c266:	a902      	add	r1, sp, #8
 802c268:	4620      	mov	r0, r4
 802c26a:	f7ff fd3d 	bl	802bce8 <TaskStatus::TaskStatus(TaskStatus const&)>
 802c26e:	4620      	mov	r0, r4
 802c270:	b007      	add	sp, #28
 802c272:	bdf0      	pop	{r4, r5, r6, r7, pc}
 802c274:	2209      	movs	r2, #9
 802c276:	2102      	movs	r1, #2
 802c278:	4620      	mov	r0, r4
 802c27a:	f7ff fd2d 	bl	802bcd8 <TaskStatus::TaskStatus(TaskStatus::Result_e, unsigned int)>
 802c27e:	4620      	mov	r0, r4
 802c280:	b007      	add	sp, #28
 802c282:	bdf0      	pop	{r4, r5, r6, r7, pc}
 802c284:	2102      	movs	r1, #2
 802c286:	4620      	mov	r0, r4
 802c288:	f7ff fd20 	bl	802bccc <TaskStatus::TaskStatus(TaskStatus::Result_e)>
 802c28c:	4620      	mov	r0, r4
 802c28e:	b007      	add	sp, #28
 802c290:	bdf0      	pop	{r4, r5, r6, r7, pc}
 802c292:	bf00      	nop
 802c294:	200050e0 	.word	0x200050e0
 802c298:	20001e24 	.word	0x20001e24

0802c29c <UPGRADER_startUpgradeMainStateMachine(unsigned long)>:
 802c29c:	b510      	push	{r4, lr}
 802c29e:	2100      	movs	r1, #0
 802c2a0:	4604      	mov	r4, r0
 802c2a2:	f7ff fd13 	bl	802bccc <TaskStatus::TaskStatus(TaskStatus::Result_e)>
 802c2a6:	4b2d      	ldr	r3, [pc, #180]	; (802c35c <UPGRADER_startUpgradeMainStateMachine(unsigned long)+0xc0>)
 802c2a8:	781b      	ldrb	r3, [r3, #0]
 802c2aa:	2b04      	cmp	r3, #4
 802c2ac:	d81f      	bhi.n	802c2ee <UPGRADER_startUpgradeMainStateMachine(unsigned long)+0x52>
 802c2ae:	e8df f003 	tbb	[pc, r3]
 802c2b2:	352f      	.short	0x352f
 802c2b4:	4203      	.short	0x4203
 802c2b6:	22          	.byte	0x22
 802c2b7:	00          	.byte	0x00
 802c2b8:	f006 fe72 	bl	8032fa0 <UPG_MNGR_confirmAppVersion>
 802c2bc:	f010 0ffb 	tst.w	r0, #251	; 0xfb
 802c2c0:	d015      	beq.n	802c2ee <UPGRADER_startUpgradeMainStateMachine(unsigned long)+0x52>
 802c2c2:	4b27      	ldr	r3, [pc, #156]	; (802c360 <UPGRADER_startUpgradeMainStateMachine(unsigned long)+0xc4>)
 802c2c4:	6818      	ldr	r0, [r3, #0]
 802c2c6:	f001 f83d 	bl	802d344 <TIME_getElapsedTimeMsec>
 802c2ca:	f5b0 6ffa 	cmp.w	r0, #2000	; 0x7d0
 802c2ce:	d910      	bls.n	802c2f2 <UPGRADER_startUpgradeMainStateMachine(unsigned long)+0x56>
 802c2d0:	4824      	ldr	r0, [pc, #144]	; (802c364 <UPGRADER_startUpgradeMainStateMachine(unsigned long)+0xc8>)
 802c2d2:	212f      	movs	r1, #47	; 0x2f
 802c2d4:	f013 f843 	bl	803f35e <strrchr>
 802c2d8:	b398      	cbz	r0, 802c342 <UPGRADER_startUpgradeMainStateMachine(unsigned long)+0xa6>
 802c2da:	212f      	movs	r1, #47	; 0x2f
 802c2dc:	4821      	ldr	r0, [pc, #132]	; (802c364 <UPGRADER_startUpgradeMainStateMachine(unsigned long)+0xc8>)
 802c2de:	f013 f83e 	bl	803f35e <strrchr>
 802c2e2:	1c41      	adds	r1, r0, #1
 802c2e4:	4b20      	ldr	r3, [pc, #128]	; (802c368 <UPGRADER_startUpgradeMainStateMachine(unsigned long)+0xcc>)
 802c2e6:	22ca      	movs	r2, #202	; 0xca
 802c2e8:	2001      	movs	r0, #1
 802c2ea:	f7f6 fa55 	bl	8022798 <DEBUG_logMsg>
 802c2ee:	2301      	movs	r3, #1
 802c2f0:	7023      	strb	r3, [r4, #0]
 802c2f2:	4620      	mov	r0, r4
 802c2f4:	bd10      	pop	{r4, pc}
 802c2f6:	4b1a      	ldr	r3, [pc, #104]	; (802c360 <UPGRADER_startUpgradeMainStateMachine(unsigned long)+0xc4>)
 802c2f8:	6818      	ldr	r0, [r3, #0]
 802c2fa:	f001 f823 	bl	802d344 <TIME_getElapsedTimeMsec>
 802c2fe:	f640 33b7 	movw	r3, #2999	; 0xbb7
 802c302:	4298      	cmp	r0, r3
 802c304:	d9f5      	bls.n	802c2f2 <UPGRADER_startUpgradeMainStateMachine(unsigned long)+0x56>
 802c306:	4815      	ldr	r0, [pc, #84]	; (802c35c <UPGRADER_startUpgradeMainStateMachine(unsigned long)+0xc0>)
 802c308:	2101      	movs	r1, #1
 802c30a:	f7fb fff9 	bl	8028300 <SM_RUNNER_setComplete>
 802c30e:	e7ee      	b.n	802c2ee <UPGRADER_startUpgradeMainStateMachine(unsigned long)+0x52>
 802c310:	f006 fb22 	bl	8032958 <UPG_MNGR_prepareForUpgrade>
 802c314:	2800      	cmp	r0, #0
 802c316:	d0ea      	beq.n	802c2ee <UPGRADER_startUpgradeMainStateMachine(unsigned long)+0x52>
 802c318:	4620      	mov	r0, r4
 802c31a:	bd10      	pop	{r4, pc}
 802c31c:	200f      	movs	r0, #15
 802c31e:	f006 fb39 	bl	8032994 <UPG_MNGR_updateTargetDevicePorts>
 802c322:	f006 fdeb 	bl	8032efc <UPG_MNGR_requestAppVersion>
 802c326:	f010 0ffb 	tst.w	r0, #251	; 0xfb
 802c32a:	d1e2      	bne.n	802c2f2 <UPGRADER_startUpgradeMainStateMachine(unsigned long)+0x56>
 802c32c:	f001 f808 	bl	802d340 <TIME_getTimeMsec>
 802c330:	4b0b      	ldr	r3, [pc, #44]	; (802c360 <UPGRADER_startUpgradeMainStateMachine(unsigned long)+0xc4>)
 802c332:	6018      	str	r0, [r3, #0]
 802c334:	e7db      	b.n	802c2ee <UPGRADER_startUpgradeMainStateMachine(unsigned long)+0x52>
 802c336:	f006 fbaf 	bl	8032a98 <UPG_MNGR_getItEnterUpgradeMode>
 802c33a:	2800      	cmp	r0, #0
 802c33c:	d0f6      	beq.n	802c32c <UPGRADER_startUpgradeMainStateMachine(unsigned long)+0x90>
 802c33e:	4620      	mov	r0, r4
 802c340:	bd10      	pop	{r4, pc}
 802c342:	4808      	ldr	r0, [pc, #32]	; (802c364 <UPGRADER_startUpgradeMainStateMachine(unsigned long)+0xc8>)
 802c344:	215c      	movs	r1, #92	; 0x5c
 802c346:	f013 f80a 	bl	803f35e <strrchr>
 802c34a:	b128      	cbz	r0, 802c358 <UPGRADER_startUpgradeMainStateMachine(unsigned long)+0xbc>
 802c34c:	215c      	movs	r1, #92	; 0x5c
 802c34e:	4805      	ldr	r0, [pc, #20]	; (802c364 <UPGRADER_startUpgradeMainStateMachine(unsigned long)+0xc8>)
 802c350:	f013 f805 	bl	803f35e <strrchr>
 802c354:	1c41      	adds	r1, r0, #1
 802c356:	e7c5      	b.n	802c2e4 <UPGRADER_startUpgradeMainStateMachine(unsigned long)+0x48>
 802c358:	4902      	ldr	r1, [pc, #8]	; (802c364 <UPGRADER_startUpgradeMainStateMachine(unsigned long)+0xc8>)
 802c35a:	e7c3      	b.n	802c2e4 <UPGRADER_startUpgradeMainStateMachine(unsigned long)+0x48>
 802c35c:	20005104 	.word	0x20005104
 802c360:	20005100 	.word	0x20005100
 802c364:	08046ae0 	.word	0x08046ae0
 802c368:	08046b38 	.word	0x08046b38

0802c36c <UPGRADER_runTaskCcpCmdStartUpgrade(void*, unsigned long, bool)>:
 802c36c:	b5f0      	push	{r4, r5, r6, r7, lr}
 802c36e:	b087      	sub	sp, #28
 802c370:	461d      	mov	r5, r3
 802c372:	4604      	mov	r4, r0
 802c374:	460e      	mov	r6, r1
 802c376:	a802      	add	r0, sp, #8
 802c378:	2101      	movs	r1, #1
 802c37a:	4617      	mov	r7, r2
 802c37c:	f7ff fca6 	bl	802bccc <TaskStatus::TaskStatus(TaskStatus::Result_e)>
 802c380:	b1ad      	cbz	r5, 802c3ae <UPGRADER_runTaskCcpCmdStartUpgrade(void*, unsigned long, bool)+0x42>
 802c382:	b37e      	cbz	r6, 802c3e4 <UPGRADER_runTaskCcpCmdStartUpgrade(void*, unsigned long, bool)+0x78>
 802c384:	7830      	ldrb	r0, [r6, #0]
 802c386:	b108      	cbz	r0, 802c38c <UPGRADER_runTaskCcpCmdStartUpgrade(void*, unsigned long, bool)+0x20>
 802c388:	2803      	cmp	r0, #3
 802c38a:	d122      	bne.n	802c3d2 <UPGRADER_runTaskCcpCmdStartUpgrade(void*, unsigned long, bool)+0x66>
 802c38c:	f44f 4100 	mov.w	r1, #32768	; 0x8000
 802c390:	4818      	ldr	r0, [pc, #96]	; (802c3f4 <UPGRADER_runTaskCcpCmdStartUpgrade(void*, unsigned long, bool)+0x88>)
 802c392:	f7f6 fb93 	bl	8022abc <Robot::updateArticulation(Articulation::State_e)>
 802c396:	2101      	movs	r1, #1
 802c398:	4620      	mov	r0, r4
 802c39a:	f7ff fc97 	bl	802bccc <TaskStatus::TaskStatus(TaskStatus::Result_e)>
 802c39e:	4620      	mov	r0, r4
 802c3a0:	b007      	add	sp, #28
 802c3a2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 802c3a4:	4813      	ldr	r0, [pc, #76]	; (802c3f4 <UPGRADER_runTaskCcpCmdStartUpgrade(void*, unsigned long, bool)+0x88>)
 802c3a6:	f44f 4100 	mov.w	r1, #32768	; 0x8000
 802c3aa:	f7f6 fb87 	bl	8022abc <Robot::updateArticulation(Articulation::State_e)>
 802c3ae:	4a12      	ldr	r2, [pc, #72]	; (802c3f8 <UPGRADER_runTaskCcpCmdStartUpgrade(void*, unsigned long, bool)+0x8c>)
 802c3b0:	4912      	ldr	r1, [pc, #72]	; (802c3fc <UPGRADER_runTaskCcpCmdStartUpgrade(void*, unsigned long, bool)+0x90>)
 802c3b2:	9500      	str	r5, [sp, #0]
 802c3b4:	463b      	mov	r3, r7
 802c3b6:	a804      	add	r0, sp, #16
 802c3b8:	f7fb fdb0 	bl	8027f1c <SM_RUNNER_runStateMachine>
 802c3bc:	a904      	add	r1, sp, #16
 802c3be:	a802      	add	r0, sp, #8
 802c3c0:	f7ff fc9a 	bl	802bcf8 <TaskStatus::operator=(TaskStatus const&)>
 802c3c4:	a902      	add	r1, sp, #8
 802c3c6:	4620      	mov	r0, r4
 802c3c8:	f7ff fc8e 	bl	802bce8 <TaskStatus::TaskStatus(TaskStatus const&)>
 802c3cc:	4620      	mov	r0, r4
 802c3ce:	b007      	add	sp, #28
 802c3d0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 802c3d2:	f006 fa43 	bl	803285c <UPG_MNGR_initManager>
 802c3d6:	2800      	cmp	r0, #0
 802c3d8:	d0e4      	beq.n	802c3a4 <UPGRADER_runTaskCcpCmdStartUpgrade(void*, unsigned long, bool)+0x38>
 802c3da:	2102      	movs	r1, #2
 802c3dc:	4620      	mov	r0, r4
 802c3de:	f7ff fc75 	bl	802bccc <TaskStatus::TaskStatus(TaskStatus::Result_e)>
 802c3e2:	e7dc      	b.n	802c39e <UPGRADER_runTaskCcpCmdStartUpgrade(void*, unsigned long, bool)+0x32>
 802c3e4:	2209      	movs	r2, #9
 802c3e6:	2102      	movs	r1, #2
 802c3e8:	4620      	mov	r0, r4
 802c3ea:	f7ff fc75 	bl	802bcd8 <TaskStatus::TaskStatus(TaskStatus::Result_e, unsigned int)>
 802c3ee:	4620      	mov	r0, r4
 802c3f0:	b007      	add	sp, #28
 802c3f2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 802c3f4:	2000f630 	.word	0x2000f630
 802c3f8:	20005104 	.word	0x20005104
 802c3fc:	20001e94 	.word	0x20001e94

0802c400 <UPGRADER_verifyMainStateMachine(unsigned long)>:
 802c400:	b530      	push	{r4, r5, lr}
 802c402:	2100      	movs	r1, #0
 802c404:	b083      	sub	sp, #12
 802c406:	4604      	mov	r4, r0
 802c408:	f7ff fc60 	bl	802bccc <TaskStatus::TaskStatus(TaskStatus::Result_e)>
 802c40c:	4b60      	ldr	r3, [pc, #384]	; (802c590 <UPGRADER_verifyMainStateMachine(unsigned long)+0x190>)
 802c40e:	781b      	ldrb	r3, [r3, #0]
 802c410:	2b07      	cmp	r3, #7
 802c412:	d81a      	bhi.n	802c44a <UPGRADER_verifyMainStateMachine(unsigned long)+0x4a>
 802c414:	e8df f003 	tbb	[pc, r3]
 802c418:	594e3c2f 	.word	0x594e3c2f
 802c41c:	1e847b72 	.word	0x1e847b72
 802c420:	485c      	ldr	r0, [pc, #368]	; (802c594 <UPGRADER_verifyMainStateMachine(unsigned long)+0x194>)
 802c422:	212f      	movs	r1, #47	; 0x2f
 802c424:	f012 ff9b 	bl	803f35e <strrchr>
 802c428:	2800      	cmp	r0, #0
 802c42a:	f000 8096 	beq.w	802c55a <UPGRADER_verifyMainStateMachine(unsigned long)+0x15a>
 802c42e:	212f      	movs	r1, #47	; 0x2f
 802c430:	4858      	ldr	r0, [pc, #352]	; (802c594 <UPGRADER_verifyMainStateMachine(unsigned long)+0x194>)
 802c432:	f012 ff94 	bl	803f35e <strrchr>
 802c436:	1c41      	adds	r1, r0, #1
 802c438:	4b57      	ldr	r3, [pc, #348]	; (802c598 <UPGRADER_verifyMainStateMachine(unsigned long)+0x198>)
 802c43a:	22c9      	movs	r2, #201	; 0xc9
 802c43c:	2001      	movs	r0, #1
 802c43e:	f7f6 f9ab 	bl	8022798 <DEBUG_logMsg>
 802c442:	f000 ff7d 	bl	802d340 <TIME_getTimeMsec>
 802c446:	4b55      	ldr	r3, [pc, #340]	; (802c59c <UPGRADER_verifyMainStateMachine(unsigned long)+0x19c>)
 802c448:	6018      	str	r0, [r3, #0]
 802c44a:	2301      	movs	r3, #1
 802c44c:	7023      	strb	r3, [r4, #0]
 802c44e:	4620      	mov	r0, r4
 802c450:	b003      	add	sp, #12
 802c452:	bd30      	pop	{r4, r5, pc}
 802c454:	f006 fee0 	bl	8033218 <UPG_MNGR_printOutStatistics>
 802c458:	f006 fd48 	bl	8032eec <UPG_MNGR_setStatusUpgradeDone>
 802c45c:	f006 fa8e 	bl	803297c <UPG_MNGR_postProcessUpgrade>
 802c460:	2800      	cmp	r0, #0
 802c462:	d1f4      	bne.n	802c44e <UPGRADER_verifyMainStateMachine(unsigned long)+0x4e>
 802c464:	484a      	ldr	r0, [pc, #296]	; (802c590 <UPGRADER_verifyMainStateMachine(unsigned long)+0x190>)
 802c466:	2101      	movs	r1, #1
 802c468:	f7fb ff4a 	bl	8028300 <SM_RUNNER_setComplete>
 802c46c:	2101      	movs	r1, #1
 802c46e:	484c      	ldr	r0, [pc, #304]	; (802c5a0 <UPGRADER_verifyMainStateMachine(unsigned long)+0x1a0>)
 802c470:	f7f6 fb24 	bl	8022abc <Robot::updateArticulation(Articulation::State_e)>
 802c474:	e7e9      	b.n	802c44a <UPGRADER_verifyMainStateMachine(unsigned long)+0x4a>
 802c476:	484b      	ldr	r0, [pc, #300]	; (802c5a4 <UPGRADER_verifyMainStateMachine(unsigned long)+0x1a4>)
 802c478:	f006 fbbe 	bl	8032bf8 <UPG_MNGR_doFinalConfirm>
 802c47c:	4605      	mov	r5, r0
 802c47e:	f000 ff5f 	bl	802d340 <TIME_getTimeMsec>
 802c482:	4b49      	ldr	r3, [pc, #292]	; (802c5a8 <UPGRADER_verifyMainStateMachine(unsigned long)+0x1a8>)
 802c484:	6018      	str	r0, [r3, #0]
 802c486:	2d00      	cmp	r5, #0
 802c488:	d0df      	beq.n	802c44a <UPGRADER_verifyMainStateMachine(unsigned long)+0x4a>
 802c48a:	4620      	mov	r0, r4
 802c48c:	b003      	add	sp, #12
 802c48e:	bd30      	pop	{r4, r5, pc}
 802c490:	4844      	ldr	r0, [pc, #272]	; (802c5a4 <UPGRADER_verifyMainStateMachine(unsigned long)+0x1a4>)
 802c492:	f006 fc2b 	bl	8032cec <UPG_MNGR_isRespReceived>
 802c496:	2800      	cmp	r0, #0
 802c498:	d1d9      	bne.n	802c44e <UPGRADER_verifyMainStateMachine(unsigned long)+0x4e>
 802c49a:	4b43      	ldr	r3, [pc, #268]	; (802c5a8 <UPGRADER_verifyMainStateMachine(unsigned long)+0x1a8>)
 802c49c:	6819      	ldr	r1, [r3, #0]
 802c49e:	9101      	str	r1, [sp, #4]
 802c4a0:	f000 ff4e 	bl	802d340 <TIME_getTimeMsec>
 802c4a4:	9901      	ldr	r1, [sp, #4]
 802c4a6:	4602      	mov	r2, r0
 802c4a8:	2002      	movs	r0, #2
 802c4aa:	f006 fe79 	bl	80331a0 <UPG_MNGR_submitTimeStamp>
 802c4ae:	f006 fd15 	bl	8032edc <UPG_MNGR_setStatusFinalConfirmed>
 802c4b2:	e7ca      	b.n	802c44a <UPGRADER_verifyMainStateMachine(unsigned long)+0x4a>
 802c4b4:	483b      	ldr	r0, [pc, #236]	; (802c5a4 <UPGRADER_verifyMainStateMachine(unsigned long)+0x1a4>)
 802c4b6:	f006 fbcb 	bl	8032c50 <UPG_MNGR_activateNewImage>
 802c4ba:	4605      	mov	r5, r0
 802c4bc:	f000 ff40 	bl	802d340 <TIME_getTimeMsec>
 802c4c0:	4b39      	ldr	r3, [pc, #228]	; (802c5a8 <UPGRADER_verifyMainStateMachine(unsigned long)+0x1a8>)
 802c4c2:	6018      	str	r0, [r3, #0]
 802c4c4:	2d00      	cmp	r5, #0
 802c4c6:	d1e0      	bne.n	802c48a <UPGRADER_verifyMainStateMachine(unsigned long)+0x8a>
 802c4c8:	e7bf      	b.n	802c44a <UPGRADER_verifyMainStateMachine(unsigned long)+0x4a>
 802c4ca:	4836      	ldr	r0, [pc, #216]	; (802c5a4 <UPGRADER_verifyMainStateMachine(unsigned long)+0x1a4>)
 802c4cc:	f006 fc0e 	bl	8032cec <UPG_MNGR_isRespReceived>
 802c4d0:	2800      	cmp	r0, #0
 802c4d2:	d1bc      	bne.n	802c44e <UPGRADER_verifyMainStateMachine(unsigned long)+0x4e>
 802c4d4:	4b34      	ldr	r3, [pc, #208]	; (802c5a8 <UPGRADER_verifyMainStateMachine(unsigned long)+0x1a8>)
 802c4d6:	6819      	ldr	r1, [r3, #0]
 802c4d8:	9101      	str	r1, [sp, #4]
 802c4da:	f000 ff31 	bl	802d340 <TIME_getTimeMsec>
 802c4de:	9901      	ldr	r1, [sp, #4]
 802c4e0:	4602      	mov	r2, r0
 802c4e2:	2003      	movs	r0, #3
 802c4e4:	f006 fe5c 	bl	80331a0 <UPG_MNGR_submitTimeStamp>
 802c4e8:	f006 fbe2 	bl	8032cb0 <UPG_MNGR_reboot>
 802c4ec:	4605      	mov	r5, r0
 802c4ee:	f000 ff27 	bl	802d340 <TIME_getTimeMsec>
 802c4f2:	4b2a      	ldr	r3, [pc, #168]	; (802c59c <UPGRADER_verifyMainStateMachine(unsigned long)+0x19c>)
 802c4f4:	6018      	str	r0, [r3, #0]
 802c4f6:	2d00      	cmp	r5, #0
 802c4f8:	d1c7      	bne.n	802c48a <UPGRADER_verifyMainStateMachine(unsigned long)+0x8a>
 802c4fa:	e7a6      	b.n	802c44a <UPGRADER_verifyMainStateMachine(unsigned long)+0x4a>
 802c4fc:	4b27      	ldr	r3, [pc, #156]	; (802c59c <UPGRADER_verifyMainStateMachine(unsigned long)+0x19c>)
 802c4fe:	6818      	ldr	r0, [r3, #0]
 802c500:	f000 ff20 	bl	802d344 <TIME_getElapsedTimeMsec>
 802c504:	f640 33b7 	movw	r3, #2999	; 0xbb7
 802c508:	4298      	cmp	r0, r3
 802c50a:	d9a0      	bls.n	802c44e <UPGRADER_verifyMainStateMachine(unsigned long)+0x4e>
 802c50c:	e79d      	b.n	802c44a <UPGRADER_verifyMainStateMachine(unsigned long)+0x4a>
 802c50e:	f006 fcf5 	bl	8032efc <UPG_MNGR_requestAppVersion>
 802c512:	2800      	cmp	r0, #0
 802c514:	d184      	bne.n	802c420 <UPGRADER_verifyMainStateMachine(unsigned long)+0x20>
 802c516:	f000 ff13 	bl	802d340 <TIME_getTimeMsec>
 802c51a:	4b20      	ldr	r3, [pc, #128]	; (802c59c <UPGRADER_verifyMainStateMachine(unsigned long)+0x19c>)
 802c51c:	6018      	str	r0, [r3, #0]
 802c51e:	e794      	b.n	802c44a <UPGRADER_verifyMainStateMachine(unsigned long)+0x4a>
 802c520:	f006 fd3e 	bl	8032fa0 <UPG_MNGR_confirmAppVersion>
 802c524:	2800      	cmp	r0, #0
 802c526:	d090      	beq.n	802c44a <UPGRADER_verifyMainStateMachine(unsigned long)+0x4a>
 802c528:	4b1c      	ldr	r3, [pc, #112]	; (802c59c <UPGRADER_verifyMainStateMachine(unsigned long)+0x19c>)
 802c52a:	6818      	ldr	r0, [r3, #0]
 802c52c:	f000 ff0a 	bl	802d344 <TIME_getElapsedTimeMsec>
 802c530:	f5b0 6ffa 	cmp.w	r0, #2000	; 0x7d0
 802c534:	d98b      	bls.n	802c44e <UPGRADER_verifyMainStateMachine(unsigned long)+0x4e>
 802c536:	4817      	ldr	r0, [pc, #92]	; (802c594 <UPGRADER_verifyMainStateMachine(unsigned long)+0x194>)
 802c538:	212f      	movs	r1, #47	; 0x2f
 802c53a:	f012 ff10 	bl	803f35e <strrchr>
 802c53e:	b1c8      	cbz	r0, 802c574 <UPGRADER_verifyMainStateMachine(unsigned long)+0x174>
 802c540:	212f      	movs	r1, #47	; 0x2f
 802c542:	4814      	ldr	r0, [pc, #80]	; (802c594 <UPGRADER_verifyMainStateMachine(unsigned long)+0x194>)
 802c544:	f012 ff0b 	bl	803f35e <strrchr>
 802c548:	1c41      	adds	r1, r0, #1
 802c54a:	4b18      	ldr	r3, [pc, #96]	; (802c5ac <UPGRADER_verifyMainStateMachine(unsigned long)+0x1ac>)
 802c54c:	22da      	movs	r2, #218	; 0xda
 802c54e:	2000      	movs	r0, #0
 802c550:	f7f6 f922 	bl	8022798 <DEBUG_logMsg>
 802c554:	2302      	movs	r3, #2
 802c556:	7023      	strb	r3, [r4, #0]
 802c558:	e779      	b.n	802c44e <UPGRADER_verifyMainStateMachine(unsigned long)+0x4e>
 802c55a:	480e      	ldr	r0, [pc, #56]	; (802c594 <UPGRADER_verifyMainStateMachine(unsigned long)+0x194>)
 802c55c:	215c      	movs	r1, #92	; 0x5c
 802c55e:	f012 fefe 	bl	803f35e <strrchr>
 802c562:	b128      	cbz	r0, 802c570 <UPGRADER_verifyMainStateMachine(unsigned long)+0x170>
 802c564:	215c      	movs	r1, #92	; 0x5c
 802c566:	480b      	ldr	r0, [pc, #44]	; (802c594 <UPGRADER_verifyMainStateMachine(unsigned long)+0x194>)
 802c568:	f012 fef9 	bl	803f35e <strrchr>
 802c56c:	1c41      	adds	r1, r0, #1
 802c56e:	e763      	b.n	802c438 <UPGRADER_verifyMainStateMachine(unsigned long)+0x38>
 802c570:	4908      	ldr	r1, [pc, #32]	; (802c594 <UPGRADER_verifyMainStateMachine(unsigned long)+0x194>)
 802c572:	e761      	b.n	802c438 <UPGRADER_verifyMainStateMachine(unsigned long)+0x38>
 802c574:	4807      	ldr	r0, [pc, #28]	; (802c594 <UPGRADER_verifyMainStateMachine(unsigned long)+0x194>)
 802c576:	215c      	movs	r1, #92	; 0x5c
 802c578:	f012 fef1 	bl	803f35e <strrchr>
 802c57c:	b128      	cbz	r0, 802c58a <UPGRADER_verifyMainStateMachine(unsigned long)+0x18a>
 802c57e:	215c      	movs	r1, #92	; 0x5c
 802c580:	4804      	ldr	r0, [pc, #16]	; (802c594 <UPGRADER_verifyMainStateMachine(unsigned long)+0x194>)
 802c582:	f012 feec 	bl	803f35e <strrchr>
 802c586:	1c41      	adds	r1, r0, #1
 802c588:	e7df      	b.n	802c54a <UPGRADER_verifyMainStateMachine(unsigned long)+0x14a>
 802c58a:	4902      	ldr	r1, [pc, #8]	; (802c594 <UPGRADER_verifyMainStateMachine(unsigned long)+0x194>)
 802c58c:	e7dd      	b.n	802c54a <UPGRADER_verifyMainStateMachine(unsigned long)+0x14a>
 802c58e:	bf00      	nop
 802c590:	20005120 	.word	0x20005120
 802c594:	08046c20 	.word	0x08046c20
 802c598:	08046c70 	.word	0x08046c70
 802c59c:	20005118 	.word	0x20005118
 802c5a0:	2000f630 	.word	0x2000f630
 802c5a4:	2000511c 	.word	0x2000511c
 802c5a8:	20005134 	.word	0x20005134
 802c5ac:	08046c90 	.word	0x08046c90

0802c5b0 <UPGRADER_runTaskCcpCmdFinalize(void*, unsigned long, bool)>:
 802c5b0:	b5f0      	push	{r4, r5, r6, r7, lr}
 802c5b2:	b089      	sub	sp, #36	; 0x24
 802c5b4:	461f      	mov	r7, r3
 802c5b6:	4604      	mov	r4, r0
 802c5b8:	460d      	mov	r5, r1
 802c5ba:	a804      	add	r0, sp, #16
 802c5bc:	2101      	movs	r1, #1
 802c5be:	4616      	mov	r6, r2
 802c5c0:	f7ff fb84 	bl	802bccc <TaskStatus::TaskStatus(TaskStatus::Result_e)>
 802c5c4:	b34f      	cbz	r7, 802c61a <UPGRADER_runTaskCcpCmdFinalize(void*, unsigned long, bool)+0x6a>
 802c5c6:	b39d      	cbz	r5, 802c630 <UPGRADER_runTaskCcpCmdFinalize(void*, unsigned long, bool)+0x80>
 802c5c8:	782b      	ldrb	r3, [r5, #0]
 802c5ca:	b10b      	cbz	r3, 802c5d0 <UPGRADER_runTaskCcpCmdFinalize(void*, unsigned long, bool)+0x20>
 802c5cc:	2b03      	cmp	r3, #3
 802c5ce:	d10a      	bne.n	802c5e6 <UPGRADER_runTaskCcpCmdFinalize(void*, unsigned long, bool)+0x36>
 802c5d0:	2101      	movs	r1, #1
 802c5d2:	4820      	ldr	r0, [pc, #128]	; (802c654 <UPGRADER_runTaskCcpCmdFinalize(void*, unsigned long, bool)+0xa4>)
 802c5d4:	f7f6 fa72 	bl	8022abc <Robot::updateArticulation(Articulation::State_e)>
 802c5d8:	2101      	movs	r1, #1
 802c5da:	4620      	mov	r0, r4
 802c5dc:	f7ff fb76 	bl	802bccc <TaskStatus::TaskStatus(TaskStatus::Result_e)>
 802c5e0:	4620      	mov	r0, r4
 802c5e2:	b009      	add	sp, #36	; 0x24
 802c5e4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 802c5e6:	2102      	movs	r1, #2
 802c5e8:	a806      	add	r0, sp, #24
 802c5ea:	f7ff fb6f 	bl	802bccc <TaskStatus::TaskStatus(TaskStatus::Result_e)>
 802c5ee:	a906      	add	r1, sp, #24
 802c5f0:	a804      	add	r0, sp, #16
 802c5f2:	f7ff fb81 	bl	802bcf8 <TaskStatus::operator=(TaskStatus const&)>
 802c5f6:	f10d 000f 	add.w	r0, sp, #15
 802c5fa:	f006 fc5b 	bl	8032eb4 <UPG_MNGR_getCurrentTarget>
 802c5fe:	b960      	cbnz	r0, 802c61a <UPGRADER_runTaskCcpCmdFinalize(void*, unsigned long, bool)+0x6a>
 802c600:	782a      	ldrb	r2, [r5, #0]
 802c602:	f89d 300f 	ldrb.w	r3, [sp, #15]
 802c606:	429a      	cmp	r2, r3
 802c608:	d107      	bne.n	802c61a <UPGRADER_runTaskCcpCmdFinalize(void*, unsigned long, bool)+0x6a>
 802c60a:	2101      	movs	r1, #1
 802c60c:	a806      	add	r0, sp, #24
 802c60e:	f7ff fb5d 	bl	802bccc <TaskStatus::TaskStatus(TaskStatus::Result_e)>
 802c612:	a906      	add	r1, sp, #24
 802c614:	a804      	add	r0, sp, #16
 802c616:	f7ff fb6f 	bl	802bcf8 <TaskStatus::operator=(TaskStatus const&)>
 802c61a:	f89d 3010 	ldrb.w	r3, [sp, #16]
 802c61e:	2b01      	cmp	r3, #1
 802c620:	d00c      	beq.n	802c63c <UPGRADER_runTaskCcpCmdFinalize(void*, unsigned long, bool)+0x8c>
 802c622:	a904      	add	r1, sp, #16
 802c624:	4620      	mov	r0, r4
 802c626:	f7ff fb5f 	bl	802bce8 <TaskStatus::TaskStatus(TaskStatus const&)>
 802c62a:	4620      	mov	r0, r4
 802c62c:	b009      	add	sp, #36	; 0x24
 802c62e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 802c630:	2209      	movs	r2, #9
 802c632:	2102      	movs	r1, #2
 802c634:	4620      	mov	r0, r4
 802c636:	f7ff fb4f 	bl	802bcd8 <TaskStatus::TaskStatus(TaskStatus::Result_e, unsigned int)>
 802c63a:	e7f6      	b.n	802c62a <UPGRADER_runTaskCcpCmdFinalize(void*, unsigned long, bool)+0x7a>
 802c63c:	a806      	add	r0, sp, #24
 802c63e:	4a06      	ldr	r2, [pc, #24]	; (802c658 <UPGRADER_runTaskCcpCmdFinalize(void*, unsigned long, bool)+0xa8>)
 802c640:	4906      	ldr	r1, [pc, #24]	; (802c65c <UPGRADER_runTaskCcpCmdFinalize(void*, unsigned long, bool)+0xac>)
 802c642:	9700      	str	r7, [sp, #0]
 802c644:	4633      	mov	r3, r6
 802c646:	f7fb fc69 	bl	8027f1c <SM_RUNNER_runStateMachine>
 802c64a:	a906      	add	r1, sp, #24
 802c64c:	a804      	add	r0, sp, #16
 802c64e:	f7ff fb53 	bl	802bcf8 <TaskStatus::operator=(TaskStatus const&)>
 802c652:	e7e6      	b.n	802c622 <UPGRADER_runTaskCcpCmdFinalize(void*, unsigned long, bool)+0x72>
 802c654:	2000f630 	.word	0x2000f630
 802c658:	20005120 	.word	0x20005120
 802c65c:	20001f34 	.word	0x20001f34

0802c660 <UPGRADER_datablockMainStateMachine(unsigned long)>:
 802c660:	b570      	push	{r4, r5, r6, lr}
 802c662:	4e18      	ldr	r6, [pc, #96]	; (802c6c4 <UPGRADER_datablockMainStateMachine(unsigned long)+0x64>)
 802c664:	b082      	sub	sp, #8
 802c666:	2100      	movs	r1, #0
 802c668:	4604      	mov	r4, r0
 802c66a:	f7ff fb2f 	bl	802bccc <TaskStatus::TaskStatus(TaskStatus::Result_e)>
 802c66e:	7835      	ldrb	r5, [r6, #0]
 802c670:	b1dd      	cbz	r5, 802c6aa <UPGRADER_datablockMainStateMachine(unsigned long)+0x4a>
 802c672:	2d01      	cmp	r5, #1
 802c674:	d114      	bne.n	802c6a0 <UPGRADER_datablockMainStateMachine(unsigned long)+0x40>
 802c676:	4814      	ldr	r0, [pc, #80]	; (802c6c8 <UPGRADER_datablockMainStateMachine(unsigned long)+0x68>)
 802c678:	f006 fb38 	bl	8032cec <UPG_MNGR_isRespReceived>
 802c67c:	b110      	cbz	r0, 802c684 <UPGRADER_datablockMainStateMachine(unsigned long)+0x24>
 802c67e:	4620      	mov	r0, r4
 802c680:	b002      	add	sp, #8
 802c682:	bd70      	pop	{r4, r5, r6, pc}
 802c684:	4b11      	ldr	r3, [pc, #68]	; (802c6cc <UPGRADER_datablockMainStateMachine(unsigned long)+0x6c>)
 802c686:	6819      	ldr	r1, [r3, #0]
 802c688:	9101      	str	r1, [sp, #4]
 802c68a:	f000 fe59 	bl	802d340 <TIME_getTimeMsec>
 802c68e:	9901      	ldr	r1, [sp, #4]
 802c690:	4602      	mov	r2, r0
 802c692:	4628      	mov	r0, r5
 802c694:	f006 fd84 	bl	80331a0 <UPG_MNGR_submitTimeStamp>
 802c698:	4629      	mov	r1, r5
 802c69a:	4630      	mov	r0, r6
 802c69c:	f7fb fe30 	bl	8028300 <SM_RUNNER_setComplete>
 802c6a0:	2301      	movs	r3, #1
 802c6a2:	7023      	strb	r3, [r4, #0]
 802c6a4:	4620      	mov	r0, r4
 802c6a6:	b002      	add	sp, #8
 802c6a8:	bd70      	pop	{r4, r5, r6, pc}
 802c6aa:	4807      	ldr	r0, [pc, #28]	; (802c6c8 <UPGRADER_datablockMainStateMachine(unsigned long)+0x68>)
 802c6ac:	f006 fa5e 	bl	8032b6c <UPG_MNGR_sendDataBlock>
 802c6b0:	4605      	mov	r5, r0
 802c6b2:	f000 fe45 	bl	802d340 <TIME_getTimeMsec>
 802c6b6:	4b05      	ldr	r3, [pc, #20]	; (802c6cc <UPGRADER_datablockMainStateMachine(unsigned long)+0x6c>)
 802c6b8:	6018      	str	r0, [r3, #0]
 802c6ba:	2d00      	cmp	r5, #0
 802c6bc:	d1df      	bne.n	802c67e <UPGRADER_datablockMainStateMachine(unsigned long)+0x1e>
 802c6be:	2301      	movs	r3, #1
 802c6c0:	7023      	strb	r3, [r4, #0]
 802c6c2:	e7ef      	b.n	802c6a4 <UPGRADER_datablockMainStateMachine(unsigned long)+0x44>
 802c6c4:	2000513c 	.word	0x2000513c
 802c6c8:	20005138 	.word	0x20005138
 802c6cc:	20005150 	.word	0x20005150

0802c6d0 <UPGRADER_runTaskCcpCmdDataBlock(void*, unsigned long, bool)>:
 802c6d0:	b5f0      	push	{r4, r5, r6, r7, lr}
 802c6d2:	b087      	sub	sp, #28
 802c6d4:	461e      	mov	r6, r3
 802c6d6:	4605      	mov	r5, r0
 802c6d8:	460c      	mov	r4, r1
 802c6da:	a802      	add	r0, sp, #8
 802c6dc:	2101      	movs	r1, #1
 802c6de:	4617      	mov	r7, r2
 802c6e0:	f7ff faf4 	bl	802bccc <TaskStatus::TaskStatus(TaskStatus::Result_e)>
 802c6e4:	b14e      	cbz	r6, 802c6fa <UPGRADER_runTaskCcpCmdDataBlock(void*, unsigned long, bool)+0x2a>
 802c6e6:	b1d4      	cbz	r4, 802c71e <UPGRADER_runTaskCcpCmdDataBlock(void*, unsigned long, bool)+0x4e>
 802c6e8:	f8d4 2005 	ldr.w	r2, [r4, #5]
 802c6ec:	f8d4 1001 	ldr.w	r1, [r4, #1]
 802c6f0:	f104 0009 	add.w	r0, r4, #9
 802c6f4:	f006 f98c 	bl	8032a10 <UPG_MNGR_storeDataBlock>
 802c6f8:	b9c8      	cbnz	r0, 802c72e <UPGRADER_runTaskCcpCmdDataBlock(void*, unsigned long, bool)+0x5e>
 802c6fa:	4a10      	ldr	r2, [pc, #64]	; (802c73c <UPGRADER_runTaskCcpCmdDataBlock(void*, unsigned long, bool)+0x6c>)
 802c6fc:	4910      	ldr	r1, [pc, #64]	; (802c740 <UPGRADER_runTaskCcpCmdDataBlock(void*, unsigned long, bool)+0x70>)
 802c6fe:	9600      	str	r6, [sp, #0]
 802c700:	463b      	mov	r3, r7
 802c702:	a804      	add	r0, sp, #16
 802c704:	f7fb fc0a 	bl	8027f1c <SM_RUNNER_runStateMachine>
 802c708:	a904      	add	r1, sp, #16
 802c70a:	a802      	add	r0, sp, #8
 802c70c:	f7ff faf4 	bl	802bcf8 <TaskStatus::operator=(TaskStatus const&)>
 802c710:	a902      	add	r1, sp, #8
 802c712:	4628      	mov	r0, r5
 802c714:	f7ff fae8 	bl	802bce8 <TaskStatus::TaskStatus(TaskStatus const&)>
 802c718:	4628      	mov	r0, r5
 802c71a:	b007      	add	sp, #28
 802c71c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 802c71e:	2209      	movs	r2, #9
 802c720:	2102      	movs	r1, #2
 802c722:	4628      	mov	r0, r5
 802c724:	f7ff fad8 	bl	802bcd8 <TaskStatus::TaskStatus(TaskStatus::Result_e, unsigned int)>
 802c728:	4628      	mov	r0, r5
 802c72a:	b007      	add	sp, #28
 802c72c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 802c72e:	2102      	movs	r1, #2
 802c730:	4628      	mov	r0, r5
 802c732:	f7ff facb 	bl	802bccc <TaskStatus::TaskStatus(TaskStatus::Result_e)>
 802c736:	4628      	mov	r0, r5
 802c738:	b007      	add	sp, #28
 802c73a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 802c73c:	2000513c 	.word	0x2000513c
 802c740:	20001f74 	.word	0x20001f74

0802c744 <SET_CONFIG_runTask(void*, unsigned long, bool)>:
 802c744:	b530      	push	{r4, r5, lr}
 802c746:	ed2d 8b02 	vpush	{d8}
 802c74a:	780b      	ldrb	r3, [r1, #0]
 802c74c:	b083      	sub	sp, #12
 802c74e:	4604      	mov	r4, r0
 802c750:	b143      	cbz	r3, 802c764 <SET_CONFIG_runTask(void*, unsigned long, bool)+0x20>
 802c752:	2101      	movs	r1, #1
 802c754:	4620      	mov	r0, r4
 802c756:	f7ff fab9 	bl	802bccc <TaskStatus::TaskStatus(TaskStatus::Result_e)>
 802c75a:	4620      	mov	r0, r4
 802c75c:	b003      	add	sp, #12
 802c75e:	ecbd 8b02 	vpop	{d8}
 802c762:	bd30      	pop	{r4, r5, pc}
 802c764:	f8d1 3001 	ldr.w	r3, [r1, #1]
 802c768:	ed9f 7a18 	vldr	s14, [pc, #96]	; 802c7cc <SET_CONFIG_runTask(void*, unsigned long, bool)+0x88>
 802c76c:	4818      	ldr	r0, [pc, #96]	; (802c7d0 <SET_CONFIG_runTask(void*, unsigned long, bool)+0x8c>)
 802c76e:	ee07 3a90 	vmov	s15, r3
 802c772:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 802c776:	212f      	movs	r1, #47	; 0x2f
 802c778:	ee87 8a87 	vdiv.f32	s16, s15, s14
 802c77c:	f012 fdef 	bl	803f35e <strrchr>
 802c780:	b1b0      	cbz	r0, 802c7b0 <SET_CONFIG_runTask(void*, unsigned long, bool)+0x6c>
 802c782:	4813      	ldr	r0, [pc, #76]	; (802c7d0 <SET_CONFIG_runTask(void*, unsigned long, bool)+0x8c>)
 802c784:	212f      	movs	r1, #47	; 0x2f
 802c786:	f012 fdea 	bl	803f35e <strrchr>
 802c78a:	1c45      	adds	r5, r0, #1
 802c78c:	ee18 0a10 	vmov	r0, s16
 802c790:	f011 fe63 	bl	803e45a <__aeabi_f2d>
 802c794:	4b0f      	ldr	r3, [pc, #60]	; (802c7d4 <SET_CONFIG_runTask(void*, unsigned long, bool)+0x90>)
 802c796:	e9cd 0100 	strd	r0, r1, [sp]
 802c79a:	2234      	movs	r2, #52	; 0x34
 802c79c:	4629      	mov	r1, r5
 802c79e:	2002      	movs	r0, #2
 802c7a0:	f7f5 fffa 	bl	8022798 <DEBUG_logMsg>
 802c7a4:	480c      	ldr	r0, [pc, #48]	; (802c7d8 <SET_CONFIG_runTask(void*, unsigned long, bool)+0x94>)
 802c7a6:	eeb0 0a48 	vmov.f32	s0, s16
 802c7aa:	f003 fcab 	bl	8030104 <Nest::setAtticOffset(float)>
 802c7ae:	e7d0      	b.n	802c752 <SET_CONFIG_runTask(void*, unsigned long, bool)+0xe>
 802c7b0:	4807      	ldr	r0, [pc, #28]	; (802c7d0 <SET_CONFIG_runTask(void*, unsigned long, bool)+0x8c>)
 802c7b2:	215c      	movs	r1, #92	; 0x5c
 802c7b4:	f012 fdd3 	bl	803f35e <strrchr>
 802c7b8:	b128      	cbz	r0, 802c7c6 <SET_CONFIG_runTask(void*, unsigned long, bool)+0x82>
 802c7ba:	4805      	ldr	r0, [pc, #20]	; (802c7d0 <SET_CONFIG_runTask(void*, unsigned long, bool)+0x8c>)
 802c7bc:	215c      	movs	r1, #92	; 0x5c
 802c7be:	f012 fdce 	bl	803f35e <strrchr>
 802c7c2:	1c45      	adds	r5, r0, #1
 802c7c4:	e7e2      	b.n	802c78c <SET_CONFIG_runTask(void*, unsigned long, bool)+0x48>
 802c7c6:	4d02      	ldr	r5, [pc, #8]	; (802c7d0 <SET_CONFIG_runTask(void*, unsigned long, bool)+0x8c>)
 802c7c8:	e7e0      	b.n	802c78c <SET_CONFIG_runTask(void*, unsigned long, bool)+0x48>
 802c7ca:	bf00      	nop
 802c7cc:	42c80000 	.word	0x42c80000
 802c7d0:	08046dc0 	.word	0x08046dc0
 802c7d4:	08046e08 	.word	0x08046e08
 802c7d8:	20004b30 	.word	0x20004b30
 802c7dc:	810102c9 	.word	0x810102c9
 802c7e0:	80a9b0b0 	.word	0x80a9b0b0
 802c7e4:	00000000 	.word	0x00000000

0802c7e8 <sendDiagnosticMetadata(unsigned char*, unsigned short)>:
 802c7e8:	4770      	bx	lr
 802c7ea:	bf00      	nop

0802c7ec <CAMERA_IMAGE_TRANSFER_mainStateMachine(unsigned long)>:
 802c7ec:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802c7f0:	2100      	movs	r1, #0
 802c7f2:	b086      	sub	sp, #24
 802c7f4:	4604      	mov	r4, r0
 802c7f6:	f7ff fa69 	bl	802bccc <TaskStatus::TaskStatus(TaskStatus::Result_e)>
 802c7fa:	4b73      	ldr	r3, [pc, #460]	; (802c9c8 <CAMERA_IMAGE_TRANSFER_mainStateMachine(unsigned long)+0x1dc>)
 802c7fc:	781b      	ldrb	r3, [r3, #0]
 802c7fe:	2b05      	cmp	r3, #5
 802c800:	f200 80df 	bhi.w	802c9c2 <CAMERA_IMAGE_TRANSFER_mainStateMachine(unsigned long)+0x1d6>
 802c804:	e8df f003 	tbb	[pc, r3]
 802c808:	3d76340b 	.word	0x3d76340b
 802c80c:	035b      	.short	0x035b
 802c80e:	486e      	ldr	r0, [pc, #440]	; (802c9c8 <CAMERA_IMAGE_TRANSFER_mainStateMachine(unsigned long)+0x1dc>)
 802c810:	2101      	movs	r1, #1
 802c812:	f7fb fd75 	bl	8028300 <SM_RUNNER_setComplete>
 802c816:	4620      	mov	r0, r4
 802c818:	b006      	add	sp, #24
 802c81a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802c81e:	4b6b      	ldr	r3, [pc, #428]	; (802c9cc <CAMERA_IMAGE_TRANSFER_mainStateMachine(unsigned long)+0x1e0>)
 802c820:	781d      	ldrb	r5, [r3, #0]
 802c822:	2d11      	cmp	r5, #17
 802c824:	d102      	bne.n	802c82c <CAMERA_IMAGE_TRANSFER_mainStateMachine(unsigned long)+0x40>
 802c826:	2201      	movs	r2, #1
 802c828:	785d      	ldrb	r5, [r3, #1]
 802c82a:	709a      	strb	r2, [r3, #2]
 802c82c:	4868      	ldr	r0, [pc, #416]	; (802c9d0 <CAMERA_IMAGE_TRANSFER_mainStateMachine(unsigned long)+0x1e4>)
 802c82e:	212f      	movs	r1, #47	; 0x2f
 802c830:	f012 fd95 	bl	803f35e <strrchr>
 802c834:	2800      	cmp	r0, #0
 802c836:	f000 80ad 	beq.w	802c994 <CAMERA_IMAGE_TRANSFER_mainStateMachine(unsigned long)+0x1a8>
 802c83a:	212f      	movs	r1, #47	; 0x2f
 802c83c:	4864      	ldr	r0, [pc, #400]	; (802c9d0 <CAMERA_IMAGE_TRANSFER_mainStateMachine(unsigned long)+0x1e4>)
 802c83e:	f012 fd8e 	bl	803f35e <strrchr>
 802c842:	1c41      	adds	r1, r0, #1
 802c844:	4628      	mov	r0, r5
 802c846:	9103      	str	r1, [sp, #12]
 802c848:	f002 fcb4 	bl	802f1b4 <CAMERA_getImageQualityInt(CAMERA_imageQuality_t)>
 802c84c:	9903      	ldr	r1, [sp, #12]
 802c84e:	4b61      	ldr	r3, [pc, #388]	; (802c9d4 <CAMERA_IMAGE_TRANSFER_mainStateMachine(unsigned long)+0x1e8>)
 802c850:	9000      	str	r0, [sp, #0]
 802c852:	22be      	movs	r2, #190	; 0xbe
 802c854:	2002      	movs	r0, #2
 802c856:	f7f5 ff9f 	bl	8022798 <DEBUG_logMsg>
 802c85a:	2101      	movs	r1, #1
 802c85c:	4608      	mov	r0, r1
 802c85e:	462a      	mov	r2, r5
 802c860:	f002 fc48 	bl	802f0f4 <CAMERA_requestImage(CAMERA_imageFormat_t, CAMERA_imageSize_t, CAMERA_imageQuality_t)>
 802c864:	2301      	movs	r3, #1
 802c866:	4620      	mov	r0, r4
 802c868:	7023      	strb	r3, [r4, #0]
 802c86a:	b006      	add	sp, #24
 802c86c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802c870:	f002 fbc6 	bl	802f000 <CAMERA_isImageRequested()>
 802c874:	f080 0001 	eor.w	r0, r0, #1
 802c878:	7020      	strb	r0, [r4, #0]
 802c87a:	4620      	mov	r0, r4
 802c87c:	b006      	add	sp, #24
 802c87e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802c882:	4d55      	ldr	r5, [pc, #340]	; (802c9d8 <CAMERA_IMAGE_TRANSFER_mainStateMachine(unsigned long)+0x1ec>)
 802c884:	4855      	ldr	r0, [pc, #340]	; (802c9dc <CAMERA_IMAGE_TRANSFER_mainStateMachine(unsigned long)+0x1f0>)
 802c886:	682a      	ldr	r2, [r5, #0]
 802c888:	4e55      	ldr	r6, [pc, #340]	; (802c9e0 <CAMERA_IMAGE_TRANSFER_mainStateMachine(unsigned long)+0x1f4>)
 802c88a:	6002      	str	r2, [r0, #0]
 802c88c:	2380      	movs	r3, #128	; 0x80
 802c88e:	0651      	lsls	r1, r2, #25
 802c890:	6083      	str	r3, [r0, #8]
 802c892:	ea4f 13d2 	mov.w	r3, r2, lsr #7
 802c896:	bf18      	it	ne
 802c898:	3301      	addne	r3, #1
 802c89a:	6043      	str	r3, [r0, #4]
 802c89c:	6869      	ldr	r1, [r5, #4]
 802c89e:	4851      	ldr	r0, [pc, #324]	; (802c9e4 <CAMERA_IMAGE_TRANSFER_mainStateMachine(unsigned long)+0x1f8>)
 802c8a0:	6033      	str	r3, [r6, #0]
 802c8a2:	0892      	lsrs	r2, r2, #2
 802c8a4:	f009 f846 	bl	8035934 <CRC_calculate>
 802c8a8:	4b4f      	ldr	r3, [pc, #316]	; (802c9e8 <CAMERA_IMAGE_TRANSFER_mainStateMachine(unsigned long)+0x1fc>)
 802c8aa:	484c      	ldr	r0, [pc, #304]	; (802c9dc <CAMERA_IMAGE_TRANSFER_mainStateMachine(unsigned long)+0x1f0>)
 802c8ac:	681b      	ldr	r3, [r3, #0]
 802c8ae:	2110      	movs	r1, #16
 802c8b0:	4798      	blx	r3
 802c8b2:	2301      	movs	r3, #1
 802c8b4:	4620      	mov	r0, r4
 802c8b6:	7023      	strb	r3, [r4, #0]
 802c8b8:	b006      	add	sp, #24
 802c8ba:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802c8be:	f8df 8120 	ldr.w	r8, [pc, #288]	; 802c9e0 <CAMERA_IMAGE_TRANSFER_mainStateMachine(unsigned long)+0x1f4>
 802c8c2:	4e4a      	ldr	r6, [pc, #296]	; (802c9ec <CAMERA_IMAGE_TRANSFER_mainStateMachine(unsigned long)+0x200>)
 802c8c4:	f8d8 3000 	ldr.w	r3, [r8]
 802c8c8:	6832      	ldr	r2, [r6, #0]
 802c8ca:	3b01      	subs	r3, #1
 802c8cc:	4293      	cmp	r3, r2
 802c8ce:	d05b      	beq.n	802c988 <CAMERA_IMAGE_TRANSFER_mainStateMachine(unsigned long)+0x19c>
 802c8d0:	2180      	movs	r1, #128	; 0x80
 802c8d2:	4d41      	ldr	r5, [pc, #260]	; (802c9d8 <CAMERA_IMAGE_TRANSFER_mainStateMachine(unsigned long)+0x1ec>)
 802c8d4:	460f      	mov	r7, r1
 802c8d6:	4b44      	ldr	r3, [pc, #272]	; (802c9e8 <CAMERA_IMAGE_TRANSFER_mainStateMachine(unsigned long)+0x1fc>)
 802c8d8:	6868      	ldr	r0, [r5, #4]
 802c8da:	685b      	ldr	r3, [r3, #4]
 802c8dc:	4798      	blx	r3
 802c8de:	6833      	ldr	r3, [r6, #0]
 802c8e0:	686a      	ldr	r2, [r5, #4]
 802c8e2:	f8d8 1000 	ldr.w	r1, [r8]
 802c8e6:	3301      	adds	r3, #1
 802c8e8:	443a      	add	r2, r7
 802c8ea:	428b      	cmp	r3, r1
 802c8ec:	606a      	str	r2, [r5, #4]
 802c8ee:	6033      	str	r3, [r6, #0]
 802c8f0:	d191      	bne.n	802c816 <CAMERA_IMAGE_TRANSFER_mainStateMachine(unsigned long)+0x2a>
 802c8f2:	e7de      	b.n	802c8b2 <CAMERA_IMAGE_TRANSFER_mainStateMachine(unsigned long)+0xc6>
 802c8f4:	ad04      	add	r5, sp, #16
 802c8f6:	4628      	mov	r0, r5
 802c8f8:	f002 fc54 	bl	802f1a4 <CAMERA_getImage()>
 802c8fc:	e895 0003 	ldmia.w	r5, {r0, r1}
 802c900:	4d35      	ldr	r5, [pc, #212]	; (802c9d8 <CAMERA_IMAGE_TRANSFER_mainStateMachine(unsigned long)+0x1ec>)
 802c902:	f5c0 536a 	rsb	r3, r0, #14976	; 0x3a80
 802c906:	e885 0003 	stmia.w	r5, {r0, r1}
 802c90a:	3318      	adds	r3, #24
 802c90c:	f240 51db 	movw	r1, #1499	; 0x5db
 802c910:	428b      	cmp	r3, r1
 802c912:	4602      	mov	r2, r0
 802c914:	d819      	bhi.n	802c94a <CAMERA_IMAGE_TRANSFER_mainStateMachine(unsigned long)+0x15e>
 802c916:	f643 2397 	movw	r3, #14999	; 0x3a97
 802c91a:	4298      	cmp	r0, r3
 802c91c:	492b      	ldr	r1, [pc, #172]	; (802c9cc <CAMERA_IMAGE_TRANSFER_mainStateMachine(unsigned long)+0x1e0>)
 802c91e:	d917      	bls.n	802c950 <CAMERA_IMAGE_TRANSFER_mainStateMachine(unsigned long)+0x164>
 802c920:	788b      	ldrb	r3, [r1, #2]
 802c922:	b9ab      	cbnz	r3, 802c950 <CAMERA_IMAGE_TRANSFER_mainStateMachine(unsigned long)+0x164>
 802c924:	4e32      	ldr	r6, [pc, #200]	; (802c9f0 <CAMERA_IMAGE_TRANSFER_mainStateMachine(unsigned long)+0x204>)
 802c926:	780d      	ldrb	r5, [r1, #0]
 802c928:	4630      	mov	r0, r6
 802c92a:	2300      	movs	r3, #0
 802c92c:	2201      	movs	r2, #1
 802c92e:	e001      	b.n	802c934 <CAMERA_IMAGE_TRANSFER_mainStateMachine(unsigned long)+0x148>
 802c930:	f810 2f03 	ldrb.w	r2, [r0, #3]!
 802c934:	4295      	cmp	r5, r2
 802c936:	d03f      	beq.n	802c9b8 <CAMERA_IMAGE_TRANSFER_mainStateMachine(unsigned long)+0x1cc>
 802c938:	3301      	adds	r3, #1
 802c93a:	2b0f      	cmp	r3, #15
 802c93c:	d1f8      	bne.n	802c930 <CAMERA_IMAGE_TRANSFER_mainStateMachine(unsigned long)+0x144>
 802c93e:	2311      	movs	r3, #17
 802c940:	4821      	ldr	r0, [pc, #132]	; (802c9c8 <CAMERA_IMAGE_TRANSFER_mainStateMachine(unsigned long)+0x1dc>)
 802c942:	700b      	strb	r3, [r1, #0]
 802c944:	f7fb fcde 	bl	8028304 <SM_RUNNER_restart>
 802c948:	e765      	b.n	802c816 <CAMERA_IMAGE_TRANSFER_mainStateMachine(unsigned long)+0x2a>
 802c94a:	4920      	ldr	r1, [pc, #128]	; (802c9cc <CAMERA_IMAGE_TRANSFER_mainStateMachine(unsigned long)+0x1e0>)
 802c94c:	788b      	ldrb	r3, [r1, #2]
 802c94e:	b14b      	cbz	r3, 802c964 <CAMERA_IMAGE_TRANSFER_mainStateMachine(unsigned long)+0x178>
 802c950:	784b      	ldrb	r3, [r1, #1]
 802c952:	2b11      	cmp	r3, #17
 802c954:	d1ad      	bne.n	802c8b2 <CAMERA_IMAGE_TRANSFER_mainStateMachine(unsigned long)+0xc6>
 802c956:	780b      	ldrb	r3, [r1, #0]
 802c958:	2b11      	cmp	r3, #17
 802c95a:	d1aa      	bne.n	802c8b2 <CAMERA_IMAGE_TRANSFER_mainStateMachine(unsigned long)+0xc6>
 802c95c:	481a      	ldr	r0, [pc, #104]	; (802c9c8 <CAMERA_IMAGE_TRANSFER_mainStateMachine(unsigned long)+0x1dc>)
 802c95e:	f7fb fcd9 	bl	8028314 <SM_RUNNER_abort>
 802c962:	e7a6      	b.n	802c8b2 <CAMERA_IMAGE_TRANSFER_mainStateMachine(unsigned long)+0xc6>
 802c964:	f643 2097 	movw	r0, #14999	; 0x3a97
 802c968:	4282      	cmp	r2, r0
 802c96a:	d8db      	bhi.n	802c924 <CAMERA_IMAGE_TRANSFER_mainStateMachine(unsigned long)+0x138>
 802c96c:	4e20      	ldr	r6, [pc, #128]	; (802c9f0 <CAMERA_IMAGE_TRANSFER_mainStateMachine(unsigned long)+0x204>)
 802c96e:	780d      	ldrb	r5, [r1, #0]
 802c970:	704d      	strb	r5, [r1, #1]
 802c972:	4630      	mov	r0, r6
 802c974:	2201      	movs	r2, #1
 802c976:	e001      	b.n	802c97c <CAMERA_IMAGE_TRANSFER_mainStateMachine(unsigned long)+0x190>
 802c978:	f810 2f03 	ldrb.w	r2, [r0, #3]!
 802c97c:	4295      	cmp	r5, r2
 802c97e:	d016      	beq.n	802c9ae <CAMERA_IMAGE_TRANSFER_mainStateMachine(unsigned long)+0x1c2>
 802c980:	3301      	adds	r3, #1
 802c982:	2b0f      	cmp	r3, #15
 802c984:	d1f8      	bne.n	802c978 <CAMERA_IMAGE_TRANSFER_mainStateMachine(unsigned long)+0x18c>
 802c986:	e7da      	b.n	802c93e <CAMERA_IMAGE_TRANSFER_mainStateMachine(unsigned long)+0x152>
 802c988:	4d13      	ldr	r5, [pc, #76]	; (802c9d8 <CAMERA_IMAGE_TRANSFER_mainStateMachine(unsigned long)+0x1ec>)
 802c98a:	682a      	ldr	r2, [r5, #0]
 802c98c:	eba2 17c3 	sub.w	r7, r2, r3, lsl #7
 802c990:	b2b9      	uxth	r1, r7
 802c992:	e7a0      	b.n	802c8d6 <CAMERA_IMAGE_TRANSFER_mainStateMachine(unsigned long)+0xea>
 802c994:	480e      	ldr	r0, [pc, #56]	; (802c9d0 <CAMERA_IMAGE_TRANSFER_mainStateMachine(unsigned long)+0x1e4>)
 802c996:	215c      	movs	r1, #92	; 0x5c
 802c998:	f012 fce1 	bl	803f35e <strrchr>
 802c99c:	b128      	cbz	r0, 802c9aa <CAMERA_IMAGE_TRANSFER_mainStateMachine(unsigned long)+0x1be>
 802c99e:	215c      	movs	r1, #92	; 0x5c
 802c9a0:	480b      	ldr	r0, [pc, #44]	; (802c9d0 <CAMERA_IMAGE_TRANSFER_mainStateMachine(unsigned long)+0x1e4>)
 802c9a2:	f012 fcdc 	bl	803f35e <strrchr>
 802c9a6:	1c41      	adds	r1, r0, #1
 802c9a8:	e74c      	b.n	802c844 <CAMERA_IMAGE_TRANSFER_mainStateMachine(unsigned long)+0x58>
 802c9aa:	4909      	ldr	r1, [pc, #36]	; (802c9d0 <CAMERA_IMAGE_TRANSFER_mainStateMachine(unsigned long)+0x1e4>)
 802c9ac:	e74a      	b.n	802c844 <CAMERA_IMAGE_TRANSFER_mainStateMachine(unsigned long)+0x58>
 802c9ae:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 802c9b2:	4433      	add	r3, r6
 802c9b4:	785b      	ldrb	r3, [r3, #1]
 802c9b6:	e7c3      	b.n	802c940 <CAMERA_IMAGE_TRANSFER_mainStateMachine(unsigned long)+0x154>
 802c9b8:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 802c9bc:	4433      	add	r3, r6
 802c9be:	789b      	ldrb	r3, [r3, #2]
 802c9c0:	e7be      	b.n	802c940 <CAMERA_IMAGE_TRANSFER_mainStateMachine(unsigned long)+0x154>
 802c9c2:	2302      	movs	r3, #2
 802c9c4:	7023      	strb	r3, [r4, #0]
 802c9c6:	e726      	b.n	802c816 <CAMERA_IMAGE_TRANSFER_mainStateMachine(unsigned long)+0x2a>
 802c9c8:	20005170 	.word	0x20005170
 802c9cc:	2000515c 	.word	0x2000515c
 802c9d0:	08046e28 	.word	0x08046e28
 802c9d4:	08046e88 	.word	0x08046e88
 802c9d8:	20005168 	.word	0x20005168
 802c9dc:	20005184 	.word	0x20005184
 802c9e0:	20005160 	.word	0x20005160
 802c9e4:	20005190 	.word	0x20005190
 802c9e8:	20005154 	.word	0x20005154
 802c9ec:	20005164 	.word	0x20005164
 802c9f0:	08046f40 	.word	0x08046f40

0802c9f4 <CAMERA_IMAGE_TRANSFER_setup()>:
 802c9f4:	b570      	push	{r4, r5, r6, lr}
 802c9f6:	2210      	movs	r2, #16
 802c9f8:	4604      	mov	r4, r0
 802c9fa:	2100      	movs	r1, #0
 802c9fc:	4813      	ldr	r0, [pc, #76]	; (802ca4c <CAMERA_IMAGE_TRANSFER_setup()+0x58>)
 802c9fe:	4d14      	ldr	r5, [pc, #80]	; (802ca50 <CAMERA_IMAGE_TRANSFER_setup()+0x5c>)
 802ca00:	4e14      	ldr	r6, [pc, #80]	; (802ca54 <CAMERA_IMAGE_TRANSFER_setup()+0x60>)
 802ca02:	f012 fe27 	bl	803f654 <memset>
 802ca06:	2208      	movs	r2, #8
 802ca08:	2100      	movs	r1, #0
 802ca0a:	4813      	ldr	r0, [pc, #76]	; (802ca58 <CAMERA_IMAGE_TRANSFER_setup()+0x64>)
 802ca0c:	f012 fe22 	bl	803f654 <memset>
 802ca10:	4912      	ldr	r1, [pc, #72]	; (802ca5c <CAMERA_IMAGE_TRANSFER_setup()+0x68>)
 802ca12:	4a13      	ldr	r2, [pc, #76]	; (802ca60 <CAMERA_IMAGE_TRANSFER_setup()+0x6c>)
 802ca14:	4813      	ldr	r0, [pc, #76]	; (802ca64 <CAMERA_IMAGE_TRANSFER_setup()+0x70>)
 802ca16:	2300      	movs	r3, #0
 802ca18:	600b      	str	r3, [r1, #0]
 802ca1a:	f241 1108 	movw	r1, #4360	; 0x1108
 802ca1e:	8011      	strh	r1, [r2, #0]
 802ca20:	602b      	str	r3, [r5, #0]
 802ca22:	7093      	strb	r3, [r2, #2]
 802ca24:	f7f6 f846 	bl	8022ab4 <Robot::getArticulation()>
 802ca28:	490f      	ldr	r1, [pc, #60]	; (802ca68 <CAMERA_IMAGE_TRANSFER_setup()+0x74>)
 802ca2a:	4a10      	ldr	r2, [pc, #64]	; (802ca6c <CAMERA_IMAGE_TRANSFER_setup()+0x78>)
 802ca2c:	4b10      	ldr	r3, [pc, #64]	; (802ca70 <CAMERA_IMAGE_TRANSFER_setup()+0x7c>)
 802ca2e:	4d11      	ldr	r5, [pc, #68]	; (802ca74 <CAMERA_IMAGE_TRANSFER_setup()+0x80>)
 802ca30:	f5b0 3f80 	cmp.w	r0, #65536	; 0x10000
 802ca34:	bf1c      	itt	ne
 802ca36:	460b      	movne	r3, r1
 802ca38:	4632      	movne	r2, r6
 802ca3a:	4620      	mov	r0, r4
 802ca3c:	2101      	movs	r1, #1
 802ca3e:	e9c5 3200 	strd	r3, r2, [r5]
 802ca42:	f7ff f943 	bl	802bccc <TaskStatus::TaskStatus(TaskStatus::Result_e)>
 802ca46:	4620      	mov	r0, r4
 802ca48:	bd70      	pop	{r4, r5, r6, pc}
 802ca4a:	bf00      	nop
 802ca4c:	20005184 	.word	0x20005184
 802ca50:	20005160 	.word	0x20005160
 802ca54:	0802ca85 	.word	0x0802ca85
 802ca58:	20005168 	.word	0x20005168
 802ca5c:	20005164 	.word	0x20005164
 802ca60:	2000515c 	.word	0x2000515c
 802ca64:	2000f630 	.word	0x2000f630
 802ca68:	0802ca79 	.word	0x0802ca79
 802ca6c:	0802ca91 	.word	0x0802ca91
 802ca70:	0802c7e9 	.word	0x0802c7e9
 802ca74:	20005154 	.word	0x20005154

0802ca78 <sendCCPMetadata(unsigned char*, unsigned short)>:
 802ca78:	460a      	mov	r2, r1
 802ca7a:	4601      	mov	r1, r0
 802ca7c:	2007      	movs	r0, #7
 802ca7e:	f7f7 bab3 	b.w	8023fe8 <CCP_sendPriorityMessage>
 802ca82:	bf00      	nop

0802ca84 <sendCCPImageBlock(unsigned char*, unsigned short)>:
 802ca84:	460a      	mov	r2, r1
 802ca86:	4601      	mov	r1, r0
 802ca88:	2008      	movs	r0, #8
 802ca8a:	f7f7 baad 	b.w	8023fe8 <CCP_sendPriorityMessage>
 802ca8e:	bf00      	nop

0802ca90 <sendDiagnosticImageBlock(unsigned char*, unsigned short)>:
 802ca90:	4770      	bx	lr
 802ca92:	bf00      	nop

0802ca94 <CAMERA_IMAGE_TRANSFER_runTask(void*, unsigned long, bool)>:
 802ca94:	b510      	push	{r4, lr}
 802ca96:	b082      	sub	sp, #8
 802ca98:	4904      	ldr	r1, [pc, #16]	; (802caac <CAMERA_IMAGE_TRANSFER_runTask(void*, unsigned long, bool)+0x18>)
 802ca9a:	9300      	str	r3, [sp, #0]
 802ca9c:	4613      	mov	r3, r2
 802ca9e:	4a04      	ldr	r2, [pc, #16]	; (802cab0 <CAMERA_IMAGE_TRANSFER_runTask(void*, unsigned long, bool)+0x1c>)
 802caa0:	4604      	mov	r4, r0
 802caa2:	f7fb fa3b 	bl	8027f1c <SM_RUNNER_runStateMachine>
 802caa6:	4620      	mov	r0, r4
 802caa8:	b002      	add	sp, #8
 802caaa:	bd10      	pop	{r4, pc}
 802caac:	20001ff4 	.word	0x20001ff4
 802cab0:	20005170 	.word	0x20005170

0802cab4 <DIAGNOSTIC_TASK_RUNNER_runTask(DIAGNOSTIC_TASK_config_t*, COMM_DIAGNOSTIC_commandMessage_t*, unsigned long, bool)>:
 802cab4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802cab8:	f89d 7018 	ldrb.w	r7, [sp, #24]
 802cabc:	4605      	mov	r5, r0
 802cabe:	460c      	mov	r4, r1
 802cac0:	4690      	mov	r8, r2
 802cac2:	461e      	mov	r6, r3
 802cac4:	b15f      	cbz	r7, 802cade <DIAGNOSTIC_TASK_RUNNER_runTask(DIAGNOSTIC_TASK_config_t*, COMM_DIAGNOSTIC_commandMessage_t*, unsigned long, bool)+0x2a>
 802cac6:	f000 fc3b 	bl	802d340 <TIME_getTimeMsec>
 802caca:	60e0      	str	r0, [r4, #12]
 802cacc:	4628      	mov	r0, r5
 802cace:	6864      	ldr	r4, [r4, #4]
 802cad0:	463b      	mov	r3, r7
 802cad2:	4632      	mov	r2, r6
 802cad4:	4641      	mov	r1, r8
 802cad6:	47a0      	blx	r4
 802cad8:	4628      	mov	r0, r5
 802cada:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802cade:	f000 fc2f 	bl	802d340 <TIME_getTimeMsec>
 802cae2:	e9d4 3202 	ldrd	r3, r2, [r4, #8]
 802cae6:	1a80      	subs	r0, r0, r2
 802cae8:	4298      	cmp	r0, r3
 802caea:	d3ef      	bcc.n	802cacc <DIAGNOSTIC_TASK_RUNNER_runTask(DIAGNOSTIC_TASK_config_t*, COMM_DIAGNOSTIC_commandMessage_t*, unsigned long, bool)+0x18>
 802caec:	2207      	movs	r2, #7
 802caee:	2102      	movs	r1, #2
 802caf0:	4628      	mov	r0, r5
 802caf2:	f7ff f8f1 	bl	802bcd8 <TaskStatus::TaskStatus(TaskStatus::Result_e, unsigned int)>
 802caf6:	4628      	mov	r0, r5
 802caf8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0802cafc <readDriveLimitsTask(COMM_DIAGNOSTIC_commandMessage_t*, unsigned long, bool)>:
 802cafc:	b510      	push	{r4, lr}
 802cafe:	2101      	movs	r1, #1
 802cb00:	4604      	mov	r4, r0
 802cb02:	f7ff f8e3 	bl	802bccc <TaskStatus::TaskStatus(TaskStatus::Result_e)>
 802cb06:	4620      	mov	r0, r4
 802cb08:	bd10      	pop	{r4, pc}
 802cb0a:	bf00      	nop

0802cb0c <enableMotorAsyncDataTask(COMM_DIAGNOSTIC_commandMessage_t*, unsigned long, bool)>:
 802cb0c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802cb10:	4607      	mov	r7, r0
 802cb12:	b084      	sub	sp, #16
 802cb14:	460c      	mov	r4, r1
 802cb16:	461d      	mov	r5, r3
 802cb18:	b9fb      	cbnz	r3, 802cb5a <enableMotorAsyncDataTask(COMM_DIAGNOSTIC_commandMessage_t*, unsigned long, bool)+0x4e>
 802cb1a:	4b1b      	ldr	r3, [pc, #108]	; (802cb88 <enableMotorAsyncDataTask(COMM_DIAGNOSTIC_commandMessage_t*, unsigned long, bool)+0x7c>)
 802cb1c:	781e      	ldrb	r6, [r3, #0]
 802cb1e:	f10d 0808 	add.w	r8, sp, #8
 802cb22:	7a63      	ldrb	r3, [r4, #9]
 802cb24:	f8d4 200a 	ldr.w	r2, [r4, #10]
 802cb28:	9200      	str	r2, [sp, #0]
 802cb2a:	3b00      	subs	r3, #0
 802cb2c:	4632      	mov	r2, r6
 802cb2e:	4629      	mov	r1, r5
 802cb30:	bf18      	it	ne
 802cb32:	2301      	movne	r3, #1
 802cb34:	4640      	mov	r0, r8
 802cb36:	f7fb f8e1 	bl	8027cfc <ACTIONS_enableTelemetry(bool, ROBOT_axisIndex_t, bool, unsigned int)>
 802cb3a:	f8bd 300c 	ldrh.w	r3, [sp, #12]
 802cb3e:	2b07      	cmp	r3, #7
 802cb40:	bf96      	itet	ls
 802cb42:	4a12      	ldrls	r2, [pc, #72]	; (802cb8c <enableMotorAsyncDataTask(COMM_DIAGNOSTIC_commandMessage_t*, unsigned long, bool)+0x80>)
 802cb44:	230d      	movhi	r3, #13
 802cb46:	5cd3      	ldrbls	r3, [r2, r3]
 802cb48:	9303      	str	r3, [sp, #12]
 802cb4a:	4641      	mov	r1, r8
 802cb4c:	4638      	mov	r0, r7
 802cb4e:	f7ff f8cb 	bl	802bce8 <TaskStatus::TaskStatus(TaskStatus const&)>
 802cb52:	4638      	mov	r0, r7
 802cb54:	b004      	add	sp, #16
 802cb56:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802cb5a:	7a0e      	ldrb	r6, [r1, #8]
 802cb5c:	490c      	ldr	r1, [pc, #48]	; (802cb90 <enableMotorAsyncDataTask(COMM_DIAGNOSTIC_commandMessage_t*, unsigned long, bool)+0x84>)
 802cb5e:	f10d 0808 	add.w	r8, sp, #8
 802cb62:	4632      	mov	r2, r6
 802cb64:	4640      	mov	r0, r8
 802cb66:	f7f5 ffbf 	bl	8022ae8 <Robot::getAxis(ROBOT_axisIndex_t)>
 802cb6a:	f89d 300c 	ldrb.w	r3, [sp, #12]
 802cb6e:	b113      	cbz	r3, 802cb76 <enableMotorAsyncDataTask(COMM_DIAGNOSTIC_commandMessage_t*, unsigned long, bool)+0x6a>
 802cb70:	4b05      	ldr	r3, [pc, #20]	; (802cb88 <enableMotorAsyncDataTask(COMM_DIAGNOSTIC_commandMessage_t*, unsigned long, bool)+0x7c>)
 802cb72:	701e      	strb	r6, [r3, #0]
 802cb74:	e7d5      	b.n	802cb22 <enableMotorAsyncDataTask(COMM_DIAGNOSTIC_commandMessage_t*, unsigned long, bool)+0x16>
 802cb76:	2208      	movs	r2, #8
 802cb78:	2102      	movs	r1, #2
 802cb7a:	4638      	mov	r0, r7
 802cb7c:	f7ff f8ac 	bl	802bcd8 <TaskStatus::TaskStatus(TaskStatus::Result_e, unsigned int)>
 802cb80:	4638      	mov	r0, r7
 802cb82:	b004      	add	sp, #16
 802cb84:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802cb88:	20005194 	.word	0x20005194
 802cb8c:	08046f70 	.word	0x08046f70
 802cb90:	2000f630 	.word	0x2000f630

0802cb94 <readStatusTask(COMM_DIAGNOSTIC_commandMessage_t*, unsigned long, bool)>:
 802cb94:	b510      	push	{r4, lr}
 802cb96:	b082      	sub	sp, #8
 802cb98:	7a0a      	ldrb	r2, [r1, #8]
 802cb9a:	490b      	ldr	r1, [pc, #44]	; (802cbc8 <readStatusTask(COMM_DIAGNOSTIC_commandMessage_t*, unsigned long, bool)+0x34>)
 802cb9c:	4604      	mov	r4, r0
 802cb9e:	4668      	mov	r0, sp
 802cba0:	f7f5 ffa2 	bl	8022ae8 <Robot::getAxis(ROBOT_axisIndex_t)>
 802cba4:	f89d 3004 	ldrb.w	r3, [sp, #4]
 802cba8:	b133      	cbz	r3, 802cbb8 <readStatusTask(COMM_DIAGNOSTIC_commandMessage_t*, unsigned long, bool)+0x24>
 802cbaa:	2101      	movs	r1, #1
 802cbac:	4620      	mov	r0, r4
 802cbae:	f7ff f88d 	bl	802bccc <TaskStatus::TaskStatus(TaskStatus::Result_e)>
 802cbb2:	4620      	mov	r0, r4
 802cbb4:	b002      	add	sp, #8
 802cbb6:	bd10      	pop	{r4, pc}
 802cbb8:	2208      	movs	r2, #8
 802cbba:	2102      	movs	r1, #2
 802cbbc:	4620      	mov	r0, r4
 802cbbe:	f7ff f88b 	bl	802bcd8 <TaskStatus::TaskStatus(TaskStatus::Result_e, unsigned int)>
 802cbc2:	4620      	mov	r0, r4
 802cbc4:	b002      	add	sp, #8
 802cbc6:	bd10      	pop	{r4, pc}
 802cbc8:	2000f630 	.word	0x2000f630

0802cbcc <stopMotorTask(COMM_DIAGNOSTIC_commandMessage_t*, unsigned long, bool)>:
 802cbcc:	b5f0      	push	{r4, r5, r6, r7, lr}
 802cbce:	4604      	mov	r4, r0
 802cbd0:	b083      	sub	sp, #12
 802cbd2:	461d      	mov	r5, r3
 802cbd4:	b9b3      	cbnz	r3, 802cc04 <stopMotorTask(COMM_DIAGNOSTIC_commandMessage_t*, unsigned long, bool)+0x38>
 802cbd6:	4b16      	ldr	r3, [pc, #88]	; (802cc30 <stopMotorTask(COMM_DIAGNOSTIC_commandMessage_t*, unsigned long, bool)+0x64>)
 802cbd8:	781f      	ldrb	r7, [r3, #0]
 802cbda:	466e      	mov	r6, sp
 802cbdc:	463a      	mov	r2, r7
 802cbde:	4629      	mov	r1, r5
 802cbe0:	4630      	mov	r0, r6
 802cbe2:	f7fb f81d 	bl	8027c20 <ACTIONS_stop(bool, ROBOT_axisIndex_t)>
 802cbe6:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 802cbea:	2b07      	cmp	r3, #7
 802cbec:	bf96      	itet	ls
 802cbee:	4a11      	ldrls	r2, [pc, #68]	; (802cc34 <stopMotorTask(COMM_DIAGNOSTIC_commandMessage_t*, unsigned long, bool)+0x68>)
 802cbf0:	230d      	movhi	r3, #13
 802cbf2:	5cd3      	ldrbls	r3, [r2, r3]
 802cbf4:	9301      	str	r3, [sp, #4]
 802cbf6:	4631      	mov	r1, r6
 802cbf8:	4620      	mov	r0, r4
 802cbfa:	f7ff f875 	bl	802bce8 <TaskStatus::TaskStatus(TaskStatus const&)>
 802cbfe:	4620      	mov	r0, r4
 802cc00:	b003      	add	sp, #12
 802cc02:	bdf0      	pop	{r4, r5, r6, r7, pc}
 802cc04:	7a0f      	ldrb	r7, [r1, #8]
 802cc06:	490c      	ldr	r1, [pc, #48]	; (802cc38 <stopMotorTask(COMM_DIAGNOSTIC_commandMessage_t*, unsigned long, bool)+0x6c>)
 802cc08:	466e      	mov	r6, sp
 802cc0a:	463a      	mov	r2, r7
 802cc0c:	4630      	mov	r0, r6
 802cc0e:	f7f5 ff6b 	bl	8022ae8 <Robot::getAxis(ROBOT_axisIndex_t)>
 802cc12:	f89d 3004 	ldrb.w	r3, [sp, #4]
 802cc16:	b113      	cbz	r3, 802cc1e <stopMotorTask(COMM_DIAGNOSTIC_commandMessage_t*, unsigned long, bool)+0x52>
 802cc18:	4b05      	ldr	r3, [pc, #20]	; (802cc30 <stopMotorTask(COMM_DIAGNOSTIC_commandMessage_t*, unsigned long, bool)+0x64>)
 802cc1a:	701f      	strb	r7, [r3, #0]
 802cc1c:	e7de      	b.n	802cbdc <stopMotorTask(COMM_DIAGNOSTIC_commandMessage_t*, unsigned long, bool)+0x10>
 802cc1e:	2208      	movs	r2, #8
 802cc20:	2102      	movs	r1, #2
 802cc22:	4620      	mov	r0, r4
 802cc24:	f7ff f858 	bl	802bcd8 <TaskStatus::TaskStatus(TaskStatus::Result_e, unsigned int)>
 802cc28:	4620      	mov	r0, r4
 802cc2a:	b003      	add	sp, #12
 802cc2c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 802cc2e:	bf00      	nop
 802cc30:	20005194 	.word	0x20005194
 802cc34:	08046f70 	.word	0x08046f70
 802cc38:	2000f630 	.word	0x2000f630

0802cc3c <moveMotorTask(COMM_DIAGNOSTIC_commandMessage_t*, unsigned long, bool)>:
 802cc3c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802cc40:	4607      	mov	r7, r0
 802cc42:	b082      	sub	sp, #8
 802cc44:	460c      	mov	r4, r1
 802cc46:	461d      	mov	r5, r3
 802cc48:	bb83      	cbnz	r3, 802ccac <moveMotorTask(COMM_DIAGNOSTIC_commandMessage_t*, unsigned long, bool)+0x70>
 802cc4a:	4b23      	ldr	r3, [pc, #140]	; (802ccd8 <moveMotorTask(COMM_DIAGNOSTIC_commandMessage_t*, unsigned long, bool)+0x9c>)
 802cc4c:	781e      	ldrb	r6, [r3, #0]
 802cc4e:	46e8      	mov	r8, sp
 802cc50:	f8d4 3015 	ldr.w	r3, [r4, #21]
 802cc54:	ee01 3a90 	vmov	s3, r3
 802cc58:	f8d4 3011 	ldr.w	r3, [r4, #17]
 802cc5c:	ee01 3a10 	vmov	s2, r3
 802cc60:	f8d4 300d 	ldr.w	r3, [r4, #13]
 802cc64:	ee00 3a90 	vmov	s1, r3
 802cc68:	f8d4 3009 	ldr.w	r3, [r4, #9]
 802cc6c:	ee00 3a10 	vmov	s0, r3
 802cc70:	4632      	mov	r2, r6
 802cc72:	eef8 1a61 	vcvt.f32.u32	s3, s3
 802cc76:	eeb8 1a41 	vcvt.f32.u32	s2, s2
 802cc7a:	eef8 0a60 	vcvt.f32.u32	s1, s1
 802cc7e:	eeb8 0ac0 	vcvt.f32.s32	s0, s0
 802cc82:	4629      	mov	r1, r5
 802cc84:	4640      	mov	r0, r8
 802cc86:	2300      	movs	r3, #0
 802cc88:	f7fa fe30 	bl	80278ec <ACTIONS_move(bool, ROBOT_axisIndex_t, float, AXIS_moveType_t, float, float, float)>
 802cc8c:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 802cc90:	2b07      	cmp	r3, #7
 802cc92:	bf96      	itet	ls
 802cc94:	4a11      	ldrls	r2, [pc, #68]	; (802ccdc <moveMotorTask(COMM_DIAGNOSTIC_commandMessage_t*, unsigned long, bool)+0xa0>)
 802cc96:	230d      	movhi	r3, #13
 802cc98:	5cd3      	ldrbls	r3, [r2, r3]
 802cc9a:	9301      	str	r3, [sp, #4]
 802cc9c:	4641      	mov	r1, r8
 802cc9e:	4638      	mov	r0, r7
 802cca0:	f7ff f822 	bl	802bce8 <TaskStatus::TaskStatus(TaskStatus const&)>
 802cca4:	4638      	mov	r0, r7
 802cca6:	b002      	add	sp, #8
 802cca8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802ccac:	7a0e      	ldrb	r6, [r1, #8]
 802ccae:	490c      	ldr	r1, [pc, #48]	; (802cce0 <moveMotorTask(COMM_DIAGNOSTIC_commandMessage_t*, unsigned long, bool)+0xa4>)
 802ccb0:	46e8      	mov	r8, sp
 802ccb2:	4632      	mov	r2, r6
 802ccb4:	4640      	mov	r0, r8
 802ccb6:	f7f5 ff17 	bl	8022ae8 <Robot::getAxis(ROBOT_axisIndex_t)>
 802ccba:	f89d 3004 	ldrb.w	r3, [sp, #4]
 802ccbe:	b113      	cbz	r3, 802ccc6 <moveMotorTask(COMM_DIAGNOSTIC_commandMessage_t*, unsigned long, bool)+0x8a>
 802ccc0:	4b05      	ldr	r3, [pc, #20]	; (802ccd8 <moveMotorTask(COMM_DIAGNOSTIC_commandMessage_t*, unsigned long, bool)+0x9c>)
 802ccc2:	701e      	strb	r6, [r3, #0]
 802ccc4:	e7c4      	b.n	802cc50 <moveMotorTask(COMM_DIAGNOSTIC_commandMessage_t*, unsigned long, bool)+0x14>
 802ccc6:	2208      	movs	r2, #8
 802ccc8:	2102      	movs	r1, #2
 802ccca:	4638      	mov	r0, r7
 802cccc:	f7ff f804 	bl	802bcd8 <TaskStatus::TaskStatus(TaskStatus::Result_e, unsigned int)>
 802ccd0:	4638      	mov	r0, r7
 802ccd2:	b002      	add	sp, #8
 802ccd4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802ccd8:	20005194 	.word	0x20005194
 802ccdc:	08046f70 	.word	0x08046f70
 802cce0:	2000f630 	.word	0x2000f630

0802cce4 <homeTask(COMM_DIAGNOSTIC_commandMessage_t*, unsigned long, bool)>:
 802cce4:	b510      	push	{r4, lr}
 802cce6:	4604      	mov	r4, r0
 802cce8:	b943      	cbnz	r3, 802ccfc <homeTask(COMM_DIAGNOSTIC_commandMessage_t*, unsigned long, bool)+0x18>
 802ccea:	490a      	ldr	r1, [pc, #40]	; (802cd14 <homeTask(COMM_DIAGNOSTIC_commandMessage_t*, unsigned long, bool)+0x30>)
 802ccec:	7809      	ldrb	r1, [r1, #0]
 802ccee:	b951      	cbnz	r1, 802cd06 <homeTask(COMM_DIAGNOSTIC_commandMessage_t*, unsigned long, bool)+0x22>
 802ccf0:	4620      	mov	r0, r4
 802ccf2:	2106      	movs	r1, #6
 802ccf4:	f7fd f92a 	bl	8029f4c <FULL_HOME_run(COMM_CCP_homingModes_t, unsigned long, bool)>
 802ccf8:	4620      	mov	r0, r4
 802ccfa:	bd10      	pop	{r4, pc}
 802ccfc:	4805      	ldr	r0, [pc, #20]	; (802cd14 <homeTask(COMM_DIAGNOSTIC_commandMessage_t*, unsigned long, bool)+0x30>)
 802ccfe:	7a09      	ldrb	r1, [r1, #8]
 802cd00:	7001      	strb	r1, [r0, #0]
 802cd02:	2900      	cmp	r1, #0
 802cd04:	d0f4      	beq.n	802ccf0 <homeTask(COMM_DIAGNOSTIC_commandMessage_t*, unsigned long, bool)+0xc>
 802cd06:	2208      	movs	r2, #8
 802cd08:	2102      	movs	r1, #2
 802cd0a:	4620      	mov	r0, r4
 802cd0c:	f7fe ffe4 	bl	802bcd8 <TaskStatus::TaskStatus(TaskStatus::Result_e, unsigned int)>
 802cd10:	4620      	mov	r0, r4
 802cd12:	bd10      	pop	{r4, pc}
 802cd14:	200051b7 	.word	0x200051b7

0802cd18 <powerMotorTask(COMM_DIAGNOSTIC_commandMessage_t*, unsigned long, bool)>:
 802cd18:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802cd1c:	4604      	mov	r4, r0
 802cd1e:	b082      	sub	sp, #8
 802cd20:	460e      	mov	r6, r1
 802cd22:	461d      	mov	r5, r3
 802cd24:	b9db      	cbnz	r3, 802cd5e <powerMotorTask(COMM_DIAGNOSTIC_commandMessage_t*, unsigned long, bool)+0x46>
 802cd26:	4b19      	ldr	r3, [pc, #100]	; (802cd8c <powerMotorTask(COMM_DIAGNOSTIC_commandMessage_t*, unsigned long, bool)+0x74>)
 802cd28:	781f      	ldrb	r7, [r3, #0]
 802cd2a:	46e8      	mov	r8, sp
 802cd2c:	7a73      	ldrb	r3, [r6, #9]
 802cd2e:	3b00      	subs	r3, #0
 802cd30:	463a      	mov	r2, r7
 802cd32:	bf18      	it	ne
 802cd34:	2301      	movne	r3, #1
 802cd36:	4629      	mov	r1, r5
 802cd38:	4640      	mov	r0, r8
 802cd3a:	f7fa fe87 	bl	8027a4c <ACTIONS_power(bool, ROBOT_axisIndex_t, AXIS_powerState_t)>
 802cd3e:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 802cd42:	2b07      	cmp	r3, #7
 802cd44:	bf96      	itet	ls
 802cd46:	4a12      	ldrls	r2, [pc, #72]	; (802cd90 <powerMotorTask(COMM_DIAGNOSTIC_commandMessage_t*, unsigned long, bool)+0x78>)
 802cd48:	230d      	movhi	r3, #13
 802cd4a:	5cd3      	ldrbls	r3, [r2, r3]
 802cd4c:	9301      	str	r3, [sp, #4]
 802cd4e:	4641      	mov	r1, r8
 802cd50:	4620      	mov	r0, r4
 802cd52:	f7fe ffc9 	bl	802bce8 <TaskStatus::TaskStatus(TaskStatus const&)>
 802cd56:	4620      	mov	r0, r4
 802cd58:	b002      	add	sp, #8
 802cd5a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802cd5e:	7a0f      	ldrb	r7, [r1, #8]
 802cd60:	490c      	ldr	r1, [pc, #48]	; (802cd94 <powerMotorTask(COMM_DIAGNOSTIC_commandMessage_t*, unsigned long, bool)+0x7c>)
 802cd62:	46e8      	mov	r8, sp
 802cd64:	463a      	mov	r2, r7
 802cd66:	4640      	mov	r0, r8
 802cd68:	f7f5 febe 	bl	8022ae8 <Robot::getAxis(ROBOT_axisIndex_t)>
 802cd6c:	f89d 3004 	ldrb.w	r3, [sp, #4]
 802cd70:	b113      	cbz	r3, 802cd78 <powerMotorTask(COMM_DIAGNOSTIC_commandMessage_t*, unsigned long, bool)+0x60>
 802cd72:	4b06      	ldr	r3, [pc, #24]	; (802cd8c <powerMotorTask(COMM_DIAGNOSTIC_commandMessage_t*, unsigned long, bool)+0x74>)
 802cd74:	701f      	strb	r7, [r3, #0]
 802cd76:	e7d9      	b.n	802cd2c <powerMotorTask(COMM_DIAGNOSTIC_commandMessage_t*, unsigned long, bool)+0x14>
 802cd78:	2208      	movs	r2, #8
 802cd7a:	2102      	movs	r1, #2
 802cd7c:	4620      	mov	r0, r4
 802cd7e:	f7fe ffab 	bl	802bcd8 <TaskStatus::TaskStatus(TaskStatus::Result_e, unsigned int)>
 802cd82:	4620      	mov	r0, r4
 802cd84:	b002      	add	sp, #8
 802cd86:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802cd8a:	bf00      	nop
 802cd8c:	20005194 	.word	0x20005194
 802cd90:	08046f70 	.word	0x08046f70
 802cd94:	2000f630 	.word	0x2000f630

0802cd98 <resetMotorTask(COMM_DIAGNOSTIC_commandMessage_t*, unsigned long, bool)>:
 802cd98:	b5f0      	push	{r4, r5, r6, r7, lr}
 802cd9a:	4604      	mov	r4, r0
 802cd9c:	b083      	sub	sp, #12
 802cd9e:	461d      	mov	r5, r3
 802cda0:	b9b3      	cbnz	r3, 802cdd0 <resetMotorTask(COMM_DIAGNOSTIC_commandMessage_t*, unsigned long, bool)+0x38>
 802cda2:	4b16      	ldr	r3, [pc, #88]	; (802cdfc <resetMotorTask(COMM_DIAGNOSTIC_commandMessage_t*, unsigned long, bool)+0x64>)
 802cda4:	781f      	ldrb	r7, [r3, #0]
 802cda6:	466e      	mov	r6, sp
 802cda8:	463a      	mov	r2, r7
 802cdaa:	4629      	mov	r1, r5
 802cdac:	4630      	mov	r0, r6
 802cdae:	f7fa fecf 	bl	8027b50 <ACTIONS_reset(bool, ROBOT_axisIndex_t)>
 802cdb2:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 802cdb6:	2b07      	cmp	r3, #7
 802cdb8:	bf96      	itet	ls
 802cdba:	4a11      	ldrls	r2, [pc, #68]	; (802ce00 <resetMotorTask(COMM_DIAGNOSTIC_commandMessage_t*, unsigned long, bool)+0x68>)
 802cdbc:	230d      	movhi	r3, #13
 802cdbe:	5cd3      	ldrbls	r3, [r2, r3]
 802cdc0:	9301      	str	r3, [sp, #4]
 802cdc2:	4631      	mov	r1, r6
 802cdc4:	4620      	mov	r0, r4
 802cdc6:	f7fe ff8f 	bl	802bce8 <TaskStatus::TaskStatus(TaskStatus const&)>
 802cdca:	4620      	mov	r0, r4
 802cdcc:	b003      	add	sp, #12
 802cdce:	bdf0      	pop	{r4, r5, r6, r7, pc}
 802cdd0:	7a0f      	ldrb	r7, [r1, #8]
 802cdd2:	490c      	ldr	r1, [pc, #48]	; (802ce04 <resetMotorTask(COMM_DIAGNOSTIC_commandMessage_t*, unsigned long, bool)+0x6c>)
 802cdd4:	466e      	mov	r6, sp
 802cdd6:	463a      	mov	r2, r7
 802cdd8:	4630      	mov	r0, r6
 802cdda:	f7f5 fe85 	bl	8022ae8 <Robot::getAxis(ROBOT_axisIndex_t)>
 802cdde:	f89d 3004 	ldrb.w	r3, [sp, #4]
 802cde2:	b113      	cbz	r3, 802cdea <resetMotorTask(COMM_DIAGNOSTIC_commandMessage_t*, unsigned long, bool)+0x52>
 802cde4:	4b05      	ldr	r3, [pc, #20]	; (802cdfc <resetMotorTask(COMM_DIAGNOSTIC_commandMessage_t*, unsigned long, bool)+0x64>)
 802cde6:	701f      	strb	r7, [r3, #0]
 802cde8:	e7de      	b.n	802cda8 <resetMotorTask(COMM_DIAGNOSTIC_commandMessage_t*, unsigned long, bool)+0x10>
 802cdea:	2208      	movs	r2, #8
 802cdec:	2102      	movs	r1, #2
 802cdee:	4620      	mov	r0, r4
 802cdf0:	f7fe ff72 	bl	802bcd8 <TaskStatus::TaskStatus(TaskStatus::Result_e, unsigned int)>
 802cdf4:	4620      	mov	r0, r4
 802cdf6:	b003      	add	sp, #12
 802cdf8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 802cdfa:	bf00      	nop
 802cdfc:	20005194 	.word	0x20005194
 802ce00:	08046f70 	.word	0x08046f70
 802ce04:	2000f630 	.word	0x2000f630

0802ce08 <getSensorStateTask(COMM_DIAGNOSTIC_commandMessage_t*, unsigned long, bool)>:
 802ce08:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802ce0c:	460e      	mov	r6, r1
 802ce0e:	7a09      	ldrb	r1, [r1, #8]
 802ce10:	2904      	cmp	r1, #4
 802ce12:	b08a      	sub	sp, #40	; 0x28
 802ce14:	4605      	mov	r5, r0
 802ce16:	d81c      	bhi.n	802ce52 <getSensorStateTask(COMM_DIAGNOSTIC_commandMessage_t*, unsigned long, bool)+0x4a>
 802ce18:	bb29      	cbnz	r1, 802ce66 <getSensorStateTask(COMM_DIAGNOSTIC_commandMessage_t*, unsigned long, bool)+0x5e>
 802ce1a:	461f      	mov	r7, r3
 802ce1c:	4690      	mov	r8, r2
 802ce1e:	f7fe ff55 	bl	802bccc <TaskStatus::TaskStatus(TaskStatus::Result_e)>
 802ce22:	2f00      	cmp	r7, #0
 802ce24:	d14a      	bne.n	802cebc <getSensorStateTask(COMM_DIAGNOSTIC_commandMessage_t*, unsigned long, bool)+0xb4>
 802ce26:	f018 0f04 	tst.w	r8, #4
 802ce2a:	d018      	beq.n	802ce5e <getSensorStateTask(COMM_DIAGNOSTIC_commandMessage_t*, unsigned long, bool)+0x56>
 802ce2c:	a803      	add	r0, sp, #12
 802ce2e:	f001 ff69 	bl	802ed04 <CAMERA_getResponseData()>
 802ce32:	9b03      	ldr	r3, [sp, #12]
 802ce34:	f8cd 3005 	str.w	r3, [sp, #5]
 802ce38:	a801      	add	r0, sp, #4
 802ce3a:	f88d 7004 	strb.w	r7, [sp, #4]
 802ce3e:	f7f8 f9f5 	bl	802522c <DIAGNOSTIC_endianSwapCameraSensorStateData(COMM_DIAGNOSTIC_cameraSensorState_t*)>
 802ce42:	a901      	add	r1, sp, #4
 802ce44:	2205      	movs	r2, #5
 802ce46:	2008      	movs	r0, #8
 802ce48:	f7f8 f91c 	bl	8025084 <DIAGNOSTIC_sendDataMessage(COMM_DIAGNOSTIC_messageId_e, unsigned char*, unsigned short)>
 802ce4c:	2301      	movs	r3, #1
 802ce4e:	702b      	strb	r3, [r5, #0]
 802ce50:	e005      	b.n	802ce5e <getSensorStateTask(COMM_DIAGNOSTIC_commandMessage_t*, unsigned long, bool)+0x56>
 802ce52:	1f4c      	subs	r4, r1, #5
 802ce54:	2c03      	cmp	r4, #3
 802ce56:	d823      	bhi.n	802cea0 <getSensorStateTask(COMM_DIAGNOSTIC_commandMessage_t*, unsigned long, bool)+0x98>
 802ce58:	2101      	movs	r1, #1
 802ce5a:	f7fe ff37 	bl	802bccc <TaskStatus::TaskStatus(TaskStatus::Result_e)>
 802ce5e:	4628      	mov	r0, r5
 802ce60:	b00a      	add	sp, #40	; 0x28
 802ce62:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802ce66:	a803      	add	r0, sp, #12
 802ce68:	2205      	movs	r2, #5
 802ce6a:	2100      	movs	r1, #0
 802ce6c:	f012 fbf2 	bl	803f654 <memset>
 802ce70:	7a34      	ldrb	r4, [r6, #8]
 802ce72:	2c04      	cmp	r4, #4
 802ce74:	d81c      	bhi.n	802ceb0 <getSensorStateTask(COMM_DIAGNOSTIC_commandMessage_t*, unsigned long, bool)+0xa8>
 802ce76:	4b20      	ldr	r3, [pc, #128]	; (802cef8 <getSensorStateTask(COMM_DIAGNOSTIC_commandMessage_t*, unsigned long, bool)+0xf0>)
 802ce78:	6818      	ldr	r0, [r3, #0]
 802ce7a:	6803      	ldr	r3, [r0, #0]
 802ce7c:	69db      	ldr	r3, [r3, #28]
 802ce7e:	4798      	blx	r3
 802ce80:	1e62      	subs	r2, r4, #1
 802ce82:	9001      	str	r0, [sp, #4]
 802ce84:	f88d 400c 	strb.w	r4, [sp, #12]
 802ce88:	f3c0 2307 	ubfx	r3, r0, #8, #8
 802ce8c:	b2c4      	uxtb	r4, r0
 802ce8e:	f3c0 4107 	ubfx	r1, r0, #16, #8
 802ce92:	0e00      	lsrs	r0, r0, #24
 802ce94:	2a03      	cmp	r2, #3
 802ce96:	d82c      	bhi.n	802cef2 <getSensorStateTask(COMM_DIAGNOSTIC_commandMessage_t*, unsigned long, bool)+0xea>
 802ce98:	e8df f002 	tbb	[pc, r2]
 802ce9c:	13292714 	.word	0x13292714
 802cea0:	220c      	movs	r2, #12
 802cea2:	2102      	movs	r1, #2
 802cea4:	f7fe ff18 	bl	802bcd8 <TaskStatus::TaskStatus(TaskStatus::Result_e, unsigned int)>
 802cea8:	4628      	mov	r0, r5
 802ceaa:	b00a      	add	sp, #40	; 0x28
 802ceac:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802ceb0:	220c      	movs	r2, #12
 802ceb2:	2102      	movs	r1, #2
 802ceb4:	4628      	mov	r0, r5
 802ceb6:	f7fe ff0f 	bl	802bcd8 <TaskStatus::TaskStatus(TaskStatus::Result_e, unsigned int)>
 802ceba:	e7d0      	b.n	802ce5e <getSensorStateTask(COMM_DIAGNOSTIC_commandMessage_t*, unsigned long, bool)+0x56>
 802cebc:	f002 f8a6 	bl	802f00c <CAMERA_trigger()>
 802cec0:	e7cd      	b.n	802ce5e <getSensorStateTask(COMM_DIAGNOSTIC_commandMessage_t*, unsigned long, bool)+0x56>
 802cec2:	4623      	mov	r3, r4
 802cec4:	3b00      	subs	r3, #0
 802cec6:	bf18      	it	ne
 802cec8:	2301      	movne	r3, #1
 802ceca:	425b      	negs	r3, r3
 802cecc:	a903      	add	r1, sp, #12
 802cece:	2205      	movs	r2, #5
 802ced0:	2008      	movs	r0, #8
 802ced2:	f8cd 300d 	str.w	r3, [sp, #13]
 802ced6:	f7f8 f8d5 	bl	8025084 <DIAGNOSTIC_sendDataMessage(COMM_DIAGNOSTIC_messageId_e, unsigned char*, unsigned short)>
 802ceda:	2101      	movs	r1, #1
 802cedc:	4628      	mov	r0, r5
 802cede:	f7fe fef5 	bl	802bccc <TaskStatus::TaskStatus(TaskStatus::Result_e)>
 802cee2:	4628      	mov	r0, r5
 802cee4:	b00a      	add	sp, #40	; 0x28
 802cee6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802ceea:	460b      	mov	r3, r1
 802ceec:	e7ea      	b.n	802cec4 <getSensorStateTask(COMM_DIAGNOSTIC_commandMessage_t*, unsigned long, bool)+0xbc>
 802ceee:	4603      	mov	r3, r0
 802cef0:	e7e8      	b.n	802cec4 <getSensorStateTask(COMM_DIAGNOSTIC_commandMessage_t*, unsigned long, bool)+0xbc>
 802cef2:	2300      	movs	r3, #0
 802cef4:	e7ea      	b.n	802cecc <getSensorStateTask(COMM_DIAGNOSTIC_commandMessage_t*, unsigned long, bool)+0xc4>
 802cef6:	bf00      	nop
 802cef8:	2000f630 	.word	0x2000f630

0802cefc <DIAGNOSTIC_TASK_runAsyncTask(void*, unsigned long, bool)>:
 802cefc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 802cf00:	4680      	mov	r8, r0
 802cf02:	b084      	sub	sp, #16
 802cf04:	4692      	mov	sl, r2
 802cf06:	4699      	mov	r9, r3
 802cf08:	b34b      	cbz	r3, 802cf5e <DIAGNOSTIC_TASK_runAsyncTask(void*, unsigned long, bool)+0x62>
 802cf0a:	79c8      	ldrb	r0, [r1, #7]
 802cf0c:	4f15      	ldr	r7, [pc, #84]	; (802cf64 <DIAGNOSTIC_TASK_runAsyncTask(void*, unsigned long, bool)+0x68>)
 802cf0e:	2400      	movs	r4, #0
 802cf10:	0125      	lsls	r5, r4, #4
 802cf12:	3401      	adds	r4, #1
 802cf14:	5d7e      	ldrb	r6, [r7, r5]
 802cf16:	4286      	cmp	r6, r0
 802cf18:	d00a      	beq.n	802cf30 <DIAGNOSTIC_TASK_runAsyncTask(void*, unsigned long, bool)+0x34>
 802cf1a:	2c09      	cmp	r4, #9
 802cf1c:	d1f8      	bne.n	802cf10 <DIAGNOSTIC_TASK_runAsyncTask(void*, unsigned long, bool)+0x14>
 802cf1e:	2205      	movs	r2, #5
 802cf20:	2102      	movs	r1, #2
 802cf22:	4640      	mov	r0, r8
 802cf24:	f7fe fed8 	bl	802bcd8 <TaskStatus::TaskStatus(TaskStatus::Result_e, unsigned int)>
 802cf28:	4640      	mov	r0, r8
 802cf2a:	b004      	add	sp, #16
 802cf2c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802cf30:	4c0d      	ldr	r4, [pc, #52]	; (802cf68 <DIAGNOSTIC_TASK_runAsyncTask(void*, unsigned long, bool)+0x6c>)
 802cf32:	480e      	ldr	r0, [pc, #56]	; (802cf6c <DIAGNOSTIC_TASK_runAsyncTask(void*, unsigned long, bool)+0x70>)
 802cf34:	443d      	add	r5, r7
 802cf36:	221b      	movs	r2, #27
 802cf38:	6025      	str	r5, [r4, #0]
 802cf3a:	f012 fb62 	bl	803f602 <__aeabi_memcpy>
 802cf3e:	f8cd 9000 	str.w	r9, [sp]
 802cf42:	6821      	ldr	r1, [r4, #0]
 802cf44:	4a09      	ldr	r2, [pc, #36]	; (802cf6c <DIAGNOSTIC_TASK_runAsyncTask(void*, unsigned long, bool)+0x70>)
 802cf46:	4653      	mov	r3, sl
 802cf48:	a802      	add	r0, sp, #8
 802cf4a:	f7ff fdb3 	bl	802cab4 <DIAGNOSTIC_TASK_RUNNER_runTask(DIAGNOSTIC_TASK_config_t*, COMM_DIAGNOSTIC_commandMessage_t*, unsigned long, bool)>
 802cf4e:	a902      	add	r1, sp, #8
 802cf50:	4640      	mov	r0, r8
 802cf52:	f7fe fec9 	bl	802bce8 <TaskStatus::TaskStatus(TaskStatus const&)>
 802cf56:	4640      	mov	r0, r8
 802cf58:	b004      	add	sp, #16
 802cf5a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802cf5e:	4c02      	ldr	r4, [pc, #8]	; (802cf68 <DIAGNOSTIC_TASK_runAsyncTask(void*, unsigned long, bool)+0x6c>)
 802cf60:	e7ed      	b.n	802cf3e <DIAGNOSTIC_TASK_runAsyncTask(void*, unsigned long, bool)+0x42>
 802cf62:	bf00      	nop
 802cf64:	20002014 	.word	0x20002014
 802cf68:	20005198 	.word	0x20005198
 802cf6c:	2000519c 	.word	0x2000519c

0802cf70 <NO_TASK_respondComplete(void*, unsigned long, bool)>:
 802cf70:	b510      	push	{r4, lr}
 802cf72:	2101      	movs	r1, #1
 802cf74:	4604      	mov	r4, r0
 802cf76:	f7fe fea9 	bl	802bccc <TaskStatus::TaskStatus(TaskStatus::Result_e)>
 802cf7a:	4620      	mov	r0, r4
 802cf7c:	bd10      	pop	{r4, pc}
 802cf7e:	bf00      	nop

0802cf80 <BUFFER_PICKPLACE_errorStateMachine(unsigned long)>:
 802cf80:	b510      	push	{r4, lr}
 802cf82:	4b04      	ldr	r3, [pc, #16]	; (802cf94 <BUFFER_PICKPLACE_errorStateMachine(unsigned long)+0x14>)
 802cf84:	4604      	mov	r4, r0
 802cf86:	781a      	ldrb	r2, [r3, #0]
 802cf88:	2102      	movs	r1, #2
 802cf8a:	f7fe fea5 	bl	802bcd8 <TaskStatus::TaskStatus(TaskStatus::Result_e, unsigned int)>
 802cf8e:	4620      	mov	r0, r4
 802cf90:	bd10      	pop	{r4, pc}
 802cf92:	bf00      	nop
 802cf94:	200051ec 	.word	0x200051ec

0802cf98 <BUFFER_PICKPLACE_setup()>:
 802cf98:	b570      	push	{r4, r5, r6, lr}
 802cf9a:	4b1e      	ldr	r3, [pc, #120]	; (802d014 <BUFFER_PICKPLACE_setup()+0x7c>)
 802cf9c:	491e      	ldr	r1, [pc, #120]	; (802d018 <BUFFER_PICKPLACE_setup()+0x80>)
 802cf9e:	781a      	ldrb	r2, [r3, #0]
 802cfa0:	2400      	movs	r4, #0
 802cfa2:	2a01      	cmp	r2, #1
 802cfa4:	700c      	strb	r4, [r1, #0]
 802cfa6:	4604      	mov	r4, r0
 802cfa8:	d021      	beq.n	802cfee <BUFFER_PICKPLACE_setup()+0x56>
 802cfaa:	2a02      	cmp	r2, #2
 802cfac:	d119      	bne.n	802cfe2 <BUFFER_PICKPLACE_setup()+0x4a>
 802cfae:	7859      	ldrb	r1, [r3, #1]
 802cfb0:	4a1a      	ldr	r2, [pc, #104]	; (802d01c <BUFFER_PICKPLACE_setup()+0x84>)
 802cfb2:	4b1b      	ldr	r3, [pc, #108]	; (802d020 <BUFFER_PICKPLACE_setup()+0x88>)
 802cfb4:	4e1b      	ldr	r6, [pc, #108]	; (802d024 <BUFFER_PICKPLACE_setup()+0x8c>)
 802cfb6:	4d1c      	ldr	r5, [pc, #112]	; (802d028 <BUFFER_PICKPLACE_setup()+0x90>)
 802cfb8:	7519      	strb	r1, [r3, #20]
 802cfba:	eb02 0281 	add.w	r2, r2, r1, lsl #2
 802cfbe:	491b      	ldr	r1, [pc, #108]	; (802d02c <BUFFER_PICKPLACE_setup()+0x94>)
 802cfc0:	6812      	ldr	r2, [r2, #0]
 802cfc2:	481b      	ldr	r0, [pc, #108]	; (802d030 <BUFFER_PICKPLACE_setup()+0x98>)
 802cfc4:	6032      	str	r2, [r6, #0]
 802cfc6:	60dd      	str	r5, [r3, #12]
 802cfc8:	4a1a      	ldr	r2, [pc, #104]	; (802d034 <BUFFER_PICKPLACE_setup()+0x9c>)
 802cfca:	6118      	str	r0, [r3, #16]
 802cfcc:	250f      	movs	r5, #15
 802cfce:	701d      	strb	r5, [r3, #0]
 802cfd0:	609a      	str	r2, [r3, #8]
 802cfd2:	605a      	str	r2, [r3, #4]
 802cfd4:	600a      	str	r2, [r1, #0]
 802cfd6:	2101      	movs	r1, #1
 802cfd8:	4620      	mov	r0, r4
 802cfda:	f7fe fe77 	bl	802bccc <TaskStatus::TaskStatus(TaskStatus::Result_e)>
 802cfde:	4620      	mov	r0, r4
 802cfe0:	bd70      	pop	{r4, r5, r6, pc}
 802cfe2:	2209      	movs	r2, #9
 802cfe4:	2102      	movs	r1, #2
 802cfe6:	f7fe fe77 	bl	802bcd8 <TaskStatus::TaskStatus(TaskStatus::Result_e, unsigned int)>
 802cfea:	4620      	mov	r0, r4
 802cfec:	bd70      	pop	{r4, r5, r6, pc}
 802cfee:	7858      	ldrb	r0, [r3, #1]
 802cff0:	4a0a      	ldr	r2, [pc, #40]	; (802d01c <BUFFER_PICKPLACE_setup()+0x84>)
 802cff2:	4b11      	ldr	r3, [pc, #68]	; (802d038 <BUFFER_PICKPLACE_setup()+0xa0>)
 802cff4:	4d0b      	ldr	r5, [pc, #44]	; (802d024 <BUFFER_PICKPLACE_setup()+0x8c>)
 802cff6:	7418      	strb	r0, [r3, #16]
 802cff8:	eb02 0280 	add.w	r2, r2, r0, lsl #2
 802cffc:	490d      	ldr	r1, [pc, #52]	; (802d034 <BUFFER_PICKPLACE_setup()+0x9c>)
 802cffe:	6810      	ldr	r0, [r2, #0]
 802d000:	6028      	str	r0, [r5, #0]
 802d002:	480a      	ldr	r0, [pc, #40]	; (802d02c <BUFFER_PICKPLACE_setup()+0x94>)
 802d004:	4a08      	ldr	r2, [pc, #32]	; (802d028 <BUFFER_PICKPLACE_setup()+0x90>)
 802d006:	6099      	str	r1, [r3, #8]
 802d008:	250f      	movs	r5, #15
 802d00a:	701d      	strb	r5, [r3, #0]
 802d00c:	6059      	str	r1, [r3, #4]
 802d00e:	60da      	str	r2, [r3, #12]
 802d010:	6002      	str	r2, [r0, #0]
 802d012:	e7e0      	b.n	802cfd6 <BUFFER_PICKPLACE_setup()+0x3e>
 802d014:	200051e4 	.word	0x200051e4
 802d018:	200051ec 	.word	0x200051ec
 802d01c:	08047020 	.word	0x08047020
 802d020:	200051cc 	.word	0x200051cc
 802d024:	200051e8 	.word	0x200051e8
 802d028:	42740000 	.word	0x42740000
 802d02c:	200051f0 	.word	0x200051f0
 802d030:	42a20000 	.word	0x42a20000
 802d034:	42960000 	.word	0x42960000
 802d038:	200051b8 	.word	0x200051b8

0802d03c <BUFFER_PICKPLACE_mainStateMachine(unsigned long)>:
 802d03c:	b5f0      	push	{r4, r5, r6, r7, lr}
 802d03e:	460d      	mov	r5, r1
 802d040:	b08f      	sub	sp, #60	; 0x3c
 802d042:	2100      	movs	r1, #0
 802d044:	4604      	mov	r4, r0
 802d046:	f7fe fe41 	bl	802bccc <TaskStatus::TaskStatus(TaskStatus::Result_e)>
 802d04a:	4a6c      	ldr	r2, [pc, #432]	; (802d1fc <BUFFER_PICKPLACE_mainStateMachine(unsigned long)+0x1c0>)
 802d04c:	7813      	ldrb	r3, [r2, #0]
 802d04e:	2b08      	cmp	r3, #8
 802d050:	f200 80cf 	bhi.w	802d1f2 <BUFFER_PICKPLACE_mainStateMachine(unsigned long)+0x1b6>
 802d054:	e8df f003 	tbb	[pc, r3]
 802d058:	633c240e 	.word	0x633c240e
 802d05c:	b4a58972 	.word	0xb4a58972
 802d060:	05          	.byte	0x05
 802d061:	00          	.byte	0x00
 802d062:	4866      	ldr	r0, [pc, #408]	; (802d1fc <BUFFER_PICKPLACE_mainStateMachine(unsigned long)+0x1c0>)
 802d064:	2101      	movs	r1, #1
 802d066:	f7fb f94b 	bl	8028300 <SM_RUNNER_setComplete>
 802d06a:	2301      	movs	r3, #1
 802d06c:	7023      	strb	r3, [r4, #0]
 802d06e:	4620      	mov	r0, r4
 802d070:	b00f      	add	sp, #60	; 0x3c
 802d072:	bdf0      	pop	{r4, r5, r6, r7, pc}
 802d074:	4a62      	ldr	r2, [pc, #392]	; (802d200 <BUFFER_PICKPLACE_mainStateMachine(unsigned long)+0x1c4>)
 802d076:	4b63      	ldr	r3, [pc, #396]	; (802d204 <BUFFER_PICKPLACE_mainStateMachine(unsigned long)+0x1c8>)
 802d078:	6810      	ldr	r0, [r2, #0]
 802d07a:	781a      	ldrb	r2, [r3, #0]
 802d07c:	6803      	ldr	r3, [r0, #0]
 802d07e:	2a01      	cmp	r2, #1
 802d080:	bf0c      	ite	eq
 802d082:	2101      	moveq	r1, #1
 802d084:	2102      	movne	r1, #2
 802d086:	685b      	ldr	r3, [r3, #4]
 802d088:	4798      	blx	r3
 802d08a:	2800      	cmp	r0, #0
 802d08c:	d1ed      	bne.n	802d06a <BUFFER_PICKPLACE_mainStateMachine(unsigned long)+0x2e>
 802d08e:	2202      	movs	r2, #2
 802d090:	2318      	movs	r3, #24
 802d092:	7022      	strb	r2, [r4, #0]
 802d094:	6063      	str	r3, [r4, #4]
 802d096:	4a5c      	ldr	r2, [pc, #368]	; (802d208 <BUFFER_PICKPLACE_mainStateMachine(unsigned long)+0x1cc>)
 802d098:	4620      	mov	r0, r4
 802d09a:	7013      	strb	r3, [r2, #0]
 802d09c:	b00f      	add	sp, #60	; 0x3c
 802d09e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 802d0a0:	4b5a      	ldr	r3, [pc, #360]	; (802d20c <BUFFER_PICKPLACE_mainStateMachine(unsigned long)+0x1d0>)
 802d0a2:	7891      	ldrb	r1, [r2, #2]
 802d0a4:	681d      	ldr	r5, [r3, #0]
 802d0a6:	f8ad 5024 	strh.w	r5, [sp, #36]	; 0x24
 802d0aa:	2201      	movs	r2, #1
 802d0ac:	a80b      	add	r0, sp, #44	; 0x2c
 802d0ae:	9200      	str	r2, [sp, #0]
 802d0b0:	0c2d      	lsrs	r5, r5, #16
 802d0b2:	2303      	movs	r3, #3
 802d0b4:	aa09      	add	r2, sp, #36	; 0x24
 802d0b6:	f88d 5026 	strb.w	r5, [sp, #38]	; 0x26
 802d0ba:	f7fa fd19 	bl	8027af0 <ACTIONS_powerList(bool, ROBOT_axisIndex_t const*, unsigned char, AXIS_powerState_t)>
 802d0be:	a90b      	add	r1, sp, #44	; 0x2c
 802d0c0:	4620      	mov	r0, r4
 802d0c2:	f7fe fe19 	bl	802bcf8 <TaskStatus::operator=(TaskStatus const&)>
 802d0c6:	7823      	ldrb	r3, [r4, #0]
 802d0c8:	2b02      	cmp	r3, #2
 802d0ca:	d1d0      	bne.n	802d06e <BUFFER_PICKPLACE_mainStateMachine(unsigned long)+0x32>
 802d0cc:	7923      	ldrb	r3, [r4, #4]
 802d0ce:	e7e2      	b.n	802d096 <BUFFER_PICKPLACE_mainStateMachine(unsigned long)+0x5a>
 802d0d0:	4b4e      	ldr	r3, [pc, #312]	; (802d20c <BUFFER_PICKPLACE_mainStateMachine(unsigned long)+0x1d0>)
 802d0d2:	494f      	ldr	r1, [pc, #316]	; (802d210 <BUFFER_PICKPLACE_mainStateMachine(unsigned long)+0x1d4>)
 802d0d4:	685b      	ldr	r3, [r3, #4]
 802d0d6:	f8ad 301c 	strh.w	r3, [sp, #28]
 802d0da:	0c1b      	lsrs	r3, r3, #16
 802d0dc:	6808      	ldr	r0, [r1, #0]
 802d0de:	f88d 301e 	strb.w	r3, [sp, #30]
 802d0e2:	7891      	ldrb	r1, [r2, #2]
 802d0e4:	900d      	str	r0, [sp, #52]	; 0x34
 802d0e6:	2303      	movs	r3, #3
 802d0e8:	f44f 7296 	mov.w	r2, #300	; 0x12c
 802d0ec:	e9cd 3201 	strd	r3, r2, [sp, #4]
 802d0f0:	2500      	movs	r5, #0
 802d0f2:	ab08      	add	r3, sp, #32
 802d0f4:	9300      	str	r3, [sp, #0]
 802d0f6:	a809      	add	r0, sp, #36	; 0x24
 802d0f8:	4e46      	ldr	r6, [pc, #280]	; (802d214 <BUFFER_PICKPLACE_mainStateMachine(unsigned long)+0x1d8>)
 802d0fa:	9503      	str	r5, [sp, #12]
 802d0fc:	f04f 4785 	mov.w	r7, #1115684864	; 0x42800000
 802d100:	ab0b      	add	r3, sp, #44	; 0x2c
 802d102:	aa07      	add	r2, sp, #28
 802d104:	970b      	str	r7, [sp, #44]	; 0x2c
 802d106:	960c      	str	r6, [sp, #48]	; 0x30
 802d108:	f8ad 5020 	strh.w	r5, [sp, #32]
 802d10c:	f88d 5022 	strb.w	r5, [sp, #34]	; 0x22
 802d110:	f7fa fc64 	bl	80279dc <ACTIONS_moveList(bool, ROBOT_axisIndex_t const*, float*, AXIS_moveType_t*, unsigned char, unsigned int, AXIS_mode_t)>
 802d114:	a909      	add	r1, sp, #36	; 0x24
 802d116:	4620      	mov	r0, r4
 802d118:	f7fe fdee 	bl	802bcf8 <TaskStatus::operator=(TaskStatus const&)>
 802d11c:	e7d3      	b.n	802d0c6 <BUFFER_PICKPLACE_mainStateMachine(unsigned long)+0x8a>
 802d11e:	4b3e      	ldr	r3, [pc, #248]	; (802d218 <BUFFER_PICKPLACE_mainStateMachine(unsigned long)+0x1dc>)
 802d120:	7891      	ldrb	r1, [r2, #2]
 802d122:	ed93 0a00 	vldr	s0, [r3]
 802d126:	2300      	movs	r3, #0
 802d128:	a80b      	add	r0, sp, #44	; 0x2c
 802d12a:	9300      	str	r3, [sp, #0]
 802d12c:	220f      	movs	r2, #15
 802d12e:	f7fa fb6b 	bl	8027808 <ACTIONS_move(bool, ROBOT_axisIndex_t, float, AXIS_moveType_t, AXIS_mode_t)>
 802d132:	a90b      	add	r1, sp, #44	; 0x2c
 802d134:	4620      	mov	r0, r4
 802d136:	f7fe fddf 	bl	802bcf8 <TaskStatus::operator=(TaskStatus const&)>
 802d13a:	e7c4      	b.n	802d0c6 <BUFFER_PICKPLACE_mainStateMachine(unsigned long)+0x8a>
 802d13c:	4b31      	ldr	r3, [pc, #196]	; (802d204 <BUFFER_PICKPLACE_mainStateMachine(unsigned long)+0x1c8>)
 802d13e:	781b      	ldrb	r3, [r3, #0]
 802d140:	2b01      	cmp	r3, #1
 802d142:	d044      	beq.n	802d1ce <BUFFER_PICKPLACE_mainStateMachine(unsigned long)+0x192>
 802d144:	4e35      	ldr	r6, [pc, #212]	; (802d21c <BUFFER_PICKPLACE_mainStateMachine(unsigned long)+0x1e0>)
 802d146:	7893      	ldrb	r3, [r2, #2]
 802d148:	9304      	str	r3, [sp, #16]
 802d14a:	f106 0308 	add.w	r3, r6, #8
 802d14e:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 802d150:	e88d 000f 	stmia.w	sp, {r0, r1, r2, r3}
 802d154:	4629      	mov	r1, r5
 802d156:	a80b      	add	r0, sp, #44	; 0x2c
 802d158:	e896 000c 	ldmia.w	r6, {r2, r3}
 802d15c:	f7f9 ffdc 	bl	8027118 <PLACE_BIN_runTask(unsigned long, PLACE_BIN_config_t, bool)>
 802d160:	a90b      	add	r1, sp, #44	; 0x2c
 802d162:	4620      	mov	r0, r4
 802d164:	f7fe fdc8 	bl	802bcf8 <TaskStatus::operator=(TaskStatus const&)>
 802d168:	e7ad      	b.n	802d0c6 <BUFFER_PICKPLACE_mainStateMachine(unsigned long)+0x8a>
 802d16a:	4b28      	ldr	r3, [pc, #160]	; (802d20c <BUFFER_PICKPLACE_mainStateMachine(unsigned long)+0x1d0>)
 802d16c:	e9d3 0103 	ldrd	r0, r1, [r3, #12]
 802d170:	891b      	ldrh	r3, [r3, #8]
 802d172:	f8ad 301c 	strh.w	r3, [sp, #28]
 802d176:	ab09      	add	r3, sp, #36	; 0x24
 802d178:	e883 0003 	stmia.w	r3, {r0, r1}
 802d17c:	2500      	movs	r5, #0
 802d17e:	a808      	add	r0, sp, #32
 802d180:	2602      	movs	r6, #2
 802d182:	7891      	ldrb	r1, [r2, #2]
 802d184:	f8ad 5020 	strh.w	r5, [sp, #32]
 802d188:	e9cd 0600 	strd	r0, r6, [sp]
 802d18c:	e9cd 5502 	strd	r5, r5, [sp, #8]
 802d190:	a80b      	add	r0, sp, #44	; 0x2c
 802d192:	aa07      	add	r2, sp, #28
 802d194:	f7fa fc22 	bl	80279dc <ACTIONS_moveList(bool, ROBOT_axisIndex_t const*, float*, AXIS_moveType_t*, unsigned char, unsigned int, AXIS_mode_t)>
 802d198:	a90b      	add	r1, sp, #44	; 0x2c
 802d19a:	4620      	mov	r0, r4
 802d19c:	f7fe fdac 	bl	802bcf8 <TaskStatus::operator=(TaskStatus const&)>
 802d1a0:	e791      	b.n	802d0c6 <BUFFER_PICKPLACE_mainStateMachine(unsigned long)+0x8a>
 802d1a2:	4b1f      	ldr	r3, [pc, #124]	; (802d220 <BUFFER_PICKPLACE_mainStateMachine(unsigned long)+0x1e4>)
 802d1a4:	7891      	ldrb	r1, [r2, #2]
 802d1a6:	ed93 0a00 	vldr	s0, [r3]
 802d1aa:	2300      	movs	r3, #0
 802d1ac:	a80b      	add	r0, sp, #44	; 0x2c
 802d1ae:	9300      	str	r3, [sp, #0]
 802d1b0:	221b      	movs	r2, #27
 802d1b2:	f7fa fb29 	bl	8027808 <ACTIONS_move(bool, ROBOT_axisIndex_t, float, AXIS_moveType_t, AXIS_mode_t)>
 802d1b6:	a90b      	add	r1, sp, #44	; 0x2c
 802d1b8:	4620      	mov	r0, r4
 802d1ba:	f7fe fd9d 	bl	802bcf8 <TaskStatus::operator=(TaskStatus const&)>
 802d1be:	e782      	b.n	802d0c6 <BUFFER_PICKPLACE_mainStateMachine(unsigned long)+0x8a>
 802d1c0:	4b12      	ldr	r3, [pc, #72]	; (802d20c <BUFFER_PICKPLACE_mainStateMachine(unsigned long)+0x1d0>)
 802d1c2:	7891      	ldrb	r1, [r2, #2]
 802d1c4:	681d      	ldr	r5, [r3, #0]
 802d1c6:	f8ad 5024 	strh.w	r5, [sp, #36]	; 0x24
 802d1ca:	2200      	movs	r2, #0
 802d1cc:	e76e      	b.n	802d0ac <BUFFER_PICKPLACE_mainStateMachine(unsigned long)+0x70>
 802d1ce:	4b15      	ldr	r3, [pc, #84]	; (802d224 <BUFFER_PICKPLACE_mainStateMachine(unsigned long)+0x1e8>)
 802d1d0:	7892      	ldrb	r2, [r2, #2]
 802d1d2:	9203      	str	r2, [sp, #12]
 802d1d4:	f103 0208 	add.w	r2, r3, #8
 802d1d8:	ca07      	ldmia	r2, {r0, r1, r2}
 802d1da:	e88d 0007 	stmia.w	sp, {r0, r1, r2}
 802d1de:	4629      	mov	r1, r5
 802d1e0:	a80b      	add	r0, sp, #44	; 0x2c
 802d1e2:	cb0c      	ldmia	r3, {r2, r3}
 802d1e4:	f7f9 f86a 	bl	80262bc <PICK_BIN_runTask(unsigned long, PICK_BIN_config_t, bool)>
 802d1e8:	a90b      	add	r1, sp, #44	; 0x2c
 802d1ea:	4620      	mov	r0, r4
 802d1ec:	f7fe fd84 	bl	802bcf8 <TaskStatus::operator=(TaskStatus const&)>
 802d1f0:	e769      	b.n	802d0c6 <BUFFER_PICKPLACE_mainStateMachine(unsigned long)+0x8a>
 802d1f2:	2302      	movs	r3, #2
 802d1f4:	7023      	strb	r3, [r4, #0]
 802d1f6:	7923      	ldrb	r3, [r4, #4]
 802d1f8:	e74d      	b.n	802d096 <BUFFER_PICKPLACE_mainStateMachine(unsigned long)+0x5a>
 802d1fa:	bf00      	nop
 802d1fc:	200051f4 	.word	0x200051f4
 802d200:	2000f630 	.word	0x2000f630
 802d204:	200051e4 	.word	0x200051e4
 802d208:	200051ec 	.word	0x200051ec
 802d20c:	0804700c 	.word	0x0804700c
 802d210:	200051e8 	.word	0x200051e8
 802d214:	c019999a 	.word	0xc019999a
 802d218:	200051f0 	.word	0x200051f0
 802d21c:	200051cc 	.word	0x200051cc
 802d220:	20000078 	.word	0x20000078
 802d224:	200051b8 	.word	0x200051b8

0802d228 <BUFFER_PICKPLACE_runTask(void*, unsigned long, bool)>:
 802d228:	b530      	push	{r4, r5, lr}
 802d22a:	4604      	mov	r4, r0
 802d22c:	b085      	sub	sp, #20
 802d22e:	b11b      	cbz	r3, 802d238 <BUFFER_PICKPLACE_runTask(void*, unsigned long, bool)+0x10>
 802d230:	b181      	cbz	r1, 802d254 <BUFFER_PICKPLACE_runTask(void*, unsigned long, bool)+0x2c>
 802d232:	4d0c      	ldr	r5, [pc, #48]	; (802d264 <BUFFER_PICKPLACE_runTask(void*, unsigned long, bool)+0x3c>)
 802d234:	6808      	ldr	r0, [r1, #0]
 802d236:	6028      	str	r0, [r5, #0]
 802d238:	9300      	str	r3, [sp, #0]
 802d23a:	a802      	add	r0, sp, #8
 802d23c:	4613      	mov	r3, r2
 802d23e:	490a      	ldr	r1, [pc, #40]	; (802d268 <BUFFER_PICKPLACE_runTask(void*, unsigned long, bool)+0x40>)
 802d240:	4a0a      	ldr	r2, [pc, #40]	; (802d26c <BUFFER_PICKPLACE_runTask(void*, unsigned long, bool)+0x44>)
 802d242:	f7fa fe6b 	bl	8027f1c <SM_RUNNER_runStateMachine>
 802d246:	a902      	add	r1, sp, #8
 802d248:	4620      	mov	r0, r4
 802d24a:	f7fe fd4d 	bl	802bce8 <TaskStatus::TaskStatus(TaskStatus const&)>
 802d24e:	4620      	mov	r0, r4
 802d250:	b005      	add	sp, #20
 802d252:	bd30      	pop	{r4, r5, pc}
 802d254:	2209      	movs	r2, #9
 802d256:	2102      	movs	r1, #2
 802d258:	f7fe fd3e 	bl	802bcd8 <TaskStatus::TaskStatus(TaskStatus::Result_e, unsigned int)>
 802d25c:	4620      	mov	r0, r4
 802d25e:	b005      	add	sp, #20
 802d260:	bd30      	pop	{r4, r5, pc}
 802d262:	bf00      	nop
 802d264:	200051e4 	.word	0x200051e4
 802d268:	20002144 	.word	0x20002144
 802d26c:	200051f4 	.word	0x200051f4

0802d270 <TIME_enterThread>:
 802d270:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802d272:	4e15      	ldr	r6, [pc, #84]	; (802d2c8 <TIME_enterThread+0x58>)
 802d274:	2700      	movs	r7, #0
 802d276:	f506 750c 	add.w	r5, r6, #560	; 0x230
 802d27a:	4634      	mov	r4, r6
 802d27c:	4639      	mov	r1, r7
 802d27e:	4620      	mov	r0, r4
 802d280:	341c      	adds	r4, #28
 802d282:	f000 f865 	bl	802d350 <SOFTWARE_TIMER_initialize>
 802d286:	42ac      	cmp	r4, r5
 802d288:	f107 0701 	add.w	r7, r7, #1
 802d28c:	d1f6      	bne.n	802d27c <TIME_enterThread+0xc>
 802d28e:	2020      	movs	r0, #32
 802d290:	f7f3 fd4c 	bl	8020d2c <SYSTEM_setThreadFlag>
 802d294:	e001      	b.n	802d29a <TIME_enterThread+0x2a>
 802d296:	f00c fe5b 	bl	8039f50 <_tx_thread_sleep>
 802d29a:	f7f3 fd3b 	bl	8020d14 <SYSTEM_areThreadsRunning>
 802d29e:	4603      	mov	r3, r0
 802d2a0:	200a      	movs	r0, #10
 802d2a2:	2b00      	cmp	r3, #0
 802d2a4:	d0f7      	beq.n	802d296 <TIME_enterThread+0x26>
 802d2a6:	200a      	movs	r0, #10
 802d2a8:	f00c fe52 	bl	8039f50 <_tx_thread_sleep>
 802d2ac:	4634      	mov	r4, r6
 802d2ae:	f00d fa89 	bl	803a7c4 <_tx_time_get>
 802d2b2:	4601      	mov	r1, r0
 802d2b4:	4620      	mov	r0, r4
 802d2b6:	341c      	adds	r4, #28
 802d2b8:	f000 f856 	bl	802d368 <SOFTWARE_TIMER_update>
 802d2bc:	42ac      	cmp	r4, r5
 802d2be:	d1f6      	bne.n	802d2ae <TIME_enterThread+0x3e>
 802d2c0:	2020      	movs	r0, #32
 802d2c2:	f7f3 fd33 	bl	8020d2c <SYSTEM_setThreadFlag>
 802d2c6:	e7ee      	b.n	802d2a6 <TIME_enterThread+0x36>
 802d2c8:	200052bc 	.word	0x200052bc

0802d2cc <TIME_setTimeout>:
 802d2cc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802d2d0:	f8df 904c 	ldr.w	r9, [pc, #76]	; 802d320 <TIME_setTimeout+0x54>
 802d2d4:	b083      	sub	sp, #12
 802d2d6:	4607      	mov	r7, r0
 802d2d8:	4688      	mov	r8, r1
 802d2da:	4693      	mov	fp, r2
 802d2dc:	469a      	mov	sl, r3
 802d2de:	464d      	mov	r5, r9
 802d2e0:	2400      	movs	r4, #0
 802d2e2:	e002      	b.n	802d2ea <TIME_setTimeout+0x1e>
 802d2e4:	3401      	adds	r4, #1
 802d2e6:	2c14      	cmp	r4, #20
 802d2e8:	d016      	beq.n	802d318 <TIME_setTimeout+0x4c>
 802d2ea:	7e2e      	ldrb	r6, [r5, #24]
 802d2ec:	351c      	adds	r5, #28
 802d2ee:	2e00      	cmp	r6, #0
 802d2f0:	d1f8      	bne.n	802d2e4 <TIME_setTimeout+0x18>
 802d2f2:	f00d fa67 	bl	803a7c4 <_tx_time_get>
 802d2f6:	ebc4 04c4 	rsb	r4, r4, r4, lsl #3
 802d2fa:	4601      	mov	r1, r0
 802d2fc:	e9cd ba00 	strd	fp, sl, [sp]
 802d300:	00a5      	lsls	r5, r4, #2
 802d302:	4643      	mov	r3, r8
 802d304:	463a      	mov	r2, r7
 802d306:	eb09 0084 	add.w	r0, r9, r4, lsl #2
 802d30a:	f000 f849 	bl	802d3a0 <SOFTWARE_TIMER_setTimeout>
 802d30e:	f859 0005 	ldr.w	r0, [r9, r5]
 802d312:	b003      	add	sp, #12
 802d314:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802d318:	20ff      	movs	r0, #255	; 0xff
 802d31a:	b003      	add	sp, #12
 802d31c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802d320:	200052bc 	.word	0x200052bc

0802d324 <TIME_disableTimer>:
 802d324:	2813      	cmp	r0, #19
 802d326:	d901      	bls.n	802d32c <TIME_disableTimer+0x8>
 802d328:	2000      	movs	r0, #0
 802d32a:	4770      	bx	lr
 802d32c:	4b03      	ldr	r3, [pc, #12]	; (802d33c <TIME_disableTimer+0x18>)
 802d32e:	ebc0 00c0 	rsb	r0, r0, r0, lsl #3
 802d332:	eb03 0080 	add.w	r0, r3, r0, lsl #2
 802d336:	f000 b849 	b.w	802d3cc <SOFTWARE_TIMER_disable>
 802d33a:	bf00      	nop
 802d33c:	200052bc 	.word	0x200052bc

0802d340 <TIME_getTimeMsec>:
 802d340:	f00d ba40 	b.w	803a7c4 <_tx_time_get>

0802d344 <TIME_getElapsedTimeMsec>:
 802d344:	b510      	push	{r4, lr}
 802d346:	4604      	mov	r4, r0
 802d348:	f00d fa3c 	bl	803a7c4 <_tx_time_get>
 802d34c:	1b00      	subs	r0, r0, r4
 802d34e:	bd10      	pop	{r4, pc}

0802d350 <SOFTWARE_TIMER_initialize>:
 802d350:	b140      	cbz	r0, 802d364 <SOFTWARE_TIMER_initialize+0x14>
 802d352:	b538      	push	{r3, r4, r5, lr}
 802d354:	4604      	mov	r4, r0
 802d356:	460d      	mov	r5, r1
 802d358:	221c      	movs	r2, #28
 802d35a:	2100      	movs	r1, #0
 802d35c:	f012 f97a 	bl	803f654 <memset>
 802d360:	6025      	str	r5, [r4, #0]
 802d362:	bd38      	pop	{r3, r4, r5, pc}
 802d364:	4770      	bx	lr
 802d366:	bf00      	nop

0802d368 <SOFTWARE_TIMER_update>:
 802d368:	b1c8      	cbz	r0, 802d39e <SOFTWARE_TIMER_update+0x36>
 802d36a:	7e03      	ldrb	r3, [r0, #24]
 802d36c:	b510      	push	{r4, lr}
 802d36e:	4604      	mov	r4, r0
 802d370:	b1a3      	cbz	r3, 802d39c <SOFTWARE_TIMER_update+0x34>
 802d372:	e9d0 0202 	ldrd	r0, r2, [r0, #8]
 802d376:	6863      	ldr	r3, [r4, #4]
 802d378:	60e1      	str	r1, [r4, #12]
 802d37a:	4401      	add	r1, r0
 802d37c:	1a89      	subs	r1, r1, r2
 802d37e:	4299      	cmp	r1, r3
 802d380:	60a1      	str	r1, [r4, #8]
 802d382:	d30b      	bcc.n	802d39c <SOFTWARE_TIMER_update+0x34>
 802d384:	6923      	ldr	r3, [r4, #16]
 802d386:	b113      	cbz	r3, 802d38e <SOFTWARE_TIMER_update+0x26>
 802d388:	6961      	ldr	r1, [r4, #20]
 802d38a:	6820      	ldr	r0, [r4, #0]
 802d38c:	4798      	blx	r3
 802d38e:	7e63      	ldrb	r3, [r4, #25]
 802d390:	2200      	movs	r2, #0
 802d392:	60a2      	str	r2, [r4, #8]
 802d394:	b913      	cbnz	r3, 802d39c <SOFTWARE_TIMER_update+0x34>
 802d396:	e9c4 3304 	strd	r3, r3, [r4, #16]
 802d39a:	7623      	strb	r3, [r4, #24]
 802d39c:	bd10      	pop	{r4, pc}
 802d39e:	4770      	bx	lr

0802d3a0 <SOFTWARE_TIMER_setTimeout>:
 802d3a0:	b430      	push	{r4, r5}
 802d3a2:	4604      	mov	r4, r0
 802d3a4:	f89d 500c 	ldrb.w	r5, [sp, #12]
 802d3a8:	b150      	cbz	r0, 802d3c0 <SOFTWARE_TIMER_setTimeout+0x20>
 802d3aa:	b15b      	cbz	r3, 802d3c4 <SOFTWARE_TIMER_setTimeout+0x24>
 802d3ac:	2001      	movs	r0, #1
 802d3ae:	60e1      	str	r1, [r4, #12]
 802d3b0:	6123      	str	r3, [r4, #16]
 802d3b2:	2100      	movs	r1, #0
 802d3b4:	9b02      	ldr	r3, [sp, #8]
 802d3b6:	6062      	str	r2, [r4, #4]
 802d3b8:	6163      	str	r3, [r4, #20]
 802d3ba:	7665      	strb	r5, [r4, #25]
 802d3bc:	7620      	strb	r0, [r4, #24]
 802d3be:	60a1      	str	r1, [r4, #8]
 802d3c0:	bc30      	pop	{r4, r5}
 802d3c2:	4770      	bx	lr
 802d3c4:	4618      	mov	r0, r3
 802d3c6:	bc30      	pop	{r4, r5}
 802d3c8:	4770      	bx	lr
 802d3ca:	bf00      	nop

0802d3cc <SOFTWARE_TIMER_disable>:
 802d3cc:	b128      	cbz	r0, 802d3da <SOFTWARE_TIMER_disable+0xe>
 802d3ce:	2300      	movs	r3, #0
 802d3d0:	e9c0 3304 	strd	r3, r3, [r0, #16]
 802d3d4:	6083      	str	r3, [r0, #8]
 802d3d6:	8303      	strh	r3, [r0, #24]
 802d3d8:	2001      	movs	r0, #1
 802d3da:	4770      	bx	lr
 802d3dc:	0000      	movs	r0, r0
	...

0802d3e0 <calculateRawPitchRoll>:
 802d3e0:	ed90 0a02 	vldr	s0, [r0, #8]
 802d3e4:	ed90 7a01 	vldr	s14, [r0, #4]
 802d3e8:	eddf 7a39 	vldr	s15, [pc, #228]	; 802d4d0 <calculateRawPitchRoll+0xf0>
 802d3ec:	ee20 0a00 	vmul.f32	s0, s0, s0
 802d3f0:	b570      	push	{r4, r5, r6, lr}
 802d3f2:	eea7 0a07 	vfma.f32	s0, s14, s14
 802d3f6:	b082      	sub	sp, #8
 802d3f8:	4604      	mov	r4, r0
 802d3fa:	460e      	mov	r6, r1
 802d3fc:	ee30 0a27 	vadd.f32	s0, s0, s15
 802d400:	4615      	mov	r5, r2
 802d402:	eeb4 0ae7 	vcmpe.f32	s0, s15
 802d406:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802d40a:	db06      	blt.n	802d41a <calculateRawPitchRoll+0x3a>
 802d40c:	eeb5 0a40 	vcmp.f32	s0, #0.0
 802d410:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802d414:	eef1 7ac0 	vsqrt.f32	s15, s0
 802d418:	d447      	bmi.n	802d4aa <calculateRawPitchRoll+0xca>
 802d41a:	ed94 0a00 	vldr	s0, [r4]
 802d41e:	ee80 0a27 	vdiv.f32	s0, s0, s15
 802d422:	f011 fa47 	bl	803e8b4 <atan(float)>
 802d426:	ee10 0a10 	vmov	r0, s0
 802d42a:	f011 f816 	bl	803e45a <__aeabi_f2d>
 802d42e:	a326      	add	r3, pc, #152	; (adr r3, 802d4c8 <calculateRawPitchRoll+0xe8>)
 802d430:	e9d3 2300 	ldrd	r2, r3, [r3]
 802d434:	f011 f864 	bl	803e500 <__aeabi_dmul>
 802d438:	f011 f82b 	bl	803e492 <__aeabi_d2f>
 802d43c:	ee07 0a90 	vmov	s15, r0
 802d440:	eef1 7a67 	vneg.f32	s15, s15
 802d444:	edc6 7a00 	vstr	s15, [r6]
 802d448:	ed94 0a02 	vldr	s0, [r4, #8]
 802d44c:	ed94 7a00 	vldr	s14, [r4]
 802d450:	eddf 7a1f 	vldr	s15, [pc, #124]	; 802d4d0 <calculateRawPitchRoll+0xf0>
 802d454:	ee20 0a00 	vmul.f32	s0, s0, s0
 802d458:	eea7 0a07 	vfma.f32	s0, s14, s14
 802d45c:	ee30 0a27 	vadd.f32	s0, s0, s15
 802d460:	eeb4 0ae7 	vcmpe.f32	s0, s15
 802d464:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802d468:	db06      	blt.n	802d478 <calculateRawPitchRoll+0x98>
 802d46a:	eeb5 0a40 	vcmp.f32	s0, #0.0
 802d46e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802d472:	eef1 7ac0 	vsqrt.f32	s15, s0
 802d476:	d41f      	bmi.n	802d4b8 <calculateRawPitchRoll+0xd8>
 802d478:	ed94 0a01 	vldr	s0, [r4, #4]
 802d47c:	ee80 0a27 	vdiv.f32	s0, s0, s15
 802d480:	f011 fa18 	bl	803e8b4 <atan(float)>
 802d484:	ee10 0a10 	vmov	r0, s0
 802d488:	f010 ffe7 	bl	803e45a <__aeabi_f2d>
 802d48c:	a30e      	add	r3, pc, #56	; (adr r3, 802d4c8 <calculateRawPitchRoll+0xe8>)
 802d48e:	e9d3 2300 	ldrd	r2, r3, [r3]
 802d492:	f011 f835 	bl	803e500 <__aeabi_dmul>
 802d496:	f010 fffc 	bl	803e492 <__aeabi_d2f>
 802d49a:	ee07 0a90 	vmov	s15, r0
 802d49e:	eef1 7a67 	vneg.f32	s15, s15
 802d4a2:	edc5 7a00 	vstr	s15, [r5]
 802d4a6:	b002      	add	sp, #8
 802d4a8:	bd70      	pop	{r4, r5, r6, pc}
 802d4aa:	edcd 7a01 	vstr	s15, [sp, #4]
 802d4ae:	f011 fbbf 	bl	803ec30 <sqrt(float)>
 802d4b2:	eddd 7a01 	vldr	s15, [sp, #4]
 802d4b6:	e7b0      	b.n	802d41a <calculateRawPitchRoll+0x3a>
 802d4b8:	edcd 7a01 	vstr	s15, [sp, #4]
 802d4bc:	f011 fbb8 	bl	803ec30 <sqrt(float)>
 802d4c0:	eddd 7a01 	vldr	s15, [sp, #4]
 802d4c4:	e7d8      	b.n	802d478 <calculateRawPitchRoll+0x98>
 802d4c6:	bf00      	nop
 802d4c8:	1a63c1f8 	.word	0x1a63c1f8
 802d4cc:	404ca5dc 	.word	0x404ca5dc
 802d4d0:	00000000 	.word	0x00000000

0802d4d4 <IMU_PITCHROLL_calculate>:
 802d4d4:	ed90 0a01 	vldr	s0, [r0, #4]
 802d4d8:	ed90 7a00 	vldr	s14, [r0]
 802d4dc:	edd0 7a02 	vldr	s15, [r0, #8]
 802d4e0:	ee20 0a00 	vmul.f32	s0, s0, s0
 802d4e4:	b530      	push	{r4, r5, lr}
 802d4e6:	eea7 0a07 	vfma.f32	s0, s14, s14
 802d4ea:	460c      	mov	r4, r1
 802d4ec:	ed2d 8b02 	vpush	{d8}
 802d4f0:	eea7 0aa7 	vfma.f32	s0, s15, s15
 802d4f4:	b08d      	sub	sp, #52	; 0x34
 802d4f6:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 802d4fa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802d4fe:	db30      	blt.n	802d562 <IMU_PITCHROLL_calculate+0x8e>
 802d500:	eeb5 0a40 	vcmp.f32	s0, #0.0
 802d504:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802d508:	eeb1 8ac0 	vsqrt.f32	s16, s0
 802d50c:	d42c      	bmi.n	802d568 <IMU_PITCHROLL_calculate+0x94>
 802d50e:	ad06      	add	r5, sp, #24
 802d510:	4629      	mov	r1, r5
 802d512:	aa07      	add	r2, sp, #28
 802d514:	f7ff ff64 	bl	802d3e0 <calculateRawPitchRoll>
 802d518:	ab0c      	add	r3, sp, #48	; 0x30
 802d51a:	ed94 5a02 	vldr	s10, [r4, #8]
 802d51e:	ed9d 7a06 	vldr	s14, [sp, #24]
 802d522:	eddd 7a07 	vldr	s15, [sp, #28]
 802d526:	edd4 5a00 	vldr	s11, [r4]
 802d52a:	ed94 6a01 	vldr	s12, [r4, #4]
 802d52e:	eec8 6a05 	vdiv.f32	s13, s16, s10
 802d532:	ee37 7a65 	vsub.f32	s14, s14, s11
 802d536:	ee77 7ac6 	vsub.f32	s15, s15, s12
 802d53a:	edcd 6a08 	vstr	s13, [sp, #32]
 802d53e:	ed8d 7a06 	vstr	s14, [sp, #24]
 802d542:	edcd 7a07 	vstr	s15, [sp, #28]
 802d546:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 802d54a:	e903 0007 	stmdb	r3, {r0, r1, r2}
 802d54e:	ed9d 0a09 	vldr	s0, [sp, #36]	; 0x24
 802d552:	eddd 0a0a 	vldr	s1, [sp, #40]	; 0x28
 802d556:	ed9d 1a0b 	vldr	s2, [sp, #44]	; 0x2c
 802d55a:	b00d      	add	sp, #52	; 0x34
 802d55c:	ecbd 8b02 	vpop	{d8}
 802d560:	bd30      	pop	{r4, r5, pc}
 802d562:	ed9f 8a04 	vldr	s16, [pc, #16]	; 802d574 <IMU_PITCHROLL_calculate+0xa0>
 802d566:	e7d2      	b.n	802d50e <IMU_PITCHROLL_calculate+0x3a>
 802d568:	9001      	str	r0, [sp, #4]
 802d56a:	f011 fb61 	bl	803ec30 <sqrt(float)>
 802d56e:	9801      	ldr	r0, [sp, #4]
 802d570:	e7cd      	b.n	802d50e <IMU_PITCHROLL_calculate+0x3a>
 802d572:	bf00      	nop
 802d574:	00000000 	.word	0x00000000

0802d578 <IMU_PITCHROLL_computeBias>:
 802d578:	ed90 0a01 	vldr	s0, [r0, #4]
 802d57c:	ed90 7a00 	vldr	s14, [r0]
 802d580:	edd0 7a02 	vldr	s15, [r0, #8]
 802d584:	ee20 0a00 	vmul.f32	s0, s0, s0
 802d588:	b510      	push	{r4, lr}
 802d58a:	eea7 0a07 	vfma.f32	s0, s14, s14
 802d58e:	ed2d 8b02 	vpush	{d8}
 802d592:	eea7 0aa7 	vfma.f32	s0, s15, s15
 802d596:	b08c      	sub	sp, #48	; 0x30
 802d598:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 802d59c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802d5a0:	db1c      	blt.n	802d5dc <IMU_PITCHROLL_computeBias+0x64>
 802d5a2:	eeb5 0a40 	vcmp.f32	s0, #0.0
 802d5a6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802d5aa:	eeb1 8ac0 	vsqrt.f32	s16, s0
 802d5ae:	d418      	bmi.n	802d5e2 <IMU_PITCHROLL_computeBias+0x6a>
 802d5b0:	ac06      	add	r4, sp, #24
 802d5b2:	4621      	mov	r1, r4
 802d5b4:	aa07      	add	r2, sp, #28
 802d5b6:	ed8d 8a08 	vstr	s16, [sp, #32]
 802d5ba:	f7ff ff11 	bl	802d3e0 <calculateRawPitchRoll>
 802d5be:	e894 0007 	ldmia.w	r4, {r0, r1, r2}
 802d5c2:	ab0c      	add	r3, sp, #48	; 0x30
 802d5c4:	e903 0007 	stmdb	r3, {r0, r1, r2}
 802d5c8:	ed9d 0a09 	vldr	s0, [sp, #36]	; 0x24
 802d5cc:	eddd 0a0a 	vldr	s1, [sp, #40]	; 0x28
 802d5d0:	ed9d 1a0b 	vldr	s2, [sp, #44]	; 0x2c
 802d5d4:	b00c      	add	sp, #48	; 0x30
 802d5d6:	ecbd 8b02 	vpop	{d8}
 802d5da:	bd10      	pop	{r4, pc}
 802d5dc:	ed9f 8a03 	vldr	s16, [pc, #12]	; 802d5ec <IMU_PITCHROLL_computeBias+0x74>
 802d5e0:	e7e6      	b.n	802d5b0 <IMU_PITCHROLL_computeBias+0x38>
 802d5e2:	9001      	str	r0, [sp, #4]
 802d5e4:	f011 fb24 	bl	803ec30 <sqrt(float)>
 802d5e8:	9801      	ldr	r0, [sp, #4]
 802d5ea:	e7e1      	b.n	802d5b0 <IMU_PITCHROLL_computeBias+0x38>
 802d5ec:	00000000 	.word	0x00000000

0802d5f0 <IMU_CALIB_updateAccelerometerBias>:
 802d5f0:	b510      	push	{r4, lr}
 802d5f2:	4c24      	ldr	r4, [pc, #144]	; (802d684 <IMU_CALIB_updateAccelerometerBias+0x94>)
 802d5f4:	7823      	ldrb	r3, [r4, #0]
 802d5f6:	b1f3      	cbz	r3, 802d636 <IMU_CALIB_updateAccelerometerBias+0x46>
 802d5f8:	6863      	ldr	r3, [r4, #4]
 802d5fa:	2b04      	cmp	r3, #4
 802d5fc:	dc1d      	bgt.n	802d63a <IMU_CALIB_updateAccelerometerBias+0x4a>
 802d5fe:	ed90 5a00 	vldr	s10, [r0]
 802d602:	edd0 5a01 	vldr	s11, [r0, #4]
 802d606:	ed90 6a02 	vldr	s12, [r0, #8]
 802d60a:	edd4 6a03 	vldr	s13, [r4, #12]
 802d60e:	ed94 7a04 	vldr	s14, [r4, #16]
 802d612:	edd4 7a05 	vldr	s15, [r4, #20]
 802d616:	ee76 6a85 	vadd.f32	s13, s13, s10
 802d61a:	ee37 7a25 	vadd.f32	s14, s14, s11
 802d61e:	ee77 7a86 	vadd.f32	s15, s15, s12
 802d622:	3301      	adds	r3, #1
 802d624:	6063      	str	r3, [r4, #4]
 802d626:	edc4 6a03 	vstr	s13, [r4, #12]
 802d62a:	ed84 7a04 	vstr	s14, [r4, #16]
 802d62e:	edc4 7a05 	vstr	s15, [r4, #20]
 802d632:	2000      	movs	r0, #0
 802d634:	bd10      	pop	{r4, pc}
 802d636:	4618      	mov	r0, r3
 802d638:	bd10      	pop	{r4, pc}
 802d63a:	ee07 3a90 	vmov	s15, r3
 802d63e:	edd4 6a03 	vldr	s13, [r4, #12]
 802d642:	ed94 7a04 	vldr	s14, [r4, #16]
 802d646:	edd4 5a05 	vldr	s11, [r4, #20]
 802d64a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 802d64e:	f104 000c 	add.w	r0, r4, #12
 802d652:	ee86 6aa7 	vdiv.f32	s12, s13, s15
 802d656:	eec7 6a27 	vdiv.f32	s13, s14, s15
 802d65a:	ee85 7aa7 	vdiv.f32	s14, s11, s15
 802d65e:	ed84 6a03 	vstr	s12, [r4, #12]
 802d662:	edc4 6a04 	vstr	s13, [r4, #16]
 802d666:	ed84 7a05 	vstr	s14, [r4, #20]
 802d66a:	f7ff ff85 	bl	802d578 <IMU_PITCHROLL_computeBias>
 802d66e:	f44f 7380 	mov.w	r3, #256	; 0x100
 802d672:	ed84 0a06 	vstr	s0, [r4, #24]
 802d676:	edc4 0a07 	vstr	s1, [r4, #28]
 802d67a:	ed84 1a08 	vstr	s2, [r4, #32]
 802d67e:	8023      	strh	r3, [r4, #0]
 802d680:	2001      	movs	r0, #1
 802d682:	bd10      	pop	{r4, pc}
 802d684:	200054ec 	.word	0x200054ec

0802d688 <IMU_CALIB_getPitchRollBias>:
 802d688:	b118      	cbz	r0, 802d692 <IMU_CALIB_getPitchRollBias+0xa>
 802d68a:	4902      	ldr	r1, [pc, #8]	; (802d694 <IMU_CALIB_getPitchRollBias+0xc>)
 802d68c:	220c      	movs	r2, #12
 802d68e:	f011 bfb8 	b.w	803f602 <__aeabi_memcpy>
 802d692:	4770      	bx	lr
 802d694:	20005504 	.word	0x20005504

0802d698 <IMU_CALIB_zeroAccelerometer>:
 802d698:	4b09      	ldr	r3, [pc, #36]	; (802d6c0 <IMU_CALIB_zeroAccelerometer+0x28>)
 802d69a:	b410      	push	{r4}
 802d69c:	2200      	movs	r2, #0
 802d69e:	2400      	movs	r4, #0
 802d6a0:	f04f 507e 	mov.w	r0, #1065353216	; 0x3f800000
 802d6a4:	2101      	movs	r1, #1
 802d6a6:	605c      	str	r4, [r3, #4]
 802d6a8:	ed83 0a02 	vstr	s0, [r3, #8]
 802d6ac:	f85d 4b04 	ldr.w	r4, [sp], #4
 802d6b0:	6218      	str	r0, [r3, #32]
 802d6b2:	8019      	strh	r1, [r3, #0]
 802d6b4:	60da      	str	r2, [r3, #12]
 802d6b6:	611a      	str	r2, [r3, #16]
 802d6b8:	615a      	str	r2, [r3, #20]
 802d6ba:	619a      	str	r2, [r3, #24]
 802d6bc:	61da      	str	r2, [r3, #28]
 802d6be:	4770      	bx	lr
 802d6c0:	200054ec 	.word	0x200054ec

0802d6c4 <IMU_CALIB_accelToMetric>:
 802d6c4:	4b15      	ldr	r3, [pc, #84]	; (802d71c <IMU_CALIB_accelToMetric+0x58>)
 802d6c6:	ed90 0a00 	vldr	s0, [r0]
 802d6ca:	785a      	ldrb	r2, [r3, #1]
 802d6cc:	b088      	sub	sp, #32
 802d6ce:	b302      	cbz	r2, 802d712 <IMU_CALIB_accelToMetric+0x4e>
 802d6d0:	edd3 6a03 	vldr	s13, [r3, #12]
 802d6d4:	edd0 0a01 	vldr	s1, [r0, #4]
 802d6d8:	ed93 7a04 	vldr	s14, [r3, #16]
 802d6dc:	ed90 1a02 	vldr	s2, [r0, #8]
 802d6e0:	edd3 7a05 	vldr	s15, [r3, #20]
 802d6e4:	ee30 0a66 	vsub.f32	s0, s0, s13
 802d6e8:	ee70 0ac7 	vsub.f32	s1, s1, s14
 802d6ec:	ee31 1a67 	vsub.f32	s2, s2, s15
 802d6f0:	edd3 7a02 	vldr	s15, [r3, #8]
 802d6f4:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 802d6f8:	eef4 7ac7 	vcmpe.f32	s15, s14
 802d6fc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802d700:	db05      	blt.n	802d70e <IMU_CALIB_accelToMetric+0x4a>
 802d702:	ee80 0a27 	vdiv.f32	s0, s0, s15
 802d706:	eec0 0aa7 	vdiv.f32	s1, s1, s15
 802d70a:	ee81 1a27 	vdiv.f32	s2, s2, s15
 802d70e:	b008      	add	sp, #32
 802d710:	4770      	bx	lr
 802d712:	edd0 0a01 	vldr	s1, [r0, #4]
 802d716:	ed90 1a02 	vldr	s2, [r0, #8]
 802d71a:	e7e9      	b.n	802d6f0 <IMU_CALIB_accelToMetric+0x2c>
 802d71c:	200054ec 	.word	0x200054ec

0802d720 <average(float*) [clone .part.0] [clone .constprop.0]>:
 802d720:	b500      	push	{lr}
 802d722:	b083      	sub	sp, #12
 802d724:	2300      	movs	r3, #0
 802d726:	4805      	ldr	r0, [pc, #20]	; (802d73c <average(float*) [clone .part.0] [clone .constprop.0]+0x1c>)
 802d728:	9301      	str	r3, [sp, #4]
 802d72a:	aa01      	add	r2, sp, #4
 802d72c:	2140      	movs	r1, #64	; 0x40
 802d72e:	f010 fde5 	bl	803e2fc <arm_mean_f32>
 802d732:	ed9d 0a01 	vldr	s0, [sp, #4]
 802d736:	b003      	add	sp, #12
 802d738:	f85d fb04 	ldr.w	pc, [sp], #4
 802d73c:	2000576c 	.word	0x2000576c

0802d740 <imuCheckAllAlarms()>:
 802d740:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802d744:	ed2d 8b02 	vpush	{d8}
 802d748:	f04f 0800 	mov.w	r8, #0
 802d74c:	4cb7      	ldr	r4, [pc, #732]	; (802da2c <imuCheckAllAlarms()+0x2ec>)
 802d74e:	4eb8      	ldr	r6, [pc, #736]	; (802da30 <imuCheckAllAlarms()+0x2f0>)
 802d750:	b087      	sub	sp, #28
 802d752:	f04f 0900 	mov.w	r9, #0
 802d756:	4647      	mov	r7, r8
 802d758:	7863      	ldrb	r3, [r4, #1]
 802d75a:	3b01      	subs	r3, #1
 802d75c:	b2db      	uxtb	r3, r3
 802d75e:	2b03      	cmp	r3, #3
 802d760:	d849      	bhi.n	802d7f6 <imuCheckAllAlarms()+0xb6>
 802d762:	7925      	ldrb	r5, [r4, #4]
 802d764:	f856 b023 	ldr.w	fp, [r6, r3, lsl #2]
 802d768:	2d00      	cmp	r5, #0
 802d76a:	d071      	beq.n	802d850 <imuCheckAllAlarms()+0x110>
 802d76c:	7e65      	ldrb	r5, [r4, #25]
 802d76e:	2d00      	cmp	r5, #0
 802d770:	f000 80e1 	beq.w	802d936 <imuCheckAllAlarms()+0x1f6>
 802d774:	f04f 0a01 	mov.w	sl, #1
 802d778:	7f25      	ldrb	r5, [r4, #28]
 802d77a:	2d00      	cmp	r5, #0
 802d77c:	d05d      	beq.n	802d83a <imuCheckAllAlarms()+0xfa>
 802d77e:	f894 5031 	ldrb.w	r5, [r4, #49]	; 0x31
 802d782:	2d00      	cmp	r5, #0
 802d784:	f000 809d 	beq.w	802d8c2 <imuCheckAllAlarms()+0x182>
 802d788:	f894 2034 	ldrb.w	r2, [r4, #52]	; 0x34
 802d78c:	ed9b 8a02 	vldr	s16, [fp, #8]
 802d790:	f104 0334 	add.w	r3, r4, #52	; 0x34
 802d794:	2a00      	cmp	r2, #0
 802d796:	f000 8145 	beq.w	802da24 <imuCheckAllAlarms()+0x2e4>
 802d79a:	2502      	movs	r5, #2
 802d79c:	f894 b049 	ldrb.w	fp, [r4, #73]	; 0x49
 802d7a0:	f1bb 0f00 	cmp.w	fp, #0
 802d7a4:	d056      	beq.n	802d854 <imuCheckAllAlarms()+0x114>
 802d7a6:	ea4a 0505 	orr.w	r5, sl, r5
 802d7aa:	f045 0204 	orr.w	r2, r5, #4
 802d7ae:	6919      	ldr	r1, [r3, #16]
 802d7b0:	6960      	ldr	r0, [r4, #20]
 802d7b2:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 802d7b4:	9105      	str	r1, [sp, #20]
 802d7b6:	9003      	str	r0, [sp, #12]
 802d7b8:	a903      	add	r1, sp, #12
 802d7ba:	fa5f f088 	uxtb.w	r0, r8
 802d7be:	9304      	str	r3, [sp, #16]
 802d7c0:	f004 f90e 	bl	80319e0 <AWARENESS_submitAlarmData(IMU_unsolictedAlarm_t, IMU_f_xyz_t*, unsigned int)>
 802d7c4:	6ce2      	ldr	r2, [r4, #76]	; 0x4c
 802d7c6:	f8c4 9014 	str.w	r9, [r4, #20]
 802d7ca:	2300      	movs	r3, #0
 802d7cc:	f8c4 9010 	str.w	r9, [r4, #16]
 802d7d0:	f8c4 902c 	str.w	r9, [r4, #44]	; 0x2c
 802d7d4:	f8c4 9028 	str.w	r9, [r4, #40]	; 0x28
 802d7d8:	f8c4 9044 	str.w	r9, [r4, #68]	; 0x44
 802d7dc:	f8c4 9040 	str.w	r9, [r4, #64]	; 0x40
 802d7e0:	4317      	orrs	r7, r2
 802d7e2:	7623      	strb	r3, [r4, #24]
 802d7e4:	7663      	strb	r3, [r4, #25]
 802d7e6:	f884 3030 	strb.w	r3, [r4, #48]	; 0x30
 802d7ea:	f884 3031 	strb.w	r3, [r4, #49]	; 0x31
 802d7ee:	f884 3048 	strb.w	r3, [r4, #72]	; 0x48
 802d7f2:	f884 3049 	strb.w	r3, [r4, #73]	; 0x49
 802d7f6:	f108 0801 	add.w	r8, r8, #1
 802d7fa:	f1b8 0f03 	cmp.w	r8, #3
 802d7fe:	f104 0450 	add.w	r4, r4, #80	; 0x50
 802d802:	d1a9      	bne.n	802d758 <imuCheckAllAlarms()+0x18>
 802d804:	4639      	mov	r1, r7
 802d806:	2200      	movs	r2, #0
 802d808:	488a      	ldr	r0, [pc, #552]	; (802da34 <imuCheckAllAlarms()+0x2f4>)
 802d80a:	f00b fcb5 	bl	8039178 <_tx_event_flags_set>
 802d80e:	b007      	add	sp, #28
 802d810:	ecbd 8b02 	vpop	{d8}
 802d814:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802d818:	2a01      	cmp	r2, #1
 802d81a:	d167      	bne.n	802d8ec <imuCheckAllAlarms()+0x1ac>
 802d81c:	edd4 7a08 	vldr	s15, [r4, #32]
 802d820:	eeb4 0ae7 	vcmpe.f32	s0, s15
 802d824:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802d828:	db60      	blt.n	802d8ec <imuCheckAllAlarms()+0x1ac>
 802d82a:	f8c4 902c 	str.w	r9, [r4, #44]	; 0x2c
 802d82e:	f884 5030 	strb.w	r5, [r4, #48]	; 0x30
 802d832:	f884 5031 	strb.w	r5, [r4, #49]	; 0x31
 802d836:	f8c4 9028 	str.w	r9, [r4, #40]	; 0x28
 802d83a:	f894 2034 	ldrb.w	r2, [r4, #52]	; 0x34
 802d83e:	f104 0334 	add.w	r3, r4, #52	; 0x34
 802d842:	2a00      	cmp	r2, #0
 802d844:	d174      	bne.n	802d930 <imuCheckAllAlarms()+0x1f0>
 802d846:	ea5a 0505 	orrs.w	r5, sl, r5
 802d84a:	d0d4      	beq.n	802d7f6 <imuCheckAllAlarms()+0xb6>
 802d84c:	462a      	mov	r2, r5
 802d84e:	e7ae      	b.n	802d7ae <imuCheckAllAlarms()+0x6e>
 802d850:	46aa      	mov	sl, r5
 802d852:	e791      	b.n	802d778 <imuCheckAllAlarms()+0x38>
 802d854:	eeb0 0a48 	vmov.f32	s0, s16
 802d858:	9301      	str	r3, [sp, #4]
 802d85a:	f011 f96d 	bl	803eb38 <fabs(float)>
 802d85e:	f894 2035 	ldrb.w	r2, [r4, #53]	; 0x35
 802d862:	9b01      	ldr	r3, [sp, #4]
 802d864:	ed84 8a10 	vstr	s16, [r4, #64]	; 0x40
 802d868:	eef0 8a40 	vmov.f32	s17, s0
 802d86c:	2a00      	cmp	r2, #0
 802d86e:	f040 80a1 	bne.w	802d9b4 <imuCheckAllAlarms()+0x274>
 802d872:	edd4 7a0e 	vldr	s15, [r4, #56]	; 0x38
 802d876:	eeb4 0ae7 	vcmpe.f32	s0, s15
 802d87a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802d87e:	f240 80c0 	bls.w	802da02 <imuCheckAllAlarms()+0x2c2>
 802d882:	ed94 0a11 	vldr	s0, [r4, #68]	; 0x44
 802d886:	9301      	str	r3, [sp, #4]
 802d888:	f011 f956 	bl	803eb38 <fabs(float)>
 802d88c:	f894 2048 	ldrb.w	r2, [r4, #72]	; 0x48
 802d890:	f894 103c 	ldrb.w	r1, [r4, #60]	; 0x3c
 802d894:	9b01      	ldr	r3, [sp, #4]
 802d896:	eef4 8ac0 	vcmpe.f32	s17, s0
 802d89a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802d89e:	f102 0201 	add.w	r2, r2, #1
 802d8a2:	bfd8      	it	le
 802d8a4:	ed94 8a11 	vldrle	s16, [r4, #68]	; 0x44
 802d8a8:	b2d2      	uxtb	r2, r2
 802d8aa:	4291      	cmp	r1, r2
 802d8ac:	ed84 8a11 	vstr	s16, [r4, #68]	; 0x44
 802d8b0:	f884 2048 	strb.w	r2, [r4, #72]	; 0x48
 802d8b4:	f240 8096 	bls.w	802d9e4 <imuCheckAllAlarms()+0x2a4>
 802d8b8:	f894 2049 	ldrb.w	r2, [r4, #73]	; 0x49
 802d8bc:	0092      	lsls	r2, r2, #2
 802d8be:	4315      	orrs	r5, r2
 802d8c0:	e7c1      	b.n	802d846 <imuCheckAllAlarms()+0x106>
 802d8c2:	eddb 8a01 	vldr	s17, [fp, #4]
 802d8c6:	eeb0 0a68 	vmov.f32	s0, s17
 802d8ca:	f011 f935 	bl	803eb38 <fabs(float)>
 802d8ce:	7f62      	ldrb	r2, [r4, #29]
 802d8d0:	edc4 8a0a 	vstr	s17, [r4, #40]	; 0x28
 802d8d4:	eeb0 8a40 	vmov.f32	s16, s0
 802d8d8:	2a00      	cmp	r2, #0
 802d8da:	d19d      	bne.n	802d818 <imuCheckAllAlarms()+0xd8>
 802d8dc:	edd4 7a08 	vldr	s15, [r4, #32]
 802d8e0:	eeb4 0ae7 	vcmpe.f32	s0, s15
 802d8e4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802d8e8:	f240 8081 	bls.w	802d9ee <imuCheckAllAlarms()+0x2ae>
 802d8ec:	ed94 0a0b 	vldr	s0, [r4, #44]	; 0x2c
 802d8f0:	f011 f922 	bl	803eb38 <fabs(float)>
 802d8f4:	f894 3030 	ldrb.w	r3, [r4, #48]	; 0x30
 802d8f8:	f894 2024 	ldrb.w	r2, [r4, #36]	; 0x24
 802d8fc:	eeb4 8ac0 	vcmpe.f32	s16, s0
 802d900:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802d904:	f103 0301 	add.w	r3, r3, #1
 802d908:	bfd8      	it	le
 802d90a:	edd4 8a0b 	vldrle	s17, [r4, #44]	; 0x2c
 802d90e:	b2db      	uxtb	r3, r3
 802d910:	429a      	cmp	r2, r3
 802d912:	edc4 8a0b 	vstr	s17, [r4, #44]	; 0x2c
 802d916:	f884 3030 	strb.w	r3, [r4, #48]	; 0x30
 802d91a:	d85f      	bhi.n	802d9dc <imuCheckAllAlarms()+0x29c>
 802d91c:	f894 2034 	ldrb.w	r2, [r4, #52]	; 0x34
 802d920:	2301      	movs	r3, #1
 802d922:	f884 3031 	strb.w	r3, [r4, #49]	; 0x31
 802d926:	2502      	movs	r5, #2
 802d928:	f104 0334 	add.w	r3, r4, #52	; 0x34
 802d92c:	2a00      	cmp	r2, #0
 802d92e:	d08a      	beq.n	802d846 <imuCheckAllAlarms()+0x106>
 802d930:	ed9b 8a02 	vldr	s16, [fp, #8]
 802d934:	e732      	b.n	802d79c <imuCheckAllAlarms()+0x5c>
 802d936:	eddb 8a00 	vldr	s17, [fp]
 802d93a:	eeb0 0a68 	vmov.f32	s0, s17
 802d93e:	f011 f8fb 	bl	803eb38 <fabs(float)>
 802d942:	7962      	ldrb	r2, [r4, #5]
 802d944:	edc4 8a04 	vstr	s17, [r4, #16]
 802d948:	eeb0 8a40 	vmov.f32	s16, s0
 802d94c:	bb0a      	cbnz	r2, 802d992 <imuCheckAllAlarms()+0x252>
 802d94e:	edd4 7a02 	vldr	s15, [r4, #8]
 802d952:	eeb4 0ae7 	vcmpe.f32	s0, s15
 802d956:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802d95a:	d95b      	bls.n	802da14 <imuCheckAllAlarms()+0x2d4>
 802d95c:	ed94 0a05 	vldr	s0, [r4, #20]
 802d960:	f011 f8ea 	bl	803eb38 <fabs(float)>
 802d964:	7e23      	ldrb	r3, [r4, #24]
 802d966:	7b22      	ldrb	r2, [r4, #12]
 802d968:	eeb4 8ac0 	vcmpe.f32	s16, s0
 802d96c:	3301      	adds	r3, #1
 802d96e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802d972:	b2db      	uxtb	r3, r3
 802d974:	bfd8      	it	le
 802d976:	edd4 8a05 	vldrle	s17, [r4, #20]
 802d97a:	7623      	strb	r3, [r4, #24]
 802d97c:	429a      	cmp	r2, r3
 802d97e:	bf94      	ite	ls
 802d980:	2501      	movls	r5, #1
 802d982:	f894 a019 	ldrbhi.w	sl, [r4, #25]
 802d986:	edc4 8a05 	vstr	s17, [r4, #20]
 802d98a:	bf9c      	itt	ls
 802d98c:	7665      	strbls	r5, [r4, #25]
 802d98e:	46aa      	movls	sl, r5
 802d990:	e6f2      	b.n	802d778 <imuCheckAllAlarms()+0x38>
 802d992:	2a01      	cmp	r2, #1
 802d994:	d1e2      	bne.n	802d95c <imuCheckAllAlarms()+0x21c>
 802d996:	edd4 7a02 	vldr	s15, [r4, #8]
 802d99a:	eeb4 0ae7 	vcmpe.f32	s0, s15
 802d99e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802d9a2:	dbdb      	blt.n	802d95c <imuCheckAllAlarms()+0x21c>
 802d9a4:	f8c4 9014 	str.w	r9, [r4, #20]
 802d9a8:	7625      	strb	r5, [r4, #24]
 802d9aa:	7665      	strb	r5, [r4, #25]
 802d9ac:	f8c4 9010 	str.w	r9, [r4, #16]
 802d9b0:	46aa      	mov	sl, r5
 802d9b2:	e6e1      	b.n	802d778 <imuCheckAllAlarms()+0x38>
 802d9b4:	2a01      	cmp	r2, #1
 802d9b6:	f47f af64 	bne.w	802d882 <imuCheckAllAlarms()+0x142>
 802d9ba:	edd4 7a0e 	vldr	s15, [r4, #56]	; 0x38
 802d9be:	eeb4 0ae7 	vcmpe.f32	s0, s15
 802d9c2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802d9c6:	f6ff af5c 	blt.w	802d882 <imuCheckAllAlarms()+0x142>
 802d9ca:	f8c4 9044 	str.w	r9, [r4, #68]	; 0x44
 802d9ce:	f884 b048 	strb.w	fp, [r4, #72]	; 0x48
 802d9d2:	f884 b049 	strb.w	fp, [r4, #73]	; 0x49
 802d9d6:	f8c4 9040 	str.w	r9, [r4, #64]	; 0x40
 802d9da:	e734      	b.n	802d846 <imuCheckAllAlarms()+0x106>
 802d9dc:	f894 5031 	ldrb.w	r5, [r4, #49]	; 0x31
 802d9e0:	006d      	lsls	r5, r5, #1
 802d9e2:	e72a      	b.n	802d83a <imuCheckAllAlarms()+0xfa>
 802d9e4:	2201      	movs	r2, #1
 802d9e6:	f884 2049 	strb.w	r2, [r4, #73]	; 0x49
 802d9ea:	2204      	movs	r2, #4
 802d9ec:	e767      	b.n	802d8be <imuCheckAllAlarms()+0x17e>
 802d9ee:	f8c4 902c 	str.w	r9, [r4, #44]	; 0x2c
 802d9f2:	f884 2030 	strb.w	r2, [r4, #48]	; 0x30
 802d9f6:	f884 2031 	strb.w	r2, [r4, #49]	; 0x31
 802d9fa:	f8c4 9028 	str.w	r9, [r4, #40]	; 0x28
 802d9fe:	4615      	mov	r5, r2
 802da00:	e71b      	b.n	802d83a <imuCheckAllAlarms()+0xfa>
 802da02:	f8c4 9044 	str.w	r9, [r4, #68]	; 0x44
 802da06:	f884 2048 	strb.w	r2, [r4, #72]	; 0x48
 802da0a:	f884 2049 	strb.w	r2, [r4, #73]	; 0x49
 802da0e:	f8c4 9040 	str.w	r9, [r4, #64]	; 0x40
 802da12:	e718      	b.n	802d846 <imuCheckAllAlarms()+0x106>
 802da14:	f8c4 9014 	str.w	r9, [r4, #20]
 802da18:	7622      	strb	r2, [r4, #24]
 802da1a:	7662      	strb	r2, [r4, #25]
 802da1c:	f8c4 9010 	str.w	r9, [r4, #16]
 802da20:	4692      	mov	sl, r2
 802da22:	e6a9      	b.n	802d778 <imuCheckAllAlarms()+0x38>
 802da24:	f04a 0202 	orr.w	r2, sl, #2
 802da28:	e6c1      	b.n	802d7ae <imuCheckAllAlarms()+0x6e>
 802da2a:	bf00      	nop
 802da2c:	200055e8 	.word	0x200055e8
 802da30:	08047078 	.word	0x08047078
 802da34:	2000e158 	.word	0x2000e158
 802da38:	810106c9 	.word	0x810106c9
 802da3c:	80afb0b0 	.word	0x80afb0b0
 802da40:	00000000 	.word	0x00000000

0802da44 <IMU_enterThread>:
 802da44:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802da48:	ed2d 8b02 	vpush	{d8}
 802da4c:	2004      	movs	r0, #4
 802da4e:	b08b      	sub	sp, #44	; 0x2c
 802da50:	f7f3 f96c 	bl	8020d2c <SYSTEM_setThreadFlag>
 802da54:	f000 fb88 	bl	802e168 <IMU_DRIVER_init>
 802da58:	f000 fc28 	bl	802e2ac <IMU_DRIVER_resume>
 802da5c:	e001      	b.n	802da62 <IMU_enterThread+0x1e>
 802da5e:	f00c fa77 	bl	8039f50 <_tx_thread_sleep>
 802da62:	f7f3 f957 	bl	8020d14 <SYSTEM_areThreadsRunning>
 802da66:	4603      	mov	r3, r0
 802da68:	2064      	movs	r0, #100	; 0x64
 802da6a:	2b00      	cmp	r3, #0
 802da6c:	d0f7      	beq.n	802da5e <IMU_enterThread+0x1a>
 802da6e:	4cda      	ldr	r4, [pc, #872]	; (802ddd8 <IMU_enterThread+0x394>)
 802da70:	4fda      	ldr	r7, [pc, #872]	; (802dddc <IMU_enterThread+0x398>)
 802da72:	4edb      	ldr	r6, [pc, #876]	; (802dde0 <IMU_enterThread+0x39c>)
 802da74:	f8df 8384 	ldr.w	r8, [pc, #900]	; 802ddfc <IMU_enterThread+0x3b8>
 802da78:	4dda      	ldr	r5, [pc, #872]	; (802dde4 <IMU_enterThread+0x3a0>)
 802da7a:	eddf 8adb 	vldr	s17, [pc, #876]	; 802dde8 <IMU_enterThread+0x3a4>
 802da7e:	ed9f 8adb 	vldr	s16, [pc, #876]	; 802ddec <IMU_enterThread+0x3a8>
 802da82:	f8df b358 	ldr.w	fp, [pc, #856]	; 802dddc <IMU_enterThread+0x398>
 802da86:	f44f 797a 	mov.w	r9, #1000	; 0x3e8
 802da8a:	2004      	movs	r0, #4
 802da8c:	f7f3 f94e 	bl	8020d2c <SYSTEM_setThreadFlag>
 802da90:	f8cd 9000 	str.w	r9, [sp]
 802da94:	ab02      	add	r3, sp, #8
 802da96:	2201      	movs	r2, #1
 802da98:	210f      	movs	r1, #15
 802da9a:	4628      	mov	r0, r5
 802da9c:	f00b faf2 	bl	8039084 <_tx_event_flags_get>
 802daa0:	2800      	cmp	r0, #0
 802daa2:	d1f2      	bne.n	802da8a <IMU_enterThread+0x46>
 802daa4:	9b02      	ldr	r3, [sp, #8]
 802daa6:	07d8      	lsls	r0, r3, #31
 802daa8:	d437      	bmi.n	802db1a <IMU_enterThread+0xd6>
 802daaa:	0799      	lsls	r1, r3, #30
 802daac:	d429      	bmi.n	802db02 <IMU_enterThread+0xbe>
 802daae:	075a      	lsls	r2, r3, #29
 802dab0:	d41c      	bmi.n	802daec <IMU_enterThread+0xa8>
 802dab2:	071b      	lsls	r3, r3, #28
 802dab4:	d5e7      	bpl.n	802da86 <IMU_enterThread+0x42>
 802dab6:	ed88 8a00 	vstr	s16, [r8]
 802daba:	ed88 8a02 	vstr	s16, [r8, #8]
 802dabe:	ed88 8a04 	vstr	s16, [r8, #16]
 802dac2:	ed87 8a09 	vstr	s16, [r7, #36]	; 0x24
 802dac6:	ed87 8a0a 	vstr	s16, [r7, #40]	; 0x28
 802daca:	ed87 8a0b 	vstr	s16, [r7, #44]	; 0x2c
 802dace:	f7ff fe37 	bl	802d740 <imuCheckAllAlarms()>
 802dad2:	2202      	movs	r2, #2
 802dad4:	f06f 0108 	mvn.w	r1, #8
 802dad8:	4628      	mov	r0, r5
 802dada:	f00b fb4d 	bl	8039178 <_tx_event_flags_set>
 802dade:	2200      	movs	r2, #0
 802dae0:	f44f 4100 	mov.w	r1, #32768	; 0x8000
 802dae4:	48c2      	ldr	r0, [pc, #776]	; (802ddf0 <IMU_enterThread+0x3ac>)
 802dae6:	f00b fb47 	bl	8039178 <_tx_event_flags_set>
 802daea:	e7ca      	b.n	802da82 <IMU_enterThread+0x3e>
 802daec:	2202      	movs	r2, #2
 802daee:	f06f 0104 	mvn.w	r1, #4
 802daf2:	4628      	mov	r0, r5
 802daf4:	f00b fb40 	bl	8039178 <_tx_event_flags_set>
 802daf8:	49be      	ldr	r1, [pc, #760]	; (802ddf4 <IMU_enterThread+0x3b0>)
 802dafa:	9b02      	ldr	r3, [sp, #8]
 802dafc:	2201      	movs	r2, #1
 802dafe:	700a      	strb	r2, [r1, #0]
 802db00:	e7d7      	b.n	802dab2 <IMU_enterThread+0x6e>
 802db02:	2202      	movs	r2, #2
 802db04:	f06f 0102 	mvn.w	r1, #2
 802db08:	4628      	mov	r0, r5
 802db0a:	f00b fb35 	bl	8039178 <_tx_event_flags_set>
 802db0e:	eeb0 0a68 	vmov.f32	s0, s17
 802db12:	f7ff fdc1 	bl	802d698 <IMU_CALIB_zeroAccelerometer>
 802db16:	9b02      	ldr	r3, [sp, #8]
 802db18:	e7c9      	b.n	802daae <IMU_enterThread+0x6a>
 802db1a:	2202      	movs	r2, #2
 802db1c:	f06f 0101 	mvn.w	r1, #1
 802db20:	4628      	mov	r0, r5
 802db22:	f00b fb29 	bl	8039178 <_tx_event_flags_set>
 802db26:	f000 fbb5 	bl	802e294 <IMU_DRIVER_getDataBuff>
 802db2a:	f8df a2cc 	ldr.w	sl, [pc, #716]	; 802ddf8 <IMU_enterThread+0x3b4>
 802db2e:	4681      	mov	r9, r0
 802db30:	4602      	mov	r2, r0
 802db32:	4653      	mov	r3, sl
 802db34:	f932 1b0c 	ldrsh.w	r1, [r2], #12
 802db38:	ee07 1a90 	vmov	s15, r1
 802db3c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 802db40:	ece3 7a01 	vstmia	r3!, {s15}
 802db44:	429c      	cmp	r4, r3
 802db46:	d1f5      	bne.n	802db34 <IMU_enterThread+0xf0>
 802db48:	f7ff fdea 	bl	802d720 <average(float*) [clone .part.0] [clone .constprop.0]>
 802db4c:	4aaa      	ldr	r2, [pc, #680]	; (802ddf8 <IMU_enterThread+0x3b4>)
 802db4e:	eeb1 0a40 	vneg.f32	s0, s0
 802db52:	ed87 0a00 	vstr	s0, [r7]
 802db56:	464b      	mov	r3, r9
 802db58:	f9b3 1002 	ldrsh.w	r1, [r3, #2]
 802db5c:	ee07 1a90 	vmov	s15, r1
 802db60:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 802db64:	330c      	adds	r3, #12
 802db66:	ece2 7a01 	vstmia	r2!, {s15}
 802db6a:	4294      	cmp	r4, r2
 802db6c:	d1f4      	bne.n	802db58 <IMU_enterThread+0x114>
 802db6e:	f7ff fdd7 	bl	802d720 <average(float*) [clone .part.0] [clone .constprop.0]>
 802db72:	4aa1      	ldr	r2, [pc, #644]	; (802ddf8 <IMU_enterThread+0x3b4>)
 802db74:	eeb1 0a40 	vneg.f32	s0, s0
 802db78:	ed87 0a01 	vstr	s0, [r7, #4]
 802db7c:	464b      	mov	r3, r9
 802db7e:	f9b3 1004 	ldrsh.w	r1, [r3, #4]
 802db82:	ee07 1a90 	vmov	s15, r1
 802db86:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 802db8a:	330c      	adds	r3, #12
 802db8c:	ece2 7a01 	vstmia	r2!, {s15}
 802db90:	4294      	cmp	r4, r2
 802db92:	d1f4      	bne.n	802db7e <IMU_enterThread+0x13a>
 802db94:	f7ff fdc4 	bl	802d720 <average(float*) [clone .part.0] [clone .constprop.0]>
 802db98:	4658      	mov	r0, fp
 802db9a:	ed87 0a02 	vstr	s0, [r7, #8]
 802db9e:	f7ff fd91 	bl	802d6c4 <IMU_CALIB_accelToMetric>
 802dba2:	4a95      	ldr	r2, [pc, #596]	; (802ddf8 <IMU_enterThread+0x3b4>)
 802dba4:	ed87 0a03 	vstr	s0, [r7, #12]
 802dba8:	edc7 0a04 	vstr	s1, [r7, #16]
 802dbac:	ed87 1a05 	vstr	s2, [r7, #20]
 802dbb0:	464b      	mov	r3, r9
 802dbb2:	f9b3 1006 	ldrsh.w	r1, [r3, #6]
 802dbb6:	ee07 1a90 	vmov	s15, r1
 802dbba:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 802dbbe:	330c      	adds	r3, #12
 802dbc0:	ece2 7a01 	vstmia	r2!, {s15}
 802dbc4:	42a2      	cmp	r2, r4
 802dbc6:	d1f4      	bne.n	802dbb2 <IMU_enterThread+0x16e>
 802dbc8:	f7ff fdaa 	bl	802d720 <average(float*) [clone .part.0] [clone .constprop.0]>
 802dbcc:	7b33      	ldrb	r3, [r6, #12]
 802dbce:	eeb1 0a40 	vneg.f32	s0, s0
 802dbd2:	2b00      	cmp	r3, #0
 802dbd4:	f000 80d3 	beq.w	802dd7e <IMU_enterThread+0x33a>
 802dbd8:	ed96 7a01 	vldr	s14, [r6, #4]
 802dbdc:	edd6 6a02 	vldr	s13, [r6, #8]
 802dbe0:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 802dbe4:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802dbe8:	e9d6 2304 	ldrd	r2, r3, [r6, #16]
 802dbec:	ee67 7a80 	vmul.f32	s15, s15, s0
 802dbf0:	3301      	adds	r3, #1
 802dbf2:	eee6 7a87 	vfma.f32	s15, s13, s14
 802dbf6:	4293      	cmp	r3, r2
 802dbf8:	6173      	str	r3, [r6, #20]
 802dbfa:	edc6 7a02 	vstr	s15, [r6, #8]
 802dbfe:	d301      	bcc.n	802dc04 <IMU_enterThread+0x1c0>
 802dc00:	2300      	movs	r3, #0
 802dc02:	7333      	strb	r3, [r6, #12]
 802dc04:	ee70 7a67 	vsub.f32	s15, s0, s15
 802dc08:	4a7b      	ldr	r2, [pc, #492]	; (802ddf8 <IMU_enterThread+0x3b4>)
 802dc0a:	edc7 7a06 	vstr	s15, [r7, #24]
 802dc0e:	464b      	mov	r3, r9
 802dc10:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802dc14:	ee07 1a90 	vmov	s15, r1
 802dc18:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 802dc1c:	330c      	adds	r3, #12
 802dc1e:	ece2 7a01 	vstmia	r2!, {s15}
 802dc22:	42a2      	cmp	r2, r4
 802dc24:	d1f4      	bne.n	802dc10 <IMU_enterThread+0x1cc>
 802dc26:	f7ff fd7b 	bl	802d720 <average(float*) [clone .part.0] [clone .constprop.0]>
 802dc2a:	f896 3024 	ldrb.w	r3, [r6, #36]	; 0x24
 802dc2e:	eeb1 0a40 	vneg.f32	s0, s0
 802dc32:	2b00      	cmp	r3, #0
 802dc34:	f000 8094 	beq.w	802dd60 <IMU_enterThread+0x31c>
 802dc38:	ed96 7a07 	vldr	s14, [r6, #28]
 802dc3c:	edd6 6a08 	vldr	s13, [r6, #32]
 802dc40:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 802dc44:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802dc48:	e9d6 230a 	ldrd	r2, r3, [r6, #40]	; 0x28
 802dc4c:	ee67 7a80 	vmul.f32	s15, s15, s0
 802dc50:	3301      	adds	r3, #1
 802dc52:	eee6 7a87 	vfma.f32	s15, s13, s14
 802dc56:	4293      	cmp	r3, r2
 802dc58:	62f3      	str	r3, [r6, #44]	; 0x2c
 802dc5a:	edc6 7a08 	vstr	s15, [r6, #32]
 802dc5e:	d302      	bcc.n	802dc66 <IMU_enterThread+0x222>
 802dc60:	2300      	movs	r3, #0
 802dc62:	f886 3024 	strb.w	r3, [r6, #36]	; 0x24
 802dc66:	ee70 7a67 	vsub.f32	s15, s0, s15
 802dc6a:	edc7 7a07 	vstr	s15, [r7, #28]
 802dc6e:	f9b9 300a 	ldrsh.w	r3, [r9, #10]
 802dc72:	ee07 3a90 	vmov	s15, r3
 802dc76:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 802dc7a:	f109 090c 	add.w	r9, r9, #12
 802dc7e:	ecea 7a01 	vstmia	sl!, {s15}
 802dc82:	45a2      	cmp	sl, r4
 802dc84:	d1f3      	bne.n	802dc6e <IMU_enterThread+0x22a>
 802dc86:	f7ff fd4b 	bl	802d720 <average(float*) [clone .part.0] [clone .constprop.0]>
 802dc8a:	f896 303c 	ldrb.w	r3, [r6, #60]	; 0x3c
 802dc8e:	2b00      	cmp	r3, #0
 802dc90:	d057      	beq.n	802dd42 <IMU_enterThread+0x2fe>
 802dc92:	ed96 7a0d 	vldr	s14, [r6, #52]	; 0x34
 802dc96:	edd6 6a0e 	vldr	s13, [r6, #56]	; 0x38
 802dc9a:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 802dc9e:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802dca2:	e9d6 2310 	ldrd	r2, r3, [r6, #64]	; 0x40
 802dca6:	ee67 7a80 	vmul.f32	s15, s15, s0
 802dcaa:	3301      	adds	r3, #1
 802dcac:	eee6 7a87 	vfma.f32	s15, s13, s14
 802dcb0:	4293      	cmp	r3, r2
 802dcb2:	6473      	str	r3, [r6, #68]	; 0x44
 802dcb4:	edc6 7a0e 	vstr	s15, [r6, #56]	; 0x38
 802dcb8:	d302      	bcc.n	802dcc0 <IMU_enterThread+0x27c>
 802dcba:	2300      	movs	r3, #0
 802dcbc:	f886 303c 	strb.w	r3, [r6, #60]	; 0x3c
 802dcc0:	ee70 7a67 	vsub.f32	s15, s0, s15
 802dcc4:	edd8 3a04 	vldr	s7, [r8, #16]
 802dcc8:	ed98 4a00 	vldr	s8, [r8]
 802dccc:	edd8 4a02 	vldr	s9, [r8, #8]
 802dcd0:	edd7 6a06 	vldr	s13, [r7, #24]
 802dcd4:	ed97 7a07 	vldr	s14, [r7, #28]
 802dcd8:	ed98 5a05 	vldr	s10, [r8, #20]
 802dcdc:	edd8 5a01 	vldr	s11, [r8, #4]
 802dce0:	ed98 6a03 	vldr	s12, [r8, #12]
 802dce4:	edc7 7a08 	vstr	s15, [r7, #32]
 802dce8:	ee76 6a84 	vadd.f32	s13, s13, s8
 802dcec:	ee77 7aa3 	vadd.f32	s15, s15, s7
 802dcf0:	ee37 7a24 	vadd.f32	s14, s14, s9
 802dcf4:	ee67 7a85 	vmul.f32	s15, s15, s10
 802dcf8:	ee66 6aa5 	vmul.f32	s13, s13, s11
 802dcfc:	ee27 7a06 	vmul.f32	s14, s14, s12
 802dd00:	2200      	movs	r2, #0
 802dd02:	9200      	str	r2, [sp, #0]
 802dd04:	ab03      	add	r3, sp, #12
 802dd06:	2101      	movs	r1, #1
 802dd08:	4628      	mov	r0, r5
 802dd0a:	edc8 7a04 	vstr	s15, [r8, #16]
 802dd0e:	edc7 7a0b 	vstr	s15, [r7, #44]	; 0x2c
 802dd12:	edc8 6a00 	vstr	s13, [r8]
 802dd16:	edc7 6a09 	vstr	s13, [r7, #36]	; 0x24
 802dd1a:	ed88 7a02 	vstr	s14, [r8, #8]
 802dd1e:	ed87 7a0a 	vstr	s14, [r7, #40]	; 0x28
 802dd22:	f00b f9af 	bl	8039084 <_tx_event_flags_get>
 802dd26:	2800      	cmp	r0, #0
 802dd28:	d06a      	beq.n	802de00 <IMU_enterThread+0x3bc>
 802dd2a:	4658      	mov	r0, fp
 802dd2c:	f7ff fc60 	bl	802d5f0 <IMU_CALIB_updateAccelerometerBias>
 802dd30:	2800      	cmp	r0, #0
 802dd32:	d14a      	bne.n	802ddca <IMU_enterThread+0x386>
 802dd34:	f7ff fd04 	bl	802d740 <imuCheckAllAlarms()>
 802dd38:	4b2e      	ldr	r3, [pc, #184]	; (802ddf4 <IMU_enterThread+0x3b0>)
 802dd3a:	781b      	ldrb	r3, [r3, #0]
 802dd3c:	bb73      	cbnz	r3, 802dd9c <IMU_enterThread+0x358>
 802dd3e:	9b02      	ldr	r3, [sp, #8]
 802dd40:	e6b3      	b.n	802daaa <IMU_enterThread+0x66>
 802dd42:	ed96 7a0c 	vldr	s14, [r6, #48]	; 0x30
 802dd46:	edd6 6a0e 	vldr	s13, [r6, #56]	; 0x38
 802dd4a:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 802dd4e:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802dd52:	ee67 7a80 	vmul.f32	s15, s15, s0
 802dd56:	eee6 7a87 	vfma.f32	s15, s13, s14
 802dd5a:	edc6 7a0e 	vstr	s15, [r6, #56]	; 0x38
 802dd5e:	e7af      	b.n	802dcc0 <IMU_enterThread+0x27c>
 802dd60:	ed96 7a06 	vldr	s14, [r6, #24]
 802dd64:	edd6 6a08 	vldr	s13, [r6, #32]
 802dd68:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 802dd6c:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802dd70:	ee67 7a80 	vmul.f32	s15, s15, s0
 802dd74:	eee6 7a87 	vfma.f32	s15, s13, s14
 802dd78:	edc6 7a08 	vstr	s15, [r6, #32]
 802dd7c:	e773      	b.n	802dc66 <IMU_enterThread+0x222>
 802dd7e:	ed96 7a00 	vldr	s14, [r6]
 802dd82:	edd6 6a02 	vldr	s13, [r6, #8]
 802dd86:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 802dd8a:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802dd8e:	ee67 7a80 	vmul.f32	s15, s15, s0
 802dd92:	eee6 7a87 	vfma.f32	s15, s13, s14
 802dd96:	edc6 7a02 	vstr	s15, [r6, #8]
 802dd9a:	e733      	b.n	802dc04 <IMU_enterThread+0x1c0>
 802dd9c:	a804      	add	r0, sp, #16
 802dd9e:	f7ff fc73 	bl	802d688 <IMU_CALIB_getPitchRollBias>
 802dda2:	a904      	add	r1, sp, #16
 802dda4:	4658      	mov	r0, fp
 802dda6:	f7ff fb95 	bl	802d4d4 <IMU_PITCHROLL_calculate>
 802ddaa:	a807      	add	r0, sp, #28
 802ddac:	ed8d 0a07 	vstr	s0, [sp, #28]
 802ddb0:	edcd 0a08 	vstr	s1, [sp, #32]
 802ddb4:	ed8d 1a09 	vstr	s2, [sp, #36]	; 0x24
 802ddb8:	f003 fe22 	bl	8031a00 <AWARENESS_submitPitchRollData(IMU_pitchRoll_data_t const*)>
 802ddbc:	2200      	movs	r2, #0
 802ddbe:	f44f 7180 	mov.w	r1, #256	; 0x100
 802ddc2:	480b      	ldr	r0, [pc, #44]	; (802ddf0 <IMU_enterThread+0x3ac>)
 802ddc4:	f00b f9d8 	bl	8039178 <_tx_event_flags_set>
 802ddc8:	e7b9      	b.n	802dd3e <IMU_enterThread+0x2fa>
 802ddca:	2200      	movs	r2, #0
 802ddcc:	2102      	movs	r1, #2
 802ddce:	4808      	ldr	r0, [pc, #32]	; (802ddf0 <IMU_enterThread+0x3ac>)
 802ddd0:	f00b f9d2 	bl	8039178 <_tx_event_flags_set>
 802ddd4:	e7ae      	b.n	802dd34 <IMU_enterThread+0x2f0>
 802ddd6:	bf00      	nop
 802ddd8:	2000586c 	.word	0x2000586c
 802dddc:	200056d8 	.word	0x200056d8
 802dde0:	20005708 	.word	0x20005708
 802dde4:	20005510 	.word	0x20005510
 802dde8:	44d0f800 	.word	0x44d0f800
 802ddec:	00000000 	.word	0x00000000
 802ddf0:	2000e158 	.word	0x2000e158
 802ddf4:	20005768 	.word	0x20005768
 802ddf8:	2000576c 	.word	0x2000576c
 802ddfc:	20005750 	.word	0x20005750
 802de00:	480e      	ldr	r0, [pc, #56]	; (802de3c <IMU_enterThread+0x3f8>)
 802de02:	212f      	movs	r1, #47	; 0x2f
 802de04:	f011 faab 	bl	803f35e <strrchr>
 802de08:	b158      	cbz	r0, 802de22 <IMU_enterThread+0x3de>
 802de0a:	212f      	movs	r1, #47	; 0x2f
 802de0c:	480b      	ldr	r0, [pc, #44]	; (802de3c <IMU_enterThread+0x3f8>)
 802de0e:	f011 faa6 	bl	803f35e <strrchr>
 802de12:	1c41      	adds	r1, r0, #1
 802de14:	4b0a      	ldr	r3, [pc, #40]	; (802de40 <IMU_enterThread+0x3fc>)
 802de16:	f44f 72a4 	mov.w	r2, #328	; 0x148
 802de1a:	2000      	movs	r0, #0
 802de1c:	f7f4 fcbc 	bl	8022798 <DEBUG_logMsg>
 802de20:	e783      	b.n	802dd2a <IMU_enterThread+0x2e6>
 802de22:	4806      	ldr	r0, [pc, #24]	; (802de3c <IMU_enterThread+0x3f8>)
 802de24:	215c      	movs	r1, #92	; 0x5c
 802de26:	f011 fa9a 	bl	803f35e <strrchr>
 802de2a:	b128      	cbz	r0, 802de38 <IMU_enterThread+0x3f4>
 802de2c:	215c      	movs	r1, #92	; 0x5c
 802de2e:	4803      	ldr	r0, [pc, #12]	; (802de3c <IMU_enterThread+0x3f8>)
 802de30:	f011 fa95 	bl	803f35e <strrchr>
 802de34:	1c41      	adds	r1, r0, #1
 802de36:	e7ed      	b.n	802de14 <IMU_enterThread+0x3d0>
 802de38:	4900      	ldr	r1, [pc, #0]	; (802de3c <IMU_enterThread+0x3f8>)
 802de3a:	e7eb      	b.n	802de14 <IMU_enterThread+0x3d0>
 802de3c:	08047030 	.word	0x08047030
 802de40:	08047064 	.word	0x08047064
 802de44:	81010ac9 	.word	0x81010ac9
 802de48:	80afb0b0 	.word	0x80afb0b0
 802de4c:	00000000 	.word	0x00000000

0802de50 <IMU_getProcData>:
 802de50:	b470      	push	{r4, r5, r6}
 802de52:	4d07      	ldr	r5, [pc, #28]	; (802de70 <IMU_getProcData+0x20>)
 802de54:	4606      	mov	r6, r0
 802de56:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 802de58:	4634      	mov	r4, r6
 802de5a:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 802de5c:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 802de5e:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 802de60:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
 802de64:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 802de68:	4630      	mov	r0, r6
 802de6a:	bc70      	pop	{r4, r5, r6}
 802de6c:	4770      	bx	lr
 802de6e:	bf00      	nop
 802de70:	200056d8 	.word	0x200056d8

0802de74 <IMU_clearIntegratedGyro>:
 802de74:	4802      	ldr	r0, [pc, #8]	; (802de80 <IMU_clearIntegratedGyro+0xc>)
 802de76:	2200      	movs	r2, #0
 802de78:	2108      	movs	r1, #8
 802de7a:	f00b b97d 	b.w	8039178 <_tx_event_flags_set>
 802de7e:	bf00      	nop
 802de80:	20005510 	.word	0x20005510

0802de84 <_GLOBAL__sub_I_IMU_thread>:
 802de84:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802de86:	4b68      	ldr	r3, [pc, #416]	; (802e028 <_GLOBAL__sub_I_IMU_thread+0x1a4>)
 802de88:	4a68      	ldr	r2, [pc, #416]	; (802e02c <_GLOBAL__sub_I_IMU_thread+0x1a8>)
 802de8a:	4d69      	ldr	r5, [pc, #420]	; (802e030 <_GLOBAL__sub_I_IMU_thread+0x1ac>)
 802de8c:	4869      	ldr	r0, [pc, #420]	; (802e034 <_GLOBAL__sub_I_IMU_thread+0x1b0>)
 802de8e:	4c6a      	ldr	r4, [pc, #424]	; (802e038 <_GLOBAL__sub_I_IMU_thread+0x1b4>)
 802de90:	496a      	ldr	r1, [pc, #424]	; (802e03c <_GLOBAL__sub_I_IMU_thread+0x1b8>)
 802de92:	ed2d 8b02 	vpush	{d8}
 802de96:	ed9f 8a6a 	vldr	s16, [pc, #424]	; 802e040 <_GLOBAL__sub_I_IMU_thread+0x1bc>
 802de9a:	eddf 8a6a 	vldr	s17, [pc, #424]	; 802e044 <_GLOBAL__sub_I_IMU_thread+0x1c0>
 802de9e:	601d      	str	r5, [r3, #0]
 802dea0:	2601      	movs	r6, #1
 802dea2:	619d      	str	r5, [r3, #24]
 802dea4:	631d      	str	r5, [r3, #48]	; 0x30
 802dea6:	6058      	str	r0, [r3, #4]
 802dea8:	2500      	movs	r5, #0
 802deaa:	61d8      	str	r0, [r3, #28]
 802deac:	6358      	str	r0, [r3, #52]	; 0x34
 802deae:	2064      	movs	r0, #100	; 0x64
 802deb0:	6118      	str	r0, [r3, #16]
 802deb2:	6298      	str	r0, [r3, #40]	; 0x28
 802deb4:	6418      	str	r0, [r3, #64]	; 0x40
 802deb6:	6051      	str	r1, [r2, #4]
 802deb8:	60d1      	str	r1, [r2, #12]
 802deba:	6151      	str	r1, [r2, #20]
 802debc:	ed82 8a00 	vstr	s16, [r2]
 802dec0:	ed82 8a02 	vstr	s16, [r2, #8]
 802dec4:	ed82 8a04 	vstr	s16, [r2, #16]
 802dec8:	ed83 8a02 	vstr	s16, [r3, #8]
 802decc:	ed83 8a08 	vstr	s16, [r3, #32]
 802ded0:	ed83 8a0e 	vstr	s16, [r3, #56]	; 0x38
 802ded4:	eeb0 0a68 	vmov.f32	s0, s17
 802ded8:	731e      	strb	r6, [r3, #12]
 802deda:	f883 6024 	strb.w	r6, [r3, #36]	; 0x24
 802dede:	f883 603c 	strb.w	r6, [r3, #60]	; 0x3c
 802dee2:	615d      	str	r5, [r3, #20]
 802dee4:	62dd      	str	r5, [r3, #44]	; 0x2c
 802dee6:	645d      	str	r5, [r3, #68]	; 0x44
 802dee8:	f44f 7380 	mov.w	r3, #256	; 0x100
 802deec:	8023      	strh	r3, [r4, #0]
 802deee:	80a6      	strh	r6, [r4, #4]
 802def0:	f010 fe22 	bl	803eb38 <fabs(float)>
 802def4:	2703      	movs	r7, #3
 802def6:	eef0 7a40 	vmov.f32	s15, s0
 802defa:	eeb0 0a68 	vmov.f32	s0, s17
 802defe:	ed84 8a05 	vstr	s16, [r4, #20]
 802df02:	edc4 7a02 	vstr	s15, [r4, #8]
 802df06:	7327      	strb	r7, [r4, #12]
 802df08:	8325      	strh	r5, [r4, #24]
 802df0a:	83a6      	strh	r6, [r4, #28]
 802df0c:	f010 fe14 	bl	803eb38 <fabs(float)>
 802df10:	eef0 7a40 	vmov.f32	s15, s0
 802df14:	eeb0 0a68 	vmov.f32	s0, s17
 802df18:	f884 7024 	strb.w	r7, [r4, #36]	; 0x24
 802df1c:	ed84 8a0b 	vstr	s16, [r4, #44]	; 0x2c
 802df20:	edc4 7a08 	vstr	s15, [r4, #32]
 802df24:	8625      	strh	r5, [r4, #48]	; 0x30
 802df26:	86a6      	strh	r6, [r4, #52]	; 0x34
 802df28:	f010 fe06 	bl	803eb38 <fabs(float)>
 802df2c:	eddf 8a46 	vldr	s17, [pc, #280]	; 802e048 <_GLOBAL__sub_I_IMU_thread+0x1c4>
 802df30:	f884 703c 	strb.w	r7, [r4, #60]	; 0x3c
 802df34:	2204      	movs	r2, #4
 802df36:	f240 4301 	movw	r3, #1025	; 0x401
 802df3a:	eef0 7a40 	vmov.f32	s15, s0
 802df3e:	eeb0 0a68 	vmov.f32	s0, s17
 802df42:	64e2      	str	r2, [r4, #76]	; 0x4c
 802df44:	f8a4 3050 	strh.w	r3, [r4, #80]	; 0x50
 802df48:	ed84 8a11 	vstr	s16, [r4, #68]	; 0x44
 802df4c:	edc4 7a0e 	vstr	s15, [r4, #56]	; 0x38
 802df50:	f8a4 5048 	strh.w	r5, [r4, #72]	; 0x48
 802df54:	f8a4 6054 	strh.w	r6, [r4, #84]	; 0x54
 802df58:	f010 fdee 	bl	803eb38 <fabs(float)>
 802df5c:	eef0 7a40 	vmov.f32	s15, s0
 802df60:	eeb0 0a68 	vmov.f32	s0, s17
 802df64:	ed84 8a19 	vstr	s16, [r4, #100]	; 0x64
 802df68:	edc4 7a16 	vstr	s15, [r4, #88]	; 0x58
 802df6c:	f884 605c 	strb.w	r6, [r4, #92]	; 0x5c
 802df70:	f8a4 5068 	strh.w	r5, [r4, #104]	; 0x68
 802df74:	f8a4 606c 	strh.w	r6, [r4, #108]	; 0x6c
 802df78:	f010 fdde 	bl	803eb38 <fabs(float)>
 802df7c:	eef0 7a40 	vmov.f32	s15, s0
 802df80:	eeb0 0a48 	vmov.f32	s0, s16
 802df84:	ed84 8a1f 	vstr	s16, [r4, #124]	; 0x7c
 802df88:	edc4 7a1c 	vstr	s15, [r4, #112]	; 0x70
 802df8c:	f884 6074 	strb.w	r6, [r4, #116]	; 0x74
 802df90:	f8a4 5080 	strh.w	r5, [r4, #128]	; 0x80
 802df94:	f8a4 5084 	strh.w	r5, [r4, #132]	; 0x84
 802df98:	f010 fdce 	bl	803eb38 <fabs(float)>
 802df9c:	f240 4302 	movw	r3, #1026	; 0x402
 802dfa0:	eef0 7a40 	vmov.f32	s15, s0
 802dfa4:	2240      	movs	r2, #64	; 0x40
 802dfa6:	eeb0 0a68 	vmov.f32	s0, s17
 802dfaa:	f8a4 30a0 	strh.w	r3, [r4, #160]	; 0xa0
 802dfae:	f8c4 209c 	str.w	r2, [r4, #156]	; 0x9c
 802dfb2:	ed84 8a25 	vstr	s16, [r4, #148]	; 0x94
 802dfb6:	edc4 7a22 	vstr	s15, [r4, #136]	; 0x88
 802dfba:	f884 508c 	strb.w	r5, [r4, #140]	; 0x8c
 802dfbe:	f8a4 5098 	strh.w	r5, [r4, #152]	; 0x98
 802dfc2:	f8a4 60a4 	strh.w	r6, [r4, #164]	; 0xa4
 802dfc6:	f010 fdb7 	bl	803eb38 <fabs(float)>
 802dfca:	270c      	movs	r7, #12
 802dfcc:	eef0 7a40 	vmov.f32	s15, s0
 802dfd0:	eeb0 0a68 	vmov.f32	s0, s17
 802dfd4:	ed84 8a2d 	vstr	s16, [r4, #180]	; 0xb4
 802dfd8:	edc4 7a2a 	vstr	s15, [r4, #168]	; 0xa8
 802dfdc:	f8a4 50b8 	strh.w	r5, [r4, #184]	; 0xb8
 802dfe0:	f8a4 60bc 	strh.w	r6, [r4, #188]	; 0xbc
 802dfe4:	f884 70ac 	strb.w	r7, [r4, #172]	; 0xac
 802dfe8:	f010 fda6 	bl	803eb38 <fabs(float)>
 802dfec:	eef0 7a40 	vmov.f32	s15, s0
 802dff0:	eeb0 0a48 	vmov.f32	s0, s16
 802dff4:	ed84 8a33 	vstr	s16, [r4, #204]	; 0xcc
 802dff8:	f884 70c4 	strb.w	r7, [r4, #196]	; 0xc4
 802dffc:	f8a4 50d0 	strh.w	r5, [r4, #208]	; 0xd0
 802e000:	f8a4 50d4 	strh.w	r5, [r4, #212]	; 0xd4
 802e004:	edc4 7a30 	vstr	s15, [r4, #192]	; 0xc0
 802e008:	f010 fd96 	bl	803eb38 <fabs(float)>
 802e00c:	ed84 8a39 	vstr	s16, [r4, #228]	; 0xe4
 802e010:	ecbd 8b02 	vpop	{d8}
 802e014:	2380      	movs	r3, #128	; 0x80
 802e016:	f884 50dc 	strb.w	r5, [r4, #220]	; 0xdc
 802e01a:	f8a4 50e8 	strh.w	r5, [r4, #232]	; 0xe8
 802e01e:	ed84 0a36 	vstr	s0, [r4, #216]	; 0xd8
 802e022:	f8c4 30ec 	str.w	r3, [r4, #236]	; 0xec
 802e026:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 802e028:	20005708 	.word	0x20005708
 802e02c:	20005750 	.word	0x20005750
 802e030:	3f7fbe77 	.word	0x3f7fbe77
 802e034:	3f666666 	.word	0x3f666666
 802e038:	200055e8 	.word	0x200055e8
 802e03c:	3f7eb852 	.word	0x3f7eb852
 802e040:	00000000 	.word	0x00000000
 802e044:	44af0000 	.word	0x44af0000
 802e048:	453b8000 	.word	0x453b8000

0802e04c <imuDelayUs>:
 802e04c:	4b03      	ldr	r3, [pc, #12]	; (802e05c <imuDelayUs+0x10>)
 802e04e:	fba3 3000 	umull	r3, r0, r3, r0
 802e052:	0980      	lsrs	r0, r0, #6
 802e054:	3001      	adds	r0, #1
 802e056:	f00b bf7b 	b.w	8039f50 <_tx_thread_sleep>
 802e05a:	bf00      	nop
 802e05c:	10624dd3 	.word	0x10624dd3

0802e060 <imuSPIWrite>:
 802e060:	b570      	push	{r4, r5, r6, lr}
 802e062:	b088      	sub	sp, #32
 802e064:	4603      	mov	r3, r0
 802e066:	4614      	mov	r4, r2
 802e068:	4d0c      	ldr	r5, [pc, #48]	; (802e09c <imuSPIWrite+0x3c>)
 802e06a:	f88d 3000 	strb.w	r3, [sp]
 802e06e:	f10d 0001 	add.w	r0, sp, #1
 802e072:	f011 fac6 	bl	803f602 <__aeabi_memcpy>
 802e076:	f44f 6680 	mov.w	r6, #1024	; 0x400
 802e07a:	1c63      	adds	r3, r4, #1
 802e07c:	b29b      	uxth	r3, r3
 802e07e:	836e      	strh	r6, [r5, #26]
 802e080:	4669      	mov	r1, sp
 802e082:	2200      	movs	r2, #0
 802e084:	2002      	movs	r0, #2
 802e086:	f007 fa1b 	bl	80354c0 <SPI_readWrite>
 802e08a:	2800      	cmp	r0, #0
 802e08c:	bf0c      	ite	eq
 802e08e:	f06f 0001 	mvneq.w	r0, #1
 802e092:	2000      	movne	r0, #0
 802e094:	832e      	strh	r6, [r5, #24]
 802e096:	b008      	add	sp, #32
 802e098:	bd70      	pop	{r4, r5, r6, pc}
 802e09a:	bf00      	nop
 802e09c:	40021400 	.word	0x40021400

0802e0a0 <imuSPIRead>:
 802e0a0:	b570      	push	{r4, r5, r6, lr}
 802e0a2:	4b11      	ldr	r3, [pc, #68]	; (802e0e8 <imuSPIRead+0x48>)
 802e0a4:	b082      	sub	sp, #8
 802e0a6:	f44f 6680 	mov.w	r6, #1024	; 0x400
 802e0aa:	f88d 0007 	strb.w	r0, [sp, #7]
 802e0ae:	460c      	mov	r4, r1
 802e0b0:	4615      	mov	r5, r2
 802e0b2:	835e      	strh	r6, [r3, #26]
 802e0b4:	2200      	movs	r2, #0
 802e0b6:	2301      	movs	r3, #1
 802e0b8:	f10d 0107 	add.w	r1, sp, #7
 802e0bc:	2002      	movs	r0, #2
 802e0be:	f007 f9ff 	bl	80354c0 <SPI_readWrite>
 802e0c2:	b168      	cbz	r0, 802e0e0 <imuSPIRead+0x40>
 802e0c4:	b2ab      	uxth	r3, r5
 802e0c6:	4622      	mov	r2, r4
 802e0c8:	2100      	movs	r1, #0
 802e0ca:	2002      	movs	r0, #2
 802e0cc:	f007 f9f8 	bl	80354c0 <SPI_readWrite>
 802e0d0:	b130      	cbz	r0, 802e0e0 <imuSPIRead+0x40>
 802e0d2:	2000      	movs	r0, #0
 802e0d4:	4b04      	ldr	r3, [pc, #16]	; (802e0e8 <imuSPIRead+0x48>)
 802e0d6:	f44f 6280 	mov.w	r2, #1024	; 0x400
 802e0da:	831a      	strh	r2, [r3, #24]
 802e0dc:	b002      	add	sp, #8
 802e0de:	bd70      	pop	{r4, r5, r6, pc}
 802e0e0:	f06f 0001 	mvn.w	r0, #1
 802e0e4:	e7f6      	b.n	802e0d4 <imuSPIRead+0x34>
 802e0e6:	bf00      	nop
 802e0e8:	40021400 	.word	0x40021400

0802e0ec <extIntCallback>:
 802e0ec:	b570      	push	{r4, r5, r6, lr}
 802e0ee:	4c19      	ldr	r4, [pc, #100]	; (802e154 <extIntCallback+0x68>)
 802e0f0:	4d19      	ldr	r5, [pc, #100]	; (802e158 <extIntCallback+0x6c>)
 802e0f2:	78a2      	ldrb	r2, [r4, #2]
 802e0f4:	4e19      	ldr	r6, [pc, #100]	; (802e15c <extIntCallback+0x70>)
 802e0f6:	4b1a      	ldr	r3, [pc, #104]	; (802e160 <extIntCallback+0x74>)
 802e0f8:	2120      	movs	r1, #32
 802e0fa:	8329      	strh	r1, [r5, #24]
 802e0fc:	8820      	ldrh	r0, [r4, #0]
 802e0fe:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 802e102:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 802e106:	0212      	lsls	r2, r2, #8
 802e108:	eb02 0180 	add.w	r1, r2, r0, lsl #2
 802e10c:	220c      	movs	r2, #12
 802e10e:	4431      	add	r1, r6
 802e110:	4610      	mov	r0, r2
 802e112:	f00e fcb9 	bl	803ca88 <bmi2_get_regs>
 802e116:	8823      	ldrh	r3, [r4, #0]
 802e118:	3301      	adds	r3, #1
 802e11a:	b29b      	uxth	r3, r3
 802e11c:	2b3f      	cmp	r3, #63	; 0x3f
 802e11e:	8023      	strh	r3, [r4, #0]
 802e120:	d803      	bhi.n	802e12a <extIntCallback+0x3e>
 802e122:	4b0d      	ldr	r3, [pc, #52]	; (802e158 <extIntCallback+0x6c>)
 802e124:	2220      	movs	r2, #32
 802e126:	835a      	strh	r2, [r3, #26]
 802e128:	bd70      	pop	{r4, r5, r6, pc}
 802e12a:	696b      	ldr	r3, [r5, #20]
 802e12c:	480d      	ldr	r0, [pc, #52]	; (802e164 <extIntCallback+0x78>)
 802e12e:	f083 0340 	eor.w	r3, r3, #64	; 0x40
 802e132:	616b      	str	r3, [r5, #20]
 802e134:	78a3      	ldrb	r3, [r4, #2]
 802e136:	70e3      	strb	r3, [r4, #3]
 802e138:	fab3 f383 	clz	r3, r3
 802e13c:	2200      	movs	r2, #0
 802e13e:	095b      	lsrs	r3, r3, #5
 802e140:	2101      	movs	r1, #1
 802e142:	70a3      	strb	r3, [r4, #2]
 802e144:	8022      	strh	r2, [r4, #0]
 802e146:	f00b f817 	bl	8039178 <_tx_event_flags_set>
 802e14a:	4b03      	ldr	r3, [pc, #12]	; (802e158 <extIntCallback+0x6c>)
 802e14c:	2220      	movs	r2, #32
 802e14e:	835a      	strh	r2, [r3, #26]
 802e150:	bd70      	pop	{r4, r5, r6, pc}
 802e152:	bf00      	nop
 802e154:	200058d8 	.word	0x200058d8
 802e158:	40020000 	.word	0x40020000
 802e15c:	200058e0 	.word	0x200058e0
 802e160:	20005870 	.word	0x20005870
 802e164:	20005510 	.word	0x20005510

0802e168 <IMU_DRIVER_init>:
 802e168:	b5f0      	push	{r4, r5, r6, r7, lr}
 802e16a:	2206      	movs	r2, #6
 802e16c:	b093      	sub	sp, #76	; 0x4c
 802e16e:	2100      	movs	r1, #0
 802e170:	483e      	ldr	r0, [pc, #248]	; (802e26c <IMU_DRIVER_init+0x104>)
 802e172:	4e3f      	ldr	r6, [pc, #252]	; (802e270 <IMU_DRIVER_init+0x108>)
 802e174:	4c3f      	ldr	r4, [pc, #252]	; (802e274 <IMU_DRIVER_init+0x10c>)
 802e176:	f011 fa6d 	bl	803f654 <memset>
 802e17a:	2300      	movs	r3, #0
 802e17c:	461a      	mov	r2, r3
 802e17e:	4618      	mov	r0, r3
 802e180:	493d      	ldr	r1, [pc, #244]	; (802e278 <IMU_DRIVER_init+0x110>)
 802e182:	f006 ff91 	bl	80350a8 <GPIO_setupExtiInterrupt>
 802e186:	f44f 6780 	mov.w	r7, #1024	; 0x400
 802e18a:	2002      	movs	r0, #2
 802e18c:	f007 f880 	bl	8035290 <SPI_setup>
 802e190:	8377      	strh	r7, [r6, #26]
 802e192:	2001      	movs	r0, #1
 802e194:	f00b fedc 	bl	8039f50 <_tx_thread_sleep>
 802e198:	8337      	strh	r7, [r6, #24]
 802e19a:	4a38      	ldr	r2, [pc, #224]	; (802e27c <IMU_DRIVER_init+0x114>)
 802e19c:	4e38      	ldr	r6, [pc, #224]	; (802e280 <IMU_DRIVER_init+0x118>)
 802e19e:	4b39      	ldr	r3, [pc, #228]	; (802e284 <IMU_DRIVER_init+0x11c>)
 802e1a0:	63a3      	str	r3, [r4, #56]	; 0x38
 802e1a2:	2501      	movs	r5, #1
 802e1a4:	211f      	movs	r1, #31
 802e1a6:	2000      	movs	r0, #0
 802e1a8:	e9c4 620f 	strd	r6, r2, [r4, #60]	; 0x3c
 802e1ac:	81e1      	strh	r1, [r4, #14]
 802e1ae:	4623      	mov	r3, r4
 802e1b0:	462a      	mov	r2, r5
 802e1b2:	f10d 0103 	add.w	r1, sp, #3
 802e1b6:	7020      	strb	r0, [r4, #0]
 802e1b8:	7260      	strb	r0, [r4, #9]
 802e1ba:	6120      	str	r0, [r4, #16]
 802e1bc:	f88d 0003 	strb.w	r0, [sp, #3]
 802e1c0:	72e5      	strb	r5, [r4, #11]
 802e1c2:	f00e fc61 	bl	803ca88 <bmi2_get_regs>
 802e1c6:	4620      	mov	r0, r4
 802e1c8:	f00f feb6 	bl	803df38 <bmi270_init>
 802e1cc:	bb78      	cbnz	r0, 802e22e <IMU_DRIVER_init+0xc6>
 802e1ce:	4603      	mov	r3, r0
 802e1d0:	260c      	movs	r6, #12
 802e1d2:	4622      	mov	r2, r4
 802e1d4:	4629      	mov	r1, r5
 802e1d6:	a805      	add	r0, sp, #20
 802e1d8:	f88d 3014 	strb.w	r3, [sp, #20]
 802e1dc:	f8ad 5018 	strh.w	r5, [sp, #24]
 802e1e0:	f8ad 6016 	strh.w	r6, [sp, #22]
 802e1e4:	f00f fa5c 	bl	803d6a0 <bmi2_set_sensor_config>
 802e1e8:	4b27      	ldr	r3, [pc, #156]	; (802e288 <IMU_DRIVER_init+0x120>)
 802e1ea:	9306      	str	r3, [sp, #24]
 802e1ec:	4622      	mov	r2, r4
 802e1ee:	4629      	mov	r1, r5
 802e1f0:	a805      	add	r0, sp, #20
 802e1f2:	f8ad 6016 	strh.w	r6, [sp, #22]
 802e1f6:	f88d 5014 	strb.w	r5, [sp, #20]
 802e1fa:	f00f fa51 	bl	803d6a0 <bmi2_set_sensor_config>
 802e1fe:	4622      	mov	r2, r4
 802e200:	2102      	movs	r1, #2
 802e202:	a801      	add	r0, sp, #4
 802e204:	f8ad 5004 	strh.w	r5, [sp, #4]
 802e208:	f00f fed6 	bl	803dfb8 <bmi270_sensor_enable>
 802e20c:	f04f 1301 	mov.w	r3, #65537	; 0x10001
 802e210:	4621      	mov	r1, r4
 802e212:	a802      	add	r0, sp, #8
 802e214:	9302      	str	r3, [sp, #8]
 802e216:	f8ad 500c 	strh.w	r5, [sp, #12]
 802e21a:	f00e fe1b 	bl	803ce54 <bmi2_set_int_pin_config>
 802e21e:	4622      	mov	r2, r4
 802e220:	4629      	mov	r1, r5
 802e222:	2004      	movs	r0, #4
 802e224:	f00e fea6 	bl	803cf74 <bmi2_map_data_int>
 802e228:	2000      	movs	r0, #0
 802e22a:	b013      	add	sp, #76	; 0x4c
 802e22c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 802e22e:	4817      	ldr	r0, [pc, #92]	; (802e28c <IMU_DRIVER_init+0x124>)
 802e230:	212f      	movs	r1, #47	; 0x2f
 802e232:	f011 f894 	bl	803f35e <strrchr>
 802e236:	b160      	cbz	r0, 802e252 <IMU_DRIVER_init+0xea>
 802e238:	212f      	movs	r1, #47	; 0x2f
 802e23a:	4814      	ldr	r0, [pc, #80]	; (802e28c <IMU_DRIVER_init+0x124>)
 802e23c:	f011 f88f 	bl	803f35e <strrchr>
 802e240:	1c41      	adds	r1, r0, #1
 802e242:	4b13      	ldr	r3, [pc, #76]	; (802e290 <IMU_DRIVER_init+0x128>)
 802e244:	228a      	movs	r2, #138	; 0x8a
 802e246:	2000      	movs	r0, #0
 802e248:	f7f4 faa6 	bl	8022798 <DEBUG_logMsg>
 802e24c:	2000      	movs	r0, #0
 802e24e:	b013      	add	sp, #76	; 0x4c
 802e250:	bdf0      	pop	{r4, r5, r6, r7, pc}
 802e252:	480e      	ldr	r0, [pc, #56]	; (802e28c <IMU_DRIVER_init+0x124>)
 802e254:	215c      	movs	r1, #92	; 0x5c
 802e256:	f011 f882 	bl	803f35e <strrchr>
 802e25a:	b128      	cbz	r0, 802e268 <IMU_DRIVER_init+0x100>
 802e25c:	215c      	movs	r1, #92	; 0x5c
 802e25e:	480b      	ldr	r0, [pc, #44]	; (802e28c <IMU_DRIVER_init+0x124>)
 802e260:	f011 f87d 	bl	803f35e <strrchr>
 802e264:	1c41      	adds	r1, r0, #1
 802e266:	e7ec      	b.n	802e242 <IMU_DRIVER_init+0xda>
 802e268:	4908      	ldr	r1, [pc, #32]	; (802e28c <IMU_DRIVER_init+0x124>)
 802e26a:	e7ea      	b.n	802e242 <IMU_DRIVER_init+0xda>
 802e26c:	200058d8 	.word	0x200058d8
 802e270:	40021400 	.word	0x40021400
 802e274:	20005870 	.word	0x20005870
 802e278:	0802e0ed 	.word	0x0802e0ed
 802e27c:	0802e04d 	.word	0x0802e04d
 802e280:	0802e061 	.word	0x0802e061
 802e284:	0802e0a1 	.word	0x0802e0a1
 802e288:	01040001 	.word	0x01040001
 802e28c:	08047088 	.word	0x08047088
 802e290:	080470c8 	.word	0x080470c8

0802e294 <IMU_DRIVER_getDataBuff>:
 802e294:	4b03      	ldr	r3, [pc, #12]	; (802e2a4 <IMU_DRIVER_getDataBuff+0x10>)
 802e296:	4804      	ldr	r0, [pc, #16]	; (802e2a8 <IMU_DRIVER_getDataBuff+0x14>)
 802e298:	78db      	ldrb	r3, [r3, #3]
 802e29a:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 802e29e:	eb00 2003 	add.w	r0, r0, r3, lsl #8
 802e2a2:	4770      	bx	lr
 802e2a4:	200058d8 	.word	0x200058d8
 802e2a8:	200058e0 	.word	0x200058e0

0802e2ac <IMU_DRIVER_resume>:
 802e2ac:	b508      	push	{r3, lr}
 802e2ae:	2200      	movs	r2, #0
 802e2b0:	4610      	mov	r0, r2
 802e2b2:	2301      	movs	r3, #1
 802e2b4:	4903      	ldr	r1, [pc, #12]	; (802e2c4 <IMU_DRIVER_resume+0x18>)
 802e2b6:	f006 fef7 	bl	80350a8 <GPIO_setupExtiInterrupt>
 802e2ba:	4b03      	ldr	r3, [pc, #12]	; (802e2c8 <IMU_DRIVER_resume+0x1c>)
 802e2bc:	2201      	movs	r2, #1
 802e2be:	711a      	strb	r2, [r3, #4]
 802e2c0:	bd08      	pop	{r3, pc}
 802e2c2:	bf00      	nop
 802e2c4:	0802e0ed 	.word	0x0802e0ed
 802e2c8:	200058d8 	.word	0x200058d8

0802e2cc <UTILITIES_strSplit>:
 802e2cc:	b4f0      	push	{r4, r5, r6, r7}
 802e2ce:	4606      	mov	r6, r0
 802e2d0:	b1f8      	cbz	r0, 802e312 <UTILITIES_strSplit+0x46>
 802e2d2:	b31b      	cbz	r3, 802e31c <UTILITIES_strSplit+0x50>
 802e2d4:	b1fa      	cbz	r2, 802e316 <UTILITIES_strSplit+0x4a>
 802e2d6:	7800      	ldrb	r0, [r0, #0]
 802e2d8:	b1d8      	cbz	r0, 802e312 <UTILITIES_strSplit+0x46>
 802e2da:	601e      	str	r6, [r3, #0]
 802e2dc:	7835      	ldrb	r5, [r6, #0]
 802e2de:	b305      	cbz	r5, 802e322 <UTILITIES_strSplit+0x56>
 802e2e0:	2000      	movs	r0, #0
 802e2e2:	1c74      	adds	r4, r6, #1
 802e2e4:	4607      	mov	r7, r0
 802e2e6:	f206 2601 	addw	r6, r6, #513	; 0x201
 802e2ea:	e004      	b.n	802e2f6 <UTILITIES_strSplit+0x2a>
 802e2ec:	7825      	ldrb	r5, [r4, #0]
 802e2ee:	3401      	adds	r4, #1
 802e2f0:	b175      	cbz	r5, 802e310 <UTILITIES_strSplit+0x44>
 802e2f2:	42b4      	cmp	r4, r6
 802e2f4:	d00c      	beq.n	802e310 <UTILITIES_strSplit+0x44>
 802e2f6:	42a9      	cmp	r1, r5
 802e2f8:	d1f8      	bne.n	802e2ec <UTILITIES_strSplit+0x20>
 802e2fa:	3001      	adds	r0, #1
 802e2fc:	4282      	cmp	r2, r0
 802e2fe:	f804 7c01 	strb.w	r7, [r4, #-1]
 802e302:	dd06      	ble.n	802e312 <UTILITIES_strSplit+0x46>
 802e304:	f843 4020 	str.w	r4, [r3, r0, lsl #2]
 802e308:	7825      	ldrb	r5, [r4, #0]
 802e30a:	3401      	adds	r4, #1
 802e30c:	2d00      	cmp	r5, #0
 802e30e:	d1f0      	bne.n	802e2f2 <UTILITIES_strSplit+0x26>
 802e310:	3001      	adds	r0, #1
 802e312:	bcf0      	pop	{r4, r5, r6, r7}
 802e314:	4770      	bx	lr
 802e316:	4610      	mov	r0, r2
 802e318:	bcf0      	pop	{r4, r5, r6, r7}
 802e31a:	4770      	bx	lr
 802e31c:	4618      	mov	r0, r3
 802e31e:	bcf0      	pop	{r4, r5, r6, r7}
 802e320:	4770      	bx	lr
 802e322:	2001      	movs	r0, #1
 802e324:	e7f5      	b.n	802e312 <UTILITIES_strSplit+0x46>
 802e326:	bf00      	nop

0802e328 <UTILITIES_initRingBuff>:
 802e328:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802e32a:	4605      	mov	r5, r0
 802e32c:	b158      	cbz	r0, 802e346 <UTILITIES_initRingBuff+0x1e>
 802e32e:	461c      	mov	r4, r3
 802e330:	b153      	cbz	r3, 802e348 <UTILITIES_initRingBuff+0x20>
 802e332:	460f      	mov	r7, r1
 802e334:	4616      	mov	r6, r2
 802e336:	2100      	movs	r1, #0
 802e338:	2210      	movs	r2, #16
 802e33a:	f011 f98b 	bl	803f654 <memset>
 802e33e:	812f      	strh	r7, [r5, #8]
 802e340:	816e      	strh	r6, [r5, #10]
 802e342:	60ec      	str	r4, [r5, #12]
 802e344:	2001      	movs	r0, #1
 802e346:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 802e348:	4618      	mov	r0, r3
 802e34a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0802e34c <UTILITIES_popRingBuff>:
 802e34c:	b341      	cbz	r1, 802e3a0 <UTILITIES_popRingBuff+0x54>
 802e34e:	b510      	push	{r4, lr}
 802e350:	4604      	mov	r4, r0
 802e352:	b310      	cbz	r0, 802e39a <UTILITIES_popRingBuff+0x4e>
 802e354:	8822      	ldrh	r2, [r4, #0]
 802e356:	8863      	ldrh	r3, [r4, #2]
 802e358:	4293      	cmp	r3, r2
 802e35a:	4608      	mov	r0, r1
 802e35c:	d814      	bhi.n	802e388 <UTILITIES_popRingBuff+0x3c>
 802e35e:	4293      	cmp	r3, r2
 802e360:	d016      	beq.n	802e390 <UTILITIES_popRingBuff+0x44>
 802e362:	8922      	ldrh	r2, [r4, #8]
 802e364:	68e1      	ldr	r1, [r4, #12]
 802e366:	429a      	cmp	r2, r3
 802e368:	8962      	ldrh	r2, [r4, #10]
 802e36a:	bf9c      	itt	ls
 802e36c:	2300      	movls	r3, #0
 802e36e:	8063      	strhls	r3, [r4, #2]
 802e370:	fb03 1102 	mla	r1, r3, r2, r1
 802e374:	f011 f945 	bl	803f602 <__aeabi_memcpy>
 802e378:	88a0      	ldrh	r0, [r4, #4]
 802e37a:	8863      	ldrh	r3, [r4, #2]
 802e37c:	3801      	subs	r0, #1
 802e37e:	b280      	uxth	r0, r0
 802e380:	3301      	adds	r3, #1
 802e382:	80a0      	strh	r0, [r4, #4]
 802e384:	8063      	strh	r3, [r4, #2]
 802e386:	bd10      	pop	{r4, pc}
 802e388:	8921      	ldrh	r1, [r4, #8]
 802e38a:	440a      	add	r2, r1
 802e38c:	b292      	uxth	r2, r2
 802e38e:	e7e6      	b.n	802e35e <UTILITIES_popRingBuff+0x12>
 802e390:	2300      	movs	r3, #0
 802e392:	80a3      	strh	r3, [r4, #4]
 802e394:	f04f 30ff 	mov.w	r0, #4294967295
 802e398:	bd10      	pop	{r4, pc}
 802e39a:	f04f 30ff 	mov.w	r0, #4294967295
 802e39e:	bd10      	pop	{r4, pc}
 802e3a0:	f04f 30ff 	mov.w	r0, #4294967295
 802e3a4:	4770      	bx	lr
 802e3a6:	bf00      	nop

0802e3a8 <UTILITIES_pushRingBuff>:
 802e3a8:	b1f1      	cbz	r1, 802e3e8 <UTILITIES_pushRingBuff+0x40>
 802e3aa:	b510      	push	{r4, lr}
 802e3ac:	4604      	mov	r4, r0
 802e3ae:	b1d0      	cbz	r0, 802e3e6 <UTILITIES_pushRingBuff+0x3e>
 802e3b0:	8800      	ldrh	r0, [r0, #0]
 802e3b2:	8923      	ldrh	r3, [r4, #8]
 802e3b4:	4283      	cmp	r3, r0
 802e3b6:	8863      	ldrh	r3, [r4, #2]
 802e3b8:	bf9c      	itt	ls
 802e3ba:	2000      	movls	r0, #0
 802e3bc:	8020      	strhls	r0, [r4, #0]
 802e3be:	4283      	cmp	r3, r0
 802e3c0:	d104      	bne.n	802e3cc <UTILITIES_pushRingBuff+0x24>
 802e3c2:	88a3      	ldrh	r3, [r4, #4]
 802e3c4:	b113      	cbz	r3, 802e3cc <UTILITIES_pushRingBuff+0x24>
 802e3c6:	b18a      	cbz	r2, 802e3ec <UTILITIES_pushRingBuff+0x44>
 802e3c8:	2300      	movs	r3, #0
 802e3ca:	80a3      	strh	r3, [r4, #4]
 802e3cc:	8962      	ldrh	r2, [r4, #10]
 802e3ce:	68e3      	ldr	r3, [r4, #12]
 802e3d0:	fb02 3000 	mla	r0, r2, r0, r3
 802e3d4:	f011 f915 	bl	803f602 <__aeabi_memcpy>
 802e3d8:	88a2      	ldrh	r2, [r4, #4]
 802e3da:	8823      	ldrh	r3, [r4, #0]
 802e3dc:	3201      	adds	r2, #1
 802e3de:	3301      	adds	r3, #1
 802e3e0:	80a2      	strh	r2, [r4, #4]
 802e3e2:	8023      	strh	r3, [r4, #0]
 802e3e4:	2001      	movs	r0, #1
 802e3e6:	bd10      	pop	{r4, pc}
 802e3e8:	4608      	mov	r0, r1
 802e3ea:	4770      	bx	lr
 802e3ec:	2002      	movs	r0, #2
 802e3ee:	bd10      	pop	{r4, pc}

0802e3f0 <UTILITIES_isEmptyRx>:
 802e3f0:	8880      	ldrh	r0, [r0, #4]
 802e3f2:	fab0 f080 	clz	r0, r0
 802e3f6:	0940      	lsrs	r0, r0, #5
 802e3f8:	4770      	bx	lr
 802e3fa:	bf00      	nop

0802e3fc <UTILITIES_isDataAvailable>:
 802e3fc:	8880      	ldrh	r0, [r0, #4]
 802e3fe:	3800      	subs	r0, #0
 802e400:	bf18      	it	ne
 802e402:	2001      	movne	r0, #1
 802e404:	4770      	bx	lr
 802e406:	bf00      	nop

0802e408 <saveCameraCalibration()>:
 802e408:	b510      	push	{r4, lr}
 802e40a:	4826      	ldr	r0, [pc, #152]	; (802e4a4 <saveCameraCalibration()+0x9c>)
 802e40c:	b088      	sub	sp, #32
 802e40e:	212f      	movs	r1, #47	; 0x2f
 802e410:	f010 ffa5 	bl	803f35e <strrchr>
 802e414:	b360      	cbz	r0, 802e470 <saveCameraCalibration()+0x68>
 802e416:	212f      	movs	r1, #47	; 0x2f
 802e418:	4822      	ldr	r0, [pc, #136]	; (802e4a4 <saveCameraCalibration()+0x9c>)
 802e41a:	f010 ffa0 	bl	803f35e <strrchr>
 802e41e:	1c41      	adds	r1, r0, #1
 802e420:	4c21      	ldr	r4, [pc, #132]	; (802e4a8 <saveCameraCalibration()+0xa0>)
 802e422:	4b22      	ldr	r3, [pc, #136]	; (802e4ac <saveCameraCalibration()+0xa4>)
 802e424:	e9d4 2000 	ldrd	r2, r0, [r4]
 802e428:	e9cd 2000 	strd	r2, r0, [sp]
 802e42c:	f240 4235 	movw	r2, #1077	; 0x435
 802e430:	2002      	movs	r0, #2
 802e432:	f7f4 f9b1 	bl	8022798 <DEBUG_logMsg>
 802e436:	e9d4 2300 	ldrd	r2, r3, [r4]
 802e43a:	a903      	add	r1, sp, #12
 802e43c:	f8ad 200c 	strh.w	r2, [sp, #12]
 802e440:	2002      	movs	r0, #2
 802e442:	2204      	movs	r2, #4
 802e444:	f8ad 300e 	strh.w	r3, [sp, #14]
 802e448:	f7f5 fdb2 	bl	8023fb0 <CCP_sendDataMessage>
 802e44c:	e9d4 2300 	ldrd	r2, r3, [r4]
 802e450:	4817      	ldr	r0, [pc, #92]	; (802e4b0 <saveCameraCalibration()+0xa8>)
 802e452:	9204      	str	r2, [sp, #16]
 802e454:	9305      	str	r3, [sp, #20]
 802e456:	9006      	str	r0, [sp, #24]
 802e458:	4c16      	ldr	r4, [pc, #88]	; (802e4b4 <saveCameraCalibration()+0xac>)
 802e45a:	4917      	ldr	r1, [pc, #92]	; (802e4b8 <saveCameraCalibration()+0xb0>)
 802e45c:	4817      	ldr	r0, [pc, #92]	; (802e4bc <saveCameraCalibration()+0xb4>)
 802e45e:	9407      	str	r4, [sp, #28]
 802e460:	aa04      	add	r2, sp, #16
 802e462:	2310      	movs	r3, #16
 802e464:	f003 f866 	bl	8031534 <NVM_write>
 802e468:	2802      	cmp	r0, #2
 802e46a:	d00c      	beq.n	802e486 <saveCameraCalibration()+0x7e>
 802e46c:	b008      	add	sp, #32
 802e46e:	bd10      	pop	{r4, pc}
 802e470:	480c      	ldr	r0, [pc, #48]	; (802e4a4 <saveCameraCalibration()+0x9c>)
 802e472:	215c      	movs	r1, #92	; 0x5c
 802e474:	f010 ff73 	bl	803f35e <strrchr>
 802e478:	b188      	cbz	r0, 802e49e <saveCameraCalibration()+0x96>
 802e47a:	215c      	movs	r1, #92	; 0x5c
 802e47c:	4809      	ldr	r0, [pc, #36]	; (802e4a4 <saveCameraCalibration()+0x9c>)
 802e47e:	f010 ff6e 	bl	803f35e <strrchr>
 802e482:	1c41      	adds	r1, r0, #1
 802e484:	e7cc      	b.n	802e420 <saveCameraCalibration()+0x18>
 802e486:	490c      	ldr	r1, [pc, #48]	; (802e4b8 <saveCameraCalibration()+0xb0>)
 802e488:	480c      	ldr	r0, [pc, #48]	; (802e4bc <saveCameraCalibration()+0xb4>)
 802e48a:	f002 ff99 	bl	80313c0 <NVM_createEntry>
 802e48e:	490a      	ldr	r1, [pc, #40]	; (802e4b8 <saveCameraCalibration()+0xb0>)
 802e490:	480a      	ldr	r0, [pc, #40]	; (802e4bc <saveCameraCalibration()+0xb4>)
 802e492:	aa04      	add	r2, sp, #16
 802e494:	2310      	movs	r3, #16
 802e496:	f003 f84d 	bl	8031534 <NVM_write>
 802e49a:	b008      	add	sp, #32
 802e49c:	bd10      	pop	{r4, pc}
 802e49e:	4901      	ldr	r1, [pc, #4]	; (802e4a4 <saveCameraCalibration()+0x9c>)
 802e4a0:	e7be      	b.n	802e420 <saveCameraCalibration()+0x18>
 802e4a2:	bf00      	nop
 802e4a4:	080470d8 	.word	0x080470d8
 802e4a8:	20005ee0 	.word	0x20005ee0
 802e4ac:	08047110 	.word	0x08047110
 802e4b0:	162b0000 	.word	0x162b0000
 802e4b4:	01de7323 	.word	0x01de7323
 802e4b8:	0804714c 	.word	0x0804714c
 802e4bc:	2000de14 	.word	0x2000de14

0802e4c0 <CAMERA_rxInterruptCallback(unsigned char)>:
 802e4c0:	b500      	push	{lr}
 802e4c2:	b083      	sub	sp, #12
 802e4c4:	4603      	mov	r3, r0
 802e4c6:	f10d 0107 	add.w	r1, sp, #7
 802e4ca:	2201      	movs	r2, #1
 802e4cc:	4806      	ldr	r0, [pc, #24]	; (802e4e8 <CAMERA_rxInterruptCallback(unsigned char)+0x28>)
 802e4ce:	f88d 3007 	strb.w	r3, [sp, #7]
 802e4d2:	f7ff ff69 	bl	802e3a8 <UTILITIES_pushRingBuff>
 802e4d6:	2200      	movs	r2, #0
 802e4d8:	f44f 7100 	mov.w	r1, #512	; 0x200
 802e4dc:	4803      	ldr	r0, [pc, #12]	; (802e4ec <CAMERA_rxInterruptCallback(unsigned char)+0x2c>)
 802e4de:	f00a fe4b 	bl	8039178 <_tx_event_flags_set>
 802e4e2:	b003      	add	sp, #12
 802e4e4:	f85d fb04 	ldr.w	pc, [sp], #4
 802e4e8:	20009abc 	.word	0x20009abc
 802e4ec:	2000e158 	.word	0x2000e158

0802e4f0 <prepareCognexCommand(char*, char const*, ...) [clone .constprop.0]>:
 802e4f0:	b40e      	push	{r1, r2, r3}
 802e4f2:	b510      	push	{r4, lr}
 802e4f4:	b083      	sub	sp, #12
 802e4f6:	ab05      	add	r3, sp, #20
 802e4f8:	4c08      	ldr	r4, [pc, #32]	; (802e51c <prepareCognexCommand(char*, char const*, ...) [clone .constprop.0]+0x2c>)
 802e4fa:	f853 2b04 	ldr.w	r2, [r3], #4
 802e4fe:	9301      	str	r3, [sp, #4]
 802e500:	4620      	mov	r0, r4
 802e502:	2180      	movs	r1, #128	; 0x80
 802e504:	f011 f86f 	bl	803f5e6 <vsnprintf>
 802e508:	4620      	mov	r0, r4
 802e50a:	2180      	movs	r1, #128	; 0x80
 802e50c:	f010 ff16 	bl	803f33c <strnlen>
 802e510:	b280      	uxth	r0, r0
 802e512:	b003      	add	sp, #12
 802e514:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802e518:	b003      	add	sp, #12
 802e51a:	4770      	bx	lr
 802e51c:	20009b4c 	.word	0x20009b4c
 802e520:	810102a8 	.word	0x810102a8
 802e524:	b10eb0b0 	.word	0xb10eb0b0
 802e528:	00000000 	.word	0x00000000

0802e52c <programFromReset(unsigned int, void*)>:
 802e52c:	b510      	push	{r4, lr}
 802e52e:	4c82      	ldr	r4, [pc, #520]	; (802e738 <programFromReset(unsigned int, void*)+0x20c>)
 802e530:	4982      	ldr	r1, [pc, #520]	; (802e73c <programFromReset(unsigned int, void*)+0x210>)
 802e532:	4620      	mov	r0, r4
 802e534:	f7ff ffdc 	bl	802e4f0 <prepareCognexCommand(char*, char const*, ...) [clone .constprop.0]>
 802e538:	4621      	mov	r1, r4
 802e53a:	4602      	mov	r2, r0
 802e53c:	2001      	movs	r0, #1
 802e53e:	f006 fb67 	bl	8034c10 <USART_send>
 802e542:	497f      	ldr	r1, [pc, #508]	; (802e740 <programFromReset(unsigned int, void*)+0x214>)
 802e544:	4620      	mov	r0, r4
 802e546:	f7ff ffd3 	bl	802e4f0 <prepareCognexCommand(char*, char const*, ...) [clone .constprop.0]>
 802e54a:	4621      	mov	r1, r4
 802e54c:	4602      	mov	r2, r0
 802e54e:	2001      	movs	r0, #1
 802e550:	f006 fb5e 	bl	8034c10 <USART_send>
 802e554:	4a7b      	ldr	r2, [pc, #492]	; (802e744 <programFromReset(unsigned int, void*)+0x218>)
 802e556:	497c      	ldr	r1, [pc, #496]	; (802e748 <programFromReset(unsigned int, void*)+0x21c>)
 802e558:	4620      	mov	r0, r4
 802e55a:	f7ff ffc9 	bl	802e4f0 <prepareCognexCommand(char*, char const*, ...) [clone .constprop.0]>
 802e55e:	4621      	mov	r1, r4
 802e560:	4602      	mov	r2, r0
 802e562:	2001      	movs	r0, #1
 802e564:	f006 fb54 	bl	8034c10 <USART_send>
 802e568:	4978      	ldr	r1, [pc, #480]	; (802e74c <programFromReset(unsigned int, void*)+0x220>)
 802e56a:	4620      	mov	r0, r4
 802e56c:	f7ff ffc0 	bl	802e4f0 <prepareCognexCommand(char*, char const*, ...) [clone .constprop.0]>
 802e570:	4621      	mov	r1, r4
 802e572:	4602      	mov	r2, r0
 802e574:	2001      	movs	r0, #1
 802e576:	f006 fb4b 	bl	8034c10 <USART_send>
 802e57a:	4975      	ldr	r1, [pc, #468]	; (802e750 <programFromReset(unsigned int, void*)+0x224>)
 802e57c:	4620      	mov	r0, r4
 802e57e:	f7ff ffb7 	bl	802e4f0 <prepareCognexCommand(char*, char const*, ...) [clone .constprop.0]>
 802e582:	4621      	mov	r1, r4
 802e584:	4602      	mov	r2, r0
 802e586:	2001      	movs	r0, #1
 802e588:	f006 fb42 	bl	8034c10 <USART_send>
 802e58c:	4971      	ldr	r1, [pc, #452]	; (802e754 <programFromReset(unsigned int, void*)+0x228>)
 802e58e:	4620      	mov	r0, r4
 802e590:	2202      	movs	r2, #2
 802e592:	f7ff ffad 	bl	802e4f0 <prepareCognexCommand(char*, char const*, ...) [clone .constprop.0]>
 802e596:	4621      	mov	r1, r4
 802e598:	4602      	mov	r2, r0
 802e59a:	2001      	movs	r0, #1
 802e59c:	f006 fb38 	bl	8034c10 <USART_send>
 802e5a0:	4a6d      	ldr	r2, [pc, #436]	; (802e758 <programFromReset(unsigned int, void*)+0x22c>)
 802e5a2:	496e      	ldr	r1, [pc, #440]	; (802e75c <programFromReset(unsigned int, void*)+0x230>)
 802e5a4:	4620      	mov	r0, r4
 802e5a6:	f7ff ffa3 	bl	802e4f0 <prepareCognexCommand(char*, char const*, ...) [clone .constprop.0]>
 802e5aa:	4621      	mov	r1, r4
 802e5ac:	4602      	mov	r2, r0
 802e5ae:	2001      	movs	r0, #1
 802e5b0:	f006 fb2e 	bl	8034c10 <USART_send>
 802e5b4:	2302      	movs	r3, #2
 802e5b6:	496a      	ldr	r1, [pc, #424]	; (802e760 <programFromReset(unsigned int, void*)+0x234>)
 802e5b8:	4620      	mov	r0, r4
 802e5ba:	2203      	movs	r2, #3
 802e5bc:	f7ff ff98 	bl	802e4f0 <prepareCognexCommand(char*, char const*, ...) [clone .constprop.0]>
 802e5c0:	4621      	mov	r1, r4
 802e5c2:	4602      	mov	r2, r0
 802e5c4:	2001      	movs	r0, #1
 802e5c6:	f006 fb23 	bl	8034c10 <USART_send>
 802e5ca:	4966      	ldr	r1, [pc, #408]	; (802e764 <programFromReset(unsigned int, void*)+0x238>)
 802e5cc:	4620      	mov	r0, r4
 802e5ce:	f7ff ff8f 	bl	802e4f0 <prepareCognexCommand(char*, char const*, ...) [clone .constprop.0]>
 802e5d2:	4621      	mov	r1, r4
 802e5d4:	4602      	mov	r2, r0
 802e5d6:	2001      	movs	r0, #1
 802e5d8:	f006 fb1a 	bl	8034c10 <USART_send>
 802e5dc:	4962      	ldr	r1, [pc, #392]	; (802e768 <programFromReset(unsigned int, void*)+0x23c>)
 802e5de:	4620      	mov	r0, r4
 802e5e0:	f7ff ff86 	bl	802e4f0 <prepareCognexCommand(char*, char const*, ...) [clone .constprop.0]>
 802e5e4:	4621      	mov	r1, r4
 802e5e6:	4602      	mov	r2, r0
 802e5e8:	2001      	movs	r0, #1
 802e5ea:	f006 fb11 	bl	8034c10 <USART_send>
 802e5ee:	495f      	ldr	r1, [pc, #380]	; (802e76c <programFromReset(unsigned int, void*)+0x240>)
 802e5f0:	4620      	mov	r0, r4
 802e5f2:	f7ff ff7d 	bl	802e4f0 <prepareCognexCommand(char*, char const*, ...) [clone .constprop.0]>
 802e5f6:	4621      	mov	r1, r4
 802e5f8:	4602      	mov	r2, r0
 802e5fa:	2001      	movs	r0, #1
 802e5fc:	f006 fb08 	bl	8034c10 <USART_send>
 802e600:	495b      	ldr	r1, [pc, #364]	; (802e770 <programFromReset(unsigned int, void*)+0x244>)
 802e602:	4620      	mov	r0, r4
 802e604:	f7ff ff74 	bl	802e4f0 <prepareCognexCommand(char*, char const*, ...) [clone .constprop.0]>
 802e608:	4621      	mov	r1, r4
 802e60a:	4602      	mov	r2, r0
 802e60c:	2001      	movs	r0, #1
 802e60e:	f006 faff 	bl	8034c10 <USART_send>
 802e612:	4958      	ldr	r1, [pc, #352]	; (802e774 <programFromReset(unsigned int, void*)+0x248>)
 802e614:	4620      	mov	r0, r4
 802e616:	f7ff ff6b 	bl	802e4f0 <prepareCognexCommand(char*, char const*, ...) [clone .constprop.0]>
 802e61a:	4621      	mov	r1, r4
 802e61c:	4602      	mov	r2, r0
 802e61e:	2001      	movs	r0, #1
 802e620:	f006 faf6 	bl	8034c10 <USART_send>
 802e624:	4954      	ldr	r1, [pc, #336]	; (802e778 <programFromReset(unsigned int, void*)+0x24c>)
 802e626:	4620      	mov	r0, r4
 802e628:	f7ff ff62 	bl	802e4f0 <prepareCognexCommand(char*, char const*, ...) [clone .constprop.0]>
 802e62c:	4621      	mov	r1, r4
 802e62e:	4602      	mov	r2, r0
 802e630:	2001      	movs	r0, #1
 802e632:	f006 faed 	bl	8034c10 <USART_send>
 802e636:	4951      	ldr	r1, [pc, #324]	; (802e77c <programFromReset(unsigned int, void*)+0x250>)
 802e638:	4620      	mov	r0, r4
 802e63a:	f7ff ff59 	bl	802e4f0 <prepareCognexCommand(char*, char const*, ...) [clone .constprop.0]>
 802e63e:	4621      	mov	r1, r4
 802e640:	4602      	mov	r2, r0
 802e642:	2001      	movs	r0, #1
 802e644:	f006 fae4 	bl	8034c10 <USART_send>
 802e648:	494d      	ldr	r1, [pc, #308]	; (802e780 <programFromReset(unsigned int, void*)+0x254>)
 802e64a:	4620      	mov	r0, r4
 802e64c:	2205      	movs	r2, #5
 802e64e:	f7ff ff4f 	bl	802e4f0 <prepareCognexCommand(char*, char const*, ...) [clone .constprop.0]>
 802e652:	4621      	mov	r1, r4
 802e654:	4602      	mov	r2, r0
 802e656:	2001      	movs	r0, #1
 802e658:	f006 fada 	bl	8034c10 <USART_send>
 802e65c:	4a49      	ldr	r2, [pc, #292]	; (802e784 <programFromReset(unsigned int, void*)+0x258>)
 802e65e:	494a      	ldr	r1, [pc, #296]	; (802e788 <programFromReset(unsigned int, void*)+0x25c>)
 802e660:	4620      	mov	r0, r4
 802e662:	f7ff ff45 	bl	802e4f0 <prepareCognexCommand(char*, char const*, ...) [clone .constprop.0]>
 802e666:	4621      	mov	r1, r4
 802e668:	4602      	mov	r2, r0
 802e66a:	2001      	movs	r0, #1
 802e66c:	f006 fad0 	bl	8034c10 <USART_send>
 802e670:	4946      	ldr	r1, [pc, #280]	; (802e78c <programFromReset(unsigned int, void*)+0x260>)
 802e672:	4620      	mov	r0, r4
 802e674:	f44f 7296 	mov.w	r2, #300	; 0x12c
 802e678:	f7ff ff3a 	bl	802e4f0 <prepareCognexCommand(char*, char const*, ...) [clone .constprop.0]>
 802e67c:	4621      	mov	r1, r4
 802e67e:	4602      	mov	r2, r0
 802e680:	2001      	movs	r0, #1
 802e682:	f006 fac5 	bl	8034c10 <USART_send>
 802e686:	2305      	movs	r3, #5
 802e688:	4941      	ldr	r1, [pc, #260]	; (802e790 <programFromReset(unsigned int, void*)+0x264>)
 802e68a:	4620      	mov	r0, r4
 802e68c:	f242 7210 	movw	r2, #10000	; 0x2710
 802e690:	f7ff ff2e 	bl	802e4f0 <prepareCognexCommand(char*, char const*, ...) [clone .constprop.0]>
 802e694:	4621      	mov	r1, r4
 802e696:	4602      	mov	r2, r0
 802e698:	2001      	movs	r0, #1
 802e69a:	f006 fab9 	bl	8034c10 <USART_send>
 802e69e:	493d      	ldr	r1, [pc, #244]	; (802e794 <programFromReset(unsigned int, void*)+0x268>)
 802e6a0:	4620      	mov	r0, r4
 802e6a2:	f7ff ff25 	bl	802e4f0 <prepareCognexCommand(char*, char const*, ...) [clone .constprop.0]>
 802e6a6:	4621      	mov	r1, r4
 802e6a8:	4602      	mov	r2, r0
 802e6aa:	2001      	movs	r0, #1
 802e6ac:	f006 fab0 	bl	8034c10 <USART_send>
 802e6b0:	4939      	ldr	r1, [pc, #228]	; (802e798 <programFromReset(unsigned int, void*)+0x26c>)
 802e6b2:	4620      	mov	r0, r4
 802e6b4:	f7ff ff1c 	bl	802e4f0 <prepareCognexCommand(char*, char const*, ...) [clone .constprop.0]>
 802e6b8:	4621      	mov	r1, r4
 802e6ba:	4602      	mov	r2, r0
 802e6bc:	2001      	movs	r0, #1
 802e6be:	f006 faa7 	bl	8034c10 <USART_send>
 802e6c2:	4936      	ldr	r1, [pc, #216]	; (802e79c <programFromReset(unsigned int, void*)+0x270>)
 802e6c4:	4620      	mov	r0, r4
 802e6c6:	f7ff ff13 	bl	802e4f0 <prepareCognexCommand(char*, char const*, ...) [clone .constprop.0]>
 802e6ca:	4621      	mov	r1, r4
 802e6cc:	4602      	mov	r2, r0
 802e6ce:	2001      	movs	r0, #1
 802e6d0:	f006 fa9e 	bl	8034c10 <USART_send>
 802e6d4:	4932      	ldr	r1, [pc, #200]	; (802e7a0 <programFromReset(unsigned int, void*)+0x274>)
 802e6d6:	4620      	mov	r0, r4
 802e6d8:	f7ff ff0a 	bl	802e4f0 <prepareCognexCommand(char*, char const*, ...) [clone .constprop.0]>
 802e6dc:	4621      	mov	r1, r4
 802e6de:	4602      	mov	r2, r0
 802e6e0:	2001      	movs	r0, #1
 802e6e2:	f006 fa95 	bl	8034c10 <USART_send>
 802e6e6:	492f      	ldr	r1, [pc, #188]	; (802e7a4 <programFromReset(unsigned int, void*)+0x278>)
 802e6e8:	4620      	mov	r0, r4
 802e6ea:	2202      	movs	r2, #2
 802e6ec:	f7ff ff00 	bl	802e4f0 <prepareCognexCommand(char*, char const*, ...) [clone .constprop.0]>
 802e6f0:	4621      	mov	r1, r4
 802e6f2:	4602      	mov	r2, r0
 802e6f4:	2001      	movs	r0, #1
 802e6f6:	f006 fa8b 	bl	8034c10 <USART_send>
 802e6fa:	492b      	ldr	r1, [pc, #172]	; (802e7a8 <programFromReset(unsigned int, void*)+0x27c>)
 802e6fc:	4620      	mov	r0, r4
 802e6fe:	f7ff fef7 	bl	802e4f0 <prepareCognexCommand(char*, char const*, ...) [clone .constprop.0]>
 802e702:	4621      	mov	r1, r4
 802e704:	4602      	mov	r2, r0
 802e706:	2001      	movs	r0, #1
 802e708:	f006 fa82 	bl	8034c10 <USART_send>
 802e70c:	4927      	ldr	r1, [pc, #156]	; (802e7ac <programFromReset(unsigned int, void*)+0x280>)
 802e70e:	4620      	mov	r0, r4
 802e710:	f7ff feee 	bl	802e4f0 <prepareCognexCommand(char*, char const*, ...) [clone .constprop.0]>
 802e714:	4621      	mov	r1, r4
 802e716:	4602      	mov	r2, r0
 802e718:	2001      	movs	r0, #1
 802e71a:	f006 fa79 	bl	8034c10 <USART_send>
 802e71e:	4924      	ldr	r1, [pc, #144]	; (802e7b0 <programFromReset(unsigned int, void*)+0x284>)
 802e720:	4620      	mov	r0, r4
 802e722:	f7ff fee5 	bl	802e4f0 <prepareCognexCommand(char*, char const*, ...) [clone .constprop.0]>
 802e726:	4621      	mov	r1, r4
 802e728:	4602      	mov	r2, r0
 802e72a:	2001      	movs	r0, #1
 802e72c:	f006 fa70 	bl	8034c10 <USART_send>
 802e730:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802e734:	f7ff be68 	b.w	802e408 <saveCameraCalibration()>
 802e738:	20009b4c 	.word	0x20009b4c
 802e73c:	08047154 	.word	0x08047154
 802e740:	08047168 	.word	0x08047168
 802e744:	08047184 	.word	0x08047184
 802e748:	08047198 	.word	0x08047198
 802e74c:	080471b4 	.word	0x080471b4
 802e750:	080471d4 	.word	0x080471d4
 802e754:	080471f4 	.word	0x080471f4
 802e758:	08047214 	.word	0x08047214
 802e75c:	0804721c 	.word	0x0804721c
 802e760:	08047240 	.word	0x08047240
 802e764:	0804725c 	.word	0x0804725c
 802e768:	08047280 	.word	0x08047280
 802e76c:	0804729c 	.word	0x0804729c
 802e770:	080472b4 	.word	0x080472b4
 802e774:	080472d0 	.word	0x080472d0
 802e778:	080472ec 	.word	0x080472ec
 802e77c:	08047304 	.word	0x08047304
 802e780:	08047320 	.word	0x08047320
 802e784:	00013880 	.word	0x00013880
 802e788:	08047338 	.word	0x08047338
 802e78c:	0804735c 	.word	0x0804735c
 802e790:	08047378 	.word	0x08047378
 802e794:	080473a0 	.word	0x080473a0
 802e798:	080473c0 	.word	0x080473c0
 802e79c:	080473dc 	.word	0x080473dc
 802e7a0:	08047404 	.word	0x08047404
 802e7a4:	08047438 	.word	0x08047438
 802e7a8:	08047458 	.word	0x08047458
 802e7ac:	0804747c 	.word	0x0804747c
 802e7b0:	08047494 	.word	0x08047494

0802e7b4 <CAMERA_activateProfile(CAMERA_configProfile_t) [clone .part.0]>:
 802e7b4:	b570      	push	{r4, r5, r6, lr}
 802e7b6:	4603      	mov	r3, r0
 802e7b8:	4e20      	ldr	r6, [pc, #128]	; (802e83c <CAMERA_activateProfile(CAMERA_configProfile_t) [clone .part.0]+0x88>)
 802e7ba:	4d21      	ldr	r5, [pc, #132]	; (802e840 <CAMERA_activateProfile(CAMERA_configProfile_t) [clone .part.0]+0x8c>)
 802e7bc:	4921      	ldr	r1, [pc, #132]	; (802e844 <CAMERA_activateProfile(CAMERA_configProfile_t) [clone .part.0]+0x90>)
 802e7be:	4822      	ldr	r0, [pc, #136]	; (802e848 <CAMERA_activateProfile(CAMERA_configProfile_t) [clone .part.0]+0x94>)
 802e7c0:	f643 342c 	movw	r4, #15148	; 0x3b2c
 802e7c4:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 802e7c8:	b082      	sub	sp, #8
 802e7ca:	eb06 0683 	add.w	r6, r6, r3, lsl #2
 802e7ce:	2203      	movs	r2, #3
 802e7d0:	2302      	movs	r3, #2
 802e7d2:	512e      	str	r6, [r5, r4]
 802e7d4:	f7ff fe8c 	bl	802e4f0 <prepareCognexCommand(char*, char const*, ...) [clone .constprop.0]>
 802e7d8:	491b      	ldr	r1, [pc, #108]	; (802e848 <CAMERA_activateProfile(CAMERA_configProfile_t) [clone .part.0]+0x94>)
 802e7da:	4602      	mov	r2, r0
 802e7dc:	2001      	movs	r0, #1
 802e7de:	f006 fa17 	bl	8034c10 <USART_send>
 802e7e2:	592b      	ldr	r3, [r5, r4]
 802e7e4:	4919      	ldr	r1, [pc, #100]	; (802e84c <CAMERA_activateProfile(CAMERA_configProfile_t) [clone .part.0]+0x98>)
 802e7e6:	781a      	ldrb	r2, [r3, #0]
 802e7e8:	4817      	ldr	r0, [pc, #92]	; (802e848 <CAMERA_activateProfile(CAMERA_configProfile_t) [clone .part.0]+0x94>)
 802e7ea:	f7ff fe81 	bl	802e4f0 <prepareCognexCommand(char*, char const*, ...) [clone .constprop.0]>
 802e7ee:	4916      	ldr	r1, [pc, #88]	; (802e848 <CAMERA_activateProfile(CAMERA_configProfile_t) [clone .part.0]+0x94>)
 802e7f0:	4602      	mov	r2, r0
 802e7f2:	2001      	movs	r0, #1
 802e7f4:	f006 fa0c 	bl	8034c10 <USART_send>
 802e7f8:	5928      	ldr	r0, [r5, r4]
 802e7fa:	4915      	ldr	r1, [pc, #84]	; (802e850 <CAMERA_activateProfile(CAMERA_configProfile_t) [clone .part.0]+0x9c>)
 802e7fc:	8906      	ldrh	r6, [r0, #8]
 802e7fe:	8883      	ldrh	r3, [r0, #4]
 802e800:	8842      	ldrh	r2, [r0, #2]
 802e802:	9601      	str	r6, [sp, #4]
 802e804:	88c0      	ldrh	r0, [r0, #6]
 802e806:	9000      	str	r0, [sp, #0]
 802e808:	480f      	ldr	r0, [pc, #60]	; (802e848 <CAMERA_activateProfile(CAMERA_configProfile_t) [clone .part.0]+0x94>)
 802e80a:	f7ff fe71 	bl	802e4f0 <prepareCognexCommand(char*, char const*, ...) [clone .constprop.0]>
 802e80e:	490e      	ldr	r1, [pc, #56]	; (802e848 <CAMERA_activateProfile(CAMERA_configProfile_t) [clone .part.0]+0x94>)
 802e810:	4602      	mov	r2, r0
 802e812:	2001      	movs	r0, #1
 802e814:	f006 f9fc 	bl	8034c10 <USART_send>
 802e818:	592b      	ldr	r3, [r5, r4]
 802e81a:	490e      	ldr	r1, [pc, #56]	; (802e854 <CAMERA_activateProfile(CAMERA_configProfile_t) [clone .part.0]+0xa0>)
 802e81c:	7c5a      	ldrb	r2, [r3, #17]
 802e81e:	480a      	ldr	r0, [pc, #40]	; (802e848 <CAMERA_activateProfile(CAMERA_configProfile_t) [clone .part.0]+0x94>)
 802e820:	2a06      	cmp	r2, #6
 802e822:	bf28      	it	cs
 802e824:	2200      	movcs	r2, #0
 802e826:	f7ff fe63 	bl	802e4f0 <prepareCognexCommand(char*, char const*, ...) [clone .constprop.0]>
 802e82a:	4907      	ldr	r1, [pc, #28]	; (802e848 <CAMERA_activateProfile(CAMERA_configProfile_t) [clone .part.0]+0x94>)
 802e82c:	4602      	mov	r2, r0
 802e82e:	2001      	movs	r0, #1
 802e830:	b002      	add	sp, #8
 802e832:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 802e836:	f006 b9eb 	b.w	8034c10 <USART_send>
 802e83a:	bf00      	nop
 802e83c:	20009a58 	.word	0x20009a58
 802e840:	20005f08 	.word	0x20005f08
 802e844:	080474a8 	.word	0x080474a8
 802e848:	20009b4c 	.word	0x20009b4c
 802e84c:	080474b8 	.word	0x080474b8
 802e850:	080474d8 	.word	0x080474d8
 802e854:	080474fc 	.word	0x080474fc

0802e858 <trigger()>:
 802e858:	b538      	push	{r3, r4, r5, lr}
 802e85a:	4817      	ldr	r0, [pc, #92]	; (802e8b8 <trigger()+0x60>)
 802e85c:	4a17      	ldr	r2, [pc, #92]	; (802e8bc <trigger()+0x64>)
 802e85e:	4c18      	ldr	r4, [pc, #96]	; (802e8c0 <trigger()+0x68>)
 802e860:	4d18      	ldr	r5, [pc, #96]	; (802e8c4 <trigger()+0x6c>)
 802e862:	4919      	ldr	r1, [pc, #100]	; (802e8c8 <trigger()+0x70>)
 802e864:	f643 3330 	movw	r3, #15152	; 0x3b30
 802e868:	5cc3      	ldrb	r3, [r0, r3]
 802e86a:	fba2 0203 	umull	r0, r2, r2, r3
 802e86e:	f002 00fe 	and.w	r0, r2, #254	; 0xfe
 802e872:	eb00 0252 	add.w	r2, r0, r2, lsr #1
 802e876:	1a9b      	subs	r3, r3, r2
 802e878:	b2db      	uxtb	r3, r3
 802e87a:	4620      	mov	r0, r4
 802e87c:	f855 2023 	ldr.w	r2, [r5, r3, lsl #2]
 802e880:	4d12      	ldr	r5, [pc, #72]	; (802e8cc <trigger()+0x74>)
 802e882:	2305      	movs	r3, #5
 802e884:	f7ff fe34 	bl	802e4f0 <prepareCognexCommand(char*, char const*, ...) [clone .constprop.0]>
 802e888:	4621      	mov	r1, r4
 802e88a:	4602      	mov	r2, r0
 802e88c:	2001      	movs	r0, #1
 802e88e:	f006 f9bf 	bl	8034c10 <USART_send>
 802e892:	2028      	movs	r0, #40	; 0x28
 802e894:	f00b fb5c 	bl	8039f50 <_tx_thread_sleep>
 802e898:	4628      	mov	r0, r5
 802e89a:	2201      	movs	r2, #1
 802e89c:	2180      	movs	r1, #128	; 0x80
 802e89e:	f006 fc45 	bl	803512c <GPIO_setPins>
 802e8a2:	200a      	movs	r0, #10
 802e8a4:	f00b fb54 	bl	8039f50 <_tx_thread_sleep>
 802e8a8:	4628      	mov	r0, r5
 802e8aa:	2200      	movs	r2, #0
 802e8ac:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 802e8b0:	2180      	movs	r1, #128	; 0x80
 802e8b2:	f006 bc3b 	b.w	803512c <GPIO_setPins>
 802e8b6:	bf00      	nop
 802e8b8:	20005f08 	.word	0x20005f08
 802e8bc:	aaaaaaab 	.word	0xaaaaaaab
 802e8c0:	20009b4c 	.word	0x20009b4c
 802e8c4:	08047708 	.word	0x08047708
 802e8c8:	08047378 	.word	0x08047378
 802e8cc:	40021000 	.word	0x40021000

0802e8d0 <CAMERA_init()>:
 802e8d0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802e8d4:	4b7a      	ldr	r3, [pc, #488]	; (802eac0 <CAMERA_init()+0x1f0>)
 802e8d6:	487b      	ldr	r0, [pc, #492]	; (802eac4 <CAMERA_init()+0x1f4>)
 802e8d8:	f8df 8228 	ldr.w	r8, [pc, #552]	; 802eb04 <CAMERA_init()+0x234>
 802e8dc:	4c7a      	ldr	r4, [pc, #488]	; (802eac8 <CAMERA_init()+0x1f8>)
 802e8de:	4e7b      	ldr	r6, [pc, #492]	; (802eacc <CAMERA_init()+0x1fc>)
 802e8e0:	4f7b      	ldr	r7, [pc, #492]	; (802ead0 <CAMERA_init()+0x200>)
 802e8e2:	b086      	sub	sp, #24
 802e8e4:	2201      	movs	r2, #1
 802e8e6:	2180      	movs	r1, #128	; 0x80
 802e8e8:	f7ff fd1e 	bl	802e328 <UTILITIES_initRingBuff>
 802e8ec:	4979      	ldr	r1, [pc, #484]	; (802ead4 <CAMERA_init()+0x204>)
 802e8ee:	2001      	movs	r0, #1
 802e8f0:	f006 f86a 	bl	80349c8 <USART_setup>
 802e8f4:	4878      	ldr	r0, [pc, #480]	; (802ead8 <CAMERA_init()+0x208>)
 802e8f6:	2201      	movs	r2, #1
 802e8f8:	2102      	movs	r1, #2
 802e8fa:	f006 fc17 	bl	803512c <GPIO_setPins>
 802e8fe:	f643 3234 	movw	r2, #15156	; 0x3b34
 802e902:	2100      	movs	r1, #0
 802e904:	4640      	mov	r0, r8
 802e906:	f010 fea5 	bl	803f654 <memset>
 802e90a:	2264      	movs	r2, #100	; 0x64
 802e90c:	2100      	movs	r1, #0
 802e90e:	4620      	mov	r0, r4
 802e910:	f010 fea0 	bl	803f654 <memset>
 802e914:	f240 2555 	movw	r5, #597	; 0x255
 802e918:	f44f 732c 	mov.w	r3, #688	; 0x2b0
 802e91c:	496f      	ldr	r1, [pc, #444]	; (802eadc <CAMERA_init()+0x20c>)
 802e91e:	220c      	movs	r2, #12
 802e920:	f106 0008 	add.w	r0, r6, #8
 802e924:	e9c6 5300 	strd	r5, r3, [r6]
 802e928:	f010 fe6b 	bl	803f602 <__aeabi_memcpy>
 802e92c:	496c      	ldr	r1, [pc, #432]	; (802eae0 <CAMERA_init()+0x210>)
 802e92e:	220c      	movs	r2, #12
 802e930:	f106 0014 	add.w	r0, r6, #20
 802e934:	f010 fe65 	bl	803f602 <__aeabi_memcpy>
 802e938:	f44f 63a0 	mov.w	r3, #1280	; 0x500
 802e93c:	f44f 7252 	mov.w	r2, #840	; 0x348
 802e940:	f44f 70dc 	mov.w	r0, #440	; 0x1b8
 802e944:	6063      	str	r3, [r4, #4]
 802e946:	61a2      	str	r2, [r4, #24]
 802e948:	f44f 7325 	mov.w	r3, #660	; 0x294
 802e94c:	f44f 7270 	mov.w	r2, #960	; 0x3c0
 802e950:	2500      	movs	r5, #0
 802e952:	f104 0114 	add.w	r1, r4, #20
 802e956:	82e0      	strh	r0, [r4, #22]
 802e958:	62e7      	str	r7, [r4, #44]	; 0x2c
 802e95a:	8623      	strh	r3, [r4, #48]	; 0x30
 802e95c:	270a      	movs	r7, #10
 802e95e:	2303      	movs	r3, #3
 802e960:	8122      	strh	r2, [r4, #8]
 802e962:	83a2      	strh	r2, [r4, #28]
 802e964:	f104 003c 	add.w	r0, r4, #60	; 0x3c
 802e968:	2201      	movs	r2, #1
 802e96a:	8223      	strh	r3, [r4, #16]
 802e96c:	84a3      	strh	r3, [r4, #36]	; 0x24
 802e96e:	8723      	strh	r3, [r4, #56]	; 0x38
 802e970:	60e7      	str	r7, [r4, #12]
 802e972:	6227      	str	r7, [r4, #32]
 802e974:	6367      	str	r7, [r4, #52]	; 0x34
 802e976:	8065      	strh	r5, [r4, #2]
 802e978:	2764      	movs	r7, #100	; 0x64
 802e97a:	7025      	strb	r5, [r4, #0]
 802e97c:	7525      	strb	r5, [r4, #20]
 802e97e:	8565      	strh	r5, [r4, #42]	; 0x2a
 802e980:	f884 5028 	strb.w	r5, [r4, #40]	; 0x28
 802e984:	f010 fe3d 	bl	803f602 <__aeabi_memcpy>
 802e988:	f104 0128 	add.w	r1, r4, #40	; 0x28
 802e98c:	2201      	movs	r2, #1
 802e98e:	f104 0050 	add.w	r0, r4, #80	; 0x50
 802e992:	f884 704c 	strb.w	r7, [r4, #76]	; 0x4c
 802e996:	f010 fe34 	bl	803f602 <__aeabi_memcpy>
 802e99a:	4628      	mov	r0, r5
 802e99c:	f888 5000 	strb.w	r5, [r8]
 802e9a0:	f884 7060 	strb.w	r7, [r4, #96]	; 0x60
 802e9a4:	f7ff ff06 	bl	802e7b4 <CAMERA_activateProfile(CAMERA_configProfile_t) [clone .part.0]>
 802e9a8:	494e      	ldr	r1, [pc, #312]	; (802eae4 <CAMERA_init()+0x214>)
 802e9aa:	484f      	ldr	r0, [pc, #316]	; (802eae8 <CAMERA_init()+0x218>)
 802e9ac:	2310      	movs	r3, #16
 802e9ae:	aa02      	add	r2, sp, #8
 802e9b0:	f002 fed2 	bl	8031758 <NVM_load>
 802e9b4:	b1d0      	cbz	r0, 802e9ec <CAMERA_init()+0x11c>
 802e9b6:	484d      	ldr	r0, [pc, #308]	; (802eaec <CAMERA_init()+0x21c>)
 802e9b8:	212f      	movs	r1, #47	; 0x2f
 802e9ba:	f010 fcd0 	bl	803f35e <strrchr>
 802e9be:	2800      	cmp	r0, #0
 802e9c0:	d048      	beq.n	802ea54 <CAMERA_init()+0x184>
 802e9c2:	212f      	movs	r1, #47	; 0x2f
 802e9c4:	4849      	ldr	r0, [pc, #292]	; (802eaec <CAMERA_init()+0x21c>)
 802e9c6:	f010 fcca 	bl	803f35e <strrchr>
 802e9ca:	1c41      	adds	r1, r0, #1
 802e9cc:	4b48      	ldr	r3, [pc, #288]	; (802eaf0 <CAMERA_init()+0x220>)
 802e9ce:	f240 126d 	movw	r2, #365	; 0x16d
 802e9d2:	2001      	movs	r0, #1
 802e9d4:	f7f3 fee0 	bl	8022798 <DEBUG_logMsg>
 802e9d8:	2300      	movs	r3, #0
 802e9da:	4946      	ldr	r1, [pc, #280]	; (802eaf4 <CAMERA_init()+0x224>)
 802e9dc:	461a      	mov	r2, r3
 802e9de:	f648 00b8 	movw	r0, #35000	; 0x88b8
 802e9e2:	f7fe fc73 	bl	802d2cc <TIME_setTimeout>
 802e9e6:	b006      	add	sp, #24
 802e9e8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802e9ec:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 802e9f0:	483e      	ldr	r0, [pc, #248]	; (802eaec <CAMERA_init()+0x21c>)
 802e9f2:	6032      	str	r2, [r6, #0]
 802e9f4:	212f      	movs	r1, #47	; 0x2f
 802e9f6:	6073      	str	r3, [r6, #4]
 802e9f8:	f010 fcb1 	bl	803f35e <strrchr>
 802e9fc:	2800      	cmp	r0, #0
 802e9fe:	d034      	beq.n	802ea6a <CAMERA_init()+0x19a>
 802ea00:	212f      	movs	r1, #47	; 0x2f
 802ea02:	483a      	ldr	r0, [pc, #232]	; (802eaec <CAMERA_init()+0x21c>)
 802ea04:	f010 fcab 	bl	803f35e <strrchr>
 802ea08:	1c41      	adds	r1, r0, #1
 802ea0a:	e9d6 3200 	ldrd	r3, r2, [r6]
 802ea0e:	2002      	movs	r0, #2
 802ea10:	e9cd 3200 	strd	r3, r2, [sp]
 802ea14:	4b38      	ldr	r3, [pc, #224]	; (802eaf8 <CAMERA_init()+0x228>)
 802ea16:	f44f 72ba 	mov.w	r2, #372	; 0x174
 802ea1a:	f7f3 febd 	bl	8022798 <DEBUG_logMsg>
 802ea1e:	f89d 3012 	ldrb.w	r3, [sp, #18]
 802ea22:	f8dd 0013 	ldr.w	r0, [sp, #19]
 802ea26:	4935      	ldr	r1, [pc, #212]	; (802eafc <CAMERA_init()+0x22c>)
 802ea28:	f89d 2017 	ldrb.w	r2, [sp, #23]
 802ea2c:	4288      	cmp	r0, r1
 802ea2e:	bf08      	it	eq
 802ea30:	2b2b      	cmpeq	r3, #43	; 0x2b
 802ea32:	bf14      	ite	ne
 802ea34:	2301      	movne	r3, #1
 802ea36:	2300      	moveq	r3, #0
 802ea38:	2a01      	cmp	r2, #1
 802ea3a:	bf18      	it	ne
 802ea3c:	f043 0301 	orrne.w	r3, r3, #1
 802ea40:	b9f3      	cbnz	r3, 802ea80 <CAMERA_init()+0x1b0>
 802ea42:	f89d 2010 	ldrb.w	r2, [sp, #16]
 802ea46:	f89d 3011 	ldrb.w	r3, [sp, #17]
 802ea4a:	4313      	orrs	r3, r2
 802ea4c:	d118      	bne.n	802ea80 <CAMERA_init()+0x1b0>
 802ea4e:	b006      	add	sp, #24
 802ea50:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802ea54:	4825      	ldr	r0, [pc, #148]	; (802eaec <CAMERA_init()+0x21c>)
 802ea56:	215c      	movs	r1, #92	; 0x5c
 802ea58:	f010 fc81 	bl	803f35e <strrchr>
 802ea5c:	b1f8      	cbz	r0, 802ea9e <CAMERA_init()+0x1ce>
 802ea5e:	215c      	movs	r1, #92	; 0x5c
 802ea60:	4822      	ldr	r0, [pc, #136]	; (802eaec <CAMERA_init()+0x21c>)
 802ea62:	f010 fc7c 	bl	803f35e <strrchr>
 802ea66:	1c41      	adds	r1, r0, #1
 802ea68:	e7b0      	b.n	802e9cc <CAMERA_init()+0xfc>
 802ea6a:	4820      	ldr	r0, [pc, #128]	; (802eaec <CAMERA_init()+0x21c>)
 802ea6c:	215c      	movs	r1, #92	; 0x5c
 802ea6e:	f010 fc76 	bl	803f35e <strrchr>
 802ea72:	b1b0      	cbz	r0, 802eaa2 <CAMERA_init()+0x1d2>
 802ea74:	215c      	movs	r1, #92	; 0x5c
 802ea76:	481d      	ldr	r0, [pc, #116]	; (802eaec <CAMERA_init()+0x21c>)
 802ea78:	f010 fc71 	bl	803f35e <strrchr>
 802ea7c:	1c41      	adds	r1, r0, #1
 802ea7e:	e7c4      	b.n	802ea0a <CAMERA_init()+0x13a>
 802ea80:	481a      	ldr	r0, [pc, #104]	; (802eaec <CAMERA_init()+0x21c>)
 802ea82:	212f      	movs	r1, #47	; 0x2f
 802ea84:	f010 fc6b 	bl	803f35e <strrchr>
 802ea88:	b168      	cbz	r0, 802eaa6 <CAMERA_init()+0x1d6>
 802ea8a:	212f      	movs	r1, #47	; 0x2f
 802ea8c:	4817      	ldr	r0, [pc, #92]	; (802eaec <CAMERA_init()+0x21c>)
 802ea8e:	f010 fc66 	bl	803f35e <strrchr>
 802ea92:	1c41      	adds	r1, r0, #1
 802ea94:	4b1a      	ldr	r3, [pc, #104]	; (802eb00 <CAMERA_init()+0x230>)
 802ea96:	f44f 72be 	mov.w	r2, #380	; 0x17c
 802ea9a:	2002      	movs	r0, #2
 802ea9c:	e79a      	b.n	802e9d4 <CAMERA_init()+0x104>
 802ea9e:	4913      	ldr	r1, [pc, #76]	; (802eaec <CAMERA_init()+0x21c>)
 802eaa0:	e794      	b.n	802e9cc <CAMERA_init()+0xfc>
 802eaa2:	4912      	ldr	r1, [pc, #72]	; (802eaec <CAMERA_init()+0x21c>)
 802eaa4:	e7b1      	b.n	802ea0a <CAMERA_init()+0x13a>
 802eaa6:	4811      	ldr	r0, [pc, #68]	; (802eaec <CAMERA_init()+0x21c>)
 802eaa8:	215c      	movs	r1, #92	; 0x5c
 802eaaa:	f010 fc58 	bl	803f35e <strrchr>
 802eaae:	b128      	cbz	r0, 802eabc <CAMERA_init()+0x1ec>
 802eab0:	215c      	movs	r1, #92	; 0x5c
 802eab2:	480e      	ldr	r0, [pc, #56]	; (802eaec <CAMERA_init()+0x21c>)
 802eab4:	f010 fc53 	bl	803f35e <strrchr>
 802eab8:	1c41      	adds	r1, r0, #1
 802eaba:	e7eb      	b.n	802ea94 <CAMERA_init()+0x1c4>
 802eabc:	490b      	ldr	r1, [pc, #44]	; (802eaec <CAMERA_init()+0x21c>)
 802eabe:	e7e9      	b.n	802ea94 <CAMERA_init()+0x1c4>
 802eac0:	20009acc 	.word	0x20009acc
 802eac4:	20009abc 	.word	0x20009abc
 802eac8:	20009a58 	.word	0x20009a58
 802eacc:	20005ee0 	.word	0x20005ee0
 802ead0:	012c0500 	.word	0x012c0500
 802ead4:	0802e4c1 	.word	0x0802e4c1
 802ead8:	40021800 	.word	0x40021800
 802eadc:	08047714 	.word	0x08047714
 802eae0:	08047720 	.word	0x08047720
 802eae4:	0804714c 	.word	0x0804714c
 802eae8:	2000de14 	.word	0x2000de14
 802eaec:	080470d8 	.word	0x080470d8
 802eaf0:	08047518 	.word	0x08047518
 802eaf4:	0802e52d 	.word	0x0802e52d
 802eaf8:	0804753c 	.word	0x0804753c
 802eafc:	de732316 	.word	0xde732316
 802eb00:	08047554 	.word	0x08047554
 802eb04:	20005f08 	.word	0x20005f08

0802eb08 <CAMERA_setSimMode(bool)>:
 802eb08:	4b01      	ldr	r3, [pc, #4]	; (802eb10 <CAMERA_setSimMode(bool)+0x8>)
 802eb0a:	7018      	strb	r0, [r3, #0]
 802eb0c:	4770      	bx	lr
 802eb0e:	bf00      	nop
 802eb10:	20005f08 	.word	0x20005f08

0802eb14 <CAMERA_isDataAvailable()>:
 802eb14:	b508      	push	{r3, lr}
 802eb16:	4803      	ldr	r0, [pc, #12]	; (802eb24 <CAMERA_isDataAvailable()+0x10>)
 802eb18:	f7ff fc6a 	bl	802e3f0 <UTILITIES_isEmptyRx>
 802eb1c:	f080 0001 	eor.w	r0, r0, #1
 802eb20:	b2c0      	uxtb	r0, r0
 802eb22:	bd08      	pop	{r3, pc}
 802eb24:	20009abc 	.word	0x20009abc
 802eb28:	8101b108 	.word	0x8101b108
 802eb2c:	8400b0b0 	.word	0x8400b0b0
 802eb30:	00000000 	.word	0x00000000

0802eb34 <CAMERA_processRxEvent()>:
 802eb34:	b5f0      	push	{r4, r5, r6, r7, lr}
 802eb36:	4e6b      	ldr	r6, [pc, #428]	; (802ece4 <CAMERA_processRxEvent()+0x1b0>)
 802eb38:	4d6b      	ldr	r5, [pc, #428]	; (802ece8 <CAMERA_processRxEvent()+0x1b4>)
 802eb3a:	4f6c      	ldr	r7, [pc, #432]	; (802ecec <CAMERA_processRxEvent()+0x1b8>)
 802eb3c:	b085      	sub	sp, #20
 802eb3e:	f10d 010f 	add.w	r1, sp, #15
 802eb42:	4630      	mov	r0, r6
 802eb44:	f7ff fc02 	bl	802e34c <UTILITIES_popRingBuff>
 802eb48:	1c43      	adds	r3, r0, #1
 802eb4a:	4604      	mov	r4, r0
 802eb4c:	d012      	beq.n	802eb74 <CAMERA_processRxEvent()+0x40>
 802eb4e:	792b      	ldrb	r3, [r5, #4]
 802eb50:	f89d 200f 	ldrb.w	r2, [sp, #15]
 802eb54:	2b04      	cmp	r3, #4
 802eb56:	d80b      	bhi.n	802eb70 <CAMERA_processRxEvent()+0x3c>
 802eb58:	e8df f003 	tbb	[pc, r3]
 802eb5c:	21380e1c 	.word	0x21380e1c
 802eb60:	03          	.byte	0x03
 802eb61:	00          	.byte	0x00
 802eb62:	2a0a      	cmp	r2, #10
 802eb64:	d03c      	beq.n	802ebe0 <CAMERA_processRxEvent()+0xac>
 802eb66:	68ab      	ldr	r3, [r5, #8]
 802eb68:	18e9      	adds	r1, r5, r3
 802eb6a:	3301      	adds	r3, #1
 802eb6c:	750a      	strb	r2, [r1, #20]
 802eb6e:	60ab      	str	r3, [r5, #8]
 802eb70:	2c00      	cmp	r4, #0
 802eb72:	dae4      	bge.n	802eb3e <CAMERA_processRxEvent()+0xa>
 802eb74:	b005      	add	sp, #20
 802eb76:	bdf0      	pop	{r4, r5, r6, r7, pc}
 802eb78:	68ab      	ldr	r3, [r5, #8]
 802eb7a:	18e9      	adds	r1, r5, r3
 802eb7c:	2a2a      	cmp	r2, #42	; 0x2a
 802eb7e:	f103 0301 	add.w	r3, r3, #1
 802eb82:	750a      	strb	r2, [r1, #20]
 802eb84:	60ab      	str	r3, [r5, #8]
 802eb86:	d061      	beq.n	802ec4c <CAMERA_processRxEvent()+0x118>
 802eb88:	2b7e      	cmp	r3, #126	; 0x7e
 802eb8a:	d9f1      	bls.n	802eb70 <CAMERA_processRxEvent()+0x3c>
 802eb8c:	2300      	movs	r3, #0
 802eb8e:	712b      	strb	r3, [r5, #4]
 802eb90:	60ab      	str	r3, [r5, #8]
 802eb92:	e7ed      	b.n	802eb70 <CAMERA_processRxEvent()+0x3c>
 802eb94:	2a24      	cmp	r2, #36	; 0x24
 802eb96:	d1eb      	bne.n	802eb70 <CAMERA_processRxEvent()+0x3c>
 802eb98:	2301      	movs	r3, #1
 802eb9a:	712b      	strb	r3, [r5, #4]
 802eb9c:	e7e8      	b.n	802eb70 <CAMERA_processRxEvent()+0x3c>
 802eb9e:	68eb      	ldr	r3, [r5, #12]
 802eba0:	f643 2197 	movw	r1, #14999	; 0x3a97
 802eba4:	428b      	cmp	r3, r1
 802eba6:	bf98      	it	ls
 802eba8:	18e9      	addls	r1, r5, r3
 802ebaa:	f103 0301 	add.w	r3, r3, #1
 802ebae:	bf98      	it	ls
 802ebb0:	f881 2094 	strbls.w	r2, [r1, #148]	; 0x94
 802ebb4:	78a9      	ldrb	r1, [r5, #2]
 802ebb6:	60eb      	str	r3, [r5, #12]
 802ebb8:	b109      	cbz	r1, 802ebbe <CAMERA_processRxEvent()+0x8a>
 802ebba:	2ad9      	cmp	r2, #217	; 0xd9
 802ebbc:	d052      	beq.n	802ec64 <CAMERA_processRxEvent()+0x130>
 802ebbe:	f1a2 02ff 	sub.w	r2, r2, #255	; 0xff
 802ebc2:	fab2 f282 	clz	r2, r2
 802ebc6:	0952      	lsrs	r2, r2, #5
 802ebc8:	70aa      	strb	r2, [r5, #2]
 802ebca:	e7d1      	b.n	802eb70 <CAMERA_processRxEvent()+0x3c>
 802ebcc:	2a0a      	cmp	r2, #10
 802ebce:	d01f      	beq.n	802ec10 <CAMERA_processRxEvent()+0xdc>
 802ebd0:	68ab      	ldr	r3, [r5, #8]
 802ebd2:	18e9      	adds	r1, r5, r3
 802ebd4:	3301      	adds	r3, #1
 802ebd6:	2b7e      	cmp	r3, #126	; 0x7e
 802ebd8:	750a      	strb	r2, [r1, #20]
 802ebda:	60ab      	str	r3, [r5, #8]
 802ebdc:	d8d6      	bhi.n	802eb8c <CAMERA_processRxEvent()+0x58>
 802ebde:	e7c7      	b.n	802eb70 <CAMERA_processRxEvent()+0x3c>
 802ebe0:	212f      	movs	r1, #47	; 0x2f
 802ebe2:	4638      	mov	r0, r7
 802ebe4:	f010 fbbb 	bl	803f35e <strrchr>
 802ebe8:	2800      	cmp	r0, #0
 802ebea:	d05f      	beq.n	802ecac <CAMERA_processRxEvent()+0x178>
 802ebec:	212f      	movs	r1, #47	; 0x2f
 802ebee:	4638      	mov	r0, r7
 802ebf0:	f010 fbb5 	bl	803f35e <strrchr>
 802ebf4:	1c41      	adds	r1, r0, #1
 802ebf6:	4b3e      	ldr	r3, [pc, #248]	; (802ecf0 <CAMERA_processRxEvent()+0x1bc>)
 802ebf8:	9300      	str	r3, [sp, #0]
 802ebfa:	f240 323b 	movw	r2, #827	; 0x33b
 802ebfe:	4b3d      	ldr	r3, [pc, #244]	; (802ecf4 <CAMERA_processRxEvent()+0x1c0>)
 802ec00:	2002      	movs	r0, #2
 802ec02:	f7f3 fdc9 	bl	8022798 <DEBUG_logMsg>
 802ec06:	2300      	movs	r3, #0
 802ec08:	e9c5 3302 	strd	r3, r3, [r5, #8]
 802ec0c:	712b      	strb	r3, [r5, #4]
 802ec0e:	e7af      	b.n	802eb70 <CAMERA_processRxEvent()+0x3c>
 802ec10:	2100      	movs	r1, #0
 802ec12:	4837      	ldr	r0, [pc, #220]	; (802ecf0 <CAMERA_processRxEvent()+0x1bc>)
 802ec14:	f010 fc84 	bl	803f520 <strtol>
 802ec18:	212f      	movs	r1, #47	; 0x2f
 802ec1a:	b283      	uxth	r3, r0
 802ec1c:	4638      	mov	r0, r7
 802ec1e:	612b      	str	r3, [r5, #16]
 802ec20:	f010 fb9d 	bl	803f35e <strrchr>
 802ec24:	b3b8      	cbz	r0, 802ec96 <CAMERA_processRxEvent()+0x162>
 802ec26:	212f      	movs	r1, #47	; 0x2f
 802ec28:	4638      	mov	r0, r7
 802ec2a:	f010 fb98 	bl	803f35e <strrchr>
 802ec2e:	1c41      	adds	r1, r0, #1
 802ec30:	692b      	ldr	r3, [r5, #16]
 802ec32:	9300      	str	r3, [sp, #0]
 802ec34:	f44f 7243 	mov.w	r2, #780	; 0x30c
 802ec38:	4b2f      	ldr	r3, [pc, #188]	; (802ecf8 <CAMERA_processRxEvent()+0x1c4>)
 802ec3a:	2002      	movs	r0, #2
 802ec3c:	f7f3 fdac 	bl	8022798 <DEBUG_logMsg>
 802ec40:	2203      	movs	r2, #3
 802ec42:	2300      	movs	r3, #0
 802ec44:	e9c5 3302 	strd	r3, r3, [r5, #8]
 802ec48:	712a      	strb	r2, [r5, #4]
 802ec4a:	e791      	b.n	802eb70 <CAMERA_processRxEvent()+0x3c>
 802ec4c:	442b      	add	r3, r5
 802ec4e:	2200      	movs	r2, #0
 802ec50:	482a      	ldr	r0, [pc, #168]	; (802ecfc <CAMERA_processRxEvent()+0x1c8>)
 802ec52:	751a      	strb	r2, [r3, #20]
 802ec54:	f44f 6180 	mov.w	r1, #1024	; 0x400
 802ec58:	712a      	strb	r2, [r5, #4]
 802ec5a:	60aa      	str	r2, [r5, #8]
 802ec5c:	f00a fa8c 	bl	8039178 <_tx_event_flags_set>
 802ec60:	68ab      	ldr	r3, [r5, #8]
 802ec62:	e791      	b.n	802eb88 <CAMERA_processRxEvent()+0x54>
 802ec64:	2200      	movs	r2, #0
 802ec66:	f44f 6100 	mov.w	r1, #2048	; 0x800
 802ec6a:	4824      	ldr	r0, [pc, #144]	; (802ecfc <CAMERA_processRxEvent()+0x1c8>)
 802ec6c:	712a      	strb	r2, [r5, #4]
 802ec6e:	706a      	strb	r2, [r5, #1]
 802ec70:	f00a fa82 	bl	8039178 <_tx_event_flags_set>
 802ec74:	212f      	movs	r1, #47	; 0x2f
 802ec76:	4638      	mov	r0, r7
 802ec78:	f010 fb71 	bl	803f35e <strrchr>
 802ec7c:	b328      	cbz	r0, 802ecca <CAMERA_processRxEvent()+0x196>
 802ec7e:	212f      	movs	r1, #47	; 0x2f
 802ec80:	4638      	mov	r0, r7
 802ec82:	f010 fb6c 	bl	803f35e <strrchr>
 802ec86:	1c41      	adds	r1, r0, #1
 802ec88:	4b1d      	ldr	r3, [pc, #116]	; (802ed00 <CAMERA_processRxEvent()+0x1cc>)
 802ec8a:	f240 322e 	movw	r2, #814	; 0x32e
 802ec8e:	2002      	movs	r0, #2
 802ec90:	f7f3 fd82 	bl	8022798 <DEBUG_logMsg>
 802ec94:	e76c      	b.n	802eb70 <CAMERA_processRxEvent()+0x3c>
 802ec96:	215c      	movs	r1, #92	; 0x5c
 802ec98:	4638      	mov	r0, r7
 802ec9a:	f010 fb60 	bl	803f35e <strrchr>
 802ec9e:	b180      	cbz	r0, 802ecc2 <CAMERA_processRxEvent()+0x18e>
 802eca0:	215c      	movs	r1, #92	; 0x5c
 802eca2:	4638      	mov	r0, r7
 802eca4:	f010 fb5b 	bl	803f35e <strrchr>
 802eca8:	1c41      	adds	r1, r0, #1
 802ecaa:	e7c1      	b.n	802ec30 <CAMERA_processRxEvent()+0xfc>
 802ecac:	215c      	movs	r1, #92	; 0x5c
 802ecae:	4638      	mov	r0, r7
 802ecb0:	f010 fb55 	bl	803f35e <strrchr>
 802ecb4:	b138      	cbz	r0, 802ecc6 <CAMERA_processRxEvent()+0x192>
 802ecb6:	215c      	movs	r1, #92	; 0x5c
 802ecb8:	4638      	mov	r0, r7
 802ecba:	f010 fb50 	bl	803f35e <strrchr>
 802ecbe:	1c41      	adds	r1, r0, #1
 802ecc0:	e799      	b.n	802ebf6 <CAMERA_processRxEvent()+0xc2>
 802ecc2:	4639      	mov	r1, r7
 802ecc4:	e7b4      	b.n	802ec30 <CAMERA_processRxEvent()+0xfc>
 802ecc6:	4639      	mov	r1, r7
 802ecc8:	e795      	b.n	802ebf6 <CAMERA_processRxEvent()+0xc2>
 802ecca:	215c      	movs	r1, #92	; 0x5c
 802eccc:	4638      	mov	r0, r7
 802ecce:	f010 fb46 	bl	803f35e <strrchr>
 802ecd2:	b128      	cbz	r0, 802ece0 <CAMERA_processRxEvent()+0x1ac>
 802ecd4:	215c      	movs	r1, #92	; 0x5c
 802ecd6:	4638      	mov	r0, r7
 802ecd8:	f010 fb41 	bl	803f35e <strrchr>
 802ecdc:	1c41      	adds	r1, r0, #1
 802ecde:	e7d3      	b.n	802ec88 <CAMERA_processRxEvent()+0x154>
 802ece0:	4639      	mov	r1, r7
 802ece2:	e7d1      	b.n	802ec88 <CAMERA_processRxEvent()+0x154>
 802ece4:	20009abc 	.word	0x20009abc
 802ece8:	20005f08 	.word	0x20005f08
 802ecec:	080470d8 	.word	0x080470d8
 802ecf0:	20005f1c 	.word	0x20005f1c
 802ecf4:	08044000 	.word	0x08044000
 802ecf8:	0804758c 	.word	0x0804758c
 802ecfc:	2000e158 	.word	0x2000e158
 802ed00:	080475a4 	.word	0x080475a4

0802ed04 <CAMERA_getResponseData()>:
 802ed04:	b470      	push	{r4, r5, r6}
 802ed06:	4d06      	ldr	r5, [pc, #24]	; (802ed20 <CAMERA_getResponseData()+0x1c>)
 802ed08:	4606      	mov	r6, r0
 802ed0a:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 802ed0c:	4634      	mov	r4, r6
 802ed0e:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 802ed10:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 802ed14:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 802ed18:	4630      	mov	r0, r6
 802ed1a:	bc70      	pop	{r4, r5, r6}
 802ed1c:	4770      	bx	lr
 802ed1e:	bf00      	nop
 802ed20:	20009a3c 	.word	0x20009a3c

0802ed24 <CAMERA_processResponse()>:
 802ed24:	b5f0      	push	{r4, r5, r6, r7, lr}
 802ed26:	b097      	sub	sp, #92	; 0x5c
 802ed28:	2100      	movs	r1, #0
 802ed2a:	221c      	movs	r2, #28
 802ed2c:	a80f      	add	r0, sp, #60	; 0x3c
 802ed2e:	f010 fc91 	bl	803f654 <memset>
 802ed32:	48a7      	ldr	r0, [pc, #668]	; (802efd0 <CAMERA_processResponse()+0x2ac>)
 802ed34:	212f      	movs	r1, #47	; 0x2f
 802ed36:	f010 fb12 	bl	803f35e <strrchr>
 802ed3a:	2800      	cmp	r0, #0
 802ed3c:	d069      	beq.n	802ee12 <CAMERA_processResponse()+0xee>
 802ed3e:	212f      	movs	r1, #47	; 0x2f
 802ed40:	48a3      	ldr	r0, [pc, #652]	; (802efd0 <CAMERA_processResponse()+0x2ac>)
 802ed42:	f010 fb0c 	bl	803f35e <strrchr>
 802ed46:	1c41      	adds	r1, r0, #1
 802ed48:	4ca2      	ldr	r4, [pc, #648]	; (802efd4 <CAMERA_processResponse()+0x2b0>)
 802ed4a:	4ba3      	ldr	r3, [pc, #652]	; (802efd8 <CAMERA_processResponse()+0x2b4>)
 802ed4c:	9400      	str	r4, [sp, #0]
 802ed4e:	f240 2272 	movw	r2, #626	; 0x272
 802ed52:	2002      	movs	r0, #2
 802ed54:	f7f3 fd20 	bl	8022798 <DEBUG_logMsg>
 802ed58:	4620      	mov	r0, r4
 802ed5a:	ab0b      	add	r3, sp, #44	; 0x2c
 802ed5c:	2204      	movs	r2, #4
 802ed5e:	212c      	movs	r1, #44	; 0x2c
 802ed60:	f7ff fab4 	bl	802e2cc <UTILITIES_strSplit>
 802ed64:	2804      	cmp	r0, #4
 802ed66:	d061      	beq.n	802ee2c <CAMERA_processResponse()+0x108>
 802ed68:	2300      	movs	r3, #0
 802ed6a:	f88d 303c 	strb.w	r3, [sp, #60]	; 0x3c
 802ed6e:	4898      	ldr	r0, [pc, #608]	; (802efd0 <CAMERA_processResponse()+0x2ac>)
 802ed70:	212f      	movs	r1, #47	; 0x2f
 802ed72:	f010 faf4 	bl	803f35e <strrchr>
 802ed76:	2800      	cmp	r0, #0
 802ed78:	f000 80fa 	beq.w	802ef70 <CAMERA_processResponse()+0x24c>
 802ed7c:	212f      	movs	r1, #47	; 0x2f
 802ed7e:	4894      	ldr	r0, [pc, #592]	; (802efd0 <CAMERA_processResponse()+0x2ac>)
 802ed80:	f010 faed 	bl	803f35e <strrchr>
 802ed84:	1c41      	adds	r1, r0, #1
 802ed86:	4c95      	ldr	r4, [pc, #596]	; (802efdc <CAMERA_processResponse()+0x2b8>)
 802ed88:	4a95      	ldr	r2, [pc, #596]	; (802efe0 <CAMERA_processResponse()+0x2bc>)
 802ed8a:	4d96      	ldr	r5, [pc, #600]	; (802efe4 <CAMERA_processResponse()+0x2c0>)
 802ed8c:	f643 3630 	movw	r6, #15152	; 0x3b30
 802ed90:	5da3      	ldrb	r3, [r4, r6]
 802ed92:	fba2 0203 	umull	r0, r2, r2, r3
 802ed96:	f002 00fe 	and.w	r0, r2, #254	; 0xfe
 802ed9a:	eb00 0252 	add.w	r2, r0, r2, lsr #1
 802ed9e:	1a9b      	subs	r3, r3, r2
 802eda0:	b2da      	uxtb	r2, r3
 802eda2:	2002      	movs	r0, #2
 802eda4:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 802eda8:	4b8f      	ldr	r3, [pc, #572]	; (802efe8 <CAMERA_processResponse()+0x2c4>)
 802edaa:	9200      	str	r2, [sp, #0]
 802edac:	f240 12e3 	movw	r2, #483	; 0x1e3
 802edb0:	f7f3 fcf2 	bl	8022798 <DEBUG_logMsg>
 802edb4:	f643 332c 	movw	r3, #15148	; 0x3b2c
 802edb8:	5da2      	ldrb	r2, [r4, r6]
 802edba:	58e3      	ldr	r3, [r4, r3]
 802edbc:	7c1b      	ldrb	r3, [r3, #16]
 802edbe:	3b01      	subs	r3, #1
 802edc0:	429a      	cmp	r2, r3
 802edc2:	da03      	bge.n	802edcc <CAMERA_processResponse()+0xa8>
 802edc4:	78e5      	ldrb	r5, [r4, #3]
 802edc6:	2d00      	cmp	r5, #0
 802edc8:	f000 80f5 	beq.w	802efb6 <CAMERA_processResponse()+0x292>
 802edcc:	4880      	ldr	r0, [pc, #512]	; (802efd0 <CAMERA_processResponse()+0x2ac>)
 802edce:	212f      	movs	r1, #47	; 0x2f
 802edd0:	f010 fac5 	bl	803f35e <strrchr>
 802edd4:	2800      	cmp	r0, #0
 802edd6:	f000 80e3 	beq.w	802efa0 <CAMERA_processResponse()+0x27c>
 802edda:	212f      	movs	r1, #47	; 0x2f
 802eddc:	487c      	ldr	r0, [pc, #496]	; (802efd0 <CAMERA_processResponse()+0x2ac>)
 802edde:	f010 fabe 	bl	803f35e <strrchr>
 802ede2:	1c41      	adds	r1, r0, #1
 802ede4:	4b81      	ldr	r3, [pc, #516]	; (802efec <CAMERA_processResponse()+0x2c8>)
 802ede6:	f240 12ed 	movw	r2, #493	; 0x1ed
 802edea:	2002      	movs	r0, #2
 802edec:	f7f3 fcd4 	bl	8022798 <DEBUG_logMsg>
 802edf0:	4b7f      	ldr	r3, [pc, #508]	; (802eff0 <CAMERA_processResponse()+0x2cc>)
 802edf2:	4880      	ldr	r0, [pc, #512]	; (802eff4 <CAMERA_processResponse()+0x2d0>)
 802edf4:	2400      	movs	r4, #0
 802edf6:	f04f 35ff 	mov.w	r5, #4294967295
 802edfa:	2200      	movs	r2, #0
 802edfc:	f44f 4100 	mov.w	r1, #32768	; 0x8000
 802ee00:	601d      	str	r5, [r3, #0]
 802ee02:	605c      	str	r4, [r3, #4]
 802ee04:	609c      	str	r4, [r3, #8]
 802ee06:	f006 f991 	bl	803512c <GPIO_setPins>
 802ee0a:	2500      	movs	r5, #0
 802ee0c:	4628      	mov	r0, r5
 802ee0e:	b017      	add	sp, #92	; 0x5c
 802ee10:	bdf0      	pop	{r4, r5, r6, r7, pc}
 802ee12:	486f      	ldr	r0, [pc, #444]	; (802efd0 <CAMERA_processResponse()+0x2ac>)
 802ee14:	215c      	movs	r1, #92	; 0x5c
 802ee16:	f010 faa2 	bl	803f35e <strrchr>
 802ee1a:	2800      	cmp	r0, #0
 802ee1c:	f000 80b3 	beq.w	802ef86 <CAMERA_processResponse()+0x262>
 802ee20:	215c      	movs	r1, #92	; 0x5c
 802ee22:	486b      	ldr	r0, [pc, #428]	; (802efd0 <CAMERA_processResponse()+0x2ac>)
 802ee24:	f010 fa9b 	bl	803f35e <strrchr>
 802ee28:	1c41      	adds	r1, r0, #1
 802ee2a:	e78d      	b.n	802ed48 <CAMERA_processResponse()+0x24>
 802ee2c:	2301      	movs	r3, #1
 802ee2e:	220a      	movs	r2, #10
 802ee30:	2100      	movs	r1, #0
 802ee32:	980b      	ldr	r0, [sp, #44]	; 0x2c
 802ee34:	f88d 303c 	strb.w	r3, [sp, #60]	; 0x3c
 802ee38:	f010 fb72 	bl	803f520 <strtol>
 802ee3c:	220a      	movs	r2, #10
 802ee3e:	4603      	mov	r3, r0
 802ee40:	2100      	movs	r1, #0
 802ee42:	980d      	ldr	r0, [sp, #52]	; 0x34
 802ee44:	9310      	str	r3, [sp, #64]	; 0x40
 802ee46:	f010 fb6b 	bl	803f520 <strtol>
 802ee4a:	220a      	movs	r2, #10
 802ee4c:	4603      	mov	r3, r0
 802ee4e:	2100      	movs	r1, #0
 802ee50:	980c      	ldr	r0, [sp, #48]	; 0x30
 802ee52:	9311      	str	r3, [sp, #68]	; 0x44
 802ee54:	f010 fb64 	bl	803f520 <strtol>
 802ee58:	220a      	movs	r2, #10
 802ee5a:	4603      	mov	r3, r0
 802ee5c:	2100      	movs	r1, #0
 802ee5e:	980e      	ldr	r0, [sp, #56]	; 0x38
 802ee60:	9312      	str	r3, [sp, #72]	; 0x48
 802ee62:	f010 fb5d 	bl	803f520 <strtol>
 802ee66:	f89d 503c 	ldrb.w	r5, [sp, #60]	; 0x3c
 802ee6a:	9013      	str	r0, [sp, #76]	; 0x4c
 802ee6c:	2d00      	cmp	r5, #0
 802ee6e:	f43f af7e 	beq.w	802ed6e <CAMERA_processResponse()+0x4a>
 802ee72:	4b61      	ldr	r3, [pc, #388]	; (802eff8 <CAMERA_processResponse()+0x2d4>)
 802ee74:	eddd 7a11 	vldr	s15, [sp, #68]	; 0x44
 802ee78:	ed93 6a00 	vldr	s12, [r3]
 802ee7c:	ed93 7a01 	vldr	s14, [r3, #4]
 802ee80:	ed93 3a03 	vldr	s6, [r3, #12]
 802ee84:	edd3 3a06 	vldr	s7, [r3, #24]
 802ee88:	ed93 4a02 	vldr	s8, [r3, #8]
 802ee8c:	edd3 4a05 	vldr	s9, [r3, #20]
 802ee90:	ed93 5a04 	vldr	s10, [r3, #16]
 802ee94:	edd3 5a07 	vldr	s11, [r3, #28]
 802ee98:	4c55      	ldr	r4, [pc, #340]	; (802eff0 <CAMERA_processResponse()+0x2cc>)
 802ee9a:	eef8 6ae7 	vcvt.f32.s32	s13, s15
 802ee9e:	eddd 7a12 	vldr	s15, [sp, #72]	; 0x48
 802eea2:	6160      	str	r0, [r4, #20]
 802eea4:	eeb8 6ac6 	vcvt.f32.s32	s12, s12
 802eea8:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 802eeac:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 802eeb0:	ee76 6a66 	vsub.f32	s13, s12, s13
 802eeb4:	ee77 7a67 	vsub.f32	s15, s14, s15
 802eeb8:	ee26 6aa6 	vmul.f32	s12, s13, s13
 802eebc:	ee27 7aa7 	vmul.f32	s14, s15, s15
 802eec0:	ee66 6a83 	vmul.f32	s13, s13, s6
 802eec4:	ee67 7aa3 	vmul.f32	s15, s15, s7
 802eec8:	eee6 6a04 	vfma.f32	s13, s12, s8
 802eecc:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
 802eed0:	eee7 7a24 	vfma.f32	s15, s14, s9
 802eed4:	60e3      	str	r3, [r4, #12]
 802eed6:	6022      	str	r2, [r4, #0]
 802eed8:	ee76 6a85 	vadd.f32	s13, s13, s10
 802eedc:	ee77 7aa5 	vadd.f32	s15, s15, s11
 802eee0:	9b14      	ldr	r3, [sp, #80]	; 0x50
 802eee2:	9a12      	ldr	r2, [sp, #72]	; 0x48
 802eee4:	483a      	ldr	r0, [pc, #232]	; (802efd0 <CAMERA_processResponse()+0x2ac>)
 802eee6:	edc4 6a01 	vstr	s13, [r4, #4]
 802eeea:	212f      	movs	r1, #47	; 0x2f
 802eeec:	6122      	str	r2, [r4, #16]
 802eeee:	edc4 7a02 	vstr	s15, [r4, #8]
 802eef2:	61a3      	str	r3, [r4, #24]
 802eef4:	f010 fa33 	bl	803f35e <strrchr>
 802eef8:	2800      	cmp	r0, #0
 802eefa:	d046      	beq.n	802ef8a <CAMERA_processResponse()+0x266>
 802eefc:	4834      	ldr	r0, [pc, #208]	; (802efd0 <CAMERA_processResponse()+0x2ac>)
 802eefe:	212f      	movs	r1, #47	; 0x2f
 802ef00:	f010 fa2d 	bl	803f35e <strrchr>
 802ef04:	1c46      	adds	r6, r0, #1
 802ef06:	4935      	ldr	r1, [pc, #212]	; (802efdc <CAMERA_processResponse()+0x2b8>)
 802ef08:	4a35      	ldr	r2, [pc, #212]	; (802efe0 <CAMERA_processResponse()+0x2bc>)
 802ef0a:	4836      	ldr	r0, [pc, #216]	; (802efe4 <CAMERA_processResponse()+0x2c0>)
 802ef0c:	f643 3330 	movw	r3, #15152	; 0x3b30
 802ef10:	5ccb      	ldrb	r3, [r1, r3]
 802ef12:	fba2 1203 	umull	r1, r2, r2, r3
 802ef16:	f002 01fe 	and.w	r1, r2, #254	; 0xfe
 802ef1a:	eb01 0252 	add.w	r2, r1, r2, lsr #1
 802ef1e:	1a9b      	subs	r3, r3, r2
 802ef20:	b2db      	uxtb	r3, r3
 802ef22:	6962      	ldr	r2, [r4, #20]
 802ef24:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
 802ef28:	68a0      	ldr	r0, [r4, #8]
 802ef2a:	e9cd 2308 	strd	r2, r3, [sp, #32]
 802ef2e:	f00f fa94 	bl	803e45a <__aeabi_f2d>
 802ef32:	4602      	mov	r2, r0
 802ef34:	460b      	mov	r3, r1
 802ef36:	6860      	ldr	r0, [r4, #4]
 802ef38:	e9cd 2306 	strd	r2, r3, [sp, #24]
 802ef3c:	f00f fa8d 	bl	803e45a <__aeabi_f2d>
 802ef40:	e9d4 2703 	ldrd	r2, r7, [r4, #12]
 802ef44:	6823      	ldr	r3, [r4, #0]
 802ef46:	9702      	str	r7, [sp, #8]
 802ef48:	e9cd 0104 	strd	r0, r1, [sp, #16]
 802ef4c:	e9cd 3200 	strd	r3, r2, [sp]
 802ef50:	4631      	mov	r1, r6
 802ef52:	4b2a      	ldr	r3, [pc, #168]	; (802effc <CAMERA_processResponse()+0x2d8>)
 802ef54:	f240 12db 	movw	r2, #475	; 0x1db
 802ef58:	2002      	movs	r0, #2
 802ef5a:	f7f3 fc1d 	bl	8022798 <DEBUG_logMsg>
 802ef5e:	4825      	ldr	r0, [pc, #148]	; (802eff4 <CAMERA_processResponse()+0x2d0>)
 802ef60:	2200      	movs	r2, #0
 802ef62:	f44f 4100 	mov.w	r1, #32768	; 0x8000
 802ef66:	f006 f8e1 	bl	803512c <GPIO_setPins>
 802ef6a:	4628      	mov	r0, r5
 802ef6c:	b017      	add	sp, #92	; 0x5c
 802ef6e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 802ef70:	4817      	ldr	r0, [pc, #92]	; (802efd0 <CAMERA_processResponse()+0x2ac>)
 802ef72:	215c      	movs	r1, #92	; 0x5c
 802ef74:	f010 f9f3 	bl	803f35e <strrchr>
 802ef78:	b320      	cbz	r0, 802efc4 <CAMERA_processResponse()+0x2a0>
 802ef7a:	215c      	movs	r1, #92	; 0x5c
 802ef7c:	4814      	ldr	r0, [pc, #80]	; (802efd0 <CAMERA_processResponse()+0x2ac>)
 802ef7e:	f010 f9ee 	bl	803f35e <strrchr>
 802ef82:	1c41      	adds	r1, r0, #1
 802ef84:	e6ff      	b.n	802ed86 <CAMERA_processResponse()+0x62>
 802ef86:	4912      	ldr	r1, [pc, #72]	; (802efd0 <CAMERA_processResponse()+0x2ac>)
 802ef88:	e6de      	b.n	802ed48 <CAMERA_processResponse()+0x24>
 802ef8a:	4811      	ldr	r0, [pc, #68]	; (802efd0 <CAMERA_processResponse()+0x2ac>)
 802ef8c:	215c      	movs	r1, #92	; 0x5c
 802ef8e:	f010 f9e6 	bl	803f35e <strrchr>
 802ef92:	b1c8      	cbz	r0, 802efc8 <CAMERA_processResponse()+0x2a4>
 802ef94:	480e      	ldr	r0, [pc, #56]	; (802efd0 <CAMERA_processResponse()+0x2ac>)
 802ef96:	215c      	movs	r1, #92	; 0x5c
 802ef98:	f010 f9e1 	bl	803f35e <strrchr>
 802ef9c:	1c46      	adds	r6, r0, #1
 802ef9e:	e7b2      	b.n	802ef06 <CAMERA_processResponse()+0x1e2>
 802efa0:	480b      	ldr	r0, [pc, #44]	; (802efd0 <CAMERA_processResponse()+0x2ac>)
 802efa2:	215c      	movs	r1, #92	; 0x5c
 802efa4:	f010 f9db 	bl	803f35e <strrchr>
 802efa8:	b180      	cbz	r0, 802efcc <CAMERA_processResponse()+0x2a8>
 802efaa:	215c      	movs	r1, #92	; 0x5c
 802efac:	4808      	ldr	r0, [pc, #32]	; (802efd0 <CAMERA_processResponse()+0x2ac>)
 802efae:	f010 f9d6 	bl	803f35e <strrchr>
 802efb2:	1c41      	adds	r1, r0, #1
 802efb4:	e716      	b.n	802ede4 <CAMERA_processResponse()+0xc0>
 802efb6:	3201      	adds	r2, #1
 802efb8:	55a2      	strb	r2, [r4, r6]
 802efba:	f7ff fc4d 	bl	802e858 <trigger()>
 802efbe:	4628      	mov	r0, r5
 802efc0:	b017      	add	sp, #92	; 0x5c
 802efc2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 802efc4:	4902      	ldr	r1, [pc, #8]	; (802efd0 <CAMERA_processResponse()+0x2ac>)
 802efc6:	e6de      	b.n	802ed86 <CAMERA_processResponse()+0x62>
 802efc8:	4e01      	ldr	r6, [pc, #4]	; (802efd0 <CAMERA_processResponse()+0x2ac>)
 802efca:	e79c      	b.n	802ef06 <CAMERA_processResponse()+0x1e2>
 802efcc:	4900      	ldr	r1, [pc, #0]	; (802efd0 <CAMERA_processResponse()+0x2ac>)
 802efce:	e709      	b.n	802ede4 <CAMERA_processResponse()+0xc0>
 802efd0:	080470d8 	.word	0x080470d8
 802efd4:	20005f1c 	.word	0x20005f1c
 802efd8:	080475c4 	.word	0x080475c4
 802efdc:	20005f08 	.word	0x20005f08
 802efe0:	aaaaaaab 	.word	0xaaaaaaab
 802efe4:	08047708 	.word	0x08047708
 802efe8:	08047634 	.word	0x08047634
 802efec:	08047658 	.word	0x08047658
 802eff0:	20009a3c 	.word	0x20009a3c
 802eff4:	40021000 	.word	0x40021000
 802eff8:	20005ee0 	.word	0x20005ee0
 802effc:	080475d0 	.word	0x080475d0

0802f000 <CAMERA_isImageRequested()>:
 802f000:	4b01      	ldr	r3, [pc, #4]	; (802f008 <CAMERA_isImageRequested()+0x8>)
 802f002:	7858      	ldrb	r0, [r3, #1]
 802f004:	4770      	bx	lr
 802f006:	bf00      	nop
 802f008:	20005f08 	.word	0x20005f08

0802f00c <CAMERA_trigger()>:
 802f00c:	b570      	push	{r4, r5, r6, lr}
 802f00e:	4c1c      	ldr	r4, [pc, #112]	; (802f080 <CAMERA_trigger()+0x74>)
 802f010:	7825      	ldrb	r5, [r4, #0]
 802f012:	2600      	movs	r6, #0
 802f014:	b084      	sub	sp, #16
 802f016:	70e6      	strb	r6, [r4, #3]
 802f018:	b305      	cbz	r5, 802f05c <CAMERA_trigger()+0x50>
 802f01a:	f005 ff0b 	bl	8034e34 <HWM_getRandomNum>
 802f01e:	b2c1      	uxtb	r1, r0
 802f020:	4603      	mov	r3, r0
 802f022:	f3c0 2207 	ubfx	r2, r0, #8, #8
 802f026:	f501 71b0 	add.w	r1, r1, #352	; 0x160
 802f02a:	f3c0 4507 	ubfx	r5, r0, #16, #8
 802f02e:	9101      	str	r1, [sp, #4]
 802f030:	f502 7200 	add.w	r2, r2, #512	; 0x200
 802f034:	0e19      	lsrs	r1, r3, #24
 802f036:	e9cd 1502 	strd	r1, r5, [sp, #8]
 802f03a:	9200      	str	r2, [sp, #0]
 802f03c:	f104 0014 	add.w	r0, r4, #20
 802f040:	4a10      	ldr	r2, [pc, #64]	; (802f084 <CAMERA_trigger()+0x78>)
 802f042:	0c1b      	lsrs	r3, r3, #16
 802f044:	217f      	movs	r1, #127	; 0x7f
 802f046:	f010 f8e9 	bl	803f21c <snprintf>
 802f04a:	480f      	ldr	r0, [pc, #60]	; (802f088 <CAMERA_trigger()+0x7c>)
 802f04c:	4632      	mov	r2, r6
 802f04e:	f44f 6180 	mov.w	r1, #1024	; 0x400
 802f052:	b004      	add	sp, #16
 802f054:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 802f058:	f00a b88e 	b.w	8039178 <_tx_event_flags_set>
 802f05c:	2201      	movs	r2, #1
 802f05e:	f44f 4100 	mov.w	r1, #32768	; 0x8000
 802f062:	480a      	ldr	r0, [pc, #40]	; (802f08c <CAMERA_trigger()+0x80>)
 802f064:	f006 f862 	bl	803512c <GPIO_setPins>
 802f068:	20c8      	movs	r0, #200	; 0xc8
 802f06a:	f00a ff71 	bl	8039f50 <_tx_thread_sleep>
 802f06e:	f643 3330 	movw	r3, #15152	; 0x3b30
 802f072:	54e5      	strb	r5, [r4, r3]
 802f074:	b004      	add	sp, #16
 802f076:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 802f07a:	f7ff bbed 	b.w	802e858 <trigger()>
 802f07e:	bf00      	nop
 802f080:	20005f08 	.word	0x20005f08
 802f084:	08047670 	.word	0x08047670
 802f088:	2000e158 	.word	0x2000e158
 802f08c:	40021000 	.word	0x40021000

0802f090 <CAMERA_stop()>:
 802f090:	4b01      	ldr	r3, [pc, #4]	; (802f098 <CAMERA_stop()+0x8>)
 802f092:	2201      	movs	r2, #1
 802f094:	70da      	strb	r2, [r3, #3]
 802f096:	4770      	bx	lr
 802f098:	20005f08 	.word	0x20005f08

0802f09c <CAMERA_setPixelCenterOffsets(int, int)>:
 802f09c:	ee07 0a90 	vmov	s15, r0
 802f0a0:	eddf 6a07 	vldr	s13, [pc, #28]	; 802f0c0 <CAMERA_setPixelCenterOffsets(int, int)+0x24>
 802f0a4:	4b07      	ldr	r3, [pc, #28]	; (802f0c4 <CAMERA_setPixelCenterOffsets(int, int)+0x28>)
 802f0a6:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 802f0aa:	eddf 7a07 	vldr	s15, [pc, #28]	; 802f0c8 <CAMERA_setPixelCenterOffsets(int, int)+0x2c>
 802f0ae:	6059      	str	r1, [r3, #4]
 802f0b0:	eee7 7a26 	vfma.f32	s15, s14, s13
 802f0b4:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 802f0b8:	edc3 7a00 	vstr	s15, [r3]
 802f0bc:	f7ff b9a4 	b.w	802e408 <saveCameraCalibration()>
 802f0c0:	3f714e3c 	.word	0x3f714e3c
 802f0c4:	20005ee0 	.word	0x20005ee0
 802f0c8:	42a53439 	.word	0x42a53439

0802f0cc <CAMERA_adjustPixelCenterOffset(int, int)>:
 802f0cc:	4b05      	ldr	r3, [pc, #20]	; (802f0e4 <CAMERA_adjustPixelCenterOffset(int, int)+0x18>)
 802f0ce:	b410      	push	{r4}
 802f0d0:	e9d3 4200 	ldrd	r4, r2, [r3]
 802f0d4:	4420      	add	r0, r4
 802f0d6:	4411      	add	r1, r2
 802f0d8:	f85d 4b04 	ldr.w	r4, [sp], #4
 802f0dc:	e9c3 0100 	strd	r0, r1, [r3]
 802f0e0:	f7ff b992 	b.w	802e408 <saveCameraCalibration()>
 802f0e4:	20005ee0 	.word	0x20005ee0

0802f0e8 <CAMERA_activateProfile(CAMERA_configProfile_t)>:
 802f0e8:	2804      	cmp	r0, #4
 802f0ea:	d900      	bls.n	802f0ee <CAMERA_activateProfile(CAMERA_configProfile_t)+0x6>
 802f0ec:	4770      	bx	lr
 802f0ee:	f7ff bb61 	b.w	802e7b4 <CAMERA_activateProfile(CAMERA_configProfile_t) [clone .part.0]>
 802f0f2:	bf00      	nop

0802f0f4 <CAMERA_requestImage(CAMERA_imageFormat_t, CAMERA_imageSize_t, CAMERA_imageQuality_t)>:
 802f0f4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802f0f8:	4d24      	ldr	r5, [pc, #144]	; (802f18c <CAMERA_requestImage(CAMERA_imageFormat_t, CAMERA_imageSize_t, CAMERA_imageQuality_t)+0x98>)
 802f0fa:	4680      	mov	r8, r0
 802f0fc:	460e      	mov	r6, r1
 802f0fe:	4614      	mov	r4, r2
 802f100:	2702      	movs	r7, #2
 802f102:	f643 2298 	movw	r2, #15000	; 0x3a98
 802f106:	2100      	movs	r1, #0
 802f108:	f105 0094 	add.w	r0, r5, #148	; 0x94
 802f10c:	712f      	strb	r7, [r5, #4]
 802f10e:	f010 faa1 	bl	803f654 <memset>
 802f112:	f1b8 0f03 	cmp.w	r8, #3
 802f116:	bf34      	ite	cc
 802f118:	4642      	movcc	r2, r8
 802f11a:	2201      	movcs	r2, #1
 802f11c:	491c      	ldr	r1, [pc, #112]	; (802f190 <CAMERA_requestImage(CAMERA_imageFormat_t, CAMERA_imageSize_t, CAMERA_imageQuality_t)+0x9c>)
 802f11e:	481d      	ldr	r0, [pc, #116]	; (802f194 <CAMERA_requestImage(CAMERA_imageFormat_t, CAMERA_imageSize_t, CAMERA_imageQuality_t)+0xa0>)
 802f120:	f7ff f9e6 	bl	802e4f0 <prepareCognexCommand(char*, char const*, ...) [clone .constprop.0]>
 802f124:	491b      	ldr	r1, [pc, #108]	; (802f194 <CAMERA_requestImage(CAMERA_imageFormat_t, CAMERA_imageSize_t, CAMERA_imageQuality_t)+0xa0>)
 802f126:	4602      	mov	r2, r0
 802f128:	2001      	movs	r0, #1
 802f12a:	f005 fd71 	bl	8034c10 <USART_send>
 802f12e:	2e04      	cmp	r6, #4
 802f130:	bf34      	ite	cc
 802f132:	4632      	movcc	r2, r6
 802f134:	2200      	movcs	r2, #0
 802f136:	4918      	ldr	r1, [pc, #96]	; (802f198 <CAMERA_requestImage(CAMERA_imageFormat_t, CAMERA_imageSize_t, CAMERA_imageQuality_t)+0xa4>)
 802f138:	4816      	ldr	r0, [pc, #88]	; (802f194 <CAMERA_requestImage(CAMERA_imageFormat_t, CAMERA_imageSize_t, CAMERA_imageQuality_t)+0xa0>)
 802f13a:	f7ff f9d9 	bl	802e4f0 <prepareCognexCommand(char*, char const*, ...) [clone .constprop.0]>
 802f13e:	4915      	ldr	r1, [pc, #84]	; (802f194 <CAMERA_requestImage(CAMERA_imageFormat_t, CAMERA_imageSize_t, CAMERA_imageQuality_t)+0xa0>)
 802f140:	4602      	mov	r2, r0
 802f142:	2001      	movs	r0, #1
 802f144:	f005 fd64 	bl	8034c10 <USART_send>
 802f148:	2c10      	cmp	r4, #16
 802f14a:	4622      	mov	r2, r4
 802f14c:	bf28      	it	cs
 802f14e:	2210      	movcs	r2, #16
 802f150:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 802f154:	320a      	adds	r2, #10
 802f156:	4911      	ldr	r1, [pc, #68]	; (802f19c <CAMERA_requestImage(CAMERA_imageFormat_t, CAMERA_imageSize_t, CAMERA_imageQuality_t)+0xa8>)
 802f158:	480e      	ldr	r0, [pc, #56]	; (802f194 <CAMERA_requestImage(CAMERA_imageFormat_t, CAMERA_imageSize_t, CAMERA_imageQuality_t)+0xa0>)
 802f15a:	b2d2      	uxtb	r2, r2
 802f15c:	f7ff f9c8 	bl	802e4f0 <prepareCognexCommand(char*, char const*, ...) [clone .constprop.0]>
 802f160:	490c      	ldr	r1, [pc, #48]	; (802f194 <CAMERA_requestImage(CAMERA_imageFormat_t, CAMERA_imageSize_t, CAMERA_imageQuality_t)+0xa0>)
 802f162:	4602      	mov	r2, r0
 802f164:	2001      	movs	r0, #1
 802f166:	f005 fd53 	bl	8034c10 <USART_send>
 802f16a:	490d      	ldr	r1, [pc, #52]	; (802f1a0 <CAMERA_requestImage(CAMERA_imageFormat_t, CAMERA_imageSize_t, CAMERA_imageQuality_t)+0xac>)
 802f16c:	4809      	ldr	r0, [pc, #36]	; (802f194 <CAMERA_requestImage(CAMERA_imageFormat_t, CAMERA_imageSize_t, CAMERA_imageQuality_t)+0xa0>)
 802f16e:	f7ff f9bf 	bl	802e4f0 <prepareCognexCommand(char*, char const*, ...) [clone .constprop.0]>
 802f172:	4908      	ldr	r1, [pc, #32]	; (802f194 <CAMERA_requestImage(CAMERA_imageFormat_t, CAMERA_imageSize_t, CAMERA_imageQuality_t)+0xa0>)
 802f174:	4602      	mov	r2, r0
 802f176:	2001      	movs	r0, #1
 802f178:	f005 fd4a 	bl	8034c10 <USART_send>
 802f17c:	2201      	movs	r2, #1
 802f17e:	2300      	movs	r3, #0
 802f180:	712f      	strb	r7, [r5, #4]
 802f182:	706a      	strb	r2, [r5, #1]
 802f184:	60ab      	str	r3, [r5, #8]
 802f186:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802f18a:	bf00      	nop
 802f18c:	20005f08 	.word	0x20005f08
 802f190:	08047688 	.word	0x08047688
 802f194:	20009b4c 	.word	0x20009b4c
 802f198:	080476a4 	.word	0x080476a4
 802f19c:	080476bc 	.word	0x080476bc
 802f1a0:	080476d8 	.word	0x080476d8

0802f1a4 <CAMERA_getImage()>:
 802f1a4:	4a02      	ldr	r2, [pc, #8]	; (802f1b0 <CAMERA_getImage()+0xc>)
 802f1a6:	68d1      	ldr	r1, [r2, #12]
 802f1a8:	6001      	str	r1, [r0, #0]
 802f1aa:	3294      	adds	r2, #148	; 0x94
 802f1ac:	6042      	str	r2, [r0, #4]
 802f1ae:	4770      	bx	lr
 802f1b0:	20005f08 	.word	0x20005f08

0802f1b4 <CAMERA_getImageQualityInt(CAMERA_imageQuality_t)>:
 802f1b4:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 802f1b8:	300a      	adds	r0, #10
 802f1ba:	4770      	bx	lr

0802f1bc <CAMERA_getVersion()>:
 802f1bc:	b510      	push	{r4, lr}
 802f1be:	4c08      	ldr	r4, [pc, #32]	; (802f1e0 <CAMERA_getVersion()+0x24>)
 802f1c0:	4908      	ldr	r1, [pc, #32]	; (802f1e4 <CAMERA_getVersion()+0x28>)
 802f1c2:	4620      	mov	r0, r4
 802f1c4:	f7ff f994 	bl	802e4f0 <prepareCognexCommand(char*, char const*, ...) [clone .constprop.0]>
 802f1c8:	4621      	mov	r1, r4
 802f1ca:	4602      	mov	r2, r0
 802f1cc:	2001      	movs	r0, #1
 802f1ce:	f005 fd1f 	bl	8034c10 <USART_send>
 802f1d2:	4b05      	ldr	r3, [pc, #20]	; (802f1e8 <CAMERA_getVersion()+0x2c>)
 802f1d4:	2104      	movs	r1, #4
 802f1d6:	2200      	movs	r2, #0
 802f1d8:	7119      	strb	r1, [r3, #4]
 802f1da:	609a      	str	r2, [r3, #8]
 802f1dc:	bd10      	pop	{r4, pc}
 802f1de:	bf00      	nop
 802f1e0:	20009b4c 	.word	0x20009b4c
 802f1e4:	080476e8 	.word	0x080476e8
 802f1e8:	20005f08 	.word	0x20005f08

0802f1ec <MSGMNGR_enterThread>:
 802f1ec:	b508      	push	{r3, lr}
 802f1ee:	2040      	movs	r0, #64	; 0x40
 802f1f0:	f7f1 fd9c 	bl	8020d2c <SYSTEM_setThreadFlag>
 802f1f4:	e001      	b.n	802f1fa <MSGMNGR_enterThread+0xe>
 802f1f6:	f00a feab 	bl	8039f50 <_tx_thread_sleep>
 802f1fa:	f7f1 fd8b 	bl	8020d14 <SYSTEM_areThreadsRunning>
 802f1fe:	4603      	mov	r3, r0
 802f200:	2064      	movs	r0, #100	; 0x64
 802f202:	2b00      	cmp	r3, #0
 802f204:	d0f7      	beq.n	802f1f6 <MSGMNGR_enterThread+0xa>
 802f206:	f000 fd45 	bl	802fc94 <HARDWARE_NETWORK_initializeCCP>
 802f20a:	f000 fdfd 	bl	802fe08 <HARDWARE_NETWORK_initializeMCM>
 802f20e:	f000 fe83 	bl	802ff18 <HARDWARE_NETWORK_initializeDiagnostic>
 802f212:	2040      	movs	r0, #64	; 0x40
 802f214:	f7f1 fd8a 	bl	8020d2c <SYSTEM_setThreadFlag>
 802f218:	f000 fdd6 	bl	802fdc8 <HARDWARE_NETWORK_waitMessagesToSend>
 802f21c:	b158      	cbz	r0, 802f236 <MSGMNGR_enterThread+0x4a>
 802f21e:	f000 fd45 	bl	802fcac <HARDWARE_NETWORK_getNumCCPMessagesToSend>
 802f222:	b1c0      	cbz	r0, 802f256 <MSGMNGR_enterThread+0x6a>
 802f224:	f000 fd3c 	bl	802fca0 <HARDWARE_NETWORK_sendCCPMessage>
 802f228:	2040      	movs	r0, #64	; 0x40
 802f22a:	f7f1 fd7f 	bl	8020d2c <SYSTEM_setThreadFlag>
 802f22e:	f000 fdcb 	bl	802fdc8 <HARDWARE_NETWORK_waitMessagesToSend>
 802f232:	2800      	cmp	r0, #0
 802f234:	d1f3      	bne.n	802f21e <MSGMNGR_enterThread+0x32>
 802f236:	f000 fd39 	bl	802fcac <HARDWARE_NETWORK_getNumCCPMessagesToSend>
 802f23a:	2800      	cmp	r0, #0
 802f23c:	d1ef      	bne.n	802f21e <MSGMNGR_enterThread+0x32>
 802f23e:	f000 fdef 	bl	802fe20 <HARDWARE_NETWORK_getNumMCMMessagesToSend>
 802f242:	2800      	cmp	r0, #0
 802f244:	d1eb      	bne.n	802f21e <MSGMNGR_enterThread+0x32>
 802f246:	f000 fe73 	bl	802ff30 <HARDWARE_NETWORK_getNumDiagnosticMessagesToSend>
 802f24a:	2800      	cmp	r0, #0
 802f24c:	d0e1      	beq.n	802f212 <MSGMNGR_enterThread+0x26>
 802f24e:	f000 fd2d 	bl	802fcac <HARDWARE_NETWORK_getNumCCPMessagesToSend>
 802f252:	2800      	cmp	r0, #0
 802f254:	d1e6      	bne.n	802f224 <MSGMNGR_enterThread+0x38>
 802f256:	f000 fde3 	bl	802fe20 <HARDWARE_NETWORK_getNumMCMMessagesToSend>
 802f25a:	b110      	cbz	r0, 802f262 <MSGMNGR_enterThread+0x76>
 802f25c:	f000 fdda 	bl	802fe14 <HARDWARE_NETWORK_sendMCMMessage>
 802f260:	e7d7      	b.n	802f212 <MSGMNGR_enterThread+0x26>
 802f262:	f000 fe65 	bl	802ff30 <HARDWARE_NETWORK_getNumDiagnosticMessagesToSend>
 802f266:	2800      	cmp	r0, #0
 802f268:	d0d3      	beq.n	802f212 <MSGMNGR_enterThread+0x26>
 802f26a:	f000 fe5b 	bl	802ff24 <HARDWARE_NETWORK_sendDiagnosticMessage>
 802f26e:	e7d0      	b.n	802f212 <MSGMNGR_enterThread+0x26>
 802f270:	8101b108 	.word	0x8101b108
 802f274:	8400b0b0 	.word	0x8400b0b0
 802f278:	00000000 	.word	0x00000000

0802f27c <MessageManager::MessageManager(char const*, COMM_endianOrder_e, void (*)(unsigned char*, unsigned short), void (*)(), void (*)(), void (*)(), unsigned short, unsigned int, unsigned long long)>:
 802f27c:	e92d 45f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, sl, lr}
 802f280:	e9dd 6708 	ldrd	r6, r7, [sp, #32]
 802f284:	4604      	mov	r4, r0
 802f286:	f8bd 802c 	ldrh.w	r8, [sp, #44]	; 0x2c
 802f28a:	980a      	ldr	r0, [sp, #40]	; 0x28
 802f28c:	f8c4 60cc 	str.w	r6, [r4, #204]	; 0xcc
 802f290:	2500      	movs	r5, #0
 802f292:	e9c4 7034 	strd	r7, r0, [r4, #208]	; 0xd0
 802f296:	6021      	str	r1, [r4, #0]
 802f298:	f884 20c4 	strb.w	r2, [r4, #196]	; 0xc4
 802f29c:	f8c4 30c8 	str.w	r3, [r4, #200]	; 0xc8
 802f2a0:	f8a4 80d8 	strh.w	r8, [r4, #216]	; 0xd8
 802f2a4:	f8a4 80e0 	strh.w	r8, [r4, #224]	; 0xe0
 802f2a8:	f8a4 50e2 	strh.w	r5, [r4, #226]	; 0xe2
 802f2ac:	f8a4 50e4 	strh.w	r5, [r4, #228]	; 0xe4
 802f2b0:	f884 50e6 	strb.w	r5, [r4, #230]	; 0xe6
 802f2b4:	f8c4 50e8 	str.w	r5, [r4, #232]	; 0xe8
 802f2b8:	4640      	mov	r0, r8
 802f2ba:	e9dd 670e 	ldrd	r6, r7, [sp, #56]	; 0x38
 802f2be:	468a      	mov	sl, r1
 802f2c0:	f010 ff04 	bl	80400cc <operator new[](unsigned int)>
 802f2c4:	f8a4 80f4 	strh.w	r8, [r4, #244]	; 0xf4
 802f2c8:	f8c4 00dc 	str.w	r0, [r4, #220]	; 0xdc
 802f2cc:	f8a4 50f6 	strh.w	r5, [r4, #246]	; 0xf6
 802f2d0:	f8a4 50f8 	strh.w	r5, [r4, #248]	; 0xf8
 802f2d4:	f884 50fa 	strb.w	r5, [r4, #250]	; 0xfa
 802f2d8:	f8c4 50fc 	str.w	r5, [r4, #252]	; 0xfc
 802f2dc:	4640      	mov	r0, r8
 802f2de:	f010 fef5 	bl	80400cc <operator new[](unsigned int)>
 802f2e2:	f8c4 00f0 	str.w	r0, [r4, #240]	; 0xf0
 802f2e6:	f8a4 8108 	strh.w	r8, [r4, #264]	; 0x108
 802f2ea:	f8a4 510a 	strh.w	r5, [r4, #266]	; 0x10a
 802f2ee:	f8a4 510c 	strh.w	r5, [r4, #268]	; 0x10c
 802f2f2:	f884 510e 	strb.w	r5, [r4, #270]	; 0x10e
 802f2f6:	f8c4 5110 	str.w	r5, [r4, #272]	; 0x110
 802f2fa:	4640      	mov	r0, r8
 802f2fc:	f010 fee6 	bl	80400cc <operator new[](unsigned int)>
 802f300:	f8c4 0104 	str.w	r0, [r4, #260]	; 0x104
 802f304:	4640      	mov	r0, r8
 802f306:	f010 fee1 	bl	80400cc <operator new[](unsigned int)>
 802f30a:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 802f30c:	f8c4 0118 	str.w	r0, [r4, #280]	; 0x118
 802f310:	e9c4 674a 	strd	r6, r7, [r4, #296]	; 0x128
 802f314:	6820      	ldr	r0, [r4, #0]
 802f316:	f8c4 211c 	str.w	r2, [r4, #284]	; 0x11c
 802f31a:	f8c4 5120 	str.w	r5, [r4, #288]	; 0x120
 802f31e:	f8a4 5124 	strh.w	r5, [r4, #292]	; 0x124
 802f322:	f884 5126 	strb.w	r5, [r4, #294]	; 0x126
 802f326:	213f      	movs	r1, #63	; 0x3f
 802f328:	f010 f808 	bl	803f33c <strnlen>
 802f32c:	3001      	adds	r0, #1
 802f32e:	b2c5      	uxtb	r5, r0
 802f330:	1d26      	adds	r6, r4, #4
 802f332:	462a      	mov	r2, r5
 802f334:	4651      	mov	r1, sl
 802f336:	4630      	mov	r0, r6
 802f338:	f010 f963 	bl	803f602 <__aeabi_memcpy>
 802f33c:	f104 0744 	add.w	r7, r4, #68	; 0x44
 802f340:	4918      	ldr	r1, [pc, #96]	; (802f3a4 <MessageManager::MessageManager(char const*, COMM_endianOrder_e, void (*)(unsigned char*, unsigned short), void (*)(), void (*)(), void (*)(), unsigned short, unsigned int, unsigned long long)+0x128>)
 802f342:	4630      	mov	r0, r6
 802f344:	2210      	movs	r2, #16
 802f346:	f00f ffa9 	bl	803f29c <strncat>
 802f34a:	462a      	mov	r2, r5
 802f34c:	4651      	mov	r1, sl
 802f34e:	4638      	mov	r0, r7
 802f350:	f010 f957 	bl	803f602 <__aeabi_memcpy>
 802f354:	f104 0684 	add.w	r6, r4, #132	; 0x84
 802f358:	4913      	ldr	r1, [pc, #76]	; (802f3a8 <MessageManager::MessageManager(char const*, COMM_endianOrder_e, void (*)(unsigned char*, unsigned short), void (*)(), void (*)(), void (*)(), unsigned short, unsigned int, unsigned long long)+0x12c>)
 802f35a:	4638      	mov	r0, r7
 802f35c:	2210      	movs	r2, #16
 802f35e:	f00f ff9d 	bl	803f29c <strncat>
 802f362:	462a      	mov	r2, r5
 802f364:	4651      	mov	r1, sl
 802f366:	4630      	mov	r0, r6
 802f368:	f010 f94b 	bl	803f602 <__aeabi_memcpy>
 802f36c:	490f      	ldr	r1, [pc, #60]	; (802f3ac <MessageManager::MessageManager(char const*, COMM_endianOrder_e, void (*)(unsigned char*, unsigned short), void (*)(), void (*)(), void (*)(), unsigned short, unsigned int, unsigned long long)+0x130>)
 802f36e:	4630      	mov	r0, r6
 802f370:	2210      	movs	r2, #16
 802f372:	f00f ff93 	bl	803f29c <strncat>
 802f376:	4620      	mov	r0, r4
 802f378:	e8bd 85f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, sl, pc}
 802f37c:	f8d4 00dc 	ldr.w	r0, [r4, #220]	; 0xdc
 802f380:	b108      	cbz	r0, 802f386 <MessageManager::MessageManager(char const*, COMM_endianOrder_e, void (*)(unsigned char*, unsigned short), void (*)(), void (*)(), void (*)(), unsigned short, unsigned int, unsigned long long)+0x10a>
 802f382:	f001 ff3f 	bl	8031204 <operator delete[](void*)>
 802f386:	f010 f9f1 	bl	803f76c <__cxa_end_cleanup>
 802f38a:	f8d4 0104 	ldr.w	r0, [r4, #260]	; 0x104
 802f38e:	b108      	cbz	r0, 802f394 <MessageManager::MessageManager(char const*, COMM_endianOrder_e, void (*)(unsigned char*, unsigned short), void (*)(), void (*)(), void (*)(), unsigned short, unsigned int, unsigned long long)+0x118>
 802f390:	f001 ff38 	bl	8031204 <operator delete[](void*)>
 802f394:	f8d4 00f0 	ldr.w	r0, [r4, #240]	; 0xf0
 802f398:	2800      	cmp	r0, #0
 802f39a:	d0ef      	beq.n	802f37c <MessageManager::MessageManager(char const*, COMM_endianOrder_e, void (*)(unsigned char*, unsigned short), void (*)(), void (*)(), void (*)(), unsigned short, unsigned int, unsigned long long)+0x100>
 802f39c:	f001 ff32 	bl	8031204 <operator delete[](void*)>
 802f3a0:	e7ec      	b.n	802f37c <MessageManager::MessageManager(char const*, COMM_endianOrder_e, void (*)(unsigned char*, unsigned short), void (*)(), void (*)(), void (*)(), unsigned short, unsigned int, unsigned long long)+0x100>
 802f3a2:	e7f7      	b.n	802f394 <MessageManager::MessageManager(char const*, COMM_endianOrder_e, void (*)(unsigned char*, unsigned short), void (*)(), void (*)(), void (*)(), unsigned short, unsigned int, unsigned long long)+0x118>
 802f3a4:	0804772c 	.word	0x0804772c
 802f3a8:	0804773c 	.word	0x0804773c
 802f3ac:	0804774c 	.word	0x0804774c
 802f3b0:	00010b41 	.word	0x00010b41
 802f3b4:	01b10884 	.word	0x01b10884
 802f3b8:	5fb0b0b0 	.word	0x5fb0b0b0
 802f3bc:	1a01ffff 	.word	0x1a01ffff
 802f3c0:	00000444 	.word	0x00000444
 802f3c4:	02800462 	.word	0x02800462
 802f3c8:	04018000 	.word	0x04018000
 802f3cc:	8a0002a6 	.word	0x8a0002a6
 802f3d0:	028e2601 	.word	0x028e2601
 802f3d4:	04028a00 	.word	0x04028a00
 802f3d8:	00000000 	.word	0x00000000

0802f3dc <MessageManager::initialize()>:
 802f3dc:	b510      	push	{r4, lr}
 802f3de:	1d01      	adds	r1, r0, #4
 802f3e0:	4604      	mov	r4, r0
 802f3e2:	2200      	movs	r2, #0
 802f3e4:	f500 7098 	add.w	r0, r0, #304	; 0x130
 802f3e8:	f00a f8ae 	bl	8039548 <_tx_mutex_create>
 802f3ec:	f104 0144 	add.w	r1, r4, #68	; 0x44
 802f3f0:	f504 70be 	add.w	r0, r4, #380	; 0x17c
 802f3f4:	2200      	movs	r2, #0
 802f3f6:	f00a f8a7 	bl	8039548 <_tx_mutex_create>
 802f3fa:	f104 0184 	add.w	r1, r4, #132	; 0x84
 802f3fe:	f504 70e4 	add.w	r0, r4, #456	; 0x1c8
 802f402:	2200      	movs	r2, #0
 802f404:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802f408:	f00a b89e 	b.w	8039548 <_tx_mutex_create>

0802f40c <MessageManager::~MessageManager()>:
 802f40c:	b510      	push	{r4, lr}
 802f40e:	4604      	mov	r4, r0
 802f410:	f8d0 0118 	ldr.w	r0, [r0, #280]	; 0x118
 802f414:	b108      	cbz	r0, 802f41a <MessageManager::~MessageManager()+0xe>
 802f416:	f001 fef5 	bl	8031204 <operator delete[](void*)>
 802f41a:	f8d4 0104 	ldr.w	r0, [r4, #260]	; 0x104
 802f41e:	b108      	cbz	r0, 802f424 <MessageManager::~MessageManager()+0x18>
 802f420:	f001 fef0 	bl	8031204 <operator delete[](void*)>
 802f424:	f8d4 00f0 	ldr.w	r0, [r4, #240]	; 0xf0
 802f428:	b108      	cbz	r0, 802f42e <MessageManager::~MessageManager()+0x22>
 802f42a:	f001 feeb 	bl	8031204 <operator delete[](void*)>
 802f42e:	f8d4 00dc 	ldr.w	r0, [r4, #220]	; 0xdc
 802f432:	b108      	cbz	r0, 802f438 <MessageManager::~MessageManager()+0x2c>
 802f434:	f001 fee6 	bl	8031204 <operator delete[](void*)>
 802f438:	4620      	mov	r0, r4
 802f43a:	bd10      	pop	{r4, pc}

0802f43c <MessageManager::popReceivedMessage(unsigned char*, unsigned short, unsigned short*)>:
 802f43c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802f440:	f500 77e4 	add.w	r7, r0, #456	; 0x1c8
 802f444:	b087      	sub	sp, #28
 802f446:	4604      	mov	r4, r0
 802f448:	460e      	mov	r6, r1
 802f44a:	4638      	mov	r0, r7
 802f44c:	214b      	movs	r1, #75	; 0x4b
 802f44e:	e9cd 3202 	strd	r3, r2, [sp, #8]
 802f452:	f00a f909 	bl	8039668 <_tx_mutex_get>
 802f456:	2800      	cmp	r0, #0
 802f458:	f040 8083 	bne.w	802f562 <MessageManager::popReceivedMessage(unsigned char*, unsigned short, unsigned short*)+0x126>
 802f45c:	f8b4 90e2 	ldrh.w	r9, [r4, #226]	; 0xe2
 802f460:	2504      	movs	r5, #4
 802f462:	4602      	mov	r2, r0
 802f464:	ab05      	add	r3, sp, #20
 802f466:	4683      	mov	fp, r0
 802f468:	e018      	b.n	802f49c <MessageManager::popReceivedMessage(unsigned char*, unsigned short, unsigned short*)+0x60>
 802f46a:	f8b4 80e0 	ldrh.w	r8, [r4, #224]	; 0xe0
 802f46e:	f8d4 00dc 	ldr.w	r0, [r4, #220]	; 0xdc
 802f472:	fbba f1f8 	udiv	r1, sl, r8
 802f476:	fb08 a111 	mls	r1, r8, r1, sl
 802f47a:	f810 e00e 	ldrb.w	lr, [r0, lr]
 802f47e:	f8a4 10e4 	strh.w	r1, [r4, #228]	; 0xe4
 802f482:	f04f 0100 	mov.w	r1, #0
 802f486:	f884 10e6 	strb.w	r1, [r4, #230]	; 0xe6
 802f48a:	b113      	cbz	r3, 802f492 <MessageManager::popReceivedMessage(unsigned char*, unsigned short, unsigned short*)+0x56>
 802f48c:	f80c eb01 	strb.w	lr, [ip], #1
 802f490:	4663      	mov	r3, ip
 802f492:	3d01      	subs	r5, #1
 802f494:	3201      	adds	r2, #1
 802f496:	b2ad      	uxth	r5, r5
 802f498:	b292      	uxth	r2, r2
 802f49a:	b19d      	cbz	r5, 802f4c4 <MessageManager::popReceivedMessage(unsigned char*, unsigned short, unsigned short*)+0x88>
 802f49c:	f8b4 e0e4 	ldrh.w	lr, [r4, #228]	; 0xe4
 802f4a0:	45f1      	cmp	r9, lr
 802f4a2:	f10e 0a01 	add.w	sl, lr, #1
 802f4a6:	469c      	mov	ip, r3
 802f4a8:	d1df      	bne.n	802f46a <MessageManager::popReceivedMessage(unsigned char*, unsigned short, unsigned short*)+0x2e>
 802f4aa:	f894 80e6 	ldrb.w	r8, [r4, #230]	; 0xe6
 802f4ae:	4619      	mov	r1, r3
 802f4b0:	f1b8 0f00 	cmp.w	r8, #0
 802f4b4:	d1d9      	bne.n	802f46a <MessageManager::popReceivedMessage(unsigned char*, unsigned short, unsigned short*)+0x2e>
 802f4b6:	f801 8b01 	strb.w	r8, [r1], #1
 802f4ba:	3d01      	subs	r5, #1
 802f4bc:	b2ad      	uxth	r5, r5
 802f4be:	460b      	mov	r3, r1
 802f4c0:	2d00      	cmp	r5, #0
 802f4c2:	d1eb      	bne.n	802f49c <MessageManager::popReceivedMessage(unsigned char*, unsigned short, unsigned short*)+0x60>
 802f4c4:	2a04      	cmp	r2, #4
 802f4c6:	4658      	mov	r0, fp
 802f4c8:	d00b      	beq.n	802f4e2 <MessageManager::popReceivedMessage(unsigned char*, unsigned short, unsigned short*)+0xa6>
 802f4ca:	9b02      	ldr	r3, [sp, #8]
 802f4cc:	2400      	movs	r4, #0
 802f4ce:	b10b      	cbz	r3, 802f4d4 <MessageManager::popReceivedMessage(unsigned char*, unsigned short, unsigned short*)+0x98>
 802f4d0:	9b02      	ldr	r3, [sp, #8]
 802f4d2:	801d      	strh	r5, [r3, #0]
 802f4d4:	4638      	mov	r0, r7
 802f4d6:	f00a fa3d 	bl	8039954 <_tx_mutex_put>
 802f4da:	4620      	mov	r0, r4
 802f4dc:	b007      	add	sp, #28
 802f4de:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802f4e2:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 802f4e6:	f64b 0341 	movw	r3, #47169	; 0xb841
 802f4ea:	429a      	cmp	r2, r3
 802f4ec:	d150      	bne.n	802f590 <MessageManager::popReceivedMessage(unsigned char*, unsigned short, unsigned short*)+0x154>
 802f4ee:	f8bd 8016 	ldrh.w	r8, [sp, #22]
 802f4f2:	9b03      	ldr	r3, [sp, #12]
 802f4f4:	4598      	cmp	r8, r3
 802f4f6:	f200 8094 	bhi.w	802f622 <MessageManager::popReceivedMessage(unsigned char*, unsigned short, unsigned short*)+0x1e6>
 802f4fa:	f1b8 0f00 	cmp.w	r8, #0
 802f4fe:	f000 80d2 	beq.w	802f6a6 <MessageManager::popReceivedMessage(unsigned char*, unsigned short, unsigned short*)+0x26a>
 802f502:	46ae      	mov	lr, r5
 802f504:	46ab      	mov	fp, r5
 802f506:	e01b      	b.n	802f540 <MessageManager::popReceivedMessage(unsigned char*, unsigned short, unsigned short*)+0x104>
 802f508:	f8b4 c0e0 	ldrh.w	ip, [r4, #224]	; 0xe0
 802f50c:	fbb1 f2fc 	udiv	r2, r1, ip
 802f510:	fb0c 1212 	mls	r2, ip, r2, r1
 802f514:	f8d4 10dc 	ldr.w	r1, [r4, #220]	; 0xdc
 802f518:	5ccb      	ldrb	r3, [r1, r3]
 802f51a:	f8a4 20e4 	strh.w	r2, [r4, #228]	; 0xe4
 802f51e:	f884 b0e6 	strb.w	fp, [r4, #230]	; 0xe6
 802f522:	b116      	cbz	r6, 802f52a <MessageManager::popReceivedMessage(unsigned char*, unsigned short, unsigned short*)+0xee>
 802f524:	f80a 3b01 	strb.w	r3, [sl], #1
 802f528:	4656      	mov	r6, sl
 802f52a:	f10e 0e01 	add.w	lr, lr, #1
 802f52e:	fa1f fe8e 	uxth.w	lr, lr
 802f532:	3001      	adds	r0, #1
 802f534:	b283      	uxth	r3, r0
 802f536:	4598      	cmp	r8, r3
 802f538:	f240 80b2 	bls.w	802f6a0 <MessageManager::popReceivedMessage(unsigned char*, unsigned short, unsigned short*)+0x264>
 802f53c:	f8b4 90e2 	ldrh.w	r9, [r4, #226]	; 0xe2
 802f540:	f8b4 30e4 	ldrh.w	r3, [r4, #228]	; 0xe4
 802f544:	454b      	cmp	r3, r9
 802f546:	f103 0101 	add.w	r1, r3, #1
 802f54a:	46b2      	mov	sl, r6
 802f54c:	d1dc      	bne.n	802f508 <MessageManager::popReceivedMessage(unsigned char*, unsigned short, unsigned short*)+0xcc>
 802f54e:	f894 c0e6 	ldrb.w	ip, [r4, #230]	; 0xe6
 802f552:	4632      	mov	r2, r6
 802f554:	f1bc 0f00 	cmp.w	ip, #0
 802f558:	d1d6      	bne.n	802f508 <MessageManager::popReceivedMessage(unsigned char*, unsigned short, unsigned short*)+0xcc>
 802f55a:	f802 cb01 	strb.w	ip, [r2], #1
 802f55e:	4616      	mov	r6, r2
 802f560:	e7e7      	b.n	802f532 <MessageManager::popReceivedMessage(unsigned char*, unsigned short, unsigned short*)+0xf6>
 802f562:	4868      	ldr	r0, [pc, #416]	; (802f704 <MessageManager::popReceivedMessage(unsigned char*, unsigned short, unsigned short*)+0x2c8>)
 802f564:	212f      	movs	r1, #47	; 0x2f
 802f566:	f00f fefa 	bl	803f35e <strrchr>
 802f56a:	2800      	cmp	r0, #0
 802f56c:	d04d      	beq.n	802f60a <MessageManager::popReceivedMessage(unsigned char*, unsigned short, unsigned short*)+0x1ce>
 802f56e:	212f      	movs	r1, #47	; 0x2f
 802f570:	4864      	ldr	r0, [pc, #400]	; (802f704 <MessageManager::popReceivedMessage(unsigned char*, unsigned short, unsigned short*)+0x2c8>)
 802f572:	f00f fef4 	bl	803f35e <strrchr>
 802f576:	1c41      	adds	r1, r0, #1
 802f578:	3484      	adds	r4, #132	; 0x84
 802f57a:	9400      	str	r4, [sp, #0]
 802f57c:	4b62      	ldr	r3, [pc, #392]	; (802f708 <MessageManager::popReceivedMessage(unsigned char*, unsigned short, unsigned short*)+0x2cc>)
 802f57e:	2291      	movs	r2, #145	; 0x91
 802f580:	2001      	movs	r0, #1
 802f582:	f7f3 f909 	bl	8022798 <DEBUG_logMsg>
 802f586:	2400      	movs	r4, #0
 802f588:	4620      	mov	r0, r4
 802f58a:	b007      	add	sp, #28
 802f58c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802f590:	485c      	ldr	r0, [pc, #368]	; (802f704 <MessageManager::popReceivedMessage(unsigned char*, unsigned short, unsigned short*)+0x2c8>)
 802f592:	212f      	movs	r1, #47	; 0x2f
 802f594:	f00f fee3 	bl	803f35e <strrchr>
 802f598:	2800      	cmp	r0, #0
 802f59a:	f000 80a1 	beq.w	802f6e0 <MessageManager::popReceivedMessage(unsigned char*, unsigned short, unsigned short*)+0x2a4>
 802f59e:	212f      	movs	r1, #47	; 0x2f
 802f5a0:	4858      	ldr	r0, [pc, #352]	; (802f704 <MessageManager::popReceivedMessage(unsigned char*, unsigned short, unsigned short*)+0x2c8>)
 802f5a2:	f00f fedc 	bl	803f35e <strrchr>
 802f5a6:	1c41      	adds	r1, r0, #1
 802f5a8:	4b58      	ldr	r3, [pc, #352]	; (802f70c <MessageManager::popReceivedMessage(unsigned char*, unsigned short, unsigned short*)+0x2d0>)
 802f5aa:	2000      	movs	r0, #0
 802f5ac:	22b2      	movs	r2, #178	; 0xb2
 802f5ae:	f7f3 f8f3 	bl	8022798 <DEBUG_logMsg>
 802f5b2:	f8b4 00e2 	ldrh.w	r0, [r4, #226]	; 0xe2
 802f5b6:	f8b4 30e4 	ldrh.w	r3, [r4, #228]	; 0xe4
 802f5ba:	4298      	cmp	r0, r3
 802f5bc:	f000 808a 	beq.w	802f6d4 <MessageManager::popReceivedMessage(unsigned char*, unsigned short, unsigned short*)+0x298>
 802f5c0:	f8b4 10e0 	ldrh.w	r1, [r4, #224]	; 0xe0
 802f5c4:	1c5a      	adds	r2, r3, #1
 802f5c6:	fbb2 f3f1 	udiv	r3, r2, r1
 802f5ca:	fb01 2313 	mls	r3, r1, r3, r2
 802f5ce:	b29b      	uxth	r3, r3
 802f5d0:	2600      	movs	r6, #0
 802f5d2:	f8a4 30e4 	strh.w	r3, [r4, #228]	; 0xe4
 802f5d6:	f884 60e6 	strb.w	r6, [r4, #230]	; 0xe6
 802f5da:	e008      	b.n	802f5ee <MessageManager::popReceivedMessage(unsigned char*, unsigned short, unsigned short*)+0x1b2>
 802f5dc:	fbb2 f3f1 	udiv	r3, r2, r1
 802f5e0:	fb01 2313 	mls	r3, r1, r3, r2
 802f5e4:	b29b      	uxth	r3, r3
 802f5e6:	f884 60e6 	strb.w	r6, [r4, #230]	; 0xe6
 802f5ea:	f8a4 30e4 	strh.w	r3, [r4, #228]	; 0xe4
 802f5ee:	4283      	cmp	r3, r0
 802f5f0:	f103 0201 	add.w	r2, r3, #1
 802f5f4:	d1f2      	bne.n	802f5dc <MessageManager::popReceivedMessage(unsigned char*, unsigned short, unsigned short*)+0x1a0>
 802f5f6:	f894 30e6 	ldrb.w	r3, [r4, #230]	; 0xe6
 802f5fa:	2b00      	cmp	r3, #0
 802f5fc:	d1ee      	bne.n	802f5dc <MessageManager::popReceivedMessage(unsigned char*, unsigned short, unsigned short*)+0x1a0>
 802f5fe:	9b02      	ldr	r3, [sp, #8]
 802f600:	2400      	movs	r4, #0
 802f602:	2b00      	cmp	r3, #0
 802f604:	f47f af64 	bne.w	802f4d0 <MessageManager::popReceivedMessage(unsigned char*, unsigned short, unsigned short*)+0x94>
 802f608:	e764      	b.n	802f4d4 <MessageManager::popReceivedMessage(unsigned char*, unsigned short, unsigned short*)+0x98>
 802f60a:	483e      	ldr	r0, [pc, #248]	; (802f704 <MessageManager::popReceivedMessage(unsigned char*, unsigned short, unsigned short*)+0x2c8>)
 802f60c:	215c      	movs	r1, #92	; 0x5c
 802f60e:	f00f fea6 	bl	803f35e <strrchr>
 802f612:	2800      	cmp	r0, #0
 802f614:	d05c      	beq.n	802f6d0 <MessageManager::popReceivedMessage(unsigned char*, unsigned short, unsigned short*)+0x294>
 802f616:	215c      	movs	r1, #92	; 0x5c
 802f618:	483a      	ldr	r0, [pc, #232]	; (802f704 <MessageManager::popReceivedMessage(unsigned char*, unsigned short, unsigned short*)+0x2c8>)
 802f61a:	f00f fea0 	bl	803f35e <strrchr>
 802f61e:	1c41      	adds	r1, r0, #1
 802f620:	e7aa      	b.n	802f578 <MessageManager::popReceivedMessage(unsigned char*, unsigned short, unsigned short*)+0x13c>
 802f622:	f1b8 0f00 	cmp.w	r8, #0
 802f626:	d028      	beq.n	802f67a <MessageManager::popReceivedMessage(unsigned char*, unsigned short, unsigned short*)+0x23e>
 802f628:	462e      	mov	r6, r5
 802f62a:	46ab      	mov	fp, r5
 802f62c:	e014      	b.n	802f658 <MessageManager::popReceivedMessage(unsigned char*, unsigned short, unsigned short*)+0x21c>
 802f62e:	f8b4 c0e0 	ldrh.w	ip, [r4, #224]	; 0xe0
 802f632:	fbb1 f2fc 	udiv	r2, r1, ip
 802f636:	fb0c 1212 	mls	r2, ip, r2, r1
 802f63a:	f8d4 10dc 	ldr.w	r1, [r4, #220]	; 0xdc
 802f63e:	5ccb      	ldrb	r3, [r1, r3]
 802f640:	f8a4 20e4 	strh.w	r2, [r4, #228]	; 0xe4
 802f644:	f884 b0e6 	strb.w	fp, [r4, #230]	; 0xe6
 802f648:	b116      	cbz	r6, 802f650 <MessageManager::popReceivedMessage(unsigned char*, unsigned short, unsigned short*)+0x214>
 802f64a:	f80e 3b01 	strb.w	r3, [lr], #1
 802f64e:	4676      	mov	r6, lr
 802f650:	3001      	adds	r0, #1
 802f652:	b283      	uxth	r3, r0
 802f654:	4598      	cmp	r8, r3
 802f656:	d910      	bls.n	802f67a <MessageManager::popReceivedMessage(unsigned char*, unsigned short, unsigned short*)+0x23e>
 802f658:	f8b4 30e4 	ldrh.w	r3, [r4, #228]	; 0xe4
 802f65c:	4599      	cmp	r9, r3
 802f65e:	f103 0101 	add.w	r1, r3, #1
 802f662:	46b6      	mov	lr, r6
 802f664:	d1e3      	bne.n	802f62e <MessageManager::popReceivedMessage(unsigned char*, unsigned short, unsigned short*)+0x1f2>
 802f666:	f894 c0e6 	ldrb.w	ip, [r4, #230]	; 0xe6
 802f66a:	4632      	mov	r2, r6
 802f66c:	f1bc 0f00 	cmp.w	ip, #0
 802f670:	d1dd      	bne.n	802f62e <MessageManager::popReceivedMessage(unsigned char*, unsigned short, unsigned short*)+0x1f2>
 802f672:	f802 cb01 	strb.w	ip, [r2], #1
 802f676:	4616      	mov	r6, r2
 802f678:	e7ea      	b.n	802f650 <MessageManager::popReceivedMessage(unsigned char*, unsigned short, unsigned short*)+0x214>
 802f67a:	4822      	ldr	r0, [pc, #136]	; (802f704 <MessageManager::popReceivedMessage(unsigned char*, unsigned short, unsigned short*)+0x2c8>)
 802f67c:	212f      	movs	r1, #47	; 0x2f
 802f67e:	f00f fe6e 	bl	803f35e <strrchr>
 802f682:	b1d0      	cbz	r0, 802f6ba <MessageManager::popReceivedMessage(unsigned char*, unsigned short, unsigned short*)+0x27e>
 802f684:	212f      	movs	r1, #47	; 0x2f
 802f686:	481f      	ldr	r0, [pc, #124]	; (802f704 <MessageManager::popReceivedMessage(unsigned char*, unsigned short, unsigned short*)+0x2c8>)
 802f688:	f00f fe69 	bl	803f35e <strrchr>
 802f68c:	1c41      	adds	r1, r0, #1
 802f68e:	9b03      	ldr	r3, [sp, #12]
 802f690:	22ac      	movs	r2, #172	; 0xac
 802f692:	e9cd 8300 	strd	r8, r3, [sp]
 802f696:	2000      	movs	r0, #0
 802f698:	4b1d      	ldr	r3, [pc, #116]	; (802f710 <MessageManager::popReceivedMessage(unsigned char*, unsigned short, unsigned short*)+0x2d4>)
 802f69a:	f7f3 f87d 	bl	8022798 <DEBUG_logMsg>
 802f69e:	e714      	b.n	802f4ca <MessageManager::popReceivedMessage(unsigned char*, unsigned short, unsigned short*)+0x8e>
 802f6a0:	45f0      	cmp	r8, lr
 802f6a2:	f47f af12 	bne.w	802f4ca <MessageManager::popReceivedMessage(unsigned char*, unsigned short, unsigned short*)+0x8e>
 802f6a6:	f8b4 3122 	ldrh.w	r3, [r4, #290]	; 0x122
 802f6aa:	3b01      	subs	r3, #1
 802f6ac:	f8a4 3122 	strh.w	r3, [r4, #290]	; 0x122
 802f6b0:	9b02      	ldr	r3, [sp, #8]
 802f6b2:	b323      	cbz	r3, 802f6fe <MessageManager::popReceivedMessage(unsigned char*, unsigned short, unsigned short*)+0x2c2>
 802f6b4:	4645      	mov	r5, r8
 802f6b6:	2401      	movs	r4, #1
 802f6b8:	e70a      	b.n	802f4d0 <MessageManager::popReceivedMessage(unsigned char*, unsigned short, unsigned short*)+0x94>
 802f6ba:	4812      	ldr	r0, [pc, #72]	; (802f704 <MessageManager::popReceivedMessage(unsigned char*, unsigned short, unsigned short*)+0x2c8>)
 802f6bc:	215c      	movs	r1, #92	; 0x5c
 802f6be:	f00f fe4e 	bl	803f35e <strrchr>
 802f6c2:	b1d0      	cbz	r0, 802f6fa <MessageManager::popReceivedMessage(unsigned char*, unsigned short, unsigned short*)+0x2be>
 802f6c4:	215c      	movs	r1, #92	; 0x5c
 802f6c6:	480f      	ldr	r0, [pc, #60]	; (802f704 <MessageManager::popReceivedMessage(unsigned char*, unsigned short, unsigned short*)+0x2c8>)
 802f6c8:	f00f fe49 	bl	803f35e <strrchr>
 802f6cc:	1c41      	adds	r1, r0, #1
 802f6ce:	e7de      	b.n	802f68e <MessageManager::popReceivedMessage(unsigned char*, unsigned short, unsigned short*)+0x252>
 802f6d0:	490c      	ldr	r1, [pc, #48]	; (802f704 <MessageManager::popReceivedMessage(unsigned char*, unsigned short, unsigned short*)+0x2c8>)
 802f6d2:	e751      	b.n	802f578 <MessageManager::popReceivedMessage(unsigned char*, unsigned short, unsigned short*)+0x13c>
 802f6d4:	f894 20e6 	ldrb.w	r2, [r4, #230]	; 0xe6
 802f6d8:	2a00      	cmp	r2, #0
 802f6da:	f43f aef6 	beq.w	802f4ca <MessageManager::popReceivedMessage(unsigned char*, unsigned short, unsigned short*)+0x8e>
 802f6de:	e76f      	b.n	802f5c0 <MessageManager::popReceivedMessage(unsigned char*, unsigned short, unsigned short*)+0x184>
 802f6e0:	4808      	ldr	r0, [pc, #32]	; (802f704 <MessageManager::popReceivedMessage(unsigned char*, unsigned short, unsigned short*)+0x2c8>)
 802f6e2:	215c      	movs	r1, #92	; 0x5c
 802f6e4:	f00f fe3b 	bl	803f35e <strrchr>
 802f6e8:	b128      	cbz	r0, 802f6f6 <MessageManager::popReceivedMessage(unsigned char*, unsigned short, unsigned short*)+0x2ba>
 802f6ea:	215c      	movs	r1, #92	; 0x5c
 802f6ec:	4805      	ldr	r0, [pc, #20]	; (802f704 <MessageManager::popReceivedMessage(unsigned char*, unsigned short, unsigned short*)+0x2c8>)
 802f6ee:	f00f fe36 	bl	803f35e <strrchr>
 802f6f2:	1c41      	adds	r1, r0, #1
 802f6f4:	e758      	b.n	802f5a8 <MessageManager::popReceivedMessage(unsigned char*, unsigned short, unsigned short*)+0x16c>
 802f6f6:	4903      	ldr	r1, [pc, #12]	; (802f704 <MessageManager::popReceivedMessage(unsigned char*, unsigned short, unsigned short*)+0x2c8>)
 802f6f8:	e756      	b.n	802f5a8 <MessageManager::popReceivedMessage(unsigned char*, unsigned short, unsigned short*)+0x16c>
 802f6fa:	4902      	ldr	r1, [pc, #8]	; (802f704 <MessageManager::popReceivedMessage(unsigned char*, unsigned short, unsigned short*)+0x2c8>)
 802f6fc:	e7c7      	b.n	802f68e <MessageManager::popReceivedMessage(unsigned char*, unsigned short, unsigned short*)+0x252>
 802f6fe:	2401      	movs	r4, #1
 802f700:	e6e8      	b.n	802f4d4 <MessageManager::popReceivedMessage(unsigned char*, unsigned short, unsigned short*)+0x98>
 802f702:	bf00      	nop
 802f704:	08047758 	.word	0x08047758
 802f708:	08047798 	.word	0x08047798
 802f70c:	080477f4 	.word	0x080477f4
 802f710:	080477b0 	.word	0x080477b0

0802f714 <MessageManager::pushReceivedMessage(unsigned char*, unsigned short)>:
 802f714:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802f718:	4688      	mov	r8, r1
 802f71a:	b085      	sub	sp, #20
 802f71c:	2900      	cmp	r1, #0
 802f71e:	d03b      	beq.n	802f798 <MessageManager::pushReceivedMessage(unsigned char*, unsigned short)+0x84>
 802f720:	f500 77e4 	add.w	r7, r0, #456	; 0x1c8
 802f724:	4604      	mov	r4, r0
 802f726:	214b      	movs	r1, #75	; 0x4b
 802f728:	4638      	mov	r0, r7
 802f72a:	4616      	mov	r6, r2
 802f72c:	f009 ff9c 	bl	8039668 <_tx_mutex_get>
 802f730:	2800      	cmp	r0, #0
 802f732:	f040 8083 	bne.w	802f83c <MessageManager::pushReceivedMessage(unsigned char*, unsigned short)+0x128>
 802f736:	f64b 0341 	movw	r3, #47169	; 0xb841
 802f73a:	f8ad 600e 	strh.w	r6, [sp, #14]
 802f73e:	f8ad 300c 	strh.w	r3, [sp, #12]
 802f742:	f10d 090d 	add.w	r9, sp, #13
 802f746:	2503      	movs	r5, #3
 802f748:	2241      	movs	r2, #65	; 0x41
 802f74a:	f04f 0b01 	mov.w	fp, #1
 802f74e:	f64f 7aff 	movw	sl, #65535	; 0xffff
 802f752:	e01a      	b.n	802f78a <MessageManager::pushReceivedMessage(unsigned char*, unsigned short)+0x76>
 802f754:	f8b4 10e2 	ldrh.w	r1, [r4, #226]	; 0xe2
 802f758:	f8d4 30dc 	ldr.w	r3, [r4, #220]	; 0xdc
 802f75c:	545a      	strb	r2, [r3, r1]
 802f75e:	f8b4 30e2 	ldrh.w	r3, [r4, #226]	; 0xe2
 802f762:	f8b4 00e0 	ldrh.w	r0, [r4, #224]	; 0xe0
 802f766:	f8b4 10e4 	ldrh.w	r1, [r4, #228]	; 0xe4
 802f76a:	1c5a      	adds	r2, r3, #1
 802f76c:	fbb2 f3f0 	udiv	r3, r2, r0
 802f770:	fb00 2313 	mls	r3, r0, r3, r2
 802f774:	b29b      	uxth	r3, r3
 802f776:	4299      	cmp	r1, r3
 802f778:	f8a4 30e2 	strh.w	r3, [r4, #226]	; 0xe2
 802f77c:	d010      	beq.n	802f7a0 <MessageManager::pushReceivedMessage(unsigned char*, unsigned short)+0x8c>
 802f77e:	3d01      	subs	r5, #1
 802f780:	b2ad      	uxth	r5, r5
 802f782:	4555      	cmp	r5, sl
 802f784:	d019      	beq.n	802f7ba <MessageManager::pushReceivedMessage(unsigned char*, unsigned short)+0xa6>
 802f786:	f819 2b01 	ldrb.w	r2, [r9], #1
 802f78a:	f894 30e6 	ldrb.w	r3, [r4, #230]	; 0xe6
 802f78e:	2b00      	cmp	r3, #0
 802f790:	d0e0      	beq.n	802f754 <MessageManager::pushReceivedMessage(unsigned char*, unsigned short)+0x40>
 802f792:	4638      	mov	r0, r7
 802f794:	f00a f8de 	bl	8039954 <_tx_mutex_put>
 802f798:	2000      	movs	r0, #0
 802f79a:	b005      	add	sp, #20
 802f79c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802f7a0:	f8d4 30e8 	ldr.w	r3, [r4, #232]	; 0xe8
 802f7a4:	f884 b0e6 	strb.w	fp, [r4, #230]	; 0xe6
 802f7a8:	2b00      	cmp	r3, #0
 802f7aa:	d0e8      	beq.n	802f77e <MessageManager::pushReceivedMessage(unsigned char*, unsigned short)+0x6a>
 802f7ac:	3d01      	subs	r5, #1
 802f7ae:	f8d4 00ec 	ldr.w	r0, [r4, #236]	; 0xec
 802f7b2:	b2ad      	uxth	r5, r5
 802f7b4:	4798      	blx	r3
 802f7b6:	4555      	cmp	r5, sl
 802f7b8:	d1e5      	bne.n	802f786 <MessageManager::pushReceivedMessage(unsigned char*, unsigned short)+0x72>
 802f7ba:	b326      	cbz	r6, 802f806 <MessageManager::pushReceivedMessage(unsigned char*, unsigned short)+0xf2>
 802f7bc:	f108 38ff 	add.w	r8, r8, #4294967295
 802f7c0:	46c1      	mov	r9, r8
 802f7c2:	2501      	movs	r5, #1
 802f7c4:	f894 30e6 	ldrb.w	r3, [r4, #230]	; 0xe6
 802f7c8:	2b00      	cmp	r3, #0
 802f7ca:	d1e2      	bne.n	802f792 <MessageManager::pushReceivedMessage(unsigned char*, unsigned short)+0x7e>
 802f7cc:	f8b4 30e2 	ldrh.w	r3, [r4, #226]	; 0xe2
 802f7d0:	f8d4 20dc 	ldr.w	r2, [r4, #220]	; 0xdc
 802f7d4:	f819 1f01 	ldrb.w	r1, [r9, #1]!
 802f7d8:	54d1      	strb	r1, [r2, r3]
 802f7da:	f8b4 20e2 	ldrh.w	r2, [r4, #226]	; 0xe2
 802f7de:	f8b4 10e0 	ldrh.w	r1, [r4, #224]	; 0xe0
 802f7e2:	f8b4 00e4 	ldrh.w	r0, [r4, #228]	; 0xe4
 802f7e6:	1c53      	adds	r3, r2, #1
 802f7e8:	fbb3 f2f1 	udiv	r2, r3, r1
 802f7ec:	fb01 3212 	mls	r2, r1, r2, r3
 802f7f0:	b292      	uxth	r2, r2
 802f7f2:	eba6 0309 	sub.w	r3, r6, r9
 802f7f6:	4290      	cmp	r0, r2
 802f7f8:	f8a4 20e2 	strh.w	r2, [r4, #226]	; 0xe2
 802f7fc:	4443      	add	r3, r8
 802f7fe:	d011      	beq.n	802f824 <MessageManager::pushReceivedMessage(unsigned char*, unsigned short)+0x110>
 802f800:	b29b      	uxth	r3, r3
 802f802:	2b00      	cmp	r3, #0
 802f804:	d1de      	bne.n	802f7c4 <MessageManager::pushReceivedMessage(unsigned char*, unsigned short)+0xb0>
 802f806:	f8b4 3122 	ldrh.w	r3, [r4, #290]	; 0x122
 802f80a:	f8d4 20cc 	ldr.w	r2, [r4, #204]	; 0xcc
 802f80e:	3301      	adds	r3, #1
 802f810:	f8a4 3122 	strh.w	r3, [r4, #290]	; 0x122
 802f814:	4790      	blx	r2
 802f816:	4638      	mov	r0, r7
 802f818:	f00a f89c 	bl	8039954 <_tx_mutex_put>
 802f81c:	2001      	movs	r0, #1
 802f81e:	b005      	add	sp, #20
 802f820:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802f824:	f8d4 30e8 	ldr.w	r3, [r4, #232]	; 0xe8
 802f828:	f884 50e6 	strb.w	r5, [r4, #230]	; 0xe6
 802f82c:	b113      	cbz	r3, 802f834 <MessageManager::pushReceivedMessage(unsigned char*, unsigned short)+0x120>
 802f82e:	f8d4 00ec 	ldr.w	r0, [r4, #236]	; 0xec
 802f832:	4798      	blx	r3
 802f834:	eba6 0309 	sub.w	r3, r6, r9
 802f838:	4443      	add	r3, r8
 802f83a:	e7e1      	b.n	802f800 <MessageManager::pushReceivedMessage(unsigned char*, unsigned short)+0xec>
 802f83c:	4810      	ldr	r0, [pc, #64]	; (802f880 <MessageManager::pushReceivedMessage(unsigned char*, unsigned short)+0x16c>)
 802f83e:	212f      	movs	r1, #47	; 0x2f
 802f840:	f00f fd8d 	bl	803f35e <strrchr>
 802f844:	b178      	cbz	r0, 802f866 <MessageManager::pushReceivedMessage(unsigned char*, unsigned short)+0x152>
 802f846:	212f      	movs	r1, #47	; 0x2f
 802f848:	480d      	ldr	r0, [pc, #52]	; (802f880 <MessageManager::pushReceivedMessage(unsigned char*, unsigned short)+0x16c>)
 802f84a:	f00f fd88 	bl	803f35e <strrchr>
 802f84e:	1c41      	adds	r1, r0, #1
 802f850:	3484      	adds	r4, #132	; 0x84
 802f852:	4b0c      	ldr	r3, [pc, #48]	; (802f884 <MessageManager::pushReceivedMessage(unsigned char*, unsigned short)+0x170>)
 802f854:	9400      	str	r4, [sp, #0]
 802f856:	22d5      	movs	r2, #213	; 0xd5
 802f858:	2001      	movs	r0, #1
 802f85a:	f7f2 ff9d 	bl	8022798 <DEBUG_logMsg>
 802f85e:	2000      	movs	r0, #0
 802f860:	b005      	add	sp, #20
 802f862:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802f866:	4806      	ldr	r0, [pc, #24]	; (802f880 <MessageManager::pushReceivedMessage(unsigned char*, unsigned short)+0x16c>)
 802f868:	215c      	movs	r1, #92	; 0x5c
 802f86a:	f00f fd78 	bl	803f35e <strrchr>
 802f86e:	b128      	cbz	r0, 802f87c <MessageManager::pushReceivedMessage(unsigned char*, unsigned short)+0x168>
 802f870:	215c      	movs	r1, #92	; 0x5c
 802f872:	4803      	ldr	r0, [pc, #12]	; (802f880 <MessageManager::pushReceivedMessage(unsigned char*, unsigned short)+0x16c>)
 802f874:	f00f fd73 	bl	803f35e <strrchr>
 802f878:	1c41      	adds	r1, r0, #1
 802f87a:	e7e9      	b.n	802f850 <MessageManager::pushReceivedMessage(unsigned char*, unsigned short)+0x13c>
 802f87c:	4900      	ldr	r1, [pc, #0]	; (802f880 <MessageManager::pushReceivedMessage(unsigned char*, unsigned short)+0x16c>)
 802f87e:	e7e7      	b.n	802f850 <MessageManager::pushReceivedMessage(unsigned char*, unsigned short)+0x13c>
 802f880:	08047758 	.word	0x08047758
 802f884:	08047798 	.word	0x08047798

0802f888 <MessageManager::pushSendMessage(unsigned char*, unsigned short, TX_MUTEX_STRUCT*, RingBuffer<unsigned char>*)>:
 802f888:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 802f88c:	b082      	sub	sp, #8
 802f88e:	460d      	mov	r5, r1
 802f890:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 802f892:	2900      	cmp	r1, #0
 802f894:	d05d      	beq.n	802f952 <MessageManager::pushSendMessage(unsigned char*, unsigned short, TX_MUTEX_STRUCT*, RingBuffer<unsigned char>*)+0xca>
 802f896:	4698      	mov	r8, r3
 802f898:	f890 3124 	ldrb.w	r3, [r0, #292]	; 0x124
 802f89c:	4681      	mov	r9, r0
 802f89e:	2b00      	cmp	r3, #0
 802f8a0:	d142      	bne.n	802f928 <MessageManager::pushSendMessage(unsigned char*, unsigned short, TX_MUTEX_STRUCT*, RingBuffer<unsigned char>*)+0xa0>
 802f8a2:	214b      	movs	r1, #75	; 0x4b
 802f8a4:	4640      	mov	r0, r8
 802f8a6:	4617      	mov	r7, r2
 802f8a8:	f009 fede 	bl	8039668 <_tx_mutex_get>
 802f8ac:	2800      	cmp	r0, #0
 802f8ae:	d13d      	bne.n	802f92c <MessageManager::pushSendMessage(unsigned char*, unsigned short, TX_MUTEX_STRUCT*, RingBuffer<unsigned char>*)+0xa4>
 802f8b0:	b1df      	cbz	r7, 802f8ea <MessageManager::pushSendMessage(unsigned char*, unsigned short, TX_MUTEX_STRUCT*, RingBuffer<unsigned char>*)+0x62>
 802f8b2:	3d01      	subs	r5, #1
 802f8b4:	462e      	mov	r6, r5
 802f8b6:	f04f 0a01 	mov.w	sl, #1
 802f8ba:	7aa3      	ldrb	r3, [r4, #10]
 802f8bc:	bb23      	cbnz	r3, 802f908 <MessageManager::pushSendMessage(unsigned char*, unsigned short, TX_MUTEX_STRUCT*, RingBuffer<unsigned char>*)+0x80>
 802f8be:	88e2      	ldrh	r2, [r4, #6]
 802f8c0:	6823      	ldr	r3, [r4, #0]
 802f8c2:	f816 1f01 	ldrb.w	r1, [r6, #1]!
 802f8c6:	5499      	strb	r1, [r3, r2]
 802f8c8:	88e3      	ldrh	r3, [r4, #6]
 802f8ca:	88a1      	ldrh	r1, [r4, #4]
 802f8cc:	8920      	ldrh	r0, [r4, #8]
 802f8ce:	1c5a      	adds	r2, r3, #1
 802f8d0:	fbb2 f3f1 	udiv	r3, r2, r1
 802f8d4:	fb01 2313 	mls	r3, r1, r3, r2
 802f8d8:	b29b      	uxth	r3, r3
 802f8da:	1bb9      	subs	r1, r7, r6
 802f8dc:	4298      	cmp	r0, r3
 802f8de:	80e3      	strh	r3, [r4, #6]
 802f8e0:	4429      	add	r1, r5
 802f8e2:	d018      	beq.n	802f916 <MessageManager::pushSendMessage(unsigned char*, unsigned short, TX_MUTEX_STRUCT*, RingBuffer<unsigned char>*)+0x8e>
 802f8e4:	b289      	uxth	r1, r1
 802f8e6:	2900      	cmp	r1, #0
 802f8e8:	d1e7      	bne.n	802f8ba <MessageManager::pushSendMessage(unsigned char*, unsigned short, TX_MUTEX_STRUCT*, RingBuffer<unsigned char>*)+0x32>
 802f8ea:	f8b9 3120 	ldrh.w	r3, [r9, #288]	; 0x120
 802f8ee:	f8d9 20d0 	ldr.w	r2, [r9, #208]	; 0xd0
 802f8f2:	3301      	adds	r3, #1
 802f8f4:	f8a9 3120 	strh.w	r3, [r9, #288]	; 0x120
 802f8f8:	4790      	blx	r2
 802f8fa:	4640      	mov	r0, r8
 802f8fc:	f00a f82a 	bl	8039954 <_tx_mutex_put>
 802f900:	2001      	movs	r0, #1
 802f902:	b002      	add	sp, #8
 802f904:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802f908:	4640      	mov	r0, r8
 802f90a:	f00a f823 	bl	8039954 <_tx_mutex_put>
 802f90e:	2000      	movs	r0, #0
 802f910:	b002      	add	sp, #8
 802f912:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802f916:	68e3      	ldr	r3, [r4, #12]
 802f918:	f884 a00a 	strb.w	sl, [r4, #10]
 802f91c:	b10b      	cbz	r3, 802f922 <MessageManager::pushSendMessage(unsigned char*, unsigned short, TX_MUTEX_STRUCT*, RingBuffer<unsigned char>*)+0x9a>
 802f91e:	6920      	ldr	r0, [r4, #16]
 802f920:	4798      	blx	r3
 802f922:	1bb9      	subs	r1, r7, r6
 802f924:	4429      	add	r1, r5
 802f926:	e7dd      	b.n	802f8e4 <MessageManager::pushSendMessage(unsigned char*, unsigned short, TX_MUTEX_STRUCT*, RingBuffer<unsigned char>*)+0x5c>
 802f928:	2002      	movs	r0, #2
 802f92a:	e7ea      	b.n	802f902 <MessageManager::pushSendMessage(unsigned char*, unsigned short, TX_MUTEX_STRUCT*, RingBuffer<unsigned char>*)+0x7a>
 802f92c:	4810      	ldr	r0, [pc, #64]	; (802f970 <MessageManager::pushSendMessage(unsigned char*, unsigned short, TX_MUTEX_STRUCT*, RingBuffer<unsigned char>*)+0xe8>)
 802f92e:	212f      	movs	r1, #47	; 0x2f
 802f930:	f00f fd15 	bl	803f35e <strrchr>
 802f934:	b178      	cbz	r0, 802f956 <MessageManager::pushSendMessage(unsigned char*, unsigned short, TX_MUTEX_STRUCT*, RingBuffer<unsigned char>*)+0xce>
 802f936:	212f      	movs	r1, #47	; 0x2f
 802f938:	480d      	ldr	r0, [pc, #52]	; (802f970 <MessageManager::pushSendMessage(unsigned char*, unsigned short, TX_MUTEX_STRUCT*, RingBuffer<unsigned char>*)+0xe8>)
 802f93a:	f00f fd10 	bl	803f35e <strrchr>
 802f93e:	1c41      	adds	r1, r0, #1
 802f940:	f8d8 3004 	ldr.w	r3, [r8, #4]
 802f944:	9300      	str	r3, [sp, #0]
 802f946:	f44f 7285 	mov.w	r2, #266	; 0x10a
 802f94a:	4b0a      	ldr	r3, [pc, #40]	; (802f974 <MessageManager::pushSendMessage(unsigned char*, unsigned short, TX_MUTEX_STRUCT*, RingBuffer<unsigned char>*)+0xec>)
 802f94c:	2001      	movs	r0, #1
 802f94e:	f7f2 ff23 	bl	8022798 <DEBUG_logMsg>
 802f952:	2000      	movs	r0, #0
 802f954:	e7d5      	b.n	802f902 <MessageManager::pushSendMessage(unsigned char*, unsigned short, TX_MUTEX_STRUCT*, RingBuffer<unsigned char>*)+0x7a>
 802f956:	4806      	ldr	r0, [pc, #24]	; (802f970 <MessageManager::pushSendMessage(unsigned char*, unsigned short, TX_MUTEX_STRUCT*, RingBuffer<unsigned char>*)+0xe8>)
 802f958:	215c      	movs	r1, #92	; 0x5c
 802f95a:	f00f fd00 	bl	803f35e <strrchr>
 802f95e:	b128      	cbz	r0, 802f96c <MessageManager::pushSendMessage(unsigned char*, unsigned short, TX_MUTEX_STRUCT*, RingBuffer<unsigned char>*)+0xe4>
 802f960:	215c      	movs	r1, #92	; 0x5c
 802f962:	4803      	ldr	r0, [pc, #12]	; (802f970 <MessageManager::pushSendMessage(unsigned char*, unsigned short, TX_MUTEX_STRUCT*, RingBuffer<unsigned char>*)+0xe8>)
 802f964:	f00f fcfb 	bl	803f35e <strrchr>
 802f968:	1c41      	adds	r1, r0, #1
 802f96a:	e7e9      	b.n	802f940 <MessageManager::pushSendMessage(unsigned char*, unsigned short, TX_MUTEX_STRUCT*, RingBuffer<unsigned char>*)+0xb8>
 802f96c:	4900      	ldr	r1, [pc, #0]	; (802f970 <MessageManager::pushSendMessage(unsigned char*, unsigned short, TX_MUTEX_STRUCT*, RingBuffer<unsigned char>*)+0xe8>)
 802f96e:	e7e7      	b.n	802f940 <MessageManager::pushSendMessage(unsigned char*, unsigned short, TX_MUTEX_STRUCT*, RingBuffer<unsigned char>*)+0xb8>
 802f970:	08047758 	.word	0x08047758
 802f974:	08047798 	.word	0x08047798

0802f978 <MessageManager::pushPrioritySendMessage(unsigned char*, unsigned short)>:
 802f978:	b5f0      	push	{r4, r5, r6, r7, lr}
 802f97a:	f8b0 70f6 	ldrh.w	r7, [r0, #246]	; 0xf6
 802f97e:	4604      	mov	r4, r0
 802f980:	f8b0 00f8 	ldrh.w	r0, [r0, #248]	; 0xf8
 802f984:	f8b4 30f4 	ldrh.w	r3, [r4, #244]	; 0xf4
 802f988:	4287      	cmp	r7, r0
 802f98a:	b083      	sub	sp, #12
 802f98c:	460e      	mov	r6, r1
 802f98e:	4615      	mov	r5, r2
 802f990:	d02b      	beq.n	802f9ea <MessageManager::pushPrioritySendMessage(unsigned char*, unsigned short)+0x72>
 802f992:	bf86      	itte	hi
 802f994:	1bc0      	subhi	r0, r0, r7
 802f996:	181b      	addhi	r3, r3, r0
 802f998:	1bc3      	subls	r3, r0, r7
 802f99a:	b29b      	uxth	r3, r3
 802f99c:	429d      	cmp	r5, r3
 802f99e:	d911      	bls.n	802f9c4 <MessageManager::pushPrioritySendMessage(unsigned char*, unsigned short)+0x4c>
 802f9a0:	f8d4 30d4 	ldr.w	r3, [r4, #212]	; 0xd4
 802f9a4:	4798      	blx	r3
 802f9a6:	f8b4 10f6 	ldrh.w	r1, [r4, #246]	; 0xf6
 802f9aa:	f8b4 30f8 	ldrh.w	r3, [r4, #248]	; 0xf8
 802f9ae:	f8b4 20f4 	ldrh.w	r2, [r4, #244]	; 0xf4
 802f9b2:	4299      	cmp	r1, r3
 802f9b4:	d012      	beq.n	802f9dc <MessageManager::pushPrioritySendMessage(unsigned char*, unsigned short)+0x64>
 802f9b6:	eba3 0301 	sub.w	r3, r3, r1
 802f9ba:	bf88      	it	hi
 802f9bc:	189b      	addhi	r3, r3, r2
 802f9be:	b29a      	uxth	r2, r3
 802f9c0:	4295      	cmp	r5, r2
 802f9c2:	d80f      	bhi.n	802f9e4 <MessageManager::pushPrioritySendMessage(unsigned char*, unsigned short)+0x6c>
 802f9c4:	f104 03f0 	add.w	r3, r4, #240	; 0xf0
 802f9c8:	9300      	str	r3, [sp, #0]
 802f9ca:	462a      	mov	r2, r5
 802f9cc:	4631      	mov	r1, r6
 802f9ce:	f504 7398 	add.w	r3, r4, #304	; 0x130
 802f9d2:	4620      	mov	r0, r4
 802f9d4:	f7ff ff58 	bl	802f888 <MessageManager::pushSendMessage(unsigned char*, unsigned short, TX_MUTEX_STRUCT*, RingBuffer<unsigned char>*)>
 802f9d8:	b003      	add	sp, #12
 802f9da:	bdf0      	pop	{r4, r5, r6, r7, pc}
 802f9dc:	f894 30fa 	ldrb.w	r3, [r4, #250]	; 0xfa
 802f9e0:	2b00      	cmp	r3, #0
 802f9e2:	d0ed      	beq.n	802f9c0 <MessageManager::pushPrioritySendMessage(unsigned char*, unsigned short)+0x48>
 802f9e4:	2000      	movs	r0, #0
 802f9e6:	b003      	add	sp, #12
 802f9e8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 802f9ea:	f894 20fa 	ldrb.w	r2, [r4, #250]	; 0xfa
 802f9ee:	2a00      	cmp	r2, #0
 802f9f0:	bf18      	it	ne
 802f9f2:	2300      	movne	r3, #0
 802f9f4:	e7d2      	b.n	802f99c <MessageManager::pushPrioritySendMessage(unsigned char*, unsigned short)+0x24>
 802f9f6:	bf00      	nop

0802f9f8 <MessageManager::pushStandardSendMessage(unsigned char*, unsigned short)>:
 802f9f8:	b530      	push	{r4, r5, lr}
 802f9fa:	f8b0 510a 	ldrh.w	r5, [r0, #266]	; 0x10a
 802f9fe:	f8b0 410c 	ldrh.w	r4, [r0, #268]	; 0x10c
 802fa02:	f8b0 3108 	ldrh.w	r3, [r0, #264]	; 0x108
 802fa06:	42a5      	cmp	r5, r4
 802fa08:	b083      	sub	sp, #12
 802fa0a:	d012      	beq.n	802fa32 <MessageManager::pushStandardSendMessage(unsigned char*, unsigned short)+0x3a>
 802fa0c:	bf86      	itte	hi
 802fa0e:	1b64      	subhi	r4, r4, r5
 802fa10:	191b      	addhi	r3, r3, r4
 802fa12:	1b63      	subls	r3, r4, r5
 802fa14:	b29b      	uxth	r3, r3
 802fa16:	429a      	cmp	r2, r3
 802fa18:	d902      	bls.n	802fa20 <MessageManager::pushStandardSendMessage(unsigned char*, unsigned short)+0x28>
 802fa1a:	2000      	movs	r0, #0
 802fa1c:	b003      	add	sp, #12
 802fa1e:	bd30      	pop	{r4, r5, pc}
 802fa20:	f500 7382 	add.w	r3, r0, #260	; 0x104
 802fa24:	9300      	str	r3, [sp, #0]
 802fa26:	f500 73be 	add.w	r3, r0, #380	; 0x17c
 802fa2a:	f7ff ff2d 	bl	802f888 <MessageManager::pushSendMessage(unsigned char*, unsigned short, TX_MUTEX_STRUCT*, RingBuffer<unsigned char>*)>
 802fa2e:	b003      	add	sp, #12
 802fa30:	bd30      	pop	{r4, r5, pc}
 802fa32:	f890 410e 	ldrb.w	r4, [r0, #270]	; 0x10e
 802fa36:	2c00      	cmp	r4, #0
 802fa38:	bf18      	it	ne
 802fa3a:	2300      	movne	r3, #0
 802fa3c:	e7eb      	b.n	802fa16 <MessageManager::pushStandardSendMessage(unsigned char*, unsigned short)+0x1e>
 802fa3e:	bf00      	nop

0802fa40 <MessageManager::numMessagesToReceive() const>:
 802fa40:	f8b0 0122 	ldrh.w	r0, [r0, #290]	; 0x122
 802fa44:	4770      	bx	lr
 802fa46:	bf00      	nop

0802fa48 <MessageManager::numMessagesToSend() const>:
 802fa48:	f8b0 0120 	ldrh.w	r0, [r0, #288]	; 0x120
 802fa4c:	4770      	bx	lr
 802fa4e:	bf00      	nop

0802fa50 <MessageManager::sendMessage()>:
 802fa50:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802fa54:	4606      	mov	r6, r0
 802fa56:	f8b0 0120 	ldrh.w	r0, [r0, #288]	; 0x120
 802fa5a:	b083      	sub	sp, #12
 802fa5c:	2800      	cmp	r0, #0
 802fa5e:	f000 80c0 	beq.w	802fbe2 <MessageManager::sendMessage()+0x192>
 802fa62:	f8b6 30f6 	ldrh.w	r3, [r6, #246]	; 0xf6
 802fa66:	f8b6 20f8 	ldrh.w	r2, [r6, #248]	; 0xf8
 802fa6a:	429a      	cmp	r2, r3
 802fa6c:	f106 04f0 	add.w	r4, r6, #240	; 0xf0
 802fa70:	f506 7798 	add.w	r7, r6, #304	; 0x130
 802fa74:	f000 80e7 	beq.w	802fc46 <MessageManager::sendMessage()+0x1f6>
 802fa78:	bf24      	itt	cs
 802fa7a:	f8b6 10f4 	ldrhcs.w	r1, [r6, #244]	; 0xf4
 802fa7e:	185b      	addcs	r3, r3, r1
 802fa80:	1a9b      	subs	r3, r3, r2
 802fa82:	b29b      	uxth	r3, r3
 802fa84:	2b08      	cmp	r3, #8
 802fa86:	d812      	bhi.n	802faae <MessageManager::sendMessage()+0x5e>
 802fa88:	f8b6 310a 	ldrh.w	r3, [r6, #266]	; 0x10a
 802fa8c:	f8b6 210c 	ldrh.w	r2, [r6, #268]	; 0x10c
 802fa90:	4293      	cmp	r3, r2
 802fa92:	f000 80e0 	beq.w	802fc56 <MessageManager::sendMessage()+0x206>
 802fa96:	bf9c      	itt	ls
 802fa98:	f8b6 1108 	ldrhls.w	r1, [r6, #264]	; 0x108
 802fa9c:	185b      	addls	r3, r3, r1
 802fa9e:	1a9b      	subs	r3, r3, r2
 802faa0:	b29b      	uxth	r3, r3
 802faa2:	2b08      	cmp	r3, #8
 802faa4:	bf84      	itt	hi
 802faa6:	f506 7482 	addhi.w	r4, r6, #260	; 0x104
 802faaa:	f506 77be 	addhi.w	r7, r6, #380	; 0x17c
 802faae:	214b      	movs	r1, #75	; 0x4b
 802fab0:	4638      	mov	r0, r7
 802fab2:	f009 fdd9 	bl	8039668 <_tx_mutex_get>
 802fab6:	2800      	cmp	r0, #0
 802fab8:	f040 8096 	bne.w	802fbe8 <MessageManager::sendMessage()+0x198>
 802fabc:	f8d6 1118 	ldr.w	r1, [r6, #280]	; 0x118
 802fac0:	4680      	mov	r8, r0
 802fac2:	2508      	movs	r5, #8
 802fac4:	e014      	b.n	802faf0 <MessageManager::sendMessage()+0xa0>
 802fac6:	f8b4 a004 	ldrh.w	sl, [r4, #4]
 802faca:	6822      	ldr	r2, [r4, #0]
 802facc:	fbb9 f3fa 	udiv	r3, r9, sl
 802fad0:	fb0a 9313 	mls	r3, sl, r3, r9
 802fad4:	f812 200e 	ldrb.w	r2, [r2, lr]
 802fad8:	8123      	strh	r3, [r4, #8]
 802fada:	f884 800a 	strb.w	r8, [r4, #10]
 802fade:	b111      	cbz	r1, 802fae6 <MessageManager::sendMessage()+0x96>
 802fae0:	f80c 2b01 	strb.w	r2, [ip], #1
 802fae4:	4661      	mov	r1, ip
 802fae6:	3d01      	subs	r5, #1
 802fae8:	3001      	adds	r0, #1
 802faea:	b2ad      	uxth	r5, r5
 802faec:	b280      	uxth	r0, r0
 802faee:	b195      	cbz	r5, 802fb16 <MessageManager::sendMessage()+0xc6>
 802faf0:	f8b4 e008 	ldrh.w	lr, [r4, #8]
 802faf4:	88e3      	ldrh	r3, [r4, #6]
 802faf6:	4573      	cmp	r3, lr
 802faf8:	f10e 0901 	add.w	r9, lr, #1
 802fafc:	468c      	mov	ip, r1
 802fafe:	d1e2      	bne.n	802fac6 <MessageManager::sendMessage()+0x76>
 802fb00:	7aa2      	ldrb	r2, [r4, #10]
 802fb02:	460b      	mov	r3, r1
 802fb04:	2a00      	cmp	r2, #0
 802fb06:	d1de      	bne.n	802fac6 <MessageManager::sendMessage()+0x76>
 802fb08:	f803 2b01 	strb.w	r2, [r3], #1
 802fb0c:	3d01      	subs	r5, #1
 802fb0e:	b2ad      	uxth	r5, r5
 802fb10:	4619      	mov	r1, r3
 802fb12:	2d00      	cmp	r5, #0
 802fb14:	d1ec      	bne.n	802faf0 <MessageManager::sendMessage()+0xa0>
 802fb16:	2808      	cmp	r0, #8
 802fb18:	d17a      	bne.n	802fc10 <MessageManager::sendMessage()+0x1c0>
 802fb1a:	f8d6 0118 	ldr.w	r0, [r6, #280]	; 0x118
 802fb1e:	f896 30c4 	ldrb.w	r3, [r6, #196]	; 0xc4
 802fb22:	8841      	ldrh	r1, [r0, #2]
 802fb24:	2b00      	cmp	r3, #0
 802fb26:	d17a      	bne.n	802fc1e <MessageManager::sendMessage()+0x1ce>
 802fb28:	f8b4 c006 	ldrh.w	ip, [r4, #6]
 802fb2c:	8922      	ldrh	r2, [r4, #8]
 802fb2e:	f1a1 0a06 	sub.w	sl, r1, #6
 802fb32:	4594      	cmp	ip, r2
 802fb34:	fa1f fa8a 	uxth.w	sl, sl
 802fb38:	f000 8095 	beq.w	802fc66 <MessageManager::sendMessage()+0x216>
 802fb3c:	bf9b      	ittet	ls
 802fb3e:	f8b4 e004 	ldrhls.w	lr, [r4, #4]
 802fb42:	44e6      	addls	lr, ip
 802fb44:	ebac 0e02 	subhi.w	lr, ip, r2
 802fb48:	ebae 0e02 	subls.w	lr, lr, r2
 802fb4c:	fa1f fe8e 	uxth.w	lr, lr
 802fb50:	45f2      	cmp	sl, lr
 802fb52:	d85d      	bhi.n	802fc10 <MessageManager::sendMessage()+0x1c0>
 802fb54:	f1ba 0f00 	cmp.w	sl, #0
 802fb58:	d030      	beq.n	802fbbc <MessageManager::sendMessage()+0x16c>
 802fb5a:	f100 0e0a 	add.w	lr, r0, #10
 802fb5e:	f1a1 0907 	sub.w	r9, r1, #7
 802fb62:	f100 0309 	add.w	r3, r0, #9
 802fb66:	fa1e f989 	uxtah	r9, lr, r9
 802fb6a:	f04f 0b00 	mov.w	fp, #0
 802fb6e:	e017      	b.n	802fba0 <MessageManager::sendMessage()+0x150>
 802fb70:	f8b4 e004 	ldrh.w	lr, [r4, #4]
 802fb74:	6820      	ldr	r0, [r4, #0]
 802fb76:	f102 0801 	add.w	r8, r2, #1
 802fb7a:	5c82      	ldrb	r2, [r0, r2]
 802fb7c:	fbb8 fcfe 	udiv	ip, r8, lr
 802fb80:	fb0e 8c1c 	mls	ip, lr, ip, r8
 802fb84:	f884 b00a 	strb.w	fp, [r4, #10]
 802fb88:	f8a4 c008 	strh.w	ip, [r4, #8]
 802fb8c:	3301      	adds	r3, #1
 802fb8e:	f803 2c02 	strb.w	r2, [r3, #-2]
 802fb92:	3501      	adds	r5, #1
 802fb94:	454b      	cmp	r3, r9
 802fb96:	b2ad      	uxth	r5, r5
 802fb98:	d00c      	beq.n	802fbb4 <MessageManager::sendMessage()+0x164>
 802fb9a:	f8b4 c006 	ldrh.w	ip, [r4, #6]
 802fb9e:	8922      	ldrh	r2, [r4, #8]
 802fba0:	4594      	cmp	ip, r2
 802fba2:	d1e5      	bne.n	802fb70 <MessageManager::sendMessage()+0x120>
 802fba4:	7aa0      	ldrb	r0, [r4, #10]
 802fba6:	2800      	cmp	r0, #0
 802fba8:	d1e2      	bne.n	802fb70 <MessageManager::sendMessage()+0x120>
 802fbaa:	f803 0c01 	strb.w	r0, [r3, #-1]
 802fbae:	3301      	adds	r3, #1
 802fbb0:	454b      	cmp	r3, r9
 802fbb2:	d1f2      	bne.n	802fb9a <MessageManager::sendMessage()+0x14a>
 802fbb4:	45aa      	cmp	sl, r5
 802fbb6:	d12b      	bne.n	802fc10 <MessageManager::sendMessage()+0x1c0>
 802fbb8:	f8d6 0118 	ldr.w	r0, [r6, #280]	; 0x118
 802fbbc:	f8d6 30c8 	ldr.w	r3, [r6, #200]	; 0xc8
 802fbc0:	3102      	adds	r1, #2
 802fbc2:	b289      	uxth	r1, r1
 802fbc4:	4798      	blx	r3
 802fbc6:	f8b6 3120 	ldrh.w	r3, [r6, #288]	; 0x120
 802fbca:	3b01      	subs	r3, #1
 802fbcc:	b29b      	uxth	r3, r3
 802fbce:	f8a6 3120 	strh.w	r3, [r6, #288]	; 0x120
 802fbd2:	b113      	cbz	r3, 802fbda <MessageManager::sendMessage()+0x18a>
 802fbd4:	f8d6 30d0 	ldr.w	r3, [r6, #208]	; 0xd0
 802fbd8:	4798      	blx	r3
 802fbda:	4638      	mov	r0, r7
 802fbdc:	f009 feba 	bl	8039954 <_tx_mutex_put>
 802fbe0:	2001      	movs	r0, #1
 802fbe2:	b003      	add	sp, #12
 802fbe4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802fbe8:	4823      	ldr	r0, [pc, #140]	; (802fc78 <MessageManager::sendMessage()+0x228>)
 802fbea:	212f      	movs	r1, #47	; 0x2f
 802fbec:	f00f fbb7 	bl	803f35e <strrchr>
 802fbf0:	b1f0      	cbz	r0, 802fc30 <MessageManager::sendMessage()+0x1e0>
 802fbf2:	212f      	movs	r1, #47	; 0x2f
 802fbf4:	4820      	ldr	r0, [pc, #128]	; (802fc78 <MessageManager::sendMessage()+0x228>)
 802fbf6:	f00f fbb2 	bl	803f35e <strrchr>
 802fbfa:	1c41      	adds	r1, r0, #1
 802fbfc:	4b1f      	ldr	r3, [pc, #124]	; (802fc7c <MessageManager::sendMessage()+0x22c>)
 802fbfe:	f240 127f 	movw	r2, #383	; 0x17f
 802fc02:	2001      	movs	r0, #1
 802fc04:	f7f2 fdc8 	bl	8022798 <DEBUG_logMsg>
 802fc08:	2000      	movs	r0, #0
 802fc0a:	b003      	add	sp, #12
 802fc0c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802fc10:	4638      	mov	r0, r7
 802fc12:	f009 fe9f 	bl	8039954 <_tx_mutex_put>
 802fc16:	2000      	movs	r0, #0
 802fc18:	b003      	add	sp, #12
 802fc1a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802fc1e:	f3c1 2307 	ubfx	r3, r1, #8, #8
 802fc22:	f88d 1007 	strb.w	r1, [sp, #7]
 802fc26:	f88d 3006 	strb.w	r3, [sp, #6]
 802fc2a:	f8bd 1006 	ldrh.w	r1, [sp, #6]
 802fc2e:	e77b      	b.n	802fb28 <MessageManager::sendMessage()+0xd8>
 802fc30:	4811      	ldr	r0, [pc, #68]	; (802fc78 <MessageManager::sendMessage()+0x228>)
 802fc32:	215c      	movs	r1, #92	; 0x5c
 802fc34:	f00f fb93 	bl	803f35e <strrchr>
 802fc38:	b1d0      	cbz	r0, 802fc70 <MessageManager::sendMessage()+0x220>
 802fc3a:	215c      	movs	r1, #92	; 0x5c
 802fc3c:	480e      	ldr	r0, [pc, #56]	; (802fc78 <MessageManager::sendMessage()+0x228>)
 802fc3e:	f00f fb8e 	bl	803f35e <strrchr>
 802fc42:	1c41      	adds	r1, r0, #1
 802fc44:	e7da      	b.n	802fbfc <MessageManager::sendMessage()+0x1ac>
 802fc46:	f896 30fa 	ldrb.w	r3, [r6, #250]	; 0xfa
 802fc4a:	2b00      	cmp	r3, #0
 802fc4c:	f43f af1c 	beq.w	802fa88 <MessageManager::sendMessage()+0x38>
 802fc50:	f8b6 30f4 	ldrh.w	r3, [r6, #244]	; 0xf4
 802fc54:	e716      	b.n	802fa84 <MessageManager::sendMessage()+0x34>
 802fc56:	f896 310e 	ldrb.w	r3, [r6, #270]	; 0x10e
 802fc5a:	2b00      	cmp	r3, #0
 802fc5c:	f43f af27 	beq.w	802faae <MessageManager::sendMessage()+0x5e>
 802fc60:	f8b6 3108 	ldrh.w	r3, [r6, #264]	; 0x108
 802fc64:	e71d      	b.n	802faa2 <MessageManager::sendMessage()+0x52>
 802fc66:	7aa3      	ldrb	r3, [r4, #10]
 802fc68:	b123      	cbz	r3, 802fc74 <MessageManager::sendMessage()+0x224>
 802fc6a:	f8b4 e004 	ldrh.w	lr, [r4, #4]
 802fc6e:	e76f      	b.n	802fb50 <MessageManager::sendMessage()+0x100>
 802fc70:	4901      	ldr	r1, [pc, #4]	; (802fc78 <MessageManager::sendMessage()+0x228>)
 802fc72:	e7c3      	b.n	802fbfc <MessageManager::sendMessage()+0x1ac>
 802fc74:	469e      	mov	lr, r3
 802fc76:	e76b      	b.n	802fb50 <MessageManager::sendMessage()+0x100>
 802fc78:	08047758 	.word	0x08047758
 802fc7c:	08047824 	.word	0x08047824

0802fc80 <HARDWARE_NETWORK_notifyReceivedNewCCPMessage()>:
 802fc80:	2080      	movs	r0, #128	; 0x80
 802fc82:	f7f5 bda7 	b.w	80257d4 <ANTCTRL_setEvent>
 802fc86:	bf00      	nop

0802fc88 <HARDWARE_NETWORK_ccpSendMessage(unsigned char*, unsigned short)>:
 802fc88:	460a      	mov	r2, r1
 802fc8a:	4601      	mov	r1, r0
 802fc8c:	2001      	movs	r0, #1
 802fc8e:	f7f0 be8f 	b.w	80209b0 <NETWORK_writeUdp>
 802fc92:	bf00      	nop

0802fc94 <HARDWARE_NETWORK_initializeCCP>:
 802fc94:	4801      	ldr	r0, [pc, #4]	; (802fc9c <HARDWARE_NETWORK_initializeCCP+0x8>)
 802fc96:	f7ff bba1 	b.w	802f3dc <MessageManager::initialize()>
 802fc9a:	bf00      	nop
 802fc9c:	20009c80 	.word	0x20009c80

0802fca0 <HARDWARE_NETWORK_sendCCPMessage>:
 802fca0:	4801      	ldr	r0, [pc, #4]	; (802fca8 <HARDWARE_NETWORK_sendCCPMessage+0x8>)
 802fca2:	f7ff bed5 	b.w	802fa50 <MessageManager::sendMessage()>
 802fca6:	bf00      	nop
 802fca8:	20009c80 	.word	0x20009c80

0802fcac <HARDWARE_NETWORK_getNumCCPMessagesToSend>:
 802fcac:	4801      	ldr	r0, [pc, #4]	; (802fcb4 <HARDWARE_NETWORK_getNumCCPMessagesToSend+0x8>)
 802fcae:	f7ff becb 	b.w	802fa48 <MessageManager::numMessagesToSend() const>
 802fcb2:	bf00      	nop
 802fcb4:	20009c80 	.word	0x20009c80

0802fcb8 <HARDWARE_NETWORK_enqueuePriorityCCPMessage>:
 802fcb8:	460a      	mov	r2, r1
 802fcba:	b508      	push	{r3, lr}
 802fcbc:	4601      	mov	r1, r0
 802fcbe:	4804      	ldr	r0, [pc, #16]	; (802fcd0 <HARDWARE_NETWORK_enqueuePriorityCCPMessage+0x18>)
 802fcc0:	f7ff fe5a 	bl	802f978 <MessageManager::pushPrioritySendMessage(unsigned char*, unsigned short)>
 802fcc4:	f1a0 0001 	sub.w	r0, r0, #1
 802fcc8:	fab0 f080 	clz	r0, r0
 802fccc:	0940      	lsrs	r0, r0, #5
 802fcce:	bd08      	pop	{r3, pc}
 802fcd0:	20009c80 	.word	0x20009c80
 802fcd4:	8101b108 	.word	0x8101b108
 802fcd8:	8400b0b0 	.word	0x8400b0b0
 802fcdc:	00000000 	.word	0x00000000

0802fce0 <HARDWARE_NETWORK_enqueueStandardCCPMessage>:
 802fce0:	460a      	mov	r2, r1
 802fce2:	b508      	push	{r3, lr}
 802fce4:	4601      	mov	r1, r0
 802fce6:	4804      	ldr	r0, [pc, #16]	; (802fcf8 <HARDWARE_NETWORK_enqueueStandardCCPMessage+0x18>)
 802fce8:	f7ff fe86 	bl	802f9f8 <MessageManager::pushStandardSendMessage(unsigned char*, unsigned short)>
 802fcec:	f1a0 0001 	sub.w	r0, r0, #1
 802fcf0:	fab0 f080 	clz	r0, r0
 802fcf4:	0940      	lsrs	r0, r0, #5
 802fcf6:	bd08      	pop	{r3, pc}
 802fcf8:	20009c80 	.word	0x20009c80
 802fcfc:	8101b108 	.word	0x8101b108
 802fd00:	8400b0b0 	.word	0x8400b0b0
 802fd04:	00000000 	.word	0x00000000

0802fd08 <HARDWARE_NETWORK_enqueueReceivedCCPMessage>:
 802fd08:	460a      	mov	r2, r1
 802fd0a:	b508      	push	{r3, lr}
 802fd0c:	4601      	mov	r1, r0
 802fd0e:	4804      	ldr	r0, [pc, #16]	; (802fd20 <HARDWARE_NETWORK_enqueueReceivedCCPMessage+0x18>)
 802fd10:	f7ff fd00 	bl	802f714 <MessageManager::pushReceivedMessage(unsigned char*, unsigned short)>
 802fd14:	f1a0 0001 	sub.w	r0, r0, #1
 802fd18:	fab0 f080 	clz	r0, r0
 802fd1c:	0940      	lsrs	r0, r0, #5
 802fd1e:	bd08      	pop	{r3, pc}
 802fd20:	20009c80 	.word	0x20009c80
 802fd24:	8101b108 	.word	0x8101b108
 802fd28:	8400b0b0 	.word	0x8400b0b0
 802fd2c:	00000000 	.word	0x00000000

0802fd30 <HARDWARE_NETWORK_dequeueReceivedCCPMessage>:
 802fd30:	b530      	push	{r4, r5, lr}
 802fd32:	4c08      	ldr	r4, [pc, #32]	; (802fd54 <HARDWARE_NETWORK_dequeueReceivedCCPMessage+0x24>)
 802fd34:	b083      	sub	sp, #12
 802fd36:	460a      	mov	r2, r1
 802fd38:	f10d 0306 	add.w	r3, sp, #6
 802fd3c:	4601      	mov	r1, r0
 802fd3e:	2500      	movs	r5, #0
 802fd40:	4620      	mov	r0, r4
 802fd42:	f8ad 5006 	strh.w	r5, [sp, #6]
 802fd46:	f7ff fb79 	bl	802f43c <MessageManager::popReceivedMessage(unsigned char*, unsigned short, unsigned short*)>
 802fd4a:	4620      	mov	r0, r4
 802fd4c:	f7ff fe78 	bl	802fa40 <MessageManager::numMessagesToReceive() const>
 802fd50:	b003      	add	sp, #12
 802fd52:	bd30      	pop	{r4, r5, pc}
 802fd54:	20009c80 	.word	0x20009c80

0802fd58 <_GLOBAL__sub_I_HARDWARE_NETWORK_initializeCCP>:
 802fd58:	b5f0      	push	{r4, r5, r6, r7, lr}
 802fd5a:	b089      	sub	sp, #36	; 0x24
 802fd5c:	4b0e      	ldr	r3, [pc, #56]	; (802fd98 <_GLOBAL__sub_I_HARDWARE_NETWORK_initializeCCP+0x40>)
 802fd5e:	4c0f      	ldr	r4, [pc, #60]	; (802fd9c <_GLOBAL__sub_I_HARDWARE_NETWORK_initializeCCP+0x44>)
 802fd60:	9302      	str	r3, [sp, #8]
 802fd62:	4a0f      	ldr	r2, [pc, #60]	; (802fda0 <_GLOBAL__sub_I_HARDWARE_NETWORK_initializeCCP+0x48>)
 802fd64:	4b0f      	ldr	r3, [pc, #60]	; (802fda4 <_GLOBAL__sub_I_HARDWARE_NETWORK_initializeCCP+0x4c>)
 802fd66:	26c8      	movs	r6, #200	; 0xc8
 802fd68:	2700      	movs	r7, #0
 802fd6a:	2544      	movs	r5, #68	; 0x44
 802fd6c:	f240 21ee 	movw	r1, #750	; 0x2ee
 802fd70:	e9cd 3200 	strd	r3, r2, [sp]
 802fd74:	e9cd 1503 	strd	r1, r5, [sp, #12]
 802fd78:	e9cd 6706 	strd	r6, r7, [sp, #24]
 802fd7c:	4b0a      	ldr	r3, [pc, #40]	; (802fda8 <_GLOBAL__sub_I_HARDWARE_NETWORK_initializeCCP+0x50>)
 802fd7e:	490b      	ldr	r1, [pc, #44]	; (802fdac <_GLOBAL__sub_I_HARDWARE_NETWORK_initializeCCP+0x54>)
 802fd80:	4620      	mov	r0, r4
 802fd82:	2200      	movs	r2, #0
 802fd84:	f7ff fa7a 	bl	802f27c <MessageManager::MessageManager(char const*, COMM_endianOrder_e, void (*)(unsigned char*, unsigned short), void (*)(), void (*)(), void (*)(), unsigned short, unsigned int, unsigned long long)>
 802fd88:	4a09      	ldr	r2, [pc, #36]	; (802fdb0 <_GLOBAL__sub_I_HARDWARE_NETWORK_initializeCCP+0x58>)
 802fd8a:	490a      	ldr	r1, [pc, #40]	; (802fdb4 <_GLOBAL__sub_I_HARDWARE_NETWORK_initializeCCP+0x5c>)
 802fd8c:	4620      	mov	r0, r4
 802fd8e:	b009      	add	sp, #36	; 0x24
 802fd90:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 802fd94:	f00f b832 	b.w	803edfc <__aeabi_atexit>
 802fd98:	0802fded 	.word	0x0802fded
 802fd9c:	20009c80 	.word	0x20009c80
 802fda0:	0802fdb9 	.word	0x0802fdb9
 802fda4:	0802fc81 	.word	0x0802fc81
 802fda8:	0802fc89 	.word	0x0802fc89
 802fdac:	08047844 	.word	0x08047844
 802fdb0:	200124cc 	.word	0x200124cc
 802fdb4:	0802f40d 	.word	0x0802f40d

0802fdb8 <HARDWARE_NETWORK_notifyMessagesToSend>:
 802fdb8:	4802      	ldr	r0, [pc, #8]	; (802fdc4 <HARDWARE_NETWORK_notifyMessagesToSend+0xc>)
 802fdba:	2200      	movs	r2, #0
 802fdbc:	2101      	movs	r1, #1
 802fdbe:	f009 b9db 	b.w	8039178 <_tx_event_flags_set>
 802fdc2:	bf00      	nop
 802fdc4:	20009e98 	.word	0x20009e98

0802fdc8 <HARDWARE_NETWORK_waitMessagesToSend>:
 802fdc8:	b500      	push	{lr}
 802fdca:	b083      	sub	sp, #12
 802fdcc:	2201      	movs	r2, #1
 802fdce:	2396      	movs	r3, #150	; 0x96
 802fdd0:	9300      	str	r3, [sp, #0]
 802fdd2:	4611      	mov	r1, r2
 802fdd4:	2300      	movs	r3, #0
 802fdd6:	4804      	ldr	r0, [pc, #16]	; (802fde8 <HARDWARE_NETWORK_waitMessagesToSend+0x20>)
 802fdd8:	f009 f954 	bl	8039084 <_tx_event_flags_get>
 802fddc:	fab0 f080 	clz	r0, r0
 802fde0:	0940      	lsrs	r0, r0, #5
 802fde2:	b003      	add	sp, #12
 802fde4:	f85d fb04 	ldr.w	pc, [sp], #4
 802fde8:	20009e98 	.word	0x20009e98

0802fdec <HARDWARE_NETWORK_priorityMessageQueueFullDelay>:
 802fdec:	2096      	movs	r0, #150	; 0x96
 802fdee:	f00a b8af 	b.w	8039f50 <_tx_thread_sleep>
 802fdf2:	bf00      	nop

0802fdf4 <HARDWARE_NETWORK_notifyReceivedNewMCMMessage()>:
 802fdf4:	2020      	movs	r0, #32
 802fdf6:	f7f5 bced 	b.w	80257d4 <ANTCTRL_setEvent>
 802fdfa:	bf00      	nop

0802fdfc <HARDWARE_NETWORK_mcmSendMessage(unsigned char*, unsigned short)>:
 802fdfc:	460a      	mov	r2, r1
 802fdfe:	4601      	mov	r1, r0
 802fe00:	2000      	movs	r0, #0
 802fe02:	f7f0 bdd5 	b.w	80209b0 <NETWORK_writeUdp>
 802fe06:	bf00      	nop

0802fe08 <HARDWARE_NETWORK_initializeMCM>:
 802fe08:	4801      	ldr	r0, [pc, #4]	; (802fe10 <HARDWARE_NETWORK_initializeMCM+0x8>)
 802fe0a:	f7ff bae7 	b.w	802f3dc <MessageManager::initialize()>
 802fe0e:	bf00      	nop
 802fe10:	20009ec0 	.word	0x20009ec0

0802fe14 <HARDWARE_NETWORK_sendMCMMessage>:
 802fe14:	4801      	ldr	r0, [pc, #4]	; (802fe1c <HARDWARE_NETWORK_sendMCMMessage+0x8>)
 802fe16:	f7ff be1b 	b.w	802fa50 <MessageManager::sendMessage()>
 802fe1a:	bf00      	nop
 802fe1c:	20009ec0 	.word	0x20009ec0

0802fe20 <HARDWARE_NETWORK_getNumMCMMessagesToSend>:
 802fe20:	4801      	ldr	r0, [pc, #4]	; (802fe28 <HARDWARE_NETWORK_getNumMCMMessagesToSend+0x8>)
 802fe22:	f7ff be11 	b.w	802fa48 <MessageManager::numMessagesToSend() const>
 802fe26:	bf00      	nop
 802fe28:	20009ec0 	.word	0x20009ec0

0802fe2c <HARDWARE_NETWORK_enqueuePriorityMCMMessage>:
 802fe2c:	460a      	mov	r2, r1
 802fe2e:	b508      	push	{r3, lr}
 802fe30:	4601      	mov	r1, r0
 802fe32:	4804      	ldr	r0, [pc, #16]	; (802fe44 <HARDWARE_NETWORK_enqueuePriorityMCMMessage+0x18>)
 802fe34:	f7ff fda0 	bl	802f978 <MessageManager::pushPrioritySendMessage(unsigned char*, unsigned short)>
 802fe38:	f1a0 0001 	sub.w	r0, r0, #1
 802fe3c:	fab0 f080 	clz	r0, r0
 802fe40:	0940      	lsrs	r0, r0, #5
 802fe42:	bd08      	pop	{r3, pc}
 802fe44:	20009ec0 	.word	0x20009ec0
 802fe48:	8101b108 	.word	0x8101b108
 802fe4c:	8400b0b0 	.word	0x8400b0b0
 802fe50:	00000000 	.word	0x00000000

0802fe54 <HARDWARE_NETWORK_enqueueReceivedMCMMessage>:
 802fe54:	460a      	mov	r2, r1
 802fe56:	b508      	push	{r3, lr}
 802fe58:	4601      	mov	r1, r0
 802fe5a:	4804      	ldr	r0, [pc, #16]	; (802fe6c <HARDWARE_NETWORK_enqueueReceivedMCMMessage+0x18>)
 802fe5c:	f7ff fc5a 	bl	802f714 <MessageManager::pushReceivedMessage(unsigned char*, unsigned short)>
 802fe60:	f1a0 0001 	sub.w	r0, r0, #1
 802fe64:	fab0 f080 	clz	r0, r0
 802fe68:	0940      	lsrs	r0, r0, #5
 802fe6a:	bd08      	pop	{r3, pc}
 802fe6c:	20009ec0 	.word	0x20009ec0
 802fe70:	8101b108 	.word	0x8101b108
 802fe74:	8400b0b0 	.word	0x8400b0b0
 802fe78:	00000000 	.word	0x00000000

0802fe7c <HARDWARE_NETWORK_dequeueReceivedMCMMessage>:
 802fe7c:	b530      	push	{r4, r5, lr}
 802fe7e:	4c08      	ldr	r4, [pc, #32]	; (802fea0 <HARDWARE_NETWORK_dequeueReceivedMCMMessage+0x24>)
 802fe80:	b083      	sub	sp, #12
 802fe82:	460a      	mov	r2, r1
 802fe84:	f10d 0306 	add.w	r3, sp, #6
 802fe88:	4601      	mov	r1, r0
 802fe8a:	2500      	movs	r5, #0
 802fe8c:	4620      	mov	r0, r4
 802fe8e:	f8ad 5006 	strh.w	r5, [sp, #6]
 802fe92:	f7ff fad3 	bl	802f43c <MessageManager::popReceivedMessage(unsigned char*, unsigned short, unsigned short*)>
 802fe96:	4620      	mov	r0, r4
 802fe98:	f7ff fdd2 	bl	802fa40 <MessageManager::numMessagesToReceive() const>
 802fe9c:	b003      	add	sp, #12
 802fe9e:	bd30      	pop	{r4, r5, pc}
 802fea0:	20009ec0 	.word	0x20009ec0

0802fea4 <_GLOBAL__sub_I_HARDWARE_NETWORK_initializeMCM>:
 802fea4:	b5f0      	push	{r4, r5, r6, r7, lr}
 802fea6:	b089      	sub	sp, #36	; 0x24
 802fea8:	4b0e      	ldr	r3, [pc, #56]	; (802fee4 <_GLOBAL__sub_I_HARDWARE_NETWORK_initializeMCM+0x40>)
 802feaa:	4c0f      	ldr	r4, [pc, #60]	; (802fee8 <_GLOBAL__sub_I_HARDWARE_NETWORK_initializeMCM+0x44>)
 802feac:	9302      	str	r3, [sp, #8]
 802feae:	4a0f      	ldr	r2, [pc, #60]	; (802feec <_GLOBAL__sub_I_HARDWARE_NETWORK_initializeMCM+0x48>)
 802feb0:	4b0f      	ldr	r3, [pc, #60]	; (802fef0 <_GLOBAL__sub_I_HARDWARE_NETWORK_initializeMCM+0x4c>)
 802feb2:	26c8      	movs	r6, #200	; 0xc8
 802feb4:	2700      	movs	r7, #0
 802feb6:	2530      	movs	r5, #48	; 0x30
 802feb8:	f240 21ee 	movw	r1, #750	; 0x2ee
 802febc:	e9cd 3200 	strd	r3, r2, [sp]
 802fec0:	e9cd 1503 	strd	r1, r5, [sp, #12]
 802fec4:	e9cd 6706 	strd	r6, r7, [sp, #24]
 802fec8:	4b0a      	ldr	r3, [pc, #40]	; (802fef4 <_GLOBAL__sub_I_HARDWARE_NETWORK_initializeMCM+0x50>)
 802feca:	490b      	ldr	r1, [pc, #44]	; (802fef8 <_GLOBAL__sub_I_HARDWARE_NETWORK_initializeMCM+0x54>)
 802fecc:	4620      	mov	r0, r4
 802fece:	2200      	movs	r2, #0
 802fed0:	f7ff f9d4 	bl	802f27c <MessageManager::MessageManager(char const*, COMM_endianOrder_e, void (*)(unsigned char*, unsigned short), void (*)(), void (*)(), void (*)(), unsigned short, unsigned int, unsigned long long)>
 802fed4:	4a09      	ldr	r2, [pc, #36]	; (802fefc <_GLOBAL__sub_I_HARDWARE_NETWORK_initializeMCM+0x58>)
 802fed6:	490a      	ldr	r1, [pc, #40]	; (802ff00 <_GLOBAL__sub_I_HARDWARE_NETWORK_initializeMCM+0x5c>)
 802fed8:	4620      	mov	r0, r4
 802feda:	b009      	add	sp, #36	; 0x24
 802fedc:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 802fee0:	f00e bf8c 	b.w	803edfc <__aeabi_atexit>
 802fee4:	0802fded 	.word	0x0802fded
 802fee8:	20009ec0 	.word	0x20009ec0
 802feec:	0802fdb9 	.word	0x0802fdb9
 802fef0:	0802fdf5 	.word	0x0802fdf5
 802fef4:	0802fdfd 	.word	0x0802fdfd
 802fef8:	08047850 	.word	0x08047850
 802fefc:	200124cc 	.word	0x200124cc
 802ff00:	0802f40d 	.word	0x0802f40d

0802ff04 <HARDWARE_NETWORK_notifyReceivedNewDiagnosticMessage()>:
 802ff04:	f44f 4000 	mov.w	r0, #32768	; 0x8000
 802ff08:	f7f5 bc64 	b.w	80257d4 <ANTCTRL_setEvent>

0802ff0c <HARDWARE_NETWORK_diagnosticSendMessage(unsigned char*, unsigned short)>:
 802ff0c:	460a      	mov	r2, r1
 802ff0e:	4601      	mov	r1, r0
 802ff10:	2002      	movs	r0, #2
 802ff12:	f7f0 bd4d 	b.w	80209b0 <NETWORK_writeUdp>
 802ff16:	bf00      	nop

0802ff18 <HARDWARE_NETWORK_initializeDiagnostic>:
 802ff18:	4801      	ldr	r0, [pc, #4]	; (802ff20 <HARDWARE_NETWORK_initializeDiagnostic+0x8>)
 802ff1a:	f7ff ba5f 	b.w	802f3dc <MessageManager::initialize()>
 802ff1e:	bf00      	nop
 802ff20:	2000a0d8 	.word	0x2000a0d8

0802ff24 <HARDWARE_NETWORK_sendDiagnosticMessage>:
 802ff24:	4801      	ldr	r0, [pc, #4]	; (802ff2c <HARDWARE_NETWORK_sendDiagnosticMessage+0x8>)
 802ff26:	f7ff bd93 	b.w	802fa50 <MessageManager::sendMessage()>
 802ff2a:	bf00      	nop
 802ff2c:	2000a0d8 	.word	0x2000a0d8

0802ff30 <HARDWARE_NETWORK_getNumDiagnosticMessagesToSend>:
 802ff30:	4801      	ldr	r0, [pc, #4]	; (802ff38 <HARDWARE_NETWORK_getNumDiagnosticMessagesToSend+0x8>)
 802ff32:	f7ff bd89 	b.w	802fa48 <MessageManager::numMessagesToSend() const>
 802ff36:	bf00      	nop
 802ff38:	2000a0d8 	.word	0x2000a0d8

0802ff3c <HARDWARE_NETWORK_enqueueStandardDiagnosticMessage>:
 802ff3c:	460a      	mov	r2, r1
 802ff3e:	b508      	push	{r3, lr}
 802ff40:	4601      	mov	r1, r0
 802ff42:	4804      	ldr	r0, [pc, #16]	; (802ff54 <HARDWARE_NETWORK_enqueueStandardDiagnosticMessage+0x18>)
 802ff44:	f7ff fd58 	bl	802f9f8 <MessageManager::pushStandardSendMessage(unsigned char*, unsigned short)>
 802ff48:	f1a0 0001 	sub.w	r0, r0, #1
 802ff4c:	fab0 f080 	clz	r0, r0
 802ff50:	0940      	lsrs	r0, r0, #5
 802ff52:	bd08      	pop	{r3, pc}
 802ff54:	2000a0d8 	.word	0x2000a0d8
 802ff58:	8101b108 	.word	0x8101b108
 802ff5c:	8400b0b0 	.word	0x8400b0b0
 802ff60:	00000000 	.word	0x00000000

0802ff64 <HARDWARE_NETWORK_enqueueReceivedDiagnosticMessage>:
 802ff64:	460a      	mov	r2, r1
 802ff66:	b508      	push	{r3, lr}
 802ff68:	4601      	mov	r1, r0
 802ff6a:	4804      	ldr	r0, [pc, #16]	; (802ff7c <HARDWARE_NETWORK_enqueueReceivedDiagnosticMessage+0x18>)
 802ff6c:	f7ff fbd2 	bl	802f714 <MessageManager::pushReceivedMessage(unsigned char*, unsigned short)>
 802ff70:	f1a0 0001 	sub.w	r0, r0, #1
 802ff74:	fab0 f080 	clz	r0, r0
 802ff78:	0940      	lsrs	r0, r0, #5
 802ff7a:	bd08      	pop	{r3, pc}
 802ff7c:	2000a0d8 	.word	0x2000a0d8
 802ff80:	8101b108 	.word	0x8101b108
 802ff84:	8400b0b0 	.word	0x8400b0b0
 802ff88:	00000000 	.word	0x00000000

0802ff8c <HARDWARE_NETWORK_dequeueReceivedDiagnosticMessage>:
 802ff8c:	b530      	push	{r4, r5, lr}
 802ff8e:	4c08      	ldr	r4, [pc, #32]	; (802ffb0 <HARDWARE_NETWORK_dequeueReceivedDiagnosticMessage+0x24>)
 802ff90:	b083      	sub	sp, #12
 802ff92:	460a      	mov	r2, r1
 802ff94:	f10d 0306 	add.w	r3, sp, #6
 802ff98:	4601      	mov	r1, r0
 802ff9a:	2500      	movs	r5, #0
 802ff9c:	4620      	mov	r0, r4
 802ff9e:	f8ad 5006 	strh.w	r5, [sp, #6]
 802ffa2:	f7ff fa4b 	bl	802f43c <MessageManager::popReceivedMessage(unsigned char*, unsigned short, unsigned short*)>
 802ffa6:	4620      	mov	r0, r4
 802ffa8:	f7ff fd4a 	bl	802fa40 <MessageManager::numMessagesToReceive() const>
 802ffac:	b003      	add	sp, #12
 802ffae:	bd30      	pop	{r4, r5, pc}
 802ffb0:	2000a0d8 	.word	0x2000a0d8

0802ffb4 <_GLOBAL__sub_I_HARDWARE_NETWORK_initializeDiagnostic>:
 802ffb4:	b5f0      	push	{r4, r5, r6, r7, lr}
 802ffb6:	b089      	sub	sp, #36	; 0x24
 802ffb8:	4b0e      	ldr	r3, [pc, #56]	; (802fff4 <_GLOBAL__sub_I_HARDWARE_NETWORK_initializeDiagnostic+0x40>)
 802ffba:	4c0f      	ldr	r4, [pc, #60]	; (802fff8 <_GLOBAL__sub_I_HARDWARE_NETWORK_initializeDiagnostic+0x44>)
 802ffbc:	9302      	str	r3, [sp, #8]
 802ffbe:	4a0f      	ldr	r2, [pc, #60]	; (802fffc <_GLOBAL__sub_I_HARDWARE_NETWORK_initializeDiagnostic+0x48>)
 802ffc0:	4b0f      	ldr	r3, [pc, #60]	; (8030000 <_GLOBAL__sub_I_HARDWARE_NETWORK_initializeDiagnostic+0x4c>)
 802ffc2:	26c8      	movs	r6, #200	; 0xc8
 802ffc4:	2700      	movs	r7, #0
 802ffc6:	2530      	movs	r5, #48	; 0x30
 802ffc8:	f240 21ee 	movw	r1, #750	; 0x2ee
 802ffcc:	e9cd 3200 	strd	r3, r2, [sp]
 802ffd0:	e9cd 1503 	strd	r1, r5, [sp, #12]
 802ffd4:	e9cd 6706 	strd	r6, r7, [sp, #24]
 802ffd8:	4b0a      	ldr	r3, [pc, #40]	; (8030004 <_GLOBAL__sub_I_HARDWARE_NETWORK_initializeDiagnostic+0x50>)
 802ffda:	490b      	ldr	r1, [pc, #44]	; (8030008 <_GLOBAL__sub_I_HARDWARE_NETWORK_initializeDiagnostic+0x54>)
 802ffdc:	4620      	mov	r0, r4
 802ffde:	2201      	movs	r2, #1
 802ffe0:	f7ff f94c 	bl	802f27c <MessageManager::MessageManager(char const*, COMM_endianOrder_e, void (*)(unsigned char*, unsigned short), void (*)(), void (*)(), void (*)(), unsigned short, unsigned int, unsigned long long)>
 802ffe4:	4a09      	ldr	r2, [pc, #36]	; (803000c <_GLOBAL__sub_I_HARDWARE_NETWORK_initializeDiagnostic+0x58>)
 802ffe6:	490a      	ldr	r1, [pc, #40]	; (8030010 <_GLOBAL__sub_I_HARDWARE_NETWORK_initializeDiagnostic+0x5c>)
 802ffe8:	4620      	mov	r0, r4
 802ffea:	b009      	add	sp, #36	; 0x24
 802ffec:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 802fff0:	f00e bf04 	b.w	803edfc <__aeabi_atexit>
 802fff4:	0802fded 	.word	0x0802fded
 802fff8:	2000a0d8 	.word	0x2000a0d8
 802fffc:	0802fdb9 	.word	0x0802fdb9
 8030000:	0802ff05 	.word	0x0802ff05
 8030004:	0802ff0d 	.word	0x0802ff0d
 8030008:	0804785c 	.word	0x0804785c
 803000c:	200124cc 	.word	0x200124cc
 8030010:	0802f40d 	.word	0x0802f40d

08030014 <Nest::Nest(float, float (*)(), float (*)())>:
 8030014:	b430      	push	{r4, r5}
 8030016:	2500      	movs	r5, #0
 8030018:	2400      	movs	r4, #0
 803001a:	6001      	str	r1, [r0, #0]
 803001c:	2101      	movs	r1, #1
 803001e:	6145      	str	r5, [r0, #20]
 8030020:	7604      	strb	r4, [r0, #24]
 8030022:	ed80 0a03 	vstr	s0, [r0, #12]
 8030026:	bc30      	pop	{r4, r5}
 8030028:	6042      	str	r2, [r0, #4]
 803002a:	7201      	strb	r1, [r0, #8]
 803002c:	7401      	strb	r1, [r0, #16]
 803002e:	4770      	bx	lr

08030030 <Nest::setHeight_bins(unsigned char)>:
 8030030:	b530      	push	{r4, r5, lr}
 8030032:	7e03      	ldrb	r3, [r0, #24]
 8030034:	b083      	sub	sp, #12
 8030036:	4604      	mov	r4, r0
 8030038:	b923      	cbnz	r3, 8030044 <Nest::setHeight_bins(unsigned char)+0x14>
 803003a:	2200      	movs	r2, #0
 803003c:	7403      	strb	r3, [r0, #16]
 803003e:	60c2      	str	r2, [r0, #12]
 8030040:	b003      	add	sp, #12
 8030042:	bd30      	pop	{r4, r5, pc}
 8030044:	4b28      	ldr	r3, [pc, #160]	; (80300e8 <Nest::setHeight_bins(unsigned char)+0xb8>)
 8030046:	ed9f 5a29 	vldr	s10, [pc, #164]	; 80300ec <Nest::setHeight_bins(unsigned char)+0xbc>
 803004a:	eddf 7a29 	vldr	s15, [pc, #164]	; 80300f0 <Nest::setHeight_bins(unsigned char)+0xc0>
 803004e:	eddf 5a29 	vldr	s11, [pc, #164]	; 80300f4 <Nest::setHeight_bins(unsigned char)+0xc4>
 8030052:	ed90 6a05 	vldr	s12, [r0, #20]
 8030056:	eddf 6a28 	vldr	s13, [pc, #160]	; 80300f8 <Nest::setHeight_bins(unsigned char)+0xc8>
 803005a:	4828      	ldr	r0, [pc, #160]	; (80300fc <Nest::setHeight_bins(unsigned char)+0xcc>)
 803005c:	3902      	subs	r1, #2
 803005e:	b2c9      	uxtb	r1, r1
 8030060:	fba3 2301 	umull	r2, r3, r3, r1
 8030064:	089a      	lsrs	r2, r3, #2
 8030066:	ee07 2a10 	vmov	s14, r2
 803006a:	eeb8 7a47 	vcvt.f32.u32	s14, s14
 803006e:	eb02 0342 	add.w	r3, r2, r2, lsl #1
 8030072:	eee7 7a05 	vfma.f32	s15, s14, s10
 8030076:	eba1 0143 	sub.w	r1, r1, r3, lsl #1
 803007a:	b2c9      	uxtb	r1, r1
 803007c:	2200      	movs	r2, #0
 803007e:	eeb0 7a67 	vmov.f32	s14, s15
 8030082:	ee07 1a90 	vmov	s15, r1
 8030086:	eef8 7a67 	vcvt.f32.u32	s15, s15
 803008a:	2301      	movs	r3, #1
 803008c:	eea7 7aa5 	vfma.f32	s14, s15, s11
 8030090:	7222      	strb	r2, [r4, #8]
 8030092:	7423      	strb	r3, [r4, #16]
 8030094:	212f      	movs	r1, #47	; 0x2f
 8030096:	ee77 7a06 	vadd.f32	s15, s14, s12
 803009a:	ee77 7ae6 	vsub.f32	s15, s15, s13
 803009e:	edc4 7a03 	vstr	s15, [r4, #12]
 80300a2:	f00f f95c 	bl	803f35e <strrchr>
 80300a6:	b188      	cbz	r0, 80300cc <Nest::setHeight_bins(unsigned char)+0x9c>
 80300a8:	4814      	ldr	r0, [pc, #80]	; (80300fc <Nest::setHeight_bins(unsigned char)+0xcc>)
 80300aa:	212f      	movs	r1, #47	; 0x2f
 80300ac:	f00f f957 	bl	803f35e <strrchr>
 80300b0:	1c45      	adds	r5, r0, #1
 80300b2:	68e0      	ldr	r0, [r4, #12]
 80300b4:	f00e f9d1 	bl	803e45a <__aeabi_f2d>
 80300b8:	4b11      	ldr	r3, [pc, #68]	; (8030100 <Nest::setHeight_bins(unsigned char)+0xd0>)
 80300ba:	e9cd 0100 	strd	r0, r1, [sp]
 80300be:	224f      	movs	r2, #79	; 0x4f
 80300c0:	4629      	mov	r1, r5
 80300c2:	2002      	movs	r0, #2
 80300c4:	f7f2 fb68 	bl	8022798 <DEBUG_logMsg>
 80300c8:	b003      	add	sp, #12
 80300ca:	bd30      	pop	{r4, r5, pc}
 80300cc:	480b      	ldr	r0, [pc, #44]	; (80300fc <Nest::setHeight_bins(unsigned char)+0xcc>)
 80300ce:	215c      	movs	r1, #92	; 0x5c
 80300d0:	f00f f945 	bl	803f35e <strrchr>
 80300d4:	b128      	cbz	r0, 80300e2 <Nest::setHeight_bins(unsigned char)+0xb2>
 80300d6:	4809      	ldr	r0, [pc, #36]	; (80300fc <Nest::setHeight_bins(unsigned char)+0xcc>)
 80300d8:	215c      	movs	r1, #92	; 0x5c
 80300da:	f00f f940 	bl	803f35e <strrchr>
 80300de:	1c45      	adds	r5, r0, #1
 80300e0:	e7e7      	b.n	80300b2 <Nest::setHeight_bins(unsigned char)+0x82>
 80300e2:	4d06      	ldr	r5, [pc, #24]	; (80300fc <Nest::setHeight_bins(unsigned char)+0xcc>)
 80300e4:	e7e5      	b.n	80300b2 <Nest::setHeight_bins(unsigned char)+0x82>
 80300e6:	bf00      	nop
 80300e8:	aaaaaaab 	.word	0xaaaaaaab
 80300ec:	4479c148 	.word	0x4479c148
 80300f0:	442a0000 	.word	0x442a0000
 80300f4:	43210000 	.word	0x43210000
 80300f8:	429e28f6 	.word	0x429e28f6
 80300fc:	08047870 	.word	0x08047870
 8030100:	080478a4 	.word	0x080478a4

08030104 <Nest::setAtticOffset(float)>:
 8030104:	2301      	movs	r3, #1
 8030106:	7603      	strb	r3, [r0, #24]
 8030108:	ed80 0a05 	vstr	s0, [r0, #20]
 803010c:	4770      	bx	lr
 803010e:	bf00      	nop

08030110 <Nest::getShelfHeight(unsigned char)>:
 8030110:	b91a      	cbnz	r2, 803011a <Nest::getShelfHeight(unsigned char)+0xa>
 8030112:	2300      	movs	r3, #0
 8030114:	7102      	strb	r2, [r0, #4]
 8030116:	6003      	str	r3, [r0, #0]
 8030118:	4770      	bx	lr
 803011a:	7c0b      	ldrb	r3, [r1, #16]
 803011c:	b353      	cbz	r3, 8030174 <Nest::getShelfHeight(unsigned char)+0x64>
 803011e:	4b1a      	ldr	r3, [pc, #104]	; (8030188 <Nest::getShelfHeight(unsigned char)+0x78>)
 8030120:	edd1 6a03 	vldr	s13, [r1, #12]
 8030124:	eddf 5a19 	vldr	s11, [pc, #100]	; 803018c <Nest::getShelfHeight(unsigned char)+0x7c>
 8030128:	eddf 7a19 	vldr	s15, [pc, #100]	; 8030190 <Nest::getShelfHeight(unsigned char)+0x80>
 803012c:	ed9f 6a19 	vldr	s12, [pc, #100]	; 8030194 <Nest::getShelfHeight(unsigned char)+0x84>
 8030130:	3a01      	subs	r2, #1
 8030132:	b2d2      	uxtb	r2, r2
 8030134:	fba3 1302 	umull	r1, r3, r3, r2
 8030138:	0899      	lsrs	r1, r3, #2
 803013a:	ee07 1a10 	vmov	s14, r1
 803013e:	eeb8 7a47 	vcvt.f32.u32	s14, s14
 8030142:	eb01 0341 	add.w	r3, r1, r1, lsl #1
 8030146:	eee7 7a25 	vfma.f32	s15, s14, s11
 803014a:	eba2 0243 	sub.w	r2, r2, r3, lsl #1
 803014e:	b2d2      	uxtb	r2, r2
 8030150:	eeb0 7a67 	vmov.f32	s14, s15
 8030154:	ee07 2a90 	vmov	s15, r2
 8030158:	eef8 7a67 	vcvt.f32.u32	s15, s15
 803015c:	eea7 7a86 	vfma.f32	s14, s15, s12
 8030160:	eef4 6ac7 	vcmpe.f32	s13, s14
 8030164:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8030168:	d508      	bpl.n	803017c <Nest::getShelfHeight(unsigned char)+0x6c>
 803016a:	2200      	movs	r2, #0
 803016c:	2300      	movs	r3, #0
 803016e:	6002      	str	r2, [r0, #0]
 8030170:	7103      	strb	r3, [r0, #4]
 8030172:	4770      	bx	lr
 8030174:	2200      	movs	r2, #0
 8030176:	7103      	strb	r3, [r0, #4]
 8030178:	6002      	str	r2, [r0, #0]
 803017a:	4770      	bx	lr
 803017c:	2301      	movs	r3, #1
 803017e:	ed80 7a00 	vstr	s14, [r0]
 8030182:	7103      	strb	r3, [r0, #4]
 8030184:	4770      	bx	lr
 8030186:	bf00      	nop
 8030188:	aaaaaaab 	.word	0xaaaaaaab
 803018c:	4479c148 	.word	0x4479c148
 8030190:	442a0000 	.word	0x442a0000
 8030194:	43210000 	.word	0x43210000

08030198 <Nest::getStructureHeight()>:
 8030198:	b410      	push	{r4}
 803019a:	68cc      	ldr	r4, [r1, #12]
 803019c:	7c0a      	ldrb	r2, [r1, #16]
 803019e:	6004      	str	r4, [r0, #0]
 80301a0:	7102      	strb	r2, [r0, #4]
 80301a2:	f85d 4b04 	ldr.w	r4, [sp], #4
 80301a6:	4770      	bx	lr

080301a8 <Nest::getAtticPositions()>:
 80301a8:	b530      	push	{r4, r5, lr}
 80301aa:	ed2d 8b04 	vpush	{d8-d9}
 80301ae:	7c0b      	ldrb	r3, [r1, #16]
 80301b0:	b087      	sub	sp, #28
 80301b2:	4604      	mov	r4, r0
 80301b4:	2b00      	cmp	r3, #0
 80301b6:	d050      	beq.n	803025a <Nest::getAtticPositions()+0xb2>
 80301b8:	460d      	mov	r5, r1
 80301ba:	680b      	ldr	r3, [r1, #0]
 80301bc:	eddf 8a32 	vldr	s17, [pc, #200]	; 8030288 <Nest::getAtticPositions()+0xe0>
 80301c0:	4798      	blx	r3
 80301c2:	ed95 8a03 	vldr	s16, [r5, #12]
 80301c6:	eddf 7a31 	vldr	s15, [pc, #196]	; 803028c <Nest::getAtticPositions()+0xe4>
 80301ca:	4831      	ldr	r0, [pc, #196]	; (8030290 <Nest::getAtticPositions()+0xe8>)
 80301cc:	eef0 9a48 	vmov.f32	s19, s16
 80301d0:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80301d4:	eee0 9a07 	vfma.f32	s19, s0, s14
 80301d8:	212f      	movs	r1, #47	; 0x2f
 80301da:	ee38 8a67 	vsub.f32	s16, s16, s15
 80301de:	ee79 8ae8 	vsub.f32	s17, s19, s17
 80301e2:	eef2 7a04 	vmov.f32	s15, #36	; 0x41200000  10.0
 80301e6:	eeb1 9a08 	vmov.f32	s18, #24	; 0x40c00000  6.0
 80301ea:	ee38 8a67 	vsub.f32	s16, s16, s15
 80301ee:	ee38 9ac9 	vsub.f32	s18, s17, s18
 80301f2:	f00f f8b4 	bl	803f35e <strrchr>
 80301f6:	2800      	cmp	r0, #0
 80301f8:	d039      	beq.n	803026e <Nest::getAtticPositions()+0xc6>
 80301fa:	4825      	ldr	r0, [pc, #148]	; (8030290 <Nest::getAtticPositions()+0xe8>)
 80301fc:	212f      	movs	r1, #47	; 0x2f
 80301fe:	f00f f8ae 	bl	803f35e <strrchr>
 8030202:	1c45      	adds	r5, r0, #1
 8030204:	ee18 0a10 	vmov	r0, s16
 8030208:	f00e f927 	bl	803e45a <__aeabi_f2d>
 803020c:	4602      	mov	r2, r0
 803020e:	460b      	mov	r3, r1
 8030210:	ee18 0a90 	vmov	r0, s17
 8030214:	e9cd 2304 	strd	r2, r3, [sp, #16]
 8030218:	f00e f91f 	bl	803e45a <__aeabi_f2d>
 803021c:	4602      	mov	r2, r0
 803021e:	460b      	mov	r3, r1
 8030220:	ee19 0a90 	vmov	r0, s19
 8030224:	e9cd 2302 	strd	r2, r3, [sp, #8]
 8030228:	f00e f917 	bl	803e45a <__aeabi_f2d>
 803022c:	4b19      	ldr	r3, [pc, #100]	; (8030294 <Nest::getAtticPositions()+0xec>)
 803022e:	e9cd 0100 	strd	r0, r1, [sp]
 8030232:	2299      	movs	r2, #153	; 0x99
 8030234:	4629      	mov	r1, r5
 8030236:	2002      	movs	r0, #2
 8030238:	f7f2 faae 	bl	8022798 <DEBUG_logMsg>
 803023c:	2301      	movs	r3, #1
 803023e:	4620      	mov	r0, r4
 8030240:	edc4 9a00 	vstr	s19, [r4]
 8030244:	edc4 8a01 	vstr	s17, [r4, #4]
 8030248:	ed84 9a02 	vstr	s18, [r4, #8]
 803024c:	ed84 8a03 	vstr	s16, [r4, #12]
 8030250:	7423      	strb	r3, [r4, #16]
 8030252:	b007      	add	sp, #28
 8030254:	ecbd 8b04 	vpop	{d8-d9}
 8030258:	bd30      	pop	{r4, r5, pc}
 803025a:	e9c0 3300 	strd	r3, r3, [r0]
 803025e:	e9c0 3302 	strd	r3, r3, [r0, #8]
 8030262:	7403      	strb	r3, [r0, #16]
 8030264:	4620      	mov	r0, r4
 8030266:	b007      	add	sp, #28
 8030268:	ecbd 8b04 	vpop	{d8-d9}
 803026c:	bd30      	pop	{r4, r5, pc}
 803026e:	4808      	ldr	r0, [pc, #32]	; (8030290 <Nest::getAtticPositions()+0xe8>)
 8030270:	215c      	movs	r1, #92	; 0x5c
 8030272:	f00f f874 	bl	803f35e <strrchr>
 8030276:	b128      	cbz	r0, 8030284 <Nest::getAtticPositions()+0xdc>
 8030278:	4805      	ldr	r0, [pc, #20]	; (8030290 <Nest::getAtticPositions()+0xe8>)
 803027a:	215c      	movs	r1, #92	; 0x5c
 803027c:	f00f f86f 	bl	803f35e <strrchr>
 8030280:	1c45      	adds	r5, r0, #1
 8030282:	e7bf      	b.n	8030204 <Nest::getAtticPositions()+0x5c>
 8030284:	4d02      	ldr	r5, [pc, #8]	; (8030290 <Nest::getAtticPositions()+0xe8>)
 8030286:	e7bd      	b.n	8030204 <Nest::getAtticPositions()+0x5c>
 8030288:	42940000 	.word	0x42940000
 803028c:	42a00000 	.word	0x42a00000
 8030290:	08047870 	.word	0x08047870
 8030294:	080478c0 	.word	0x080478c0
 8030298:	810106c9 	.word	0x810106c9
 803029c:	81a9b0b0 	.word	0x81a9b0b0
 80302a0:	00000000 	.word	0x00000000

080302a4 <Nest::getBasementPositions()>:
 80302a4:	b510      	push	{r4, lr}
 80302a6:	ed2d 8b04 	vpush	{d8-d9}
 80302aa:	6843      	ldr	r3, [r0, #4]
 80302ac:	eddf 8a28 	vldr	s17, [pc, #160]	; 8030350 <Nest::getBasementPositions()+0xac>
 80302b0:	b090      	sub	sp, #64	; 0x40
 80302b2:	4798      	blx	r3
 80302b4:	eeb6 8a00 	vmov.f32	s16, #96	; 0x3f000000  0.5
 80302b8:	ee20 8a08 	vmul.f32	s16, s0, s16
 80302bc:	eeb2 9a04 	vmov.f32	s18, #36	; 0x41200000  10.0
 80302c0:	4824      	ldr	r0, [pc, #144]	; (8030354 <Nest::getBasementPositions()+0xb0>)
 80302c2:	212f      	movs	r1, #47	; 0x2f
 80302c4:	ee78 8a28 	vadd.f32	s17, s16, s17
 80302c8:	ee38 9a09 	vadd.f32	s18, s16, s18
 80302cc:	f00f f847 	bl	803f35e <strrchr>
 80302d0:	b380      	cbz	r0, 8030334 <Nest::getBasementPositions()+0x90>
 80302d2:	4820      	ldr	r0, [pc, #128]	; (8030354 <Nest::getBasementPositions()+0xb0>)
 80302d4:	212f      	movs	r1, #47	; 0x2f
 80302d6:	f00f f842 	bl	803f35e <strrchr>
 80302da:	1c44      	adds	r4, r0, #1
 80302dc:	ee18 0a10 	vmov	r0, s16
 80302e0:	f00e f8bb 	bl	803e45a <__aeabi_f2d>
 80302e4:	4602      	mov	r2, r0
 80302e6:	460b      	mov	r3, r1
 80302e8:	ee19 0a10 	vmov	r0, s18
 80302ec:	e9cd 2306 	strd	r2, r3, [sp, #24]
 80302f0:	f00e f8b3 	bl	803e45a <__aeabi_f2d>
 80302f4:	4602      	mov	r2, r0
 80302f6:	460b      	mov	r3, r1
 80302f8:	ee18 0a90 	vmov	r0, s17
 80302fc:	e9cd 2304 	strd	r2, r3, [sp, #16]
 8030300:	f00e f8ab 	bl	803e45a <__aeabi_f2d>
 8030304:	4b14      	ldr	r3, [pc, #80]	; (8030358 <Nest::getBasementPositions()+0xb4>)
 8030306:	2200      	movs	r2, #0
 8030308:	e9cd 0102 	strd	r0, r1, [sp, #8]
 803030c:	e9cd 2300 	strd	r2, r3, [sp]
 8030310:	4621      	mov	r1, r4
 8030312:	4b12      	ldr	r3, [pc, #72]	; (803035c <Nest::getBasementPositions()+0xb8>)
 8030314:	22b3      	movs	r2, #179	; 0xb3
 8030316:	2002      	movs	r0, #2
 8030318:	f7f2 fa3e 	bl	8022798 <DEBUG_logMsg>
 803031c:	ed9f 0a10 	vldr	s0, [pc, #64]	; 8030360 <Nest::getBasementPositions()+0xbc>
 8030320:	eef0 1a48 	vmov.f32	s3, s16
 8030324:	eef0 0a49 	vmov.f32	s1, s18
 8030328:	eeb0 1a68 	vmov.f32	s2, s17
 803032c:	b010      	add	sp, #64	; 0x40
 803032e:	ecbd 8b04 	vpop	{d8-d9}
 8030332:	bd10      	pop	{r4, pc}
 8030334:	4807      	ldr	r0, [pc, #28]	; (8030354 <Nest::getBasementPositions()+0xb0>)
 8030336:	215c      	movs	r1, #92	; 0x5c
 8030338:	f00f f811 	bl	803f35e <strrchr>
 803033c:	b128      	cbz	r0, 803034a <Nest::getBasementPositions()+0xa6>
 803033e:	4805      	ldr	r0, [pc, #20]	; (8030354 <Nest::getBasementPositions()+0xb0>)
 8030340:	215c      	movs	r1, #92	; 0x5c
 8030342:	f00f f80c 	bl	803f35e <strrchr>
 8030346:	1c44      	adds	r4, r0, #1
 8030348:	e7c8      	b.n	80302dc <Nest::getBasementPositions()+0x38>
 803034a:	4c02      	ldr	r4, [pc, #8]	; (8030354 <Nest::getBasementPositions()+0xb0>)
 803034c:	e7c6      	b.n	80302dc <Nest::getBasementPositions()+0x38>
 803034e:	bf00      	nop
 8030350:	420c0000 	.word	0x420c0000
 8030354:	08047870 	.word	0x08047870
 8030358:	40640000 	.word	0x40640000
 803035c:	08047908 	.word	0x08047908
 8030360:	43200000 	.word	0x43200000
 8030364:	81010fc9 	.word	0x81010fc9
 8030368:	81a8b0b0 	.word	0x81a8b0b0
 803036c:	00000000 	.word	0x00000000

08030370 <CANMNGR_sendMsgs.part.0>:
 8030370:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8030374:	4680      	mov	r8, r0
 8030376:	b088      	sub	sp, #32
 8030378:	460d      	mov	r5, r1
 803037a:	4865      	ldr	r0, [pc, #404]	; (8030510 <CANMNGR_sendMsgs.part.0+0x1a0>)
 803037c:	f44f 61fa 	mov.w	r1, #2000	; 0x7d0
 8030380:	4614      	mov	r4, r2
 8030382:	f009 f971 	bl	8039668 <_tx_mutex_get>
 8030386:	2800      	cmp	r0, #0
 8030388:	d17a      	bne.n	8030480 <CANMNGR_sendMsgs.part.0+0x110>
 803038a:	f104 3aff 	add.w	sl, r4, #4294967295
 803038e:	2c00      	cmp	r4, #0
 8030390:	d03c      	beq.n	803040c <CANMNGR_sendMsgs.part.0+0x9c>
 8030392:	f8df 9198 	ldr.w	r9, [pc, #408]	; 803052c <CANMNGR_sendMsgs.part.0+0x1bc>
 8030396:	f44f 7625 	mov.w	r6, #660	; 0x294
 803039a:	fb06 9608 	mla	r6, r6, r8, r9
 803039e:	4604      	mov	r4, r0
 80303a0:	f506 7620 	add.w	r6, r6, #640	; 0x280
 80303a4:	2704      	movs	r7, #4
 80303a6:	e015      	b.n	80303d4 <CANMNGR_sendMsgs.part.0+0x64>
 80303a8:	f8d5 4001 	ldr.w	r4, [r5, #1]
 80303ac:	f88d 3016 	strb.w	r3, [sp, #22]
 80303b0:	9404      	str	r4, [sp, #16]
 80303b2:	f8ad 7014 	strh.w	r7, [sp, #20]
 80303b6:	f00f f924 	bl	803f602 <__aeabi_memcpy>
 80303ba:	2200      	movs	r2, #0
 80303bc:	a903      	add	r1, sp, #12
 80303be:	4630      	mov	r0, r6
 80303c0:	f7fd fff2 	bl	802e3a8 <UTILITIES_pushRingBuff>
 80303c4:	2801      	cmp	r0, #1
 80303c6:	f105 050e 	add.w	r5, r5, #14
 80303ca:	4604      	mov	r4, r0
 80303cc:	d13b      	bne.n	8030446 <CANMNGR_sendMsgs.part.0+0xd6>
 80303ce:	f1ba 3fff 	cmp.w	sl, #4294967295
 80303d2:	d04a      	beq.n	803046a <CANMNGR_sendMsgs.part.0+0xfa>
 80303d4:	796b      	ldrb	r3, [r5, #5]
 80303d6:	2b08      	cmp	r3, #8
 80303d8:	f105 0106 	add.w	r1, r5, #6
 80303dc:	f10d 0017 	add.w	r0, sp, #23
 80303e0:	461a      	mov	r2, r3
 80303e2:	f10a 3aff 	add.w	sl, sl, #4294967295
 80303e6:	d9df      	bls.n	80303a8 <CANMNGR_sendMsgs.part.0+0x38>
 80303e8:	484a      	ldr	r0, [pc, #296]	; (8030514 <CANMNGR_sendMsgs.part.0+0x1a4>)
 80303ea:	212f      	movs	r1, #47	; 0x2f
 80303ec:	f00e ffb7 	bl	803f35e <strrchr>
 80303f0:	2800      	cmp	r0, #0
 80303f2:	d059      	beq.n	80304a8 <CANMNGR_sendMsgs.part.0+0x138>
 80303f4:	212f      	movs	r1, #47	; 0x2f
 80303f6:	4847      	ldr	r0, [pc, #284]	; (8030514 <CANMNGR_sendMsgs.part.0+0x1a4>)
 80303f8:	f00e ffb1 	bl	803f35e <strrchr>
 80303fc:	1c41      	adds	r1, r0, #1
 80303fe:	796b      	ldrb	r3, [r5, #5]
 8030400:	9300      	str	r3, [sp, #0]
 8030402:	22ef      	movs	r2, #239	; 0xef
 8030404:	4b44      	ldr	r3, [pc, #272]	; (8030518 <CANMNGR_sendMsgs.part.0+0x1a8>)
 8030406:	2000      	movs	r0, #0
 8030408:	f7f2 f9c6 	bl	8022798 <DEBUG_logMsg>
 803040c:	4840      	ldr	r0, [pc, #256]	; (8030510 <CANMNGR_sendMsgs.part.0+0x1a0>)
 803040e:	f009 faa1 	bl	8039954 <_tx_mutex_put>
 8030412:	b918      	cbnz	r0, 803041c <CANMNGR_sendMsgs.part.0+0xac>
 8030414:	4620      	mov	r0, r4
 8030416:	b008      	add	sp, #32
 8030418:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 803041c:	483d      	ldr	r0, [pc, #244]	; (8030514 <CANMNGR_sendMsgs.part.0+0x1a4>)
 803041e:	212f      	movs	r1, #47	; 0x2f
 8030420:	f00e ff9d 	bl	803f35e <strrchr>
 8030424:	2800      	cmp	r0, #0
 8030426:	d04a      	beq.n	80304be <CANMNGR_sendMsgs.part.0+0x14e>
 8030428:	212f      	movs	r1, #47	; 0x2f
 803042a:	483a      	ldr	r0, [pc, #232]	; (8030514 <CANMNGR_sendMsgs.part.0+0x1a4>)
 803042c:	f00e ff97 	bl	803f35e <strrchr>
 8030430:	1c41      	adds	r1, r0, #1
 8030432:	4b3a      	ldr	r3, [pc, #232]	; (803051c <CANMNGR_sendMsgs.part.0+0x1ac>)
 8030434:	f44f 7280 	mov.w	r2, #256	; 0x100
 8030438:	2001      	movs	r0, #1
 803043a:	f7f2 f9ad 	bl	8022798 <DEBUG_logMsg>
 803043e:	4620      	mov	r0, r4
 8030440:	b008      	add	sp, #32
 8030442:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8030446:	4833      	ldr	r0, [pc, #204]	; (8030514 <CANMNGR_sendMsgs.part.0+0x1a4>)
 8030448:	212f      	movs	r1, #47	; 0x2f
 803044a:	f00e ff88 	bl	803f35e <strrchr>
 803044e:	2800      	cmp	r0, #0
 8030450:	d040      	beq.n	80304d4 <CANMNGR_sendMsgs.part.0+0x164>
 8030452:	212f      	movs	r1, #47	; 0x2f
 8030454:	482f      	ldr	r0, [pc, #188]	; (8030514 <CANMNGR_sendMsgs.part.0+0x1a4>)
 8030456:	f00e ff82 	bl	803f35e <strrchr>
 803045a:	1c41      	adds	r1, r0, #1
 803045c:	4b30      	ldr	r3, [pc, #192]	; (8030520 <CANMNGR_sendMsgs.part.0+0x1b0>)
 803045e:	22e9      	movs	r2, #233	; 0xe9
 8030460:	2000      	movs	r0, #0
 8030462:	f7f2 f999 	bl	8022798 <DEBUG_logMsg>
 8030466:	2400      	movs	r4, #0
 8030468:	e7d0      	b.n	803040c <CANMNGR_sendMsgs.part.0+0x9c>
 803046a:	f44f 7325 	mov.w	r3, #660	; 0x294
 803046e:	fb03 9808 	mla	r8, r3, r8, r9
 8030472:	2200      	movs	r2, #0
 8030474:	f8d8 1290 	ldr.w	r1, [r8, #656]	; 0x290
 8030478:	482a      	ldr	r0, [pc, #168]	; (8030524 <CANMNGR_sendMsgs.part.0+0x1b4>)
 803047a:	f008 fe7d 	bl	8039178 <_tx_event_flags_set>
 803047e:	e7c5      	b.n	803040c <CANMNGR_sendMsgs.part.0+0x9c>
 8030480:	4824      	ldr	r0, [pc, #144]	; (8030514 <CANMNGR_sendMsgs.part.0+0x1a4>)
 8030482:	212f      	movs	r1, #47	; 0x2f
 8030484:	f00e ff6b 	bl	803f35e <strrchr>
 8030488:	b378      	cbz	r0, 80304ea <CANMNGR_sendMsgs.part.0+0x17a>
 803048a:	212f      	movs	r1, #47	; 0x2f
 803048c:	4821      	ldr	r0, [pc, #132]	; (8030514 <CANMNGR_sendMsgs.part.0+0x1a4>)
 803048e:	f00e ff66 	bl	803f35e <strrchr>
 8030492:	1c41      	adds	r1, r0, #1
 8030494:	4b24      	ldr	r3, [pc, #144]	; (8030528 <CANMNGR_sendMsgs.part.0+0x1b8>)
 8030496:	22d5      	movs	r2, #213	; 0xd5
 8030498:	2001      	movs	r0, #1
 803049a:	f7f2 f97d 	bl	8022798 <DEBUG_logMsg>
 803049e:	2400      	movs	r4, #0
 80304a0:	4620      	mov	r0, r4
 80304a2:	b008      	add	sp, #32
 80304a4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80304a8:	481a      	ldr	r0, [pc, #104]	; (8030514 <CANMNGR_sendMsgs.part.0+0x1a4>)
 80304aa:	215c      	movs	r1, #92	; 0x5c
 80304ac:	f00e ff57 	bl	803f35e <strrchr>
 80304b0:	b340      	cbz	r0, 8030504 <CANMNGR_sendMsgs.part.0+0x194>
 80304b2:	215c      	movs	r1, #92	; 0x5c
 80304b4:	4817      	ldr	r0, [pc, #92]	; (8030514 <CANMNGR_sendMsgs.part.0+0x1a4>)
 80304b6:	f00e ff52 	bl	803f35e <strrchr>
 80304ba:	1c41      	adds	r1, r0, #1
 80304bc:	e79f      	b.n	80303fe <CANMNGR_sendMsgs.part.0+0x8e>
 80304be:	4815      	ldr	r0, [pc, #84]	; (8030514 <CANMNGR_sendMsgs.part.0+0x1a4>)
 80304c0:	215c      	movs	r1, #92	; 0x5c
 80304c2:	f00e ff4c 	bl	803f35e <strrchr>
 80304c6:	b1d8      	cbz	r0, 8030500 <CANMNGR_sendMsgs.part.0+0x190>
 80304c8:	215c      	movs	r1, #92	; 0x5c
 80304ca:	4812      	ldr	r0, [pc, #72]	; (8030514 <CANMNGR_sendMsgs.part.0+0x1a4>)
 80304cc:	f00e ff47 	bl	803f35e <strrchr>
 80304d0:	1c41      	adds	r1, r0, #1
 80304d2:	e7ae      	b.n	8030432 <CANMNGR_sendMsgs.part.0+0xc2>
 80304d4:	480f      	ldr	r0, [pc, #60]	; (8030514 <CANMNGR_sendMsgs.part.0+0x1a4>)
 80304d6:	215c      	movs	r1, #92	; 0x5c
 80304d8:	f00e ff41 	bl	803f35e <strrchr>
 80304dc:	b1a0      	cbz	r0, 8030508 <CANMNGR_sendMsgs.part.0+0x198>
 80304de:	215c      	movs	r1, #92	; 0x5c
 80304e0:	480c      	ldr	r0, [pc, #48]	; (8030514 <CANMNGR_sendMsgs.part.0+0x1a4>)
 80304e2:	f00e ff3c 	bl	803f35e <strrchr>
 80304e6:	1c41      	adds	r1, r0, #1
 80304e8:	e7b8      	b.n	803045c <CANMNGR_sendMsgs.part.0+0xec>
 80304ea:	480a      	ldr	r0, [pc, #40]	; (8030514 <CANMNGR_sendMsgs.part.0+0x1a4>)
 80304ec:	215c      	movs	r1, #92	; 0x5c
 80304ee:	f00e ff36 	bl	803f35e <strrchr>
 80304f2:	b158      	cbz	r0, 803050c <CANMNGR_sendMsgs.part.0+0x19c>
 80304f4:	215c      	movs	r1, #92	; 0x5c
 80304f6:	4807      	ldr	r0, [pc, #28]	; (8030514 <CANMNGR_sendMsgs.part.0+0x1a4>)
 80304f8:	f00e ff31 	bl	803f35e <strrchr>
 80304fc:	1c41      	adds	r1, r0, #1
 80304fe:	e7c9      	b.n	8030494 <CANMNGR_sendMsgs.part.0+0x124>
 8030500:	4904      	ldr	r1, [pc, #16]	; (8030514 <CANMNGR_sendMsgs.part.0+0x1a4>)
 8030502:	e796      	b.n	8030432 <CANMNGR_sendMsgs.part.0+0xc2>
 8030504:	4903      	ldr	r1, [pc, #12]	; (8030514 <CANMNGR_sendMsgs.part.0+0x1a4>)
 8030506:	e77a      	b.n	80303fe <CANMNGR_sendMsgs.part.0+0x8e>
 8030508:	4902      	ldr	r1, [pc, #8]	; (8030514 <CANMNGR_sendMsgs.part.0+0x1a4>)
 803050a:	e7a7      	b.n	803045c <CANMNGR_sendMsgs.part.0+0xec>
 803050c:	4901      	ldr	r1, [pc, #4]	; (8030514 <CANMNGR_sendMsgs.part.0+0x1a4>)
 803050e:	e7c1      	b.n	8030494 <CANMNGR_sendMsgs.part.0+0x124>
 8030510:	2000ada0 	.word	0x2000ada0
 8030514:	0804795c 	.word	0x0804795c
 8030518:	080479b4 	.word	0x080479b4
 803051c:	080441c0 	.word	0x080441c0
 8030520:	08047998 	.word	0x08047998
 8030524:	2000a2f0 	.word	0x2000a2f0
 8030528:	080441ac 	.word	0x080441ac
 803052c:	2000adec 	.word	0x2000adec

08030530 <addFilterMsgSrc(CAN_handlerIndex_t, CAN_fifo_t, COMM_CAN_deviceType_e) [clone .constprop.0]>:
 8030530:	b570      	push	{r4, r5, r6, lr}
 8030532:	b084      	sub	sp, #16
 8030534:	1e4e      	subs	r6, r1, #1
 8030536:	2300      	movs	r3, #0
 8030538:	4605      	mov	r5, r0
 803053a:	f44f 5480 	mov.w	r4, #4096	; 0x1000
 803053e:	40b4      	lsls	r4, r6
 8030540:	460a      	mov	r2, r1
 8030542:	f44f 4670 	mov.w	r6, #61440	; 0xf000
 8030546:	f8ad 5008 	strh.w	r5, [sp, #8]
 803054a:	4618      	mov	r0, r3
 803054c:	f240 1501 	movw	r5, #257	; 0x101
 8030550:	4669      	mov	r1, sp
 8030552:	f8ad 4000 	strh.w	r4, [sp]
 8030556:	f8ad 3002 	strh.w	r3, [sp, #2]
 803055a:	f88d 300b 	strb.w	r3, [sp, #11]
 803055e:	9601      	str	r6, [sp, #4]
 8030560:	f8ad 500c 	strh.w	r5, [sp, #12]
 8030564:	f005 f918 	bl	8035798 <CAN_addFilter>
 8030568:	b108      	cbz	r0, 803056e <addFilterMsgSrc(CAN_handlerIndex_t, CAN_fifo_t, COMM_CAN_deviceType_e) [clone .constprop.0]+0x3e>
 803056a:	b004      	add	sp, #16
 803056c:	bd70      	pop	{r4, r5, r6, pc}
 803056e:	480f      	ldr	r0, [pc, #60]	; (80305ac <addFilterMsgSrc(CAN_handlerIndex_t, CAN_fifo_t, COMM_CAN_deviceType_e) [clone .constprop.0]+0x7c>)
 8030570:	212f      	movs	r1, #47	; 0x2f
 8030572:	f00e fef4 	bl	803f35e <strrchr>
 8030576:	b158      	cbz	r0, 8030590 <addFilterMsgSrc(CAN_handlerIndex_t, CAN_fifo_t, COMM_CAN_deviceType_e) [clone .constprop.0]+0x60>
 8030578:	212f      	movs	r1, #47	; 0x2f
 803057a:	480c      	ldr	r0, [pc, #48]	; (80305ac <addFilterMsgSrc(CAN_handlerIndex_t, CAN_fifo_t, COMM_CAN_deviceType_e) [clone .constprop.0]+0x7c>)
 803057c:	f00e feef 	bl	803f35e <strrchr>
 8030580:	1c41      	adds	r1, r0, #1
 8030582:	4b0b      	ldr	r3, [pc, #44]	; (80305b0 <addFilterMsgSrc(CAN_handlerIndex_t, CAN_fifo_t, COMM_CAN_deviceType_e) [clone .constprop.0]+0x80>)
 8030584:	f240 12bf 	movw	r2, #447	; 0x1bf
 8030588:	2001      	movs	r0, #1
 803058a:	f7f2 f905 	bl	8022798 <DEBUG_logMsg>
 803058e:	e7ec      	b.n	803056a <addFilterMsgSrc(CAN_handlerIndex_t, CAN_fifo_t, COMM_CAN_deviceType_e) [clone .constprop.0]+0x3a>
 8030590:	4806      	ldr	r0, [pc, #24]	; (80305ac <addFilterMsgSrc(CAN_handlerIndex_t, CAN_fifo_t, COMM_CAN_deviceType_e) [clone .constprop.0]+0x7c>)
 8030592:	215c      	movs	r1, #92	; 0x5c
 8030594:	f00e fee3 	bl	803f35e <strrchr>
 8030598:	b128      	cbz	r0, 80305a6 <addFilterMsgSrc(CAN_handlerIndex_t, CAN_fifo_t, COMM_CAN_deviceType_e) [clone .constprop.0]+0x76>
 803059a:	215c      	movs	r1, #92	; 0x5c
 803059c:	4803      	ldr	r0, [pc, #12]	; (80305ac <addFilterMsgSrc(CAN_handlerIndex_t, CAN_fifo_t, COMM_CAN_deviceType_e) [clone .constprop.0]+0x7c>)
 803059e:	f00e fede 	bl	803f35e <strrchr>
 80305a2:	1c41      	adds	r1, r0, #1
 80305a4:	e7ed      	b.n	8030582 <addFilterMsgSrc(CAN_handlerIndex_t, CAN_fifo_t, COMM_CAN_deviceType_e) [clone .constprop.0]+0x52>
 80305a6:	4901      	ldr	r1, [pc, #4]	; (80305ac <addFilterMsgSrc(CAN_handlerIndex_t, CAN_fifo_t, COMM_CAN_deviceType_e) [clone .constprop.0]+0x7c>)
 80305a8:	e7eb      	b.n	8030582 <addFilterMsgSrc(CAN_handlerIndex_t, CAN_fifo_t, COMM_CAN_deviceType_e) [clone .constprop.0]+0x52>
 80305aa:	bf00      	nop
 80305ac:	0804795c 	.word	0x0804795c
 80305b0:	080479d0 	.word	0x080479d0

080305b4 <CANMNGR_enterThread>:
 80305b4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80305b8:	f640 10c4 	movw	r0, #2500	; 0x9c4
 80305bc:	b08b      	sub	sp, #44	; 0x2c
 80305be:	f8df a1d0 	ldr.w	sl, [pc, #464]	; 8030790 <CANMNGR_enterThread+0x1dc>
 80305c2:	4c70      	ldr	r4, [pc, #448]	; (8030784 <CANMNGR_enterThread+0x1d0>)
 80305c4:	f8df 91d4 	ldr.w	r9, [pc, #468]	; 803079c <CANMNGR_enterThread+0x1e8>
 80305c8:	f009 fcc2 	bl	8039f50 <_tx_thread_sleep>
 80305cc:	f004 ffe0 	bl	8035590 <CAN_init>
 80305d0:	2000      	movs	r0, #0
 80305d2:	f005 f82d 	bl	8035630 <CAN_setup>
 80305d6:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 80305da:	2104      	movs	r1, #4
 80305dc:	2001      	movs	r0, #1
 80305de:	f8ca 37e4 	str.w	r3, [sl, #2020]	; 0x7e4
 80305e2:	f8ca 47e0 	str.w	r4, [sl, #2016]	; 0x7e0
 80305e6:	f7ff ffa3 	bl	8030530 <addFilterMsgSrc(CAN_handlerIndex_t, CAN_fifo_t, COMM_CAN_deviceType_e) [clone .constprop.0]>
 80305ea:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 80305ee:	2103      	movs	r1, #3
 80305f0:	2001      	movs	r0, #1
 80305f2:	f8ca 35ec 	str.w	r3, [sl, #1516]	; 0x5ec
 80305f6:	f8ca 45e8 	str.w	r4, [sl, #1512]	; 0x5e8
 80305fa:	f7ff ff99 	bl	8030530 <addFilterMsgSrc(CAN_handlerIndex_t, CAN_fifo_t, COMM_CAN_deviceType_e) [clone .constprop.0]>
 80305fe:	4b62      	ldr	r3, [pc, #392]	; (8030788 <CANMNGR_enterThread+0x1d4>)
 8030600:	f8ca 33f0 	str.w	r3, [sl, #1008]	; 0x3f0
 8030604:	2102      	movs	r1, #2
 8030606:	2340      	movs	r3, #64	; 0x40
 8030608:	2000      	movs	r0, #0
 803060a:	f8ca 33f4 	str.w	r3, [sl, #1012]	; 0x3f4
 803060e:	f7ff ff8f 	bl	8030530 <addFilterMsgSrc(CAN_handlerIndex_t, CAN_fifo_t, COMM_CAN_deviceType_e) [clone .constprop.0]>
 8030612:	464b      	mov	r3, r9
 8030614:	f509 7020 	add.w	r0, r9, #640	; 0x280
 8030618:	2214      	movs	r2, #20
 803061a:	2120      	movs	r1, #32
 803061c:	f7fd fe84 	bl	802e328 <UTILITIES_initRingBuff>
 8030620:	f509 7325 	add.w	r3, r9, #660	; 0x294
 8030624:	f209 5014 	addw	r0, r9, #1300	; 0x514
 8030628:	2214      	movs	r2, #20
 803062a:	2120      	movs	r1, #32
 803062c:	f7fd fe7c 	bl	802e328 <UTILITIES_initRingBuff>
 8030630:	2210      	movs	r2, #16
 8030632:	2320      	movs	r3, #32
 8030634:	2080      	movs	r0, #128	; 0x80
 8030636:	f8c9 2290 	str.w	r2, [r9, #656]	; 0x290
 803063a:	f8c9 3524 	str.w	r3, [r9, #1316]	; 0x524
 803063e:	f7f0 fb75 	bl	8020d2c <SYSTEM_setThreadFlag>
 8030642:	e001      	b.n	8030648 <CANMNGR_enterThread+0x94>
 8030644:	f009 fc84 	bl	8039f50 <_tx_thread_sleep>
 8030648:	f7f0 fb64 	bl	8020d14 <SYSTEM_areThreadsRunning>
 803064c:	4603      	mov	r3, r0
 803064e:	2064      	movs	r0, #100	; 0x64
 8030650:	2b00      	cmp	r3, #0
 8030652:	d0f7      	beq.n	8030644 <CANMNGR_enterThread+0x90>
 8030654:	4f4d      	ldr	r7, [pc, #308]	; (803078c <CANMNGR_enterThread+0x1d8>)
 8030656:	2464      	movs	r4, #100	; 0x64
 8030658:	2080      	movs	r0, #128	; 0x80
 803065a:	f7f0 fb67 	bl	8020d2c <SYSTEM_setThreadFlag>
 803065e:	9400      	str	r4, [sp, #0]
 8030660:	ab04      	add	r3, sp, #16
 8030662:	2201      	movs	r2, #1
 8030664:	213f      	movs	r1, #63	; 0x3f
 8030666:	4638      	mov	r0, r7
 8030668:	f008 fd0c 	bl	8039084 <_tx_event_flags_get>
 803066c:	2800      	cmp	r0, #0
 803066e:	d1f3      	bne.n	8030658 <CANMNGR_enterThread+0xa4>
 8030670:	2401      	movs	r4, #1
 8030672:	9b04      	ldr	r3, [sp, #16]
 8030674:	4e46      	ldr	r6, [pc, #280]	; (8030790 <CANMNGR_enterThread+0x1dc>)
 8030676:	4625      	mov	r5, r4
 8030678:	421d      	tst	r5, r3
 803067a:	d124      	bne.n	80306c6 <CANMNGR_enterThread+0x112>
 803067c:	3401      	adds	r4, #1
 803067e:	2c05      	cmp	r4, #5
 8030680:	ea4f 0545 	mov.w	r5, r5, lsl #1
 8030684:	f506 76fc 	add.w	r6, r6, #504	; 0x1f8
 8030688:	d1f6      	bne.n	8030678 <CANMNGR_enterThread+0xc4>
 803068a:	f8d9 2290 	ldr.w	r2, [r9, #656]	; 0x290
 803068e:	4213      	tst	r3, r2
 8030690:	d161      	bne.n	8030756 <CANMNGR_enterThread+0x1a2>
 8030692:	f8d9 2524 	ldr.w	r2, [r9, #1316]	; 0x524
 8030696:	421a      	tst	r2, r3
 8030698:	d0dd      	beq.n	8030656 <CANMNGR_enterThread+0xa2>
 803069a:	483e      	ldr	r0, [pc, #248]	; (8030794 <CANMNGR_enterThread+0x1e0>)
 803069c:	a905      	add	r1, sp, #20
 803069e:	f7fd fe55 	bl	802e34c <UTILITIES_popRingBuff>
 80306a2:	a905      	add	r1, sp, #20
 80306a4:	2001      	movs	r0, #1
 80306a6:	f005 f8b3 	bl	8035810 <CAN_sendMsg>
 80306aa:	2800      	cmp	r0, #0
 80306ac:	d0f9      	beq.n	80306a2 <CANMNGR_enterThread+0xee>
 80306ae:	4839      	ldr	r0, [pc, #228]	; (8030794 <CANMNGR_enterThread+0x1e0>)
 80306b0:	f7fd fea4 	bl	802e3fc <UTILITIES_isDataAvailable>
 80306b4:	2800      	cmp	r0, #0
 80306b6:	d0ce      	beq.n	8030656 <CANMNGR_enterThread+0xa2>
 80306b8:	f8d9 1524 	ldr.w	r1, [r9, #1316]	; 0x524
 80306bc:	2200      	movs	r2, #0
 80306be:	4638      	mov	r0, r7
 80306c0:	f008 fd5a 	bl	8039178 <_tx_event_flags_set>
 80306c4:	e7c7      	b.n	8030656 <CANMNGR_enterThread+0xa2>
 80306c6:	b2e1      	uxtb	r1, r4
 80306c8:	a805      	add	r0, sp, #20
 80306ca:	9103      	str	r1, [sp, #12]
 80306cc:	f005 f8b4 	bl	8035838 <CAN_readMessage>
 80306d0:	f8d6 0200 	ldr.w	r0, [r6, #512]	; 0x200
 80306d4:	9903      	ldr	r1, [sp, #12]
 80306d6:	ebc4 1384 	rsb	r3, r4, r4, lsl #6
 80306da:	ebc0 1000 	rsb	r0, r0, r0, lsl #4
 80306de:	eb00 08c3 	add.w	r8, r0, r3, lsl #3
 80306e2:	44d0      	add	r8, sl
 80306e4:	00db      	lsls	r3, r3, #3
 80306e6:	f898 b018 	ldrb.w	fp, [r8, #24]
 80306ea:	f1bb 0f00 	cmp.w	fp, #0
 80306ee:	d001      	beq.n	80306f4 <CANMNGR_enterThread+0x140>
 80306f0:	9b04      	ldr	r3, [sp, #16]
 80306f2:	e7c3      	b.n	803067c <CANMNGR_enterThread+0xc8>
 80306f4:	331f      	adds	r3, #31
 80306f6:	f89d e01e 	ldrb.w	lr, [sp, #30]
 80306fa:	f888 1019 	strb.w	r1, [r8, #25]
 80306fe:	4418      	add	r0, r3
 8030700:	9b06      	ldr	r3, [sp, #24]
 8030702:	f8c8 301a 	str.w	r3, [r8, #26]
 8030706:	f10d 011f 	add.w	r1, sp, #31
 803070a:	4450      	add	r0, sl
 803070c:	2208      	movs	r2, #8
 803070e:	f888 e01e 	strb.w	lr, [r8, #30]
 8030712:	f00e ff76 	bl	803f602 <__aeabi_memcpy>
 8030716:	f04f 0301 	mov.w	r3, #1
 803071a:	f888 3018 	strb.w	r3, [r8, #24]
 803071e:	f8d6 3200 	ldr.w	r3, [r6, #512]	; 0x200
 8030722:	f89d 1018 	ldrb.w	r1, [sp, #24]
 8030726:	f8d6 2208 	ldr.w	r2, [r6, #520]	; 0x208
 803072a:	2b1e      	cmp	r3, #30
 803072c:	bf94      	ite	ls
 803072e:	3301      	addls	r3, #1
 8030730:	465b      	movhi	r3, fp
 8030732:	3201      	adds	r2, #1
 8030734:	2904      	cmp	r1, #4
 8030736:	f8c6 2208 	str.w	r2, [r6, #520]	; 0x208
 803073a:	bf14      	ite	ne
 803073c:	e9d6 017e 	ldrdne	r0, r1, [r6, #504]	; 0x1f8
 8030740:	4811      	ldreq	r0, [pc, #68]	; (8030788 <CANMNGR_enterThread+0x1d4>)
 8030742:	f8c6 3200 	str.w	r3, [r6, #512]	; 0x200
 8030746:	f04f 0200 	mov.w	r2, #0
 803074a:	bf08      	it	eq
 803074c:	f44f 4180 	moveq.w	r1, #16384	; 0x4000
 8030750:	f008 fd12 	bl	8039178 <_tx_event_flags_set>
 8030754:	e7cc      	b.n	80306f0 <CANMNGR_enterThread+0x13c>
 8030756:	4810      	ldr	r0, [pc, #64]	; (8030798 <CANMNGR_enterThread+0x1e4>)
 8030758:	a905      	add	r1, sp, #20
 803075a:	f7fd fdf7 	bl	802e34c <UTILITIES_popRingBuff>
 803075e:	a905      	add	r1, sp, #20
 8030760:	2000      	movs	r0, #0
 8030762:	f005 f855 	bl	8035810 <CAN_sendMsg>
 8030766:	2800      	cmp	r0, #0
 8030768:	d0f9      	beq.n	803075e <CANMNGR_enterThread+0x1aa>
 803076a:	480b      	ldr	r0, [pc, #44]	; (8030798 <CANMNGR_enterThread+0x1e4>)
 803076c:	f7fd fe46 	bl	802e3fc <UTILITIES_isDataAvailable>
 8030770:	b908      	cbnz	r0, 8030776 <CANMNGR_enterThread+0x1c2>
 8030772:	9b04      	ldr	r3, [sp, #16]
 8030774:	e78d      	b.n	8030692 <CANMNGR_enterThread+0xde>
 8030776:	f8d9 1290 	ldr.w	r1, [r9, #656]	; 0x290
 803077a:	2200      	movs	r2, #0
 803077c:	4638      	mov	r0, r7
 803077e:	f008 fcfb 	bl	8039178 <_tx_event_flags_set>
 8030782:	e7f6      	b.n	8030772 <CANMNGR_enterThread+0x1be>
 8030784:	2000e158 	.word	0x2000e158
 8030788:	20004a24 	.word	0x20004a24
 803078c:	2000a2f0 	.word	0x2000a2f0
 8030790:	2000a3c8 	.word	0x2000a3c8
 8030794:	2000b300 	.word	0x2000b300
 8030798:	2000b06c 	.word	0x2000b06c
 803079c:	2000adec 	.word	0x2000adec

080307a0 <CANMNGR_sendMsg>:
 80307a0:	2801      	cmp	r0, #1
 80307a2:	d803      	bhi.n	80307ac <CANMNGR_sendMsg+0xc>
 80307a4:	b111      	cbz	r1, 80307ac <CANMNGR_sendMsg+0xc>
 80307a6:	2201      	movs	r2, #1
 80307a8:	f7ff bde2 	b.w	8030370 <CANMNGR_sendMsgs.part.0>
 80307ac:	2000      	movs	r0, #0
 80307ae:	4770      	bx	lr

080307b0 <CANMNGR_readMsgSrc>:
 80307b0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80307b4:	2804      	cmp	r0, #4
 80307b6:	b082      	sub	sp, #8
 80307b8:	4604      	mov	r4, r0
 80307ba:	d82b      	bhi.n	8030814 <CANMNGR_readMsgSrc+0x64>
 80307bc:	4608      	mov	r0, r1
 80307be:	b371      	cbz	r1, 803081e <CANMNGR_readMsgSrc+0x6e>
 80307c0:	4d19      	ldr	r5, [pc, #100]	; (8030828 <CANMNGR_readMsgSrc+0x78>)
 80307c2:	ebc4 1384 	rsb	r3, r4, r4, lsl #6
 80307c6:	eb05 06c3 	add.w	r6, r5, r3, lsl #3
 80307ca:	01a7      	lsls	r7, r4, #6
 80307cc:	68f1      	ldr	r1, [r6, #12]
 80307ce:	ebc1 1101 	rsb	r1, r1, r1, lsl #4
 80307d2:	eb01 01c3 	add.w	r1, r1, r3, lsl #3
 80307d6:	eb05 0801 	add.w	r8, r5, r1
 80307da:	f898 3018 	ldrb.w	r3, [r8, #24]
 80307de:	b1d3      	cbz	r3, 8030816 <CANMNGR_readMsgSrc+0x66>
 80307e0:	3119      	adds	r1, #25
 80307e2:	4429      	add	r1, r5
 80307e4:	220e      	movs	r2, #14
 80307e6:	9301      	str	r3, [sp, #4]
 80307e8:	f00e ff0b 	bl	803f602 <__aeabi_memcpy>
 80307ec:	68f0      	ldr	r0, [r6, #12]
 80307ee:	6971      	ldr	r1, [r6, #20]
 80307f0:	9b01      	ldr	r3, [sp, #4]
 80307f2:	1b3c      	subs	r4, r7, r4
 80307f4:	2200      	movs	r2, #0
 80307f6:	281e      	cmp	r0, #30
 80307f8:	eb05 05c4 	add.w	r5, r5, r4, lsl #3
 80307fc:	f101 0101 	add.w	r1, r1, #1
 8030800:	f888 2018 	strb.w	r2, [r8, #24]
 8030804:	bf98      	it	ls
 8030806:	1c42      	addls	r2, r0, #1
 8030808:	4618      	mov	r0, r3
 803080a:	6171      	str	r1, [r6, #20]
 803080c:	60ea      	str	r2, [r5, #12]
 803080e:	b002      	add	sp, #8
 8030810:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8030814:	2300      	movs	r3, #0
 8030816:	4618      	mov	r0, r3
 8030818:	b002      	add	sp, #8
 803081a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 803081e:	460b      	mov	r3, r1
 8030820:	4618      	mov	r0, r3
 8030822:	b002      	add	sp, #8
 8030824:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8030828:	2000a3c8 	.word	0x2000a3c8

0803082c <CANMNGR_NumMsgSrcPending>:
 803082c:	2804      	cmp	r0, #4
 803082e:	d808      	bhi.n	8030842 <CANMNGR_NumMsgSrcPending+0x16>
 8030830:	4b05      	ldr	r3, [pc, #20]	; (8030848 <CANMNGR_NumMsgSrcPending+0x1c>)
 8030832:	ebc0 1080 	rsb	r0, r0, r0, lsl #6
 8030836:	eb03 03c0 	add.w	r3, r3, r0, lsl #3
 803083a:	e9d3 0304 	ldrd	r0, r3, [r3, #16]
 803083e:	1ac0      	subs	r0, r0, r3
 8030840:	4770      	bx	lr
 8030842:	2000      	movs	r0, #0
 8030844:	4770      	bx	lr
 8030846:	bf00      	nop
 8030848:	2000a3c8 	.word	0x2000a3c8

0803084c <STO_setState>:
 803084c:	2801      	cmp	r0, #1
 803084e:	4603      	mov	r3, r0
 8030850:	d801      	bhi.n	8030856 <STO_setState+0xa>
 8030852:	2901      	cmp	r1, #1
 8030854:	d900      	bls.n	8030858 <STO_setState+0xc>
 8030856:	4770      	bx	lr
 8030858:	4a05      	ldr	r2, [pc, #20]	; (8030870 <STO_setState+0x24>)
 803085a:	4806      	ldr	r0, [pc, #24]	; (8030874 <STO_setState+0x28>)
 803085c:	54d1      	strb	r1, [r2, r3]
 803085e:	7812      	ldrb	r2, [r2, #0]
 8030860:	3a00      	subs	r2, #0
 8030862:	f04f 0110 	mov.w	r1, #16
 8030866:	bf18      	it	ne
 8030868:	2201      	movne	r2, #1
 803086a:	f004 bc5f 	b.w	803512c <GPIO_setPins>
 803086e:	bf00      	nop
 8030870:	2000b314 	.word	0x2000b314
 8030874:	40021400 	.word	0x40021400

08030878 <SubscriberBase::update(unsigned char*, unsigned short)>:
 8030878:	4770      	bx	lr
 803087a:	bf00      	nop

0803087c <Publisher::Publisher()>:
 803087c:	b538      	push	{r3, r4, r5, lr}
 803087e:	1d02      	adds	r2, r0, #4
 8030880:	2305      	movs	r3, #5
 8030882:	2400      	movs	r4, #0
 8030884:	8003      	strh	r3, [r0, #0]
 8030886:	4605      	mov	r5, r0
 8030888:	6402      	str	r2, [r0, #64]	; 0x40
 803088a:	4623      	mov	r3, r4
 803088c:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8030890:	eb05 0383 	add.w	r3, r5, r3, lsl #2
 8030894:	1d18      	adds	r0, r3, #4
 8030896:	220c      	movs	r2, #12
 8030898:	2100      	movs	r1, #0
 803089a:	f00e fedb 	bl	803f654 <memset>
 803089e:	3401      	adds	r4, #1
 80308a0:	782a      	ldrb	r2, [r5, #0]
 80308a2:	b2e3      	uxtb	r3, r4
 80308a4:	429a      	cmp	r2, r3
 80308a6:	d8f1      	bhi.n	803088c <Publisher::Publisher()+0x10>
 80308a8:	4628      	mov	r0, r5
 80308aa:	bd38      	pop	{r3, r4, r5, pc}

080308ac <Publisher::subscribe(SubscriberBase*)>:
 80308ac:	b470      	push	{r4, r5, r6}
 80308ae:	7805      	ldrb	r5, [r0, #0]
 80308b0:	7843      	ldrb	r3, [r0, #1]
 80308b2:	42ab      	cmp	r3, r5
 80308b4:	d228      	bcs.n	8030908 <Publisher::subscribe(SubscriberBase*)+0x5c>
 80308b6:	b355      	cbz	r5, 803090e <Publisher::subscribe(SubscriberBase*)+0x62>
 80308b8:	4603      	mov	r3, r0
 80308ba:	2200      	movs	r2, #0
 80308bc:	e005      	b.n	80308ca <Publisher::subscribe(SubscriberBase*)+0x1e>
 80308be:	3201      	adds	r2, #1
 80308c0:	b2d4      	uxtb	r4, r2
 80308c2:	42a5      	cmp	r5, r4
 80308c4:	f103 030c 	add.w	r3, r3, #12
 80308c8:	d91e      	bls.n	8030908 <Publisher::subscribe(SubscriberBase*)+0x5c>
 80308ca:	685c      	ldr	r4, [r3, #4]
 80308cc:	2c00      	cmp	r4, #0
 80308ce:	d1f6      	bne.n	80308be <Publisher::subscribe(SubscriberBase*)+0x12>
 80308d0:	7a1c      	ldrb	r4, [r3, #8]
 80308d2:	2c00      	cmp	r4, #0
 80308d4:	d1f3      	bne.n	80308be <Publisher::subscribe(SubscriberBase*)+0x12>
 80308d6:	6c04      	ldr	r4, [r0, #64]	; 0x40
 80308d8:	4625      	mov	r5, r4
 80308da:	68a4      	ldr	r4, [r4, #8]
 80308dc:	2c00      	cmp	r4, #0
 80308de:	d1fb      	bne.n	80308d8 <Publisher::subscribe(SubscriberBase*)+0x2c>
 80308e0:	eb02 0342 	add.w	r3, r2, r2, lsl #1
 80308e4:	009b      	lsls	r3, r3, #2
 80308e6:	1d1e      	adds	r6, r3, #4
 80308e8:	4403      	add	r3, r0
 80308ea:	2201      	movs	r2, #1
 80308ec:	4406      	add	r6, r0
 80308ee:	60ae      	str	r6, [r5, #8]
 80308f0:	6059      	str	r1, [r3, #4]
 80308f2:	60dc      	str	r4, [r3, #12]
 80308f4:	725a      	strb	r2, [r3, #9]
 80308f6:	721a      	strb	r2, [r3, #8]
 80308f8:	7841      	ldrb	r1, [r0, #1]
 80308fa:	4411      	add	r1, r2
 80308fc:	7041      	strb	r1, [r0, #1]
 80308fe:	685b      	ldr	r3, [r3, #4]
 8030900:	4610      	mov	r0, r2
 8030902:	bc70      	pop	{r4, r5, r6}
 8030904:	711a      	strb	r2, [r3, #4]
 8030906:	4770      	bx	lr
 8030908:	2000      	movs	r0, #0
 803090a:	bc70      	pop	{r4, r5, r6}
 803090c:	4770      	bx	lr
 803090e:	4628      	mov	r0, r5
 8030910:	e7fb      	b.n	803090a <Publisher::subscribe(SubscriberBase*)+0x5e>
 8030912:	bf00      	nop

08030914 <Publisher::unsubscribe(SubscriberBase*)>:
 8030914:	7842      	ldrb	r2, [r0, #1]
 8030916:	b1ea      	cbz	r2, 8030954 <Publisher::unsubscribe(SubscriberBase*)+0x40>
 8030918:	6c03      	ldr	r3, [r0, #64]	; 0x40
 803091a:	b4f0      	push	{r4, r5, r6, r7}
 803091c:	681c      	ldr	r4, [r3, #0]
 803091e:	428c      	cmp	r4, r1
 8030920:	d019      	beq.n	8030956 <Publisher::unsubscribe(SubscriberBase*)+0x42>
 8030922:	7806      	ldrb	r6, [r0, #0]
 8030924:	b16e      	cbz	r6, 8030942 <Publisher::unsubscribe(SubscriberBase*)+0x2e>
 8030926:	2200      	movs	r2, #0
 8030928:	e001      	b.n	803092e <Publisher::unsubscribe(SubscriberBase*)+0x1a>
 803092a:	42ae      	cmp	r6, r5
 803092c:	d909      	bls.n	8030942 <Publisher::unsubscribe(SubscriberBase*)+0x2e>
 803092e:	461f      	mov	r7, r3
 8030930:	689b      	ldr	r3, [r3, #8]
 8030932:	681c      	ldr	r4, [r3, #0]
 8030934:	3201      	adds	r2, #1
 8030936:	428c      	cmp	r4, r1
 8030938:	b2d5      	uxtb	r5, r2
 803093a:	d1f6      	bne.n	803092a <Publisher::unsubscribe(SubscriberBase*)+0x16>
 803093c:	689a      	ldr	r2, [r3, #8]
 803093e:	60ba      	str	r2, [r7, #8]
 8030940:	460c      	mov	r4, r1
 8030942:	2200      	movs	r2, #0
 8030944:	7122      	strb	r2, [r4, #4]
 8030946:	601a      	str	r2, [r3, #0]
 8030948:	809a      	strh	r2, [r3, #4]
 803094a:	7843      	ldrb	r3, [r0, #1]
 803094c:	3b01      	subs	r3, #1
 803094e:	bcf0      	pop	{r4, r5, r6, r7}
 8030950:	7043      	strb	r3, [r0, #1]
 8030952:	4770      	bx	lr
 8030954:	4770      	bx	lr
 8030956:	2a01      	cmp	r2, #1
 8030958:	bf8c      	ite	hi
 803095a:	689a      	ldrhi	r2, [r3, #8]
 803095c:	1d02      	addls	r2, r0, #4
 803095e:	6402      	str	r2, [r0, #64]	; 0x40
 8030960:	460c      	mov	r4, r1
 8030962:	e7ee      	b.n	8030942 <Publisher::unsubscribe(SubscriberBase*)+0x2e>

08030964 <Publisher::update(unsigned char*, unsigned short)>:
 8030964:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8030966:	6c04      	ldr	r4, [r0, #64]	; 0x40
 8030968:	b164      	cbz	r4, 8030984 <Publisher::update(unsigned char*, unsigned short)+0x20>
 803096a:	4d09      	ldr	r5, [pc, #36]	; (8030990 <Publisher::update(unsigned char*, unsigned short)+0x2c>)
 803096c:	460e      	mov	r6, r1
 803096e:	4617      	mov	r7, r2
 8030970:	7963      	ldrb	r3, [r4, #5]
 8030972:	b123      	cbz	r3, 803097e <Publisher::update(unsigned char*, unsigned short)+0x1a>
 8030974:	6820      	ldr	r0, [r4, #0]
 8030976:	6803      	ldr	r3, [r0, #0]
 8030978:	681b      	ldr	r3, [r3, #0]
 803097a:	42ab      	cmp	r3, r5
 803097c:	d103      	bne.n	8030986 <Publisher::update(unsigned char*, unsigned short)+0x22>
 803097e:	68a4      	ldr	r4, [r4, #8]
 8030980:	2c00      	cmp	r4, #0
 8030982:	d1f5      	bne.n	8030970 <Publisher::update(unsigned char*, unsigned short)+0xc>
 8030984:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8030986:	463a      	mov	r2, r7
 8030988:	4631      	mov	r1, r6
 803098a:	4798      	blx	r3
 803098c:	e7f7      	b.n	803097e <Publisher::update(unsigned char*, unsigned short)+0x1a>
 803098e:	bf00      	nop
 8030990:	08030879 	.word	0x08030879

08030994 <ProgressMonitor::update(unsigned char*, unsigned short)>:
 8030994:	6903      	ldr	r3, [r0, #16]
 8030996:	b10b      	cbz	r3, 803099c <ProgressMonitor::update(unsigned char*, unsigned short)+0x8>
 8030998:	6940      	ldr	r0, [r0, #20]
 803099a:	4718      	bx	r3
 803099c:	4770      	bx	lr
 803099e:	bf00      	nop

080309a0 <ProgressMonitor::reset()>:
 80309a0:	2300      	movs	r3, #0
 80309a2:	7303      	strb	r3, [r0, #12]
 80309a4:	4770      	bx	lr
 80309a6:	bf00      	nop

080309a8 <ProgressMonitor::ProgressMonitor()>:
 80309a8:	4a04      	ldr	r2, [pc, #16]	; (80309bc <ProgressMonitor::ProgressMonitor()+0x14>)
 80309aa:	6002      	str	r2, [r0, #0]
 80309ac:	2200      	movs	r2, #0
 80309ae:	e9c0 2204 	strd	r2, r2, [r0, #16]
 80309b2:	7102      	strb	r2, [r0, #4]
 80309b4:	6082      	str	r2, [r0, #8]
 80309b6:	7302      	strb	r2, [r0, #12]
 80309b8:	4770      	bx	lr
 80309ba:	bf00      	nop
 80309bc:	080479ec 	.word	0x080479ec

080309c0 <ProgressMonitor::registerUpdateCallback(void (*)(void*), void*)>:
 80309c0:	e9c0 1204 	strd	r1, r2, [r0, #16]
 80309c4:	4770      	bx	lr
 80309c6:	bf00      	nop

080309c8 <ProgressMonitor::getIntervals()>:
 80309c8:	6880      	ldr	r0, [r0, #8]
 80309ca:	4770      	bx	lr

080309cc <AxisTelemetryMonitor::reset()>:
 80309cc:	2300      	movs	r3, #0
 80309ce:	6a02      	ldr	r2, [r0, #32]
 80309d0:	61c2      	str	r2, [r0, #28]
 80309d2:	6242      	str	r2, [r0, #36]	; 0x24
 80309d4:	7303      	strb	r3, [r0, #12]
 80309d6:	6083      	str	r3, [r0, #8]
 80309d8:	7603      	strb	r3, [r0, #24]
 80309da:	4770      	bx	lr

080309dc <AxisTelemetryMonitor::update(unsigned char*, unsigned short)>:
 80309dc:	2a13      	cmp	r2, #19
 80309de:	d000      	beq.n	80309e2 <AxisTelemetryMonitor::update(unsigned char*, unsigned short)+0x6>
 80309e0:	4770      	bx	lr
 80309e2:	7e03      	ldrb	r3, [r0, #24]
 80309e4:	f8d1 2002 	ldr.w	r2, [r1, #2]
 80309e8:	b510      	push	{r4, lr}
 80309ea:	4604      	mov	r4, r0
 80309ec:	6202      	str	r2, [r0, #32]
 80309ee:	b113      	cbz	r3, 80309f6 <AxisTelemetryMonitor::update(unsigned char*, unsigned short)+0x1a>
 80309f0:	6803      	ldr	r3, [r0, #0]
 80309f2:	685b      	ldr	r3, [r3, #4]
 80309f4:	4798      	blx	r3
 80309f6:	7923      	ldrb	r3, [r4, #4]
 80309f8:	b903      	cbnz	r3, 80309fc <AxisTelemetryMonitor::update(unsigned char*, unsigned short)+0x20>
 80309fa:	bd10      	pop	{r4, pc}
 80309fc:	e9d4 3007 	ldrd	r3, r0, [r4, #28]
 8030a00:	1ac0      	subs	r0, r0, r3
 8030a02:	f00e f9e4 	bl	803edce <abs>
 8030a06:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 8030a08:	4298      	cmp	r0, r3
 8030a0a:	d3f6      	bcc.n	80309fa <AxisTelemetryMonitor::update(unsigned char*, unsigned short)+0x1e>
 8030a0c:	e9d4 0208 	ldrd	r0, r2, [r4, #32]
 8030a10:	2301      	movs	r3, #1
 8030a12:	1a80      	subs	r0, r0, r2
 8030a14:	7323      	strb	r3, [r4, #12]
 8030a16:	f00e f9da 	bl	803edce <abs>
 8030a1a:	7923      	ldrb	r3, [r4, #4]
 8030a1c:	6a21      	ldr	r1, [r4, #32]
 8030a1e:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 8030a20:	61e1      	str	r1, [r4, #28]
 8030a22:	fbb0 f0f2 	udiv	r0, r0, r2
 8030a26:	60a0      	str	r0, [r4, #8]
 8030a28:	2b00      	cmp	r3, #0
 8030a2a:	d0e6      	beq.n	80309fa <AxisTelemetryMonitor::update(unsigned char*, unsigned short)+0x1e>
 8030a2c:	6923      	ldr	r3, [r4, #16]
 8030a2e:	2b00      	cmp	r3, #0
 8030a30:	d0e3      	beq.n	80309fa <AxisTelemetryMonitor::update(unsigned char*, unsigned short)+0x1e>
 8030a32:	6960      	ldr	r0, [r4, #20]
 8030a34:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8030a38:	4718      	bx	r3
 8030a3a:	bf00      	nop

08030a3c <AxisTelemetryMonitor::AxisTelemetryMonitor()>:
 8030a3c:	b510      	push	{r4, lr}
 8030a3e:	4604      	mov	r4, r0
 8030a40:	f7ff ffb2 	bl	80309a8 <ProgressMonitor::ProgressMonitor()>
 8030a44:	4b02      	ldr	r3, [pc, #8]	; (8030a50 <AxisTelemetryMonitor::AxisTelemetryMonitor()+0x14>)
 8030a46:	6023      	str	r3, [r4, #0]
 8030a48:	2300      	movs	r3, #0
 8030a4a:	62a3      	str	r3, [r4, #40]	; 0x28
 8030a4c:	4620      	mov	r0, r4
 8030a4e:	bd10      	pop	{r4, pc}
 8030a50:	080479fc 	.word	0x080479fc

08030a54 <AxisTelemetryMonitor::setUpdateInterval(unsigned int)>:
 8030a54:	6281      	str	r1, [r0, #40]	; 0x28
 8030a56:	b901      	cbnz	r1, 8030a5a <AxisTelemetryMonitor::setUpdateInterval(unsigned int)+0x6>
 8030a58:	7101      	strb	r1, [r0, #4]
 8030a5a:	4770      	bx	lr

08030a5c <AxisTelemetryMonitor::setEncoderCount(int)>:
 8030a5c:	2300      	movs	r3, #0
 8030a5e:	e9c0 1108 	strd	r1, r1, [r0, #32]
 8030a62:	61c1      	str	r1, [r0, #28]
 8030a64:	7303      	strb	r3, [r0, #12]
 8030a66:	4770      	bx	lr

08030a68 <AxisTelemetryMonitor::resetOnUpdate()>:
 8030a68:	2301      	movs	r3, #1
 8030a6a:	7603      	strb	r3, [r0, #24]
 8030a6c:	4770      	bx	lr
 8030a6e:	bf00      	nop

08030a70 <int algorithms::helpers::sort_descending<int>(void const*, void const*)>:
 8030a70:	6802      	ldr	r2, [r0, #0]
 8030a72:	680b      	ldr	r3, [r1, #0]
 8030a74:	429a      	cmp	r2, r3
 8030a76:	dc03      	bgt.n	8030a80 <int algorithms::helpers::sort_descending<int>(void const*, void const*)+0x10>
 8030a78:	bfb4      	ite	lt
 8030a7a:	2001      	movlt	r0, #1
 8030a7c:	2000      	movge	r0, #0
 8030a7e:	4770      	bx	lr
 8030a80:	f04f 30ff 	mov.w	r0, #4294967295
 8030a84:	4770      	bx	lr
 8030a86:	bf00      	nop

08030a88 <TorqueMonitor::update(unsigned char*, unsigned short)>:
 8030a88:	b109      	cbz	r1, 8030a8e <TorqueMonitor::update(unsigned char*, unsigned short)+0x6>
 8030a8a:	2a13      	cmp	r2, #19
 8030a8c:	d000      	beq.n	8030a90 <TorqueMonitor::update(unsigned char*, unsigned short)+0x8>
 8030a8e:	4770      	bx	lr
 8030a90:	7b83      	ldrb	r3, [r0, #14]
 8030a92:	2b00      	cmp	r3, #0
 8030a94:	d1fb      	bne.n	8030a8e <TorqueMonitor::update(unsigned char*, unsigned short)+0x6>
 8030a96:	b430      	push	{r4, r5}
 8030a98:	8984      	ldrh	r4, [r0, #12]
 8030a9a:	88c2      	ldrh	r2, [r0, #6]
 8030a9c:	6885      	ldr	r5, [r0, #8]
 8030a9e:	1c63      	adds	r3, r4, #1
 8030aa0:	b29b      	uxth	r3, r3
 8030aa2:	8183      	strh	r3, [r0, #12]
 8030aa4:	1ad3      	subs	r3, r2, r3
 8030aa6:	fab3 f383 	clz	r3, r3
 8030aaa:	f8d1 100a 	ldr.w	r1, [r1, #10]
 8030aae:	f845 1024 	str.w	r1, [r5, r4, lsl #2]
 8030ab2:	095b      	lsrs	r3, r3, #5
 8030ab4:	bc30      	pop	{r4, r5}
 8030ab6:	7383      	strb	r3, [r0, #14]
 8030ab8:	4770      	bx	lr
 8030aba:	bf00      	nop

08030abc <TorqueMonitor::TorqueMonitor(unsigned short)>:
 8030abc:	b538      	push	{r3, r4, r5, lr}
 8030abe:	4604      	mov	r4, r0
 8030ac0:	2500      	movs	r5, #0
 8030ac2:	4b08      	ldr	r3, [pc, #32]	; (8030ae4 <TorqueMonitor::TorqueMonitor(unsigned short)+0x28>)
 8030ac4:	80c1      	strh	r1, [r0, #6]
 8030ac6:	6023      	str	r3, [r4, #0]
 8030ac8:	0088      	lsls	r0, r1, #2
 8030aca:	7125      	strb	r5, [r4, #4]
 8030acc:	f00f fafe 	bl	80400cc <operator new[](unsigned int)>
 8030ad0:	88e2      	ldrh	r2, [r4, #6]
 8030ad2:	81a5      	strh	r5, [r4, #12]
 8030ad4:	73a5      	strb	r5, [r4, #14]
 8030ad6:	4629      	mov	r1, r5
 8030ad8:	60a0      	str	r0, [r4, #8]
 8030ada:	0092      	lsls	r2, r2, #2
 8030adc:	f00e fdba 	bl	803f654 <memset>
 8030ae0:	4620      	mov	r0, r4
 8030ae2:	bd38      	pop	{r3, r4, r5, pc}
 8030ae4:	08047a0c 	.word	0x08047a0c

08030ae8 <TorqueMonitor::~TorqueMonitor()>:
 8030ae8:	b510      	push	{r4, lr}
 8030aea:	4604      	mov	r4, r0
 8030aec:	6880      	ldr	r0, [r0, #8]
 8030aee:	4b03      	ldr	r3, [pc, #12]	; (8030afc <TorqueMonitor::~TorqueMonitor()+0x14>)
 8030af0:	6023      	str	r3, [r4, #0]
 8030af2:	b108      	cbz	r0, 8030af8 <TorqueMonitor::~TorqueMonitor()+0x10>
 8030af4:	f000 fb86 	bl	8031204 <operator delete[](void*)>
 8030af8:	4620      	mov	r0, r4
 8030afa:	bd10      	pop	{r4, pc}
 8030afc:	08047a0c 	.word	0x08047a0c

08030b00 <TorqueMonitor::reset()>:
 8030b00:	88c2      	ldrh	r2, [r0, #6]
 8030b02:	2100      	movs	r1, #0
 8030b04:	8181      	strh	r1, [r0, #12]
 8030b06:	7381      	strb	r1, [r0, #14]
 8030b08:	0092      	lsls	r2, r2, #2
 8030b0a:	6880      	ldr	r0, [r0, #8]
 8030b0c:	f00e bda2 	b.w	803f654 <memset>

08030b10 <TorqueMonitor::isFull()>:
 8030b10:	7b80      	ldrb	r0, [r0, #14]
 8030b12:	4770      	bx	lr

08030b14 <TorqueMonitor::getAverage()>:
 8030b14:	6881      	ldr	r1, [r0, #8]
 8030b16:	b410      	push	{r4}
 8030b18:	88c4      	ldrh	r4, [r0, #6]
 8030b1a:	b1a9      	cbz	r1, 8030b48 <TorqueMonitor::getAverage()+0x34>
 8030b1c:	1e63      	subs	r3, r4, #1
 8030b1e:	b19c      	cbz	r4, 8030b48 <TorqueMonitor::getAverage()+0x34>
 8030b20:	2200      	movs	r2, #0
 8030b22:	f851 0b04 	ldr.w	r0, [r1], #4
 8030b26:	3b01      	subs	r3, #1
 8030b28:	4402      	add	r2, r0
 8030b2a:	1c58      	adds	r0, r3, #1
 8030b2c:	d1f9      	bne.n	8030b22 <TorqueMonitor::getAverage()+0xe>
 8030b2e:	ee07 2a90 	vmov	s15, r2
 8030b32:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8030b36:	ee07 4a10 	vmov	s14, r4
 8030b3a:	eeb8 0a47 	vcvt.f32.u32	s0, s14
 8030b3e:	f85d 4b04 	ldr.w	r4, [sp], #4
 8030b42:	ee87 0a80 	vdiv.f32	s0, s15, s0
 8030b46:	4770      	bx	lr
 8030b48:	eddf 7a01 	vldr	s15, [pc, #4]	; 8030b50 <TorqueMonitor::getAverage()+0x3c>
 8030b4c:	e7f3      	b.n	8030b36 <TorqueMonitor::getAverage()+0x22>
 8030b4e:	bf00      	nop
 8030b50:	00000000 	.word	0x00000000

08030b54 <TorqueMonitor::sumTorqueAboveAverageThreshold(int)>:
 8030b54:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8030b56:	4606      	mov	r6, r0
 8030b58:	6880      	ldr	r0, [r0, #8]
 8030b5a:	88f7      	ldrh	r7, [r6, #6]
 8030b5c:	460d      	mov	r5, r1
 8030b5e:	b158      	cbz	r0, 8030b78 <TorqueMonitor::sumTorqueAboveAverageThreshold(int)+0x24>
 8030b60:	1e7a      	subs	r2, r7, #1
 8030b62:	b14f      	cbz	r7, 8030b78 <TorqueMonitor::sumTorqueAboveAverageThreshold(int)+0x24>
 8030b64:	4604      	mov	r4, r0
 8030b66:	6823      	ldr	r3, [r4, #0]
 8030b68:	2b00      	cmp	r3, #0
 8030b6a:	bfb8      	it	lt
 8030b6c:	425b      	neglt	r3, r3
 8030b6e:	3a01      	subs	r2, #1
 8030b70:	f844 3b04 	str.w	r3, [r4], #4
 8030b74:	1c53      	adds	r3, r2, #1
 8030b76:	d1f6      	bne.n	8030b66 <TorqueMonitor::sumTorqueAboveAverageThreshold(int)+0x12>
 8030b78:	4b35      	ldr	r3, [pc, #212]	; (8030c50 <TorqueMonitor::sumTorqueAboveAverageThreshold(int)+0xfc>)
 8030b7a:	4639      	mov	r1, r7
 8030b7c:	2204      	movs	r2, #4
 8030b7e:	f00e fa2b 	bl	803efd8 <qsort>
 8030b82:	68b4      	ldr	r4, [r6, #8]
 8030b84:	88f6      	ldrh	r6, [r6, #6]
 8030b86:	2c00      	cmp	r4, #0
 8030b88:	d04a      	beq.n	8030c20 <TorqueMonitor::sumTorqueAboveAverageThreshold(int)+0xcc>
 8030b8a:	2e00      	cmp	r6, #0
 8030b8c:	d055      	beq.n	8030c3a <TorqueMonitor::sumTorqueAboveAverageThreshold(int)+0xe6>
 8030b8e:	1e73      	subs	r3, r6, #1
 8030b90:	eb04 0286 	add.w	r2, r4, r6, lsl #2
 8030b94:	e002      	b.n	8030b9c <TorqueMonitor::sumTorqueAboveAverageThreshold(int)+0x48>
 8030b96:	1e59      	subs	r1, r3, #1
 8030b98:	b12b      	cbz	r3, 8030ba6 <TorqueMonitor::sumTorqueAboveAverageThreshold(int)+0x52>
 8030b9a:	460b      	mov	r3, r1
 8030b9c:	f852 1d04 	ldr.w	r1, [r2, #-4]!
 8030ba0:	2900      	cmp	r1, #0
 8030ba2:	d0f8      	beq.n	8030b96 <TorqueMonitor::sumTorqueAboveAverageThreshold(int)+0x42>
 8030ba4:	1c5e      	adds	r6, r3, #1
 8030ba6:	4630      	mov	r0, r6
 8030ba8:	f00d fbde 	bl	803e368 <__aeabi_ui2d>
 8030bac:	4b29      	ldr	r3, [pc, #164]	; (8030c54 <TorqueMonitor::sumTorqueAboveAverageThreshold(int)+0x100>)
 8030bae:	2200      	movs	r2, #0
 8030bb0:	f00d fca6 	bl	803e500 <__aeabi_dmul>
 8030bb4:	f00d fc3b 	bl	803e42e <__aeabi_d2uiz>
 8030bb8:	1a32      	subs	r2, r6, r0
 8030bba:	ee07 2a90 	vmov	s15, r2
 8030bbe:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8030bc2:	1e53      	subs	r3, r2, #1
 8030bc4:	eb04 0180 	add.w	r1, r4, r0, lsl #2
 8030bc8:	b3ca      	cbz	r2, 8030c3e <TorqueMonitor::sumTorqueAboveAverageThreshold(int)+0xea>
 8030bca:	2200      	movs	r2, #0
 8030bcc:	f851 7b04 	ldr.w	r7, [r1], #4
 8030bd0:	3b01      	subs	r3, #1
 8030bd2:	443a      	add	r2, r7
 8030bd4:	1c5f      	adds	r7, r3, #1
 8030bd6:	d1f9      	bne.n	8030bcc <TorqueMonitor::sumTorqueAboveAverageThreshold(int)+0x78>
 8030bd8:	ee07 2a90 	vmov	s15, r2
 8030bdc:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8030be0:	b35c      	cbz	r4, 8030c3a <TorqueMonitor::sumTorqueAboveAverageThreshold(int)+0xe6>
 8030be2:	1e72      	subs	r2, r6, #1
 8030be4:	b17e      	cbz	r6, 8030c06 <TorqueMonitor::sumTorqueAboveAverageThreshold(int)+0xb2>
 8030be6:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 8030bea:	4626      	mov	r6, r4
 8030bec:	eebd 7ac7 	vcvt.s32.f32	s14, s14
 8030bf0:	ee17 3a10 	vmov	r3, s14
 8030bf4:	442b      	add	r3, r5
 8030bf6:	461d      	mov	r5, r3
 8030bf8:	6833      	ldr	r3, [r6, #0]
 8030bfa:	3a01      	subs	r2, #1
 8030bfc:	1b5b      	subs	r3, r3, r5
 8030bfe:	1c51      	adds	r1, r2, #1
 8030c00:	f846 3b04 	str.w	r3, [r6], #4
 8030c04:	d1f8      	bne.n	8030bf8 <TorqueMonitor::sumTorqueAboveAverageThreshold(int)+0xa4>
 8030c06:	1e43      	subs	r3, r0, #1
 8030c08:	b1b8      	cbz	r0, 8030c3a <TorqueMonitor::sumTorqueAboveAverageThreshold(int)+0xe6>
 8030c0a:	3c04      	subs	r4, #4
 8030c0c:	2000      	movs	r0, #0
 8030c0e:	f854 2f04 	ldr.w	r2, [r4, #4]!
 8030c12:	3b01      	subs	r3, #1
 8030c14:	2a00      	cmp	r2, #0
 8030c16:	bfc8      	it	gt
 8030c18:	1880      	addgt	r0, r0, r2
 8030c1a:	1c5a      	adds	r2, r3, #1
 8030c1c:	d1f7      	bne.n	8030c0e <TorqueMonitor::sumTorqueAboveAverageThreshold(int)+0xba>
 8030c1e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8030c20:	4630      	mov	r0, r6
 8030c22:	f00d fba1 	bl	803e368 <__aeabi_ui2d>
 8030c26:	2200      	movs	r2, #0
 8030c28:	4b0a      	ldr	r3, [pc, #40]	; (8030c54 <TorqueMonitor::sumTorqueAboveAverageThreshold(int)+0x100>)
 8030c2a:	f00d fc69 	bl	803e500 <__aeabi_dmul>
 8030c2e:	f00d fbfe 	bl	803e42e <__aeabi_d2uiz>
 8030c32:	0081      	lsls	r1, r0, #2
 8030c34:	eba6 0200 	sub.w	r2, r6, r0
 8030c38:	d104      	bne.n	8030c44 <TorqueMonitor::sumTorqueAboveAverageThreshold(int)+0xf0>
 8030c3a:	2000      	movs	r0, #0
 8030c3c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8030c3e:	eddf 7a06 	vldr	s15, [pc, #24]	; 8030c58 <TorqueMonitor::sumTorqueAboveAverageThreshold(int)+0x104>
 8030c42:	e7cd      	b.n	8030be0 <TorqueMonitor::sumTorqueAboveAverageThreshold(int)+0x8c>
 8030c44:	ee07 2a90 	vmov	s15, r2
 8030c48:	1e53      	subs	r3, r2, #1
 8030c4a:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8030c4e:	e7bb      	b.n	8030bc8 <TorqueMonitor::sumTorqueAboveAverageThreshold(int)+0x74>
 8030c50:	08030a71 	.word	0x08030a71
 8030c54:	3fe00000 	.word	0x3fe00000
 8030c58:	00000000 	.word	0x00000000

08030c5c <BinSensor::processData(void*)>:
 8030c5c:	2800      	cmp	r0, #0
 8030c5e:	d049      	beq.n	8030cf4 <BinSensor::processData(void*)+0x98>
 8030c60:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8030c64:	8a81      	ldrh	r1, [r0, #20]
 8030c66:	8a46      	ldrh	r6, [r0, #18]
 8030c68:	428e      	cmp	r6, r1
 8030c6a:	d03e      	beq.n	8030cea <BinSensor::processData(void*)+0x8e>
 8030c6c:	8a05      	ldrh	r5, [r0, #16]
 8030c6e:	f8d0 e00c 	ldr.w	lr, [r0, #12]
 8030c72:	1c4b      	adds	r3, r1, #1
 8030c74:	f105 3cff 	add.w	ip, r5, #4294967295
 8030c78:	fbb3 f2f5 	udiv	r2, r3, r5
 8030c7c:	fb05 3212 	mls	r2, r5, r2, r3
 8030c80:	2300      	movs	r3, #0
 8030c82:	b292      	uxth	r2, r2
 8030c84:	459c      	cmp	ip, r3
 8030c86:	f81e 7001 	ldrb.w	r7, [lr, r1]
 8030c8a:	8282      	strh	r2, [r0, #20]
 8030c8c:	7583      	strb	r3, [r0, #22]
 8030c8e:	dd1f      	ble.n	8030cd0 <BinSensor::processData(void*)+0x74>
 8030c90:	4698      	mov	r8, r3
 8030c92:	e00f      	b.n	8030cb4 <BinSensor::processData(void*)+0x58>
 8030c94:	f81e 2002 	ldrb.w	r2, [lr, r2]
 8030c98:	fbb9 f1f5 	udiv	r1, r9, r5
 8030c9c:	3301      	adds	r3, #1
 8030c9e:	fb05 9111 	mls	r1, r5, r1, r9
 8030ca2:	42ba      	cmp	r2, r7
 8030ca4:	f880 8016 	strb.w	r8, [r0, #22]
 8030ca8:	8281      	strh	r1, [r0, #20]
 8030caa:	b29b      	uxth	r3, r3
 8030cac:	d10e      	bne.n	8030ccc <BinSensor::processData(void*)+0x70>
 8030cae:	4563      	cmp	r3, ip
 8030cb0:	da0e      	bge.n	8030cd0 <BinSensor::processData(void*)+0x74>
 8030cb2:	8a82      	ldrh	r2, [r0, #20]
 8030cb4:	4296      	cmp	r6, r2
 8030cb6:	f102 0901 	add.w	r9, r2, #1
 8030cba:	d1eb      	bne.n	8030c94 <BinSensor::processData(void*)+0x38>
 8030cbc:	7d84      	ldrb	r4, [r0, #22]
 8030cbe:	2c00      	cmp	r4, #0
 8030cc0:	d1e8      	bne.n	8030c94 <BinSensor::processData(void*)+0x38>
 8030cc2:	4622      	mov	r2, r4
 8030cc4:	3301      	adds	r3, #1
 8030cc6:	42ba      	cmp	r2, r7
 8030cc8:	b29b      	uxth	r3, r3
 8030cca:	d0f0      	beq.n	8030cae <BinSensor::processData(void*)+0x52>
 8030ccc:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8030cd0:	f890 3020 	ldrb.w	r3, [r0, #32]
 8030cd4:	f880 7020 	strb.w	r7, [r0, #32]
 8030cd8:	42bb      	cmp	r3, r7
 8030cda:	d0f7      	beq.n	8030ccc <BinSensor::processData(void*)+0x70>
 8030cdc:	6843      	ldr	r3, [r0, #4]
 8030cde:	2b00      	cmp	r3, #0
 8030ce0:	d0f4      	beq.n	8030ccc <BinSensor::processData(void*)+0x70>
 8030ce2:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8030ce6:	6880      	ldr	r0, [r0, #8]
 8030ce8:	4718      	bx	r3
 8030cea:	7d83      	ldrb	r3, [r0, #22]
 8030cec:	2b00      	cmp	r3, #0
 8030cee:	d1bd      	bne.n	8030c6c <BinSensor::processData(void*)+0x10>
 8030cf0:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8030cf4:	4770      	bx	lr
 8030cf6:	bf00      	nop

08030cf8 <BinSensor::BinSensor(BinSensor::State (*)(), void (*)(void*), void*, unsigned short)>:
 8030cf8:	b538      	push	{r3, r4, r5, lr}
 8030cfa:	4604      	mov	r4, r0
 8030cfc:	2500      	movs	r5, #0
 8030cfe:	f8bd 0010 	ldrh.w	r0, [sp, #16]
 8030d02:	60a3      	str	r3, [r4, #8]
 8030d04:	e9c4 1200 	strd	r1, r2, [r4]
 8030d08:	8220      	strh	r0, [r4, #16]
 8030d0a:	8265      	strh	r5, [r4, #18]
 8030d0c:	82a5      	strh	r5, [r4, #20]
 8030d0e:	75a5      	strb	r5, [r4, #22]
 8030d10:	61a5      	str	r5, [r4, #24]
 8030d12:	f00f f9db 	bl	80400cc <operator new[](unsigned int)>
 8030d16:	4b04      	ldr	r3, [pc, #16]	; (8030d28 <BinSensor::BinSensor(BinSensor::State (*)(), void (*)(void*), void*, unsigned short)+0x30>)
 8030d18:	60e0      	str	r0, [r4, #12]
 8030d1a:	2202      	movs	r2, #2
 8030d1c:	61e4      	str	r4, [r4, #28]
 8030d1e:	f884 2020 	strb.w	r2, [r4, #32]
 8030d22:	61a3      	str	r3, [r4, #24]
 8030d24:	4620      	mov	r0, r4
 8030d26:	bd38      	pop	{r3, r4, r5, pc}
 8030d28:	08030c5d 	.word	0x08030c5d

08030d2c <BinSensor::readNewData()>:
 8030d2c:	b570      	push	{r4, r5, r6, lr}
 8030d2e:	4604      	mov	r4, r0
 8030d30:	6803      	ldr	r3, [r0, #0]
 8030d32:	4798      	blx	r3
 8030d34:	7da3      	ldrb	r3, [r4, #22]
 8030d36:	b96b      	cbnz	r3, 8030d54 <BinSensor::readNewData()+0x28>
 8030d38:	8a63      	ldrh	r3, [r4, #18]
 8030d3a:	68e2      	ldr	r2, [r4, #12]
 8030d3c:	8a21      	ldrh	r1, [r4, #16]
 8030d3e:	8aa5      	ldrh	r5, [r4, #20]
 8030d40:	54d0      	strb	r0, [r2, r3]
 8030d42:	1c5a      	adds	r2, r3, #1
 8030d44:	fbb2 f3f1 	udiv	r3, r2, r1
 8030d48:	fb01 2313 	mls	r3, r1, r3, r2
 8030d4c:	b29b      	uxth	r3, r3
 8030d4e:	429d      	cmp	r5, r3
 8030d50:	8263      	strh	r3, [r4, #18]
 8030d52:	d000      	beq.n	8030d56 <BinSensor::readNewData()+0x2a>
 8030d54:	bd70      	pop	{r4, r5, r6, pc}
 8030d56:	69a3      	ldr	r3, [r4, #24]
 8030d58:	2201      	movs	r2, #1
 8030d5a:	75a2      	strb	r2, [r4, #22]
 8030d5c:	2b00      	cmp	r3, #0
 8030d5e:	d0f9      	beq.n	8030d54 <BinSensor::readNewData()+0x28>
 8030d60:	69e0      	ldr	r0, [r4, #28]
 8030d62:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8030d66:	4718      	bx	r3

08030d68 <BinSensor::getBufferedState()>:
 8030d68:	f890 0020 	ldrb.w	r0, [r0, #32]
 8030d6c:	4770      	bx	lr
 8030d6e:	bf00      	nop

08030d70 <BinSensor::reset()>:
 8030d70:	b430      	push	{r4, r5}
 8030d72:	8a83      	ldrh	r3, [r0, #20]
 8030d74:	8a44      	ldrh	r4, [r0, #18]
 8030d76:	429c      	cmp	r4, r3
 8030d78:	d01d      	beq.n	8030db6 <BinSensor::reset()+0x46>
 8030d7a:	8a01      	ldrh	r1, [r0, #16]
 8030d7c:	1c5a      	adds	r2, r3, #1
 8030d7e:	fbb2 f3f1 	udiv	r3, r2, r1
 8030d82:	fb01 2313 	mls	r3, r1, r3, r2
 8030d86:	b29b      	uxth	r3, r3
 8030d88:	2200      	movs	r2, #0
 8030d8a:	8283      	strh	r3, [r0, #20]
 8030d8c:	7582      	strb	r2, [r0, #22]
 8030d8e:	e006      	b.n	8030d9e <BinSensor::reset()+0x2e>
 8030d90:	fbb5 f3f1 	udiv	r3, r5, r1
 8030d94:	fb01 5313 	mls	r3, r1, r3, r5
 8030d98:	b29b      	uxth	r3, r3
 8030d9a:	7582      	strb	r2, [r0, #22]
 8030d9c:	8283      	strh	r3, [r0, #20]
 8030d9e:	429c      	cmp	r4, r3
 8030da0:	f103 0501 	add.w	r5, r3, #1
 8030da4:	d1f4      	bne.n	8030d90 <BinSensor::reset()+0x20>
 8030da6:	7d83      	ldrb	r3, [r0, #22]
 8030da8:	2b00      	cmp	r3, #0
 8030daa:	d1f1      	bne.n	8030d90 <BinSensor::reset()+0x20>
 8030dac:	2302      	movs	r3, #2
 8030dae:	bc30      	pop	{r4, r5}
 8030db0:	f880 3020 	strb.w	r3, [r0, #32]
 8030db4:	4770      	bx	lr
 8030db6:	7d82      	ldrb	r2, [r0, #22]
 8030db8:	2a00      	cmp	r2, #0
 8030dba:	d1de      	bne.n	8030d7a <BinSensor::reset()+0xa>
 8030dbc:	2302      	movs	r3, #2
 8030dbe:	bc30      	pop	{r4, r5}
 8030dc0:	f880 3020 	strb.w	r3, [r0, #32]
 8030dc4:	4770      	bx	lr
 8030dc6:	bf00      	nop

08030dc8 <BinManager::start()>:
 8030dc8:	4770      	bx	lr
 8030dca:	bf00      	nop

08030dcc <BinManager::getBinState()>:
 8030dcc:	f8d0 00dc 	ldr.w	r0, [r0, #220]	; 0xdc
 8030dd0:	4770      	bx	lr
 8030dd2:	bf00      	nop

08030dd4 <BinManager::getNexusBinState()>:
 8030dd4:	f8d0 30dc 	ldr.w	r3, [r0, #220]	; 0xdc
 8030dd8:	2b02      	cmp	r3, #2
 8030dda:	d004      	beq.n	8030de6 <BinManager::getNexusBinState()+0x12>
 8030ddc:	2b01      	cmp	r3, #1
 8030dde:	bf0c      	ite	eq
 8030de0:	2000      	moveq	r0, #0
 8030de2:	2002      	movne	r0, #2
 8030de4:	4770      	bx	lr
 8030de6:	2001      	movs	r0, #1
 8030de8:	4770      	bx	lr
 8030dea:	bf00      	nop

08030dec <BinManager::isBinState(BinManager::BinState)>:
 8030dec:	b538      	push	{r3, r4, r5, lr}
 8030dee:	6803      	ldr	r3, [r0, #0]
 8030df0:	4604      	mov	r4, r0
 8030df2:	689b      	ldr	r3, [r3, #8]
 8030df4:	460d      	mov	r5, r1
 8030df6:	4798      	blx	r3
 8030df8:	f8d4 00dc 	ldr.w	r0, [r4, #220]	; 0xdc
 8030dfc:	1b40      	subs	r0, r0, r5
 8030dfe:	fab0 f080 	clz	r0, r0
 8030e02:	0940      	lsrs	r0, r0, #5
 8030e04:	bd38      	pop	{r3, r4, r5, pc}
 8030e06:	bf00      	nop

08030e08 <BinManager::getStateString(BinManager::BinState)>:
 8030e08:	2300      	movs	r3, #0
 8030e0a:	2001      	movs	r0, #1
 8030e0c:	fa00 f203 	lsl.w	r2, r0, r3
 8030e10:	428a      	cmp	r2, r1
 8030e12:	d004      	beq.n	8030e1e <BinManager::getStateString(BinManager::BinState)+0x16>
 8030e14:	3301      	adds	r3, #1
 8030e16:	2b11      	cmp	r3, #17
 8030e18:	d1f8      	bne.n	8030e0c <BinManager::getStateString(BinManager::BinState)+0x4>
 8030e1a:	4803      	ldr	r0, [pc, #12]	; (8030e28 <BinManager::getStateString(BinManager::BinState)+0x20>)
 8030e1c:	4770      	bx	lr
 8030e1e:	4a03      	ldr	r2, [pc, #12]	; (8030e2c <BinManager::getStateString(BinManager::BinState)+0x24>)
 8030e20:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 8030e24:	4770      	bx	lr
 8030e26:	bf00      	nop
 8030e28:	080471d0 	.word	0x080471d0
 8030e2c:	08047b54 	.word	0x08047b54

08030e30 <BinManager::reset()>:
 8030e30:	b510      	push	{r4, lr}
 8030e32:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 8030e36:	4604      	mov	r4, r0
 8030e38:	f8c0 30dc 	str.w	r3, [r0, #220]	; 0xdc
 8030e3c:	3004      	adds	r0, #4
 8030e3e:	f7ff ff97 	bl	8030d70 <BinSensor::reset()>
 8030e42:	f104 0028 	add.w	r0, r4, #40	; 0x28
 8030e46:	f7ff ff93 	bl	8030d70 <BinSensor::reset()>
 8030e4a:	f104 004c 	add.w	r0, r4, #76	; 0x4c
 8030e4e:	f7ff ff8f 	bl	8030d70 <BinSensor::reset()>
 8030e52:	f104 0070 	add.w	r0, r4, #112	; 0x70
 8030e56:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8030e5a:	f7ff bf89 	b.w	8030d70 <BinSensor::reset()>
 8030e5e:	bf00      	nop

08030e60 <BinManager::getTelemBinState()>:
 8030e60:	b570      	push	{r4, r5, r6, lr}
 8030e62:	4604      	mov	r4, r0
 8030e64:	b082      	sub	sp, #8
 8030e66:	3070      	adds	r0, #112	; 0x70
 8030e68:	f7ff ff7e 	bl	8030d68 <BinSensor::getBufferedState()>
 8030e6c:	4606      	mov	r6, r0
 8030e6e:	1d20      	adds	r0, r4, #4
 8030e70:	f7ff ff7a 	bl	8030d68 <BinSensor::getBufferedState()>
 8030e74:	4605      	mov	r5, r0
 8030e76:	f104 0028 	add.w	r0, r4, #40	; 0x28
 8030e7a:	f7ff ff75 	bl	8030d68 <BinSensor::getBufferedState()>
 8030e7e:	4603      	mov	r3, r0
 8030e80:	f104 004c 	add.w	r0, r4, #76	; 0x4c
 8030e84:	f1a6 0601 	sub.w	r6, r6, #1
 8030e88:	461c      	mov	r4, r3
 8030e8a:	f7ff ff6d 	bl	8030d68 <BinSensor::getBufferedState()>
 8030e8e:	fab6 f686 	clz	r6, r6
 8030e92:	f1a5 0501 	sub.w	r5, r5, #1
 8030e96:	0976      	lsrs	r6, r6, #5
 8030e98:	2300      	movs	r3, #0
 8030e9a:	fab5 f585 	clz	r5, r5
 8030e9e:	f1a4 0401 	sub.w	r4, r4, #1
 8030ea2:	096d      	lsrs	r5, r5, #5
 8030ea4:	f366 0307 	bfi	r3, r6, #0, #8
 8030ea8:	fab4 f484 	clz	r4, r4
 8030eac:	f1a0 0001 	sub.w	r0, r0, #1
 8030eb0:	0964      	lsrs	r4, r4, #5
 8030eb2:	f365 230f 	bfi	r3, r5, #8, #8
 8030eb6:	fab0 f080 	clz	r0, r0
 8030eba:	0940      	lsrs	r0, r0, #5
 8030ebc:	f364 4317 	bfi	r3, r4, #16, #8
 8030ec0:	f360 631f 	bfi	r3, r0, #24, #8
 8030ec4:	4618      	mov	r0, r3
 8030ec6:	b002      	add	sp, #8
 8030ec8:	bd70      	pop	{r4, r5, r6, pc}
 8030eca:	bf00      	nop

08030ecc <BinManager::readSensors()>:
 8030ecc:	b510      	push	{r4, lr}
 8030ece:	4604      	mov	r4, r0
 8030ed0:	3004      	adds	r0, #4
 8030ed2:	f7ff ff2b 	bl	8030d2c <BinSensor::readNewData()>
 8030ed6:	f104 0028 	add.w	r0, r4, #40	; 0x28
 8030eda:	f7ff ff27 	bl	8030d2c <BinSensor::readNewData()>
 8030ede:	f104 004c 	add.w	r0, r4, #76	; 0x4c
 8030ee2:	f7ff ff23 	bl	8030d2c <BinSensor::readNewData()>
 8030ee6:	f104 0070 	add.w	r0, r4, #112	; 0x70
 8030eea:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8030eee:	f7ff bf1d 	b.w	8030d2c <BinSensor::readNewData()>
 8030ef2:	bf00      	nop

08030ef4 <BinManager::measureBinState()>:
 8030ef4:	6803      	ldr	r3, [r0, #0]
 8030ef6:	b510      	push	{r4, lr}
 8030ef8:	4604      	mov	r4, r0
 8030efa:	68db      	ldr	r3, [r3, #12]
 8030efc:	4798      	blx	r3
 8030efe:	f8d4 30dc 	ldr.w	r3, [r4, #220]	; 0xdc
 8030f02:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8030f06:	d107      	bne.n	8030f18 <BinManager::measureBinState()+0x24>
 8030f08:	200a      	movs	r0, #10
 8030f0a:	f009 f821 	bl	8039f50 <_tx_thread_sleep>
 8030f0e:	f8d4 30dc 	ldr.w	r3, [r4, #220]	; 0xdc
 8030f12:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8030f16:	d0f7      	beq.n	8030f08 <BinManager::measureBinState()+0x14>
 8030f18:	bd10      	pop	{r4, pc}
 8030f1a:	bf00      	nop

08030f1c <BinManager::processBinState(void*)>:
 8030f1c:	b3e8      	cbz	r0, 8030f9a <BinManager::processBinState(void*)+0x7e>
 8030f1e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8030f22:	4604      	mov	r4, r0
 8030f24:	3004      	adds	r0, #4
 8030f26:	f7ff ff1f 	bl	8030d68 <BinSensor::getBufferedState()>
 8030f2a:	4605      	mov	r5, r0
 8030f2c:	f104 0028 	add.w	r0, r4, #40	; 0x28
 8030f30:	f7ff ff1a 	bl	8030d68 <BinSensor::getBufferedState()>
 8030f34:	4607      	mov	r7, r0
 8030f36:	f104 004c 	add.w	r0, r4, #76	; 0x4c
 8030f3a:	f7ff ff15 	bl	8030d68 <BinSensor::getBufferedState()>
 8030f3e:	4606      	mov	r6, r0
 8030f40:	f104 0070 	add.w	r0, r4, #112	; 0x70
 8030f44:	f7ff ff10 	bl	8030d68 <BinSensor::getBufferedState()>
 8030f48:	2d02      	cmp	r5, #2
 8030f4a:	f8d4 20dc 	ldr.w	r2, [r4, #220]	; 0xdc
 8030f4e:	4603      	mov	r3, r0
 8030f50:	d01b      	beq.n	8030f8a <BinManager::processBinState(void*)+0x6e>
 8030f52:	2f02      	cmp	r7, #2
 8030f54:	d019      	beq.n	8030f8a <BinManager::processBinState(void*)+0x6e>
 8030f56:	2e02      	cmp	r6, #2
 8030f58:	d017      	beq.n	8030f8a <BinManager::processBinState(void*)+0x6e>
 8030f5a:	2802      	cmp	r0, #2
 8030f5c:	d015      	beq.n	8030f8a <BinManager::processBinState(void*)+0x6e>
 8030f5e:	eb05 0547 	add.w	r5, r5, r7, lsl #1
 8030f62:	eb06 0045 	add.w	r0, r6, r5, lsl #1
 8030f66:	eb03 0040 	add.w	r0, r3, r0, lsl #1
 8030f6a:	eb04 0080 	add.w	r0, r4, r0, lsl #2
 8030f6e:	f8d0 309c 	ldr.w	r3, [r0, #156]	; 0x9c
 8030f72:	f8c4 30dc 	str.w	r3, [r4, #220]	; 0xdc
 8030f76:	4293      	cmp	r3, r2
 8030f78:	d00d      	beq.n	8030f96 <BinManager::processBinState(void*)+0x7a>
 8030f7a:	f8d4 3094 	ldr.w	r3, [r4, #148]	; 0x94
 8030f7e:	b153      	cbz	r3, 8030f96 <BinManager::processBinState(void*)+0x7a>
 8030f80:	f8d4 0098 	ldr.w	r0, [r4, #152]	; 0x98
 8030f84:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8030f88:	4718      	bx	r3
 8030f8a:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 8030f8e:	4293      	cmp	r3, r2
 8030f90:	f8c4 30dc 	str.w	r3, [r4, #220]	; 0xdc
 8030f94:	d1f1      	bne.n	8030f7a <BinManager::processBinState(void*)+0x5e>
 8030f96:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8030f9a:	4770      	bx	lr

08030f9c <BinManager::BinManager(BinSensor::State (*)(), BinSensor::State (*)(), BinSensor::State (*)(), BinSensor::State (*)(), void (*)(void*), void*, unsigned short)>:
 8030f9c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8030fa0:	b083      	sub	sp, #12
 8030fa2:	4d3f      	ldr	r5, [pc, #252]	; (80310a0 <BinManager::BinManager(BinSensor::State (*)(), BinSensor::State (*)(), BinSensor::State (*)(), BinSensor::State (*)(), void (*)(void*), void*, unsigned short)+0x104>)
 8030fa4:	4604      	mov	r4, r0
 8030fa6:	f840 5b04 	str.w	r5, [r0], #4
 8030faa:	f8bd 5034 	ldrh.w	r5, [sp, #52]	; 0x34
 8030fae:	9500      	str	r5, [sp, #0]
 8030fb0:	4691      	mov	r9, r2
 8030fb2:	4698      	mov	r8, r3
 8030fb4:	4a3b      	ldr	r2, [pc, #236]	; (80310a4 <BinManager::BinManager(BinSensor::State (*)(), BinSensor::State (*)(), BinSensor::State (*)(), BinSensor::State (*)(), void (*)(void*), void*, unsigned short)+0x108>)
 8030fb6:	4623      	mov	r3, r4
 8030fb8:	e9dd 760b 	ldrd	r7, r6, [sp, #44]	; 0x2c
 8030fbc:	f7ff fe9c 	bl	8030cf8 <BinSensor::BinSensor(BinSensor::State (*)(), void (*)(void*), void*, unsigned short)>
 8030fc0:	4a38      	ldr	r2, [pc, #224]	; (80310a4 <BinManager::BinManager(BinSensor::State (*)(), BinSensor::State (*)(), BinSensor::State (*)(), BinSensor::State (*)(), void (*)(void*), void*, unsigned short)+0x108>)
 8030fc2:	9500      	str	r5, [sp, #0]
 8030fc4:	4649      	mov	r1, r9
 8030fc6:	4623      	mov	r3, r4
 8030fc8:	f104 0028 	add.w	r0, r4, #40	; 0x28
 8030fcc:	f7ff fe94 	bl	8030cf8 <BinSensor::BinSensor(BinSensor::State (*)(), void (*)(void*), void*, unsigned short)>
 8030fd0:	4a34      	ldr	r2, [pc, #208]	; (80310a4 <BinManager::BinManager(BinSensor::State (*)(), BinSensor::State (*)(), BinSensor::State (*)(), BinSensor::State (*)(), void (*)(void*), void*, unsigned short)+0x108>)
 8030fd2:	9500      	str	r5, [sp, #0]
 8030fd4:	4641      	mov	r1, r8
 8030fd6:	4623      	mov	r3, r4
 8030fd8:	f104 004c 	add.w	r0, r4, #76	; 0x4c
 8030fdc:	f7ff fe8c 	bl	8030cf8 <BinSensor::BinSensor(BinSensor::State (*)(), void (*)(void*), void*, unsigned short)>
 8030fe0:	4a30      	ldr	r2, [pc, #192]	; (80310a4 <BinManager::BinManager(BinSensor::State (*)(), BinSensor::State (*)(), BinSensor::State (*)(), BinSensor::State (*)(), void (*)(void*), void*, unsigned short)+0x108>)
 8030fe2:	990a      	ldr	r1, [sp, #40]	; 0x28
 8030fe4:	9500      	str	r5, [sp, #0]
 8030fe6:	4623      	mov	r3, r4
 8030fe8:	f104 0070 	add.w	r0, r4, #112	; 0x70
 8030fec:	f7ff fe84 	bl	8030cf8 <BinSensor::BinSensor(BinSensor::State (*)(), void (*)(void*), void*, unsigned short)>
 8030ff0:	2302      	movs	r3, #2
 8030ff2:	2520      	movs	r5, #32
 8030ff4:	2010      	movs	r0, #16
 8030ff6:	2180      	movs	r1, #128	; 0x80
 8030ff8:	2240      	movs	r2, #64	; 0x40
 8030ffa:	f8c4 30d8 	str.w	r3, [r4, #216]	; 0xd8
 8030ffe:	f44f 7300 	mov.w	r3, #512	; 0x200
 8031002:	f8c4 50c8 	str.w	r5, [r4, #200]	; 0xc8
 8031006:	f8c4 00b8 	str.w	r0, [r4, #184]	; 0xb8
 803100a:	f44f 7580 	mov.w	r5, #256	; 0x100
 803100e:	f44f 6000 	mov.w	r0, #2048	; 0x800
 8031012:	f8c4 10d0 	str.w	r1, [r4, #208]	; 0xd0
 8031016:	f8c4 20d4 	str.w	r2, [r4, #212]	; 0xd4
 803101a:	f44f 6180 	mov.w	r1, #1024	; 0x400
 803101e:	2204      	movs	r2, #4
 8031020:	f8c4 30cc 	str.w	r3, [r4, #204]	; 0xcc
 8031024:	2308      	movs	r3, #8
 8031026:	f8c4 50b0 	str.w	r5, [r4, #176]	; 0xb0
 803102a:	f8c4 00a8 	str.w	r0, [r4, #168]	; 0xa8
 803102e:	f44f 5500 	mov.w	r5, #8192	; 0x2000
 8031032:	f44f 5080 	mov.w	r0, #4096	; 0x1000
 8031036:	f8c4 10c4 	str.w	r1, [r4, #196]	; 0xc4
 803103a:	f8c4 20b4 	str.w	r2, [r4, #180]	; 0xb4
 803103e:	f44f 4100 	mov.w	r1, #32768	; 0x8000
 8031042:	f44f 4280 	mov.w	r2, #16384	; 0x4000
 8031046:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
 803104a:	2301      	movs	r3, #1
 803104c:	f8c4 00bc 	str.w	r0, [r4, #188]	; 0xbc
 8031050:	e9c4 2128 	strd	r2, r1, [r4, #160]	; 0xa0
 8031054:	f8c4 7094 	str.w	r7, [r4, #148]	; 0x94
 8031058:	f8c4 6098 	str.w	r6, [r4, #152]	; 0x98
 803105c:	f8c4 50ac 	str.w	r5, [r4, #172]	; 0xac
 8031060:	f8c4 309c 	str.w	r3, [r4, #156]	; 0x9c
 8031064:	4620      	mov	r0, r4
 8031066:	f7ff fee3 	bl	8030e30 <BinManager::reset()>
 803106a:	4620      	mov	r0, r4
 803106c:	b003      	add	sp, #12
 803106e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8031072:	6920      	ldr	r0, [r4, #16]
 8031074:	b108      	cbz	r0, 803107a <BinManager::BinManager(BinSensor::State (*)(), BinSensor::State (*)(), BinSensor::State (*)(), BinSensor::State (*)(), void (*)(void*), void*, unsigned short)+0xde>
 8031076:	f000 f8c5 	bl	8031204 <operator delete[](void*)>
 803107a:	f00e fb77 	bl	803f76c <__cxa_end_cleanup>
 803107e:	6fe0      	ldr	r0, [r4, #124]	; 0x7c
 8031080:	b108      	cbz	r0, 8031086 <BinManager::BinManager(BinSensor::State (*)(), BinSensor::State (*)(), BinSensor::State (*)(), BinSensor::State (*)(), void (*)(void*), void*, unsigned short)+0xea>
 8031082:	f000 f8bf 	bl	8031204 <operator delete[](void*)>
 8031086:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8031088:	b108      	cbz	r0, 803108e <BinManager::BinManager(BinSensor::State (*)(), BinSensor::State (*)(), BinSensor::State (*)(), BinSensor::State (*)(), void (*)(void*), void*, unsigned short)+0xf2>
 803108a:	f000 f8bb 	bl	8031204 <operator delete[](void*)>
 803108e:	6b60      	ldr	r0, [r4, #52]	; 0x34
 8031090:	2800      	cmp	r0, #0
 8031092:	d0ee      	beq.n	8031072 <BinManager::BinManager(BinSensor::State (*)(), BinSensor::State (*)(), BinSensor::State (*)(), BinSensor::State (*)(), void (*)(void*), void*, unsigned short)+0xd6>
 8031094:	f000 f8b6 	bl	8031204 <operator delete[](void*)>
 8031098:	e7eb      	b.n	8031072 <BinManager::BinManager(BinSensor::State (*)(), BinSensor::State (*)(), BinSensor::State (*)(), BinSensor::State (*)(), void (*)(void*), void*, unsigned short)+0xd6>
 803109a:	e7f4      	b.n	8031086 <BinManager::BinManager(BinSensor::State (*)(), BinSensor::State (*)(), BinSensor::State (*)(), BinSensor::State (*)(), void (*)(void*), void*, unsigned short)+0xea>
 803109c:	e7f7      	b.n	803108e <BinManager::BinManager(BinSensor::State (*)(), BinSensor::State (*)(), BinSensor::State (*)(), BinSensor::State (*)(), void (*)(void*), void*, unsigned short)+0xf2>
 803109e:	bf00      	nop
 80310a0:	08047ba0 	.word	0x08047ba0
 80310a4:	08030f1d 	.word	0x08030f1d
 80310a8:	0000ee49 	.word	0x0000ee49
 80310ac:	0002adb0 	.word	0x0002adb0
 80310b0:	1e01ffff 	.word	0x1e01ffff
 80310b4:	00000420 	.word	0x00000420
 80310b8:	01d60430 	.word	0x01d60430
 80310bc:	80044000 	.word	0x80044000
 80310c0:	04500002 	.word	0x04500002
 80310c4:	ca0001fe 	.word	0xca0001fe
 80310c8:	01e20401 	.word	0x01e20401
 80310cc:	0401de00 	.word	0x0401de00
 80310d0:	00000000 	.word	0x00000000

080310d4 <HardwareBinManager::pollBinSensors(unsigned int, void*)>:
 80310d4:	680b      	ldr	r3, [r1, #0]
 80310d6:	4608      	mov	r0, r1
 80310d8:	691b      	ldr	r3, [r3, #16]
 80310da:	4718      	bx	r3

080310dc <HardwareBinManager::readPosXPosY()>:
 80310dc:	b500      	push	{lr}
 80310de:	4b07      	ldr	r3, [pc, #28]	; (80310fc <HardwareBinManager::readPosXPosY()+0x20>)
 80310e0:	e893 0003 	ldmia.w	r3, {r0, r1}
 80310e4:	b083      	sub	sp, #12
 80310e6:	466b      	mov	r3, sp
 80310e8:	e883 0003 	stmia.w	r3, {r0, r1}
 80310ec:	f004 f824 	bl	8035138 <GPIO_readPin>
 80310f0:	fab0 f080 	clz	r0, r0
 80310f4:	0940      	lsrs	r0, r0, #5
 80310f6:	b003      	add	sp, #12
 80310f8:	f85d fb04 	ldr.w	pc, [sp], #4
 80310fc:	08047bdc 	.word	0x08047bdc

08031100 <HardwareBinManager::readNegXPosY()>:
 8031100:	b500      	push	{lr}
 8031102:	4b07      	ldr	r3, [pc, #28]	; (8031120 <HardwareBinManager::readNegXPosY()+0x20>)
 8031104:	e893 0003 	ldmia.w	r3, {r0, r1}
 8031108:	b083      	sub	sp, #12
 803110a:	466b      	mov	r3, sp
 803110c:	e883 0003 	stmia.w	r3, {r0, r1}
 8031110:	f004 f812 	bl	8035138 <GPIO_readPin>
 8031114:	fab0 f080 	clz	r0, r0
 8031118:	0940      	lsrs	r0, r0, #5
 803111a:	b003      	add	sp, #12
 803111c:	f85d fb04 	ldr.w	pc, [sp], #4
 8031120:	08047bcc 	.word	0x08047bcc

08031124 <HardwareBinManager::readNegXNegY()>:
 8031124:	b500      	push	{lr}
 8031126:	4b07      	ldr	r3, [pc, #28]	; (8031144 <HardwareBinManager::readNegXNegY()+0x20>)
 8031128:	e893 0003 	ldmia.w	r3, {r0, r1}
 803112c:	b083      	sub	sp, #12
 803112e:	466b      	mov	r3, sp
 8031130:	e883 0003 	stmia.w	r3, {r0, r1}
 8031134:	f004 f800 	bl	8035138 <GPIO_readPin>
 8031138:	fab0 f080 	clz	r0, r0
 803113c:	0940      	lsrs	r0, r0, #5
 803113e:	b003      	add	sp, #12
 8031140:	f85d fb04 	ldr.w	pc, [sp], #4
 8031144:	08047bc4 	.word	0x08047bc4

08031148 <HardwareBinManager::readPosXNegY()>:
 8031148:	b500      	push	{lr}
 803114a:	4b07      	ldr	r3, [pc, #28]	; (8031168 <HardwareBinManager::readPosXNegY()+0x20>)
 803114c:	e893 0003 	ldmia.w	r3, {r0, r1}
 8031150:	b083      	sub	sp, #12
 8031152:	466b      	mov	r3, sp
 8031154:	e883 0003 	stmia.w	r3, {r0, r1}
 8031158:	f003 ffee 	bl	8035138 <GPIO_readPin>
 803115c:	fab0 f080 	clz	r0, r0
 8031160:	0940      	lsrs	r0, r0, #5
 8031162:	b003      	add	sp, #12
 8031164:	f85d fb04 	ldr.w	pc, [sp], #4
 8031168:	08047bd4 	.word	0x08047bd4

0803116c <HardwareBinManager::start()>:
 803116c:	4602      	mov	r2, r0
 803116e:	4903      	ldr	r1, [pc, #12]	; (803117c <HardwareBinManager::start()+0x10>)
 8031170:	f8d0 00e0 	ldr.w	r0, [r0, #224]	; 0xe0
 8031174:	2301      	movs	r3, #1
 8031176:	f7fc b8a9 	b.w	802d2cc <TIME_setTimeout>
 803117a:	bf00      	nop
 803117c:	080310d5 	.word	0x080310d5

08031180 <HardwareBinManager::HardwareBinManager(void (*)(void*), void*, unsigned short, unsigned int)>:
 8031180:	b530      	push	{r4, r5, lr}
 8031182:	b085      	sub	sp, #20
 8031184:	4d09      	ldr	r5, [pc, #36]	; (80311ac <HardwareBinManager::HardwareBinManager(void (*)(void*), void*, unsigned short, unsigned int)+0x2c>)
 8031186:	9303      	str	r3, [sp, #12]
 8031188:	e9cd 1201 	strd	r1, r2, [sp, #4]
 803118c:	9500      	str	r5, [sp, #0]
 803118e:	4b08      	ldr	r3, [pc, #32]	; (80311b0 <HardwareBinManager::HardwareBinManager(void (*)(void*), void*, unsigned short, unsigned int)+0x30>)
 8031190:	4a08      	ldr	r2, [pc, #32]	; (80311b4 <HardwareBinManager::HardwareBinManager(void (*)(void*), void*, unsigned short, unsigned int)+0x34>)
 8031192:	4909      	ldr	r1, [pc, #36]	; (80311b8 <HardwareBinManager::HardwareBinManager(void (*)(void*), void*, unsigned short, unsigned int)+0x38>)
 8031194:	9d08      	ldr	r5, [sp, #32]
 8031196:	4604      	mov	r4, r0
 8031198:	f7ff ff00 	bl	8030f9c <BinManager::BinManager(BinSensor::State (*)(), BinSensor::State (*)(), BinSensor::State (*)(), BinSensor::State (*)(), void (*)(void*), void*, unsigned short)>
 803119c:	4b07      	ldr	r3, [pc, #28]	; (80311bc <HardwareBinManager::HardwareBinManager(void (*)(void*), void*, unsigned short, unsigned int)+0x3c>)
 803119e:	f8c4 50e0 	str.w	r5, [r4, #224]	; 0xe0
 80311a2:	4620      	mov	r0, r4
 80311a4:	6023      	str	r3, [r4, #0]
 80311a6:	b005      	add	sp, #20
 80311a8:	bd30      	pop	{r4, r5, pc}
 80311aa:	bf00      	nop
 80311ac:	08031149 	.word	0x08031149
 80311b0:	08031125 	.word	0x08031125
 80311b4:	08031101 	.word	0x08031101
 80311b8:	080310dd 	.word	0x080310dd
 80311bc:	08047bec 	.word	0x08047bec

080311c0 <operator new(unsigned int)>:
 80311c0:	4b0d      	ldr	r3, [pc, #52]	; (80311f8 <operator new(unsigned int)+0x38>)
 80311c2:	b570      	push	{r4, r5, r6, lr}
 80311c4:	781c      	ldrb	r4, [r3, #0]
 80311c6:	b18c      	cbz	r4, 80311ec <operator new(unsigned int)+0x2c>
 80311c8:	4e0c      	ldr	r6, [pc, #48]	; (80311fc <operator new(unsigned int)+0x3c>)
 80311ca:	6834      	ldr	r4, [r6, #0]
 80311cc:	f642 23f7 	movw	r3, #10999	; 0x2af7
 80311d0:	1822      	adds	r2, r4, r0
 80311d2:	429a      	cmp	r2, r3
 80311d4:	4605      	mov	r5, r0
 80311d6:	d80b      	bhi.n	80311f0 <operator new(unsigned int)+0x30>
 80311d8:	4b09      	ldr	r3, [pc, #36]	; (8031200 <operator new(unsigned int)+0x40>)
 80311da:	441c      	add	r4, r3
 80311dc:	4620      	mov	r0, r4
 80311de:	462a      	mov	r2, r5
 80311e0:	2100      	movs	r1, #0
 80311e2:	f00e fa37 	bl	803f654 <memset>
 80311e6:	6830      	ldr	r0, [r6, #0]
 80311e8:	4428      	add	r0, r5
 80311ea:	6030      	str	r0, [r6, #0]
 80311ec:	4620      	mov	r0, r4
 80311ee:	bd70      	pop	{r4, r5, r6, pc}
 80311f0:	2400      	movs	r4, #0
 80311f2:	4620      	mov	r0, r4
 80311f4:	bd70      	pop	{r4, r5, r6, pc}
 80311f6:	bf00      	nop
 80311f8:	20002164 	.word	0x20002164
 80311fc:	2000de10 	.word	0x2000de10
 8031200:	2000b318 	.word	0x2000b318

08031204 <operator delete[](void*)>:
 8031204:	4770      	bx	lr
 8031206:	bf00      	nop

08031208 <MEMORY_viewPoolStatistics()>:
 8031208:	b530      	push	{r4, r5, lr}
 803120a:	4d1e      	ldr	r5, [pc, #120]	; (8031284 <MEMORY_viewPoolStatistics()+0x7c>)
 803120c:	eddf 6a1e 	vldr	s13, [pc, #120]	; 8031288 <MEMORY_viewPoolStatistics()+0x80>
 8031210:	edd5 7a00 	vldr	s15, [r5]
 8031214:	ed9f 7a1d 	vldr	s14, [pc, #116]	; 803128c <MEMORY_viewPoolStatistics()+0x84>
 8031218:	481d      	ldr	r0, [pc, #116]	; (8031290 <MEMORY_viewPoolStatistics()+0x88>)
 803121a:	eef8 7a67 	vcvt.f32.u32	s15, s15
 803121e:	ed2d 8b02 	vpush	{d8}
 8031222:	ee87 8aa6 	vdiv.f32	s16, s15, s13
 8031226:	b085      	sub	sp, #20
 8031228:	212f      	movs	r1, #47	; 0x2f
 803122a:	ee28 8a07 	vmul.f32	s16, s16, s14
 803122e:	f00e f896 	bl	803f35e <strrchr>
 8031232:	b1c8      	cbz	r0, 8031268 <MEMORY_viewPoolStatistics()+0x60>
 8031234:	4816      	ldr	r0, [pc, #88]	; (8031290 <MEMORY_viewPoolStatistics()+0x88>)
 8031236:	212f      	movs	r1, #47	; 0x2f
 8031238:	f00e f891 	bl	803f35e <strrchr>
 803123c:	1c44      	adds	r4, r0, #1
 803123e:	682b      	ldr	r3, [r5, #0]
 8031240:	9302      	str	r3, [sp, #8]
 8031242:	ee18 0a10 	vmov	r0, s16
 8031246:	f642 23f8 	movw	r3, #11000	; 0x2af8
 803124a:	9303      	str	r3, [sp, #12]
 803124c:	f00d f905 	bl	803e45a <__aeabi_f2d>
 8031250:	4b10      	ldr	r3, [pc, #64]	; (8031294 <MEMORY_viewPoolStatistics()+0x8c>)
 8031252:	e9cd 0100 	strd	r0, r1, [sp]
 8031256:	224e      	movs	r2, #78	; 0x4e
 8031258:	4621      	mov	r1, r4
 803125a:	2002      	movs	r0, #2
 803125c:	f7f1 fa9c 	bl	8022798 <DEBUG_logMsg>
 8031260:	b005      	add	sp, #20
 8031262:	ecbd 8b02 	vpop	{d8}
 8031266:	bd30      	pop	{r4, r5, pc}
 8031268:	4809      	ldr	r0, [pc, #36]	; (8031290 <MEMORY_viewPoolStatistics()+0x88>)
 803126a:	215c      	movs	r1, #92	; 0x5c
 803126c:	f00e f877 	bl	803f35e <strrchr>
 8031270:	b128      	cbz	r0, 803127e <MEMORY_viewPoolStatistics()+0x76>
 8031272:	4807      	ldr	r0, [pc, #28]	; (8031290 <MEMORY_viewPoolStatistics()+0x88>)
 8031274:	215c      	movs	r1, #92	; 0x5c
 8031276:	f00e f872 	bl	803f35e <strrchr>
 803127a:	1c44      	adds	r4, r0, #1
 803127c:	e7df      	b.n	803123e <MEMORY_viewPoolStatistics()+0x36>
 803127e:	4c04      	ldr	r4, [pc, #16]	; (8031290 <MEMORY_viewPoolStatistics()+0x88>)
 8031280:	e7dd      	b.n	803123e <MEMORY_viewPoolStatistics()+0x36>
 8031282:	bf00      	nop
 8031284:	2000de10 	.word	0x2000de10
 8031288:	462be000 	.word	0x462be000
 803128c:	42c80000 	.word	0x42c80000
 8031290:	08047c10 	.word	0x08047c10
 8031294:	08047c58 	.word	0x08047c58
 8031298:	810104c9 	.word	0x810104c9
 803129c:	80a9b0b0 	.word	0x80a9b0b0
 80312a0:	00000000 	.word	0x00000000

080312a4 <MEMORY_lockAllocationPool()>:
 80312a4:	4b01      	ldr	r3, [pc, #4]	; (80312ac <MEMORY_lockAllocationPool()+0x8>)
 80312a6:	2200      	movs	r2, #0
 80312a8:	701a      	strb	r2, [r3, #0]
 80312aa:	4770      	bx	lr
 80312ac:	20002164 	.word	0x20002164

080312b0 <NVM_format>:
 80312b0:	2800      	cmp	r0, #0
 80312b2:	d052      	beq.n	803135a <NVM_format+0xaa>
 80312b4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80312b8:	e9d0 3502 	ldrd	r3, r5, [r0, #8]
 80312bc:	42ab      	cmp	r3, r5
 80312be:	b083      	sub	sp, #12
 80312c0:	4604      	mov	r4, r0
 80312c2:	d90d      	bls.n	80312e0 <NVM_format+0x30>
 80312c4:	f10d 0706 	add.w	r7, sp, #6
 80312c8:	2600      	movs	r6, #0
 80312ca:	6823      	ldr	r3, [r4, #0]
 80312cc:	f88d 6006 	strb.w	r6, [sp, #6]
 80312d0:	4628      	mov	r0, r5
 80312d2:	2201      	movs	r2, #1
 80312d4:	4639      	mov	r1, r7
 80312d6:	4798      	blx	r3
 80312d8:	68a3      	ldr	r3, [r4, #8]
 80312da:	3501      	adds	r5, #1
 80312dc:	42ab      	cmp	r3, r5
 80312de:	d8f4      	bhi.n	80312ca <NVM_format+0x1a>
 80312e0:	f2a3 322e 	subw	r2, r3, #814	; 0x32e
 80312e4:	2100      	movs	r1, #0
 80312e6:	481e      	ldr	r0, [pc, #120]	; (8031360 <NVM_format+0xb0>)
 80312e8:	f8c4 301e 	str.w	r3, [r4, #30]
 80312ec:	0952      	lsrs	r2, r2, #5
 80312ee:	8362      	strh	r2, [r4, #26]
 80312f0:	6160      	str	r0, [r4, #20]
 80312f2:	8321      	strh	r1, [r4, #24]
 80312f4:	83a1      	strh	r1, [r4, #28]
 80312f6:	f44f 7290 	mov.w	r2, #288	; 0x120
 80312fa:	f104 0022 	add.w	r0, r4, #34	; 0x22
 80312fe:	f00e f9a9 	bl	803f654 <memset>
 8031302:	4623      	mov	r3, r4
 8031304:	f504 7190 	add.w	r1, r4, #288	; 0x120
 8031308:	f64c 42dd 	movw	r2, #52445	; 0xccdd
 803130c:	865a      	strh	r2, [r3, #50]	; 0x32
 803130e:	3312      	adds	r3, #18
 8031310:	428b      	cmp	r3, r1
 8031312:	d1fb      	bne.n	803130c <NVM_format+0x5c>
 8031314:	f104 0914 	add.w	r9, r4, #20
 8031318:	6823      	ldr	r3, [r4, #0]
 803131a:	68e0      	ldr	r0, [r4, #12]
 803131c:	4649      	mov	r1, r9
 803131e:	f240 322e 	movw	r2, #814	; 0x32e
 8031322:	4798      	blx	r3
 8031324:	8b63      	ldrh	r3, [r4, #26]
 8031326:	b1a3      	cbz	r3, 8031352 <NVM_format+0xa2>
 8031328:	f504 76a1 	add.w	r6, r4, #322	; 0x142
 803132c:	2500      	movs	r5, #0
 803132e:	f10d 0706 	add.w	r7, sp, #6
 8031332:	f64a 28bb 	movw	r8, #43707	; 0xaabb
 8031336:	6823      	ldr	r3, [r4, #0]
 8031338:	f8ad 8006 	strh.w	r8, [sp, #6]
 803133c:	eba6 0009 	sub.w	r0, r6, r9
 8031340:	2202      	movs	r2, #2
 8031342:	f826 8b02 	strh.w	r8, [r6], #2
 8031346:	4639      	mov	r1, r7
 8031348:	4798      	blx	r3
 803134a:	8b63      	ldrh	r3, [r4, #26]
 803134c:	3501      	adds	r5, #1
 803134e:	429d      	cmp	r5, r3
 8031350:	d3f1      	bcc.n	8031336 <NVM_format+0x86>
 8031352:	2000      	movs	r0, #0
 8031354:	b003      	add	sp, #12
 8031356:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 803135a:	2006      	movs	r0, #6
 803135c:	4770      	bx	lr
 803135e:	bf00      	nop
 8031360:	aabbccdd 	.word	0xaabbccdd

08031364 <NVM_init>:
 8031364:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8031368:	f8dd 8018 	ldr.w	r8, [sp, #24]
 803136c:	b310      	cbz	r0, 80313b4 <NVM_init+0x50>
 803136e:	4604      	mov	r4, r0
 8031370:	4615      	mov	r5, r2
 8031372:	460f      	mov	r7, r1
 8031374:	f44f 7251 	mov.w	r2, #836	; 0x344
 8031378:	2100      	movs	r1, #0
 803137a:	461e      	mov	r6, r3
 803137c:	f00e f96a 	bl	803f654 <memset>
 8031380:	f208 332e 	addw	r3, r8, #814	; 0x32e
 8031384:	6123      	str	r3, [r4, #16]
 8031386:	f240 322e 	movw	r2, #814	; 0x32e
 803138a:	e9c4 7500 	strd	r7, r5, [r4]
 803138e:	e9c4 6802 	strd	r6, r8, [r4, #8]
 8031392:	4640      	mov	r0, r8
 8031394:	f104 0114 	add.w	r1, r4, #20
 8031398:	47a8      	blx	r5
 803139a:	4b08      	ldr	r3, [pc, #32]	; (80313bc <NVM_init+0x58>)
 803139c:	6962      	ldr	r2, [r4, #20]
 803139e:	429a      	cmp	r2, r3
 80313a0:	d102      	bne.n	80313a8 <NVM_init+0x44>
 80313a2:	2000      	movs	r0, #0
 80313a4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80313a8:	4620      	mov	r0, r4
 80313aa:	f7ff ff81 	bl	80312b0 <NVM_format>
 80313ae:	2000      	movs	r0, #0
 80313b0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80313b4:	2006      	movs	r0, #6
 80313b6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80313ba:	bf00      	nop
 80313bc:	aabbccdd 	.word	0xaabbccdd

080313c0 <NVM_createEntry>:
 80313c0:	2800      	cmp	r0, #0
 80313c2:	d047      	beq.n	8031454 <NVM_createEntry+0x94>
 80313c4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80313c8:	460f      	mov	r7, r1
 80313ca:	4606      	mov	r6, r0
 80313cc:	f100 0422 	add.w	r4, r0, #34	; 0x22
 80313d0:	4605      	mov	r5, r0
 80313d2:	f500 78a1 	add.w	r8, r0, #322	; 0x142
 80313d6:	4621      	mov	r1, r4
 80313d8:	2210      	movs	r2, #16
 80313da:	4638      	mov	r0, r7
 80313dc:	3412      	adds	r4, #18
 80313de:	f00d ff78 	bl	803f2d2 <strncmp>
 80313e2:	b178      	cbz	r0, 8031404 <NVM_createEntry+0x44>
 80313e4:	4544      	cmp	r4, r8
 80313e6:	d1f6      	bne.n	80313d6 <NVM_createEntry+0x16>
 80313e8:	2300      	movs	r3, #0
 80313ea:	f64c 41dd 	movw	r1, #52445	; 0xccdd
 80313ee:	8e6a      	ldrh	r2, [r5, #50]	; 0x32
 80313f0:	428a      	cmp	r2, r1
 80313f2:	f105 0512 	add.w	r5, r5, #18
 80313f6:	d008      	beq.n	803140a <NVM_createEntry+0x4a>
 80313f8:	3301      	adds	r3, #1
 80313fa:	2b10      	cmp	r3, #16
 80313fc:	d1f7      	bne.n	80313ee <NVM_createEntry+0x2e>
 80313fe:	2004      	movs	r0, #4
 8031400:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8031404:	2001      	movs	r0, #1
 8031406:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 803140a:	eb03 03c3 	add.w	r3, r3, r3, lsl #3
 803140e:	005c      	lsls	r4, r3, #1
 8031410:	f104 0522 	add.w	r5, r4, #34	; 0x22
 8031414:	4435      	add	r5, r6
 8031416:	4639      	mov	r1, r7
 8031418:	4628      	mov	r0, r5
 803141a:	2210      	movs	r2, #16
 803141c:	f00d ff76 	bl	803f30c <strncpy>
 8031420:	4434      	add	r4, r6
 8031422:	68f0      	ldr	r0, [r6, #12]
 8031424:	6837      	ldr	r7, [r6, #0]
 8031426:	f106 0314 	add.w	r3, r6, #20
 803142a:	1aeb      	subs	r3, r5, r3
 803142c:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8031430:	8662      	strh	r2, [r4, #50]	; 0x32
 8031432:	4629      	mov	r1, r5
 8031434:	4418      	add	r0, r3
 8031436:	2212      	movs	r2, #18
 8031438:	47b8      	blx	r7
 803143a:	8bb3      	ldrh	r3, [r6, #28]
 803143c:	68f0      	ldr	r0, [r6, #12]
 803143e:	6834      	ldr	r4, [r6, #0]
 8031440:	4631      	mov	r1, r6
 8031442:	3301      	adds	r3, #1
 8031444:	f821 3f1c 	strh.w	r3, [r1, #28]!
 8031448:	2202      	movs	r2, #2
 803144a:	3008      	adds	r0, #8
 803144c:	47a0      	blx	r4
 803144e:	2000      	movs	r0, #0
 8031450:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8031454:	2006      	movs	r0, #6
 8031456:	4770      	bx	lr

08031458 <NVM_deleteEntry>:
 8031458:	2800      	cmp	r0, #0
 803145a:	d066      	beq.n	803152a <NVM_deleteEntry+0xd2>
 803145c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8031460:	460c      	mov	r4, r1
 8031462:	b085      	sub	sp, #20
 8031464:	4605      	mov	r5, r0
 8031466:	f100 0722 	add.w	r7, r0, #34	; 0x22
 803146a:	2600      	movs	r6, #0
 803146c:	2210      	movs	r2, #16
 803146e:	4639      	mov	r1, r7
 8031470:	4620      	mov	r0, r4
 8031472:	f00d ff2e 	bl	803f2d2 <strncmp>
 8031476:	b140      	cbz	r0, 803148a <NVM_deleteEntry+0x32>
 8031478:	3601      	adds	r6, #1
 803147a:	2e10      	cmp	r6, #16
 803147c:	f107 0712 	add.w	r7, r7, #18
 8031480:	d1f4      	bne.n	803146c <NVM_deleteEntry+0x14>
 8031482:	2002      	movs	r0, #2
 8031484:	b005      	add	sp, #20
 8031486:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 803148a:	eb06 03c6 	add.w	r3, r6, r6, lsl #3
 803148e:	eb05 0343 	add.w	r3, r5, r3, lsl #1
 8031492:	f64f 7bff 	movw	fp, #65535	; 0xffff
 8031496:	8e5c      	ldrh	r4, [r3, #50]	; 0x32
 8031498:	00f3      	lsls	r3, r6, #3
 803149a:	455c      	cmp	r4, fp
 803149c:	9301      	str	r3, [sp, #4]
 803149e:	d046      	beq.n	803152e <NVM_deleteEntry+0xd6>
 80314a0:	f105 0918 	add.w	r9, r5, #24
 80314a4:	f105 0814 	add.w	r8, r5, #20
 80314a8:	f64a 2abb 	movw	sl, #43707	; 0xaabb
 80314ac:	eb05 0344 	add.w	r3, r5, r4, lsl #1
 80314b0:	34a1      	adds	r4, #161	; 0xa1
 80314b2:	eb05 0044 	add.w	r0, r5, r4, lsl #1
 80314b6:	f8b3 4142 	ldrh.w	r4, [r3, #322]	; 0x142
 80314ba:	f8a3 a142 	strh.w	sl, [r3, #322]	; 0x142
 80314be:	682b      	ldr	r3, [r5, #0]
 80314c0:	f8ad a00e 	strh.w	sl, [sp, #14]
 80314c4:	2202      	movs	r2, #2
 80314c6:	f10d 010e 	add.w	r1, sp, #14
 80314ca:	eba0 0008 	sub.w	r0, r0, r8
 80314ce:	4798      	blx	r3
 80314d0:	8b2a      	ldrh	r2, [r5, #24]
 80314d2:	68e8      	ldr	r0, [r5, #12]
 80314d4:	682b      	ldr	r3, [r5, #0]
 80314d6:	3a01      	subs	r2, #1
 80314d8:	832a      	strh	r2, [r5, #24]
 80314da:	3004      	adds	r0, #4
 80314dc:	2202      	movs	r2, #2
 80314de:	4649      	mov	r1, r9
 80314e0:	4798      	blx	r3
 80314e2:	455c      	cmp	r4, fp
 80314e4:	d1e2      	bne.n	80314ac <NVM_deleteEntry+0x54>
 80314e6:	2210      	movs	r2, #16
 80314e8:	2100      	movs	r1, #0
 80314ea:	4638      	mov	r0, r7
 80314ec:	f00e f8b2 	bl	803f654 <memset>
 80314f0:	9b01      	ldr	r3, [sp, #4]
 80314f2:	68e8      	ldr	r0, [r5, #12]
 80314f4:	4433      	add	r3, r6
 80314f6:	eb05 0643 	add.w	r6, r5, r3, lsl #1
 80314fa:	eba7 0808 	sub.w	r8, r7, r8
 80314fe:	f64a 22bb 	movw	r2, #43707	; 0xaabb
 8031502:	682b      	ldr	r3, [r5, #0]
 8031504:	8672      	strh	r2, [r6, #50]	; 0x32
 8031506:	4639      	mov	r1, r7
 8031508:	4440      	add	r0, r8
 803150a:	2212      	movs	r2, #18
 803150c:	4798      	blx	r3
 803150e:	8bab      	ldrh	r3, [r5, #28]
 8031510:	68e8      	ldr	r0, [r5, #12]
 8031512:	682c      	ldr	r4, [r5, #0]
 8031514:	4629      	mov	r1, r5
 8031516:	3b01      	subs	r3, #1
 8031518:	f821 3f1c 	strh.w	r3, [r1, #28]!
 803151c:	2202      	movs	r2, #2
 803151e:	3008      	adds	r0, #8
 8031520:	47a0      	blx	r4
 8031522:	2000      	movs	r0, #0
 8031524:	b005      	add	sp, #20
 8031526:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 803152a:	2006      	movs	r0, #6
 803152c:	4770      	bx	lr
 803152e:	f105 0814 	add.w	r8, r5, #20
 8031532:	e7d8      	b.n	80314e6 <NVM_deleteEntry+0x8e>

08031534 <NVM_write>:
 8031534:	2800      	cmp	r0, #0
 8031536:	f000 810c 	beq.w	8031752 <NVM_write+0x21e>
 803153a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 803153e:	f04f 0a00 	mov.w	sl, #0
 8031542:	b085      	sub	sp, #20
 8031544:	460f      	mov	r7, r1
 8031546:	4690      	mov	r8, r2
 8031548:	461e      	mov	r6, r3
 803154a:	4605      	mov	r5, r0
 803154c:	4654      	mov	r4, sl
 803154e:	f100 0922 	add.w	r9, r0, #34	; 0x22
 8031552:	2210      	movs	r2, #16
 8031554:	eb09 010a 	add.w	r1, r9, sl
 8031558:	4638      	mov	r0, r7
 803155a:	f00d feba 	bl	803f2d2 <strncmp>
 803155e:	b140      	cbz	r0, 8031572 <NVM_write+0x3e>
 8031560:	3401      	adds	r4, #1
 8031562:	2c10      	cmp	r4, #16
 8031564:	f10a 0a12 	add.w	sl, sl, #18
 8031568:	d1f3      	bne.n	8031552 <NVM_write+0x1e>
 803156a:	2002      	movs	r0, #2
 803156c:	b005      	add	sp, #20
 803156e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8031572:	eb04 03c4 	add.w	r3, r4, r4, lsl #3
 8031576:	eb05 0343 	add.w	r3, r5, r3, lsl #1
 803157a:	f64f 72ff 	movw	r2, #65535	; 0xffff
 803157e:	8e5f      	ldrh	r7, [r3, #50]	; 0x32
 8031580:	4297      	cmp	r7, r2
 8031582:	ea4f 09c4 	mov.w	r9, r4, lsl #3
 8031586:	f000 80c8 	beq.w	803171a <NVM_write+0x1e6>
 803158a:	f64f 73ee 	movw	r3, #65518	; 0xffee
 803158e:	429f      	cmp	r7, r3
 8031590:	f8ad 700c 	strh.w	r7, [sp, #12]
 8031594:	f000 808d 	beq.w	80316b2 <NVM_write+0x17e>
 8031598:	444c      	add	r4, r9
 803159a:	eb05 0444 	add.w	r4, r5, r4, lsl #1
 803159e:	682b      	ldr	r3, [r5, #0]
 80315a0:	8667      	strh	r7, [r4, #50]	; 0x32
 80315a2:	f10a 001e 	add.w	r0, sl, #30
 80315a6:	f105 0414 	add.w	r4, r5, #20
 80315aa:	2202      	movs	r2, #2
 80315ac:	a903      	add	r1, sp, #12
 80315ae:	9401      	str	r4, [sp, #4]
 80315b0:	4798      	blx	r3
 80315b2:	2e00      	cmp	r6, #0
 80315b4:	d03f      	beq.n	8031636 <NVM_write+0x102>
 80315b6:	f8bd 400c 	ldrh.w	r4, [sp, #12]
 80315ba:	f64b 39aa 	movw	r9, #48042	; 0xbbaa
 80315be:	f64f 7bff 	movw	fp, #65535	; 0xffff
 80315c2:	f64a 27bb 	movw	r7, #43707	; 0xaabb
 80315c6:	2e20      	cmp	r6, #32
 80315c8:	6928      	ldr	r0, [r5, #16]
 80315ca:	682b      	ldr	r3, [r5, #0]
 80315cc:	46b2      	mov	sl, r6
 80315ce:	bf28      	it	cs
 80315d0:	f04f 0a20 	movcs.w	sl, #32
 80315d4:	eb00 1044 	add.w	r0, r0, r4, lsl #5
 80315d8:	2e20      	cmp	r6, #32
 80315da:	fa1f f28a 	uxth.w	r2, sl
 80315de:	4641      	mov	r1, r8
 80315e0:	bf38      	it	cc
 80315e2:	2620      	movcc	r6, #32
 80315e4:	4798      	blx	r3
 80315e6:	f8bd 300c 	ldrh.w	r3, [sp, #12]
 80315ea:	eb05 0243 	add.w	r2, r5, r3, lsl #1
 80315ee:	3e20      	subs	r6, #32
 80315f0:	f8b2 4142 	ldrh.w	r4, [r2, #322]	; 0x142
 80315f4:	f8a2 9142 	strh.w	r9, [r2, #322]	; 0x142
 80315f8:	bb0e      	cbnz	r6, 803163e <NVM_write+0x10a>
 80315fa:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80315fe:	4294      	cmp	r4, r2
 8031600:	d005      	beq.n	803160e <NVM_write+0xda>
 8031602:	f64a 26bb 	movw	r6, #43707	; 0xaabb
 8031606:	42b4      	cmp	r4, r6
 8031608:	d001      	beq.n	803160e <NVM_write+0xda>
 803160a:	454c      	cmp	r4, r9
 803160c:	d155      	bne.n	80316ba <NVM_write+0x186>
 803160e:	f10d 040e 	add.w	r4, sp, #14
 8031612:	f103 00a1 	add.w	r0, r3, #161	; 0xa1
 8031616:	4621      	mov	r1, r4
 8031618:	eb05 0343 	add.w	r3, r5, r3, lsl #1
 803161c:	9c01      	ldr	r4, [sp, #4]
 803161e:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8031622:	eb05 0040 	add.w	r0, r5, r0, lsl #1
 8031626:	1b00      	subs	r0, r0, r4
 8031628:	f8ad 200e 	strh.w	r2, [sp, #14]
 803162c:	682c      	ldr	r4, [r5, #0]
 803162e:	f8a3 2142 	strh.w	r2, [r3, #322]	; 0x142
 8031632:	2202      	movs	r2, #2
 8031634:	47a0      	blx	r4
 8031636:	2000      	movs	r0, #0
 8031638:	b005      	add	sp, #20
 803163a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 803163e:	455c      	cmp	r4, fp
 8031640:	d018      	beq.n	8031674 <NVM_write+0x140>
 8031642:	42bc      	cmp	r4, r7
 8031644:	d016      	beq.n	8031674 <NVM_write+0x140>
 8031646:	454c      	cmp	r4, r9
 8031648:	d014      	beq.n	8031674 <NVM_write+0x140>
 803164a:	9a01      	ldr	r2, [sp, #4]
 803164c:	f8ad 400e 	strh.w	r4, [sp, #14]
 8031650:	f103 00a1 	add.w	r0, r3, #161	; 0xa1
 8031654:	eb05 0343 	add.w	r3, r5, r3, lsl #1
 8031658:	eb05 0040 	add.w	r0, r5, r0, lsl #1
 803165c:	1a80      	subs	r0, r0, r2
 803165e:	f8a3 4142 	strh.w	r4, [r3, #322]	; 0x142
 8031662:	2202      	movs	r2, #2
 8031664:	682b      	ldr	r3, [r5, #0]
 8031666:	f10d 010e 	add.w	r1, sp, #14
 803166a:	4798      	blx	r3
 803166c:	44d0      	add	r8, sl
 803166e:	f8ad 400c 	strh.w	r4, [sp, #12]
 8031672:	e7a8      	b.n	80315c6 <NVM_write+0x92>
 8031674:	8b69      	ldrh	r1, [r5, #26]
 8031676:	b1e1      	cbz	r1, 80316b2 <NVM_write+0x17e>
 8031678:	f505 73a0 	add.w	r3, r5, #320	; 0x140
 803167c:	2400      	movs	r4, #0
 803167e:	e002      	b.n	8031686 <NVM_write+0x152>
 8031680:	3401      	adds	r4, #1
 8031682:	428c      	cmp	r4, r1
 8031684:	d015      	beq.n	80316b2 <NVM_write+0x17e>
 8031686:	f833 2f02 	ldrh.w	r2, [r3, #2]!
 803168a:	42ba      	cmp	r2, r7
 803168c:	d1f8      	bne.n	8031680 <NVM_write+0x14c>
 803168e:	8b2a      	ldrh	r2, [r5, #24]
 8031690:	68e8      	ldr	r0, [r5, #12]
 8031692:	682b      	ldr	r3, [r5, #0]
 8031694:	4629      	mov	r1, r5
 8031696:	3201      	adds	r2, #1
 8031698:	f821 2f18 	strh.w	r2, [r1, #24]!
 803169c:	3004      	adds	r0, #4
 803169e:	2202      	movs	r2, #2
 80316a0:	4798      	blx	r3
 80316a2:	b2a4      	uxth	r4, r4
 80316a4:	f64f 73ee 	movw	r3, #65518	; 0xffee
 80316a8:	429c      	cmp	r4, r3
 80316aa:	d002      	beq.n	80316b2 <NVM_write+0x17e>
 80316ac:	f8bd 300c 	ldrh.w	r3, [sp, #12]
 80316b0:	e7cb      	b.n	803164a <NVM_write+0x116>
 80316b2:	2003      	movs	r0, #3
 80316b4:	b005      	add	sp, #20
 80316b6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80316ba:	f104 08a1 	add.w	r8, r4, #161	; 0xa1
 80316be:	9a01      	ldr	r2, [sp, #4]
 80316c0:	f104 039c 	add.w	r3, r4, #156	; 0x9c
 80316c4:	eb05 0848 	add.w	r8, r5, r8, lsl #1
 80316c8:	eba8 0802 	sub.w	r8, r8, r2
 80316cc:	469b      	mov	fp, r3
 80316ce:	eb05 0a43 	add.w	sl, r5, r3, lsl #1
 80316d2:	f105 0918 	add.w	r9, r5, #24
 80316d6:	f10d 040e 	add.w	r4, sp, #14
 80316da:	e001      	b.n	80316e0 <NVM_write+0x1ac>
 80316dc:	42b7      	cmp	r7, r6
 80316de:	d019      	beq.n	8031714 <NVM_write+0x1e0>
 80316e0:	eb05 0343 	add.w	r3, r5, r3, lsl #1
 80316e4:	2202      	movs	r2, #2
 80316e6:	895f      	ldrh	r7, [r3, #10]
 80316e8:	f8ad 600e 	strh.w	r6, [sp, #14]
 80316ec:	682b      	ldr	r3, [r5, #0]
 80316ee:	f8aa 600a 	strh.w	r6, [sl, #10]
 80316f2:	4621      	mov	r1, r4
 80316f4:	4640      	mov	r0, r8
 80316f6:	4798      	blx	r3
 80316f8:	8b2a      	ldrh	r2, [r5, #24]
 80316fa:	68e8      	ldr	r0, [r5, #12]
 80316fc:	682b      	ldr	r3, [r5, #0]
 80316fe:	3a01      	subs	r2, #1
 8031700:	832a      	strh	r2, [r5, #24]
 8031702:	3004      	adds	r0, #4
 8031704:	2202      	movs	r2, #2
 8031706:	4649      	mov	r1, r9
 8031708:	4798      	blx	r3
 803170a:	f64f 72ff 	movw	r2, #65535	; 0xffff
 803170e:	4297      	cmp	r7, r2
 8031710:	465b      	mov	r3, fp
 8031712:	d1e3      	bne.n	80316dc <NVM_write+0x1a8>
 8031714:	f8bd 300c 	ldrh.w	r3, [sp, #12]
 8031718:	e77b      	b.n	8031612 <NVM_write+0xde>
 803171a:	8b69      	ldrh	r1, [r5, #26]
 803171c:	2900      	cmp	r1, #0
 803171e:	d0c8      	beq.n	80316b2 <NVM_write+0x17e>
 8031720:	4607      	mov	r7, r0
 8031722:	f505 73a0 	add.w	r3, r5, #320	; 0x140
 8031726:	f64a 20bb 	movw	r0, #43707	; 0xaabb
 803172a:	e002      	b.n	8031732 <NVM_write+0x1fe>
 803172c:	3701      	adds	r7, #1
 803172e:	428f      	cmp	r7, r1
 8031730:	d0bf      	beq.n	80316b2 <NVM_write+0x17e>
 8031732:	f833 2f02 	ldrh.w	r2, [r3, #2]!
 8031736:	4282      	cmp	r2, r0
 8031738:	d1f8      	bne.n	803172c <NVM_write+0x1f8>
 803173a:	8b2a      	ldrh	r2, [r5, #24]
 803173c:	68e8      	ldr	r0, [r5, #12]
 803173e:	682b      	ldr	r3, [r5, #0]
 8031740:	4629      	mov	r1, r5
 8031742:	3201      	adds	r2, #1
 8031744:	f821 2f18 	strh.w	r2, [r1, #24]!
 8031748:	3004      	adds	r0, #4
 803174a:	2202      	movs	r2, #2
 803174c:	4798      	blx	r3
 803174e:	b2bf      	uxth	r7, r7
 8031750:	e71b      	b.n	803158a <NVM_write+0x56>
 8031752:	2006      	movs	r0, #6
 8031754:	4770      	bx	lr
 8031756:	bf00      	nop

08031758 <NVM_load>:
 8031758:	2800      	cmp	r0, #0
 803175a:	d03b      	beq.n	80317d4 <NVM_load+0x7c>
 803175c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8031760:	4689      	mov	r9, r1
 8031762:	4690      	mov	r8, r2
 8031764:	461d      	mov	r5, r3
 8031766:	4607      	mov	r7, r0
 8031768:	f100 0622 	add.w	r6, r0, #34	; 0x22
 803176c:	2400      	movs	r4, #0
 803176e:	4631      	mov	r1, r6
 8031770:	2210      	movs	r2, #16
 8031772:	4648      	mov	r0, r9
 8031774:	f00d fdad 	bl	803f2d2 <strncmp>
 8031778:	3612      	adds	r6, #18
 803177a:	b128      	cbz	r0, 8031788 <NVM_load+0x30>
 803177c:	3401      	adds	r4, #1
 803177e:	2c10      	cmp	r4, #16
 8031780:	d1f5      	bne.n	803176e <NVM_load+0x16>
 8031782:	2002      	movs	r0, #2
 8031784:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8031788:	eb04 04c4 	add.w	r4, r4, r4, lsl #3
 803178c:	eb07 0444 	add.w	r4, r7, r4, lsl #1
 8031790:	8e64      	ldrh	r4, [r4, #50]	; 0x32
 8031792:	b1bd      	cbz	r5, 80317c4 <NVM_load+0x6c>
 8031794:	f64f 79ff 	movw	r9, #65535	; 0xffff
 8031798:	6938      	ldr	r0, [r7, #16]
 803179a:	687b      	ldr	r3, [r7, #4]
 803179c:	2d20      	cmp	r5, #32
 803179e:	462e      	mov	r6, r5
 80317a0:	eb00 1044 	add.w	r0, r0, r4, lsl #5
 80317a4:	bf28      	it	cs
 80317a6:	2620      	movcs	r6, #32
 80317a8:	eb07 0444 	add.w	r4, r7, r4, lsl #1
 80317ac:	4641      	mov	r1, r8
 80317ae:	b2b2      	uxth	r2, r6
 80317b0:	4798      	blx	r3
 80317b2:	f8b4 4142 	ldrh.w	r4, [r4, #322]	; 0x142
 80317b6:	454c      	cmp	r4, r9
 80317b8:	eba5 0506 	sub.w	r5, r5, r6
 80317bc:	44b0      	add	r8, r6
 80317be:	d004      	beq.n	80317ca <NVM_load+0x72>
 80317c0:	2d00      	cmp	r5, #0
 80317c2:	d1e9      	bne.n	8031798 <NVM_load+0x40>
 80317c4:	2000      	movs	r0, #0
 80317c6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80317ca:	2d00      	cmp	r5, #0
 80317cc:	d0fa      	beq.n	80317c4 <NVM_load+0x6c>
 80317ce:	2005      	movs	r0, #5
 80317d0:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80317d4:	2006      	movs	r0, #6
 80317d6:	4770      	bx	lr

080317d8 <NVM_viewStats>:
 80317d8:	b508      	push	{r3, lr}
 80317da:	4603      	mov	r3, r0
 80317dc:	ed93 7a02 	vldr	s14, [r3, #8]
 80317e0:	8b19      	ldrh	r1, [r3, #24]
 80317e2:	8b5a      	ldrh	r2, [r3, #26]
 80317e4:	4810      	ldr	r0, [pc, #64]	; (8031828 <NVM_viewStats+0x50>)
 80317e6:	014b      	lsls	r3, r1, #5
 80317e8:	f203 332e 	addw	r3, r3, #814	; 0x32e
 80317ec:	ee07 3a90 	vmov	s15, r3
 80317f0:	eeb8 7a47 	vcvt.f32.u32	s14, s14
 80317f4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80317f8:	ed2d 8b02 	vpush	{d8}
 80317fc:	ee87 8a87 	vdiv.f32	s16, s15, s14
 8031800:	f00d fbca 	bl	803ef98 <printf>
 8031804:	ee18 0a10 	vmov	r0, s16
 8031808:	f00c fe27 	bl	803e45a <__aeabi_f2d>
 803180c:	4b07      	ldr	r3, [pc, #28]	; (803182c <NVM_viewStats+0x54>)
 803180e:	2200      	movs	r2, #0
 8031810:	f00c fe76 	bl	803e500 <__aeabi_dmul>
 8031814:	4602      	mov	r2, r0
 8031816:	460b      	mov	r3, r1
 8031818:	4805      	ldr	r0, [pc, #20]	; (8031830 <NVM_viewStats+0x58>)
 803181a:	f00d fbbd 	bl	803ef98 <printf>
 803181e:	ecbd 8b02 	vpop	{d8}
 8031822:	2000      	movs	r0, #0
 8031824:	bd08      	pop	{r3, pc}
 8031826:	bf00      	nop
 8031828:	08047c94 	.word	0x08047c94
 803182c:	40590000 	.word	0x40590000
 8031830:	08047cb8 	.word	0x08047cb8

08031834 <AWARENESS_enterThread(unsigned long)>:
 8031834:	b570      	push	{r4, r5, r6, lr}
 8031836:	2010      	movs	r0, #16
 8031838:	b08c      	sub	sp, #48	; 0x30
 803183a:	f7ef fa77 	bl	8020d2c <SYSTEM_setThreadFlag>
 803183e:	2224      	movs	r2, #36	; 0x24
 8031840:	2100      	movs	r1, #0
 8031842:	4865      	ldr	r0, [pc, #404]	; (80319d8 <AWARENESS_enterThread(unsigned long)+0x1a4>)
 8031844:	f00d ff06 	bl	803f654 <memset>
 8031848:	e001      	b.n	803184e <AWARENESS_enterThread(unsigned long)+0x1a>
 803184a:	f008 fb81 	bl	8039f50 <_tx_thread_sleep>
 803184e:	f7ef fa61 	bl	8020d14 <SYSTEM_areThreadsRunning>
 8031852:	4603      	mov	r3, r0
 8031854:	2064      	movs	r0, #100	; 0x64
 8031856:	2b00      	cmp	r3, #0
 8031858:	d0f7      	beq.n	803184a <AWARENESS_enterThread(unsigned long)+0x16>
 803185a:	4c60      	ldr	r4, [pc, #384]	; (80319dc <AWARENESS_enterThread(unsigned long)+0x1a8>)
 803185c:	f44f 757a 	mov.w	r5, #1000	; 0x3e8
 8031860:	2010      	movs	r0, #16
 8031862:	f7ef fa63 	bl	8020d2c <SYSTEM_setThreadFlag>
 8031866:	9500      	str	r5, [sp, #0]
 8031868:	ab02      	add	r3, sp, #8
 803186a:	2201      	movs	r2, #1
 803186c:	f64b 71c7 	movw	r1, #49095	; 0xbfc7
 8031870:	4620      	mov	r0, r4
 8031872:	f007 fc07 	bl	8039084 <_tx_event_flags_get>
 8031876:	2800      	cmp	r0, #0
 8031878:	d1f2      	bne.n	8031860 <AWARENESS_enterThread(unsigned long)+0x2c>
 803187a:	9b02      	ldr	r3, [sp, #8]
 803187c:	0798      	lsls	r0, r3, #30
 803187e:	f100 808f 	bmi.w	80319a0 <AWARENESS_enterThread(unsigned long)+0x16c>
 8031882:	0759      	lsls	r1, r3, #29
 8031884:	f100 8081 	bmi.w	803198a <AWARENESS_enterThread(unsigned long)+0x156>
 8031888:	05da      	lsls	r2, r3, #23
 803188a:	d466      	bmi.n	803195a <AWARENESS_enterThread(unsigned long)+0x126>
 803188c:	059e      	lsls	r6, r3, #22
 803188e:	d46d      	bmi.n	803196c <AWARENESS_enterThread(unsigned long)+0x138>
 8031890:	0458      	lsls	r0, r3, #17
 8031892:	d45a      	bmi.n	803194a <AWARENESS_enterThread(unsigned long)+0x116>
 8031894:	0559      	lsls	r1, r3, #21
 8031896:	d44c      	bmi.n	8031932 <AWARENESS_enterThread(unsigned long)+0xfe>
 8031898:	051a      	lsls	r2, r3, #20
 803189a:	d420      	bmi.n	80318de <AWARENESS_enterThread(unsigned long)+0xaa>
 803189c:	04de      	lsls	r6, r3, #19
 803189e:	d427      	bmi.n	80318f0 <AWARENESS_enterThread(unsigned long)+0xbc>
 80318a0:	0498      	lsls	r0, r3, #18
 80318a2:	d436      	bmi.n	8031912 <AWARENESS_enterThread(unsigned long)+0xde>
 80318a4:	0619      	lsls	r1, r3, #24
 80318a6:	d414      	bmi.n	80318d2 <AWARENESS_enterThread(unsigned long)+0x9e>
 80318a8:	065a      	lsls	r2, r3, #25
 80318aa:	d40c      	bmi.n	80318c6 <AWARENESS_enterThread(unsigned long)+0x92>
 80318ac:	041b      	lsls	r3, r3, #16
 80318ae:	d5d7      	bpl.n	8031860 <AWARENESS_enterThread(unsigned long)+0x2c>
 80318b0:	f44f 6000 	mov.w	r0, #2048	; 0x800
 80318b4:	f7f3 ff8e 	bl	80257d4 <ANTCTRL_setEvent>
 80318b8:	2202      	movs	r2, #2
 80318ba:	f46f 4100 	mvn.w	r1, #32768	; 0x8000
 80318be:	4620      	mov	r0, r4
 80318c0:	f007 fc5a 	bl	8039178 <_tx_event_flags_set>
 80318c4:	e7cc      	b.n	8031860 <AWARENESS_enterThread(unsigned long)+0x2c>
 80318c6:	f44f 5080 	mov.w	r0, #4096	; 0x1000
 80318ca:	f7f3 ff83 	bl	80257d4 <ANTCTRL_setEvent>
 80318ce:	9b02      	ldr	r3, [sp, #8]
 80318d0:	e7ec      	b.n	80318ac <AWARENESS_enterThread(unsigned long)+0x78>
 80318d2:	f44f 5000 	mov.w	r0, #8192	; 0x2000
 80318d6:	f7f3 ff7d 	bl	80257d4 <ANTCTRL_setEvent>
 80318da:	9b02      	ldr	r3, [sp, #8]
 80318dc:	e7e4      	b.n	80318a8 <AWARENESS_enterThread(unsigned long)+0x74>
 80318de:	2202      	movs	r2, #2
 80318e0:	f46f 6100 	mvn.w	r1, #2048	; 0x800
 80318e4:	4620      	mov	r0, r4
 80318e6:	f007 fc47 	bl	8039178 <_tx_event_flags_set>
 80318ea:	9b02      	ldr	r3, [sp, #8]
 80318ec:	04de      	lsls	r6, r3, #19
 80318ee:	d5d7      	bpl.n	80318a0 <AWARENESS_enterThread(unsigned long)+0x6c>
 80318f0:	2202      	movs	r2, #2
 80318f2:	f46f 5180 	mvn.w	r1, #4096	; 0x1000
 80318f6:	4620      	mov	r0, r4
 80318f8:	f007 fc3e 	bl	8039178 <_tx_event_flags_set>
 80318fc:	e001      	b.n	8031902 <AWARENESS_enterThread(unsigned long)+0xce>
 80318fe:	f7f3 fac1 	bl	8024e84 <BSB_processMessage>
 8031902:	2004      	movs	r0, #4
 8031904:	f7fe ff92 	bl	803082c <CANMNGR_NumMsgSrcPending>
 8031908:	2800      	cmp	r0, #0
 803190a:	d1f8      	bne.n	80318fe <AWARENESS_enterThread(unsigned long)+0xca>
 803190c:	9b02      	ldr	r3, [sp, #8]
 803190e:	0498      	lsls	r0, r3, #18
 8031910:	d5c8      	bpl.n	80318a4 <AWARENESS_enterThread(unsigned long)+0x70>
 8031912:	2202      	movs	r2, #2
 8031914:	f46f 5100 	mvn.w	r1, #8192	; 0x2000
 8031918:	4620      	mov	r0, r4
 803191a:	f007 fc2d 	bl	8039178 <_tx_event_flags_set>
 803191e:	e001      	b.n	8031924 <AWARENESS_enterThread(unsigned long)+0xf0>
 8031920:	f7f3 f84c 	bl	80249bc <NAVCOMMS_processMessage>
 8031924:	2003      	movs	r0, #3
 8031926:	f7fe ff81 	bl	803082c <CANMNGR_NumMsgSrcPending>
 803192a:	2800      	cmp	r0, #0
 803192c:	d1f8      	bne.n	8031920 <AWARENESS_enterThread(unsigned long)+0xec>
 803192e:	9b02      	ldr	r3, [sp, #8]
 8031930:	e7b8      	b.n	80318a4 <AWARENESS_enterThread(unsigned long)+0x70>
 8031932:	f7fd f9f7 	bl	802ed24 <CAMERA_processResponse()>
 8031936:	2800      	cmp	r0, #0
 8031938:	d13a      	bne.n	80319b0 <AWARENESS_enterThread(unsigned long)+0x17c>
 803193a:	2202      	movs	r2, #2
 803193c:	f46f 6180 	mvn.w	r1, #1024	; 0x400
 8031940:	4620      	mov	r0, r4
 8031942:	f007 fc19 	bl	8039178 <_tx_event_flags_set>
 8031946:	9b02      	ldr	r3, [sp, #8]
 8031948:	e7a6      	b.n	8031898 <AWARENESS_enterThread(unsigned long)+0x64>
 803194a:	2202      	movs	r2, #2
 803194c:	f46f 4180 	mvn.w	r1, #16384	; 0x4000
 8031950:	4620      	mov	r0, r4
 8031952:	f007 fc11 	bl	8039178 <_tx_event_flags_set>
 8031956:	9b02      	ldr	r3, [sp, #8]
 8031958:	e79c      	b.n	8031894 <AWARENESS_enterThread(unsigned long)+0x60>
 803195a:	2202      	movs	r2, #2
 803195c:	f46f 7180 	mvn.w	r1, #256	; 0x100
 8031960:	4620      	mov	r0, r4
 8031962:	f007 fc09 	bl	8039178 <_tx_event_flags_set>
 8031966:	9b02      	ldr	r3, [sp, #8]
 8031968:	059e      	lsls	r6, r3, #22
 803196a:	d591      	bpl.n	8031890 <AWARENESS_enterThread(unsigned long)+0x5c>
 803196c:	2202      	movs	r2, #2
 803196e:	f46f 7100 	mvn.w	r1, #512	; 0x200
 8031972:	4620      	mov	r0, r4
 8031974:	f007 fc00 	bl	8039178 <_tx_event_flags_set>
 8031978:	e001      	b.n	803197e <AWARENESS_enterThread(unsigned long)+0x14a>
 803197a:	f7fd f8db 	bl	802eb34 <CAMERA_processRxEvent()>
 803197e:	f7fd f8c9 	bl	802eb14 <CAMERA_isDataAvailable()>
 8031982:	2800      	cmp	r0, #0
 8031984:	d1f9      	bne.n	803197a <AWARENESS_enterThread(unsigned long)+0x146>
 8031986:	9b02      	ldr	r3, [sp, #8]
 8031988:	e782      	b.n	8031890 <AWARENESS_enterThread(unsigned long)+0x5c>
 803198a:	2202      	movs	r2, #2
 803198c:	f06f 0104 	mvn.w	r1, #4
 8031990:	4620      	mov	r0, r4
 8031992:	f007 fbf1 	bl	8039178 <_tx_event_flags_set>
 8031996:	2001      	movs	r0, #1
 8031998:	f7f3 ff1c 	bl	80257d4 <ANTCTRL_setEvent>
 803199c:	9b02      	ldr	r3, [sp, #8]
 803199e:	e773      	b.n	8031888 <AWARENESS_enterThread(unsigned long)+0x54>
 80319a0:	2202      	movs	r2, #2
 80319a2:	f06f 0102 	mvn.w	r1, #2
 80319a6:	4620      	mov	r0, r4
 80319a8:	f007 fbe6 	bl	8039178 <_tx_event_flags_set>
 80319ac:	9b02      	ldr	r3, [sp, #8]
 80319ae:	e768      	b.n	8031882 <AWARENESS_enterThread(unsigned long)+0x4e>
 80319b0:	2004      	movs	r0, #4
 80319b2:	f7f3 ff0f 	bl	80257d4 <ANTCTRL_setEvent>
 80319b6:	a805      	add	r0, sp, #20
 80319b8:	f7fd f9a4 	bl	802ed04 <CAMERA_getResponseData()>
 80319bc:	9b05      	ldr	r3, [sp, #20]
 80319be:	9e0a      	ldr	r6, [sp, #40]	; 0x28
 80319c0:	9303      	str	r3, [sp, #12]
 80319c2:	2208      	movs	r2, #8
 80319c4:	2301      	movs	r3, #1
 80319c6:	a903      	add	r1, sp, #12
 80319c8:	2000      	movs	r0, #0
 80319ca:	f8ad 6010 	strh.w	r6, [sp, #16]
 80319ce:	f8ad 3012 	strh.w	r3, [sp, #18]
 80319d2:	f7f2 fb09 	bl	8023fe8 <CCP_sendPriorityMessage>
 80319d6:	e7b0      	b.n	803193a <AWARENESS_enterThread(unsigned long)+0x106>
 80319d8:	2000e230 	.word	0x2000e230
 80319dc:	2000e158 	.word	0x2000e158

080319e0 <AWARENESS_submitAlarmData(IMU_unsolictedAlarm_t, IMU_f_xyz_t*, unsigned int)>:
 80319e0:	b430      	push	{r4, r5}
 80319e2:	4b06      	ldr	r3, [pc, #24]	; (80319fc <AWARENESS_submitAlarmData(IMU_unsolictedAlarm_t, IMU_f_xyz_t*, unsigned int)+0x1c>)
 80319e4:	680d      	ldr	r5, [r1, #0]
 80319e6:	684c      	ldr	r4, [r1, #4]
 80319e8:	eb03 1000 	add.w	r0, r3, r0, lsl #4
 80319ec:	688b      	ldr	r3, [r1, #8]
 80319ee:	6083      	str	r3, [r0, #8]
 80319f0:	6005      	str	r5, [r0, #0]
 80319f2:	6044      	str	r4, [r0, #4]
 80319f4:	60c2      	str	r2, [r0, #12]
 80319f6:	bc30      	pop	{r4, r5}
 80319f8:	4770      	bx	lr
 80319fa:	bf00      	nop
 80319fc:	2000e230 	.word	0x2000e230

08031a00 <AWARENESS_submitPitchRollData(IMU_pitchRoll_data_t const*)>:
 8031a00:	4770      	bx	lr
 8031a02:	bf00      	nop

08031a04 <AWARENESS_getAlarmData(IMU_unsolictedAlarm_t)>:
 8031a04:	b538      	push	{r3, r4, r5, lr}
 8031a06:	2210      	movs	r2, #16
 8031a08:	460d      	mov	r5, r1
 8031a0a:	2100      	movs	r1, #0
 8031a0c:	4604      	mov	r4, r0
 8031a0e:	f00d fe21 	bl	803f654 <memset>
 8031a12:	2d02      	cmp	r5, #2
 8031a14:	d806      	bhi.n	8031a24 <AWARENESS_getAlarmData(IMU_unsolictedAlarm_t)+0x20>
 8031a16:	4904      	ldr	r1, [pc, #16]	; (8031a28 <AWARENESS_getAlarmData(IMU_unsolictedAlarm_t)+0x24>)
 8031a18:	eb01 1505 	add.w	r5, r1, r5, lsl #4
 8031a1c:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
 8031a20:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 8031a24:	4620      	mov	r0, r4
 8031a26:	bd38      	pop	{r3, r4, r5, pc}
 8031a28:	2000e230 	.word	0x2000e230

08031a2c <SystemInit>:
 8031a2c:	4910      	ldr	r1, [pc, #64]	; (8031a70 <SystemInit+0x44>)
 8031a2e:	4b11      	ldr	r3, [pc, #68]	; (8031a74 <SystemInit+0x48>)
 8031a30:	f8d1 2088 	ldr.w	r2, [r1, #136]	; 0x88
 8031a34:	f442 0270 	orr.w	r2, r2, #15728640	; 0xf00000
 8031a38:	b410      	push	{r4}
 8031a3a:	f8c1 2088 	str.w	r2, [r1, #136]	; 0x88
 8031a3e:	681a      	ldr	r2, [r3, #0]
 8031a40:	4c0d      	ldr	r4, [pc, #52]	; (8031a78 <SystemInit+0x4c>)
 8031a42:	2000      	movs	r0, #0
 8031a44:	f042 0201 	orr.w	r2, r2, #1
 8031a48:	601a      	str	r2, [r3, #0]
 8031a4a:	6098      	str	r0, [r3, #8]
 8031a4c:	681a      	ldr	r2, [r3, #0]
 8031a4e:	f022 7284 	bic.w	r2, r2, #17301504	; 0x1080000
 8031a52:	f422 3280 	bic.w	r2, r2, #65536	; 0x10000
 8031a56:	601a      	str	r2, [r3, #0]
 8031a58:	605c      	str	r4, [r3, #4]
 8031a5a:	681a      	ldr	r2, [r3, #0]
 8031a5c:	f04f 6400 	mov.w	r4, #134217728	; 0x8000000
 8031a60:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
 8031a64:	601a      	str	r2, [r3, #0]
 8031a66:	60d8      	str	r0, [r3, #12]
 8031a68:	608c      	str	r4, [r1, #8]
 8031a6a:	f85d 4b04 	ldr.w	r4, [sp], #4
 8031a6e:	4770      	bx	lr
 8031a70:	e000ed00 	.word	0xe000ed00
 8031a74:	40023800 	.word	0x40023800
 8031a78:	24003010 	.word	0x24003010

08031a7c <SystemCoreClockUpdate>:
 8031a7c:	4a16      	ldr	r2, [pc, #88]	; (8031ad8 <SystemCoreClockUpdate+0x5c>)
 8031a7e:	6893      	ldr	r3, [r2, #8]
 8031a80:	f003 030c 	and.w	r3, r3, #12
 8031a84:	2b04      	cmp	r3, #4
 8031a86:	d00c      	beq.n	8031aa2 <SystemCoreClockUpdate+0x26>
 8031a88:	2b08      	cmp	r3, #8
 8031a8a:	d00c      	beq.n	8031aa6 <SystemCoreClockUpdate+0x2a>
 8031a8c:	4b13      	ldr	r3, [pc, #76]	; (8031adc <SystemCoreClockUpdate+0x60>)
 8031a8e:	4a12      	ldr	r2, [pc, #72]	; (8031ad8 <SystemCoreClockUpdate+0x5c>)
 8031a90:	4813      	ldr	r0, [pc, #76]	; (8031ae0 <SystemCoreClockUpdate+0x64>)
 8031a92:	6892      	ldr	r2, [r2, #8]
 8031a94:	4913      	ldr	r1, [pc, #76]	; (8031ae4 <SystemCoreClockUpdate+0x68>)
 8031a96:	f3c2 1203 	ubfx	r2, r2, #4, #4
 8031a9a:	5c82      	ldrb	r2, [r0, r2]
 8031a9c:	40d3      	lsrs	r3, r2
 8031a9e:	600b      	str	r3, [r1, #0]
 8031aa0:	4770      	bx	lr
 8031aa2:	4b11      	ldr	r3, [pc, #68]	; (8031ae8 <SystemCoreClockUpdate+0x6c>)
 8031aa4:	e7f3      	b.n	8031a8e <SystemCoreClockUpdate+0x12>
 8031aa6:	6850      	ldr	r0, [r2, #4]
 8031aa8:	6851      	ldr	r1, [r2, #4]
 8031aaa:	6852      	ldr	r2, [r2, #4]
 8031aac:	0243      	lsls	r3, r0, #9
 8031aae:	f3c2 1288 	ubfx	r2, r2, #6, #9
 8031ab2:	bf4c      	ite	mi
 8031ab4:	4b0c      	ldrmi	r3, [pc, #48]	; (8031ae8 <SystemCoreClockUpdate+0x6c>)
 8031ab6:	4b09      	ldrpl	r3, [pc, #36]	; (8031adc <SystemCoreClockUpdate+0x60>)
 8031ab8:	f001 013f 	and.w	r1, r1, #63	; 0x3f
 8031abc:	fbb3 f3f1 	udiv	r3, r3, r1
 8031ac0:	fb03 f302 	mul.w	r3, r3, r2
 8031ac4:	4a04      	ldr	r2, [pc, #16]	; (8031ad8 <SystemCoreClockUpdate+0x5c>)
 8031ac6:	6852      	ldr	r2, [r2, #4]
 8031ac8:	f3c2 4201 	ubfx	r2, r2, #16, #2
 8031acc:	3201      	adds	r2, #1
 8031ace:	0052      	lsls	r2, r2, #1
 8031ad0:	fbb3 f3f2 	udiv	r3, r3, r2
 8031ad4:	e7db      	b.n	8031a8e <SystemCoreClockUpdate+0x12>
 8031ad6:	bf00      	nop
 8031ad8:	40023800 	.word	0x40023800
 8031adc:	00f42400 	.word	0x00f42400
 8031ae0:	08047e44 	.word	0x08047e44
 8031ae4:	20002168 	.word	0x20002168
 8031ae8:	007a1200 	.word	0x007a1200

08031aec <main>:
 8031aec:	b508      	push	{r3, lr}
 8031aee:	4a0c      	ldr	r2, [pc, #48]	; (8031b20 <main+0x34>)
 8031af0:	4b0c      	ldr	r3, [pc, #48]	; (8031b24 <main+0x38>)
 8031af2:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8031af4:	68d3      	ldr	r3, [r2, #12]
 8031af6:	f64f 01ff 	movw	r1, #63743	; 0xf8ff
 8031afa:	400b      	ands	r3, r1
 8031afc:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 8031b00:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8031b04:	60d3      	str	r3, [r2, #12]
 8031b06:	f003 f913 	bl	8034d30 <HWM_pwrp>
 8031b0a:	2101      	movs	r1, #1
 8031b0c:	2000      	movs	r0, #0
 8031b0e:	f7fe fe9d 	bl	803084c <STO_setState>
 8031b12:	f7ef f853 	bl	8020bbc <SYSTEM_init>
 8031b16:	f007 fc89 	bl	803942c <_tx_initialize_kernel_enter>
 8031b1a:	2000      	movs	r0, #0
 8031b1c:	bd08      	pop	{r3, pc}
 8031b1e:	bf00      	nop
 8031b20:	e000ed00 	.word	0xe000ed00
 8031b24:	40023800 	.word	0x40023800
 8031b28:	8101b108 	.word	0x8101b108
 8031b2c:	8400b0b0 	.word	0x8400b0b0
 8031b30:	00000000 	.word	0x00000000

08031b34 <tx_application_define>:
 8031b34:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8031b38:	4981      	ldr	r1, [pc, #516]	; (8031d40 <tx_application_define+0x20c>)
 8031b3a:	f8df 82b8 	ldr.w	r8, [pc, #696]	; 8031df4 <tx_application_define+0x2c0>
 8031b3e:	f8df b2b8 	ldr.w	fp, [pc, #696]	; 8031df8 <tx_application_define+0x2c4>
 8031b42:	f8df a2b8 	ldr.w	sl, [pc, #696]	; 8031dfc <tx_application_define+0x2c8>
 8031b46:	b087      	sub	sp, #28
 8031b48:	4606      	mov	r6, r0
 8031b4a:	487e      	ldr	r0, [pc, #504]	; (8031d44 <tx_application_define+0x210>)
 8031b4c:	f007 fa20 	bl	8038f90 <_tx_event_flags_create>
 8031b50:	497d      	ldr	r1, [pc, #500]	; (8031d48 <tx_application_define+0x214>)
 8031b52:	487e      	ldr	r0, [pc, #504]	; (8031d4c <tx_application_define+0x218>)
 8031b54:	f007 fa1c 	bl	8038f90 <_tx_event_flags_create>
 8031b58:	497d      	ldr	r1, [pc, #500]	; (8031d50 <tx_application_define+0x21c>)
 8031b5a:	487e      	ldr	r0, [pc, #504]	; (8031d54 <tx_application_define+0x220>)
 8031b5c:	f007 fa18 	bl	8038f90 <_tx_event_flags_create>
 8031b60:	497d      	ldr	r1, [pc, #500]	; (8031d58 <tx_application_define+0x224>)
 8031b62:	487e      	ldr	r0, [pc, #504]	; (8031d5c <tx_application_define+0x228>)
 8031b64:	f007 fa14 	bl	8038f90 <_tx_event_flags_create>
 8031b68:	497d      	ldr	r1, [pc, #500]	; (8031d60 <tx_application_define+0x22c>)
 8031b6a:	487e      	ldr	r0, [pc, #504]	; (8031d64 <tx_application_define+0x230>)
 8031b6c:	f007 fa10 	bl	8038f90 <_tx_event_flags_create>
 8031b70:	497d      	ldr	r1, [pc, #500]	; (8031d68 <tx_application_define+0x234>)
 8031b72:	487e      	ldr	r0, [pc, #504]	; (8031d6c <tx_application_define+0x238>)
 8031b74:	f007 fa0c 	bl	8038f90 <_tx_event_flags_create>
 8031b78:	497d      	ldr	r1, [pc, #500]	; (8031d70 <tx_application_define+0x23c>)
 8031b7a:	487e      	ldr	r0, [pc, #504]	; (8031d74 <tx_application_define+0x240>)
 8031b7c:	f007 fa08 	bl	8038f90 <_tx_event_flags_create>
 8031b80:	497d      	ldr	r1, [pc, #500]	; (8031d78 <tx_application_define+0x244>)
 8031b82:	487e      	ldr	r0, [pc, #504]	; (8031d7c <tx_application_define+0x248>)
 8031b84:	2400      	movs	r4, #0
 8031b86:	2701      	movs	r7, #1
 8031b88:	2508      	movs	r5, #8
 8031b8a:	f007 fa01 	bl	8038f90 <_tx_event_flags_create>
 8031b8e:	f44f 6980 	mov.w	r9, #1024	; 0x400
 8031b92:	4640      	mov	r0, r8
 8031b94:	f7ef f8d2 	bl	8020d3c <SYSTEM_registerThread>
 8031b98:	4623      	mov	r3, r4
 8031b9a:	4a79      	ldr	r2, [pc, #484]	; (8031d80 <tx_application_define+0x24c>)
 8031b9c:	4979      	ldr	r1, [pc, #484]	; (8031d84 <tx_application_define+0x250>)
 8031b9e:	9600      	str	r6, [sp, #0]
 8031ba0:	e9cd 4704 	strd	r4, r7, [sp, #16]
 8031ba4:	e9cd 5502 	strd	r5, r5, [sp, #8]
 8031ba8:	4640      	mov	r0, r8
 8031baa:	f8cd 9004 	str.w	r9, [sp, #4]
 8031bae:	f008 f823 	bl	8039bf8 <_tx_thread_create>
 8031bb2:	4658      	mov	r0, fp
 8031bb4:	f7ef f8c2 	bl	8020d3c <SYSTEM_registerThread>
 8031bb8:	f44f 6800 	mov.w	r8, #2048	; 0x800
 8031bbc:	eb06 0309 	add.w	r3, r6, r9
 8031bc0:	4a71      	ldr	r2, [pc, #452]	; (8031d88 <tx_application_define+0x254>)
 8031bc2:	4972      	ldr	r1, [pc, #456]	; (8031d8c <tx_application_define+0x258>)
 8031bc4:	9300      	str	r3, [sp, #0]
 8031bc6:	e9cd 4704 	strd	r4, r7, [sp, #16]
 8031bca:	4623      	mov	r3, r4
 8031bcc:	e9cd 5502 	strd	r5, r5, [sp, #8]
 8031bd0:	4658      	mov	r0, fp
 8031bd2:	f8cd 8004 	str.w	r8, [sp, #4]
 8031bd6:	f008 f80f 	bl	8039bf8 <_tx_thread_create>
 8031bda:	4650      	mov	r0, sl
 8031bdc:	f7ef f8ae 	bl	8020d3c <SYSTEM_registerThread>
 8031be0:	f8df b21c 	ldr.w	fp, [pc, #540]	; 8031e00 <tx_application_define+0x2cc>
 8031be4:	4a6a      	ldr	r2, [pc, #424]	; (8031d90 <tx_application_define+0x25c>)
 8031be6:	496b      	ldr	r1, [pc, #428]	; (8031d94 <tx_application_define+0x260>)
 8031be8:	f8cd 8004 	str.w	r8, [sp, #4]
 8031bec:	f506 6340 	add.w	r3, r6, #3072	; 0xc00
 8031bf0:	9300      	str	r3, [sp, #0]
 8031bf2:	e9cd 4704 	strd	r4, r7, [sp, #16]
 8031bf6:	4623      	mov	r3, r4
 8031bf8:	e9cd 5502 	strd	r5, r5, [sp, #8]
 8031bfc:	4650      	mov	r0, sl
 8031bfe:	f007 fffb 	bl	8039bf8 <_tx_thread_create>
 8031c02:	4658      	mov	r0, fp
 8031c04:	f7ef f89a 	bl	8020d3c <SYSTEM_registerThread>
 8031c08:	f8df a1f8 	ldr.w	sl, [pc, #504]	; 8031e04 <tx_application_define+0x2d0>
 8031c0c:	4a62      	ldr	r2, [pc, #392]	; (8031d98 <tx_application_define+0x264>)
 8031c0e:	4963      	ldr	r1, [pc, #396]	; (8031d9c <tx_application_define+0x268>)
 8031c10:	f8cd 8004 	str.w	r8, [sp, #4]
 8031c14:	f506 53a0 	add.w	r3, r6, #5120	; 0x1400
 8031c18:	9300      	str	r3, [sp, #0]
 8031c1a:	e9cd 4704 	strd	r4, r7, [sp, #16]
 8031c1e:	4623      	mov	r3, r4
 8031c20:	e9cd 5502 	strd	r5, r5, [sp, #8]
 8031c24:	4658      	mov	r0, fp
 8031c26:	f007 ffe7 	bl	8039bf8 <_tx_thread_create>
 8031c2a:	4650      	mov	r0, sl
 8031c2c:	f7ef f886 	bl	8020d3c <SYSTEM_registerThread>
 8031c30:	f8df b1d4 	ldr.w	fp, [pc, #468]	; 8031e08 <tx_application_define+0x2d4>
 8031c34:	4a5a      	ldr	r2, [pc, #360]	; (8031da0 <tx_application_define+0x26c>)
 8031c36:	495b      	ldr	r1, [pc, #364]	; (8031da4 <tx_application_define+0x270>)
 8031c38:	f8cd 8004 	str.w	r8, [sp, #4]
 8031c3c:	f506 53e0 	add.w	r3, r6, #7168	; 0x1c00
 8031c40:	9300      	str	r3, [sp, #0]
 8031c42:	e9cd 4704 	strd	r4, r7, [sp, #16]
 8031c46:	4623      	mov	r3, r4
 8031c48:	e9cd 5502 	strd	r5, r5, [sp, #8]
 8031c4c:	4650      	mov	r0, sl
 8031c4e:	f007 ffd3 	bl	8039bf8 <_tx_thread_create>
 8031c52:	4658      	mov	r0, fp
 8031c54:	f7ef f872 	bl	8020d3c <SYSTEM_registerThread>
 8031c58:	f8df a1b0 	ldr.w	sl, [pc, #432]	; 8031e0c <tx_application_define+0x2d8>
 8031c5c:	4a52      	ldr	r2, [pc, #328]	; (8031da8 <tx_application_define+0x274>)
 8031c5e:	4953      	ldr	r1, [pc, #332]	; (8031dac <tx_application_define+0x278>)
 8031c60:	f8cd 9004 	str.w	r9, [sp, #4]
 8031c64:	f506 5310 	add.w	r3, r6, #9216	; 0x2400
 8031c68:	9300      	str	r3, [sp, #0]
 8031c6a:	e9cd 4704 	strd	r4, r7, [sp, #16]
 8031c6e:	4623      	mov	r3, r4
 8031c70:	e9cd 5502 	strd	r5, r5, [sp, #8]
 8031c74:	4658      	mov	r0, fp
 8031c76:	f007 ffbf 	bl	8039bf8 <_tx_thread_create>
 8031c7a:	4650      	mov	r0, sl
 8031c7c:	f7ef f85e 	bl	8020d3c <SYSTEM_registerThread>
 8031c80:	f8df b18c 	ldr.w	fp, [pc, #396]	; 8031e10 <tx_application_define+0x2dc>
 8031c84:	4a4a      	ldr	r2, [pc, #296]	; (8031db0 <tx_application_define+0x27c>)
 8031c86:	494b      	ldr	r1, [pc, #300]	; (8031db4 <tx_application_define+0x280>)
 8031c88:	f8cd 9004 	str.w	r9, [sp, #4]
 8031c8c:	f506 5320 	add.w	r3, r6, #10240	; 0x2800
 8031c90:	9300      	str	r3, [sp, #0]
 8031c92:	e9cd 4704 	strd	r4, r7, [sp, #16]
 8031c96:	4623      	mov	r3, r4
 8031c98:	e9cd 5502 	strd	r5, r5, [sp, #8]
 8031c9c:	4650      	mov	r0, sl
 8031c9e:	f007 ffab 	bl	8039bf8 <_tx_thread_create>
 8031ca2:	4658      	mov	r0, fp
 8031ca4:	f7ef f84a 	bl	8020d3c <SYSTEM_registerThread>
 8031ca8:	f8df a168 	ldr.w	sl, [pc, #360]	; 8031e14 <tx_application_define+0x2e0>
 8031cac:	4a42      	ldr	r2, [pc, #264]	; (8031db8 <tx_application_define+0x284>)
 8031cae:	4943      	ldr	r1, [pc, #268]	; (8031dbc <tx_application_define+0x288>)
 8031cb0:	f8cd 8004 	str.w	r8, [sp, #4]
 8031cb4:	f506 5330 	add.w	r3, r6, #11264	; 0x2c00
 8031cb8:	9300      	str	r3, [sp, #0]
 8031cba:	e9cd 4704 	strd	r4, r7, [sp, #16]
 8031cbe:	4623      	mov	r3, r4
 8031cc0:	e9cd 5502 	strd	r5, r5, [sp, #8]
 8031cc4:	4658      	mov	r0, fp
 8031cc6:	f007 ff97 	bl	8039bf8 <_tx_thread_create>
 8031cca:	4650      	mov	r0, sl
 8031ccc:	f7ef f836 	bl	8020d3c <SYSTEM_registerThread>
 8031cd0:	f506 5350 	add.w	r3, r6, #13312	; 0x3400
 8031cd4:	4a3a      	ldr	r2, [pc, #232]	; (8031dc0 <tx_application_define+0x28c>)
 8031cd6:	493b      	ldr	r1, [pc, #236]	; (8031dc4 <tx_application_define+0x290>)
 8031cd8:	9300      	str	r3, [sp, #0]
 8031cda:	e9cd 4704 	strd	r4, r7, [sp, #16]
 8031cde:	4623      	mov	r3, r4
 8031ce0:	e9cd 5502 	strd	r5, r5, [sp, #8]
 8031ce4:	f8cd 9004 	str.w	r9, [sp, #4]
 8031ce8:	4650      	mov	r0, sl
 8031cea:	f007 ff85 	bl	8039bf8 <_tx_thread_create>
 8031cee:	4836      	ldr	r0, [pc, #216]	; (8031dc8 <tx_application_define+0x294>)
 8031cf0:	f008 f9d8 	bl	803a0a4 <_tx_thread_stack_error_notify>
 8031cf4:	4622      	mov	r2, r4
 8031cf6:	4935      	ldr	r1, [pc, #212]	; (8031dcc <tx_application_define+0x298>)
 8031cf8:	4835      	ldr	r0, [pc, #212]	; (8031dd0 <tx_application_define+0x29c>)
 8031cfa:	f007 fc25 	bl	8039548 <_tx_mutex_create>
 8031cfe:	4622      	mov	r2, r4
 8031d00:	4934      	ldr	r1, [pc, #208]	; (8031dd4 <tx_application_define+0x2a0>)
 8031d02:	4835      	ldr	r0, [pc, #212]	; (8031dd8 <tx_application_define+0x2a4>)
 8031d04:	f007 fc20 	bl	8039548 <_tx_mutex_create>
 8031d08:	4622      	mov	r2, r4
 8031d0a:	4934      	ldr	r1, [pc, #208]	; (8031ddc <tx_application_define+0x2a8>)
 8031d0c:	4834      	ldr	r0, [pc, #208]	; (8031de0 <tx_application_define+0x2ac>)
 8031d0e:	f007 fc1b 	bl	8039548 <_tx_mutex_create>
 8031d12:	4622      	mov	r2, r4
 8031d14:	4933      	ldr	r1, [pc, #204]	; (8031de4 <tx_application_define+0x2b0>)
 8031d16:	4834      	ldr	r0, [pc, #208]	; (8031de8 <tx_application_define+0x2b4>)
 8031d18:	f007 fc16 	bl	8039548 <_tx_mutex_create>
 8031d1c:	4933      	ldr	r1, [pc, #204]	; (8031dec <tx_application_define+0x2b8>)
 8031d1e:	4834      	ldr	r0, [pc, #208]	; (8031df0 <tx_application_define+0x2bc>)
 8031d20:	4622      	mov	r2, r4
 8031d22:	f007 fc11 	bl	8039548 <_tx_mutex_create>
 8031d26:	f006 fc23 	bl	8038570 <_nx_system_initialize>
 8031d2a:	f506 5060 	add.w	r0, r6, #14336	; 0x3800
 8031d2e:	f7ee fc3d 	bl	80205ac <NETWORK_init>
 8031d32:	f7ff fa69 	bl	8031208 <MEMORY_viewPoolStatistics()>
 8031d36:	b007      	add	sp, #28
 8031d38:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8031d3c:	f7ff bab2 	b.w	80312a4 <MEMORY_lockAllocationPool()>
 8031d40:	08047cd8 	.word	0x08047cd8
 8031d44:	20003610 	.word	0x20003610
 8031d48:	08047ce8 	.word	0x08047ce8
 8031d4c:	20002504 	.word	0x20002504
 8031d50:	08047cf8 	.word	0x08047cf8
 8031d54:	20004a24 	.word	0x20004a24
 8031d58:	08047d08 	.word	0x08047d08
 8031d5c:	20005510 	.word	0x20005510
 8031d60:	08047d14 	.word	0x08047d14
 8031d64:	2000e158 	.word	0x2000e158
 8031d68:	08047d28 	.word	0x08047d28
 8031d6c:	2000a2f0 	.word	0x2000a2f0
 8031d70:	08047d3c 	.word	0x08047d3c
 8031d74:	20003718 	.word	0x20003718
 8031d78:	08047d48 	.word	0x08047d48
 8031d7c:	20009e98 	.word	0x20009e98
 8031d80:	08020c01 	.word	0x08020c01
 8031d84:	08047d60 	.word	0x08047d60
 8031d88:	0802d271 	.word	0x0802d271
 8031d8c:	08047d6c 	.word	0x08047d6c
 8031d90:	08020519 	.word	0x08020519
 8031d94:	08047d74 	.word	0x08047d74
 8031d98:	08025529 	.word	0x08025529
 8031d9c:	08047d7c 	.word	0x08047d7c
 8031da0:	0802da45 	.word	0x0802da45
 8031da4:	08047d8c 	.word	0x08047d8c
 8031da8:	08031835 	.word	0x08031835
 8031dac:	08047d9c 	.word	0x08047d9c
 8031db0:	080305b5 	.word	0x080305b5
 8031db4:	08047db0 	.word	0x08047db0
 8031db8:	080225f1 	.word	0x080225f1
 8031dbc:	08047dc4 	.word	0x08047dc4
 8031dc0:	0802f1ed 	.word	0x0802f1ed
 8031dc4:	08047ddc 	.word	0x08047ddc
 8031dc8:	08021409 	.word	0x08021409
 8031dcc:	08047df4 	.word	0x08047df4
 8031dd0:	200123b4 	.word	0x200123b4
 8031dd4:	08047e04 	.word	0x08047e04
 8031dd8:	20011578 	.word	0x20011578
 8031ddc:	08047e14 	.word	0x08047e14
 8031de0:	20012400 	.word	0x20012400
 8031de4:	08047e20 	.word	0x08047e20
 8031de8:	20003d0c 	.word	0x20003d0c
 8031dec:	08047e2c 	.word	0x08047e2c
 8031df0:	20004660 	.word	0x20004660
 8031df4:	2000355c 	.word	0x2000355c
 8031df8:	20005208 	.word	0x20005208
 8031dfc:	20002564 	.word	0x20002564
 8031e00:	20004a48 	.word	0x20004a48
 8031e04:	20005534 	.word	0x20005534
 8031e08:	2000e17c 	.word	0x2000e17c
 8031e0c:	2000a314 	.word	0x2000a314
 8031e10:	2000373c 	.word	0x2000373c
 8031e14:	20009bcc 	.word	0x20009bcc

08031e18 <TX_USER_thread_started_handler>:
 8031e18:	f008 b855 	b.w	8039ec6 <tx_thread_fpu_enable>

08031e1c <TX_USER_thread_completed_handler>:
 8031e1c:	f008 b860 	b.w	8039ee0 <tx_thread_fpu_disable>

08031e20 <eraseCRCregion>:
 8031e20:	b510      	push	{r4, lr}
 8031e22:	4826      	ldr	r0, [pc, #152]	; (8031ebc <eraseCRCregion+0x9c>)
 8031e24:	b082      	sub	sp, #8
 8031e26:	212f      	movs	r1, #47	; 0x2f
 8031e28:	f00d fa99 	bl	803f35e <strrchr>
 8031e2c:	2800      	cmp	r0, #0
 8031e2e:	d036      	beq.n	8031e9e <eraseCRCregion+0x7e>
 8031e30:	4822      	ldr	r0, [pc, #136]	; (8031ebc <eraseCRCregion+0x9c>)
 8031e32:	212f      	movs	r1, #47	; 0x2f
 8031e34:	f00d fa93 	bl	803f35e <strrchr>
 8031e38:	1c44      	adds	r4, r0, #1
 8031e3a:	4820      	ldr	r0, [pc, #128]	; (8031ebc <eraseCRCregion+0x9c>)
 8031e3c:	212f      	movs	r1, #47	; 0x2f
 8031e3e:	f00d fa8e 	bl	803f35e <strrchr>
 8031e42:	b308      	cbz	r0, 8031e88 <eraseCRCregion+0x68>
 8031e44:	481d      	ldr	r0, [pc, #116]	; (8031ebc <eraseCRCregion+0x9c>)
 8031e46:	212f      	movs	r1, #47	; 0x2f
 8031e48:	f00d fa89 	bl	803f35e <strrchr>
 8031e4c:	3001      	adds	r0, #1
 8031e4e:	4b1c      	ldr	r3, [pc, #112]	; (8031ec0 <eraseCRCregion+0xa0>)
 8031e50:	9000      	str	r0, [sp, #0]
 8031e52:	4621      	mov	r1, r4
 8031e54:	227e      	movs	r2, #126	; 0x7e
 8031e56:	2002      	movs	r0, #2
 8031e58:	9301      	str	r3, [sp, #4]
 8031e5a:	4b1a      	ldr	r3, [pc, #104]	; (8031ec4 <eraseCRCregion+0xa4>)
 8031e5c:	f7f0 fc9c 	bl	8022798 <DEBUG_logMsg>
 8031e60:	f009 fa0e 	bl	803b280 <FLASH_Unlock>
 8031e64:	f009 fa24 	bl	803b2b0 <FLASH_GetStatus>
 8031e68:	2807      	cmp	r0, #7
 8031e6a:	d104      	bne.n	8031e76 <eraseCRCregion+0x56>
 8031e6c:	4a16      	ldr	r2, [pc, #88]	; (8031ec8 <eraseCRCregion+0xa8>)
 8031e6e:	68d3      	ldr	r3, [r2, #12]
 8031e70:	f003 03c0 	and.w	r3, r3, #192	; 0xc0
 8031e74:	60d3      	str	r3, [r2, #12]
 8031e76:	2102      	movs	r1, #2
 8031e78:	2018      	movs	r0, #24
 8031e7a:	f009 fa4b 	bl	803b314 <FLASH_EraseSector>
 8031e7e:	b002      	add	sp, #8
 8031e80:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8031e84:	f009 ba0c 	b.w	803b2a0 <FLASH_Lock>
 8031e88:	480c      	ldr	r0, [pc, #48]	; (8031ebc <eraseCRCregion+0x9c>)
 8031e8a:	215c      	movs	r1, #92	; 0x5c
 8031e8c:	f00d fa67 	bl	803f35e <strrchr>
 8031e90:	b180      	cbz	r0, 8031eb4 <eraseCRCregion+0x94>
 8031e92:	480a      	ldr	r0, [pc, #40]	; (8031ebc <eraseCRCregion+0x9c>)
 8031e94:	215c      	movs	r1, #92	; 0x5c
 8031e96:	f00d fa62 	bl	803f35e <strrchr>
 8031e9a:	3001      	adds	r0, #1
 8031e9c:	e7d7      	b.n	8031e4e <eraseCRCregion+0x2e>
 8031e9e:	4807      	ldr	r0, [pc, #28]	; (8031ebc <eraseCRCregion+0x9c>)
 8031ea0:	215c      	movs	r1, #92	; 0x5c
 8031ea2:	f00d fa5c 	bl	803f35e <strrchr>
 8031ea6:	b138      	cbz	r0, 8031eb8 <eraseCRCregion+0x98>
 8031ea8:	4804      	ldr	r0, [pc, #16]	; (8031ebc <eraseCRCregion+0x9c>)
 8031eaa:	215c      	movs	r1, #92	; 0x5c
 8031eac:	f00d fa57 	bl	803f35e <strrchr>
 8031eb0:	1c44      	adds	r4, r0, #1
 8031eb2:	e7c2      	b.n	8031e3a <eraseCRCregion+0x1a>
 8031eb4:	4801      	ldr	r0, [pc, #4]	; (8031ebc <eraseCRCregion+0x9c>)
 8031eb6:	e7ca      	b.n	8031e4e <eraseCRCregion+0x2e>
 8031eb8:	4c00      	ldr	r4, [pc, #0]	; (8031ebc <eraseCRCregion+0x9c>)
 8031eba:	e7be      	b.n	8031e3a <eraseCRCregion+0x1a>
 8031ebc:	08047e54 	.word	0x08047e54
 8031ec0:	08047edc 	.word	0x08047edc
 8031ec4:	08047e90 	.word	0x08047e90
 8031ec8:	40023c00 	.word	0x40023c00

08031ecc <UPGRADER_eraseCRCKeyIfAny>:
 8031ecc:	b530      	push	{r4, r5, lr}
 8031ece:	4842      	ldr	r0, [pc, #264]	; (8031fd8 <UPGRADER_eraseCRCKeyIfAny+0x10c>)
 8031ed0:	b087      	sub	sp, #28
 8031ed2:	212f      	movs	r1, #47	; 0x2f
 8031ed4:	f00d fa43 	bl	803f35e <strrchr>
 8031ed8:	2800      	cmp	r0, #0
 8031eda:	d040      	beq.n	8031f5e <UPGRADER_eraseCRCKeyIfAny+0x92>
 8031edc:	483e      	ldr	r0, [pc, #248]	; (8031fd8 <UPGRADER_eraseCRCKeyIfAny+0x10c>)
 8031ede:	212f      	movs	r1, #47	; 0x2f
 8031ee0:	f00d fa3d 	bl	803f35e <strrchr>
 8031ee4:	1c44      	adds	r4, r0, #1
 8031ee6:	483c      	ldr	r0, [pc, #240]	; (8031fd8 <UPGRADER_eraseCRCKeyIfAny+0x10c>)
 8031ee8:	212f      	movs	r1, #47	; 0x2f
 8031eea:	f00d fa38 	bl	803f35e <strrchr>
 8031eee:	2800      	cmp	r0, #0
 8031ef0:	d045      	beq.n	8031f7e <UPGRADER_eraseCRCKeyIfAny+0xb2>
 8031ef2:	4839      	ldr	r0, [pc, #228]	; (8031fd8 <UPGRADER_eraseCRCKeyIfAny+0x10c>)
 8031ef4:	212f      	movs	r1, #47	; 0x2f
 8031ef6:	f00d fa32 	bl	803f35e <strrchr>
 8031efa:	3001      	adds	r0, #1
 8031efc:	4d37      	ldr	r5, [pc, #220]	; (8031fdc <UPGRADER_eraseCRCKeyIfAny+0x110>)
 8031efe:	4b38      	ldr	r3, [pc, #224]	; (8031fe0 <UPGRADER_eraseCRCKeyIfAny+0x114>)
 8031f00:	9000      	str	r0, [sp, #0]
 8031f02:	4621      	mov	r1, r4
 8031f04:	2237      	movs	r2, #55	; 0x37
 8031f06:	2002      	movs	r0, #2
 8031f08:	9501      	str	r5, [sp, #4]
 8031f0a:	f7f0 fc45 	bl	8022798 <DEBUG_logMsg>
 8031f0e:	4935      	ldr	r1, [pc, #212]	; (8031fe4 <UPGRADER_eraseCRCKeyIfAny+0x118>)
 8031f10:	2210      	movs	r2, #16
 8031f12:	a802      	add	r0, sp, #8
 8031f14:	f00d fb75 	bl	803f602 <__aeabi_memcpy>
 8031f18:	9b02      	ldr	r3, [sp, #8]
 8031f1a:	f1b3 3faa 	cmp.w	r3, #2863311530	; 0xaaaaaaaa
 8031f1e:	d04f      	beq.n	8031fc0 <UPGRADER_eraseCRCKeyIfAny+0xf4>
 8031f20:	482d      	ldr	r0, [pc, #180]	; (8031fd8 <UPGRADER_eraseCRCKeyIfAny+0x10c>)
 8031f22:	212f      	movs	r1, #47	; 0x2f
 8031f24:	f00d fa1b 	bl	803f35e <strrchr>
 8031f28:	2800      	cmp	r0, #0
 8031f2a:	d03e      	beq.n	8031faa <UPGRADER_eraseCRCKeyIfAny+0xde>
 8031f2c:	482a      	ldr	r0, [pc, #168]	; (8031fd8 <UPGRADER_eraseCRCKeyIfAny+0x10c>)
 8031f2e:	212f      	movs	r1, #47	; 0x2f
 8031f30:	f00d fa15 	bl	803f35e <strrchr>
 8031f34:	1c44      	adds	r4, r0, #1
 8031f36:	4828      	ldr	r0, [pc, #160]	; (8031fd8 <UPGRADER_eraseCRCKeyIfAny+0x10c>)
 8031f38:	212f      	movs	r1, #47	; 0x2f
 8031f3a:	f00d fa10 	bl	803f35e <strrchr>
 8031f3e:	b348      	cbz	r0, 8031f94 <UPGRADER_eraseCRCKeyIfAny+0xc8>
 8031f40:	4825      	ldr	r0, [pc, #148]	; (8031fd8 <UPGRADER_eraseCRCKeyIfAny+0x10c>)
 8031f42:	212f      	movs	r1, #47	; 0x2f
 8031f44:	f00d fa0b 	bl	803f35e <strrchr>
 8031f48:	3001      	adds	r0, #1
 8031f4a:	e9cd 0500 	strd	r0, r5, [sp]
 8031f4e:	4b26      	ldr	r3, [pc, #152]	; (8031fe8 <UPGRADER_eraseCRCKeyIfAny+0x11c>)
 8031f50:	4621      	mov	r1, r4
 8031f52:	2241      	movs	r2, #65	; 0x41
 8031f54:	2002      	movs	r0, #2
 8031f56:	f7f0 fc1f 	bl	8022798 <DEBUG_logMsg>
 8031f5a:	b007      	add	sp, #28
 8031f5c:	bd30      	pop	{r4, r5, pc}
 8031f5e:	481e      	ldr	r0, [pc, #120]	; (8031fd8 <UPGRADER_eraseCRCKeyIfAny+0x10c>)
 8031f60:	215c      	movs	r1, #92	; 0x5c
 8031f62:	f00d f9fc 	bl	803f35e <strrchr>
 8031f66:	b370      	cbz	r0, 8031fc6 <UPGRADER_eraseCRCKeyIfAny+0xfa>
 8031f68:	215c      	movs	r1, #92	; 0x5c
 8031f6a:	481b      	ldr	r0, [pc, #108]	; (8031fd8 <UPGRADER_eraseCRCKeyIfAny+0x10c>)
 8031f6c:	f00d f9f7 	bl	803f35e <strrchr>
 8031f70:	212f      	movs	r1, #47	; 0x2f
 8031f72:	1c44      	adds	r4, r0, #1
 8031f74:	4818      	ldr	r0, [pc, #96]	; (8031fd8 <UPGRADER_eraseCRCKeyIfAny+0x10c>)
 8031f76:	f00d f9f2 	bl	803f35e <strrchr>
 8031f7a:	2800      	cmp	r0, #0
 8031f7c:	d1b9      	bne.n	8031ef2 <UPGRADER_eraseCRCKeyIfAny+0x26>
 8031f7e:	4816      	ldr	r0, [pc, #88]	; (8031fd8 <UPGRADER_eraseCRCKeyIfAny+0x10c>)
 8031f80:	215c      	movs	r1, #92	; 0x5c
 8031f82:	f00d f9ec 	bl	803f35e <strrchr>
 8031f86:	b300      	cbz	r0, 8031fca <UPGRADER_eraseCRCKeyIfAny+0xfe>
 8031f88:	4813      	ldr	r0, [pc, #76]	; (8031fd8 <UPGRADER_eraseCRCKeyIfAny+0x10c>)
 8031f8a:	215c      	movs	r1, #92	; 0x5c
 8031f8c:	f00d f9e7 	bl	803f35e <strrchr>
 8031f90:	3001      	adds	r0, #1
 8031f92:	e7b3      	b.n	8031efc <UPGRADER_eraseCRCKeyIfAny+0x30>
 8031f94:	4810      	ldr	r0, [pc, #64]	; (8031fd8 <UPGRADER_eraseCRCKeyIfAny+0x10c>)
 8031f96:	215c      	movs	r1, #92	; 0x5c
 8031f98:	f00d f9e1 	bl	803f35e <strrchr>
 8031f9c:	b1c8      	cbz	r0, 8031fd2 <UPGRADER_eraseCRCKeyIfAny+0x106>
 8031f9e:	480e      	ldr	r0, [pc, #56]	; (8031fd8 <UPGRADER_eraseCRCKeyIfAny+0x10c>)
 8031fa0:	215c      	movs	r1, #92	; 0x5c
 8031fa2:	f00d f9dc 	bl	803f35e <strrchr>
 8031fa6:	3001      	adds	r0, #1
 8031fa8:	e7cf      	b.n	8031f4a <UPGRADER_eraseCRCKeyIfAny+0x7e>
 8031faa:	480b      	ldr	r0, [pc, #44]	; (8031fd8 <UPGRADER_eraseCRCKeyIfAny+0x10c>)
 8031fac:	215c      	movs	r1, #92	; 0x5c
 8031fae:	f00d f9d6 	bl	803f35e <strrchr>
 8031fb2:	b160      	cbz	r0, 8031fce <UPGRADER_eraseCRCKeyIfAny+0x102>
 8031fb4:	4808      	ldr	r0, [pc, #32]	; (8031fd8 <UPGRADER_eraseCRCKeyIfAny+0x10c>)
 8031fb6:	215c      	movs	r1, #92	; 0x5c
 8031fb8:	f00d f9d1 	bl	803f35e <strrchr>
 8031fbc:	1c44      	adds	r4, r0, #1
 8031fbe:	e7ba      	b.n	8031f36 <UPGRADER_eraseCRCKeyIfAny+0x6a>
 8031fc0:	f7ff ff2e 	bl	8031e20 <eraseCRCregion>
 8031fc4:	e7ac      	b.n	8031f20 <UPGRADER_eraseCRCKeyIfAny+0x54>
 8031fc6:	4c04      	ldr	r4, [pc, #16]	; (8031fd8 <UPGRADER_eraseCRCKeyIfAny+0x10c>)
 8031fc8:	e78d      	b.n	8031ee6 <UPGRADER_eraseCRCKeyIfAny+0x1a>
 8031fca:	4803      	ldr	r0, [pc, #12]	; (8031fd8 <UPGRADER_eraseCRCKeyIfAny+0x10c>)
 8031fcc:	e796      	b.n	8031efc <UPGRADER_eraseCRCKeyIfAny+0x30>
 8031fce:	4c02      	ldr	r4, [pc, #8]	; (8031fd8 <UPGRADER_eraseCRCKeyIfAny+0x10c>)
 8031fd0:	e7b1      	b.n	8031f36 <UPGRADER_eraseCRCKeyIfAny+0x6a>
 8031fd2:	4801      	ldr	r0, [pc, #4]	; (8031fd8 <UPGRADER_eraseCRCKeyIfAny+0x10c>)
 8031fd4:	e7b9      	b.n	8031f4a <UPGRADER_eraseCRCKeyIfAny+0x7e>
 8031fd6:	bf00      	nop
 8031fd8:	08047e54 	.word	0x08047e54
 8031fdc:	08047eb0 	.word	0x08047eb0
 8031fe0:	08047e90 	.word	0x08047e90
 8031fe4:	0800c000 	.word	0x0800c000
 8031fe8:	08047ea0 	.word	0x08047ea0

08031fec <UPGRADER_enterUpdateMode>:
 8031fec:	b500      	push	{lr}
 8031fee:	b087      	sub	sp, #28
 8031ff0:	ac02      	add	r4, sp, #8
 8031ff2:	f7ff ff15 	bl	8031e20 <eraseCRCregion>
 8031ff6:	f1c4 6500 	rsb	r5, r4, #134217728	; 0x8000000
 8031ffa:	f04f 33aa 	mov.w	r3, #2863311530	; 0xaaaaaaaa
 8031ffe:	f50d 4680 	add.w	r6, sp, #16384	; 0x4000
 8032002:	9302      	str	r3, [sp, #8]
 8032004:	f505 4540 	add.w	r5, r5, #49152	; 0xc000
 8032008:	f009 f93a 	bl	803b280 <FLASH_Unlock>
 803200c:	3607      	adds	r6, #7
 803200e:	21aa      	movs	r1, #170	; 0xaa
 8032010:	e001      	b.n	8032016 <UPGRADER_enterUpdateMode+0x2a>
 8032012:	f814 1f01 	ldrb.w	r1, [r4, #1]!
 8032016:	1928      	adds	r0, r5, r4
 8032018:	f009 f9d2 	bl	803b3c0 <FLASH_ProgramByte>
 803201c:	42b4      	cmp	r4, r6
 803201e:	d1f8      	bne.n	8032012 <UPGRADER_enterUpdateMode+0x26>
 8032020:	f009 f93e 	bl	803b2a0 <FLASH_Lock>
 8032024:	4821      	ldr	r0, [pc, #132]	; (80320ac <UPGRADER_enterUpdateMode+0xc0>)
 8032026:	212f      	movs	r1, #47	; 0x2f
 8032028:	f00d f999 	bl	803f35e <strrchr>
 803202c:	b320      	cbz	r0, 8032078 <UPGRADER_enterUpdateMode+0x8c>
 803202e:	481f      	ldr	r0, [pc, #124]	; (80320ac <UPGRADER_enterUpdateMode+0xc0>)
 8032030:	212f      	movs	r1, #47	; 0x2f
 8032032:	f00d f994 	bl	803f35e <strrchr>
 8032036:	1c44      	adds	r4, r0, #1
 8032038:	481c      	ldr	r0, [pc, #112]	; (80320ac <UPGRADER_enterUpdateMode+0xc0>)
 803203a:	212f      	movs	r1, #47	; 0x2f
 803203c:	f00d f98f 	bl	803f35e <strrchr>
 8032040:	b328      	cbz	r0, 803208e <UPGRADER_enterUpdateMode+0xa2>
 8032042:	481a      	ldr	r0, [pc, #104]	; (80320ac <UPGRADER_enterUpdateMode+0xc0>)
 8032044:	212f      	movs	r1, #47	; 0x2f
 8032046:	f00d f98a 	bl	803f35e <strrchr>
 803204a:	3001      	adds	r0, #1
 803204c:	4b18      	ldr	r3, [pc, #96]	; (80320b0 <UPGRADER_enterUpdateMode+0xc4>)
 803204e:	9000      	str	r0, [sp, #0]
 8032050:	9301      	str	r3, [sp, #4]
 8032052:	4621      	mov	r1, r4
 8032054:	4b17      	ldr	r3, [pc, #92]	; (80320b4 <UPGRADER_enterUpdateMode+0xc8>)
 8032056:	2260      	movs	r2, #96	; 0x60
 8032058:	2002      	movs	r0, #2
 803205a:	f7f0 fb9d 	bl	8022798 <DEBUG_logMsg>
 803205e:	f3bf 8f4f 	dsb	sy
 8032062:	4915      	ldr	r1, [pc, #84]	; (80320b8 <UPGRADER_enterUpdateMode+0xcc>)
 8032064:	4b15      	ldr	r3, [pc, #84]	; (80320bc <UPGRADER_enterUpdateMode+0xd0>)
 8032066:	68ca      	ldr	r2, [r1, #12]
 8032068:	f402 62e0 	and.w	r2, r2, #1792	; 0x700
 803206c:	4313      	orrs	r3, r2
 803206e:	60cb      	str	r3, [r1, #12]
 8032070:	f3bf 8f4f 	dsb	sy
 8032074:	bf00      	nop
 8032076:	e7fd      	b.n	8032074 <UPGRADER_enterUpdateMode+0x88>
 8032078:	480c      	ldr	r0, [pc, #48]	; (80320ac <UPGRADER_enterUpdateMode+0xc0>)
 803207a:	215c      	movs	r1, #92	; 0x5c
 803207c:	f00d f96f 	bl	803f35e <strrchr>
 8032080:	b180      	cbz	r0, 80320a4 <UPGRADER_enterUpdateMode+0xb8>
 8032082:	480a      	ldr	r0, [pc, #40]	; (80320ac <UPGRADER_enterUpdateMode+0xc0>)
 8032084:	215c      	movs	r1, #92	; 0x5c
 8032086:	f00d f96a 	bl	803f35e <strrchr>
 803208a:	1c44      	adds	r4, r0, #1
 803208c:	e7d4      	b.n	8032038 <UPGRADER_enterUpdateMode+0x4c>
 803208e:	4807      	ldr	r0, [pc, #28]	; (80320ac <UPGRADER_enterUpdateMode+0xc0>)
 8032090:	215c      	movs	r1, #92	; 0x5c
 8032092:	f00d f964 	bl	803f35e <strrchr>
 8032096:	b138      	cbz	r0, 80320a8 <UPGRADER_enterUpdateMode+0xbc>
 8032098:	4804      	ldr	r0, [pc, #16]	; (80320ac <UPGRADER_enterUpdateMode+0xc0>)
 803209a:	215c      	movs	r1, #92	; 0x5c
 803209c:	f00d f95f 	bl	803f35e <strrchr>
 80320a0:	3001      	adds	r0, #1
 80320a2:	e7d3      	b.n	803204c <UPGRADER_enterUpdateMode+0x60>
 80320a4:	4c01      	ldr	r4, [pc, #4]	; (80320ac <UPGRADER_enterUpdateMode+0xc0>)
 80320a6:	e7c7      	b.n	8032038 <UPGRADER_enterUpdateMode+0x4c>
 80320a8:	4800      	ldr	r0, [pc, #0]	; (80320ac <UPGRADER_enterUpdateMode+0xc0>)
 80320aa:	e7cf      	b.n	803204c <UPGRADER_enterUpdateMode+0x60>
 80320ac:	08047e54 	.word	0x08047e54
 80320b0:	08047ecc 	.word	0x08047ecc
 80320b4:	08047e90 	.word	0x08047e90
 80320b8:	e000ed00 	.word	0xe000ed00
 80320bc:	05fa0004 	.word	0x05fa0004

080320c0 <UPG_COMM_init>:
 80320c0:	b570      	push	{r4, r5, r6, lr}
 80320c2:	4b0e      	ldr	r3, [pc, #56]	; (80320fc <UPG_COMM_init+0x3c>)
 80320c4:	480e      	ldr	r0, [pc, #56]	; (8032100 <UPG_COMM_init+0x40>)
 80320c6:	4c0f      	ldr	r4, [pc, #60]	; (8032104 <UPG_COMM_init+0x44>)
 80320c8:	2210      	movs	r2, #16
 80320ca:	2106      	movs	r1, #6
 80320cc:	f7fc f92c 	bl	802e328 <UTILITIES_initRingBuff>
 80320d0:	f104 0670 	add.w	r6, r4, #112	; 0x70
 80320d4:	2500      	movs	r5, #0
 80320d6:	4620      	mov	r0, r4
 80320d8:	2210      	movs	r2, #16
 80320da:	2100      	movs	r1, #0
 80320dc:	f804 5c01 	strb.w	r5, [r4, #-1]
 80320e0:	f00d fab8 	bl	803f654 <memset>
 80320e4:	341c      	adds	r4, #28
 80320e6:	f804 5c0c 	strb.w	r5, [r4, #-12]
 80320ea:	f804 5c0b 	strb.w	r5, [r4, #-11]
 80320ee:	f844 5c09 	str.w	r5, [r4, #-9]
 80320f2:	f804 5c05 	strb.w	r5, [r4, #-5]
 80320f6:	42b4      	cmp	r4, r6
 80320f8:	d1ed      	bne.n	80320d6 <UPG_COMM_init+0x16>
 80320fa:	bd70      	pop	{r4, r5, r6, pc}
 80320fc:	2000e260 	.word	0x2000e260
 8032100:	2000e330 	.word	0x2000e330
 8032104:	2000e2c1 	.word	0x2000e2c1

08032108 <UPG_COMM_packPacketNoOptData>:
 8032108:	b410      	push	{r4}
 803210a:	0109      	lsls	r1, r1, #4
 803210c:	f002 020f 	and.w	r2, r2, #15
 8032110:	f001 0170 	and.w	r1, r1, #112	; 0x70
 8032114:	4311      	orrs	r1, r2
 8032116:	f89d 4004 	ldrb.w	r4, [sp, #4]
 803211a:	7041      	strb	r1, [r0, #1]
 803211c:	2200      	movs	r2, #0
 803211e:	2106      	movs	r1, #6
 8032120:	7083      	strb	r3, [r0, #2]
 8032122:	70c4      	strb	r4, [r0, #3]
 8032124:	7102      	strb	r2, [r0, #4]
 8032126:	4613      	mov	r3, r2
 8032128:	7001      	strb	r1, [r0, #0]
 803212a:	1c42      	adds	r2, r0, #1
 803212c:	1d44      	adds	r4, r0, #5
 803212e:	e001      	b.n	8032134 <UPG_COMM_packPacketNoOptData+0x2c>
 8032130:	f812 1b01 	ldrb.w	r1, [r2], #1
 8032134:	440b      	add	r3, r1
 8032136:	42a2      	cmp	r2, r4
 8032138:	b2db      	uxtb	r3, r3
 803213a:	d1f9      	bne.n	8032130 <UPG_COMM_packPacketNoOptData+0x28>
 803213c:	f85d 4b04 	ldr.w	r4, [sp], #4
 8032140:	7143      	strb	r3, [r0, #5]
 8032142:	4770      	bx	lr

08032144 <UPG_COMM_packPacket>:
 8032144:	b470      	push	{r4, r5, r6}
 8032146:	0109      	lsls	r1, r1, #4
 8032148:	f89d 5018 	ldrb.w	r5, [sp, #24]
 803214c:	9c05      	ldr	r4, [sp, #20]
 803214e:	7083      	strb	r3, [r0, #2]
 8032150:	f002 020f 	and.w	r2, r2, #15
 8032154:	f001 0170 	and.w	r1, r1, #112	; 0x70
 8032158:	4311      	orrs	r1, r2
 803215a:	3506      	adds	r5, #6
 803215c:	b2ea      	uxtb	r2, r5
 803215e:	7041      	strb	r1, [r0, #1]
 8032160:	f89d 500c 	ldrb.w	r5, [sp, #12]
 8032164:	f89d 1010 	ldrb.w	r1, [sp, #16]
 8032168:	70c5      	strb	r5, [r0, #3]
 803216a:	7101      	strb	r1, [r0, #4]
 803216c:	7002      	strb	r2, [r0, #0]
 803216e:	b1cc      	cbz	r4, 80321a4 <UPG_COMM_packPacket+0x60>
 8032170:	f8c0 4006 	str.w	r4, [r0, #6]
 8032174:	1c41      	adds	r1, r0, #1
 8032176:	1d46      	adds	r6, r0, #5
 8032178:	4615      	mov	r5, r2
 803217a:	2300      	movs	r3, #0
 803217c:	e001      	b.n	8032182 <UPG_COMM_packPacket+0x3e>
 803217e:	f811 5b01 	ldrb.w	r5, [r1], #1
 8032182:	442b      	add	r3, r5
 8032184:	42b1      	cmp	r1, r6
 8032186:	b2db      	uxtb	r3, r3
 8032188:	d1f9      	bne.n	803217e <UPG_COMM_packPacket+0x3a>
 803218a:	2a06      	cmp	r2, #6
 803218c:	d007      	beq.n	803219e <UPG_COMM_packPacket+0x5a>
 803218e:	3a06      	subs	r2, #6
 8032190:	4422      	add	r2, r4
 8032192:	f814 1b01 	ldrb.w	r1, [r4], #1
 8032196:	440b      	add	r3, r1
 8032198:	42a2      	cmp	r2, r4
 803219a:	b2db      	uxtb	r3, r3
 803219c:	d1f9      	bne.n	8032192 <UPG_COMM_packPacket+0x4e>
 803219e:	bc70      	pop	{r4, r5, r6}
 80321a0:	7143      	strb	r3, [r0, #5]
 80321a2:	4770      	bx	lr
 80321a4:	f8d0 4006 	ldr.w	r4, [r0, #6]
 80321a8:	e7e4      	b.n	8032174 <UPG_COMM_packPacket+0x30>
 80321aa:	bf00      	nop

080321ac <UPG_COMM_sendPacket>:
 80321ac:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80321b0:	4d54      	ldr	r5, [pc, #336]	; (8032304 <UPG_COMM_sendPacket+0x158>)
 80321b2:	b086      	sub	sp, #24
 80321b4:	4607      	mov	r7, r0
 80321b6:	6828      	ldr	r0, [r5, #0]
 80321b8:	f7fb f8c4 	bl	802d344 <TIME_getElapsedTimeMsec>
 80321bc:	2807      	cmp	r0, #7
 80321be:	d97c      	bls.n	80322ba <UPG_COMM_sendPacket+0x10e>
 80321c0:	787b      	ldrb	r3, [r7, #1]
 80321c2:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 80321c6:	2400      	movs	r4, #0
 80321c8:	2104      	movs	r1, #4
 80321ca:	019b      	lsls	r3, r3, #6
 80321cc:	e9cd 4402 	strd	r4, r4, [sp, #8]
 80321d0:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 80321d4:	2602      	movs	r6, #2
 80321d6:	f88d 1009 	strb.w	r1, [sp, #9]
 80321da:	f10d 000e 	add.w	r0, sp, #14
 80321de:	2206      	movs	r2, #6
 80321e0:	4639      	mov	r1, r7
 80321e2:	f88d 600c 	strb.w	r6, [sp, #12]
 80321e6:	f8ad 300a 	strh.w	r3, [sp, #10]
 80321ea:	9404      	str	r4, [sp, #16]
 80321ec:	f8ad 4014 	strh.w	r4, [sp, #20]
 80321f0:	f00d fa07 	bl	803f602 <__aeabi_memcpy>
 80321f4:	783e      	ldrb	r6, [r7, #0]
 80321f6:	f1a6 0806 	sub.w	r8, r6, #6
 80321fa:	4646      	mov	r6, r8
 80321fc:	2e02      	cmp	r6, #2
 80321fe:	bf28      	it	cs
 8032200:	2602      	movcs	r6, #2
 8032202:	f1b8 0f00 	cmp.w	r8, #0
 8032206:	d117      	bne.n	8032238 <UPG_COMM_sendPacket+0x8c>
 8032208:	1db2      	adds	r2, r6, #6
 803220a:	a902      	add	r1, sp, #8
 803220c:	4640      	mov	r0, r8
 803220e:	f88d 200d 	strb.w	r2, [sp, #13]
 8032212:	f7fe fac5 	bl	80307a0 <CANMNGR_sendMsg>
 8032216:	f89d 300a 	ldrb.w	r3, [sp, #10]
 803221a:	1c5a      	adds	r2, r3, #1
 803221c:	f362 0305 	bfi	r3, r2, #0, #6
 8032220:	f88d 300a 	strb.w	r3, [sp, #10]
 8032224:	2800      	cmp	r0, #0
 8032226:	d146      	bne.n	80322b6 <UPG_COMM_sendPacket+0x10a>
 8032228:	2406      	movs	r4, #6
 803222a:	f7fb f889 	bl	802d340 <TIME_getTimeMsec>
 803222e:	6028      	str	r0, [r5, #0]
 8032230:	4620      	mov	r0, r4
 8032232:	b006      	add	sp, #24
 8032234:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8032238:	4632      	mov	r2, r6
 803223a:	f8d7 1006 	ldr.w	r1, [r7, #6]
 803223e:	a805      	add	r0, sp, #20
 8032240:	f00d f9df 	bl	803f602 <__aeabi_memcpy>
 8032244:	1db3      	adds	r3, r6, #6
 8032246:	4620      	mov	r0, r4
 8032248:	a902      	add	r1, sp, #8
 803224a:	f88d 300d 	strb.w	r3, [sp, #13]
 803224e:	f7fe faa7 	bl	80307a0 <CANMNGR_sendMsg>
 8032252:	f89d 300a 	ldrb.w	r3, [sp, #10]
 8032256:	1c5a      	adds	r2, r3, #1
 8032258:	f362 0305 	bfi	r3, r2, #0, #6
 803225c:	f88d 300a 	strb.w	r3, [sp, #10]
 8032260:	2800      	cmp	r0, #0
 8032262:	d0e1      	beq.n	8032228 <UPG_COMM_sendPacket+0x7c>
 8032264:	f8d7 7006 	ldr.w	r7, [r7, #6]
 8032268:	4437      	add	r7, r6
 803226a:	ebb8 0606 	subs.w	r6, r8, r6
 803226e:	d022      	beq.n	80322b6 <UPG_COMM_sendPacket+0x10a>
 8032270:	2e08      	cmp	r6, #8
 8032272:	4634      	mov	r4, r6
 8032274:	f04f 0204 	mov.w	r2, #4
 8032278:	bf28      	it	cs
 803227a:	2408      	movcs	r4, #8
 803227c:	2100      	movs	r1, #0
 803227e:	f10d 000e 	add.w	r0, sp, #14
 8032282:	f00d f9e7 	bl	803f654 <memset>
 8032286:	4622      	mov	r2, r4
 8032288:	4639      	mov	r1, r7
 803228a:	f10d 000e 	add.w	r0, sp, #14
 803228e:	f00d f9b8 	bl	803f602 <__aeabi_memcpy>
 8032292:	a902      	add	r1, sp, #8
 8032294:	2000      	movs	r0, #0
 8032296:	f88d 400d 	strb.w	r4, [sp, #13]
 803229a:	f7fe fa81 	bl	80307a0 <CANMNGR_sendMsg>
 803229e:	f89d 300a 	ldrb.w	r3, [sp, #10]
 80322a2:	1c5a      	adds	r2, r3, #1
 80322a4:	f362 0305 	bfi	r3, r2, #0, #6
 80322a8:	4427      	add	r7, r4
 80322aa:	f88d 300a 	strb.w	r3, [sp, #10]
 80322ae:	2800      	cmp	r0, #0
 80322b0:	d0ba      	beq.n	8032228 <UPG_COMM_sendPacket+0x7c>
 80322b2:	1b36      	subs	r6, r6, r4
 80322b4:	d1dc      	bne.n	8032270 <UPG_COMM_sendPacket+0xc4>
 80322b6:	2400      	movs	r4, #0
 80322b8:	e7b7      	b.n	803222a <UPG_COMM_sendPacket+0x7e>
 80322ba:	4604      	mov	r4, r0
 80322bc:	212f      	movs	r1, #47	; 0x2f
 80322be:	4812      	ldr	r0, [pc, #72]	; (8032308 <UPG_COMM_sendPacket+0x15c>)
 80322c0:	f00d f84d 	bl	803f35e <strrchr>
 80322c4:	f1c4 0608 	rsb	r6, r4, #8
 80322c8:	b178      	cbz	r0, 80322ea <UPG_COMM_sendPacket+0x13e>
 80322ca:	212f      	movs	r1, #47	; 0x2f
 80322cc:	480e      	ldr	r0, [pc, #56]	; (8032308 <UPG_COMM_sendPacket+0x15c>)
 80322ce:	f00d f846 	bl	803f35e <strrchr>
 80322d2:	1c41      	adds	r1, r0, #1
 80322d4:	e9cd 4600 	strd	r4, r6, [sp]
 80322d8:	4b0c      	ldr	r3, [pc, #48]	; (803230c <UPG_COMM_sendPacket+0x160>)
 80322da:	22b0      	movs	r2, #176	; 0xb0
 80322dc:	2002      	movs	r0, #2
 80322de:	f7f0 fa5b 	bl	8022798 <DEBUG_logMsg>
 80322e2:	4630      	mov	r0, r6
 80322e4:	f007 fe34 	bl	8039f50 <_tx_thread_sleep>
 80322e8:	e76a      	b.n	80321c0 <UPG_COMM_sendPacket+0x14>
 80322ea:	4807      	ldr	r0, [pc, #28]	; (8032308 <UPG_COMM_sendPacket+0x15c>)
 80322ec:	215c      	movs	r1, #92	; 0x5c
 80322ee:	f00d f836 	bl	803f35e <strrchr>
 80322f2:	b128      	cbz	r0, 8032300 <UPG_COMM_sendPacket+0x154>
 80322f4:	215c      	movs	r1, #92	; 0x5c
 80322f6:	4804      	ldr	r0, [pc, #16]	; (8032308 <UPG_COMM_sendPacket+0x15c>)
 80322f8:	f00d f831 	bl	803f35e <strrchr>
 80322fc:	1c41      	adds	r1, r0, #1
 80322fe:	e7e9      	b.n	80322d4 <UPG_COMM_sendPacket+0x128>
 8032300:	4901      	ldr	r1, [pc, #4]	; (8032308 <UPG_COMM_sendPacket+0x15c>)
 8032302:	e7e7      	b.n	80322d4 <UPG_COMM_sendPacket+0x128>
 8032304:	2000e340 	.word	0x2000e340
 8032308:	08047eec 	.word	0x08047eec
 803230c:	08047f2c 	.word	0x08047f2c

08032310 <UPG_COMM_recvCallbackCAN>:
 8032310:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8032314:	b2c3      	uxtb	r3, r0
 8032316:	b087      	sub	sp, #28
 8032318:	2b04      	cmp	r3, #4
 803231a:	9005      	str	r0, [sp, #20]
 803231c:	f040 80b4 	bne.w	8032488 <UPG_COMM_recvCallbackCAN+0x178>
 8032320:	f3c0 3686 	ubfx	r6, r0, #14, #7
 8032324:	2e11      	cmp	r6, #17
 8032326:	f040 80e9 	bne.w	80324fc <UPG_COMM_recvCallbackCAN+0x1ec>
 803232a:	f8bd 3016 	ldrh.w	r3, [sp, #22]
 803232e:	f3c3 1343 	ubfx	r3, r3, #5, #4
 8032332:	3b01      	subs	r3, #1
 8032334:	460c      	mov	r4, r1
 8032336:	4615      	mov	r5, r2
 8032338:	2b07      	cmp	r3, #7
 803233a:	f200 80a8 	bhi.w	803248e <UPG_COMM_recvCallbackCAN+0x17e>
 803233e:	e8df f013 	tbh	[pc, r3, lsl #1]
 8032342:	00a6      	.short	0x00a6
 8032344:	00a600f8 	.word	0x00a600f8
 8032348:	00a600f4 	.word	0x00a600f4
 803234c:	00a600a6 	.word	0x00a600a6
 8032350:	00f6      	.short	0x00f6
 8032352:	2600      	movs	r6, #0
 8032354:	f89d 3015 	ldrb.w	r3, [sp, #21]
 8032358:	f013 013f 	ands.w	r1, r3, #63	; 0x3f
 803235c:	f040 80f0 	bne.w	8032540 <UPG_COMM_recvCallbackCAN+0x230>
 8032360:	7833      	ldrb	r3, [r6, #0]
 8032362:	2b10      	cmp	r3, #16
 8032364:	f240 8129 	bls.w	80325ba <UPG_COMM_recvCallbackCAN+0x2aa>
 8032368:	48cc      	ldr	r0, [pc, #816]	; (803269c <UPG_COMM_recvCallbackCAN+0x38c>)
 803236a:	212f      	movs	r1, #47	; 0x2f
 803236c:	f00c fff7 	bl	803f35e <strrchr>
 8032370:	2800      	cmp	r0, #0
 8032372:	f000 820a 	beq.w	803278a <UPG_COMM_recvCallbackCAN+0x47a>
 8032376:	212f      	movs	r1, #47	; 0x2f
 8032378:	48c8      	ldr	r0, [pc, #800]	; (803269c <UPG_COMM_recvCallbackCAN+0x38c>)
 803237a:	f00c fff0 	bl	803f35e <strrchr>
 803237e:	1c41      	adds	r1, r0, #1
 8032380:	2001      	movs	r0, #1
 8032382:	4bc7      	ldr	r3, [pc, #796]	; (80326a0 <UPG_COMM_recvCallbackCAN+0x390>)
 8032384:	f44f 728c 	mov.w	r2, #280	; 0x118
 8032388:	f7f0 fa06 	bl	8022798 <DEBUG_logMsg>
 803238c:	48c3      	ldr	r0, [pc, #780]	; (803269c <UPG_COMM_recvCallbackCAN+0x38c>)
 803238e:	212f      	movs	r1, #47	; 0x2f
 8032390:	f00c ffe5 	bl	803f35e <strrchr>
 8032394:	2800      	cmp	r0, #0
 8032396:	f000 81e2 	beq.w	803275e <UPG_COMM_recvCallbackCAN+0x44e>
 803239a:	212f      	movs	r1, #47	; 0x2f
 803239c:	48bf      	ldr	r0, [pc, #764]	; (803269c <UPG_COMM_recvCallbackCAN+0x38c>)
 803239e:	f00c ffde 	bl	803f35e <strrchr>
 80323a2:	1c41      	adds	r1, r0, #1
 80323a4:	7833      	ldrb	r3, [r6, #0]
 80323a6:	9300      	str	r3, [sp, #0]
 80323a8:	2002      	movs	r0, #2
 80323aa:	4bbe      	ldr	r3, [pc, #760]	; (80326a4 <UPG_COMM_recvCallbackCAN+0x394>)
 80323ac:	f240 1219 	movw	r2, #281	; 0x119
 80323b0:	f7f0 f9f2 	bl	8022798 <DEBUG_logMsg>
 80323b4:	48b9      	ldr	r0, [pc, #740]	; (803269c <UPG_COMM_recvCallbackCAN+0x38c>)
 80323b6:	212f      	movs	r1, #47	; 0x2f
 80323b8:	f00c ffd1 	bl	803f35e <strrchr>
 80323bc:	2800      	cmp	r0, #0
 80323be:	f000 81d9 	beq.w	8032774 <UPG_COMM_recvCallbackCAN+0x464>
 80323c2:	212f      	movs	r1, #47	; 0x2f
 80323c4:	48b5      	ldr	r0, [pc, #724]	; (803269c <UPG_COMM_recvCallbackCAN+0x38c>)
 80323c6:	f00c ffca 	bl	803f35e <strrchr>
 80323ca:	1c41      	adds	r1, r0, #1
 80323cc:	7873      	ldrb	r3, [r6, #1]
 80323ce:	9300      	str	r3, [sp, #0]
 80323d0:	2002      	movs	r0, #2
 80323d2:	4bb5      	ldr	r3, [pc, #724]	; (80326a8 <UPG_COMM_recvCallbackCAN+0x398>)
 80323d4:	f240 1219 	movw	r2, #281	; 0x119
 80323d8:	f7f0 f9de 	bl	8022798 <DEBUG_logMsg>
 80323dc:	48af      	ldr	r0, [pc, #700]	; (803269c <UPG_COMM_recvCallbackCAN+0x38c>)
 80323de:	212f      	movs	r1, #47	; 0x2f
 80323e0:	f00c ffbd 	bl	803f35e <strrchr>
 80323e4:	2800      	cmp	r0, #0
 80323e6:	f000 81a2 	beq.w	803272e <UPG_COMM_recvCallbackCAN+0x41e>
 80323ea:	212f      	movs	r1, #47	; 0x2f
 80323ec:	48ab      	ldr	r0, [pc, #684]	; (803269c <UPG_COMM_recvCallbackCAN+0x38c>)
 80323ee:	f00c ffb6 	bl	803f35e <strrchr>
 80323f2:	1c41      	adds	r1, r0, #1
 80323f4:	78b3      	ldrb	r3, [r6, #2]
 80323f6:	9300      	str	r3, [sp, #0]
 80323f8:	2002      	movs	r0, #2
 80323fa:	4bac      	ldr	r3, [pc, #688]	; (80326ac <UPG_COMM_recvCallbackCAN+0x39c>)
 80323fc:	f240 1219 	movw	r2, #281	; 0x119
 8032400:	f7f0 f9ca 	bl	8022798 <DEBUG_logMsg>
 8032404:	48a5      	ldr	r0, [pc, #660]	; (803269c <UPG_COMM_recvCallbackCAN+0x38c>)
 8032406:	212f      	movs	r1, #47	; 0x2f
 8032408:	f00c ffa9 	bl	803f35e <strrchr>
 803240c:	2800      	cmp	r0, #0
 803240e:	f000 819a 	beq.w	8032746 <UPG_COMM_recvCallbackCAN+0x436>
 8032412:	212f      	movs	r1, #47	; 0x2f
 8032414:	48a1      	ldr	r0, [pc, #644]	; (803269c <UPG_COMM_recvCallbackCAN+0x38c>)
 8032416:	f00c ffa2 	bl	803f35e <strrchr>
 803241a:	1c41      	adds	r1, r0, #1
 803241c:	78f3      	ldrb	r3, [r6, #3]
 803241e:	9300      	str	r3, [sp, #0]
 8032420:	2002      	movs	r0, #2
 8032422:	4ba3      	ldr	r3, [pc, #652]	; (80326b0 <UPG_COMM_recvCallbackCAN+0x3a0>)
 8032424:	f240 1219 	movw	r2, #281	; 0x119
 8032428:	f7f0 f9b6 	bl	8022798 <DEBUG_logMsg>
 803242c:	489b      	ldr	r0, [pc, #620]	; (803269c <UPG_COMM_recvCallbackCAN+0x38c>)
 803242e:	212f      	movs	r1, #47	; 0x2f
 8032430:	f00c ff95 	bl	803f35e <strrchr>
 8032434:	2800      	cmp	r0, #0
 8032436:	f000 816e 	beq.w	8032716 <UPG_COMM_recvCallbackCAN+0x406>
 803243a:	212f      	movs	r1, #47	; 0x2f
 803243c:	4897      	ldr	r0, [pc, #604]	; (803269c <UPG_COMM_recvCallbackCAN+0x38c>)
 803243e:	f00c ff8e 	bl	803f35e <strrchr>
 8032442:	1c41      	adds	r1, r0, #1
 8032444:	7933      	ldrb	r3, [r6, #4]
 8032446:	9300      	str	r3, [sp, #0]
 8032448:	2002      	movs	r0, #2
 803244a:	4b9a      	ldr	r3, [pc, #616]	; (80326b4 <UPG_COMM_recvCallbackCAN+0x3a4>)
 803244c:	f240 1219 	movw	r2, #281	; 0x119
 8032450:	f7f0 f9a2 	bl	8022798 <DEBUG_logMsg>
 8032454:	4891      	ldr	r0, [pc, #580]	; (803269c <UPG_COMM_recvCallbackCAN+0x38c>)
 8032456:	212f      	movs	r1, #47	; 0x2f
 8032458:	f00c ff81 	bl	803f35e <strrchr>
 803245c:	2800      	cmp	r0, #0
 803245e:	f000 814e 	beq.w	80326fe <UPG_COMM_recvCallbackCAN+0x3ee>
 8032462:	212f      	movs	r1, #47	; 0x2f
 8032464:	488d      	ldr	r0, [pc, #564]	; (803269c <UPG_COMM_recvCallbackCAN+0x38c>)
 8032466:	f00c ff7a 	bl	803f35e <strrchr>
 803246a:	1c41      	adds	r1, r0, #1
 803246c:	7973      	ldrb	r3, [r6, #5]
 803246e:	9300      	str	r3, [sp, #0]
 8032470:	eba8 0707 	sub.w	r7, r8, r7
 8032474:	4b90      	ldr	r3, [pc, #576]	; (80326b8 <UPG_COMM_recvCallbackCAN+0x3a8>)
 8032476:	f240 1219 	movw	r2, #281	; 0x119
 803247a:	2002      	movs	r0, #2
 803247c:	00bf      	lsls	r7, r7, #2
 803247e:	f7f0 f98b 	bl	8022798 <DEBUG_logMsg>
 8032482:	2300      	movs	r3, #0
 8032484:	f809 3007 	strb.w	r3, [r9, r7]
 8032488:	b007      	add	sp, #28
 803248a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 803248e:	2700      	movs	r7, #0
 8032490:	ebc7 03c7 	rsb	r3, r7, r7, lsl #3
 8032494:	f8df 9234 	ldr.w	r9, [pc, #564]	; 80326cc <UPG_COMM_recvCallbackCAN+0x3bc>
 8032498:	009a      	lsls	r2, r3, #2
 803249a:	f819 3023 	ldrb.w	r3, [r9, r3, lsl #2]
 803249e:	ea4f 08c7 	mov.w	r8, r7, lsl #3
 80324a2:	2b00      	cmp	r3, #0
 80324a4:	f47f af55 	bne.w	8032352 <UPG_COMM_recvCallbackCAN+0x42>
 80324a8:	7821      	ldrb	r1, [r4, #0]
 80324aa:	2908      	cmp	r1, #8
 80324ac:	d843      	bhi.n	8032536 <UPG_COMM_recvCallbackCAN+0x226>
 80324ae:	1da6      	adds	r6, r4, #6
 80324b0:	46a3      	mov	fp, r4
 80324b2:	f10b 0001 	add.w	r0, fp, #1
 80324b6:	f10b 0505 	add.w	r5, fp, #5
 80324ba:	460b      	mov	r3, r1
 80324bc:	2200      	movs	r2, #0
 80324be:	e001      	b.n	80324c4 <UPG_COMM_recvCallbackCAN+0x1b4>
 80324c0:	f810 3b01 	ldrb.w	r3, [r0], #1
 80324c4:	4413      	add	r3, r2
 80324c6:	4285      	cmp	r5, r0
 80324c8:	b2da      	uxtb	r2, r3
 80324ca:	d1f9      	bne.n	80324c0 <UPG_COMM_recvCallbackCAN+0x1b0>
 80324cc:	2906      	cmp	r1, #6
 80324ce:	d007      	beq.n	80324e0 <UPG_COMM_recvCallbackCAN+0x1d0>
 80324d0:	3906      	subs	r1, #6
 80324d2:	4431      	add	r1, r6
 80324d4:	f816 3b01 	ldrb.w	r3, [r6], #1
 80324d8:	4413      	add	r3, r2
 80324da:	428e      	cmp	r6, r1
 80324dc:	b2da      	uxtb	r2, r3
 80324de:	d1f9      	bne.n	80324d4 <UPG_COMM_recvCallbackCAN+0x1c4>
 80324e0:	f89b 3005 	ldrb.w	r3, [fp, #5]
 80324e4:	4293      	cmp	r3, r2
 80324e6:	f000 80ac 	beq.w	8032642 <UPG_COMM_recvCallbackCAN+0x332>
 80324ea:	eba8 0707 	sub.w	r7, r8, r7
 80324ee:	00bf      	lsls	r7, r7, #2
 80324f0:	2300      	movs	r3, #0
 80324f2:	f809 3007 	strb.w	r3, [r9, r7]
 80324f6:	b007      	add	sp, #28
 80324f8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80324fc:	4867      	ldr	r0, [pc, #412]	; (803269c <UPG_COMM_recvCallbackCAN+0x38c>)
 80324fe:	212f      	movs	r1, #47	; 0x2f
 8032500:	f00c ff2d 	bl	803f35e <strrchr>
 8032504:	2800      	cmp	r0, #0
 8032506:	f000 8091 	beq.w	803262c <UPG_COMM_recvCallbackCAN+0x31c>
 803250a:	212f      	movs	r1, #47	; 0x2f
 803250c:	4863      	ldr	r0, [pc, #396]	; (803269c <UPG_COMM_recvCallbackCAN+0x38c>)
 803250e:	f00c ff26 	bl	803f35e <strrchr>
 8032512:	1c41      	adds	r1, r0, #1
 8032514:	2311      	movs	r3, #17
 8032516:	9300      	str	r3, [sp, #0]
 8032518:	9601      	str	r6, [sp, #4]
 803251a:	4b68      	ldr	r3, [pc, #416]	; (80326bc <UPG_COMM_recvCallbackCAN+0x3ac>)
 803251c:	22f5      	movs	r2, #245	; 0xf5
 803251e:	2001      	movs	r0, #1
 8032520:	f7f0 f93a 	bl	8022798 <DEBUG_logMsg>
 8032524:	b007      	add	sp, #28
 8032526:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 803252a:	2702      	movs	r7, #2
 803252c:	e7b0      	b.n	8032490 <UPG_COMM_recvCallbackCAN+0x180>
 803252e:	2703      	movs	r7, #3
 8032530:	e7ae      	b.n	8032490 <UPG_COMM_recvCallbackCAN+0x180>
 8032532:	2701      	movs	r7, #1
 8032534:	e7ac      	b.n	8032490 <UPG_COMM_recvCallbackCAN+0x180>
 8032536:	2301      	movs	r3, #1
 8032538:	f809 3002 	strb.w	r3, [r9, r2]
 803253c:	4626      	mov	r6, r4
 803253e:	e709      	b.n	8032354 <UPG_COMM_recvCallbackCAN+0x44>
 8032540:	eba8 0607 	sub.w	r6, r8, r7
 8032544:	eb09 0a86 	add.w	sl, r9, r6, lsl #2
 8032548:	f003 0b3f 	and.w	fp, r3, #63	; 0x3f
 803254c:	f89a 3018 	ldrb.w	r3, [sl, #24]
 8032550:	459b      	cmp	fp, r3
 8032552:	ea4f 0686 	mov.w	r6, r6, lsl #2
 8032556:	f040 8082 	bne.w	803265e <UPG_COMM_recvCallbackCAN+0x34e>
 803255a:	f89a 0012 	ldrb.w	r0, [sl, #18]
 803255e:	f89a 2011 	ldrb.w	r2, [sl, #17]
 8032562:	b2eb      	uxtb	r3, r5
 8032564:	eb00 0b03 	add.w	fp, r0, r3
 8032568:	fa5f fb8b 	uxtb.w	fp, fp
 803256c:	455a      	cmp	r2, fp
 803256e:	d341      	bcc.n	80325f4 <UPG_COMM_recvCallbackCAN+0x2e4>
 8032570:	f1bb 0f10 	cmp.w	fp, #16
 8032574:	f200 80b1 	bhi.w	80326da <UPG_COMM_recvCallbackCAN+0x3ca>
 8032578:	9303      	str	r3, [sp, #12]
 803257a:	1c73      	adds	r3, r6, #1
 803257c:	eb09 0b03 	add.w	fp, r9, r3
 8032580:	462a      	mov	r2, r5
 8032582:	4621      	mov	r1, r4
 8032584:	4458      	add	r0, fp
 8032586:	9304      	str	r3, [sp, #16]
 8032588:	f00d f83b 	bl	803f602 <__aeabi_memcpy>
 803258c:	f89a 0012 	ldrb.w	r0, [sl, #18]
 8032590:	9b03      	ldr	r3, [sp, #12]
 8032592:	f89a 2018 	ldrb.w	r2, [sl, #24]
 8032596:	f89a 1011 	ldrb.w	r1, [sl, #17]
 803259a:	4403      	add	r3, r0
 803259c:	b2db      	uxtb	r3, r3
 803259e:	3201      	adds	r2, #1
 80325a0:	4299      	cmp	r1, r3
 80325a2:	f88a 3012 	strb.w	r3, [sl, #18]
 80325a6:	f88a 2018 	strb.w	r2, [sl, #24]
 80325aa:	f63f af6d 	bhi.w	8032488 <UPG_COMM_recvCallbackCAN+0x178>
 80325ae:	9a04      	ldr	r2, [sp, #16]
 80325b0:	3607      	adds	r6, #7
 80325b2:	f819 1002 	ldrb.w	r1, [r9, r2]
 80325b6:	444e      	add	r6, r9
 80325b8:	e77b      	b.n	80324b2 <UPG_COMM_recvCallbackCAN+0x1a2>
 80325ba:	eba8 0707 	sub.w	r7, r8, r7
 80325be:	00bf      	lsls	r7, r7, #2
 80325c0:	f107 0801 	add.w	r8, r7, #1
 80325c4:	44c8      	add	r8, r9
 80325c6:	2210      	movs	r2, #16
 80325c8:	4640      	mov	r0, r8
 80325ca:	f00d f843 	bl	803f654 <memset>
 80325ce:	462a      	mov	r2, r5
 80325d0:	4621      	mov	r1, r4
 80325d2:	4640      	mov	r0, r8
 80325d4:	f00d f815 	bl	803f602 <__aeabi_memcpy>
 80325d8:	f89d 3015 	ldrb.w	r3, [sp, #21]
 80325dc:	7832      	ldrb	r2, [r6, #0]
 80325de:	44b9      	add	r9, r7
 80325e0:	f3c3 0305 	ubfx	r3, r3, #0, #6
 80325e4:	3301      	adds	r3, #1
 80325e6:	f889 2011 	strb.w	r2, [r9, #17]
 80325ea:	f889 5012 	strb.w	r5, [r9, #18]
 80325ee:	f889 3018 	strb.w	r3, [r9, #24]
 80325f2:	e749      	b.n	8032488 <UPG_COMM_recvCallbackCAN+0x178>
 80325f4:	4829      	ldr	r0, [pc, #164]	; (803269c <UPG_COMM_recvCallbackCAN+0x38c>)
 80325f6:	212f      	movs	r1, #47	; 0x2f
 80325f8:	f00c feb1 	bl	803f35e <strrchr>
 80325fc:	2800      	cmp	r0, #0
 80325fe:	f000 80f5 	beq.w	80327ec <UPG_COMM_recvCallbackCAN+0x4dc>
 8032602:	212f      	movs	r1, #47	; 0x2f
 8032604:	4825      	ldr	r0, [pc, #148]	; (803269c <UPG_COMM_recvCallbackCAN+0x38c>)
 8032606:	f00c feaa 	bl	803f35e <strrchr>
 803260a:	1c41      	adds	r1, r0, #1
 803260c:	eba8 0707 	sub.w	r7, r8, r7
 8032610:	eb09 0987 	add.w	r9, r9, r7, lsl #2
 8032614:	f8cd b004 	str.w	fp, [sp, #4]
 8032618:	f899 3011 	ldrb.w	r3, [r9, #17]
 803261c:	9300      	str	r3, [sp, #0]
 803261e:	f44f 729c 	mov.w	r2, #312	; 0x138
 8032622:	4b27      	ldr	r3, [pc, #156]	; (80326c0 <UPG_COMM_recvCallbackCAN+0x3b0>)
 8032624:	2001      	movs	r0, #1
 8032626:	f7f0 f8b7 	bl	8022798 <DEBUG_logMsg>
 803262a:	e72d      	b.n	8032488 <UPG_COMM_recvCallbackCAN+0x178>
 803262c:	481b      	ldr	r0, [pc, #108]	; (803269c <UPG_COMM_recvCallbackCAN+0x38c>)
 803262e:	215c      	movs	r1, #92	; 0x5c
 8032630:	f00c fe95 	bl	803f35e <strrchr>
 8032634:	b378      	cbz	r0, 8032696 <UPG_COMM_recvCallbackCAN+0x386>
 8032636:	215c      	movs	r1, #92	; 0x5c
 8032638:	4818      	ldr	r0, [pc, #96]	; (803269c <UPG_COMM_recvCallbackCAN+0x38c>)
 803263a:	f00c fe90 	bl	803f35e <strrchr>
 803263e:	1c41      	adds	r1, r0, #1
 8032640:	e768      	b.n	8032514 <UPG_COMM_recvCallbackCAN+0x204>
 8032642:	eba8 0307 	sub.w	r3, r8, r7
 8032646:	0099      	lsls	r1, r3, #2
 8032648:	f819 2023 	ldrb.w	r2, [r9, r3, lsl #2]
 803264c:	2a00      	cmp	r2, #0
 803264e:	d03f      	beq.n	80326d0 <UPG_COMM_recvCallbackCAN+0x3c0>
 8032650:	3101      	adds	r1, #1
 8032652:	4449      	add	r1, r9
 8032654:	2200      	movs	r2, #0
 8032656:	481b      	ldr	r0, [pc, #108]	; (80326c4 <UPG_COMM_recvCallbackCAN+0x3b4>)
 8032658:	f7fb fea6 	bl	802e3a8 <UTILITIES_pushRingBuff>
 803265c:	e745      	b.n	80324ea <UPG_COMM_recvCallbackCAN+0x1da>
 803265e:	480f      	ldr	r0, [pc, #60]	; (803269c <UPG_COMM_recvCallbackCAN+0x38c>)
 8032660:	212f      	movs	r1, #47	; 0x2f
 8032662:	f00c fe7c 	bl	803f35e <strrchr>
 8032666:	2800      	cmp	r0, #0
 8032668:	f000 809a 	beq.w	80327a0 <UPG_COMM_recvCallbackCAN+0x490>
 803266c:	212f      	movs	r1, #47	; 0x2f
 803266e:	480b      	ldr	r0, [pc, #44]	; (803269c <UPG_COMM_recvCallbackCAN+0x38c>)
 8032670:	f00c fe75 	bl	803f35e <strrchr>
 8032674:	1c41      	adds	r1, r0, #1
 8032676:	eba8 0707 	sub.w	r7, r8, r7
 803267a:	eb09 0987 	add.w	r9, r9, r7, lsl #2
 803267e:	f8cd b004 	str.w	fp, [sp, #4]
 8032682:	f899 3018 	ldrb.w	r3, [r9, #24]
 8032686:	9300      	str	r3, [sp, #0]
 8032688:	f240 1231 	movw	r2, #305	; 0x131
 803268c:	4b0e      	ldr	r3, [pc, #56]	; (80326c8 <UPG_COMM_recvCallbackCAN+0x3b8>)
 803268e:	2001      	movs	r0, #1
 8032690:	f7f0 f882 	bl	8022798 <DEBUG_logMsg>
 8032694:	e6f8      	b.n	8032488 <UPG_COMM_recvCallbackCAN+0x178>
 8032696:	4901      	ldr	r1, [pc, #4]	; (803269c <UPG_COMM_recvCallbackCAN+0x38c>)
 8032698:	e73c      	b.n	8032514 <UPG_COMM_recvCallbackCAN+0x204>
 803269a:	bf00      	nop
 803269c:	08047eec 	.word	0x08047eec
 80326a0:	08047f94 	.word	0x08047f94
 80326a4:	08047fbc 	.word	0x08047fbc
 80326a8:	08047fcc 	.word	0x08047fcc
 80326ac:	08047fe4 	.word	0x08047fe4
 80326b0:	08047ff8 	.word	0x08047ff8
 80326b4:	08048014 	.word	0x08048014
 80326b8:	08048024 	.word	0x08048024
 80326bc:	08047f60 	.word	0x08047f60
 80326c0:	08048068 	.word	0x08048068
 80326c4:	2000e330 	.word	0x2000e330
 80326c8:	0804803c 	.word	0x0804803c
 80326cc:	2000e2c0 	.word	0x2000e2c0
 80326d0:	4621      	mov	r1, r4
 80326d2:	484e      	ldr	r0, [pc, #312]	; (803280c <UPG_COMM_recvCallbackCAN+0x4fc>)
 80326d4:	f7fb fe68 	bl	802e3a8 <UTILITIES_pushRingBuff>
 80326d8:	e707      	b.n	80324ea <UPG_COMM_recvCallbackCAN+0x1da>
 80326da:	484d      	ldr	r0, [pc, #308]	; (8032810 <UPG_COMM_recvCallbackCAN+0x500>)
 80326dc:	212f      	movs	r1, #47	; 0x2f
 80326de:	f00c fe3e 	bl	803f35e <strrchr>
 80326e2:	2800      	cmp	r0, #0
 80326e4:	d075      	beq.n	80327d2 <UPG_COMM_recvCallbackCAN+0x4c2>
 80326e6:	212f      	movs	r1, #47	; 0x2f
 80326e8:	4849      	ldr	r0, [pc, #292]	; (8032810 <UPG_COMM_recvCallbackCAN+0x500>)
 80326ea:	f00c fe38 	bl	803f35e <strrchr>
 80326ee:	1c41      	adds	r1, r0, #1
 80326f0:	4b48      	ldr	r3, [pc, #288]	; (8032814 <UPG_COMM_recvCallbackCAN+0x504>)
 80326f2:	f44f 729f 	mov.w	r2, #318	; 0x13e
 80326f6:	2001      	movs	r0, #1
 80326f8:	f7f0 f84e 	bl	8022798 <DEBUG_logMsg>
 80326fc:	e6c4      	b.n	8032488 <UPG_COMM_recvCallbackCAN+0x178>
 80326fe:	4844      	ldr	r0, [pc, #272]	; (8032810 <UPG_COMM_recvCallbackCAN+0x500>)
 8032700:	215c      	movs	r1, #92	; 0x5c
 8032702:	f00c fe2c 	bl	803f35e <strrchr>
 8032706:	2800      	cmp	r0, #0
 8032708:	d057      	beq.n	80327ba <UPG_COMM_recvCallbackCAN+0x4aa>
 803270a:	215c      	movs	r1, #92	; 0x5c
 803270c:	4840      	ldr	r0, [pc, #256]	; (8032810 <UPG_COMM_recvCallbackCAN+0x500>)
 803270e:	f00c fe26 	bl	803f35e <strrchr>
 8032712:	1c41      	adds	r1, r0, #1
 8032714:	e6aa      	b.n	803246c <UPG_COMM_recvCallbackCAN+0x15c>
 8032716:	483e      	ldr	r0, [pc, #248]	; (8032810 <UPG_COMM_recvCallbackCAN+0x500>)
 8032718:	215c      	movs	r1, #92	; 0x5c
 803271a:	f00c fe20 	bl	803f35e <strrchr>
 803271e:	2800      	cmp	r0, #0
 8032720:	d049      	beq.n	80327b6 <UPG_COMM_recvCallbackCAN+0x4a6>
 8032722:	215c      	movs	r1, #92	; 0x5c
 8032724:	483a      	ldr	r0, [pc, #232]	; (8032810 <UPG_COMM_recvCallbackCAN+0x500>)
 8032726:	f00c fe1a 	bl	803f35e <strrchr>
 803272a:	1c41      	adds	r1, r0, #1
 803272c:	e68a      	b.n	8032444 <UPG_COMM_recvCallbackCAN+0x134>
 803272e:	4838      	ldr	r0, [pc, #224]	; (8032810 <UPG_COMM_recvCallbackCAN+0x500>)
 8032730:	215c      	movs	r1, #92	; 0x5c
 8032732:	f00c fe14 	bl	803f35e <strrchr>
 8032736:	2800      	cmp	r0, #0
 8032738:	d041      	beq.n	80327be <UPG_COMM_recvCallbackCAN+0x4ae>
 803273a:	215c      	movs	r1, #92	; 0x5c
 803273c:	4834      	ldr	r0, [pc, #208]	; (8032810 <UPG_COMM_recvCallbackCAN+0x500>)
 803273e:	f00c fe0e 	bl	803f35e <strrchr>
 8032742:	1c41      	adds	r1, r0, #1
 8032744:	e656      	b.n	80323f4 <UPG_COMM_recvCallbackCAN+0xe4>
 8032746:	4832      	ldr	r0, [pc, #200]	; (8032810 <UPG_COMM_recvCallbackCAN+0x500>)
 8032748:	215c      	movs	r1, #92	; 0x5c
 803274a:	f00c fe08 	bl	803f35e <strrchr>
 803274e:	2800      	cmp	r0, #0
 8032750:	d039      	beq.n	80327c6 <UPG_COMM_recvCallbackCAN+0x4b6>
 8032752:	215c      	movs	r1, #92	; 0x5c
 8032754:	482e      	ldr	r0, [pc, #184]	; (8032810 <UPG_COMM_recvCallbackCAN+0x500>)
 8032756:	f00c fe02 	bl	803f35e <strrchr>
 803275a:	1c41      	adds	r1, r0, #1
 803275c:	e65e      	b.n	803241c <UPG_COMM_recvCallbackCAN+0x10c>
 803275e:	482c      	ldr	r0, [pc, #176]	; (8032810 <UPG_COMM_recvCallbackCAN+0x500>)
 8032760:	215c      	movs	r1, #92	; 0x5c
 8032762:	f00c fdfc 	bl	803f35e <strrchr>
 8032766:	b390      	cbz	r0, 80327ce <UPG_COMM_recvCallbackCAN+0x4be>
 8032768:	215c      	movs	r1, #92	; 0x5c
 803276a:	4829      	ldr	r0, [pc, #164]	; (8032810 <UPG_COMM_recvCallbackCAN+0x500>)
 803276c:	f00c fdf7 	bl	803f35e <strrchr>
 8032770:	1c41      	adds	r1, r0, #1
 8032772:	e617      	b.n	80323a4 <UPG_COMM_recvCallbackCAN+0x94>
 8032774:	4826      	ldr	r0, [pc, #152]	; (8032810 <UPG_COMM_recvCallbackCAN+0x500>)
 8032776:	215c      	movs	r1, #92	; 0x5c
 8032778:	f00c fdf1 	bl	803f35e <strrchr>
 803277c:	b328      	cbz	r0, 80327ca <UPG_COMM_recvCallbackCAN+0x4ba>
 803277e:	215c      	movs	r1, #92	; 0x5c
 8032780:	4823      	ldr	r0, [pc, #140]	; (8032810 <UPG_COMM_recvCallbackCAN+0x500>)
 8032782:	f00c fdec 	bl	803f35e <strrchr>
 8032786:	1c41      	adds	r1, r0, #1
 8032788:	e620      	b.n	80323cc <UPG_COMM_recvCallbackCAN+0xbc>
 803278a:	4821      	ldr	r0, [pc, #132]	; (8032810 <UPG_COMM_recvCallbackCAN+0x500>)
 803278c:	215c      	movs	r1, #92	; 0x5c
 803278e:	f00c fde6 	bl	803f35e <strrchr>
 8032792:	b1b0      	cbz	r0, 80327c2 <UPG_COMM_recvCallbackCAN+0x4b2>
 8032794:	215c      	movs	r1, #92	; 0x5c
 8032796:	481e      	ldr	r0, [pc, #120]	; (8032810 <UPG_COMM_recvCallbackCAN+0x500>)
 8032798:	f00c fde1 	bl	803f35e <strrchr>
 803279c:	1c41      	adds	r1, r0, #1
 803279e:	e5ef      	b.n	8032380 <UPG_COMM_recvCallbackCAN+0x70>
 80327a0:	481b      	ldr	r0, [pc, #108]	; (8032810 <UPG_COMM_recvCallbackCAN+0x500>)
 80327a2:	215c      	movs	r1, #92	; 0x5c
 80327a4:	f00c fddb 	bl	803f35e <strrchr>
 80327a8:	b1f0      	cbz	r0, 80327e8 <UPG_COMM_recvCallbackCAN+0x4d8>
 80327aa:	215c      	movs	r1, #92	; 0x5c
 80327ac:	4818      	ldr	r0, [pc, #96]	; (8032810 <UPG_COMM_recvCallbackCAN+0x500>)
 80327ae:	f00c fdd6 	bl	803f35e <strrchr>
 80327b2:	1c41      	adds	r1, r0, #1
 80327b4:	e75f      	b.n	8032676 <UPG_COMM_recvCallbackCAN+0x366>
 80327b6:	4916      	ldr	r1, [pc, #88]	; (8032810 <UPG_COMM_recvCallbackCAN+0x500>)
 80327b8:	e644      	b.n	8032444 <UPG_COMM_recvCallbackCAN+0x134>
 80327ba:	4915      	ldr	r1, [pc, #84]	; (8032810 <UPG_COMM_recvCallbackCAN+0x500>)
 80327bc:	e656      	b.n	803246c <UPG_COMM_recvCallbackCAN+0x15c>
 80327be:	4914      	ldr	r1, [pc, #80]	; (8032810 <UPG_COMM_recvCallbackCAN+0x500>)
 80327c0:	e618      	b.n	80323f4 <UPG_COMM_recvCallbackCAN+0xe4>
 80327c2:	4913      	ldr	r1, [pc, #76]	; (8032810 <UPG_COMM_recvCallbackCAN+0x500>)
 80327c4:	e5dc      	b.n	8032380 <UPG_COMM_recvCallbackCAN+0x70>
 80327c6:	4912      	ldr	r1, [pc, #72]	; (8032810 <UPG_COMM_recvCallbackCAN+0x500>)
 80327c8:	e628      	b.n	803241c <UPG_COMM_recvCallbackCAN+0x10c>
 80327ca:	4911      	ldr	r1, [pc, #68]	; (8032810 <UPG_COMM_recvCallbackCAN+0x500>)
 80327cc:	e5fe      	b.n	80323cc <UPG_COMM_recvCallbackCAN+0xbc>
 80327ce:	4910      	ldr	r1, [pc, #64]	; (8032810 <UPG_COMM_recvCallbackCAN+0x500>)
 80327d0:	e5e8      	b.n	80323a4 <UPG_COMM_recvCallbackCAN+0x94>
 80327d2:	480f      	ldr	r0, [pc, #60]	; (8032810 <UPG_COMM_recvCallbackCAN+0x500>)
 80327d4:	215c      	movs	r1, #92	; 0x5c
 80327d6:	f00c fdc2 	bl	803f35e <strrchr>
 80327da:	b190      	cbz	r0, 8032802 <UPG_COMM_recvCallbackCAN+0x4f2>
 80327dc:	215c      	movs	r1, #92	; 0x5c
 80327de:	480c      	ldr	r0, [pc, #48]	; (8032810 <UPG_COMM_recvCallbackCAN+0x500>)
 80327e0:	f00c fdbd 	bl	803f35e <strrchr>
 80327e4:	1c41      	adds	r1, r0, #1
 80327e6:	e783      	b.n	80326f0 <UPG_COMM_recvCallbackCAN+0x3e0>
 80327e8:	4909      	ldr	r1, [pc, #36]	; (8032810 <UPG_COMM_recvCallbackCAN+0x500>)
 80327ea:	e744      	b.n	8032676 <UPG_COMM_recvCallbackCAN+0x366>
 80327ec:	4808      	ldr	r0, [pc, #32]	; (8032810 <UPG_COMM_recvCallbackCAN+0x500>)
 80327ee:	215c      	movs	r1, #92	; 0x5c
 80327f0:	f00c fdb5 	bl	803f35e <strrchr>
 80327f4:	b138      	cbz	r0, 8032806 <UPG_COMM_recvCallbackCAN+0x4f6>
 80327f6:	215c      	movs	r1, #92	; 0x5c
 80327f8:	4805      	ldr	r0, [pc, #20]	; (8032810 <UPG_COMM_recvCallbackCAN+0x500>)
 80327fa:	f00c fdb0 	bl	803f35e <strrchr>
 80327fe:	1c41      	adds	r1, r0, #1
 8032800:	e704      	b.n	803260c <UPG_COMM_recvCallbackCAN+0x2fc>
 8032802:	4903      	ldr	r1, [pc, #12]	; (8032810 <UPG_COMM_recvCallbackCAN+0x500>)
 8032804:	e774      	b.n	80326f0 <UPG_COMM_recvCallbackCAN+0x3e0>
 8032806:	4902      	ldr	r1, [pc, #8]	; (8032810 <UPG_COMM_recvCallbackCAN+0x500>)
 8032808:	e700      	b.n	803260c <UPG_COMM_recvCallbackCAN+0x2fc>
 803280a:	bf00      	nop
 803280c:	2000e330 	.word	0x2000e330
 8032810:	08047eec 	.word	0x08047eec
 8032814:	08048098 	.word	0x08048098

08032818 <UPG_COMM_readPacket>:
 8032818:	b530      	push	{r4, r5, lr}
 803281a:	4605      	mov	r5, r0
 803281c:	b085      	sub	sp, #20
 803281e:	480e      	ldr	r0, [pc, #56]	; (8032858 <UPG_COMM_readPacket+0x40>)
 8032820:	f7fb fde6 	bl	802e3f0 <UTILITIES_isEmptyRx>
 8032824:	b930      	cbnz	r0, 8032834 <UPG_COMM_readPacket+0x1c>
 8032826:	4604      	mov	r4, r0
 8032828:	4669      	mov	r1, sp
 803282a:	480b      	ldr	r0, [pc, #44]	; (8032858 <UPG_COMM_readPacket+0x40>)
 803282c:	f7fb fd8e 	bl	802e34c <UTILITIES_popRingBuff>
 8032830:	3001      	adds	r0, #1
 8032832:	d102      	bne.n	803283a <UPG_COMM_readPacket+0x22>
 8032834:	200e      	movs	r0, #14
 8032836:	b005      	add	sp, #20
 8032838:	bd30      	pop	{r4, r5, pc}
 803283a:	4669      	mov	r1, sp
 803283c:	2206      	movs	r2, #6
 803283e:	4628      	mov	r0, r5
 8032840:	f00c fedf 	bl	803f602 <__aeabi_memcpy>
 8032844:	f8d5 0006 	ldr.w	r0, [r5, #6]
 8032848:	220a      	movs	r2, #10
 803284a:	f10d 0106 	add.w	r1, sp, #6
 803284e:	f00c fed8 	bl	803f602 <__aeabi_memcpy>
 8032852:	4620      	mov	r0, r4
 8032854:	b005      	add	sp, #20
 8032856:	bd30      	pop	{r4, r5, pc}
 8032858:	2000e330 	.word	0x2000e330

0803285c <UPG_MNGR_initManager>:
 803285c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 803285e:	4d39      	ldr	r5, [pc, #228]	; (8032944 <UPG_MNGR_initManager+0xe8>)
 8032860:	782e      	ldrb	r6, [r5, #0]
 8032862:	f016 0601 	ands.w	r6, r6, #1
 8032866:	d108      	bne.n	803287a <UPG_MNGR_initManager+0x1e>
 8032868:	7328      	strb	r0, [r5, #12]
 803286a:	2807      	cmp	r0, #7
 803286c:	d867      	bhi.n	803293e <UPG_MNGR_initManager+0xe2>
 803286e:	e8df f000 	tbb	[pc, r0]
 8032872:	4b20      	.short	0x4b20
 8032874:	1616204e 	.word	0x1616204e
 8032878:	4816      	.short	0x4816
 803287a:	4833      	ldr	r0, [pc, #204]	; (8032948 <UPG_MNGR_initManager+0xec>)
 803287c:	212f      	movs	r1, #47	; 0x2f
 803287e:	f00c fd6e 	bl	803f35e <strrchr>
 8032882:	2800      	cmp	r0, #0
 8032884:	d046      	beq.n	8032914 <UPG_MNGR_initManager+0xb8>
 8032886:	212f      	movs	r1, #47	; 0x2f
 8032888:	482f      	ldr	r0, [pc, #188]	; (8032948 <UPG_MNGR_initManager+0xec>)
 803288a:	f00c fd68 	bl	803f35e <strrchr>
 803288e:	1c41      	adds	r1, r0, #1
 8032890:	4b2e      	ldr	r3, [pc, #184]	; (803294c <UPG_MNGR_initManager+0xf0>)
 8032892:	22b7      	movs	r2, #183	; 0xb7
 8032894:	2002      	movs	r0, #2
 8032896:	f7ef ff7f 	bl	8022798 <DEBUG_logMsg>
 803289a:	4630      	mov	r0, r6
 803289c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 803289e:	2301      	movs	r3, #1
 80328a0:	2805      	cmp	r0, #5
 80328a2:	712b      	strb	r3, [r5, #4]
 80328a4:	d047      	beq.n	8032936 <UPG_MNGR_initManager+0xda>
 80328a6:	2806      	cmp	r0, #6
 80328a8:	d141      	bne.n	803292e <UPG_MNGR_initManager+0xd2>
 80328aa:	2303      	movs	r3, #3
 80328ac:	f885 3021 	strb.w	r3, [r5, #33]	; 0x21
 80328b0:	e000      	b.n	80328b4 <UPG_MNGR_initManager+0x58>
 80328b2:	2604      	movs	r6, #4
 80328b4:	f7ff fc04 	bl	80320c0 <UPG_COMM_init>
 80328b8:	4b25      	ldr	r3, [pc, #148]	; (8032950 <UPG_MNGR_initManager+0xf4>)
 80328ba:	2400      	movs	r4, #0
 80328bc:	f103 0160 	add.w	r1, r3, #96	; 0x60
 80328c0:	f04f 32ff 	mov.w	r2, #4294967295
 80328c4:	f843 4c08 	str.w	r4, [r3, #-8]
 80328c8:	e943 4206 	strd	r4, r2, [r3, #-24]
 80328cc:	e943 4204 	strd	r4, r2, [r3, #-16]
 80328d0:	3318      	adds	r3, #24
 80328d2:	428b      	cmp	r3, r1
 80328d4:	d1f6      	bne.n	80328c4 <UPG_MNGR_initManager+0x68>
 80328d6:	4f1f      	ldr	r7, [pc, #124]	; (8032954 <UPG_MNGR_initManager+0xf8>)
 80328d8:	602c      	str	r4, [r5, #0]
 80328da:	4638      	mov	r0, r7
 80328dc:	220a      	movs	r2, #10
 80328de:	2100      	movs	r1, #0
 80328e0:	f00c feb8 	bl	803f654 <memset>
 80328e4:	2301      	movs	r3, #1
 80328e6:	f8c5 7029 	str.w	r7, [r5, #41]	; 0x29
 80328ea:	f885 402e 	strb.w	r4, [r5, #46]	; 0x2e
 80328ee:	60ac      	str	r4, [r5, #8]
 80328f0:	f885 302d 	strb.w	r3, [r5, #45]	; 0x2d
 80328f4:	b91e      	cbnz	r6, 80328fe <UPG_MNGR_initManager+0xa2>
 80328f6:	782b      	ldrb	r3, [r5, #0]
 80328f8:	f043 0301 	orr.w	r3, r3, #1
 80328fc:	702b      	strb	r3, [r5, #0]
 80328fe:	4630      	mov	r0, r6
 8032900:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8032902:	2302      	movs	r3, #2
 8032904:	712b      	strb	r3, [r5, #4]
 8032906:	e7d5      	b.n	80328b4 <UPG_MNGR_initManager+0x58>
 8032908:	2300      	movs	r3, #0
 803290a:	712b      	strb	r3, [r5, #4]
 803290c:	e7d2      	b.n	80328b4 <UPG_MNGR_initManager+0x58>
 803290e:	2303      	movs	r3, #3
 8032910:	712b      	strb	r3, [r5, #4]
 8032912:	e7cf      	b.n	80328b4 <UPG_MNGR_initManager+0x58>
 8032914:	480c      	ldr	r0, [pc, #48]	; (8032948 <UPG_MNGR_initManager+0xec>)
 8032916:	215c      	movs	r1, #92	; 0x5c
 8032918:	f00c fd21 	bl	803f35e <strrchr>
 803291c:	b128      	cbz	r0, 803292a <UPG_MNGR_initManager+0xce>
 803291e:	215c      	movs	r1, #92	; 0x5c
 8032920:	4809      	ldr	r0, [pc, #36]	; (8032948 <UPG_MNGR_initManager+0xec>)
 8032922:	f00c fd1c 	bl	803f35e <strrchr>
 8032926:	1c41      	adds	r1, r0, #1
 8032928:	e7b2      	b.n	8032890 <UPG_MNGR_initManager+0x34>
 803292a:	4907      	ldr	r1, [pc, #28]	; (8032948 <UPG_MNGR_initManager+0xec>)
 803292c:	e7b0      	b.n	8032890 <UPG_MNGR_initManager+0x34>
 803292e:	2302      	movs	r3, #2
 8032930:	f885 3021 	strb.w	r3, [r5, #33]	; 0x21
 8032934:	e7be      	b.n	80328b4 <UPG_MNGR_initManager+0x58>
 8032936:	2304      	movs	r3, #4
 8032938:	f885 3021 	strb.w	r3, [r5, #33]	; 0x21
 803293c:	e7ba      	b.n	80328b4 <UPG_MNGR_initManager+0x58>
 803293e:	2607      	movs	r6, #7
 8032940:	e7b8      	b.n	80328b4 <UPG_MNGR_initManager+0x58>
 8032942:	bf00      	nop
 8032944:	2000e358 	.word	0x2000e358
 8032948:	080480c8 	.word	0x080480c8
 803294c:	0804810c 	.word	0x0804810c
 8032950:	2000e438 	.word	0x2000e438
 8032954:	2000e344 	.word	0x2000e344

08032958 <UPG_MNGR_prepareForUpgrade>:
 8032958:	b538      	push	{r3, r4, r5, lr}
 803295a:	4d07      	ldr	r5, [pc, #28]	; (8032978 <UPG_MNGR_prepareForUpgrade+0x20>)
 803295c:	2400      	movs	r4, #0
 803295e:	60ac      	str	r4, [r5, #8]
 8032960:	f001 fa92 	bl	8033e88 <STATUSLED_IsAutoUpdateEnabled>
 8032964:	7a2b      	ldrb	r3, [r5, #8]
 8032966:	4602      	mov	r2, r0
 8032968:	f362 0300 	bfi	r3, r2, #0, #1
 803296c:	4620      	mov	r0, r4
 803296e:	722b      	strb	r3, [r5, #8]
 8032970:	f001 fa84 	bl	8033e7c <STATUSLED_autoUpdateEnable>
 8032974:	4620      	mov	r0, r4
 8032976:	bd38      	pop	{r3, r4, r5, pc}
 8032978:	2000e358 	.word	0x2000e358

0803297c <UPG_MNGR_postProcessUpgrade>:
 803297c:	b510      	push	{r4, lr}
 803297e:	4c04      	ldr	r4, [pc, #16]	; (8032990 <UPG_MNGR_postProcessUpgrade+0x14>)
 8032980:	7a20      	ldrb	r0, [r4, #8]
 8032982:	f000 0001 	and.w	r0, r0, #1
 8032986:	f001 fa79 	bl	8033e7c <STATUSLED_autoUpdateEnable>
 803298a:	2000      	movs	r0, #0
 803298c:	60a0      	str	r0, [r4, #8]
 803298e:	bd10      	pop	{r4, pc}
 8032990:	2000e358 	.word	0x2000e358

08032994 <UPG_MNGR_updateTargetDevicePorts>:
 8032994:	4b01      	ldr	r3, [pc, #4]	; (803299c <UPG_MNGR_updateTargetDevicePorts+0x8>)
 8032996:	f883 0022 	strb.w	r0, [r3, #34]	; 0x22
 803299a:	4770      	bx	lr
 803299c:	2000e358 	.word	0x2000e358

080329a0 <UPG_MNGR_confirmMetaData>:
 80329a0:	b570      	push	{r4, r5, r6, lr}
 80329a2:	4e19      	ldr	r6, [pc, #100]	; (8032a08 <UPG_MNGR_confirmMetaData+0x68>)
 80329a4:	7833      	ldrb	r3, [r6, #0]
 80329a6:	07db      	lsls	r3, r3, #31
 80329a8:	b084      	sub	sp, #16
 80329aa:	d521      	bpl.n	80329f0 <UPG_MNGR_confirmMetaData+0x50>
 80329ac:	7802      	ldrb	r2, [r0, #0]
 80329ae:	7b33      	ldrb	r3, [r6, #12]
 80329b0:	429a      	cmp	r2, r3
 80329b2:	4604      	mov	r4, r0
 80329b4:	d003      	beq.n	80329be <UPG_MNGR_confirmMetaData+0x1e>
 80329b6:	2509      	movs	r5, #9
 80329b8:	4628      	mov	r0, r5
 80329ba:	b004      	add	sp, #16
 80329bc:	bd70      	pop	{r4, r5, r6, pc}
 80329be:	1c41      	adds	r1, r0, #1
 80329c0:	2300      	movs	r3, #0
 80329c2:	2204      	movs	r2, #4
 80329c4:	a803      	add	r0, sp, #12
 80329c6:	9101      	str	r1, [sp, #4]
 80329c8:	9303      	str	r3, [sp, #12]
 80329ca:	f002 ffb3 	bl	8035934 <CRC_calculate>
 80329ce:	9901      	ldr	r1, [sp, #4]
 80329d0:	4605      	mov	r5, r0
 80329d2:	b188      	cbz	r0, 80329f8 <UPG_MNGR_confirmMetaData+0x58>
 80329d4:	250a      	movs	r5, #10
 80329d6:	2214      	movs	r2, #20
 80329d8:	480c      	ldr	r0, [pc, #48]	; (8032a0c <UPG_MNGR_confirmMetaData+0x6c>)
 80329da:	f00c fe12 	bl	803f602 <__aeabi_memcpy>
 80329de:	7833      	ldrb	r3, [r6, #0]
 80329e0:	f023 0306 	bic.w	r3, r3, #6
 80329e4:	f043 0302 	orr.w	r3, r3, #2
 80329e8:	4628      	mov	r0, r5
 80329ea:	7033      	strb	r3, [r6, #0]
 80329ec:	b004      	add	sp, #16
 80329ee:	bd70      	pop	{r4, r5, r6, pc}
 80329f0:	2508      	movs	r5, #8
 80329f2:	4628      	mov	r0, r5
 80329f4:	b004      	add	sp, #16
 80329f6:	bd70      	pop	{r4, r5, r6, pc}
 80329f8:	f8d4 2011 	ldr.w	r2, [r4, #17]
 80329fc:	9b03      	ldr	r3, [sp, #12]
 80329fe:	429a      	cmp	r2, r3
 8032a00:	bf18      	it	ne
 8032a02:	250b      	movne	r5, #11
 8032a04:	e7e7      	b.n	80329d6 <UPG_MNGR_confirmMetaData+0x36>
 8032a06:	bf00      	nop
 8032a08:	2000e358 	.word	0x2000e358
 8032a0c:	2000e365 	.word	0x2000e365

08032a10 <UPG_MNGR_storeDataBlock>:
 8032a10:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8032a14:	4f1f      	ldr	r7, [pc, #124]	; (8032a94 <UPG_MNGR_storeDataBlock+0x84>)
 8032a16:	783b      	ldrb	r3, [r7, #0]
 8032a18:	075c      	lsls	r4, r3, #29
 8032a1a:	b082      	sub	sp, #8
 8032a1c:	d51c      	bpl.n	8032a58 <UPG_MNGR_storeDataBlock+0x48>
 8032a1e:	f013 0308 	ands.w	r3, r3, #8
 8032a22:	d123      	bne.n	8032a6c <UPG_MNGR_storeDataBlock+0x5c>
 8032a24:	2980      	cmp	r1, #128	; 0x80
 8032a26:	460e      	mov	r6, r1
 8032a28:	d904      	bls.n	8032a34 <UPG_MNGR_storeDataBlock+0x24>
 8032a2a:	2511      	movs	r5, #17
 8032a2c:	4628      	mov	r0, r5
 8032a2e:	b002      	add	sp, #8
 8032a30:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8032a34:	4680      	mov	r8, r0
 8032a36:	4614      	mov	r4, r2
 8032a38:	088a      	lsrs	r2, r1, #2
 8032a3a:	4601      	mov	r1, r0
 8032a3c:	a801      	add	r0, sp, #4
 8032a3e:	9301      	str	r3, [sp, #4]
 8032a40:	f002 ff78 	bl	8035934 <CRC_calculate>
 8032a44:	4605      	mov	r5, r0
 8032a46:	b960      	cbnz	r0, 8032a62 <UPG_MNGR_storeDataBlock+0x52>
 8032a48:	9b01      	ldr	r3, [sp, #4]
 8032a4a:	42a3      	cmp	r3, r4
 8032a4c:	d013      	beq.n	8032a76 <UPG_MNGR_storeDataBlock+0x66>
 8032a4e:	250b      	movs	r5, #11
 8032a50:	4628      	mov	r0, r5
 8032a52:	b002      	add	sp, #8
 8032a54:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8032a58:	2510      	movs	r5, #16
 8032a5a:	4628      	mov	r0, r5
 8032a5c:	b002      	add	sp, #8
 8032a5e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8032a62:	250a      	movs	r5, #10
 8032a64:	4628      	mov	r0, r5
 8032a66:	b002      	add	sp, #8
 8032a68:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8032a6c:	2512      	movs	r5, #18
 8032a6e:	4628      	mov	r0, r5
 8032a70:	b002      	add	sp, #8
 8032a72:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8032a76:	4641      	mov	r1, r8
 8032a78:	4632      	mov	r2, r6
 8032a7a:	f107 0035 	add.w	r0, r7, #53	; 0x35
 8032a7e:	f8c7 3031 	str.w	r3, [r7, #49]	; 0x31
 8032a82:	f8a7 602f 	strh.w	r6, [r7, #47]	; 0x2f
 8032a86:	f00c fdbc 	bl	803f602 <__aeabi_memcpy>
 8032a8a:	783b      	ldrb	r3, [r7, #0]
 8032a8c:	f043 0308 	orr.w	r3, r3, #8
 8032a90:	703b      	strb	r3, [r7, #0]
 8032a92:	e7cb      	b.n	8032a2c <UPG_MNGR_storeDataBlock+0x1c>
 8032a94:	2000e358 	.word	0x2000e358

08032a98 <UPG_MNGR_getItEnterUpgradeMode>:
 8032a98:	b510      	push	{r4, lr}
 8032a9a:	4b13      	ldr	r3, [pc, #76]	; (8032ae8 <UPG_MNGR_getItEnterUpgradeMode+0x50>)
 8032a9c:	791c      	ldrb	r4, [r3, #4]
 8032a9e:	b174      	cbz	r4, 8032abe <UPG_MNGR_getItEnterUpgradeMode+0x26>
 8032aa0:	2c01      	cmp	r4, #1
 8032aa2:	d109      	bne.n	8032ab8 <UPG_MNGR_getItEnterUpgradeMode+0x20>
 8032aa4:	7b18      	ldrb	r0, [r3, #12]
 8032aa6:	2805      	cmp	r0, #5
 8032aa8:	d00d      	beq.n	8032ac6 <UPG_MNGR_getItEnterUpgradeMode+0x2e>
 8032aaa:	2806      	cmp	r0, #6
 8032aac:	d004      	beq.n	8032ab8 <UPG_MNGR_getItEnterUpgradeMode+0x20>
 8032aae:	2804      	cmp	r0, #4
 8032ab0:	d014      	beq.n	8032adc <UPG_MNGR_getItEnterUpgradeMode+0x44>
 8032ab2:	2404      	movs	r4, #4
 8032ab4:	4620      	mov	r0, r4
 8032ab6:	bd10      	pop	{r4, pc}
 8032ab8:	2405      	movs	r4, #5
 8032aba:	4620      	mov	r0, r4
 8032abc:	bd10      	pop	{r4, pc}
 8032abe:	f7ff fa95 	bl	8031fec <UPGRADER_enterUpdateMode>
 8032ac2:	4620      	mov	r0, r4
 8032ac4:	bd10      	pop	{r4, pc}
 8032ac6:	2200      	movs	r2, #0
 8032ac8:	4611      	mov	r1, r2
 8032aca:	2004      	movs	r0, #4
 8032acc:	f7f2 f848 	bl	8024b60 <BSB_sendDevMulticast>
 8032ad0:	2800      	cmp	r0, #0
 8032ad2:	bf14      	ite	ne
 8032ad4:	2400      	movne	r4, #0
 8032ad6:	2418      	moveq	r4, #24
 8032ad8:	4620      	mov	r0, r4
 8032ada:	bd10      	pop	{r4, pc}
 8032adc:	2200      	movs	r2, #0
 8032ade:	4611      	mov	r1, r2
 8032ae0:	f7f1 fcd4 	bl	802448c <CDM_sendDevMulticast>
 8032ae4:	e7f4      	b.n	8032ad0 <UPG_MNGR_getItEnterUpgradeMode+0x38>
 8032ae6:	bf00      	nop
 8032ae8:	2000e358 	.word	0x2000e358

08032aec <UPG_MNGR_sendMetaData>:
 8032aec:	b5f0      	push	{r4, r5, r6, r7, lr}
 8032aee:	4c1d      	ldr	r4, [pc, #116]	; (8032b64 <UPG_MNGR_sendMetaData+0x78>)
 8032af0:	7923      	ldrb	r3, [r4, #4]
 8032af2:	2b01      	cmp	r3, #1
 8032af4:	b089      	sub	sp, #36	; 0x24
 8032af6:	d131      	bne.n	8032b5c <UPG_MNGR_sendMetaData+0x70>
 8032af8:	7823      	ldrb	r3, [r4, #0]
 8032afa:	079b      	lsls	r3, r3, #30
 8032afc:	d52b      	bpl.n	8032b56 <UPG_MNGR_sendMetaData+0x6a>
 8032afe:	4f1a      	ldr	r7, [pc, #104]	; (8032b68 <UPG_MNGR_sendMetaData+0x7c>)
 8032b00:	f894 2022 	ldrb.w	r2, [r4, #34]	; 0x22
 8032b04:	7839      	ldrb	r1, [r7, #0]
 8032b06:	9100      	str	r1, [sp, #0]
 8032b08:	f04f 0c14 	mov.w	ip, #20
 8032b0c:	2600      	movs	r6, #0
 8032b0e:	3101      	adds	r1, #1
 8032b10:	4605      	mov	r5, r0
 8032b12:	f104 000d 	add.w	r0, r4, #13
 8032b16:	e9cd 0c02 	strd	r0, ip, [sp, #8]
 8032b1a:	2303      	movs	r3, #3
 8032b1c:	eb0d 000c 	add.w	r0, sp, ip
 8032b20:	7039      	strb	r1, [r7, #0]
 8032b22:	9601      	str	r6, [sp, #4]
 8032b24:	f894 1021 	ldrb.w	r1, [r4, #33]	; 0x21
 8032b28:	f7ff fb0c 	bl	8032144 <UPG_COMM_packPacket>
 8032b2c:	a805      	add	r0, sp, #20
 8032b2e:	f7ff fb3d 	bl	80321ac <UPG_COMM_sendPacket>
 8032b32:	7823      	ldrb	r3, [r4, #0]
 8032b34:	f366 03c3 	bfi	r3, r6, #3, #1
 8032b38:	7023      	strb	r3, [r4, #0]
 8032b3a:	b155      	cbz	r5, 8032b52 <UPG_MNGR_sendMetaData+0x66>
 8032b3c:	f89d 3015 	ldrb.w	r3, [sp, #21]
 8032b40:	f89d 1017 	ldrb.w	r1, [sp, #23]
 8032b44:	f89d 2016 	ldrb.w	r2, [sp, #22]
 8032b48:	7029      	strb	r1, [r5, #0]
 8032b4a:	f003 030f 	and.w	r3, r3, #15
 8032b4e:	70ab      	strb	r3, [r5, #2]
 8032b50:	706a      	strb	r2, [r5, #1]
 8032b52:	b009      	add	sp, #36	; 0x24
 8032b54:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8032b56:	200c      	movs	r0, #12
 8032b58:	b009      	add	sp, #36	; 0x24
 8032b5a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8032b5c:	2002      	movs	r0, #2
 8032b5e:	b009      	add	sp, #36	; 0x24
 8032b60:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8032b62:	bf00      	nop
 8032b64:	2000e358 	.word	0x2000e358
 8032b68:	2000e354 	.word	0x2000e354

08032b6c <UPG_MNGR_sendDataBlock>:
 8032b6c:	b570      	push	{r4, r5, r6, lr}
 8032b6e:	4c20      	ldr	r4, [pc, #128]	; (8032bf0 <UPG_MNGR_sendDataBlock+0x84>)
 8032b70:	7923      	ldrb	r3, [r4, #4]
 8032b72:	2b01      	cmp	r3, #1
 8032b74:	b088      	sub	sp, #32
 8032b76:	d137      	bne.n	8032be8 <UPG_MNGR_sendDataBlock+0x7c>
 8032b78:	7823      	ldrb	r3, [r4, #0]
 8032b7a:	071b      	lsls	r3, r3, #28
 8032b7c:	d531      	bpl.n	8032be2 <UPG_MNGR_sendDataBlock+0x76>
 8032b7e:	f8b4 302f 	ldrh.w	r3, [r4, #47]	; 0x2f
 8032b82:	4e1c      	ldr	r6, [pc, #112]	; (8032bf4 <UPG_MNGR_sendDataBlock+0x88>)
 8032b84:	f894 2022 	ldrb.w	r2, [r4, #34]	; 0x22
 8032b88:	7831      	ldrb	r1, [r6, #0]
 8032b8a:	9100      	str	r1, [sp, #0]
 8032b8c:	3308      	adds	r3, #8
 8032b8e:	b2db      	uxtb	r3, r3
 8032b90:	9303      	str	r3, [sp, #12]
 8032b92:	3101      	adds	r1, #1
 8032b94:	2300      	movs	r3, #0
 8032b96:	4605      	mov	r5, r0
 8032b98:	f104 002d 	add.w	r0, r4, #45	; 0x2d
 8032b9c:	e9cd 3001 	strd	r3, r0, [sp, #4]
 8032ba0:	7031      	strb	r1, [r6, #0]
 8032ba2:	2304      	movs	r3, #4
 8032ba4:	f894 1021 	ldrb.w	r1, [r4, #33]	; 0x21
 8032ba8:	a805      	add	r0, sp, #20
 8032baa:	f7ff facb 	bl	8032144 <UPG_COMM_packPacket>
 8032bae:	a805      	add	r0, sp, #20
 8032bb0:	f7ff fafc 	bl	80321ac <UPG_COMM_sendPacket>
 8032bb4:	f8b4 202d 	ldrh.w	r2, [r4, #45]	; 0x2d
 8032bb8:	7823      	ldrb	r3, [r4, #0]
 8032bba:	3201      	adds	r2, #1
 8032bbc:	f023 0318 	bic.w	r3, r3, #24
 8032bc0:	f8a4 202d 	strh.w	r2, [r4, #45]	; 0x2d
 8032bc4:	7023      	strb	r3, [r4, #0]
 8032bc6:	b155      	cbz	r5, 8032bde <UPG_MNGR_sendDataBlock+0x72>
 8032bc8:	f89d 3015 	ldrb.w	r3, [sp, #21]
 8032bcc:	f89d 1017 	ldrb.w	r1, [sp, #23]
 8032bd0:	f89d 2016 	ldrb.w	r2, [sp, #22]
 8032bd4:	7029      	strb	r1, [r5, #0]
 8032bd6:	f003 030f 	and.w	r3, r3, #15
 8032bda:	70ab      	strb	r3, [r5, #2]
 8032bdc:	706a      	strb	r2, [r5, #1]
 8032bde:	b008      	add	sp, #32
 8032be0:	bd70      	pop	{r4, r5, r6, pc}
 8032be2:	2013      	movs	r0, #19
 8032be4:	b008      	add	sp, #32
 8032be6:	bd70      	pop	{r4, r5, r6, pc}
 8032be8:	2002      	movs	r0, #2
 8032bea:	b008      	add	sp, #32
 8032bec:	bd70      	pop	{r4, r5, r6, pc}
 8032bee:	bf00      	nop
 8032bf0:	2000e358 	.word	0x2000e358
 8032bf4:	2000e354 	.word	0x2000e354

08032bf8 <UPG_MNGR_doFinalConfirm>:
 8032bf8:	4b13      	ldr	r3, [pc, #76]	; (8032c48 <UPG_MNGR_doFinalConfirm+0x50>)
 8032bfa:	791a      	ldrb	r2, [r3, #4]
 8032bfc:	2a01      	cmp	r2, #1
 8032bfe:	d001      	beq.n	8032c04 <UPG_MNGR_doFinalConfirm+0xc>
 8032c00:	2002      	movs	r0, #2
 8032c02:	4770      	bx	lr
 8032c04:	b530      	push	{r4, r5, lr}
 8032c06:	4d11      	ldr	r5, [pc, #68]	; (8032c4c <UPG_MNGR_doFinalConfirm+0x54>)
 8032c08:	f893 2022 	ldrb.w	r2, [r3, #34]	; 0x22
 8032c0c:	b087      	sub	sp, #28
 8032c0e:	4604      	mov	r4, r0
 8032c10:	7828      	ldrb	r0, [r5, #0]
 8032c12:	9000      	str	r0, [sp, #0]
 8032c14:	3001      	adds	r0, #1
 8032c16:	f893 1021 	ldrb.w	r1, [r3, #33]	; 0x21
 8032c1a:	7028      	strb	r0, [r5, #0]
 8032c1c:	2305      	movs	r3, #5
 8032c1e:	a803      	add	r0, sp, #12
 8032c20:	f7ff fa72 	bl	8032108 <UPG_COMM_packPacketNoOptData>
 8032c24:	a803      	add	r0, sp, #12
 8032c26:	f7ff fac1 	bl	80321ac <UPG_COMM_sendPacket>
 8032c2a:	b154      	cbz	r4, 8032c42 <UPG_MNGR_doFinalConfirm+0x4a>
 8032c2c:	f89d 300d 	ldrb.w	r3, [sp, #13]
 8032c30:	f89d 100f 	ldrb.w	r1, [sp, #15]
 8032c34:	f89d 200e 	ldrb.w	r2, [sp, #14]
 8032c38:	7021      	strb	r1, [r4, #0]
 8032c3a:	f003 030f 	and.w	r3, r3, #15
 8032c3e:	70a3      	strb	r3, [r4, #2]
 8032c40:	7062      	strb	r2, [r4, #1]
 8032c42:	b007      	add	sp, #28
 8032c44:	bd30      	pop	{r4, r5, pc}
 8032c46:	bf00      	nop
 8032c48:	2000e358 	.word	0x2000e358
 8032c4c:	2000e354 	.word	0x2000e354

08032c50 <UPG_MNGR_activateNewImage>:
 8032c50:	4b15      	ldr	r3, [pc, #84]	; (8032ca8 <UPG_MNGR_activateNewImage+0x58>)
 8032c52:	791a      	ldrb	r2, [r3, #4]
 8032c54:	2a01      	cmp	r2, #1
 8032c56:	d125      	bne.n	8032ca4 <UPG_MNGR_activateNewImage+0x54>
 8032c58:	781a      	ldrb	r2, [r3, #0]
 8032c5a:	06d2      	lsls	r2, r2, #27
 8032c5c:	d520      	bpl.n	8032ca0 <UPG_MNGR_activateNewImage+0x50>
 8032c5e:	b530      	push	{r4, r5, lr}
 8032c60:	4d12      	ldr	r5, [pc, #72]	; (8032cac <UPG_MNGR_activateNewImage+0x5c>)
 8032c62:	f893 2022 	ldrb.w	r2, [r3, #34]	; 0x22
 8032c66:	b087      	sub	sp, #28
 8032c68:	4604      	mov	r4, r0
 8032c6a:	7828      	ldrb	r0, [r5, #0]
 8032c6c:	9000      	str	r0, [sp, #0]
 8032c6e:	3001      	adds	r0, #1
 8032c70:	f893 1021 	ldrb.w	r1, [r3, #33]	; 0x21
 8032c74:	7028      	strb	r0, [r5, #0]
 8032c76:	2306      	movs	r3, #6
 8032c78:	a803      	add	r0, sp, #12
 8032c7a:	f7ff fa45 	bl	8032108 <UPG_COMM_packPacketNoOptData>
 8032c7e:	a803      	add	r0, sp, #12
 8032c80:	f7ff fa94 	bl	80321ac <UPG_COMM_sendPacket>
 8032c84:	b154      	cbz	r4, 8032c9c <UPG_MNGR_activateNewImage+0x4c>
 8032c86:	f89d 300d 	ldrb.w	r3, [sp, #13]
 8032c8a:	f89d 100f 	ldrb.w	r1, [sp, #15]
 8032c8e:	f89d 200e 	ldrb.w	r2, [sp, #14]
 8032c92:	7021      	strb	r1, [r4, #0]
 8032c94:	f003 030f 	and.w	r3, r3, #15
 8032c98:	70a3      	strb	r3, [r4, #2]
 8032c9a:	7062      	strb	r2, [r4, #1]
 8032c9c:	b007      	add	sp, #28
 8032c9e:	bd30      	pop	{r4, r5, pc}
 8032ca0:	2014      	movs	r0, #20
 8032ca2:	4770      	bx	lr
 8032ca4:	2002      	movs	r0, #2
 8032ca6:	4770      	bx	lr
 8032ca8:	2000e358 	.word	0x2000e358
 8032cac:	2000e354 	.word	0x2000e354

08032cb0 <UPG_MNGR_reboot>:
 8032cb0:	4b0c      	ldr	r3, [pc, #48]	; (8032ce4 <UPG_MNGR_reboot+0x34>)
 8032cb2:	791a      	ldrb	r2, [r3, #4]
 8032cb4:	2a01      	cmp	r2, #1
 8032cb6:	d001      	beq.n	8032cbc <UPG_MNGR_reboot+0xc>
 8032cb8:	2002      	movs	r0, #2
 8032cba:	4770      	bx	lr
 8032cbc:	b510      	push	{r4, lr}
 8032cbe:	4c0a      	ldr	r4, [pc, #40]	; (8032ce8 <UPG_MNGR_reboot+0x38>)
 8032cc0:	f893 2022 	ldrb.w	r2, [r3, #34]	; 0x22
 8032cc4:	7820      	ldrb	r0, [r4, #0]
 8032cc6:	b086      	sub	sp, #24
 8032cc8:	9000      	str	r0, [sp, #0]
 8032cca:	3001      	adds	r0, #1
 8032ccc:	f893 1021 	ldrb.w	r1, [r3, #33]	; 0x21
 8032cd0:	7020      	strb	r0, [r4, #0]
 8032cd2:	2308      	movs	r3, #8
 8032cd4:	a803      	add	r0, sp, #12
 8032cd6:	f7ff fa17 	bl	8032108 <UPG_COMM_packPacketNoOptData>
 8032cda:	a803      	add	r0, sp, #12
 8032cdc:	f7ff fa66 	bl	80321ac <UPG_COMM_sendPacket>
 8032ce0:	b006      	add	sp, #24
 8032ce2:	bd10      	pop	{r4, pc}
 8032ce4:	2000e358 	.word	0x2000e358
 8032ce8:	2000e354 	.word	0x2000e354

08032cec <UPG_MNGR_isRespReceived>:
 8032cec:	b570      	push	{r4, r5, r6, lr}
 8032cee:	4d4f      	ldr	r5, [pc, #316]	; (8032e2c <UPG_MNGR_isRespReceived+0x140>)
 8032cf0:	b086      	sub	sp, #24
 8032cf2:	4604      	mov	r4, r0
 8032cf4:	f105 0023 	add.w	r0, r5, #35	; 0x23
 8032cf8:	f7ff fd8e 	bl	8032818 <UPG_COMM_readPacket>
 8032cfc:	b920      	cbnz	r0, 8032d08 <UPG_MNGR_isRespReceived+0x1c>
 8032cfe:	f895 2025 	ldrb.w	r2, [r5, #37]	; 0x25
 8032d02:	7863      	ldrb	r3, [r4, #1]
 8032d04:	429a      	cmp	r2, r3
 8032d06:	d003      	beq.n	8032d10 <UPG_MNGR_isRespReceived+0x24>
 8032d08:	260d      	movs	r6, #13
 8032d0a:	4630      	mov	r0, r6
 8032d0c:	b006      	add	sp, #24
 8032d0e:	bd70      	pop	{r4, r5, r6, pc}
 8032d10:	f895 2026 	ldrb.w	r2, [r5, #38]	; 0x26
 8032d14:	7823      	ldrb	r3, [r4, #0]
 8032d16:	429a      	cmp	r2, r3
 8032d18:	d1f6      	bne.n	8032d08 <UPG_MNGR_isRespReceived+0x1c>
 8032d1a:	f8d5 6029 	ldr.w	r6, [r5, #41]	; 0x29
 8032d1e:	f996 3000 	ldrsb.w	r3, [r6]
 8032d22:	2b00      	cmp	r3, #0
 8032d24:	d13f      	bne.n	8032da6 <UPG_MNGR_isRespReceived+0xba>
 8032d26:	f895 3027 	ldrb.w	r3, [r5, #39]	; 0x27
 8032d2a:	78a6      	ldrb	r6, [r4, #2]
 8032d2c:	4233      	tst	r3, r6
 8032d2e:	d108      	bne.n	8032d42 <UPG_MNGR_isRespReceived+0x56>
 8032d30:	b346      	cbz	r6, 8032d84 <UPG_MNGR_isRespReceived+0x98>
 8032d32:	2616      	movs	r6, #22
 8032d34:	4b3e      	ldr	r3, [pc, #248]	; (8032e30 <UPG_MNGR_isRespReceived+0x144>)
 8032d36:	681b      	ldr	r3, [r3, #0]
 8032d38:	2b00      	cmp	r3, #0
 8032d3a:	d0e6      	beq.n	8032d0a <UPG_MNGR_isRespReceived+0x1e>
 8032d3c:	483d      	ldr	r0, [pc, #244]	; (8032e34 <UPG_MNGR_isRespReceived+0x148>)
 8032d3e:	4798      	blx	r3
 8032d40:	e7e3      	b.n	8032d0a <UPG_MNGR_isRespReceived+0x1e>
 8032d42:	f003 030f 	and.w	r3, r3, #15
 8032d46:	ea26 0603 	bic.w	r6, r6, r3
 8032d4a:	483b      	ldr	r0, [pc, #236]	; (8032e38 <UPG_MNGR_isRespReceived+0x14c>)
 8032d4c:	70a6      	strb	r6, [r4, #2]
 8032d4e:	212f      	movs	r1, #47	; 0x2f
 8032d50:	f00c fb05 	bl	803f35e <strrchr>
 8032d54:	2800      	cmp	r0, #0
 8032d56:	d041      	beq.n	8032ddc <UPG_MNGR_isRespReceived+0xf0>
 8032d58:	212f      	movs	r1, #47	; 0x2f
 8032d5a:	4837      	ldr	r0, [pc, #220]	; (8032e38 <UPG_MNGR_isRespReceived+0x14c>)
 8032d5c:	f00c faff 	bl	803f35e <strrchr>
 8032d60:	1c41      	adds	r1, r0, #1
 8032d62:	f895 3027 	ldrb.w	r3, [r5, #39]	; 0x27
 8032d66:	7862      	ldrb	r2, [r4, #1]
 8032d68:	78a0      	ldrb	r0, [r4, #2]
 8032d6a:	9002      	str	r0, [sp, #8]
 8032d6c:	f003 030f 	and.w	r3, r3, #15
 8032d70:	e9cd 2300 	strd	r2, r3, [sp]
 8032d74:	2002      	movs	r0, #2
 8032d76:	4b31      	ldr	r3, [pc, #196]	; (8032e3c <UPG_MNGR_isRespReceived+0x150>)
 8032d78:	f240 22ff 	movw	r2, #767	; 0x2ff
 8032d7c:	f7ef fd0c 	bl	8022798 <DEBUG_logMsg>
 8032d80:	78a6      	ldrb	r6, [r4, #2]
 8032d82:	e7d5      	b.n	8032d30 <UPG_MNGR_isRespReceived+0x44>
 8032d84:	482c      	ldr	r0, [pc, #176]	; (8032e38 <UPG_MNGR_isRespReceived+0x14c>)
 8032d86:	212f      	movs	r1, #47	; 0x2f
 8032d88:	f00c fae9 	bl	803f35e <strrchr>
 8032d8c:	b388      	cbz	r0, 8032df2 <UPG_MNGR_isRespReceived+0x106>
 8032d8e:	212f      	movs	r1, #47	; 0x2f
 8032d90:	4829      	ldr	r0, [pc, #164]	; (8032e38 <UPG_MNGR_isRespReceived+0x14c>)
 8032d92:	f00c fae4 	bl	803f35e <strrchr>
 8032d96:	1c41      	adds	r1, r0, #1
 8032d98:	4b29      	ldr	r3, [pc, #164]	; (8032e40 <UPG_MNGR_isRespReceived+0x154>)
 8032d9a:	f44f 7241 	mov.w	r2, #772	; 0x304
 8032d9e:	2002      	movs	r0, #2
 8032da0:	f7ef fcfa 	bl	8022798 <DEBUG_logMsg>
 8032da4:	e7c6      	b.n	8032d34 <UPG_MNGR_isRespReceived+0x48>
 8032da6:	4824      	ldr	r0, [pc, #144]	; (8032e38 <UPG_MNGR_isRespReceived+0x14c>)
 8032da8:	212f      	movs	r1, #47	; 0x2f
 8032daa:	f00c fad8 	bl	803f35e <strrchr>
 8032dae:	b358      	cbz	r0, 8032e08 <UPG_MNGR_isRespReceived+0x11c>
 8032db0:	212f      	movs	r1, #47	; 0x2f
 8032db2:	4821      	ldr	r0, [pc, #132]	; (8032e38 <UPG_MNGR_isRespReceived+0x14c>)
 8032db4:	f00c fad3 	bl	803f35e <strrchr>
 8032db8:	1c41      	adds	r1, r0, #1
 8032dba:	f996 4000 	ldrsb.w	r4, [r6]
 8032dbe:	9105      	str	r1, [sp, #20]
 8032dc0:	b2e0      	uxtb	r0, r4
 8032dc2:	f009 fdfd 	bl	803c9c0 <COMM_BOOT_getErrorMsg>
 8032dc6:	9905      	ldr	r1, [sp, #20]
 8032dc8:	4b1e      	ldr	r3, [pc, #120]	; (8032e44 <UPG_MNGR_isRespReceived+0x158>)
 8032dca:	e9cd 4000 	strd	r4, r0, [sp]
 8032dce:	f44f 7245 	mov.w	r2, #788	; 0x314
 8032dd2:	2001      	movs	r0, #1
 8032dd4:	f7ef fce0 	bl	8022798 <DEBUG_logMsg>
 8032dd8:	260f      	movs	r6, #15
 8032dda:	e796      	b.n	8032d0a <UPG_MNGR_isRespReceived+0x1e>
 8032ddc:	4816      	ldr	r0, [pc, #88]	; (8032e38 <UPG_MNGR_isRespReceived+0x14c>)
 8032dde:	215c      	movs	r1, #92	; 0x5c
 8032de0:	f00c fabd 	bl	803f35e <strrchr>
 8032de4:	b1d8      	cbz	r0, 8032e1e <UPG_MNGR_isRespReceived+0x132>
 8032de6:	215c      	movs	r1, #92	; 0x5c
 8032de8:	4813      	ldr	r0, [pc, #76]	; (8032e38 <UPG_MNGR_isRespReceived+0x14c>)
 8032dea:	f00c fab8 	bl	803f35e <strrchr>
 8032dee:	1c41      	adds	r1, r0, #1
 8032df0:	e7b7      	b.n	8032d62 <UPG_MNGR_isRespReceived+0x76>
 8032df2:	4811      	ldr	r0, [pc, #68]	; (8032e38 <UPG_MNGR_isRespReceived+0x14c>)
 8032df4:	215c      	movs	r1, #92	; 0x5c
 8032df6:	f00c fab2 	bl	803f35e <strrchr>
 8032dfa:	b190      	cbz	r0, 8032e22 <UPG_MNGR_isRespReceived+0x136>
 8032dfc:	215c      	movs	r1, #92	; 0x5c
 8032dfe:	480e      	ldr	r0, [pc, #56]	; (8032e38 <UPG_MNGR_isRespReceived+0x14c>)
 8032e00:	f00c faad 	bl	803f35e <strrchr>
 8032e04:	1c41      	adds	r1, r0, #1
 8032e06:	e7c7      	b.n	8032d98 <UPG_MNGR_isRespReceived+0xac>
 8032e08:	480b      	ldr	r0, [pc, #44]	; (8032e38 <UPG_MNGR_isRespReceived+0x14c>)
 8032e0a:	215c      	movs	r1, #92	; 0x5c
 8032e0c:	f00c faa7 	bl	803f35e <strrchr>
 8032e10:	b148      	cbz	r0, 8032e26 <UPG_MNGR_isRespReceived+0x13a>
 8032e12:	215c      	movs	r1, #92	; 0x5c
 8032e14:	4808      	ldr	r0, [pc, #32]	; (8032e38 <UPG_MNGR_isRespReceived+0x14c>)
 8032e16:	f00c faa2 	bl	803f35e <strrchr>
 8032e1a:	1c41      	adds	r1, r0, #1
 8032e1c:	e7cd      	b.n	8032dba <UPG_MNGR_isRespReceived+0xce>
 8032e1e:	4906      	ldr	r1, [pc, #24]	; (8032e38 <UPG_MNGR_isRespReceived+0x14c>)
 8032e20:	e79f      	b.n	8032d62 <UPG_MNGR_isRespReceived+0x76>
 8032e22:	4905      	ldr	r1, [pc, #20]	; (8032e38 <UPG_MNGR_isRespReceived+0x14c>)
 8032e24:	e7b8      	b.n	8032d98 <UPG_MNGR_isRespReceived+0xac>
 8032e26:	4904      	ldr	r1, [pc, #16]	; (8032e38 <UPG_MNGR_isRespReceived+0x14c>)
 8032e28:	e7c7      	b.n	8032dba <UPG_MNGR_isRespReceived+0xce>
 8032e2a:	bf00      	nop
 8032e2c:	2000e358 	.word	0x2000e358
 8032e30:	2000e350 	.word	0x2000e350
 8032e34:	2000e37b 	.word	0x2000e37b
 8032e38:	080480c8 	.word	0x080480c8
 8032e3c:	0804812c 	.word	0x0804812c
 8032e40:	08048154 	.word	0x08048154
 8032e44:	0804816c 	.word	0x0804816c

08032e48 <UPG_MNGR_processCANRxMessage>:
 8032e48:	b5f0      	push	{r4, r5, r6, r7, lr}
 8032e4a:	b087      	sub	sp, #28
 8032e4c:	2204      	movs	r2, #4
 8032e4e:	2303      	movs	r3, #3
 8032e50:	f88d 2005 	strb.w	r2, [sp, #5]
 8032e54:	f88d 3006 	strb.w	r3, [sp, #6]
 8032e58:	f10d 0605 	add.w	r6, sp, #5
 8032e5c:	f10d 0707 	add.w	r7, sp, #7
 8032e60:	2502      	movs	r5, #2
 8032e62:	2400      	movs	r4, #0
 8032e64:	4628      	mov	r0, r5
 8032e66:	f7fd fce1 	bl	803082c <CANMNGR_NumMsgSrcPending>
 8032e6a:	4603      	mov	r3, r0
 8032e6c:	a902      	add	r1, sp, #8
 8032e6e:	4628      	mov	r0, r5
 8032e70:	b1c3      	cbz	r3, 8032ea4 <UPG_MNGR_processCANRxMessage+0x5c>
 8032e72:	e9cd 4402 	strd	r4, r4, [sp, #8]
 8032e76:	9404      	str	r4, [sp, #16]
 8032e78:	f8ad 4014 	strh.w	r4, [sp, #20]
 8032e7c:	f7fd fc98 	bl	80307b0 <CANMNGR_readMsgSrc>
 8032e80:	f10d 010e 	add.w	r1, sp, #14
 8032e84:	2800      	cmp	r0, #0
 8032e86:	d0ed      	beq.n	8032e64 <UPG_MNGR_processCANRxMessage+0x1c>
 8032e88:	f89d 200d 	ldrb.w	r2, [sp, #13]
 8032e8c:	f8dd 0009 	ldr.w	r0, [sp, #9]
 8032e90:	f7ff fa3e 	bl	8032310 <UPG_COMM_recvCallbackCAN>
 8032e94:	4628      	mov	r0, r5
 8032e96:	f7fd fcc9 	bl	803082c <CANMNGR_NumMsgSrcPending>
 8032e9a:	4603      	mov	r3, r0
 8032e9c:	a902      	add	r1, sp, #8
 8032e9e:	4628      	mov	r0, r5
 8032ea0:	2b00      	cmp	r3, #0
 8032ea2:	d1e6      	bne.n	8032e72 <UPG_MNGR_processCANRxMessage+0x2a>
 8032ea4:	42be      	cmp	r6, r7
 8032ea6:	d002      	beq.n	8032eae <UPG_MNGR_processCANRxMessage+0x66>
 8032ea8:	f816 5b01 	ldrb.w	r5, [r6], #1
 8032eac:	e7da      	b.n	8032e64 <UPG_MNGR_processCANRxMessage+0x1c>
 8032eae:	b007      	add	sp, #28
 8032eb0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8032eb2:	bf00      	nop

08032eb4 <UPG_MNGR_getCurrentTarget>:
 8032eb4:	4b04      	ldr	r3, [pc, #16]	; (8032ec8 <UPG_MNGR_getCurrentTarget+0x14>)
 8032eb6:	781a      	ldrb	r2, [r3, #0]
 8032eb8:	07d2      	lsls	r2, r2, #31
 8032eba:	bf43      	ittte	mi
 8032ebc:	7b1b      	ldrbmi	r3, [r3, #12]
 8032ebe:	7003      	strbmi	r3, [r0, #0]
 8032ec0:	2000      	movmi	r0, #0
 8032ec2:	2008      	movpl	r0, #8
 8032ec4:	4770      	bx	lr
 8032ec6:	bf00      	nop
 8032ec8:	2000e358 	.word	0x2000e358

08032ecc <UPG_MNGR_setStatusMetaDataSent>:
 8032ecc:	4a02      	ldr	r2, [pc, #8]	; (8032ed8 <UPG_MNGR_setStatusMetaDataSent+0xc>)
 8032ece:	7813      	ldrb	r3, [r2, #0]
 8032ed0:	f043 0304 	orr.w	r3, r3, #4
 8032ed4:	7013      	strb	r3, [r2, #0]
 8032ed6:	4770      	bx	lr
 8032ed8:	2000e358 	.word	0x2000e358

08032edc <UPG_MNGR_setStatusFinalConfirmed>:
 8032edc:	4a02      	ldr	r2, [pc, #8]	; (8032ee8 <UPG_MNGR_setStatusFinalConfirmed+0xc>)
 8032ede:	7813      	ldrb	r3, [r2, #0]
 8032ee0:	f043 0310 	orr.w	r3, r3, #16
 8032ee4:	7013      	strb	r3, [r2, #0]
 8032ee6:	4770      	bx	lr
 8032ee8:	2000e358 	.word	0x2000e358

08032eec <UPG_MNGR_setStatusUpgradeDone>:
 8032eec:	4b02      	ldr	r3, [pc, #8]	; (8032ef8 <UPG_MNGR_setStatusUpgradeDone+0xc>)
 8032eee:	781a      	ldrb	r2, [r3, #0]
 8032ef0:	f36f 0200 	bfc	r2, #0, #1
 8032ef4:	701a      	strb	r2, [r3, #0]
 8032ef6:	4770      	bx	lr
 8032ef8:	2000e358 	.word	0x2000e358

08032efc <UPG_MNGR_requestAppVersion>:
 8032efc:	b530      	push	{r4, r5, lr}
 8032efe:	4b25      	ldr	r3, [pc, #148]	; (8032f94 <UPG_MNGR_requestAppVersion+0x98>)
 8032f00:	7b1b      	ldrb	r3, [r3, #12]
 8032f02:	2b05      	cmp	r3, #5
 8032f04:	b083      	sub	sp, #12
 8032f06:	d02c      	beq.n	8032f62 <UPG_MNGR_requestAppVersion+0x66>
 8032f08:	2b06      	cmp	r3, #6
 8032f0a:	d017      	beq.n	8032f3c <UPG_MNGR_requestAppVersion+0x40>
 8032f0c:	2b04      	cmp	r3, #4
 8032f0e:	d033      	beq.n	8032f78 <UPG_MNGR_requestAppVersion+0x7c>
 8032f10:	2504      	movs	r5, #4
 8032f12:	4821      	ldr	r0, [pc, #132]	; (8032f98 <UPG_MNGR_requestAppVersion+0x9c>)
 8032f14:	212f      	movs	r1, #47	; 0x2f
 8032f16:	462c      	mov	r4, r5
 8032f18:	f00c fa21 	bl	803f35e <strrchr>
 8032f1c:	b1b0      	cbz	r0, 8032f4c <UPG_MNGR_requestAppVersion+0x50>
 8032f1e:	212f      	movs	r1, #47	; 0x2f
 8032f20:	481d      	ldr	r0, [pc, #116]	; (8032f98 <UPG_MNGR_requestAppVersion+0x9c>)
 8032f22:	f00c fa1c 	bl	803f35e <strrchr>
 8032f26:	1c41      	adds	r1, r0, #1
 8032f28:	4b1c      	ldr	r3, [pc, #112]	; (8032f9c <UPG_MNGR_requestAppVersion+0xa0>)
 8032f2a:	9500      	str	r5, [sp, #0]
 8032f2c:	f240 32a3 	movw	r2, #931	; 0x3a3
 8032f30:	2001      	movs	r0, #1
 8032f32:	f7ef fc31 	bl	8022798 <DEBUG_logMsg>
 8032f36:	4620      	mov	r0, r4
 8032f38:	b003      	add	sp, #12
 8032f3a:	bd30      	pop	{r4, r5, pc}
 8032f3c:	2505      	movs	r5, #5
 8032f3e:	4816      	ldr	r0, [pc, #88]	; (8032f98 <UPG_MNGR_requestAppVersion+0x9c>)
 8032f40:	212f      	movs	r1, #47	; 0x2f
 8032f42:	462c      	mov	r4, r5
 8032f44:	f00c fa0b 	bl	803f35e <strrchr>
 8032f48:	2800      	cmp	r0, #0
 8032f4a:	d1e8      	bne.n	8032f1e <UPG_MNGR_requestAppVersion+0x22>
 8032f4c:	4812      	ldr	r0, [pc, #72]	; (8032f98 <UPG_MNGR_requestAppVersion+0x9c>)
 8032f4e:	215c      	movs	r1, #92	; 0x5c
 8032f50:	f00c fa05 	bl	803f35e <strrchr>
 8032f54:	b1d8      	cbz	r0, 8032f8e <UPG_MNGR_requestAppVersion+0x92>
 8032f56:	215c      	movs	r1, #92	; 0x5c
 8032f58:	480f      	ldr	r0, [pc, #60]	; (8032f98 <UPG_MNGR_requestAppVersion+0x9c>)
 8032f5a:	f00c fa00 	bl	803f35e <strrchr>
 8032f5e:	1c41      	adds	r1, r0, #1
 8032f60:	e7e2      	b.n	8032f28 <UPG_MNGR_requestAppVersion+0x2c>
 8032f62:	f7f1 fe89 	bl	8024c78 <BSB_resetFwVersion>
 8032f66:	2200      	movs	r2, #0
 8032f68:	4611      	mov	r1, r2
 8032f6a:	2003      	movs	r0, #3
 8032f6c:	f7f1 fdf8 	bl	8024b60 <BSB_sendDevMulticast>
 8032f70:	2400      	movs	r4, #0
 8032f72:	4620      	mov	r0, r4
 8032f74:	b003      	add	sp, #12
 8032f76:	bd30      	pop	{r4, r5, pc}
 8032f78:	f7f1 fb16 	bl	80245a8 <CDM_resetFwVersion>
 8032f7c:	2200      	movs	r2, #0
 8032f7e:	4611      	mov	r1, r2
 8032f80:	2003      	movs	r0, #3
 8032f82:	f7f1 fa83 	bl	802448c <CDM_sendDevMulticast>
 8032f86:	2400      	movs	r4, #0
 8032f88:	4620      	mov	r0, r4
 8032f8a:	b003      	add	sp, #12
 8032f8c:	bd30      	pop	{r4, r5, pc}
 8032f8e:	4902      	ldr	r1, [pc, #8]	; (8032f98 <UPG_MNGR_requestAppVersion+0x9c>)
 8032f90:	e7ca      	b.n	8032f28 <UPG_MNGR_requestAppVersion+0x2c>
 8032f92:	bf00      	nop
 8032f94:	2000e358 	.word	0x2000e358
 8032f98:	080480c8 	.word	0x080480c8
 8032f9c:	0804433c 	.word	0x0804433c

08032fa0 <UPG_MNGR_confirmAppVersion>:
 8032fa0:	b510      	push	{r4, lr}
 8032fa2:	4b76      	ldr	r3, [pc, #472]	; (803317c <UPG_MNGR_confirmAppVersion+0x1dc>)
 8032fa4:	7b1b      	ldrb	r3, [r3, #12]
 8032fa6:	2b05      	cmp	r3, #5
 8032fa8:	b084      	sub	sp, #16
 8032faa:	d00a      	beq.n	8032fc2 <UPG_MNGR_confirmAppVersion+0x22>
 8032fac:	2b06      	cmp	r3, #6
 8032fae:	d005      	beq.n	8032fbc <UPG_MNGR_confirmAppVersion+0x1c>
 8032fb0:	2b04      	cmp	r3, #4
 8032fb2:	f000 808d 	beq.w	80330d0 <UPG_MNGR_confirmAppVersion+0x130>
 8032fb6:	2004      	movs	r0, #4
 8032fb8:	b004      	add	sp, #16
 8032fba:	bd10      	pop	{r4, pc}
 8032fbc:	2005      	movs	r0, #5
 8032fbe:	b004      	add	sp, #16
 8032fc0:	bd10      	pop	{r4, pc}
 8032fc2:	ac02      	add	r4, sp, #8
 8032fc4:	4620      	mov	r0, r4
 8032fc6:	f7f1 fdf3 	bl	8024bb0 <BSB_getFwVersion>
 8032fca:	2800      	cmp	r0, #0
 8032fcc:	d07d      	beq.n	80330ca <UPG_MNGR_confirmAppVersion+0x12a>
 8032fce:	4621      	mov	r1, r4
 8032fd0:	486b      	ldr	r0, [pc, #428]	; (8033180 <UPG_MNGR_confirmAppVersion+0x1e0>)
 8032fd2:	2208      	movs	r2, #8
 8032fd4:	f00c fb15 	bl	803f602 <__aeabi_memcpy>
 8032fd8:	486a      	ldr	r0, [pc, #424]	; (8033184 <UPG_MNGR_confirmAppVersion+0x1e4>)
 8032fda:	212f      	movs	r1, #47	; 0x2f
 8032fdc:	f00c f9bf 	bl	803f35e <strrchr>
 8032fe0:	2800      	cmp	r0, #0
 8032fe2:	d07a      	beq.n	80330da <UPG_MNGR_confirmAppVersion+0x13a>
 8032fe4:	212f      	movs	r1, #47	; 0x2f
 8032fe6:	4867      	ldr	r0, [pc, #412]	; (8033184 <UPG_MNGR_confirmAppVersion+0x1e4>)
 8032fe8:	f00c f9b9 	bl	803f35e <strrchr>
 8032fec:	1c41      	adds	r1, r0, #1
 8032fee:	2002      	movs	r0, #2
 8032ff0:	4b65      	ldr	r3, [pc, #404]	; (8033188 <UPG_MNGR_confirmAppVersion+0x1e8>)
 8032ff2:	f240 32d6 	movw	r2, #982	; 0x3d6
 8032ff6:	f7ef fbcf 	bl	8022798 <DEBUG_logMsg>
 8032ffa:	4862      	ldr	r0, [pc, #392]	; (8033184 <UPG_MNGR_confirmAppVersion+0x1e4>)
 8032ffc:	212f      	movs	r1, #47	; 0x2f
 8032ffe:	f00c f9ae 	bl	803f35e <strrchr>
 8033002:	2800      	cmp	r0, #0
 8033004:	f000 80a2 	beq.w	803314c <UPG_MNGR_confirmAppVersion+0x1ac>
 8033008:	212f      	movs	r1, #47	; 0x2f
 803300a:	485e      	ldr	r0, [pc, #376]	; (8033184 <UPG_MNGR_confirmAppVersion+0x1e4>)
 803300c:	f00c f9a7 	bl	803f35e <strrchr>
 8033010:	1c41      	adds	r1, r0, #1
 8033012:	f89d 3008 	ldrb.w	r3, [sp, #8]
 8033016:	9300      	str	r3, [sp, #0]
 8033018:	2002      	movs	r0, #2
 803301a:	4b5c      	ldr	r3, [pc, #368]	; (803318c <UPG_MNGR_confirmAppVersion+0x1ec>)
 803301c:	f240 32d6 	movw	r2, #982	; 0x3d6
 8033020:	f7ef fbba 	bl	8022798 <DEBUG_logMsg>
 8033024:	4857      	ldr	r0, [pc, #348]	; (8033184 <UPG_MNGR_confirmAppVersion+0x1e4>)
 8033026:	212f      	movs	r1, #47	; 0x2f
 8033028:	f00c f999 	bl	803f35e <strrchr>
 803302c:	2800      	cmp	r0, #0
 803302e:	f000 8082 	beq.w	8033136 <UPG_MNGR_confirmAppVersion+0x196>
 8033032:	212f      	movs	r1, #47	; 0x2f
 8033034:	4853      	ldr	r0, [pc, #332]	; (8033184 <UPG_MNGR_confirmAppVersion+0x1e4>)
 8033036:	f00c f992 	bl	803f35e <strrchr>
 803303a:	1c41      	adds	r1, r0, #1
 803303c:	f89d 3009 	ldrb.w	r3, [sp, #9]
 8033040:	9300      	str	r3, [sp, #0]
 8033042:	2002      	movs	r0, #2
 8033044:	4b52      	ldr	r3, [pc, #328]	; (8033190 <UPG_MNGR_confirmAppVersion+0x1f0>)
 8033046:	f240 32d6 	movw	r2, #982	; 0x3d6
 803304a:	f7ef fba5 	bl	8022798 <DEBUG_logMsg>
 803304e:	484d      	ldr	r0, [pc, #308]	; (8033184 <UPG_MNGR_confirmAppVersion+0x1e4>)
 8033050:	212f      	movs	r1, #47	; 0x2f
 8033052:	f00c f984 	bl	803f35e <strrchr>
 8033056:	2800      	cmp	r0, #0
 8033058:	d062      	beq.n	8033120 <UPG_MNGR_confirmAppVersion+0x180>
 803305a:	212f      	movs	r1, #47	; 0x2f
 803305c:	4849      	ldr	r0, [pc, #292]	; (8033184 <UPG_MNGR_confirmAppVersion+0x1e4>)
 803305e:	f00c f97e 	bl	803f35e <strrchr>
 8033062:	1c41      	adds	r1, r0, #1
 8033064:	f89d 300a 	ldrb.w	r3, [sp, #10]
 8033068:	9300      	str	r3, [sp, #0]
 803306a:	2002      	movs	r0, #2
 803306c:	4b49      	ldr	r3, [pc, #292]	; (8033194 <UPG_MNGR_confirmAppVersion+0x1f4>)
 803306e:	f240 32d6 	movw	r2, #982	; 0x3d6
 8033072:	f7ef fb91 	bl	8022798 <DEBUG_logMsg>
 8033076:	4843      	ldr	r0, [pc, #268]	; (8033184 <UPG_MNGR_confirmAppVersion+0x1e4>)
 8033078:	212f      	movs	r1, #47	; 0x2f
 803307a:	f00c f970 	bl	803f35e <strrchr>
 803307e:	2800      	cmp	r0, #0
 8033080:	d043      	beq.n	803310a <UPG_MNGR_confirmAppVersion+0x16a>
 8033082:	212f      	movs	r1, #47	; 0x2f
 8033084:	483f      	ldr	r0, [pc, #252]	; (8033184 <UPG_MNGR_confirmAppVersion+0x1e4>)
 8033086:	f00c f96a 	bl	803f35e <strrchr>
 803308a:	1c41      	adds	r1, r0, #1
 803308c:	f8dd 300b 	ldr.w	r3, [sp, #11]
 8033090:	9300      	str	r3, [sp, #0]
 8033092:	2002      	movs	r0, #2
 8033094:	4b40      	ldr	r3, [pc, #256]	; (8033198 <UPG_MNGR_confirmAppVersion+0x1f8>)
 8033096:	f240 32d6 	movw	r2, #982	; 0x3d6
 803309a:	f7ef fb7d 	bl	8022798 <DEBUG_logMsg>
 803309e:	4839      	ldr	r0, [pc, #228]	; (8033184 <UPG_MNGR_confirmAppVersion+0x1e4>)
 80330a0:	212f      	movs	r1, #47	; 0x2f
 80330a2:	f00c f95c 	bl	803f35e <strrchr>
 80330a6:	b320      	cbz	r0, 80330f2 <UPG_MNGR_confirmAppVersion+0x152>
 80330a8:	212f      	movs	r1, #47	; 0x2f
 80330aa:	4836      	ldr	r0, [pc, #216]	; (8033184 <UPG_MNGR_confirmAppVersion+0x1e4>)
 80330ac:	f00c f957 	bl	803f35e <strrchr>
 80330b0:	1c41      	adds	r1, r0, #1
 80330b2:	f89d 300f 	ldrb.w	r3, [sp, #15]
 80330b6:	9300      	str	r3, [sp, #0]
 80330b8:	f240 32d6 	movw	r2, #982	; 0x3d6
 80330bc:	4b37      	ldr	r3, [pc, #220]	; (803319c <UPG_MNGR_confirmAppVersion+0x1fc>)
 80330be:	2002      	movs	r0, #2
 80330c0:	f7ef fb6a 	bl	8022798 <DEBUG_logMsg>
 80330c4:	2000      	movs	r0, #0
 80330c6:	b004      	add	sp, #16
 80330c8:	bd10      	pop	{r4, pc}
 80330ca:	2017      	movs	r0, #23
 80330cc:	b004      	add	sp, #16
 80330ce:	bd10      	pop	{r4, pc}
 80330d0:	ac02      	add	r4, sp, #8
 80330d2:	4620      	mov	r0, r4
 80330d4:	f7f1 fa02 	bl	80244dc <CDM_getFwVersion>
 80330d8:	e777      	b.n	8032fca <UPG_MNGR_confirmAppVersion+0x2a>
 80330da:	482a      	ldr	r0, [pc, #168]	; (8033184 <UPG_MNGR_confirmAppVersion+0x1e4>)
 80330dc:	215c      	movs	r1, #92	; 0x5c
 80330de:	f00c f93e 	bl	803f35e <strrchr>
 80330e2:	2800      	cmp	r0, #0
 80330e4:	d03d      	beq.n	8033162 <UPG_MNGR_confirmAppVersion+0x1c2>
 80330e6:	215c      	movs	r1, #92	; 0x5c
 80330e8:	4826      	ldr	r0, [pc, #152]	; (8033184 <UPG_MNGR_confirmAppVersion+0x1e4>)
 80330ea:	f00c f938 	bl	803f35e <strrchr>
 80330ee:	1c41      	adds	r1, r0, #1
 80330f0:	e77d      	b.n	8032fee <UPG_MNGR_confirmAppVersion+0x4e>
 80330f2:	4824      	ldr	r0, [pc, #144]	; (8033184 <UPG_MNGR_confirmAppVersion+0x1e4>)
 80330f4:	215c      	movs	r1, #92	; 0x5c
 80330f6:	f00c f932 	bl	803f35e <strrchr>
 80330fa:	2800      	cmp	r0, #0
 80330fc:	d037      	beq.n	803316e <UPG_MNGR_confirmAppVersion+0x1ce>
 80330fe:	215c      	movs	r1, #92	; 0x5c
 8033100:	4820      	ldr	r0, [pc, #128]	; (8033184 <UPG_MNGR_confirmAppVersion+0x1e4>)
 8033102:	f00c f92c 	bl	803f35e <strrchr>
 8033106:	1c41      	adds	r1, r0, #1
 8033108:	e7d3      	b.n	80330b2 <UPG_MNGR_confirmAppVersion+0x112>
 803310a:	481e      	ldr	r0, [pc, #120]	; (8033184 <UPG_MNGR_confirmAppVersion+0x1e4>)
 803310c:	215c      	movs	r1, #92	; 0x5c
 803310e:	f00c f926 	bl	803f35e <strrchr>
 8033112:	b350      	cbz	r0, 803316a <UPG_MNGR_confirmAppVersion+0x1ca>
 8033114:	215c      	movs	r1, #92	; 0x5c
 8033116:	481b      	ldr	r0, [pc, #108]	; (8033184 <UPG_MNGR_confirmAppVersion+0x1e4>)
 8033118:	f00c f921 	bl	803f35e <strrchr>
 803311c:	1c41      	adds	r1, r0, #1
 803311e:	e7b5      	b.n	803308c <UPG_MNGR_confirmAppVersion+0xec>
 8033120:	4818      	ldr	r0, [pc, #96]	; (8033184 <UPG_MNGR_confirmAppVersion+0x1e4>)
 8033122:	215c      	movs	r1, #92	; 0x5c
 8033124:	f00c f91b 	bl	803f35e <strrchr>
 8033128:	b328      	cbz	r0, 8033176 <UPG_MNGR_confirmAppVersion+0x1d6>
 803312a:	215c      	movs	r1, #92	; 0x5c
 803312c:	4815      	ldr	r0, [pc, #84]	; (8033184 <UPG_MNGR_confirmAppVersion+0x1e4>)
 803312e:	f00c f916 	bl	803f35e <strrchr>
 8033132:	1c41      	adds	r1, r0, #1
 8033134:	e796      	b.n	8033064 <UPG_MNGR_confirmAppVersion+0xc4>
 8033136:	4813      	ldr	r0, [pc, #76]	; (8033184 <UPG_MNGR_confirmAppVersion+0x1e4>)
 8033138:	215c      	movs	r1, #92	; 0x5c
 803313a:	f00c f910 	bl	803f35e <strrchr>
 803313e:	b1c0      	cbz	r0, 8033172 <UPG_MNGR_confirmAppVersion+0x1d2>
 8033140:	215c      	movs	r1, #92	; 0x5c
 8033142:	4810      	ldr	r0, [pc, #64]	; (8033184 <UPG_MNGR_confirmAppVersion+0x1e4>)
 8033144:	f00c f90b 	bl	803f35e <strrchr>
 8033148:	1c41      	adds	r1, r0, #1
 803314a:	e777      	b.n	803303c <UPG_MNGR_confirmAppVersion+0x9c>
 803314c:	480d      	ldr	r0, [pc, #52]	; (8033184 <UPG_MNGR_confirmAppVersion+0x1e4>)
 803314e:	215c      	movs	r1, #92	; 0x5c
 8033150:	f00c f905 	bl	803f35e <strrchr>
 8033154:	b138      	cbz	r0, 8033166 <UPG_MNGR_confirmAppVersion+0x1c6>
 8033156:	215c      	movs	r1, #92	; 0x5c
 8033158:	480a      	ldr	r0, [pc, #40]	; (8033184 <UPG_MNGR_confirmAppVersion+0x1e4>)
 803315a:	f00c f900 	bl	803f35e <strrchr>
 803315e:	1c41      	adds	r1, r0, #1
 8033160:	e757      	b.n	8033012 <UPG_MNGR_confirmAppVersion+0x72>
 8033162:	4908      	ldr	r1, [pc, #32]	; (8033184 <UPG_MNGR_confirmAppVersion+0x1e4>)
 8033164:	e743      	b.n	8032fee <UPG_MNGR_confirmAppVersion+0x4e>
 8033166:	4907      	ldr	r1, [pc, #28]	; (8033184 <UPG_MNGR_confirmAppVersion+0x1e4>)
 8033168:	e753      	b.n	8033012 <UPG_MNGR_confirmAppVersion+0x72>
 803316a:	4906      	ldr	r1, [pc, #24]	; (8033184 <UPG_MNGR_confirmAppVersion+0x1e4>)
 803316c:	e78e      	b.n	803308c <UPG_MNGR_confirmAppVersion+0xec>
 803316e:	4905      	ldr	r1, [pc, #20]	; (8033184 <UPG_MNGR_confirmAppVersion+0x1e4>)
 8033170:	e79f      	b.n	80330b2 <UPG_MNGR_confirmAppVersion+0x112>
 8033172:	4904      	ldr	r1, [pc, #16]	; (8033184 <UPG_MNGR_confirmAppVersion+0x1e4>)
 8033174:	e762      	b.n	803303c <UPG_MNGR_confirmAppVersion+0x9c>
 8033176:	4903      	ldr	r1, [pc, #12]	; (8033184 <UPG_MNGR_confirmAppVersion+0x1e4>)
 8033178:	e774      	b.n	8033064 <UPG_MNGR_confirmAppVersion+0xc4>
 803317a:	bf00      	nop
 803317c:	2000e358 	.word	0x2000e358
 8033180:	2000e40d 	.word	0x2000e40d
 8033184:	080480c8 	.word	0x080480c8
 8033188:	080431bc 	.word	0x080431bc
 803318c:	0804817c 	.word	0x0804817c
 8033190:	08048188 	.word	0x08048188
 8033194:	08048194 	.word	0x08048194
 8033198:	080481a0 	.word	0x080481a0
 803319c:	080481ac 	.word	0x080481ac

080331a0 <UPG_MNGR_submitTimeStamp>:
 80331a0:	2803      	cmp	r0, #3
 80331a2:	d900      	bls.n	80331a6 <UPG_MNGR_submitTimeStamp+0x6>
 80331a4:	4770      	bx	lr
 80331a6:	b470      	push	{r4, r5, r6}
 80331a8:	4c1a      	ldr	r4, [pc, #104]	; (8033214 <UPG_MNGR_submitTimeStamp+0x74>)
 80331aa:	eb00 0540 	add.w	r5, r0, r0, lsl #1
 80331ae:	eb04 05c5 	add.w	r5, r4, r5, lsl #3
 80331b2:	0043      	lsls	r3, r0, #1
 80331b4:	686e      	ldr	r6, [r5, #4]
 80331b6:	3601      	adds	r6, #1
 80331b8:	bf08      	it	eq
 80331ba:	6069      	streq	r1, [r5, #4]
 80331bc:	181d      	adds	r5, r3, r0
 80331be:	eb04 05c5 	add.w	r5, r4, r5, lsl #3
 80331c2:	1a51      	subs	r1, r2, r1
 80331c4:	68ee      	ldr	r6, [r5, #12]
 80331c6:	60aa      	str	r2, [r5, #8]
 80331c8:	181a      	adds	r2, r3, r0
 80331ca:	eb04 02c2 	add.w	r2, r4, r2, lsl #3
 80331ce:	42b1      	cmp	r1, r6
 80331d0:	bf38      	it	cc
 80331d2:	60e9      	strcc	r1, [r5, #12]
 80331d4:	6915      	ldr	r5, [r2, #16]
 80331d6:	4418      	add	r0, r3
 80331d8:	42a9      	cmp	r1, r5
 80331da:	bf88      	it	hi
 80331dc:	6111      	strhi	r1, [r2, #16]
 80331de:	00c2      	lsls	r2, r0, #3
 80331e0:	ee07 1a90 	vmov	s15, r1
 80331e4:	58a3      	ldr	r3, [r4, r2]
 80331e6:	eb04 00c0 	add.w	r0, r4, r0, lsl #3
 80331ea:	3301      	adds	r3, #1
 80331ec:	edd0 6a05 	vldr	s13, [r0, #20]
 80331f0:	50a3      	str	r3, [r4, r2]
 80331f2:	ee07 3a10 	vmov	s14, r3
 80331f6:	eef8 7a67 	vcvt.f32.u32	s15, s15
 80331fa:	eeb8 6a47 	vcvt.f32.u32	s12, s14
 80331fe:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8033202:	bc70      	pop	{r4, r5, r6}
 8033204:	ee87 7a86 	vdiv.f32	s14, s15, s12
 8033208:	ee77 7a26 	vadd.f32	s15, s14, s13
 803320c:	edc0 7a05 	vstr	s15, [r0, #20]
 8033210:	4770      	bx	lr
 8033212:	bf00      	nop
 8033214:	2000e420 	.word	0x2000e420

08033218 <UPG_MNGR_printOutStatistics>:
 8033218:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 803321c:	48c5      	ldr	r0, [pc, #788]	; (8033534 <UPG_MNGR_printOutStatistics+0x31c>)
 803321e:	b08d      	sub	sp, #52	; 0x34
 8033220:	212f      	movs	r1, #47	; 0x2f
 8033222:	f00c f89c 	bl	803f35e <strrchr>
 8033226:	2800      	cmp	r0, #0
 8033228:	f000 8424 	beq.w	8033a74 <UPG_MNGR_printOutStatistics+0x85c>
 803322c:	212f      	movs	r1, #47	; 0x2f
 803322e:	48c1      	ldr	r0, [pc, #772]	; (8033534 <UPG_MNGR_printOutStatistics+0x31c>)
 8033230:	f00c f895 	bl	803f35e <strrchr>
 8033234:	1c41      	adds	r1, r0, #1
 8033236:	2002      	movs	r0, #2
 8033238:	4bbf      	ldr	r3, [pc, #764]	; (8033538 <UPG_MNGR_printOutStatistics+0x320>)
 803323a:	f44f 6296 	mov.w	r2, #1200	; 0x4b0
 803323e:	f7ef faab 	bl	8022798 <DEBUG_logMsg>
 8033242:	48bc      	ldr	r0, [pc, #752]	; (8033534 <UPG_MNGR_printOutStatistics+0x31c>)
 8033244:	212f      	movs	r1, #47	; 0x2f
 8033246:	f00c f88a 	bl	803f35e <strrchr>
 803324a:	2800      	cmp	r0, #0
 803324c:	f000 8404 	beq.w	8033a58 <UPG_MNGR_printOutStatistics+0x840>
 8033250:	212f      	movs	r1, #47	; 0x2f
 8033252:	48b8      	ldr	r0, [pc, #736]	; (8033534 <UPG_MNGR_printOutStatistics+0x31c>)
 8033254:	f00c f883 	bl	803f35e <strrchr>
 8033258:	1c41      	adds	r1, r0, #1
 803325a:	2002      	movs	r0, #2
 803325c:	4bb7      	ldr	r3, [pc, #732]	; (803353c <UPG_MNGR_printOutStatistics+0x324>)
 803325e:	f240 42b1 	movw	r2, #1201	; 0x4b1
 8033262:	f7ef fa99 	bl	8022798 <DEBUG_logMsg>
 8033266:	48b3      	ldr	r0, [pc, #716]	; (8033534 <UPG_MNGR_printOutStatistics+0x31c>)
 8033268:	212f      	movs	r1, #47	; 0x2f
 803326a:	f00c f878 	bl	803f35e <strrchr>
 803326e:	2800      	cmp	r0, #0
 8033270:	f000 83e5 	beq.w	8033a3e <UPG_MNGR_printOutStatistics+0x826>
 8033274:	212f      	movs	r1, #47	; 0x2f
 8033276:	48af      	ldr	r0, [pc, #700]	; (8033534 <UPG_MNGR_printOutStatistics+0x31c>)
 8033278:	f00c f871 	bl	803f35e <strrchr>
 803327c:	1c41      	adds	r1, r0, #1
 803327e:	2002      	movs	r0, #2
 8033280:	4baf      	ldr	r3, [pc, #700]	; (8033540 <UPG_MNGR_printOutStatistics+0x328>)
 8033282:	f240 42b2 	movw	r2, #1202	; 0x4b2
 8033286:	f7ef fa87 	bl	8022798 <DEBUG_logMsg>
 803328a:	48aa      	ldr	r0, [pc, #680]	; (8033534 <UPG_MNGR_printOutStatistics+0x31c>)
 803328c:	212f      	movs	r1, #47	; 0x2f
 803328e:	f00c f866 	bl	803f35e <strrchr>
 8033292:	2800      	cmp	r0, #0
 8033294:	f000 83c6 	beq.w	8033a24 <UPG_MNGR_printOutStatistics+0x80c>
 8033298:	212f      	movs	r1, #47	; 0x2f
 803329a:	48a6      	ldr	r0, [pc, #664]	; (8033534 <UPG_MNGR_printOutStatistics+0x31c>)
 803329c:	f00c f85f 	bl	803f35e <strrchr>
 80332a0:	1c41      	adds	r1, r0, #1
 80332a2:	2002      	movs	r0, #2
 80332a4:	4ba7      	ldr	r3, [pc, #668]	; (8033544 <UPG_MNGR_printOutStatistics+0x32c>)
 80332a6:	f240 42b4 	movw	r2, #1204	; 0x4b4
 80332aa:	f7ef fa75 	bl	8022798 <DEBUG_logMsg>
 80332ae:	48a1      	ldr	r0, [pc, #644]	; (8033534 <UPG_MNGR_printOutStatistics+0x31c>)
 80332b0:	212f      	movs	r1, #47	; 0x2f
 80332b2:	f00c f854 	bl	803f35e <strrchr>
 80332b6:	2800      	cmp	r0, #0
 80332b8:	f000 83a7 	beq.w	8033a0a <UPG_MNGR_printOutStatistics+0x7f2>
 80332bc:	212f      	movs	r1, #47	; 0x2f
 80332be:	489d      	ldr	r0, [pc, #628]	; (8033534 <UPG_MNGR_printOutStatistics+0x31c>)
 80332c0:	f00c f84d 	bl	803f35e <strrchr>
 80332c4:	1c41      	adds	r1, r0, #1
 80332c6:	2002      	movs	r0, #2
 80332c8:	4b9d      	ldr	r3, [pc, #628]	; (8033540 <UPG_MNGR_printOutStatistics+0x328>)
 80332ca:	f240 42b5 	movw	r2, #1205	; 0x4b5
 80332ce:	f7ef fa63 	bl	8022798 <DEBUG_logMsg>
 80332d2:	4898      	ldr	r0, [pc, #608]	; (8033534 <UPG_MNGR_printOutStatistics+0x31c>)
 80332d4:	212f      	movs	r1, #47	; 0x2f
 80332d6:	f00c f842 	bl	803f35e <strrchr>
 80332da:	2800      	cmp	r0, #0
 80332dc:	f000 8388 	beq.w	80339f0 <UPG_MNGR_printOutStatistics+0x7d8>
 80332e0:	212f      	movs	r1, #47	; 0x2f
 80332e2:	4894      	ldr	r0, [pc, #592]	; (8033534 <UPG_MNGR_printOutStatistics+0x31c>)
 80332e4:	f00c f83b 	bl	803f35e <strrchr>
 80332e8:	1c41      	adds	r1, r0, #1
 80332ea:	2002      	movs	r0, #2
 80332ec:	4b96      	ldr	r3, [pc, #600]	; (8033548 <UPG_MNGR_printOutStatistics+0x330>)
 80332ee:	f240 42b7 	movw	r2, #1207	; 0x4b7
 80332f2:	f7ef fa51 	bl	8022798 <DEBUG_logMsg>
 80332f6:	488f      	ldr	r0, [pc, #572]	; (8033534 <UPG_MNGR_printOutStatistics+0x31c>)
 80332f8:	212f      	movs	r1, #47	; 0x2f
 80332fa:	f00c f830 	bl	803f35e <strrchr>
 80332fe:	2800      	cmp	r0, #0
 8033300:	f000 8369 	beq.w	80339d6 <UPG_MNGR_printOutStatistics+0x7be>
 8033304:	212f      	movs	r1, #47	; 0x2f
 8033306:	488b      	ldr	r0, [pc, #556]	; (8033534 <UPG_MNGR_printOutStatistics+0x31c>)
 8033308:	f00c f829 	bl	803f35e <strrchr>
 803330c:	1c41      	adds	r1, r0, #1
 803330e:	2002      	movs	r0, #2
 8033310:	4b8e      	ldr	r3, [pc, #568]	; (803354c <UPG_MNGR_printOutStatistics+0x334>)
 8033312:	f44f 6297 	mov.w	r2, #1208	; 0x4b8
 8033316:	f7ef fa3f 	bl	8022798 <DEBUG_logMsg>
 803331a:	4886      	ldr	r0, [pc, #536]	; (8033534 <UPG_MNGR_printOutStatistics+0x31c>)
 803331c:	212f      	movs	r1, #47	; 0x2f
 803331e:	f00c f81e 	bl	803f35e <strrchr>
 8033322:	2800      	cmp	r0, #0
 8033324:	f000 834a 	beq.w	80339bc <UPG_MNGR_printOutStatistics+0x7a4>
 8033328:	212f      	movs	r1, #47	; 0x2f
 803332a:	4882      	ldr	r0, [pc, #520]	; (8033534 <UPG_MNGR_printOutStatistics+0x31c>)
 803332c:	f00c f817 	bl	803f35e <strrchr>
 8033330:	1c41      	adds	r1, r0, #1
 8033332:	4c87      	ldr	r4, [pc, #540]	; (8033550 <UPG_MNGR_printOutStatistics+0x338>)
 8033334:	4b87      	ldr	r3, [pc, #540]	; (8033554 <UPG_MNGR_printOutStatistics+0x33c>)
 8033336:	f894 20b5 	ldrb.w	r2, [r4, #181]	; 0xb5
 803333a:	9200      	str	r2, [sp, #0]
 803333c:	2002      	movs	r0, #2
 803333e:	f44f 6297 	mov.w	r2, #1208	; 0x4b8
 8033342:	f7ef fa29 	bl	8022798 <DEBUG_logMsg>
 8033346:	487b      	ldr	r0, [pc, #492]	; (8033534 <UPG_MNGR_printOutStatistics+0x31c>)
 8033348:	212f      	movs	r1, #47	; 0x2f
 803334a:	f00c f808 	bl	803f35e <strrchr>
 803334e:	2800      	cmp	r0, #0
 8033350:	f000 8327 	beq.w	80339a2 <UPG_MNGR_printOutStatistics+0x78a>
 8033354:	212f      	movs	r1, #47	; 0x2f
 8033356:	4877      	ldr	r0, [pc, #476]	; (8033534 <UPG_MNGR_printOutStatistics+0x31c>)
 8033358:	f00c f801 	bl	803f35e <strrchr>
 803335c:	1c41      	adds	r1, r0, #1
 803335e:	f894 30b6 	ldrb.w	r3, [r4, #182]	; 0xb6
 8033362:	9300      	str	r3, [sp, #0]
 8033364:	2002      	movs	r0, #2
 8033366:	4b7c      	ldr	r3, [pc, #496]	; (8033558 <UPG_MNGR_printOutStatistics+0x340>)
 8033368:	f44f 6297 	mov.w	r2, #1208	; 0x4b8
 803336c:	f7ef fa14 	bl	8022798 <DEBUG_logMsg>
 8033370:	4870      	ldr	r0, [pc, #448]	; (8033534 <UPG_MNGR_printOutStatistics+0x31c>)
 8033372:	212f      	movs	r1, #47	; 0x2f
 8033374:	f00b fff3 	bl	803f35e <strrchr>
 8033378:	2800      	cmp	r0, #0
 803337a:	f000 8305 	beq.w	8033988 <UPG_MNGR_printOutStatistics+0x770>
 803337e:	212f      	movs	r1, #47	; 0x2f
 8033380:	486c      	ldr	r0, [pc, #432]	; (8033534 <UPG_MNGR_printOutStatistics+0x31c>)
 8033382:	f00b ffec 	bl	803f35e <strrchr>
 8033386:	1c41      	adds	r1, r0, #1
 8033388:	f894 30b7 	ldrb.w	r3, [r4, #183]	; 0xb7
 803338c:	9300      	str	r3, [sp, #0]
 803338e:	2002      	movs	r0, #2
 8033390:	4b72      	ldr	r3, [pc, #456]	; (803355c <UPG_MNGR_printOutStatistics+0x344>)
 8033392:	f44f 6297 	mov.w	r2, #1208	; 0x4b8
 8033396:	f7ef f9ff 	bl	8022798 <DEBUG_logMsg>
 803339a:	4866      	ldr	r0, [pc, #408]	; (8033534 <UPG_MNGR_printOutStatistics+0x31c>)
 803339c:	212f      	movs	r1, #47	; 0x2f
 803339e:	f00b ffde 	bl	803f35e <strrchr>
 80333a2:	2800      	cmp	r0, #0
 80333a4:	f000 82e3 	beq.w	803396e <UPG_MNGR_printOutStatistics+0x756>
 80333a8:	212f      	movs	r1, #47	; 0x2f
 80333aa:	4862      	ldr	r0, [pc, #392]	; (8033534 <UPG_MNGR_printOutStatistics+0x31c>)
 80333ac:	f00b ffd7 	bl	803f35e <strrchr>
 80333b0:	1c41      	adds	r1, r0, #1
 80333b2:	f8d4 30b8 	ldr.w	r3, [r4, #184]	; 0xb8
 80333b6:	9300      	str	r3, [sp, #0]
 80333b8:	2002      	movs	r0, #2
 80333ba:	4b69      	ldr	r3, [pc, #420]	; (8033560 <UPG_MNGR_printOutStatistics+0x348>)
 80333bc:	f44f 6297 	mov.w	r2, #1208	; 0x4b8
 80333c0:	f7ef f9ea 	bl	8022798 <DEBUG_logMsg>
 80333c4:	485b      	ldr	r0, [pc, #364]	; (8033534 <UPG_MNGR_printOutStatistics+0x31c>)
 80333c6:	212f      	movs	r1, #47	; 0x2f
 80333c8:	f00b ffc9 	bl	803f35e <strrchr>
 80333cc:	2800      	cmp	r0, #0
 80333ce:	f000 82c1 	beq.w	8033954 <UPG_MNGR_printOutStatistics+0x73c>
 80333d2:	212f      	movs	r1, #47	; 0x2f
 80333d4:	4857      	ldr	r0, [pc, #348]	; (8033534 <UPG_MNGR_printOutStatistics+0x31c>)
 80333d6:	f00b ffc2 	bl	803f35e <strrchr>
 80333da:	1c41      	adds	r1, r0, #1
 80333dc:	f894 30bc 	ldrb.w	r3, [r4, #188]	; 0xbc
 80333e0:	9300      	str	r3, [sp, #0]
 80333e2:	f44f 6297 	mov.w	r2, #1208	; 0x4b8
 80333e6:	4b5f      	ldr	r3, [pc, #380]	; (8033564 <UPG_MNGR_printOutStatistics+0x34c>)
 80333e8:	2002      	movs	r0, #2
 80333ea:	f7ef f9d5 	bl	8022798 <DEBUG_logMsg>
 80333ee:	7b23      	ldrb	r3, [r4, #12]
 80333f0:	2b04      	cmp	r3, #4
 80333f2:	f000 82a8 	beq.w	8033946 <UPG_MNGR_printOutStatistics+0x72e>
 80333f6:	2b05      	cmp	r3, #5
 80333f8:	d105      	bne.n	8033406 <UPG_MNGR_printOutStatistics+0x1ee>
 80333fa:	a80a      	add	r0, sp, #40	; 0x28
 80333fc:	f7f1 fbd8 	bl	8024bb0 <BSB_getFwVersion>
 8033400:	2800      	cmp	r0, #0
 8033402:	f040 81ff 	bne.w	8033804 <UPG_MNGR_printOutStatistics+0x5ec>
 8033406:	484b      	ldr	r0, [pc, #300]	; (8033534 <UPG_MNGR_printOutStatistics+0x31c>)
 8033408:	212f      	movs	r1, #47	; 0x2f
 803340a:	f00b ffa8 	bl	803f35e <strrchr>
 803340e:	2800      	cmp	r0, #0
 8033410:	f000 828c 	beq.w	803392c <UPG_MNGR_printOutStatistics+0x714>
 8033414:	212f      	movs	r1, #47	; 0x2f
 8033416:	4847      	ldr	r0, [pc, #284]	; (8033534 <UPG_MNGR_printOutStatistics+0x31c>)
 8033418:	f00b ffa1 	bl	803f35e <strrchr>
 803341c:	1c41      	adds	r1, r0, #1
 803341e:	2002      	movs	r0, #2
 8033420:	4b47      	ldr	r3, [pc, #284]	; (8033540 <UPG_MNGR_printOutStatistics+0x328>)
 8033422:	f240 42d6 	movw	r2, #1238	; 0x4d6
 8033426:	f7ef f9b7 	bl	8022798 <DEBUG_logMsg>
 803342a:	4842      	ldr	r0, [pc, #264]	; (8033534 <UPG_MNGR_printOutStatistics+0x31c>)
 803342c:	212f      	movs	r1, #47	; 0x2f
 803342e:	f00b ff96 	bl	803f35e <strrchr>
 8033432:	2800      	cmp	r0, #0
 8033434:	f000 83ed 	beq.w	8033c12 <UPG_MNGR_printOutStatistics+0x9fa>
 8033438:	212f      	movs	r1, #47	; 0x2f
 803343a:	483e      	ldr	r0, [pc, #248]	; (8033534 <UPG_MNGR_printOutStatistics+0x31c>)
 803343c:	f00b ff8f 	bl	803f35e <strrchr>
 8033440:	1c41      	adds	r1, r0, #1
 8033442:	7b23      	ldrb	r3, [r4, #12]
 8033444:	2b07      	cmp	r3, #7
 8033446:	bf96      	itet	ls
 8033448:	4a47      	ldrls	r2, [pc, #284]	; (8033568 <UPG_MNGR_printOutStatistics+0x350>)
 803344a:	4b48      	ldrhi	r3, [pc, #288]	; (803356c <UPG_MNGR_printOutStatistics+0x354>)
 803344c:	f852 3023 	ldrls.w	r3, [r2, r3, lsl #2]
 8033450:	9300      	str	r3, [sp, #0]
 8033452:	2002      	movs	r0, #2
 8033454:	4b46      	ldr	r3, [pc, #280]	; (8033570 <UPG_MNGR_printOutStatistics+0x358>)
 8033456:	f44f 629b 	mov.w	r2, #1240	; 0x4d8
 803345a:	f7ef f99d 	bl	8022798 <DEBUG_logMsg>
 803345e:	4835      	ldr	r0, [pc, #212]	; (8033534 <UPG_MNGR_printOutStatistics+0x31c>)
 8033460:	212f      	movs	r1, #47	; 0x2f
 8033462:	f00b ff7c 	bl	803f35e <strrchr>
 8033466:	2800      	cmp	r0, #0
 8033468:	f000 83c7 	beq.w	8033bfa <UPG_MNGR_printOutStatistics+0x9e2>
 803346c:	212f      	movs	r1, #47	; 0x2f
 803346e:	4831      	ldr	r0, [pc, #196]	; (8033534 <UPG_MNGR_printOutStatistics+0x31c>)
 8033470:	f00b ff75 	bl	803f35e <strrchr>
 8033474:	1c41      	adds	r1, r0, #1
 8033476:	f8d4 3015 	ldr.w	r3, [r4, #21]
 803347a:	9300      	str	r3, [sp, #0]
 803347c:	2002      	movs	r0, #2
 803347e:	4b3d      	ldr	r3, [pc, #244]	; (8033574 <UPG_MNGR_printOutStatistics+0x35c>)
 8033480:	f240 42d9 	movw	r2, #1241	; 0x4d9
 8033484:	f7ef f988 	bl	8022798 <DEBUG_logMsg>
 8033488:	482a      	ldr	r0, [pc, #168]	; (8033534 <UPG_MNGR_printOutStatistics+0x31c>)
 803348a:	212f      	movs	r1, #47	; 0x2f
 803348c:	f00b ff67 	bl	803f35e <strrchr>
 8033490:	2800      	cmp	r0, #0
 8033492:	f000 83a6 	beq.w	8033be2 <UPG_MNGR_printOutStatistics+0x9ca>
 8033496:	212f      	movs	r1, #47	; 0x2f
 8033498:	4826      	ldr	r0, [pc, #152]	; (8033534 <UPG_MNGR_printOutStatistics+0x31c>)
 803349a:	f00b ff60 	bl	803f35e <strrchr>
 803349e:	1c41      	adds	r1, r0, #1
 80334a0:	2280      	movs	r2, #128	; 0x80
 80334a2:	9200      	str	r2, [sp, #0]
 80334a4:	2002      	movs	r0, #2
 80334a6:	4b34      	ldr	r3, [pc, #208]	; (8033578 <UPG_MNGR_printOutStatistics+0x360>)
 80334a8:	f240 42da 	movw	r2, #1242	; 0x4da
 80334ac:	f7ef f974 	bl	8022798 <DEBUG_logMsg>
 80334b0:	4820      	ldr	r0, [pc, #128]	; (8033534 <UPG_MNGR_printOutStatistics+0x31c>)
 80334b2:	212f      	movs	r1, #47	; 0x2f
 80334b4:	f00b ff53 	bl	803f35e <strrchr>
 80334b8:	2800      	cmp	r0, #0
 80334ba:	f000 8386 	beq.w	8033bca <UPG_MNGR_printOutStatistics+0x9b2>
 80334be:	212f      	movs	r1, #47	; 0x2f
 80334c0:	481c      	ldr	r0, [pc, #112]	; (8033534 <UPG_MNGR_printOutStatistics+0x31c>)
 80334c2:	f00b ff4c 	bl	803f35e <strrchr>
 80334c6:	1c41      	adds	r1, r0, #1
 80334c8:	2002      	movs	r0, #2
 80334ca:	4b1d      	ldr	r3, [pc, #116]	; (8033540 <UPG_MNGR_printOutStatistics+0x328>)
 80334cc:	f240 42db 	movw	r2, #1243	; 0x4db
 80334d0:	f7ef f962 	bl	8022798 <DEBUG_logMsg>
 80334d4:	4817      	ldr	r0, [pc, #92]	; (8033534 <UPG_MNGR_printOutStatistics+0x31c>)
 80334d6:	212f      	movs	r1, #47	; 0x2f
 80334d8:	f00b ff41 	bl	803f35e <strrchr>
 80334dc:	2800      	cmp	r0, #0
 80334de:	f000 8368 	beq.w	8033bb2 <UPG_MNGR_printOutStatistics+0x99a>
 80334e2:	212f      	movs	r1, #47	; 0x2f
 80334e4:	4813      	ldr	r0, [pc, #76]	; (8033534 <UPG_MNGR_printOutStatistics+0x31c>)
 80334e6:	f00b ff3a 	bl	803f35e <strrchr>
 80334ea:	1c41      	adds	r1, r0, #1
 80334ec:	2002      	movs	r0, #2
 80334ee:	4b23      	ldr	r3, [pc, #140]	; (803357c <UPG_MNGR_printOutStatistics+0x364>)
 80334f0:	f240 42dd 	movw	r2, #1245	; 0x4dd
 80334f4:	f7ef f950 	bl	8022798 <DEBUG_logMsg>
 80334f8:	480e      	ldr	r0, [pc, #56]	; (8033534 <UPG_MNGR_printOutStatistics+0x31c>)
 80334fa:	212f      	movs	r1, #47	; 0x2f
 80334fc:	f00b ff2f 	bl	803f35e <strrchr>
 8033500:	2800      	cmp	r0, #0
 8033502:	f000 834a 	beq.w	8033b9a <UPG_MNGR_printOutStatistics+0x982>
 8033506:	212f      	movs	r1, #47	; 0x2f
 8033508:	480a      	ldr	r0, [pc, #40]	; (8033534 <UPG_MNGR_printOutStatistics+0x31c>)
 803350a:	f00b ff28 	bl	803f35e <strrchr>
 803350e:	1c41      	adds	r1, r0, #1
 8033510:	4a1b      	ldr	r2, [pc, #108]	; (8033580 <UPG_MNGR_printOutStatistics+0x368>)
 8033512:	4d1c      	ldr	r5, [pc, #112]	; (8033584 <UPG_MNGR_printOutStatistics+0x36c>)
 8033514:	9207      	str	r2, [sp, #28]
 8033516:	4b0a      	ldr	r3, [pc, #40]	; (8033540 <UPG_MNGR_printOutStatistics+0x328>)
 8033518:	4c1b      	ldr	r4, [pc, #108]	; (8033588 <UPG_MNGR_printOutStatistics+0x370>)
 803351a:	f8df 8018 	ldr.w	r8, [pc, #24]	; 8033534 <UPG_MNGR_printOutStatistics+0x31c>
 803351e:	4f1b      	ldr	r7, [pc, #108]	; (803358c <UPG_MNGR_printOutStatistics+0x374>)
 8033520:	9509      	str	r5, [sp, #36]	; 0x24
 8033522:	f240 42de 	movw	r2, #1246	; 0x4de
 8033526:	2002      	movs	r0, #2
 8033528:	2600      	movs	r6, #0
 803352a:	f7ef f935 	bl	8022798 <DEBUG_logMsg>
 803352e:	46b1      	mov	r9, r6
 8033530:	9508      	str	r5, [sp, #32]
 8033532:	e02d      	b.n	8033590 <UPG_MNGR_printOutStatistics+0x378>
 8033534:	080480c8 	.word	0x080480c8
 8033538:	080481d0 	.word	0x080481d0
 803353c:	08048204 	.word	0x08048204
 8033540:	08048218 	.word	0x08048218
 8033544:	0804821c 	.word	0x0804821c
 8033548:	0804822c 	.word	0x0804822c
 803354c:	080431bc 	.word	0x080431bc
 8033550:	2000e358 	.word	0x2000e358
 8033554:	0804817c 	.word	0x0804817c
 8033558:	08048188 	.word	0x08048188
 803355c:	08048194 	.word	0x08048194
 8033560:	080481a0 	.word	0x080481a0
 8033564:	080481ac 	.word	0x080481ac
 8033568:	080483f0 	.word	0x080483f0
 803356c:	08047b4c 	.word	0x08047b4c
 8033570:	0804824c 	.word	0x0804824c
 8033574:	08048268 	.word	0x08048268
 8033578:	08048288 	.word	0x08048288
 803357c:	080482a8 	.word	0x080482a8
 8033580:	080481bc 	.word	0x080481bc
 8033584:	08048414 	.word	0x08048414
 8033588:	2000e420 	.word	0x2000e420
 803358c:	080482c0 	.word	0x080482c0
 8033590:	e9d4 3501 	ldrd	r3, r5, [r4, #4]
 8033594:	212f      	movs	r1, #47	; 0x2f
 8033596:	4640      	mov	r0, r8
 8033598:	1aed      	subs	r5, r5, r3
 803359a:	f00b fee0 	bl	803f35e <strrchr>
 803359e:	4603      	mov	r3, r0
 80335a0:	212f      	movs	r1, #47	; 0x2f
 80335a2:	4640      	mov	r0, r8
 80335a4:	46aa      	mov	sl, r5
 80335a6:	f04f 0b00 	mov.w	fp, #0
 80335aa:	b1d3      	cbz	r3, 80335e2 <UPG_MNGR_printOutStatistics+0x3ca>
 80335ac:	f00b fed7 	bl	803f35e <strrchr>
 80335b0:	1c41      	adds	r1, r0, #1
 80335b2:	9b07      	ldr	r3, [sp, #28]
 80335b4:	9300      	str	r3, [sp, #0]
 80335b6:	f240 42e5 	movw	r2, #1253	; 0x4e5
 80335ba:	463b      	mov	r3, r7
 80335bc:	2002      	movs	r0, #2
 80335be:	9501      	str	r5, [sp, #4]
 80335c0:	f7ef f8ea 	bl	8022798 <DEBUG_logMsg>
 80335c4:	4b82      	ldr	r3, [pc, #520]	; (80337d0 <UPG_MNGR_printOutStatistics+0x5b8>)
 80335c6:	eb16 060a 	adds.w	r6, r6, sl
 80335ca:	eb49 090b 	adc.w	r9, r9, fp
 80335ce:	429c      	cmp	r4, r3
 80335d0:	d011      	beq.n	80335f6 <UPG_MNGR_printOutStatistics+0x3de>
 80335d2:	9b08      	ldr	r3, [sp, #32]
 80335d4:	461a      	mov	r2, r3
 80335d6:	3418      	adds	r4, #24
 80335d8:	f852 3b04 	ldr.w	r3, [r2], #4
 80335dc:	9307      	str	r3, [sp, #28]
 80335de:	9208      	str	r2, [sp, #32]
 80335e0:	e7d6      	b.n	8033590 <UPG_MNGR_printOutStatistics+0x378>
 80335e2:	215c      	movs	r1, #92	; 0x5c
 80335e4:	f00b febb 	bl	803f35e <strrchr>
 80335e8:	4603      	mov	r3, r0
 80335ea:	215c      	movs	r1, #92	; 0x5c
 80335ec:	4640      	mov	r0, r8
 80335ee:	2b00      	cmp	r3, #0
 80335f0:	d1dc      	bne.n	80335ac <UPG_MNGR_printOutStatistics+0x394>
 80335f2:	4641      	mov	r1, r8
 80335f4:	e7dd      	b.n	80335b2 <UPG_MNGR_printOutStatistics+0x39a>
 80335f6:	4877      	ldr	r0, [pc, #476]	; (80337d4 <UPG_MNGR_printOutStatistics+0x5bc>)
 80335f8:	212f      	movs	r1, #47	; 0x2f
 80335fa:	f00b feb0 	bl	803f35e <strrchr>
 80335fe:	2800      	cmp	r0, #0
 8033600:	f000 82bf 	beq.w	8033b82 <UPG_MNGR_printOutStatistics+0x96a>
 8033604:	212f      	movs	r1, #47	; 0x2f
 8033606:	4873      	ldr	r0, [pc, #460]	; (80337d4 <UPG_MNGR_printOutStatistics+0x5bc>)
 8033608:	f00b fea9 	bl	803f35e <strrchr>
 803360c:	1c41      	adds	r1, r0, #1
 803360e:	2002      	movs	r0, #2
 8033610:	4b71      	ldr	r3, [pc, #452]	; (80337d8 <UPG_MNGR_printOutStatistics+0x5c0>)
 8033612:	f240 42eb 	movw	r2, #1259	; 0x4eb
 8033616:	f7ef f8bf 	bl	8022798 <DEBUG_logMsg>
 803361a:	486e      	ldr	r0, [pc, #440]	; (80337d4 <UPG_MNGR_printOutStatistics+0x5bc>)
 803361c:	212f      	movs	r1, #47	; 0x2f
 803361e:	f00b fe9e 	bl	803f35e <strrchr>
 8033622:	2800      	cmp	r0, #0
 8033624:	f000 82a0 	beq.w	8033b68 <UPG_MNGR_printOutStatistics+0x950>
 8033628:	486a      	ldr	r0, [pc, #424]	; (80337d4 <UPG_MNGR_printOutStatistics+0x5bc>)
 803362a:	212f      	movs	r1, #47	; 0x2f
 803362c:	f00b fe97 	bl	803f35e <strrchr>
 8033630:	1c44      	adds	r4, r0, #1
 8033632:	4649      	mov	r1, r9
 8033634:	4630      	mov	r0, r6
 8033636:	f00a fef2 	bl	803e41e <__aeabi_ul2f>
 803363a:	f00a ff0e 	bl	803e45a <__aeabi_f2d>
 803363e:	4b67      	ldr	r3, [pc, #412]	; (80337dc <UPG_MNGR_printOutStatistics+0x5c4>)
 8033640:	2200      	movs	r2, #0
 8033642:	f00b f813 	bl	803e66c <__aeabi_ddiv>
 8033646:	4b66      	ldr	r3, [pc, #408]	; (80337e0 <UPG_MNGR_printOutStatistics+0x5c8>)
 8033648:	e9cd 0100 	strd	r0, r1, [sp]
 803364c:	f240 42ec 	movw	r2, #1260	; 0x4ec
 8033650:	4621      	mov	r1, r4
 8033652:	2002      	movs	r0, #2
 8033654:	f7ef f8a0 	bl	8022798 <DEBUG_logMsg>
 8033658:	485e      	ldr	r0, [pc, #376]	; (80337d4 <UPG_MNGR_printOutStatistics+0x5bc>)
 803365a:	212f      	movs	r1, #47	; 0x2f
 803365c:	f00b fe7f 	bl	803f35e <strrchr>
 8033660:	2800      	cmp	r0, #0
 8033662:	f000 8274 	beq.w	8033b4e <UPG_MNGR_printOutStatistics+0x936>
 8033666:	212f      	movs	r1, #47	; 0x2f
 8033668:	485a      	ldr	r0, [pc, #360]	; (80337d4 <UPG_MNGR_printOutStatistics+0x5bc>)
 803366a:	f00b fe78 	bl	803f35e <strrchr>
 803366e:	1c41      	adds	r1, r0, #1
 8033670:	2002      	movs	r0, #2
 8033672:	4b5c      	ldr	r3, [pc, #368]	; (80337e4 <UPG_MNGR_printOutStatistics+0x5cc>)
 8033674:	f240 42ed 	movw	r2, #1261	; 0x4ed
 8033678:	f7ef f88e 	bl	8022798 <DEBUG_logMsg>
 803367c:	4855      	ldr	r0, [pc, #340]	; (80337d4 <UPG_MNGR_printOutStatistics+0x5bc>)
 803367e:	212f      	movs	r1, #47	; 0x2f
 8033680:	f00b fe6d 	bl	803f35e <strrchr>
 8033684:	2800      	cmp	r0, #0
 8033686:	f000 8255 	beq.w	8033b34 <UPG_MNGR_printOutStatistics+0x91c>
 803368a:	212f      	movs	r1, #47	; 0x2f
 803368c:	4851      	ldr	r0, [pc, #324]	; (80337d4 <UPG_MNGR_printOutStatistics+0x5bc>)
 803368e:	f00b fe66 	bl	803f35e <strrchr>
 8033692:	1c41      	adds	r1, r0, #1
 8033694:	2002      	movs	r0, #2
 8033696:	4b54      	ldr	r3, [pc, #336]	; (80337e8 <UPG_MNGR_printOutStatistics+0x5d0>)
 8033698:	f240 42ee 	movw	r2, #1262	; 0x4ee
 803369c:	f7ef f87c 	bl	8022798 <DEBUG_logMsg>
 80336a0:	484c      	ldr	r0, [pc, #304]	; (80337d4 <UPG_MNGR_printOutStatistics+0x5bc>)
 80336a2:	212f      	movs	r1, #47	; 0x2f
 80336a4:	f00b fe5b 	bl	803f35e <strrchr>
 80336a8:	2800      	cmp	r0, #0
 80336aa:	f000 8225 	beq.w	8033af8 <UPG_MNGR_printOutStatistics+0x8e0>
 80336ae:	212f      	movs	r1, #47	; 0x2f
 80336b0:	4848      	ldr	r0, [pc, #288]	; (80337d4 <UPG_MNGR_printOutStatistics+0x5bc>)
 80336b2:	f00b fe54 	bl	803f35e <strrchr>
 80336b6:	1c41      	adds	r1, r0, #1
 80336b8:	2002      	movs	r0, #2
 80336ba:	4b4a      	ldr	r3, [pc, #296]	; (80337e4 <UPG_MNGR_printOutStatistics+0x5cc>)
 80336bc:	f240 42ef 	movw	r2, #1263	; 0x4ef
 80336c0:	f7ef f86a 	bl	8022798 <DEBUG_logMsg>
 80336c4:	4843      	ldr	r0, [pc, #268]	; (80337d4 <UPG_MNGR_printOutStatistics+0x5bc>)
 80336c6:	212f      	movs	r1, #47	; 0x2f
 80336c8:	f00b fe49 	bl	803f35e <strrchr>
 80336cc:	2800      	cmp	r0, #0
 80336ce:	f000 8206 	beq.w	8033ade <UPG_MNGR_printOutStatistics+0x8c6>
 80336d2:	212f      	movs	r1, #47	; 0x2f
 80336d4:	483f      	ldr	r0, [pc, #252]	; (80337d4 <UPG_MNGR_printOutStatistics+0x5bc>)
 80336d6:	f00b fe42 	bl	803f35e <strrchr>
 80336da:	1c41      	adds	r1, r0, #1
 80336dc:	2002      	movs	r0, #2
 80336de:	4b43      	ldr	r3, [pc, #268]	; (80337ec <UPG_MNGR_printOutStatistics+0x5d4>)
 80336e0:	f44f 629e 	mov.w	r2, #1264	; 0x4f0
 80336e4:	f7ef f858 	bl	8022798 <DEBUG_logMsg>
 80336e8:	483a      	ldr	r0, [pc, #232]	; (80337d4 <UPG_MNGR_printOutStatistics+0x5bc>)
 80336ea:	212f      	movs	r1, #47	; 0x2f
 80336ec:	f00b fe37 	bl	803f35e <strrchr>
 80336f0:	2800      	cmp	r0, #0
 80336f2:	f000 81e7 	beq.w	8033ac4 <UPG_MNGR_printOutStatistics+0x8ac>
 80336f6:	212f      	movs	r1, #47	; 0x2f
 80336f8:	4836      	ldr	r0, [pc, #216]	; (80337d4 <UPG_MNGR_printOutStatistics+0x5bc>)
 80336fa:	f00b fe30 	bl	803f35e <strrchr>
 80336fe:	1c41      	adds	r1, r0, #1
 8033700:	4b3b      	ldr	r3, [pc, #236]	; (80337f0 <UPG_MNGR_printOutStatistics+0x5d8>)
 8033702:	4c3c      	ldr	r4, [pc, #240]	; (80337f4 <UPG_MNGR_printOutStatistics+0x5dc>)
 8033704:	4e3c      	ldr	r6, [pc, #240]	; (80337f8 <UPG_MNGR_printOutStatistics+0x5e0>)
 8033706:	4d33      	ldr	r5, [pc, #204]	; (80337d4 <UPG_MNGR_printOutStatistics+0x5bc>)
 8033708:	f8df 80f4 	ldr.w	r8, [pc, #244]	; 8033800 <UPG_MNGR_printOutStatistics+0x5e8>
 803370c:	f240 42f1 	movw	r2, #1265	; 0x4f1
 8033710:	2002      	movs	r0, #2
 8033712:	f7ef f841 	bl	8022798 <DEBUG_logMsg>
 8033716:	f8dd 9024 	ldr.w	r9, [sp, #36]	; 0x24
 803371a:	f104 0760 	add.w	r7, r4, #96	; 0x60
 803371e:	212f      	movs	r1, #47	; 0x2f
 8033720:	4628      	mov	r0, r5
 8033722:	f00b fe1c 	bl	803f35e <strrchr>
 8033726:	4603      	mov	r3, r0
 8033728:	212f      	movs	r1, #47	; 0x2f
 803372a:	4628      	mov	r0, r5
 803372c:	b1f3      	cbz	r3, 803376c <UPG_MNGR_printOutStatistics+0x554>
 803372e:	f00b fe16 	bl	803f35e <strrchr>
 8033732:	f100 0a01 	add.w	sl, r0, #1
 8033736:	f854 0c04 	ldr.w	r0, [r4, #-4]
 803373a:	f00a fe8e 	bl	803e45a <__aeabi_f2d>
 803373e:	e954 2303 	ldrd	r2, r3, [r4, #-12]
 8033742:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8033746:	e9cd 2302 	strd	r2, r3, [sp, #8]
 803374a:	9600      	str	r6, [sp, #0]
 803374c:	f854 3c18 	ldr.w	r3, [r4, #-24]
 8033750:	9301      	str	r3, [sp, #4]
 8033752:	4651      	mov	r1, sl
 8033754:	3418      	adds	r4, #24
 8033756:	4643      	mov	r3, r8
 8033758:	f240 42f6 	movw	r2, #1270	; 0x4f6
 803375c:	2002      	movs	r0, #2
 803375e:	f7ef f81b 	bl	8022798 <DEBUG_logMsg>
 8033762:	42a7      	cmp	r7, r4
 8033764:	d00c      	beq.n	8033780 <UPG_MNGR_printOutStatistics+0x568>
 8033766:	f859 6b04 	ldr.w	r6, [r9], #4
 803376a:	e7d8      	b.n	803371e <UPG_MNGR_printOutStatistics+0x506>
 803376c:	215c      	movs	r1, #92	; 0x5c
 803376e:	f00b fdf6 	bl	803f35e <strrchr>
 8033772:	4603      	mov	r3, r0
 8033774:	215c      	movs	r1, #92	; 0x5c
 8033776:	4628      	mov	r0, r5
 8033778:	2b00      	cmp	r3, #0
 803377a:	d1d8      	bne.n	803372e <UPG_MNGR_printOutStatistics+0x516>
 803377c:	46aa      	mov	sl, r5
 803377e:	e7da      	b.n	8033736 <UPG_MNGR_printOutStatistics+0x51e>
 8033780:	4814      	ldr	r0, [pc, #80]	; (80337d4 <UPG_MNGR_printOutStatistics+0x5bc>)
 8033782:	212f      	movs	r1, #47	; 0x2f
 8033784:	f00b fdeb 	bl	803f35e <strrchr>
 8033788:	2800      	cmp	r0, #0
 803378a:	f000 818e 	beq.w	8033aaa <UPG_MNGR_printOutStatistics+0x892>
 803378e:	212f      	movs	r1, #47	; 0x2f
 8033790:	4810      	ldr	r0, [pc, #64]	; (80337d4 <UPG_MNGR_printOutStatistics+0x5bc>)
 8033792:	f00b fde4 	bl	803f35e <strrchr>
 8033796:	1c41      	adds	r1, r0, #1
 8033798:	2002      	movs	r0, #2
 803379a:	4b12      	ldr	r3, [pc, #72]	; (80337e4 <UPG_MNGR_printOutStatistics+0x5cc>)
 803379c:	f240 42f9 	movw	r2, #1273	; 0x4f9
 80337a0:	f7ee fffa 	bl	8022798 <DEBUG_logMsg>
 80337a4:	480b      	ldr	r0, [pc, #44]	; (80337d4 <UPG_MNGR_printOutStatistics+0x5bc>)
 80337a6:	212f      	movs	r1, #47	; 0x2f
 80337a8:	f00b fdd9 	bl	803f35e <strrchr>
 80337ac:	2800      	cmp	r0, #0
 80337ae:	f000 816f 	beq.w	8033a90 <UPG_MNGR_printOutStatistics+0x878>
 80337b2:	212f      	movs	r1, #47	; 0x2f
 80337b4:	4807      	ldr	r0, [pc, #28]	; (80337d4 <UPG_MNGR_printOutStatistics+0x5bc>)
 80337b6:	f00b fdd2 	bl	803f35e <strrchr>
 80337ba:	1c41      	adds	r1, r0, #1
 80337bc:	4b0f      	ldr	r3, [pc, #60]	; (80337fc <UPG_MNGR_printOutStatistics+0x5e4>)
 80337be:	f240 42fa 	movw	r2, #1274	; 0x4fa
 80337c2:	2002      	movs	r0, #2
 80337c4:	f7ee ffe8 	bl	8022798 <DEBUG_logMsg>
 80337c8:	b00d      	add	sp, #52	; 0x34
 80337ca:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80337ce:	bf00      	nop
 80337d0:	2000e468 	.word	0x2000e468
 80337d4:	080480c8 	.word	0x080480c8
 80337d8:	080482cc 	.word	0x080482cc
 80337dc:	408f4000 	.word	0x408f4000
 80337e0:	080482dc 	.word	0x080482dc
 80337e4:	08048218 	.word	0x08048218
 80337e8:	080482f8 	.word	0x080482f8
 80337ec:	08048310 	.word	0x08048310
 80337f0:	08048344 	.word	0x08048344
 80337f4:	2000e438 	.word	0x2000e438
 80337f8:	080481bc 	.word	0x080481bc
 80337fc:	080481d0 	.word	0x080481d0
 8033800:	08048378 	.word	0x08048378
 8033804:	48c3      	ldr	r0, [pc, #780]	; (8033b14 <UPG_MNGR_printOutStatistics+0x8fc>)
 8033806:	212f      	movs	r1, #47	; 0x2f
 8033808:	f00b fda9 	bl	803f35e <strrchr>
 803380c:	2800      	cmp	r0, #0
 803380e:	f000 8253 	beq.w	8033cb8 <UPG_MNGR_printOutStatistics+0xaa0>
 8033812:	212f      	movs	r1, #47	; 0x2f
 8033814:	48bf      	ldr	r0, [pc, #764]	; (8033b14 <UPG_MNGR_printOutStatistics+0x8fc>)
 8033816:	f00b fda2 	bl	803f35e <strrchr>
 803381a:	1c41      	adds	r1, r0, #1
 803381c:	2002      	movs	r0, #2
 803381e:	4bbe      	ldr	r3, [pc, #760]	; (8033b18 <UPG_MNGR_printOutStatistics+0x900>)
 8033820:	f240 42d3 	movw	r2, #1235	; 0x4d3
 8033824:	f7ee ffb8 	bl	8022798 <DEBUG_logMsg>
 8033828:	48ba      	ldr	r0, [pc, #744]	; (8033b14 <UPG_MNGR_printOutStatistics+0x8fc>)
 803382a:	212f      	movs	r1, #47	; 0x2f
 803382c:	f00b fd97 	bl	803f35e <strrchr>
 8033830:	2800      	cmp	r0, #0
 8033832:	f000 8286 	beq.w	8033d42 <UPG_MNGR_printOutStatistics+0xb2a>
 8033836:	212f      	movs	r1, #47	; 0x2f
 8033838:	48b6      	ldr	r0, [pc, #728]	; (8033b14 <UPG_MNGR_printOutStatistics+0x8fc>)
 803383a:	f00b fd90 	bl	803f35e <strrchr>
 803383e:	1c41      	adds	r1, r0, #1
 8033840:	2002      	movs	r0, #2
 8033842:	4bb6      	ldr	r3, [pc, #728]	; (8033b1c <UPG_MNGR_printOutStatistics+0x904>)
 8033844:	f240 42d4 	movw	r2, #1236	; 0x4d4
 8033848:	f7ee ffa6 	bl	8022798 <DEBUG_logMsg>
 803384c:	48b1      	ldr	r0, [pc, #708]	; (8033b14 <UPG_MNGR_printOutStatistics+0x8fc>)
 803384e:	212f      	movs	r1, #47	; 0x2f
 8033850:	f00b fd85 	bl	803f35e <strrchr>
 8033854:	2800      	cmp	r0, #0
 8033856:	f000 8269 	beq.w	8033d2c <UPG_MNGR_printOutStatistics+0xb14>
 803385a:	212f      	movs	r1, #47	; 0x2f
 803385c:	48ad      	ldr	r0, [pc, #692]	; (8033b14 <UPG_MNGR_printOutStatistics+0x8fc>)
 803385e:	f00b fd7e 	bl	803f35e <strrchr>
 8033862:	1c41      	adds	r1, r0, #1
 8033864:	f89d 3028 	ldrb.w	r3, [sp, #40]	; 0x28
 8033868:	9300      	str	r3, [sp, #0]
 803386a:	2002      	movs	r0, #2
 803386c:	4bac      	ldr	r3, [pc, #688]	; (8033b20 <UPG_MNGR_printOutStatistics+0x908>)
 803386e:	f240 42d4 	movw	r2, #1236	; 0x4d4
 8033872:	f7ee ff91 	bl	8022798 <DEBUG_logMsg>
 8033876:	48a7      	ldr	r0, [pc, #668]	; (8033b14 <UPG_MNGR_printOutStatistics+0x8fc>)
 8033878:	212f      	movs	r1, #47	; 0x2f
 803387a:	f00b fd70 	bl	803f35e <strrchr>
 803387e:	2800      	cmp	r0, #0
 8033880:	f000 8249 	beq.w	8033d16 <UPG_MNGR_printOutStatistics+0xafe>
 8033884:	212f      	movs	r1, #47	; 0x2f
 8033886:	48a3      	ldr	r0, [pc, #652]	; (8033b14 <UPG_MNGR_printOutStatistics+0x8fc>)
 8033888:	f00b fd69 	bl	803f35e <strrchr>
 803388c:	1c41      	adds	r1, r0, #1
 803388e:	f89d 3029 	ldrb.w	r3, [sp, #41]	; 0x29
 8033892:	9300      	str	r3, [sp, #0]
 8033894:	2002      	movs	r0, #2
 8033896:	4ba3      	ldr	r3, [pc, #652]	; (8033b24 <UPG_MNGR_printOutStatistics+0x90c>)
 8033898:	f240 42d4 	movw	r2, #1236	; 0x4d4
 803389c:	f7ee ff7c 	bl	8022798 <DEBUG_logMsg>
 80338a0:	489c      	ldr	r0, [pc, #624]	; (8033b14 <UPG_MNGR_printOutStatistics+0x8fc>)
 80338a2:	212f      	movs	r1, #47	; 0x2f
 80338a4:	f00b fd5b 	bl	803f35e <strrchr>
 80338a8:	2800      	cmp	r0, #0
 80338aa:	f000 8229 	beq.w	8033d00 <UPG_MNGR_printOutStatistics+0xae8>
 80338ae:	212f      	movs	r1, #47	; 0x2f
 80338b0:	4898      	ldr	r0, [pc, #608]	; (8033b14 <UPG_MNGR_printOutStatistics+0x8fc>)
 80338b2:	f00b fd54 	bl	803f35e <strrchr>
 80338b6:	1c41      	adds	r1, r0, #1
 80338b8:	f89d 302a 	ldrb.w	r3, [sp, #42]	; 0x2a
 80338bc:	9300      	str	r3, [sp, #0]
 80338be:	2002      	movs	r0, #2
 80338c0:	4b99      	ldr	r3, [pc, #612]	; (8033b28 <UPG_MNGR_printOutStatistics+0x910>)
 80338c2:	f240 42d4 	movw	r2, #1236	; 0x4d4
 80338c6:	f7ee ff67 	bl	8022798 <DEBUG_logMsg>
 80338ca:	4892      	ldr	r0, [pc, #584]	; (8033b14 <UPG_MNGR_printOutStatistics+0x8fc>)
 80338cc:	212f      	movs	r1, #47	; 0x2f
 80338ce:	f00b fd46 	bl	803f35e <strrchr>
 80338d2:	2800      	cmp	r0, #0
 80338d4:	f000 8208 	beq.w	8033ce8 <UPG_MNGR_printOutStatistics+0xad0>
 80338d8:	212f      	movs	r1, #47	; 0x2f
 80338da:	488e      	ldr	r0, [pc, #568]	; (8033b14 <UPG_MNGR_printOutStatistics+0x8fc>)
 80338dc:	f00b fd3f 	bl	803f35e <strrchr>
 80338e0:	1c41      	adds	r1, r0, #1
 80338e2:	f8dd 302b 	ldr.w	r3, [sp, #43]	; 0x2b
 80338e6:	9300      	str	r3, [sp, #0]
 80338e8:	2002      	movs	r0, #2
 80338ea:	4b90      	ldr	r3, [pc, #576]	; (8033b2c <UPG_MNGR_printOutStatistics+0x914>)
 80338ec:	f240 42d4 	movw	r2, #1236	; 0x4d4
 80338f0:	f7ee ff52 	bl	8022798 <DEBUG_logMsg>
 80338f4:	4887      	ldr	r0, [pc, #540]	; (8033b14 <UPG_MNGR_printOutStatistics+0x8fc>)
 80338f6:	212f      	movs	r1, #47	; 0x2f
 80338f8:	f00b fd31 	bl	803f35e <strrchr>
 80338fc:	2800      	cmp	r0, #0
 80338fe:	f000 81e7 	beq.w	8033cd0 <UPG_MNGR_printOutStatistics+0xab8>
 8033902:	212f      	movs	r1, #47	; 0x2f
 8033904:	4883      	ldr	r0, [pc, #524]	; (8033b14 <UPG_MNGR_printOutStatistics+0x8fc>)
 8033906:	f00b fd2a 	bl	803f35e <strrchr>
 803390a:	1c41      	adds	r1, r0, #1
 803390c:	f89d 302f 	ldrb.w	r3, [sp, #47]	; 0x2f
 8033910:	9300      	str	r3, [sp, #0]
 8033912:	2002      	movs	r0, #2
 8033914:	4b86      	ldr	r3, [pc, #536]	; (8033b30 <UPG_MNGR_printOutStatistics+0x918>)
 8033916:	f240 42d4 	movw	r2, #1236	; 0x4d4
 803391a:	f7ee ff3d 	bl	8022798 <DEBUG_logMsg>
 803391e:	487d      	ldr	r0, [pc, #500]	; (8033b14 <UPG_MNGR_printOutStatistics+0x8fc>)
 8033920:	212f      	movs	r1, #47	; 0x2f
 8033922:	f00b fd1c 	bl	803f35e <strrchr>
 8033926:	2800      	cmp	r0, #0
 8033928:	f47f ad74 	bne.w	8033414 <UPG_MNGR_printOutStatistics+0x1fc>
 803392c:	4879      	ldr	r0, [pc, #484]	; (8033b14 <UPG_MNGR_printOutStatistics+0x8fc>)
 803392e:	215c      	movs	r1, #92	; 0x5c
 8033930:	f00b fd15 	bl	803f35e <strrchr>
 8033934:	2800      	cmp	r0, #0
 8033936:	f000 8178 	beq.w	8033c2a <UPG_MNGR_printOutStatistics+0xa12>
 803393a:	215c      	movs	r1, #92	; 0x5c
 803393c:	4875      	ldr	r0, [pc, #468]	; (8033b14 <UPG_MNGR_printOutStatistics+0x8fc>)
 803393e:	f00b fd0e 	bl	803f35e <strrchr>
 8033942:	1c41      	adds	r1, r0, #1
 8033944:	e56b      	b.n	803341e <UPG_MNGR_printOutStatistics+0x206>
 8033946:	a80a      	add	r0, sp, #40	; 0x28
 8033948:	f7f0 fdc8 	bl	80244dc <CDM_getFwVersion>
 803394c:	2800      	cmp	r0, #0
 803394e:	f43f ad5a 	beq.w	8033406 <UPG_MNGR_printOutStatistics+0x1ee>
 8033952:	e757      	b.n	8033804 <UPG_MNGR_printOutStatistics+0x5ec>
 8033954:	486f      	ldr	r0, [pc, #444]	; (8033b14 <UPG_MNGR_printOutStatistics+0x8fc>)
 8033956:	215c      	movs	r1, #92	; 0x5c
 8033958:	f00b fd01 	bl	803f35e <strrchr>
 803395c:	2800      	cmp	r0, #0
 803395e:	f000 816d 	beq.w	8033c3c <UPG_MNGR_printOutStatistics+0xa24>
 8033962:	215c      	movs	r1, #92	; 0x5c
 8033964:	486b      	ldr	r0, [pc, #428]	; (8033b14 <UPG_MNGR_printOutStatistics+0x8fc>)
 8033966:	f00b fcfa 	bl	803f35e <strrchr>
 803396a:	1c41      	adds	r1, r0, #1
 803396c:	e536      	b.n	80333dc <UPG_MNGR_printOutStatistics+0x1c4>
 803396e:	4869      	ldr	r0, [pc, #420]	; (8033b14 <UPG_MNGR_printOutStatistics+0x8fc>)
 8033970:	215c      	movs	r1, #92	; 0x5c
 8033972:	f00b fcf4 	bl	803f35e <strrchr>
 8033976:	2800      	cmp	r0, #0
 8033978:	f000 815d 	beq.w	8033c36 <UPG_MNGR_printOutStatistics+0xa1e>
 803397c:	215c      	movs	r1, #92	; 0x5c
 803397e:	4865      	ldr	r0, [pc, #404]	; (8033b14 <UPG_MNGR_printOutStatistics+0x8fc>)
 8033980:	f00b fced 	bl	803f35e <strrchr>
 8033984:	1c41      	adds	r1, r0, #1
 8033986:	e514      	b.n	80333b2 <UPG_MNGR_printOutStatistics+0x19a>
 8033988:	4862      	ldr	r0, [pc, #392]	; (8033b14 <UPG_MNGR_printOutStatistics+0x8fc>)
 803398a:	215c      	movs	r1, #92	; 0x5c
 803398c:	f00b fce7 	bl	803f35e <strrchr>
 8033990:	2800      	cmp	r0, #0
 8033992:	f000 814d 	beq.w	8033c30 <UPG_MNGR_printOutStatistics+0xa18>
 8033996:	215c      	movs	r1, #92	; 0x5c
 8033998:	485e      	ldr	r0, [pc, #376]	; (8033b14 <UPG_MNGR_printOutStatistics+0x8fc>)
 803399a:	f00b fce0 	bl	803f35e <strrchr>
 803399e:	1c41      	adds	r1, r0, #1
 80339a0:	e4f2      	b.n	8033388 <UPG_MNGR_printOutStatistics+0x170>
 80339a2:	485c      	ldr	r0, [pc, #368]	; (8033b14 <UPG_MNGR_printOutStatistics+0x8fc>)
 80339a4:	215c      	movs	r1, #92	; 0x5c
 80339a6:	f00b fcda 	bl	803f35e <strrchr>
 80339aa:	2800      	cmp	r0, #0
 80339ac:	f000 8152 	beq.w	8033c54 <UPG_MNGR_printOutStatistics+0xa3c>
 80339b0:	215c      	movs	r1, #92	; 0x5c
 80339b2:	4858      	ldr	r0, [pc, #352]	; (8033b14 <UPG_MNGR_printOutStatistics+0x8fc>)
 80339b4:	f00b fcd3 	bl	803f35e <strrchr>
 80339b8:	1c41      	adds	r1, r0, #1
 80339ba:	e4d0      	b.n	803335e <UPG_MNGR_printOutStatistics+0x146>
 80339bc:	4855      	ldr	r0, [pc, #340]	; (8033b14 <UPG_MNGR_printOutStatistics+0x8fc>)
 80339be:	215c      	movs	r1, #92	; 0x5c
 80339c0:	f00b fccd 	bl	803f35e <strrchr>
 80339c4:	2800      	cmp	r0, #0
 80339c6:	f000 8142 	beq.w	8033c4e <UPG_MNGR_printOutStatistics+0xa36>
 80339ca:	215c      	movs	r1, #92	; 0x5c
 80339cc:	4851      	ldr	r0, [pc, #324]	; (8033b14 <UPG_MNGR_printOutStatistics+0x8fc>)
 80339ce:	f00b fcc6 	bl	803f35e <strrchr>
 80339d2:	1c41      	adds	r1, r0, #1
 80339d4:	e4ad      	b.n	8033332 <UPG_MNGR_printOutStatistics+0x11a>
 80339d6:	484f      	ldr	r0, [pc, #316]	; (8033b14 <UPG_MNGR_printOutStatistics+0x8fc>)
 80339d8:	215c      	movs	r1, #92	; 0x5c
 80339da:	f00b fcc0 	bl	803f35e <strrchr>
 80339de:	2800      	cmp	r0, #0
 80339e0:	f000 8132 	beq.w	8033c48 <UPG_MNGR_printOutStatistics+0xa30>
 80339e4:	215c      	movs	r1, #92	; 0x5c
 80339e6:	484b      	ldr	r0, [pc, #300]	; (8033b14 <UPG_MNGR_printOutStatistics+0x8fc>)
 80339e8:	f00b fcb9 	bl	803f35e <strrchr>
 80339ec:	1c41      	adds	r1, r0, #1
 80339ee:	e48e      	b.n	803330e <UPG_MNGR_printOutStatistics+0xf6>
 80339f0:	4848      	ldr	r0, [pc, #288]	; (8033b14 <UPG_MNGR_printOutStatistics+0x8fc>)
 80339f2:	215c      	movs	r1, #92	; 0x5c
 80339f4:	f00b fcb3 	bl	803f35e <strrchr>
 80339f8:	2800      	cmp	r0, #0
 80339fa:	f000 8122 	beq.w	8033c42 <UPG_MNGR_printOutStatistics+0xa2a>
 80339fe:	215c      	movs	r1, #92	; 0x5c
 8033a00:	4844      	ldr	r0, [pc, #272]	; (8033b14 <UPG_MNGR_printOutStatistics+0x8fc>)
 8033a02:	f00b fcac 	bl	803f35e <strrchr>
 8033a06:	1c41      	adds	r1, r0, #1
 8033a08:	e46f      	b.n	80332ea <UPG_MNGR_printOutStatistics+0xd2>
 8033a0a:	4842      	ldr	r0, [pc, #264]	; (8033b14 <UPG_MNGR_printOutStatistics+0x8fc>)
 8033a0c:	215c      	movs	r1, #92	; 0x5c
 8033a0e:	f00b fca6 	bl	803f35e <strrchr>
 8033a12:	2800      	cmp	r0, #0
 8033a14:	f000 812a 	beq.w	8033c6c <UPG_MNGR_printOutStatistics+0xa54>
 8033a18:	215c      	movs	r1, #92	; 0x5c
 8033a1a:	483e      	ldr	r0, [pc, #248]	; (8033b14 <UPG_MNGR_printOutStatistics+0x8fc>)
 8033a1c:	f00b fc9f 	bl	803f35e <strrchr>
 8033a20:	1c41      	adds	r1, r0, #1
 8033a22:	e450      	b.n	80332c6 <UPG_MNGR_printOutStatistics+0xae>
 8033a24:	483b      	ldr	r0, [pc, #236]	; (8033b14 <UPG_MNGR_printOutStatistics+0x8fc>)
 8033a26:	215c      	movs	r1, #92	; 0x5c
 8033a28:	f00b fc99 	bl	803f35e <strrchr>
 8033a2c:	2800      	cmp	r0, #0
 8033a2e:	f000 811a 	beq.w	8033c66 <UPG_MNGR_printOutStatistics+0xa4e>
 8033a32:	215c      	movs	r1, #92	; 0x5c
 8033a34:	4837      	ldr	r0, [pc, #220]	; (8033b14 <UPG_MNGR_printOutStatistics+0x8fc>)
 8033a36:	f00b fc92 	bl	803f35e <strrchr>
 8033a3a:	1c41      	adds	r1, r0, #1
 8033a3c:	e431      	b.n	80332a2 <UPG_MNGR_printOutStatistics+0x8a>
 8033a3e:	4835      	ldr	r0, [pc, #212]	; (8033b14 <UPG_MNGR_printOutStatistics+0x8fc>)
 8033a40:	215c      	movs	r1, #92	; 0x5c
 8033a42:	f00b fc8c 	bl	803f35e <strrchr>
 8033a46:	2800      	cmp	r0, #0
 8033a48:	f000 810a 	beq.w	8033c60 <UPG_MNGR_printOutStatistics+0xa48>
 8033a4c:	215c      	movs	r1, #92	; 0x5c
 8033a4e:	4831      	ldr	r0, [pc, #196]	; (8033b14 <UPG_MNGR_printOutStatistics+0x8fc>)
 8033a50:	f00b fc85 	bl	803f35e <strrchr>
 8033a54:	1c41      	adds	r1, r0, #1
 8033a56:	e412      	b.n	803327e <UPG_MNGR_printOutStatistics+0x66>
 8033a58:	482e      	ldr	r0, [pc, #184]	; (8033b14 <UPG_MNGR_printOutStatistics+0x8fc>)
 8033a5a:	215c      	movs	r1, #92	; 0x5c
 8033a5c:	f00b fc7f 	bl	803f35e <strrchr>
 8033a60:	2800      	cmp	r0, #0
 8033a62:	f000 80fa 	beq.w	8033c5a <UPG_MNGR_printOutStatistics+0xa42>
 8033a66:	215c      	movs	r1, #92	; 0x5c
 8033a68:	482a      	ldr	r0, [pc, #168]	; (8033b14 <UPG_MNGR_printOutStatistics+0x8fc>)
 8033a6a:	f00b fc78 	bl	803f35e <strrchr>
 8033a6e:	1c41      	adds	r1, r0, #1
 8033a70:	f7ff bbf3 	b.w	803325a <UPG_MNGR_printOutStatistics+0x42>
 8033a74:	4827      	ldr	r0, [pc, #156]	; (8033b14 <UPG_MNGR_printOutStatistics+0x8fc>)
 8033a76:	215c      	movs	r1, #92	; 0x5c
 8033a78:	f00b fc71 	bl	803f35e <strrchr>
 8033a7c:	2800      	cmp	r0, #0
 8033a7e:	f000 8110 	beq.w	8033ca2 <UPG_MNGR_printOutStatistics+0xa8a>
 8033a82:	215c      	movs	r1, #92	; 0x5c
 8033a84:	4823      	ldr	r0, [pc, #140]	; (8033b14 <UPG_MNGR_printOutStatistics+0x8fc>)
 8033a86:	f00b fc6a 	bl	803f35e <strrchr>
 8033a8a:	1c41      	adds	r1, r0, #1
 8033a8c:	f7ff bbd3 	b.w	8033236 <UPG_MNGR_printOutStatistics+0x1e>
 8033a90:	4820      	ldr	r0, [pc, #128]	; (8033b14 <UPG_MNGR_printOutStatistics+0x8fc>)
 8033a92:	215c      	movs	r1, #92	; 0x5c
 8033a94:	f00b fc63 	bl	803f35e <strrchr>
 8033a98:	2800      	cmp	r0, #0
 8033a9a:	f000 8100 	beq.w	8033c9e <UPG_MNGR_printOutStatistics+0xa86>
 8033a9e:	215c      	movs	r1, #92	; 0x5c
 8033aa0:	481c      	ldr	r0, [pc, #112]	; (8033b14 <UPG_MNGR_printOutStatistics+0x8fc>)
 8033aa2:	f00b fc5c 	bl	803f35e <strrchr>
 8033aa6:	1c41      	adds	r1, r0, #1
 8033aa8:	e688      	b.n	80337bc <UPG_MNGR_printOutStatistics+0x5a4>
 8033aaa:	481a      	ldr	r0, [pc, #104]	; (8033b14 <UPG_MNGR_printOutStatistics+0x8fc>)
 8033aac:	215c      	movs	r1, #92	; 0x5c
 8033aae:	f00b fc56 	bl	803f35e <strrchr>
 8033ab2:	2800      	cmp	r0, #0
 8033ab4:	f000 80f1 	beq.w	8033c9a <UPG_MNGR_printOutStatistics+0xa82>
 8033ab8:	215c      	movs	r1, #92	; 0x5c
 8033aba:	4816      	ldr	r0, [pc, #88]	; (8033b14 <UPG_MNGR_printOutStatistics+0x8fc>)
 8033abc:	f00b fc4f 	bl	803f35e <strrchr>
 8033ac0:	1c41      	adds	r1, r0, #1
 8033ac2:	e669      	b.n	8033798 <UPG_MNGR_printOutStatistics+0x580>
 8033ac4:	4813      	ldr	r0, [pc, #76]	; (8033b14 <UPG_MNGR_printOutStatistics+0x8fc>)
 8033ac6:	215c      	movs	r1, #92	; 0x5c
 8033ac8:	f00b fc49 	bl	803f35e <strrchr>
 8033acc:	2800      	cmp	r0, #0
 8033ace:	f000 80e2 	beq.w	8033c96 <UPG_MNGR_printOutStatistics+0xa7e>
 8033ad2:	215c      	movs	r1, #92	; 0x5c
 8033ad4:	480f      	ldr	r0, [pc, #60]	; (8033b14 <UPG_MNGR_printOutStatistics+0x8fc>)
 8033ad6:	f00b fc42 	bl	803f35e <strrchr>
 8033ada:	1c41      	adds	r1, r0, #1
 8033adc:	e610      	b.n	8033700 <UPG_MNGR_printOutStatistics+0x4e8>
 8033ade:	480d      	ldr	r0, [pc, #52]	; (8033b14 <UPG_MNGR_printOutStatistics+0x8fc>)
 8033ae0:	215c      	movs	r1, #92	; 0x5c
 8033ae2:	f00b fc3c 	bl	803f35e <strrchr>
 8033ae6:	2800      	cmp	r0, #0
 8033ae8:	f000 80e4 	beq.w	8033cb4 <UPG_MNGR_printOutStatistics+0xa9c>
 8033aec:	215c      	movs	r1, #92	; 0x5c
 8033aee:	4809      	ldr	r0, [pc, #36]	; (8033b14 <UPG_MNGR_printOutStatistics+0x8fc>)
 8033af0:	f00b fc35 	bl	803f35e <strrchr>
 8033af4:	1c41      	adds	r1, r0, #1
 8033af6:	e5f1      	b.n	80336dc <UPG_MNGR_printOutStatistics+0x4c4>
 8033af8:	4806      	ldr	r0, [pc, #24]	; (8033b14 <UPG_MNGR_printOutStatistics+0x8fc>)
 8033afa:	215c      	movs	r1, #92	; 0x5c
 8033afc:	f00b fc2f 	bl	803f35e <strrchr>
 8033b00:	2800      	cmp	r0, #0
 8033b02:	f000 80d5 	beq.w	8033cb0 <UPG_MNGR_printOutStatistics+0xa98>
 8033b06:	215c      	movs	r1, #92	; 0x5c
 8033b08:	4802      	ldr	r0, [pc, #8]	; (8033b14 <UPG_MNGR_printOutStatistics+0x8fc>)
 8033b0a:	f00b fc28 	bl	803f35e <strrchr>
 8033b0e:	1c41      	adds	r1, r0, #1
 8033b10:	e5d2      	b.n	80336b8 <UPG_MNGR_printOutStatistics+0x4a0>
 8033b12:	bf00      	nop
 8033b14:	080480c8 	.word	0x080480c8
 8033b18:	0804823c 	.word	0x0804823c
 8033b1c:	080431bc 	.word	0x080431bc
 8033b20:	0804817c 	.word	0x0804817c
 8033b24:	08048188 	.word	0x08048188
 8033b28:	08048194 	.word	0x08048194
 8033b2c:	080481a0 	.word	0x080481a0
 8033b30:	080481ac 	.word	0x080481ac
 8033b34:	488f      	ldr	r0, [pc, #572]	; (8033d74 <UPG_MNGR_printOutStatistics+0xb5c>)
 8033b36:	215c      	movs	r1, #92	; 0x5c
 8033b38:	f00b fc11 	bl	803f35e <strrchr>
 8033b3c:	2800      	cmp	r0, #0
 8033b3e:	f000 80b5 	beq.w	8033cac <UPG_MNGR_printOutStatistics+0xa94>
 8033b42:	215c      	movs	r1, #92	; 0x5c
 8033b44:	488b      	ldr	r0, [pc, #556]	; (8033d74 <UPG_MNGR_printOutStatistics+0xb5c>)
 8033b46:	f00b fc0a 	bl	803f35e <strrchr>
 8033b4a:	1c41      	adds	r1, r0, #1
 8033b4c:	e5a2      	b.n	8033694 <UPG_MNGR_printOutStatistics+0x47c>
 8033b4e:	4889      	ldr	r0, [pc, #548]	; (8033d74 <UPG_MNGR_printOutStatistics+0xb5c>)
 8033b50:	215c      	movs	r1, #92	; 0x5c
 8033b52:	f00b fc04 	bl	803f35e <strrchr>
 8033b56:	2800      	cmp	r0, #0
 8033b58:	f000 80a6 	beq.w	8033ca8 <UPG_MNGR_printOutStatistics+0xa90>
 8033b5c:	215c      	movs	r1, #92	; 0x5c
 8033b5e:	4885      	ldr	r0, [pc, #532]	; (8033d74 <UPG_MNGR_printOutStatistics+0xb5c>)
 8033b60:	f00b fbfd 	bl	803f35e <strrchr>
 8033b64:	1c41      	adds	r1, r0, #1
 8033b66:	e583      	b.n	8033670 <UPG_MNGR_printOutStatistics+0x458>
 8033b68:	4882      	ldr	r0, [pc, #520]	; (8033d74 <UPG_MNGR_printOutStatistics+0xb5c>)
 8033b6a:	215c      	movs	r1, #92	; 0x5c
 8033b6c:	f00b fbf7 	bl	803f35e <strrchr>
 8033b70:	2800      	cmp	r0, #0
 8033b72:	f000 8084 	beq.w	8033c7e <UPG_MNGR_printOutStatistics+0xa66>
 8033b76:	487f      	ldr	r0, [pc, #508]	; (8033d74 <UPG_MNGR_printOutStatistics+0xb5c>)
 8033b78:	215c      	movs	r1, #92	; 0x5c
 8033b7a:	f00b fbf0 	bl	803f35e <strrchr>
 8033b7e:	1c44      	adds	r4, r0, #1
 8033b80:	e557      	b.n	8033632 <UPG_MNGR_printOutStatistics+0x41a>
 8033b82:	487c      	ldr	r0, [pc, #496]	; (8033d74 <UPG_MNGR_printOutStatistics+0xb5c>)
 8033b84:	215c      	movs	r1, #92	; 0x5c
 8033b86:	f00b fbea 	bl	803f35e <strrchr>
 8033b8a:	2800      	cmp	r0, #0
 8033b8c:	d075      	beq.n	8033c7a <UPG_MNGR_printOutStatistics+0xa62>
 8033b8e:	215c      	movs	r1, #92	; 0x5c
 8033b90:	4878      	ldr	r0, [pc, #480]	; (8033d74 <UPG_MNGR_printOutStatistics+0xb5c>)
 8033b92:	f00b fbe4 	bl	803f35e <strrchr>
 8033b96:	1c41      	adds	r1, r0, #1
 8033b98:	e539      	b.n	803360e <UPG_MNGR_printOutStatistics+0x3f6>
 8033b9a:	4876      	ldr	r0, [pc, #472]	; (8033d74 <UPG_MNGR_printOutStatistics+0xb5c>)
 8033b9c:	215c      	movs	r1, #92	; 0x5c
 8033b9e:	f00b fbde 	bl	803f35e <strrchr>
 8033ba2:	2800      	cmp	r0, #0
 8033ba4:	d067      	beq.n	8033c76 <UPG_MNGR_printOutStatistics+0xa5e>
 8033ba6:	215c      	movs	r1, #92	; 0x5c
 8033ba8:	4872      	ldr	r0, [pc, #456]	; (8033d74 <UPG_MNGR_printOutStatistics+0xb5c>)
 8033baa:	f00b fbd8 	bl	803f35e <strrchr>
 8033bae:	1c41      	adds	r1, r0, #1
 8033bb0:	e4ae      	b.n	8033510 <UPG_MNGR_printOutStatistics+0x2f8>
 8033bb2:	4870      	ldr	r0, [pc, #448]	; (8033d74 <UPG_MNGR_printOutStatistics+0xb5c>)
 8033bb4:	215c      	movs	r1, #92	; 0x5c
 8033bb6:	f00b fbd2 	bl	803f35e <strrchr>
 8033bba:	2800      	cmp	r0, #0
 8033bbc:	d059      	beq.n	8033c72 <UPG_MNGR_printOutStatistics+0xa5a>
 8033bbe:	215c      	movs	r1, #92	; 0x5c
 8033bc0:	486c      	ldr	r0, [pc, #432]	; (8033d74 <UPG_MNGR_printOutStatistics+0xb5c>)
 8033bc2:	f00b fbcc 	bl	803f35e <strrchr>
 8033bc6:	1c41      	adds	r1, r0, #1
 8033bc8:	e490      	b.n	80334ec <UPG_MNGR_printOutStatistics+0x2d4>
 8033bca:	486a      	ldr	r0, [pc, #424]	; (8033d74 <UPG_MNGR_printOutStatistics+0xb5c>)
 8033bcc:	215c      	movs	r1, #92	; 0x5c
 8033bce:	f00b fbc6 	bl	803f35e <strrchr>
 8033bd2:	2800      	cmp	r0, #0
 8033bd4:	d05d      	beq.n	8033c92 <UPG_MNGR_printOutStatistics+0xa7a>
 8033bd6:	215c      	movs	r1, #92	; 0x5c
 8033bd8:	4866      	ldr	r0, [pc, #408]	; (8033d74 <UPG_MNGR_printOutStatistics+0xb5c>)
 8033bda:	f00b fbc0 	bl	803f35e <strrchr>
 8033bde:	1c41      	adds	r1, r0, #1
 8033be0:	e472      	b.n	80334c8 <UPG_MNGR_printOutStatistics+0x2b0>
 8033be2:	4864      	ldr	r0, [pc, #400]	; (8033d74 <UPG_MNGR_printOutStatistics+0xb5c>)
 8033be4:	215c      	movs	r1, #92	; 0x5c
 8033be6:	f00b fbba 	bl	803f35e <strrchr>
 8033bea:	2800      	cmp	r0, #0
 8033bec:	d04f      	beq.n	8033c8e <UPG_MNGR_printOutStatistics+0xa76>
 8033bee:	215c      	movs	r1, #92	; 0x5c
 8033bf0:	4860      	ldr	r0, [pc, #384]	; (8033d74 <UPG_MNGR_printOutStatistics+0xb5c>)
 8033bf2:	f00b fbb4 	bl	803f35e <strrchr>
 8033bf6:	1c41      	adds	r1, r0, #1
 8033bf8:	e452      	b.n	80334a0 <UPG_MNGR_printOutStatistics+0x288>
 8033bfa:	485e      	ldr	r0, [pc, #376]	; (8033d74 <UPG_MNGR_printOutStatistics+0xb5c>)
 8033bfc:	215c      	movs	r1, #92	; 0x5c
 8033bfe:	f00b fbae 	bl	803f35e <strrchr>
 8033c02:	2800      	cmp	r0, #0
 8033c04:	d040      	beq.n	8033c88 <UPG_MNGR_printOutStatistics+0xa70>
 8033c06:	215c      	movs	r1, #92	; 0x5c
 8033c08:	485a      	ldr	r0, [pc, #360]	; (8033d74 <UPG_MNGR_printOutStatistics+0xb5c>)
 8033c0a:	f00b fba8 	bl	803f35e <strrchr>
 8033c0e:	1c41      	adds	r1, r0, #1
 8033c10:	e431      	b.n	8033476 <UPG_MNGR_printOutStatistics+0x25e>
 8033c12:	4858      	ldr	r0, [pc, #352]	; (8033d74 <UPG_MNGR_printOutStatistics+0xb5c>)
 8033c14:	215c      	movs	r1, #92	; 0x5c
 8033c16:	f00b fba2 	bl	803f35e <strrchr>
 8033c1a:	2800      	cmp	r0, #0
 8033c1c:	d031      	beq.n	8033c82 <UPG_MNGR_printOutStatistics+0xa6a>
 8033c1e:	215c      	movs	r1, #92	; 0x5c
 8033c20:	4854      	ldr	r0, [pc, #336]	; (8033d74 <UPG_MNGR_printOutStatistics+0xb5c>)
 8033c22:	f00b fb9c 	bl	803f35e <strrchr>
 8033c26:	1c41      	adds	r1, r0, #1
 8033c28:	e40b      	b.n	8033442 <UPG_MNGR_printOutStatistics+0x22a>
 8033c2a:	4952      	ldr	r1, [pc, #328]	; (8033d74 <UPG_MNGR_printOutStatistics+0xb5c>)
 8033c2c:	f7ff bbf7 	b.w	803341e <UPG_MNGR_printOutStatistics+0x206>
 8033c30:	4950      	ldr	r1, [pc, #320]	; (8033d74 <UPG_MNGR_printOutStatistics+0xb5c>)
 8033c32:	f7ff bba9 	b.w	8033388 <UPG_MNGR_printOutStatistics+0x170>
 8033c36:	494f      	ldr	r1, [pc, #316]	; (8033d74 <UPG_MNGR_printOutStatistics+0xb5c>)
 8033c38:	f7ff bbbb 	b.w	80333b2 <UPG_MNGR_printOutStatistics+0x19a>
 8033c3c:	494d      	ldr	r1, [pc, #308]	; (8033d74 <UPG_MNGR_printOutStatistics+0xb5c>)
 8033c3e:	f7ff bbcd 	b.w	80333dc <UPG_MNGR_printOutStatistics+0x1c4>
 8033c42:	494c      	ldr	r1, [pc, #304]	; (8033d74 <UPG_MNGR_printOutStatistics+0xb5c>)
 8033c44:	f7ff bb51 	b.w	80332ea <UPG_MNGR_printOutStatistics+0xd2>
 8033c48:	494a      	ldr	r1, [pc, #296]	; (8033d74 <UPG_MNGR_printOutStatistics+0xb5c>)
 8033c4a:	f7ff bb60 	b.w	803330e <UPG_MNGR_printOutStatistics+0xf6>
 8033c4e:	4949      	ldr	r1, [pc, #292]	; (8033d74 <UPG_MNGR_printOutStatistics+0xb5c>)
 8033c50:	f7ff bb6f 	b.w	8033332 <UPG_MNGR_printOutStatistics+0x11a>
 8033c54:	4947      	ldr	r1, [pc, #284]	; (8033d74 <UPG_MNGR_printOutStatistics+0xb5c>)
 8033c56:	f7ff bb82 	b.w	803335e <UPG_MNGR_printOutStatistics+0x146>
 8033c5a:	4946      	ldr	r1, [pc, #280]	; (8033d74 <UPG_MNGR_printOutStatistics+0xb5c>)
 8033c5c:	f7ff bafd 	b.w	803325a <UPG_MNGR_printOutStatistics+0x42>
 8033c60:	4944      	ldr	r1, [pc, #272]	; (8033d74 <UPG_MNGR_printOutStatistics+0xb5c>)
 8033c62:	f7ff bb0c 	b.w	803327e <UPG_MNGR_printOutStatistics+0x66>
 8033c66:	4943      	ldr	r1, [pc, #268]	; (8033d74 <UPG_MNGR_printOutStatistics+0xb5c>)
 8033c68:	f7ff bb1b 	b.w	80332a2 <UPG_MNGR_printOutStatistics+0x8a>
 8033c6c:	4941      	ldr	r1, [pc, #260]	; (8033d74 <UPG_MNGR_printOutStatistics+0xb5c>)
 8033c6e:	f7ff bb2a 	b.w	80332c6 <UPG_MNGR_printOutStatistics+0xae>
 8033c72:	4940      	ldr	r1, [pc, #256]	; (8033d74 <UPG_MNGR_printOutStatistics+0xb5c>)
 8033c74:	e43a      	b.n	80334ec <UPG_MNGR_printOutStatistics+0x2d4>
 8033c76:	493f      	ldr	r1, [pc, #252]	; (8033d74 <UPG_MNGR_printOutStatistics+0xb5c>)
 8033c78:	e44a      	b.n	8033510 <UPG_MNGR_printOutStatistics+0x2f8>
 8033c7a:	493e      	ldr	r1, [pc, #248]	; (8033d74 <UPG_MNGR_printOutStatistics+0xb5c>)
 8033c7c:	e4c7      	b.n	803360e <UPG_MNGR_printOutStatistics+0x3f6>
 8033c7e:	4c3d      	ldr	r4, [pc, #244]	; (8033d74 <UPG_MNGR_printOutStatistics+0xb5c>)
 8033c80:	e4d7      	b.n	8033632 <UPG_MNGR_printOutStatistics+0x41a>
 8033c82:	493c      	ldr	r1, [pc, #240]	; (8033d74 <UPG_MNGR_printOutStatistics+0xb5c>)
 8033c84:	f7ff bbdd 	b.w	8033442 <UPG_MNGR_printOutStatistics+0x22a>
 8033c88:	493a      	ldr	r1, [pc, #232]	; (8033d74 <UPG_MNGR_printOutStatistics+0xb5c>)
 8033c8a:	f7ff bbf4 	b.w	8033476 <UPG_MNGR_printOutStatistics+0x25e>
 8033c8e:	4939      	ldr	r1, [pc, #228]	; (8033d74 <UPG_MNGR_printOutStatistics+0xb5c>)
 8033c90:	e406      	b.n	80334a0 <UPG_MNGR_printOutStatistics+0x288>
 8033c92:	4938      	ldr	r1, [pc, #224]	; (8033d74 <UPG_MNGR_printOutStatistics+0xb5c>)
 8033c94:	e418      	b.n	80334c8 <UPG_MNGR_printOutStatistics+0x2b0>
 8033c96:	4937      	ldr	r1, [pc, #220]	; (8033d74 <UPG_MNGR_printOutStatistics+0xb5c>)
 8033c98:	e532      	b.n	8033700 <UPG_MNGR_printOutStatistics+0x4e8>
 8033c9a:	4936      	ldr	r1, [pc, #216]	; (8033d74 <UPG_MNGR_printOutStatistics+0xb5c>)
 8033c9c:	e57c      	b.n	8033798 <UPG_MNGR_printOutStatistics+0x580>
 8033c9e:	4935      	ldr	r1, [pc, #212]	; (8033d74 <UPG_MNGR_printOutStatistics+0xb5c>)
 8033ca0:	e58c      	b.n	80337bc <UPG_MNGR_printOutStatistics+0x5a4>
 8033ca2:	4934      	ldr	r1, [pc, #208]	; (8033d74 <UPG_MNGR_printOutStatistics+0xb5c>)
 8033ca4:	f7ff bac7 	b.w	8033236 <UPG_MNGR_printOutStatistics+0x1e>
 8033ca8:	4932      	ldr	r1, [pc, #200]	; (8033d74 <UPG_MNGR_printOutStatistics+0xb5c>)
 8033caa:	e4e1      	b.n	8033670 <UPG_MNGR_printOutStatistics+0x458>
 8033cac:	4931      	ldr	r1, [pc, #196]	; (8033d74 <UPG_MNGR_printOutStatistics+0xb5c>)
 8033cae:	e4f1      	b.n	8033694 <UPG_MNGR_printOutStatistics+0x47c>
 8033cb0:	4930      	ldr	r1, [pc, #192]	; (8033d74 <UPG_MNGR_printOutStatistics+0xb5c>)
 8033cb2:	e501      	b.n	80336b8 <UPG_MNGR_printOutStatistics+0x4a0>
 8033cb4:	492f      	ldr	r1, [pc, #188]	; (8033d74 <UPG_MNGR_printOutStatistics+0xb5c>)
 8033cb6:	e511      	b.n	80336dc <UPG_MNGR_printOutStatistics+0x4c4>
 8033cb8:	482e      	ldr	r0, [pc, #184]	; (8033d74 <UPG_MNGR_printOutStatistics+0xb5c>)
 8033cba:	215c      	movs	r1, #92	; 0x5c
 8033cbc:	f00b fb4f 	bl	803f35e <strrchr>
 8033cc0:	2800      	cmp	r0, #0
 8033cc2:	d04d      	beq.n	8033d60 <UPG_MNGR_printOutStatistics+0xb48>
 8033cc4:	215c      	movs	r1, #92	; 0x5c
 8033cc6:	482b      	ldr	r0, [pc, #172]	; (8033d74 <UPG_MNGR_printOutStatistics+0xb5c>)
 8033cc8:	f00b fb49 	bl	803f35e <strrchr>
 8033ccc:	1c41      	adds	r1, r0, #1
 8033cce:	e5a5      	b.n	803381c <UPG_MNGR_printOutStatistics+0x604>
 8033cd0:	4828      	ldr	r0, [pc, #160]	; (8033d74 <UPG_MNGR_printOutStatistics+0xb5c>)
 8033cd2:	215c      	movs	r1, #92	; 0x5c
 8033cd4:	f00b fb43 	bl	803f35e <strrchr>
 8033cd8:	2800      	cmp	r0, #0
 8033cda:	d03f      	beq.n	8033d5c <UPG_MNGR_printOutStatistics+0xb44>
 8033cdc:	215c      	movs	r1, #92	; 0x5c
 8033cde:	4825      	ldr	r0, [pc, #148]	; (8033d74 <UPG_MNGR_printOutStatistics+0xb5c>)
 8033ce0:	f00b fb3d 	bl	803f35e <strrchr>
 8033ce4:	1c41      	adds	r1, r0, #1
 8033ce6:	e611      	b.n	803390c <UPG_MNGR_printOutStatistics+0x6f4>
 8033ce8:	4822      	ldr	r0, [pc, #136]	; (8033d74 <UPG_MNGR_printOutStatistics+0xb5c>)
 8033cea:	215c      	movs	r1, #92	; 0x5c
 8033cec:	f00b fb37 	bl	803f35e <strrchr>
 8033cf0:	2800      	cmp	r0, #0
 8033cf2:	d03d      	beq.n	8033d70 <UPG_MNGR_printOutStatistics+0xb58>
 8033cf4:	215c      	movs	r1, #92	; 0x5c
 8033cf6:	481f      	ldr	r0, [pc, #124]	; (8033d74 <UPG_MNGR_printOutStatistics+0xb5c>)
 8033cf8:	f00b fb31 	bl	803f35e <strrchr>
 8033cfc:	1c41      	adds	r1, r0, #1
 8033cfe:	e5f0      	b.n	80338e2 <UPG_MNGR_printOutStatistics+0x6ca>
 8033d00:	481c      	ldr	r0, [pc, #112]	; (8033d74 <UPG_MNGR_printOutStatistics+0xb5c>)
 8033d02:	215c      	movs	r1, #92	; 0x5c
 8033d04:	f00b fb2b 	bl	803f35e <strrchr>
 8033d08:	b380      	cbz	r0, 8033d6c <UPG_MNGR_printOutStatistics+0xb54>
 8033d0a:	215c      	movs	r1, #92	; 0x5c
 8033d0c:	4819      	ldr	r0, [pc, #100]	; (8033d74 <UPG_MNGR_printOutStatistics+0xb5c>)
 8033d0e:	f00b fb26 	bl	803f35e <strrchr>
 8033d12:	1c41      	adds	r1, r0, #1
 8033d14:	e5d0      	b.n	80338b8 <UPG_MNGR_printOutStatistics+0x6a0>
 8033d16:	4817      	ldr	r0, [pc, #92]	; (8033d74 <UPG_MNGR_printOutStatistics+0xb5c>)
 8033d18:	215c      	movs	r1, #92	; 0x5c
 8033d1a:	f00b fb20 	bl	803f35e <strrchr>
 8033d1e:	b318      	cbz	r0, 8033d68 <UPG_MNGR_printOutStatistics+0xb50>
 8033d20:	215c      	movs	r1, #92	; 0x5c
 8033d22:	4814      	ldr	r0, [pc, #80]	; (8033d74 <UPG_MNGR_printOutStatistics+0xb5c>)
 8033d24:	f00b fb1b 	bl	803f35e <strrchr>
 8033d28:	1c41      	adds	r1, r0, #1
 8033d2a:	e5b0      	b.n	803388e <UPG_MNGR_printOutStatistics+0x676>
 8033d2c:	4811      	ldr	r0, [pc, #68]	; (8033d74 <UPG_MNGR_printOutStatistics+0xb5c>)
 8033d2e:	215c      	movs	r1, #92	; 0x5c
 8033d30:	f00b fb15 	bl	803f35e <strrchr>
 8033d34:	b1b0      	cbz	r0, 8033d64 <UPG_MNGR_printOutStatistics+0xb4c>
 8033d36:	215c      	movs	r1, #92	; 0x5c
 8033d38:	480e      	ldr	r0, [pc, #56]	; (8033d74 <UPG_MNGR_printOutStatistics+0xb5c>)
 8033d3a:	f00b fb10 	bl	803f35e <strrchr>
 8033d3e:	1c41      	adds	r1, r0, #1
 8033d40:	e590      	b.n	8033864 <UPG_MNGR_printOutStatistics+0x64c>
 8033d42:	480c      	ldr	r0, [pc, #48]	; (8033d74 <UPG_MNGR_printOutStatistics+0xb5c>)
 8033d44:	215c      	movs	r1, #92	; 0x5c
 8033d46:	f00b fb0a 	bl	803f35e <strrchr>
 8033d4a:	b128      	cbz	r0, 8033d58 <UPG_MNGR_printOutStatistics+0xb40>
 8033d4c:	215c      	movs	r1, #92	; 0x5c
 8033d4e:	4809      	ldr	r0, [pc, #36]	; (8033d74 <UPG_MNGR_printOutStatistics+0xb5c>)
 8033d50:	f00b fb05 	bl	803f35e <strrchr>
 8033d54:	1c41      	adds	r1, r0, #1
 8033d56:	e573      	b.n	8033840 <UPG_MNGR_printOutStatistics+0x628>
 8033d58:	4906      	ldr	r1, [pc, #24]	; (8033d74 <UPG_MNGR_printOutStatistics+0xb5c>)
 8033d5a:	e571      	b.n	8033840 <UPG_MNGR_printOutStatistics+0x628>
 8033d5c:	4905      	ldr	r1, [pc, #20]	; (8033d74 <UPG_MNGR_printOutStatistics+0xb5c>)
 8033d5e:	e5d5      	b.n	803390c <UPG_MNGR_printOutStatistics+0x6f4>
 8033d60:	4904      	ldr	r1, [pc, #16]	; (8033d74 <UPG_MNGR_printOutStatistics+0xb5c>)
 8033d62:	e55b      	b.n	803381c <UPG_MNGR_printOutStatistics+0x604>
 8033d64:	4903      	ldr	r1, [pc, #12]	; (8033d74 <UPG_MNGR_printOutStatistics+0xb5c>)
 8033d66:	e57d      	b.n	8033864 <UPG_MNGR_printOutStatistics+0x64c>
 8033d68:	4902      	ldr	r1, [pc, #8]	; (8033d74 <UPG_MNGR_printOutStatistics+0xb5c>)
 8033d6a:	e590      	b.n	803388e <UPG_MNGR_printOutStatistics+0x676>
 8033d6c:	4901      	ldr	r1, [pc, #4]	; (8033d74 <UPG_MNGR_printOutStatistics+0xb5c>)
 8033d6e:	e5a3      	b.n	80338b8 <UPG_MNGR_printOutStatistics+0x6a0>
 8033d70:	4900      	ldr	r1, [pc, #0]	; (8033d74 <UPG_MNGR_printOutStatistics+0xb5c>)
 8033d72:	e5b6      	b.n	80338e2 <UPG_MNGR_printOutStatistics+0x6ca>
 8033d74:	080480c8 	.word	0x080480c8

08033d78 <statusLed_timerCallback(unsigned int, void*)>:
 8033d78:	b570      	push	{r4, r5, r6, lr}
 8033d7a:	2002      	movs	r0, #2
 8033d7c:	b082      	sub	sp, #8
 8033d7e:	f7f0 fa19 	bl	80241b4 <CCP_getMirrorData>
 8033d82:	4c31      	ldr	r4, [pc, #196]	; (8033e48 <statusLed_timerCallback(unsigned int, void*)+0xd0>)
 8033d84:	4606      	mov	r6, r0
 8033d86:	2001      	movs	r0, #1
 8033d88:	f7f0 fa14 	bl	80241b4 <CCP_getMirrorData>
 8033d8c:	7823      	ldrb	r3, [r4, #0]
 8033d8e:	4605      	mov	r5, r0
 8033d90:	2b00      	cmp	r3, #0
 8033d92:	d136      	bne.n	8033e02 <statusLed_timerCallback(unsigned int, void*)+0x8a>
 8033d94:	4b2d      	ldr	r3, [pc, #180]	; (8033e4c <statusLed_timerCallback(unsigned int, void*)+0xd4>)
 8033d96:	781b      	ldrb	r3, [r3, #0]
 8033d98:	b30b      	cbz	r3, 8033dde <statusLed_timerCallback(unsigned int, void*)+0x66>
 8033d9a:	4b2d      	ldr	r3, [pc, #180]	; (8033e50 <statusLed_timerCallback(unsigned int, void*)+0xd8>)
 8033d9c:	785b      	ldrb	r3, [r3, #1]
 8033d9e:	bb13      	cbnz	r3, 8033de6 <statusLed_timerCallback(unsigned int, void*)+0x6e>
 8033da0:	2564      	movs	r5, #100	; 0x64
 8033da2:	2055      	movs	r0, #85	; 0x55
 8033da4:	4c2b      	ldr	r4, [pc, #172]	; (8033e54 <statusLed_timerCallback(unsigned int, void*)+0xdc>)
 8033da6:	4a2c      	ldr	r2, [pc, #176]	; (8033e58 <statusLed_timerCallback(unsigned int, void*)+0xe0>)
 8033da8:	8823      	ldrh	r3, [r4, #0]
 8033daa:	7811      	ldrb	r1, [r2, #0]
 8033dac:	3b01      	subs	r3, #1
 8033dae:	b21b      	sxth	r3, r3
 8033db0:	4281      	cmp	r1, r0
 8033db2:	8023      	strh	r3, [r4, #0]
 8033db4:	4929      	ldr	r1, [pc, #164]	; (8033e5c <statusLed_timerCallback(unsigned int, void*)+0xe4>)
 8033db6:	d102      	bne.n	8033dbe <statusLed_timerCallback(unsigned int, void*)+0x46>
 8033db8:	780e      	ldrb	r6, [r1, #0]
 8033dba:	42ae      	cmp	r6, r5
 8033dbc:	d02f      	beq.n	8033e1e <statusLed_timerCallback(unsigned int, void*)+0xa6>
 8033dbe:	f44f 7334 	mov.w	r3, #720	; 0x2d0
 8033dc2:	7010      	strb	r0, [r2, #0]
 8033dc4:	700d      	strb	r5, [r1, #0]
 8033dc6:	f88d 0004 	strb.w	r0, [sp, #4]
 8033dca:	2202      	movs	r2, #2
 8033dcc:	a901      	add	r1, sp, #4
 8033dce:	2017      	movs	r0, #23
 8033dd0:	f88d 5005 	strb.w	r5, [sp, #5]
 8033dd4:	8023      	strh	r3, [r4, #0]
 8033dd6:	f7f0 fb59 	bl	802448c <CDM_sendDevMulticast>
 8033dda:	b002      	add	sp, #8
 8033ddc:	bd70      	pop	{r4, r5, r6, pc}
 8033dde:	4a1d      	ldr	r2, [pc, #116]	; (8033e54 <statusLed_timerCallback(unsigned int, void*)+0xdc>)
 8033de0:	8013      	strh	r3, [r2, #0]
 8033de2:	b002      	add	sp, #8
 8033de4:	bd70      	pop	{r4, r5, r6, pc}
 8033de6:	4b1e      	ldr	r3, [pc, #120]	; (8033e60 <statusLed_timerCallback(unsigned int, void*)+0xe8>)
 8033de8:	781b      	ldrb	r3, [r3, #0]
 8033dea:	b993      	cbnz	r3, 8033e12 <statusLed_timerCallback(unsigned int, void*)+0x9a>
 8033dec:	b9d6      	cbnz	r6, 8033e24 <statusLed_timerCallback(unsigned int, void*)+0xac>
 8033dee:	b345      	cbz	r5, 8033e42 <statusLed_timerCallback(unsigned int, void*)+0xca>
 8033df0:	4b1c      	ldr	r3, [pc, #112]	; (8033e64 <statusLed_timerCallback(unsigned int, void*)+0xec>)
 8033df2:	781b      	ldrb	r3, [r3, #0]
 8033df4:	2b00      	cmp	r3, #0
 8033df6:	bf0b      	itete	eq
 8033df8:	2564      	moveq	r5, #100	; 0x64
 8033dfa:	257d      	movne	r5, #125	; 0x7d
 8033dfc:	20aa      	moveq	r0, #170	; 0xaa
 8033dfe:	2088      	movne	r0, #136	; 0x88
 8033e00:	e7d0      	b.n	8033da4 <statusLed_timerCallback(unsigned int, void*)+0x2c>
 8033e02:	2200      	movs	r2, #0
 8033e04:	4611      	mov	r1, r2
 8033e06:	201b      	movs	r0, #27
 8033e08:	f7f0 fb40 	bl	802448c <CDM_sendDevMulticast>
 8033e0c:	2300      	movs	r3, #0
 8033e0e:	7023      	strb	r3, [r4, #0]
 8033e10:	e7c0      	b.n	8033d94 <statusLed_timerCallback(unsigned int, void*)+0x1c>
 8033e12:	2d00      	cmp	r5, #0
 8033e14:	bf14      	ite	ne
 8033e16:	257d      	movne	r5, #125	; 0x7d
 8033e18:	2524      	moveq	r5, #36	; 0x24
 8033e1a:	2044      	movs	r0, #68	; 0x44
 8033e1c:	e7c2      	b.n	8033da4 <statusLed_timerCallback(unsigned int, void*)+0x2c>
 8033e1e:	2b00      	cmp	r3, #0
 8033e20:	dcdf      	bgt.n	8033de2 <statusLed_timerCallback(unsigned int, void*)+0x6a>
 8033e22:	e7cc      	b.n	8033dbe <statusLed_timerCallback(unsigned int, void*)+0x46>
 8033e24:	4b10      	ldr	r3, [pc, #64]	; (8033e68 <statusLed_timerCallback(unsigned int, void*)+0xf0>)
 8033e26:	781b      	ldrb	r3, [r3, #0]
 8033e28:	b113      	cbz	r3, 8033e30 <statusLed_timerCallback(unsigned int, void*)+0xb8>
 8033e2a:	2524      	movs	r5, #36	; 0x24
 8033e2c:	20cc      	movs	r0, #204	; 0xcc
 8033e2e:	e7b9      	b.n	8033da4 <statusLed_timerCallback(unsigned int, void*)+0x2c>
 8033e30:	4b0c      	ldr	r3, [pc, #48]	; (8033e64 <statusLed_timerCallback(unsigned int, void*)+0xec>)
 8033e32:	781b      	ldrb	r3, [r3, #0]
 8033e34:	2b00      	cmp	r3, #0
 8033e36:	bf15      	itete	ne
 8033e38:	257d      	movne	r5, #125	; 0x7d
 8033e3a:	2564      	moveq	r5, #100	; 0x64
 8033e3c:	20cc      	movne	r0, #204	; 0xcc
 8033e3e:	20ff      	moveq	r0, #255	; 0xff
 8033e40:	e7b0      	b.n	8033da4 <statusLed_timerCallback(unsigned int, void*)+0x2c>
 8033e42:	2524      	movs	r5, #36	; 0x24
 8033e44:	2088      	movs	r0, #136	; 0x88
 8033e46:	e7ad      	b.n	8033da4 <statusLed_timerCallback(unsigned int, void*)+0x2c>
 8033e48:	2000216c 	.word	0x2000216c
 8033e4c:	2000216d 	.word	0x2000216d
 8033e50:	2000b314 	.word	0x2000b314
 8033e54:	2000e484 	.word	0x2000e484
 8033e58:	2000e486 	.word	0x2000e486
 8033e5c:	2000e487 	.word	0x2000e487
 8033e60:	2000e481 	.word	0x2000e481
 8033e64:	2000e482 	.word	0x2000e482
 8033e68:	2000e480 	.word	0x2000e480

08033e6c <STATUSLED_autoUpdateInitialize>:
 8033e6c:	4902      	ldr	r1, [pc, #8]	; (8033e78 <STATUSLED_autoUpdateInitialize+0xc>)
 8033e6e:	2301      	movs	r3, #1
 8033e70:	2200      	movs	r2, #0
 8033e72:	20fa      	movs	r0, #250	; 0xfa
 8033e74:	f7f9 ba2a 	b.w	802d2cc <TIME_setTimeout>
 8033e78:	08033d79 	.word	0x08033d79

08033e7c <STATUSLED_autoUpdateEnable>:
 8033e7c:	4b01      	ldr	r3, [pc, #4]	; (8033e84 <STATUSLED_autoUpdateEnable+0x8>)
 8033e7e:	7018      	strb	r0, [r3, #0]
 8033e80:	4770      	bx	lr
 8033e82:	bf00      	nop
 8033e84:	2000216d 	.word	0x2000216d

08033e88 <STATUSLED_IsAutoUpdateEnabled>:
 8033e88:	4b01      	ldr	r3, [pc, #4]	; (8033e90 <STATUSLED_IsAutoUpdateEnabled+0x8>)
 8033e8a:	7818      	ldrb	r0, [r3, #0]
 8033e8c:	4770      	bx	lr
 8033e8e:	bf00      	nop
 8033e90:	2000216d 	.word	0x2000216d
 8033e94:	00000000 	.word	0x00000000

08033e98 <AXIS_loadYWheelDiameter()>:
 8033e98:	b570      	push	{r4, r5, r6, lr}
 8033e9a:	ed2d 8b02 	vpush	{d8}
 8033e9e:	b084      	sub	sp, #16
 8033ea0:	4949      	ldr	r1, [pc, #292]	; (8033fc8 <AXIS_loadYWheelDiameter()+0x130>)
 8033ea2:	484a      	ldr	r0, [pc, #296]	; (8033fcc <AXIS_loadYWheelDiameter()+0x134>)
 8033ea4:	2304      	movs	r3, #4
 8033ea6:	aa03      	add	r2, sp, #12
 8033ea8:	f7fd fc56 	bl	8031758 <NVM_load>
 8033eac:	2802      	cmp	r0, #2
 8033eae:	d034      	beq.n	8033f1a <AXIS_loadYWheelDiameter()+0x82>
 8033eb0:	ed9d 6a03 	vldr	s12, [sp, #12]
 8033eb4:	ed9f 7a46 	vldr	s14, [pc, #280]	; 8033fd0 <AXIS_loadYWheelDiameter()+0x138>
 8033eb8:	eddf 7a46 	vldr	s15, [pc, #280]	; 8033fd4 <AXIS_loadYWheelDiameter()+0x13c>
 8033ebc:	4846      	ldr	r0, [pc, #280]	; (8033fd8 <AXIS_loadYWheelDiameter()+0x140>)
 8033ebe:	eef7 5a00 	vmov.f32	s11, #112	; 0x3f800000  1.0
 8033ec2:	eec5 6a86 	vdiv.f32	s13, s11, s12
 8033ec6:	212f      	movs	r1, #47	; 0x2f
 8033ec8:	ee86 8a87 	vdiv.f32	s16, s13, s14
 8033ecc:	ee28 8a27 	vmul.f32	s16, s16, s15
 8033ed0:	f00b fa45 	bl	803f35e <strrchr>
 8033ed4:	2800      	cmp	r0, #0
 8033ed6:	d043      	beq.n	8033f60 <AXIS_loadYWheelDiameter()+0xc8>
 8033ed8:	483f      	ldr	r0, [pc, #252]	; (8033fd8 <AXIS_loadYWheelDiameter()+0x140>)
 8033eda:	212f      	movs	r1, #47	; 0x2f
 8033edc:	f00b fa3f 	bl	803f35e <strrchr>
 8033ee0:	1c46      	adds	r6, r0, #1
 8033ee2:	ee18 0a10 	vmov	r0, s16
 8033ee6:	f00a fab8 	bl	803e45a <__aeabi_f2d>
 8033eea:	4604      	mov	r4, r0
 8033eec:	460d      	mov	r5, r1
 8033eee:	e9cd 4500 	strd	r4, r5, [sp]
 8033ef2:	4b3a      	ldr	r3, [pc, #232]	; (8033fdc <AXIS_loadYWheelDiameter()+0x144>)
 8033ef4:	4631      	mov	r1, r6
 8033ef6:	f240 129d 	movw	r2, #413	; 0x19d
 8033efa:	2002      	movs	r0, #2
 8033efc:	f7ee fc4c 	bl	8022798 <DEBUG_logMsg>
 8033f00:	eddf 7a37 	vldr	s15, [pc, #220]	; 8033fe0 <AXIS_loadYWheelDiameter()+0x148>
 8033f04:	eeb4 8ae7 	vcmpe.f32	s16, s15
 8033f08:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8033f0c:	d81b      	bhi.n	8033f46 <AXIS_loadYWheelDiameter()+0xae>
 8033f0e:	ed9f 0a35 	vldr	s0, [pc, #212]	; 8033fe4 <AXIS_loadYWheelDiameter()+0x14c>
 8033f12:	b004      	add	sp, #16
 8033f14:	ecbd 8b02 	vpop	{d8}
 8033f18:	bd70      	pop	{r4, r5, r6, pc}
 8033f1a:	482f      	ldr	r0, [pc, #188]	; (8033fd8 <AXIS_loadYWheelDiameter()+0x140>)
 8033f1c:	212f      	movs	r1, #47	; 0x2f
 8033f1e:	f00b fa1e 	bl	803f35e <strrchr>
 8033f22:	b340      	cbz	r0, 8033f76 <AXIS_loadYWheelDiameter()+0xde>
 8033f24:	212f      	movs	r1, #47	; 0x2f
 8033f26:	482c      	ldr	r0, [pc, #176]	; (8033fd8 <AXIS_loadYWheelDiameter()+0x140>)
 8033f28:	f00b fa19 	bl	803f35e <strrchr>
 8033f2c:	1c41      	adds	r1, r0, #1
 8033f2e:	4b2e      	ldr	r3, [pc, #184]	; (8033fe8 <AXIS_loadYWheelDiameter()+0x150>)
 8033f30:	f240 1297 	movw	r2, #407	; 0x197
 8033f34:	2001      	movs	r0, #1
 8033f36:	f7ee fc2f 	bl	8022798 <DEBUG_logMsg>
 8033f3a:	ed9f 0a2c 	vldr	s0, [pc, #176]	; 8033fec <AXIS_loadYWheelDiameter()+0x154>
 8033f3e:	b004      	add	sp, #16
 8033f40:	ecbd 8b02 	vpop	{d8}
 8033f44:	bd70      	pop	{r4, r5, r6, pc}
 8033f46:	eddf 7a2a 	vldr	s15, [pc, #168]	; 8033ff0 <AXIS_loadYWheelDiameter()+0x158>
 8033f4a:	eeb4 8ae7 	vcmpe.f32	s16, s15
 8033f4e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8033f52:	db1f      	blt.n	8033f94 <AXIS_loadYWheelDiameter()+0xfc>
 8033f54:	ed9f 0a27 	vldr	s0, [pc, #156]	; 8033ff4 <AXIS_loadYWheelDiameter()+0x15c>
 8033f58:	b004      	add	sp, #16
 8033f5a:	ecbd 8b02 	vpop	{d8}
 8033f5e:	bd70      	pop	{r4, r5, r6, pc}
 8033f60:	481d      	ldr	r0, [pc, #116]	; (8033fd8 <AXIS_loadYWheelDiameter()+0x140>)
 8033f62:	215c      	movs	r1, #92	; 0x5c
 8033f64:	f00b f9fb 	bl	803f35e <strrchr>
 8033f68:	b180      	cbz	r0, 8033f8c <AXIS_loadYWheelDiameter()+0xf4>
 8033f6a:	481b      	ldr	r0, [pc, #108]	; (8033fd8 <AXIS_loadYWheelDiameter()+0x140>)
 8033f6c:	215c      	movs	r1, #92	; 0x5c
 8033f6e:	f00b f9f6 	bl	803f35e <strrchr>
 8033f72:	1c46      	adds	r6, r0, #1
 8033f74:	e7b5      	b.n	8033ee2 <AXIS_loadYWheelDiameter()+0x4a>
 8033f76:	4818      	ldr	r0, [pc, #96]	; (8033fd8 <AXIS_loadYWheelDiameter()+0x140>)
 8033f78:	215c      	movs	r1, #92	; 0x5c
 8033f7a:	f00b f9f0 	bl	803f35e <strrchr>
 8033f7e:	b138      	cbz	r0, 8033f90 <AXIS_loadYWheelDiameter()+0xf8>
 8033f80:	215c      	movs	r1, #92	; 0x5c
 8033f82:	4815      	ldr	r0, [pc, #84]	; (8033fd8 <AXIS_loadYWheelDiameter()+0x140>)
 8033f84:	f00b f9eb 	bl	803f35e <strrchr>
 8033f88:	1c41      	adds	r1, r0, #1
 8033f8a:	e7d0      	b.n	8033f2e <AXIS_loadYWheelDiameter()+0x96>
 8033f8c:	4e12      	ldr	r6, [pc, #72]	; (8033fd8 <AXIS_loadYWheelDiameter()+0x140>)
 8033f8e:	e7a8      	b.n	8033ee2 <AXIS_loadYWheelDiameter()+0x4a>
 8033f90:	4911      	ldr	r1, [pc, #68]	; (8033fd8 <AXIS_loadYWheelDiameter()+0x140>)
 8033f92:	e7cc      	b.n	8033f2e <AXIS_loadYWheelDiameter()+0x96>
 8033f94:	4b18      	ldr	r3, [pc, #96]	; (8033ff8 <AXIS_loadYWheelDiameter()+0x160>)
 8033f96:	2200      	movs	r2, #0
 8033f98:	4620      	mov	r0, r4
 8033f9a:	4629      	mov	r1, r5
 8033f9c:	f00a fb66 	bl	803e66c <__aeabi_ddiv>
 8033fa0:	a307      	add	r3, pc, #28	; (adr r3, 8033fc0 <AXIS_loadYWheelDiameter()+0x128>)
 8033fa2:	e9d3 2300 	ldrd	r2, r3, [r3]
 8033fa6:	f00a faab 	bl	803e500 <__aeabi_dmul>
 8033faa:	4602      	mov	r2, r0
 8033fac:	460b      	mov	r3, r1
 8033fae:	2000      	movs	r0, #0
 8033fb0:	4912      	ldr	r1, [pc, #72]	; (8033ffc <AXIS_loadYWheelDiameter()+0x164>)
 8033fb2:	f00a fb5b 	bl	803e66c <__aeabi_ddiv>
 8033fb6:	f00a fa6c 	bl	803e492 <__aeabi_d2f>
 8033fba:	ee00 0a10 	vmov	s0, r0
 8033fbe:	e7a8      	b.n	8033f12 <AXIS_loadYWheelDiameter()+0x7a>
 8033fc0:	60000000 	.word	0x60000000
 8033fc4:	400921fb 	.word	0x400921fb
 8033fc8:	08042a14 	.word	0x08042a14
 8033fcc:	2000de14 	.word	0x2000de14
 8033fd0:	40490fdb 	.word	0x40490fdb
 8033fd4:	447a0000 	.word	0x447a0000
 8033fd8:	08048420 	.word	0x08048420
 8033fdc:	08048484 	.word	0x08048484
 8033fe0:	42de0000 	.word	0x42de0000
 8033fe4:	403787af 	.word	0x403787af
 8033fe8:	08048468 	.word	0x08048468
 8033fec:	4035153c 	.word	0x4035153c
 8033ff0:	42e40000 	.word	0x42e40000
 8033ff4:	4032b346 	.word	0x4032b346
 8033ff8:	408f4000 	.word	0x408f4000
 8033ffc:	3ff00000 	.word	0x3ff00000
 8034000:	810103c9 	.word	0x810103c9
 8034004:	80aab0b0 	.word	0x80aab0b0
	...

08034010 <AXIS_loadXWheelDiameter()>:
 8034010:	b570      	push	{r4, r5, r6, lr}
 8034012:	ed2d 8b02 	vpush	{d8}
 8034016:	b084      	sub	sp, #16
 8034018:	4949      	ldr	r1, [pc, #292]	; (8034140 <AXIS_loadXWheelDiameter()+0x130>)
 803401a:	484a      	ldr	r0, [pc, #296]	; (8034144 <AXIS_loadXWheelDiameter()+0x134>)
 803401c:	2304      	movs	r3, #4
 803401e:	aa03      	add	r2, sp, #12
 8034020:	f7fd fb9a 	bl	8031758 <NVM_load>
 8034024:	2802      	cmp	r0, #2
 8034026:	d034      	beq.n	8034092 <AXIS_loadXWheelDiameter()+0x82>
 8034028:	ed9d 6a03 	vldr	s12, [sp, #12]
 803402c:	ed9f 7a46 	vldr	s14, [pc, #280]	; 8034148 <AXIS_loadXWheelDiameter()+0x138>
 8034030:	eddf 7a46 	vldr	s15, [pc, #280]	; 803414c <AXIS_loadXWheelDiameter()+0x13c>
 8034034:	4846      	ldr	r0, [pc, #280]	; (8034150 <AXIS_loadXWheelDiameter()+0x140>)
 8034036:	eef7 5a00 	vmov.f32	s11, #112	; 0x3f800000  1.0
 803403a:	eec5 6a86 	vdiv.f32	s13, s11, s12
 803403e:	212f      	movs	r1, #47	; 0x2f
 8034040:	ee86 8a87 	vdiv.f32	s16, s13, s14
 8034044:	ee28 8a27 	vmul.f32	s16, s16, s15
 8034048:	f00b f989 	bl	803f35e <strrchr>
 803404c:	2800      	cmp	r0, #0
 803404e:	d043      	beq.n	80340d8 <AXIS_loadXWheelDiameter()+0xc8>
 8034050:	483f      	ldr	r0, [pc, #252]	; (8034150 <AXIS_loadXWheelDiameter()+0x140>)
 8034052:	212f      	movs	r1, #47	; 0x2f
 8034054:	f00b f983 	bl	803f35e <strrchr>
 8034058:	1c46      	adds	r6, r0, #1
 803405a:	ee18 0a10 	vmov	r0, s16
 803405e:	f00a f9fc 	bl	803e45a <__aeabi_f2d>
 8034062:	4604      	mov	r4, r0
 8034064:	460d      	mov	r5, r1
 8034066:	e9cd 4500 	strd	r4, r5, [sp]
 803406a:	4b3a      	ldr	r3, [pc, #232]	; (8034154 <AXIS_loadXWheelDiameter()+0x144>)
 803406c:	4631      	mov	r1, r6
 803406e:	f44f 72bb 	mov.w	r2, #374	; 0x176
 8034072:	2002      	movs	r0, #2
 8034074:	f7ee fb90 	bl	8022798 <DEBUG_logMsg>
 8034078:	eddf 7a37 	vldr	s15, [pc, #220]	; 8034158 <AXIS_loadXWheelDiameter()+0x148>
 803407c:	eeb4 8ae7 	vcmpe.f32	s16, s15
 8034080:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8034084:	d81b      	bhi.n	80340be <AXIS_loadXWheelDiameter()+0xae>
 8034086:	ed9f 0a35 	vldr	s0, [pc, #212]	; 803415c <AXIS_loadXWheelDiameter()+0x14c>
 803408a:	b004      	add	sp, #16
 803408c:	ecbd 8b02 	vpop	{d8}
 8034090:	bd70      	pop	{r4, r5, r6, pc}
 8034092:	482f      	ldr	r0, [pc, #188]	; (8034150 <AXIS_loadXWheelDiameter()+0x140>)
 8034094:	212f      	movs	r1, #47	; 0x2f
 8034096:	f00b f962 	bl	803f35e <strrchr>
 803409a:	b340      	cbz	r0, 80340ee <AXIS_loadXWheelDiameter()+0xde>
 803409c:	212f      	movs	r1, #47	; 0x2f
 803409e:	482c      	ldr	r0, [pc, #176]	; (8034150 <AXIS_loadXWheelDiameter()+0x140>)
 80340a0:	f00b f95d 	bl	803f35e <strrchr>
 80340a4:	1c41      	adds	r1, r0, #1
 80340a6:	4b2e      	ldr	r3, [pc, #184]	; (8034160 <AXIS_loadXWheelDiameter()+0x150>)
 80340a8:	f44f 72b8 	mov.w	r2, #368	; 0x170
 80340ac:	2001      	movs	r0, #1
 80340ae:	f7ee fb73 	bl	8022798 <DEBUG_logMsg>
 80340b2:	ed9f 0a2c 	vldr	s0, [pc, #176]	; 8034164 <AXIS_loadXWheelDiameter()+0x154>
 80340b6:	b004      	add	sp, #16
 80340b8:	ecbd 8b02 	vpop	{d8}
 80340bc:	bd70      	pop	{r4, r5, r6, pc}
 80340be:	eddf 7a2a 	vldr	s15, [pc, #168]	; 8034168 <AXIS_loadXWheelDiameter()+0x158>
 80340c2:	eeb4 8ae7 	vcmpe.f32	s16, s15
 80340c6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80340ca:	db1f      	blt.n	803410c <AXIS_loadXWheelDiameter()+0xfc>
 80340cc:	ed9f 0a27 	vldr	s0, [pc, #156]	; 803416c <AXIS_loadXWheelDiameter()+0x15c>
 80340d0:	b004      	add	sp, #16
 80340d2:	ecbd 8b02 	vpop	{d8}
 80340d6:	bd70      	pop	{r4, r5, r6, pc}
 80340d8:	481d      	ldr	r0, [pc, #116]	; (8034150 <AXIS_loadXWheelDiameter()+0x140>)
 80340da:	215c      	movs	r1, #92	; 0x5c
 80340dc:	f00b f93f 	bl	803f35e <strrchr>
 80340e0:	b180      	cbz	r0, 8034104 <AXIS_loadXWheelDiameter()+0xf4>
 80340e2:	481b      	ldr	r0, [pc, #108]	; (8034150 <AXIS_loadXWheelDiameter()+0x140>)
 80340e4:	215c      	movs	r1, #92	; 0x5c
 80340e6:	f00b f93a 	bl	803f35e <strrchr>
 80340ea:	1c46      	adds	r6, r0, #1
 80340ec:	e7b5      	b.n	803405a <AXIS_loadXWheelDiameter()+0x4a>
 80340ee:	4818      	ldr	r0, [pc, #96]	; (8034150 <AXIS_loadXWheelDiameter()+0x140>)
 80340f0:	215c      	movs	r1, #92	; 0x5c
 80340f2:	f00b f934 	bl	803f35e <strrchr>
 80340f6:	b138      	cbz	r0, 8034108 <AXIS_loadXWheelDiameter()+0xf8>
 80340f8:	215c      	movs	r1, #92	; 0x5c
 80340fa:	4815      	ldr	r0, [pc, #84]	; (8034150 <AXIS_loadXWheelDiameter()+0x140>)
 80340fc:	f00b f92f 	bl	803f35e <strrchr>
 8034100:	1c41      	adds	r1, r0, #1
 8034102:	e7d0      	b.n	80340a6 <AXIS_loadXWheelDiameter()+0x96>
 8034104:	4e12      	ldr	r6, [pc, #72]	; (8034150 <AXIS_loadXWheelDiameter()+0x140>)
 8034106:	e7a8      	b.n	803405a <AXIS_loadXWheelDiameter()+0x4a>
 8034108:	4911      	ldr	r1, [pc, #68]	; (8034150 <AXIS_loadXWheelDiameter()+0x140>)
 803410a:	e7cc      	b.n	80340a6 <AXIS_loadXWheelDiameter()+0x96>
 803410c:	4b18      	ldr	r3, [pc, #96]	; (8034170 <AXIS_loadXWheelDiameter()+0x160>)
 803410e:	2200      	movs	r2, #0
 8034110:	4620      	mov	r0, r4
 8034112:	4629      	mov	r1, r5
 8034114:	f00a faaa 	bl	803e66c <__aeabi_ddiv>
 8034118:	a307      	add	r3, pc, #28	; (adr r3, 8034138 <AXIS_loadXWheelDiameter()+0x128>)
 803411a:	e9d3 2300 	ldrd	r2, r3, [r3]
 803411e:	f00a f9ef 	bl	803e500 <__aeabi_dmul>
 8034122:	4602      	mov	r2, r0
 8034124:	460b      	mov	r3, r1
 8034126:	2000      	movs	r0, #0
 8034128:	4912      	ldr	r1, [pc, #72]	; (8034174 <AXIS_loadXWheelDiameter()+0x164>)
 803412a:	f00a fa9f 	bl	803e66c <__aeabi_ddiv>
 803412e:	f00a f9b0 	bl	803e492 <__aeabi_d2f>
 8034132:	ee00 0a10 	vmov	s0, r0
 8034136:	e7a8      	b.n	803408a <AXIS_loadXWheelDiameter()+0x7a>
 8034138:	60000000 	.word	0x60000000
 803413c:	400921fb 	.word	0x400921fb
 8034140:	08042a08 	.word	0x08042a08
 8034144:	2000de14 	.word	0x2000de14
 8034148:	40490fdb 	.word	0x40490fdb
 803414c:	447a0000 	.word	0x447a0000
 8034150:	08048420 	.word	0x08048420
 8034154:	080484bc 	.word	0x080484bc
 8034158:	42de0000 	.word	0x42de0000
 803415c:	403787af 	.word	0x403787af
 8034160:	080484a0 	.word	0x080484a0
 8034164:	4035153c 	.word	0x4035153c
 8034168:	42e40000 	.word	0x42e40000
 803416c:	4032b346 	.word	0x4032b346
 8034170:	408f4000 	.word	0x408f4000
 8034174:	3ff00000 	.word	0x3ff00000
 8034178:	810103c9 	.word	0x810103c9
 803417c:	80aab0b0 	.word	0x80aab0b0
 8034180:	00000000 	.word	0x00000000

08034184 <AXIS_saveYWheelDiameter(float)>:
 8034184:	b500      	push	{lr}
 8034186:	b083      	sub	sp, #12
 8034188:	490c      	ldr	r1, [pc, #48]	; (80341bc <AXIS_saveYWheelDiameter(float)+0x38>)
 803418a:	480d      	ldr	r0, [pc, #52]	; (80341c0 <AXIS_saveYWheelDiameter(float)+0x3c>)
 803418c:	ed8d 0a01 	vstr	s0, [sp, #4]
 8034190:	aa01      	add	r2, sp, #4
 8034192:	2304      	movs	r3, #4
 8034194:	f7fd f9ce 	bl	8031534 <NVM_write>
 8034198:	2802      	cmp	r0, #2
 803419a:	d002      	beq.n	80341a2 <AXIS_saveYWheelDiameter(float)+0x1e>
 803419c:	b003      	add	sp, #12
 803419e:	f85d fb04 	ldr.w	pc, [sp], #4
 80341a2:	4906      	ldr	r1, [pc, #24]	; (80341bc <AXIS_saveYWheelDiameter(float)+0x38>)
 80341a4:	4806      	ldr	r0, [pc, #24]	; (80341c0 <AXIS_saveYWheelDiameter(float)+0x3c>)
 80341a6:	f7fd f90b 	bl	80313c0 <NVM_createEntry>
 80341aa:	4904      	ldr	r1, [pc, #16]	; (80341bc <AXIS_saveYWheelDiameter(float)+0x38>)
 80341ac:	4804      	ldr	r0, [pc, #16]	; (80341c0 <AXIS_saveYWheelDiameter(float)+0x3c>)
 80341ae:	aa01      	add	r2, sp, #4
 80341b0:	2304      	movs	r3, #4
 80341b2:	f7fd f9bf 	bl	8031534 <NVM_write>
 80341b6:	b003      	add	sp, #12
 80341b8:	f85d fb04 	ldr.w	pc, [sp], #4
 80341bc:	08042a14 	.word	0x08042a14
 80341c0:	2000de14 	.word	0x2000de14

080341c4 <AXIS_saveXWheelDiameter(float)>:
 80341c4:	b500      	push	{lr}
 80341c6:	b083      	sub	sp, #12
 80341c8:	490c      	ldr	r1, [pc, #48]	; (80341fc <AXIS_saveXWheelDiameter(float)+0x38>)
 80341ca:	480d      	ldr	r0, [pc, #52]	; (8034200 <AXIS_saveXWheelDiameter(float)+0x3c>)
 80341cc:	ed8d 0a01 	vstr	s0, [sp, #4]
 80341d0:	aa01      	add	r2, sp, #4
 80341d2:	2304      	movs	r3, #4
 80341d4:	f7fd f9ae 	bl	8031534 <NVM_write>
 80341d8:	2802      	cmp	r0, #2
 80341da:	d002      	beq.n	80341e2 <AXIS_saveXWheelDiameter(float)+0x1e>
 80341dc:	b003      	add	sp, #12
 80341de:	f85d fb04 	ldr.w	pc, [sp], #4
 80341e2:	4906      	ldr	r1, [pc, #24]	; (80341fc <AXIS_saveXWheelDiameter(float)+0x38>)
 80341e4:	4806      	ldr	r0, [pc, #24]	; (8034200 <AXIS_saveXWheelDiameter(float)+0x3c>)
 80341e6:	f7fd f8eb 	bl	80313c0 <NVM_createEntry>
 80341ea:	4904      	ldr	r1, [pc, #16]	; (80341fc <AXIS_saveXWheelDiameter(float)+0x38>)
 80341ec:	4804      	ldr	r0, [pc, #16]	; (8034200 <AXIS_saveXWheelDiameter(float)+0x3c>)
 80341ee:	aa01      	add	r2, sp, #4
 80341f0:	2304      	movs	r3, #4
 80341f2:	f7fd f99f 	bl	8031534 <NVM_write>
 80341f6:	b003      	add	sp, #12
 80341f8:	f85d fb04 	ldr.w	pc, [sp], #4
 80341fc:	08042a08 	.word	0x08042a08
 8034200:	2000de14 	.word	0x2000de14

08034204 <_GLOBAL__sub_I_g_dynamicAxis_1>:
 8034204:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8034208:	f8df 8218 	ldr.w	r8, [pc, #536]	; 8034424 <_GLOBAL__sub_I_g_dynamicAxis_1+0x220>
 803420c:	4f5f      	ldr	r7, [pc, #380]	; (803438c <_GLOBAL__sub_I_g_dynamicAxis_1+0x188>)
 803420e:	4d60      	ldr	r5, [pc, #384]	; (8034390 <_GLOBAL__sub_I_g_dynamicAxis_1+0x18c>)
 8034210:	4b60      	ldr	r3, [pc, #384]	; (8034394 <_GLOBAL__sub_I_g_dynamicAxis_1+0x190>)
 8034212:	4961      	ldr	r1, [pc, #388]	; (8034398 <_GLOBAL__sub_I_g_dynamicAxis_1+0x194>)
 8034214:	4861      	ldr	r0, [pc, #388]	; (803439c <_GLOBAL__sub_I_g_dynamicAxis_1+0x198>)
 8034216:	f8df a210 	ldr.w	sl, [pc, #528]	; 8034428 <_GLOBAL__sub_I_g_dynamicAxis_1+0x224>
 803421a:	b088      	sub	sp, #32
 803421c:	2603      	movs	r6, #3
 803421e:	2400      	movs	r4, #0
 8034220:	e9cd 8601 	strd	r8, r6, [sp, #4]
 8034224:	e9cd 4404 	strd	r4, r4, [sp, #16]
 8034228:	9703      	str	r7, [sp, #12]
 803422a:	9500      	str	r5, [sp, #0]
 803422c:	2205      	movs	r2, #5
 803422e:	f7ef f907 	bl	8023440 <SingleServoAxis::SingleServoAxis(char const*, unsigned char, AXIS_config_t*, SingleServoAxis::Config const*, AXIS_motionProfile_t const* const*, unsigned char, bool (*)(unsigned char, unsigned char, unsigned char*, unsigned short), void (*)(float), float (*)())>
 8034232:	e9cd 5800 	strd	r5, r8, [sp]
 8034236:	e9cd 4404 	strd	r4, r4, [sp, #16]
 803423a:	e9cd 6702 	strd	r6, r7, [sp, #8]
 803423e:	4b55      	ldr	r3, [pc, #340]	; (8034394 <_GLOBAL__sub_I_g_dynamicAxis_1+0x190>)
 8034240:	4957      	ldr	r1, [pc, #348]	; (80343a0 <_GLOBAL__sub_I_g_dynamicAxis_1+0x19c>)
 8034242:	4858      	ldr	r0, [pc, #352]	; (80343a4 <_GLOBAL__sub_I_g_dynamicAxis_1+0x1a0>)
 8034244:	2206      	movs	r2, #6
 8034246:	f7ef f8fb 	bl	8023440 <SingleServoAxis::SingleServoAxis(char const*, unsigned char, AXIS_config_t*, SingleServoAxis::Config const*, AXIS_motionProfile_t const* const*, unsigned char, bool (*)(unsigned char, unsigned char, unsigned char*, unsigned short), void (*)(float), float (*)())>
 803424a:	e9cd 5800 	strd	r5, r8, [sp]
 803424e:	e9cd 4404 	strd	r4, r4, [sp, #16]
 8034252:	e9cd 6702 	strd	r6, r7, [sp, #8]
 8034256:	4b4f      	ldr	r3, [pc, #316]	; (8034394 <_GLOBAL__sub_I_g_dynamicAxis_1+0x190>)
 8034258:	4953      	ldr	r1, [pc, #332]	; (80343a8 <_GLOBAL__sub_I_g_dynamicAxis_1+0x1a4>)
 803425a:	4854      	ldr	r0, [pc, #336]	; (80343ac <_GLOBAL__sub_I_g_dynamicAxis_1+0x1a8>)
 803425c:	2207      	movs	r2, #7
 803425e:	f7ef f8ef 	bl	8023440 <SingleServoAxis::SingleServoAxis(char const*, unsigned char, AXIS_config_t*, SingleServoAxis::Config const*, AXIS_motionProfile_t const* const*, unsigned char, bool (*)(unsigned char, unsigned char, unsigned char*, unsigned short), void (*)(float), float (*)())>
 8034262:	e9cd 5800 	strd	r5, r8, [sp]
 8034266:	e9cd 4404 	strd	r4, r4, [sp, #16]
 803426a:	e9cd 6702 	strd	r6, r7, [sp, #8]
 803426e:	4b49      	ldr	r3, [pc, #292]	; (8034394 <_GLOBAL__sub_I_g_dynamicAxis_1+0x190>)
 8034270:	494f      	ldr	r1, [pc, #316]	; (80343b0 <_GLOBAL__sub_I_g_dynamicAxis_1+0x1ac>)
 8034272:	4850      	ldr	r0, [pc, #320]	; (80343b4 <_GLOBAL__sub_I_g_dynamicAxis_1+0x1b0>)
 8034274:	2208      	movs	r2, #8
 8034276:	f7ef f8e3 	bl	8023440 <SingleServoAxis::SingleServoAxis(char const*, unsigned char, AXIS_config_t*, SingleServoAxis::Config const*, AXIS_motionProfile_t const* const*, unsigned char, bool (*)(unsigned char, unsigned char, unsigned char*, unsigned short), void (*)(float), float (*)())>
 803427a:	e9cd 5800 	strd	r5, r8, [sp]
 803427e:	e9cd 4404 	strd	r4, r4, [sp, #16]
 8034282:	e9cd 6702 	strd	r6, r7, [sp, #8]
 8034286:	4b43      	ldr	r3, [pc, #268]	; (8034394 <_GLOBAL__sub_I_g_dynamicAxis_1+0x190>)
 8034288:	494b      	ldr	r1, [pc, #300]	; (80343b8 <_GLOBAL__sub_I_g_dynamicAxis_1+0x1b4>)
 803428a:	484c      	ldr	r0, [pc, #304]	; (80343bc <_GLOBAL__sub_I_g_dynamicAxis_1+0x1b8>)
 803428c:	2209      	movs	r2, #9
 803428e:	f7ef f8d7 	bl	8023440 <SingleServoAxis::SingleServoAxis(char const*, unsigned char, AXIS_config_t*, SingleServoAxis::Config const*, AXIS_motionProfile_t const* const*, unsigned char, bool (*)(unsigned char, unsigned char, unsigned char*, unsigned short), void (*)(float), float (*)())>
 8034292:	e9cd 5800 	strd	r5, r8, [sp]
 8034296:	e9cd 4404 	strd	r4, r4, [sp, #16]
 803429a:	e9cd 6702 	strd	r6, r7, [sp, #8]
 803429e:	4b3d      	ldr	r3, [pc, #244]	; (8034394 <_GLOBAL__sub_I_g_dynamicAxis_1+0x190>)
 80342a0:	4947      	ldr	r1, [pc, #284]	; (80343c0 <_GLOBAL__sub_I_g_dynamicAxis_1+0x1bc>)
 80342a2:	4848      	ldr	r0, [pc, #288]	; (80343c4 <_GLOBAL__sub_I_g_dynamicAxis_1+0x1c0>)
 80342a4:	220a      	movs	r2, #10
 80342a6:	f7ef f8cb 	bl	8023440 <SingleServoAxis::SingleServoAxis(char const*, unsigned char, AXIS_config_t*, SingleServoAxis::Config const*, AXIS_motionProfile_t const* const*, unsigned char, bool (*)(unsigned char, unsigned char, unsigned char*, unsigned short), void (*)(float), float (*)())>
 80342aa:	e9cd 5800 	strd	r5, r8, [sp]
 80342ae:	e9cd 4404 	strd	r4, r4, [sp, #16]
 80342b2:	e9cd 6702 	strd	r6, r7, [sp, #8]
 80342b6:	4b37      	ldr	r3, [pc, #220]	; (8034394 <_GLOBAL__sub_I_g_dynamicAxis_1+0x190>)
 80342b8:	4943      	ldr	r1, [pc, #268]	; (80343c8 <_GLOBAL__sub_I_g_dynamicAxis_1+0x1c4>)
 80342ba:	4844      	ldr	r0, [pc, #272]	; (80343cc <_GLOBAL__sub_I_g_dynamicAxis_1+0x1c8>)
 80342bc:	220b      	movs	r2, #11
 80342be:	f7ef f8bf 	bl	8023440 <SingleServoAxis::SingleServoAxis(char const*, unsigned char, AXIS_config_t*, SingleServoAxis::Config const*, AXIS_motionProfile_t const* const*, unsigned char, bool (*)(unsigned char, unsigned char, unsigned char*, unsigned short), void (*)(float), float (*)())>
 80342c2:	e9cd 5800 	strd	r5, r8, [sp]
 80342c6:	e9cd 4404 	strd	r4, r4, [sp, #16]
 80342ca:	e9cd 6702 	strd	r6, r7, [sp, #8]
 80342ce:	4b31      	ldr	r3, [pc, #196]	; (8034394 <_GLOBAL__sub_I_g_dynamicAxis_1+0x190>)
 80342d0:	493f      	ldr	r1, [pc, #252]	; (80343d0 <_GLOBAL__sub_I_g_dynamicAxis_1+0x1cc>)
 80342d2:	4840      	ldr	r0, [pc, #256]	; (80343d4 <_GLOBAL__sub_I_g_dynamicAxis_1+0x1d0>)
 80342d4:	220c      	movs	r2, #12
 80342d6:	f7ef f8b3 	bl	8023440 <SingleServoAxis::SingleServoAxis(char const*, unsigned char, AXIS_config_t*, SingleServoAxis::Config const*, AXIS_motionProfile_t const* const*, unsigned char, bool (*)(unsigned char, unsigned char, unsigned char*, unsigned short), void (*)(float), float (*)())>
 80342da:	483f      	ldr	r0, [pc, #252]	; (80343d8 <_GLOBAL__sub_I_g_dynamicAxis_1+0x1d4>)
 80342dc:	493f      	ldr	r1, [pc, #252]	; (80343dc <_GLOBAL__sub_I_g_dynamicAxis_1+0x1d8>)
 80342de:	4a40      	ldr	r2, [pc, #256]	; (80343e0 <_GLOBAL__sub_I_g_dynamicAxis_1+0x1dc>)
 80342e0:	4b2c      	ldr	r3, [pc, #176]	; (8034394 <_GLOBAL__sub_I_g_dynamicAxis_1+0x190>)
 80342e2:	9705      	str	r7, [sp, #20]
 80342e4:	f04f 0904 	mov.w	r9, #4
 80342e8:	e9cd 1006 	strd	r1, r0, [sp, #24]
 80342ec:	e9cd 8601 	strd	r8, r6, [sp, #4]
 80342f0:	e9cd 2903 	strd	r2, r9, [sp, #12]
 80342f4:	493b      	ldr	r1, [pc, #236]	; (80343e4 <_GLOBAL__sub_I_g_dynamicAxis_1+0x1e0>)
 80342f6:	9500      	str	r5, [sp, #0]
 80342f8:	221e      	movs	r2, #30
 80342fa:	483b      	ldr	r0, [pc, #236]	; (80343e8 <_GLOBAL__sub_I_g_dynamicAxis_1+0x1e4>)
 80342fc:	f7ee feb0 	bl	8023060 <MultiServoAxis::MultiServoAxis(char const*, unsigned char, AXIS_config_t*, SingleServoAxis::Config const*, AXIS_motionProfile_t const* const*, unsigned char, SingleServoAxis**, unsigned char, bool (*)(unsigned char, unsigned char, unsigned char*, unsigned short), void (*)(float), float (*)())>
 8034300:	483a      	ldr	r0, [pc, #232]	; (80343ec <_GLOBAL__sub_I_g_dynamicAxis_1+0x1e8>)
 8034302:	493b      	ldr	r1, [pc, #236]	; (80343f0 <_GLOBAL__sub_I_g_dynamicAxis_1+0x1ec>)
 8034304:	4a3b      	ldr	r2, [pc, #236]	; (80343f4 <_GLOBAL__sub_I_g_dynamicAxis_1+0x1f0>)
 8034306:	9203      	str	r2, [sp, #12]
 8034308:	e9cd 1006 	strd	r1, r0, [sp, #24]
 803430c:	e9cd 8601 	strd	r8, r6, [sp, #4]
 8034310:	e9cd 9704 	strd	r9, r7, [sp, #16]
 8034314:	4b1f      	ldr	r3, [pc, #124]	; (8034394 <_GLOBAL__sub_I_g_dynamicAxis_1+0x190>)
 8034316:	4938      	ldr	r1, [pc, #224]	; (80343f8 <_GLOBAL__sub_I_g_dynamicAxis_1+0x1f4>)
 8034318:	9500      	str	r5, [sp, #0]
 803431a:	221f      	movs	r2, #31
 803431c:	4837      	ldr	r0, [pc, #220]	; (80343fc <_GLOBAL__sub_I_g_dynamicAxis_1+0x1f8>)
 803431e:	f8df 810c 	ldr.w	r8, [pc, #268]	; 803442c <_GLOBAL__sub_I_g_dynamicAxis_1+0x228>
 8034322:	f7ee fe9d 	bl	8023060 <MultiServoAxis::MultiServoAxis(char const*, unsigned char, AXIS_config_t*, SingleServoAxis::Config const*, AXIS_motionProfile_t const* const*, unsigned char, SingleServoAxis**, unsigned char, bool (*)(unsigned char, unsigned char, unsigned char*, unsigned short), void (*)(float), float (*)())>
 8034326:	4a36      	ldr	r2, [pc, #216]	; (8034400 <_GLOBAL__sub_I_g_dynamicAxis_1+0x1fc>)
 8034328:	9203      	str	r2, [sp, #12]
 803432a:	4653      	mov	r3, sl
 803432c:	e9cd 4406 	strd	r4, r4, [sp, #24]
 8034330:	e9cd 9704 	strd	r9, r7, [sp, #16]
 8034334:	4933      	ldr	r1, [pc, #204]	; (8034404 <_GLOBAL__sub_I_g_dynamicAxis_1+0x200>)
 8034336:	9602      	str	r6, [sp, #8]
 8034338:	9500      	str	r5, [sp, #0]
 803433a:	f8cd 8004 	str.w	r8, [sp, #4]
 803433e:	2220      	movs	r2, #32
 8034340:	4831      	ldr	r0, [pc, #196]	; (8034408 <_GLOBAL__sub_I_g_dynamicAxis_1+0x204>)
 8034342:	f7ee fe8d 	bl	8023060 <MultiServoAxis::MultiServoAxis(char const*, unsigned char, AXIS_config_t*, SingleServoAxis::Config const*, AXIS_motionProfile_t const* const*, unsigned char, SingleServoAxis**, unsigned char, bool (*)(unsigned char, unsigned char, unsigned char*, unsigned short), void (*)(float), float (*)())>
 8034346:	4a31      	ldr	r2, [pc, #196]	; (803440c <_GLOBAL__sub_I_g_dynamicAxis_1+0x208>)
 8034348:	9203      	str	r2, [sp, #12]
 803434a:	4653      	mov	r3, sl
 803434c:	e9cd 4406 	strd	r4, r4, [sp, #24]
 8034350:	e9cd 9704 	strd	r9, r7, [sp, #16]
 8034354:	e9cd 8601 	strd	r8, r6, [sp, #4]
 8034358:	492d      	ldr	r1, [pc, #180]	; (8034410 <_GLOBAL__sub_I_g_dynamicAxis_1+0x20c>)
 803435a:	9500      	str	r5, [sp, #0]
 803435c:	2221      	movs	r2, #33	; 0x21
 803435e:	482d      	ldr	r0, [pc, #180]	; (8034414 <_GLOBAL__sub_I_g_dynamicAxis_1+0x210>)
 8034360:	f7ee fe7e 	bl	8023060 <MultiServoAxis::MultiServoAxis(char const*, unsigned char, AXIS_config_t*, SingleServoAxis::Config const*, AXIS_motionProfile_t const* const*, unsigned char, SingleServoAxis**, unsigned char, bool (*)(unsigned char, unsigned char, unsigned char*, unsigned short), void (*)(float), float (*)())>
 8034364:	4a2c      	ldr	r2, [pc, #176]	; (8034418 <_GLOBAL__sub_I_g_dynamicAxis_1+0x214>)
 8034366:	9705      	str	r7, [sp, #20]
 8034368:	2108      	movs	r1, #8
 803436a:	e9cd 2103 	strd	r2, r1, [sp, #12]
 803436e:	e9cd 4406 	strd	r4, r4, [sp, #24]
 8034372:	e9cd 8601 	strd	r8, r6, [sp, #4]
 8034376:	4929      	ldr	r1, [pc, #164]	; (803441c <_GLOBAL__sub_I_g_dynamicAxis_1+0x218>)
 8034378:	9500      	str	r5, [sp, #0]
 803437a:	4653      	mov	r3, sl
 803437c:	2222      	movs	r2, #34	; 0x22
 803437e:	4828      	ldr	r0, [pc, #160]	; (8034420 <_GLOBAL__sub_I_g_dynamicAxis_1+0x21c>)
 8034380:	f7ee fe6e 	bl	8023060 <MultiServoAxis::MultiServoAxis(char const*, unsigned char, AXIS_config_t*, SingleServoAxis::Config const*, AXIS_motionProfile_t const* const*, unsigned char, SingleServoAxis**, unsigned char, bool (*)(unsigned char, unsigned char, unsigned char*, unsigned short), void (*)(float), float (*)())>
 8034384:	b008      	add	sp, #32
 8034386:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 803438a:	bf00      	nop
 803438c:	0802433d 	.word	0x0802433d
 8034390:	20002220 	.word	0x20002220
 8034394:	200021f8 	.word	0x200021f8
 8034398:	080484d8 	.word	0x080484d8
 803439c:	2000e6c8 	.word	0x2000e6c8
 80343a0:	080484e4 	.word	0x080484e4
 80343a4:	2000e758 	.word	0x2000e758
 80343a8:	080484f0 	.word	0x080484f0
 80343ac:	2000e7e8 	.word	0x2000e7e8
 80343b0:	080484fc 	.word	0x080484fc
 80343b4:	2000e878 	.word	0x2000e878
 80343b8:	08048508 	.word	0x08048508
 80343bc:	2000e488 	.word	0x2000e488
 80343c0:	08048514 	.word	0x08048514
 80343c4:	2000e518 	.word	0x2000e518
 80343c8:	08048520 	.word	0x08048520
 80343cc:	2000e5a8 	.word	0x2000e5a8
 80343d0:	0804852c 	.word	0x0804852c
 80343d4:	2000e638 	.word	0x2000e638
 80343d8:	08034011 	.word	0x08034011
 80343dc:	080341c5 	.word	0x080341c5
 80343e0:	20002170 	.word	0x20002170
 80343e4:	08048538 	.word	0x08048538
 80343e8:	2000e908 	.word	0x2000e908
 80343ec:	08033e99 	.word	0x08033e99
 80343f0:	08034185 	.word	0x08034185
 80343f4:	20002180 	.word	0x20002180
 80343f8:	08048540 	.word	0x08048540
 80343fc:	2000e9a0 	.word	0x2000e9a0
 8034400:	200021c0 	.word	0x200021c0
 8034404:	08048548 	.word	0x08048548
 8034408:	2000eb68 	.word	0x2000eb68
 803440c:	200021b0 	.word	0x200021b0
 8034410:	08048550 	.word	0x08048550
 8034414:	2000ead0 	.word	0x2000ead0
 8034418:	20002190 	.word	0x20002190
 803441c:	08048558 	.word	0x08048558
 8034420:	2000ea38 	.word	0x2000ea38
 8034424:	20002254 	.word	0x20002254
 8034428:	200021d0 	.word	0x200021d0
 803442c:	20002244 	.word	0x20002244

08034430 <_GLOBAL__sub_I_g_liftAxisYNeg>:
 8034430:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8034434:	4e19      	ldr	r6, [pc, #100]	; (803449c <_GLOBAL__sub_I_g_liftAxisYNeg+0x6c>)
 8034436:	f8df 808c 	ldr.w	r8, [pc, #140]	; 80344c4 <_GLOBAL__sub_I_g_liftAxisYNeg+0x94>
 803443a:	4d19      	ldr	r5, [pc, #100]	; (80344a0 <_GLOBAL__sub_I_g_liftAxisYNeg+0x70>)
 803443c:	4b19      	ldr	r3, [pc, #100]	; (80344a4 <_GLOBAL__sub_I_g_liftAxisYNeg+0x74>)
 803443e:	491a      	ldr	r1, [pc, #104]	; (80344a8 <_GLOBAL__sub_I_g_liftAxisYNeg+0x78>)
 8034440:	481a      	ldr	r0, [pc, #104]	; (80344ac <_GLOBAL__sub_I_g_liftAxisYNeg+0x7c>)
 8034442:	b088      	sub	sp, #32
 8034444:	2400      	movs	r4, #0
 8034446:	2703      	movs	r7, #3
 8034448:	e9cd 4404 	strd	r4, r4, [sp, #16]
 803444c:	e9cd 6701 	strd	r6, r7, [sp, #4]
 8034450:	f8cd 800c 	str.w	r8, [sp, #12]
 8034454:	9500      	str	r5, [sp, #0]
 8034456:	2201      	movs	r2, #1
 8034458:	f7ee fff2 	bl	8023440 <SingleServoAxis::SingleServoAxis(char const*, unsigned char, AXIS_config_t*, SingleServoAxis::Config const*, AXIS_motionProfile_t const* const*, unsigned char, bool (*)(unsigned char, unsigned char, unsigned char*, unsigned short), void (*)(float), float (*)())>
 803445c:	e9cd 4404 	strd	r4, r4, [sp, #16]
 8034460:	e9cd 7802 	strd	r7, r8, [sp, #8]
 8034464:	e9cd 5600 	strd	r5, r6, [sp]
 8034468:	4b0e      	ldr	r3, [pc, #56]	; (80344a4 <_GLOBAL__sub_I_g_liftAxisYNeg+0x74>)
 803446a:	4911      	ldr	r1, [pc, #68]	; (80344b0 <_GLOBAL__sub_I_g_liftAxisYNeg+0x80>)
 803446c:	4811      	ldr	r0, [pc, #68]	; (80344b4 <_GLOBAL__sub_I_g_liftAxisYNeg+0x84>)
 803446e:	2202      	movs	r2, #2
 8034470:	f7ee ffe6 	bl	8023440 <SingleServoAxis::SingleServoAxis(char const*, unsigned char, AXIS_config_t*, SingleServoAxis::Config const*, AXIS_motionProfile_t const* const*, unsigned char, bool (*)(unsigned char, unsigned char, unsigned char*, unsigned short), void (*)(float), float (*)())>
 8034474:	4a10      	ldr	r2, [pc, #64]	; (80344b8 <_GLOBAL__sub_I_g_liftAxisYNeg+0x88>)
 8034476:	4b0b      	ldr	r3, [pc, #44]	; (80344a4 <_GLOBAL__sub_I_g_liftAxisYNeg+0x74>)
 8034478:	f8cd 8014 	str.w	r8, [sp, #20]
 803447c:	2102      	movs	r1, #2
 803447e:	e9cd 2103 	strd	r2, r1, [sp, #12]
 8034482:	e9cd 4406 	strd	r4, r4, [sp, #24]
 8034486:	e9cd 6701 	strd	r6, r7, [sp, #4]
 803448a:	490c      	ldr	r1, [pc, #48]	; (80344bc <_GLOBAL__sub_I_g_liftAxisYNeg+0x8c>)
 803448c:	9500      	str	r5, [sp, #0]
 803448e:	2229      	movs	r2, #41	; 0x29
 8034490:	480b      	ldr	r0, [pc, #44]	; (80344c0 <_GLOBAL__sub_I_g_liftAxisYNeg+0x90>)
 8034492:	f7ee fde5 	bl	8023060 <MultiServoAxis::MultiServoAxis(char const*, unsigned char, AXIS_config_t*, SingleServoAxis::Config const*, AXIS_motionProfile_t const* const*, unsigned char, SingleServoAxis**, unsigned char, bool (*)(unsigned char, unsigned char, unsigned char*, unsigned short), void (*)(float), float (*)())>
 8034496:	b008      	add	sp, #32
 8034498:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 803449c:	200022ec 	.word	0x200022ec
 80344a0:	200022c8 	.word	0x200022c8
 80344a4:	200022a0 	.word	0x200022a0
 80344a8:	080486c8 	.word	0x080486c8
 80344ac:	2000ec00 	.word	0x2000ec00
 80344b0:	080486d4 	.word	0x080486d4
 80344b4:	2000ec90 	.word	0x2000ec90
 80344b8:	20002298 	.word	0x20002298
 80344bc:	080486e0 	.word	0x080486e0
 80344c0:	2000ed20 	.word	0x2000ed20
 80344c4:	0802433d 	.word	0x0802433d

080344c8 <_GLOBAL__sub_I_g_pickarmAxis>:
 80344c8:	b510      	push	{r4, lr}
 80344ca:	490a      	ldr	r1, [pc, #40]	; (80344f4 <_GLOBAL__sub_I_g_pickarmAxis+0x2c>)
 80344cc:	4c0a      	ldr	r4, [pc, #40]	; (80344f8 <_GLOBAL__sub_I_g_pickarmAxis+0x30>)
 80344ce:	4a0b      	ldr	r2, [pc, #44]	; (80344fc <_GLOBAL__sub_I_g_pickarmAxis+0x34>)
 80344d0:	b086      	sub	sp, #24
 80344d2:	2300      	movs	r3, #0
 80344d4:	2003      	movs	r0, #3
 80344d6:	e9cd 1001 	strd	r1, r0, [sp, #4]
 80344da:	e9cd 4303 	strd	r4, r3, [sp, #12]
 80344de:	9305      	str	r3, [sp, #20]
 80344e0:	9200      	str	r2, [sp, #0]
 80344e2:	4b07      	ldr	r3, [pc, #28]	; (8034500 <_GLOBAL__sub_I_g_pickarmAxis+0x38>)
 80344e4:	4907      	ldr	r1, [pc, #28]	; (8034504 <_GLOBAL__sub_I_g_pickarmAxis+0x3c>)
 80344e6:	4808      	ldr	r0, [pc, #32]	; (8034508 <_GLOBAL__sub_I_g_pickarmAxis+0x40>)
 80344e8:	2204      	movs	r2, #4
 80344ea:	f7ee ffa9 	bl	8023440 <SingleServoAxis::SingleServoAxis(char const*, unsigned char, AXIS_config_t*, SingleServoAxis::Config const*, AXIS_motionProfile_t const* const*, unsigned char, bool (*)(unsigned char, unsigned char, unsigned char*, unsigned short), void (*)(float), float (*)())>
 80344ee:	b006      	add	sp, #24
 80344f0:	bd10      	pop	{r4, pc}
 80344f2:	bf00      	nop
 80344f4:	20002354 	.word	0x20002354
 80344f8:	0802433d 	.word	0x0802433d
 80344fc:	20002330 	.word	0x20002330
 8034500:	20002308 	.word	0x20002308
 8034504:	08048764 	.word	0x08048764
 8034508:	2000edb8 	.word	0x2000edb8

0803450c <_GLOBAL__sub_I_g_turretAxis>:
 803450c:	b510      	push	{r4, lr}
 803450e:	4809      	ldr	r0, [pc, #36]	; (8034534 <_GLOBAL__sub_I_g_turretAxis+0x28>)
 8034510:	4c09      	ldr	r4, [pc, #36]	; (8034538 <_GLOBAL__sub_I_g_turretAxis+0x2c>)
 8034512:	490a      	ldr	r1, [pc, #40]	; (803453c <_GLOBAL__sub_I_g_turretAxis+0x30>)
 8034514:	b086      	sub	sp, #24
 8034516:	2300      	movs	r3, #0
 8034518:	2203      	movs	r2, #3
 803451a:	e9cd 4303 	strd	r4, r3, [sp, #12]
 803451e:	e9cd 0201 	strd	r0, r2, [sp, #4]
 8034522:	9305      	str	r3, [sp, #20]
 8034524:	9100      	str	r1, [sp, #0]
 8034526:	4b06      	ldr	r3, [pc, #24]	; (8034540 <_GLOBAL__sub_I_g_turretAxis+0x34>)
 8034528:	4906      	ldr	r1, [pc, #24]	; (8034544 <_GLOBAL__sub_I_g_turretAxis+0x38>)
 803452a:	4807      	ldr	r0, [pc, #28]	; (8034548 <_GLOBAL__sub_I_g_turretAxis+0x3c>)
 803452c:	f7ee ff88 	bl	8023440 <SingleServoAxis::SingleServoAxis(char const*, unsigned char, AXIS_config_t*, SingleServoAxis::Config const*, AXIS_motionProfile_t const* const*, unsigned char, bool (*)(unsigned char, unsigned char, unsigned char*, unsigned short), void (*)(float), float (*)())>
 8034530:	b006      	add	sp, #24
 8034532:	bd10      	pop	{r4, pc}
 8034534:	200023b4 	.word	0x200023b4
 8034538:	0802433d 	.word	0x0802433d
 803453c:	20002390 	.word	0x20002390
 8034540:	20002368 	.word	0x20002368
 8034544:	080487e4 	.word	0x080487e4
 8034548:	2000ee48 	.word	0x2000ee48

0803454c <_GLOBAL__sub_I_g_wheelArticulationAxis_yNegRight>:
 803454c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8034550:	4d46      	ldr	r5, [pc, #280]	; (803466c <_GLOBAL__sub_I_g_wheelArticulationAxis_yNegRight+0x120>)
 8034552:	4f47      	ldr	r7, [pc, #284]	; (8034670 <_GLOBAL__sub_I_g_wheelArticulationAxis_yNegRight+0x124>)
 8034554:	f8df 8178 	ldr.w	r8, [pc, #376]	; 80346d0 <_GLOBAL__sub_I_g_wheelArticulationAxis_yNegRight+0x184>
 8034558:	4e46      	ldr	r6, [pc, #280]	; (8034674 <_GLOBAL__sub_I_g_wheelArticulationAxis_yNegRight+0x128>)
 803455a:	4947      	ldr	r1, [pc, #284]	; (8034678 <_GLOBAL__sub_I_g_wheelArticulationAxis_yNegRight+0x12c>)
 803455c:	4847      	ldr	r0, [pc, #284]	; (803467c <_GLOBAL__sub_I_g_wheelArticulationAxis_yNegRight+0x130>)
 803455e:	b089      	sub	sp, #36	; 0x24
 8034560:	2400      	movs	r4, #0
 8034562:	f04f 0903 	mov.w	r9, #3
 8034566:	e9cd 7901 	strd	r7, r9, [sp, #4]
 803456a:	462b      	mov	r3, r5
 803456c:	e9cd 4404 	strd	r4, r4, [sp, #16]
 8034570:	f8cd 800c 	str.w	r8, [sp, #12]
 8034574:	9600      	str	r6, [sp, #0]
 8034576:	220d      	movs	r2, #13
 8034578:	f7ef fa6a 	bl	8023a50 <SingleStepperAxis::SingleStepperAxis(char const*, unsigned char, AXIS_config_t*, COMM_CDM_MOTOR_torqueSettings_t const*, AXIS_motionProfile_t const* const*, unsigned char, bool (*)(unsigned char, unsigned char, unsigned char*, unsigned short), void (*)(float), float (*)())>
 803457c:	e9cd 9802 	strd	r9, r8, [sp, #8]
 8034580:	462b      	mov	r3, r5
 8034582:	e9cd 4404 	strd	r4, r4, [sp, #16]
 8034586:	e9cd 6700 	strd	r6, r7, [sp]
 803458a:	493d      	ldr	r1, [pc, #244]	; (8034680 <_GLOBAL__sub_I_g_wheelArticulationAxis_yNegRight+0x134>)
 803458c:	483d      	ldr	r0, [pc, #244]	; (8034684 <_GLOBAL__sub_I_g_wheelArticulationAxis_yNegRight+0x138>)
 803458e:	220e      	movs	r2, #14
 8034590:	f7ef fa5e 	bl	8023a50 <SingleStepperAxis::SingleStepperAxis(char const*, unsigned char, AXIS_config_t*, COMM_CDM_MOTOR_torqueSettings_t const*, AXIS_motionProfile_t const* const*, unsigned char, bool (*)(unsigned char, unsigned char, unsigned char*, unsigned short), void (*)(float), float (*)())>
 8034594:	e9cd 9802 	strd	r9, r8, [sp, #8]
 8034598:	462b      	mov	r3, r5
 803459a:	e9cd 4404 	strd	r4, r4, [sp, #16]
 803459e:	e9cd 6700 	strd	r6, r7, [sp]
 80345a2:	4939      	ldr	r1, [pc, #228]	; (8034688 <_GLOBAL__sub_I_g_wheelArticulationAxis_yNegRight+0x13c>)
 80345a4:	4839      	ldr	r0, [pc, #228]	; (803468c <_GLOBAL__sub_I_g_wheelArticulationAxis_yNegRight+0x140>)
 80345a6:	220f      	movs	r2, #15
 80345a8:	f7ef fa52 	bl	8023a50 <SingleStepperAxis::SingleStepperAxis(char const*, unsigned char, AXIS_config_t*, COMM_CDM_MOTOR_torqueSettings_t const*, AXIS_motionProfile_t const* const*, unsigned char, bool (*)(unsigned char, unsigned char, unsigned char*, unsigned short), void (*)(float), float (*)())>
 80345ac:	e9cd 9802 	strd	r9, r8, [sp, #8]
 80345b0:	462b      	mov	r3, r5
 80345b2:	e9cd 4404 	strd	r4, r4, [sp, #16]
 80345b6:	e9cd 6700 	strd	r6, r7, [sp]
 80345ba:	4935      	ldr	r1, [pc, #212]	; (8034690 <_GLOBAL__sub_I_g_wheelArticulationAxis_yNegRight+0x144>)
 80345bc:	4835      	ldr	r0, [pc, #212]	; (8034694 <_GLOBAL__sub_I_g_wheelArticulationAxis_yNegRight+0x148>)
 80345be:	2210      	movs	r2, #16
 80345c0:	f7ef fa46 	bl	8023a50 <SingleStepperAxis::SingleStepperAxis(char const*, unsigned char, AXIS_config_t*, COMM_CDM_MOTOR_torqueSettings_t const*, AXIS_motionProfile_t const* const*, unsigned char, bool (*)(unsigned char, unsigned char, unsigned char*, unsigned short), void (*)(float), float (*)())>
 80345c4:	e9cd 9802 	strd	r9, r8, [sp, #8]
 80345c8:	462b      	mov	r3, r5
 80345ca:	e9cd 4404 	strd	r4, r4, [sp, #16]
 80345ce:	e9cd 6700 	strd	r6, r7, [sp]
 80345d2:	4931      	ldr	r1, [pc, #196]	; (8034698 <_GLOBAL__sub_I_g_wheelArticulationAxis_yNegRight+0x14c>)
 80345d4:	4831      	ldr	r0, [pc, #196]	; (803469c <_GLOBAL__sub_I_g_wheelArticulationAxis_yNegRight+0x150>)
 80345d6:	2211      	movs	r2, #17
 80345d8:	f7ef fa3a 	bl	8023a50 <SingleStepperAxis::SingleStepperAxis(char const*, unsigned char, AXIS_config_t*, COMM_CDM_MOTOR_torqueSettings_t const*, AXIS_motionProfile_t const* const*, unsigned char, bool (*)(unsigned char, unsigned char, unsigned char*, unsigned short), void (*)(float), float (*)())>
 80345dc:	e9cd 9802 	strd	r9, r8, [sp, #8]
 80345e0:	462b      	mov	r3, r5
 80345e2:	e9cd 4404 	strd	r4, r4, [sp, #16]
 80345e6:	e9cd 6700 	strd	r6, r7, [sp]
 80345ea:	492d      	ldr	r1, [pc, #180]	; (80346a0 <_GLOBAL__sub_I_g_wheelArticulationAxis_yNegRight+0x154>)
 80345ec:	482d      	ldr	r0, [pc, #180]	; (80346a4 <_GLOBAL__sub_I_g_wheelArticulationAxis_yNegRight+0x158>)
 80345ee:	2212      	movs	r2, #18
 80345f0:	f7ef fa2e 	bl	8023a50 <SingleStepperAxis::SingleStepperAxis(char const*, unsigned char, AXIS_config_t*, COMM_CDM_MOTOR_torqueSettings_t const*, AXIS_motionProfile_t const* const*, unsigned char, bool (*)(unsigned char, unsigned char, unsigned char*, unsigned short), void (*)(float), float (*)())>
 80345f4:	e9cd 9802 	strd	r9, r8, [sp, #8]
 80345f8:	462b      	mov	r3, r5
 80345fa:	e9cd 4404 	strd	r4, r4, [sp, #16]
 80345fe:	e9cd 6700 	strd	r6, r7, [sp]
 8034602:	4929      	ldr	r1, [pc, #164]	; (80346a8 <_GLOBAL__sub_I_g_wheelArticulationAxis_yNegRight+0x15c>)
 8034604:	4829      	ldr	r0, [pc, #164]	; (80346ac <_GLOBAL__sub_I_g_wheelArticulationAxis_yNegRight+0x160>)
 8034606:	2213      	movs	r2, #19
 8034608:	f7ef fa22 	bl	8023a50 <SingleStepperAxis::SingleStepperAxis(char const*, unsigned char, AXIS_config_t*, COMM_CDM_MOTOR_torqueSettings_t const*, AXIS_motionProfile_t const* const*, unsigned char, bool (*)(unsigned char, unsigned char, unsigned char*, unsigned short), void (*)(float), float (*)())>
 803460c:	e9cd 9802 	strd	r9, r8, [sp, #8]
 8034610:	462b      	mov	r3, r5
 8034612:	e9cd 4404 	strd	r4, r4, [sp, #16]
 8034616:	e9cd 6700 	strd	r6, r7, [sp]
 803461a:	4925      	ldr	r1, [pc, #148]	; (80346b0 <_GLOBAL__sub_I_g_wheelArticulationAxis_yNegRight+0x164>)
 803461c:	4825      	ldr	r0, [pc, #148]	; (80346b4 <_GLOBAL__sub_I_g_wheelArticulationAxis_yNegRight+0x168>)
 803461e:	2214      	movs	r2, #20
 8034620:	f7ef fa16 	bl	8023a50 <SingleStepperAxis::SingleStepperAxis(char const*, unsigned char, AXIS_config_t*, COMM_CDM_MOTOR_torqueSettings_t const*, AXIS_motionProfile_t const* const*, unsigned char, bool (*)(unsigned char, unsigned char, unsigned char*, unsigned short), void (*)(float), float (*)())>
 8034624:	4a24      	ldr	r2, [pc, #144]	; (80346b8 <_GLOBAL__sub_I_g_wheelArticulationAxis_yNegRight+0x16c>)
 8034626:	4925      	ldr	r1, [pc, #148]	; (80346bc <_GLOBAL__sub_I_g_wheelArticulationAxis_yNegRight+0x170>)
 8034628:	f8cd 8014 	str.w	r8, [sp, #20]
 803462c:	f04f 0904 	mov.w	r9, #4
 8034630:	e9cd 2903 	strd	r2, r9, [sp, #12]
 8034634:	462b      	mov	r3, r5
 8034636:	e9cd 4406 	strd	r4, r4, [sp, #24]
 803463a:	e9cd 7401 	strd	r7, r4, [sp, #4]
 803463e:	9600      	str	r6, [sp, #0]
 8034640:	2223      	movs	r2, #35	; 0x23
 8034642:	481f      	ldr	r0, [pc, #124]	; (80346c0 <_GLOBAL__sub_I_g_wheelArticulationAxis_yNegRight+0x174>)
 8034644:	f7ef f90c 	bl	8023860 <MultiStepperAxis::MultiStepperAxis(char const*, unsigned char, AXIS_config_t*, COMM_CDM_MOTOR_torqueSettings_t const*, AXIS_motionProfile_t const* const*, unsigned char, SingleStepperAxis**, unsigned char, bool (*)(unsigned char, unsigned char, unsigned char*, unsigned short), void (*)(float), float (*)())>
 8034648:	4a1e      	ldr	r2, [pc, #120]	; (80346c4 <_GLOBAL__sub_I_g_wheelArticulationAxis_yNegRight+0x178>)
 803464a:	9203      	str	r2, [sp, #12]
 803464c:	e9cd 4406 	strd	r4, r4, [sp, #24]
 8034650:	e9cd 9804 	strd	r9, r8, [sp, #16]
 8034654:	e9cd 7401 	strd	r7, r4, [sp, #4]
 8034658:	491b      	ldr	r1, [pc, #108]	; (80346c8 <_GLOBAL__sub_I_g_wheelArticulationAxis_yNegRight+0x17c>)
 803465a:	9600      	str	r6, [sp, #0]
 803465c:	462b      	mov	r3, r5
 803465e:	2224      	movs	r2, #36	; 0x24
 8034660:	481a      	ldr	r0, [pc, #104]	; (80346cc <_GLOBAL__sub_I_g_wheelArticulationAxis_yNegRight+0x180>)
 8034662:	f7ef f8fd 	bl	8023860 <MultiStepperAxis::MultiStepperAxis(char const*, unsigned char, AXIS_config_t*, COMM_CDM_MOTOR_torqueSettings_t const*, AXIS_motionProfile_t const* const*, unsigned char, SingleStepperAxis**, unsigned char, bool (*)(unsigned char, unsigned char, unsigned char*, unsigned short), void (*)(float), float (*)())>
 8034666:	b009      	add	sp, #36	; 0x24
 8034668:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 803466c:	200023c8 	.word	0x200023c8
 8034670:	20002418 	.word	0x20002418
 8034674:	200023f0 	.word	0x200023f0
 8034678:	08048828 	.word	0x08048828
 803467c:	2000f3a8 	.word	0x2000f3a8
 8034680:	08048830 	.word	0x08048830
 8034684:	2000f1e0 	.word	0x2000f1e0
 8034688:	08048838 	.word	0x08048838
 803468c:	2000f440 	.word	0x2000f440
 8034690:	08048840 	.word	0x08048840
 8034694:	2000f148 	.word	0x2000f148
 8034698:	08048848 	.word	0x08048848
 803469c:	2000f0b0 	.word	0x2000f0b0
 80346a0:	08048850 	.word	0x08048850
 80346a4:	2000f310 	.word	0x2000f310
 80346a8:	08048858 	.word	0x08048858
 80346ac:	2000f018 	.word	0x2000f018
 80346b0:	08048860 	.word	0x08048860
 80346b4:	2000f278 	.word	0x2000f278
 80346b8:	200023f8 	.word	0x200023f8
 80346bc:	08048868 	.word	0x08048868
 80346c0:	2000eed8 	.word	0x2000eed8
 80346c4:	20002408 	.word	0x20002408
 80346c8:	08048874 	.word	0x08048874
 80346cc:	2000ef78 	.word	0x2000ef78
 80346d0:	08024425 	.word	0x08024425

080346d4 <HardwareBinManager::~HardwareBinManager()>:
 80346d4:	b510      	push	{r4, lr}
 80346d6:	4604      	mov	r4, r0
 80346d8:	6fc0      	ldr	r0, [r0, #124]	; 0x7c
 80346da:	4b09      	ldr	r3, [pc, #36]	; (8034700 <HardwareBinManager::~HardwareBinManager()+0x2c>)
 80346dc:	6023      	str	r3, [r4, #0]
 80346de:	b108      	cbz	r0, 80346e4 <HardwareBinManager::~HardwareBinManager()+0x10>
 80346e0:	f7fc fd90 	bl	8031204 <operator delete[](void*)>
 80346e4:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80346e6:	b108      	cbz	r0, 80346ec <HardwareBinManager::~HardwareBinManager()+0x18>
 80346e8:	f7fc fd8c 	bl	8031204 <operator delete[](void*)>
 80346ec:	6b60      	ldr	r0, [r4, #52]	; 0x34
 80346ee:	b108      	cbz	r0, 80346f4 <HardwareBinManager::~HardwareBinManager()+0x20>
 80346f0:	f7fc fd88 	bl	8031204 <operator delete[](void*)>
 80346f4:	6920      	ldr	r0, [r4, #16]
 80346f6:	b108      	cbz	r0, 80346fc <HardwareBinManager::~HardwareBinManager()+0x28>
 80346f8:	f7fc fd84 	bl	8031204 <operator delete[](void*)>
 80346fc:	4620      	mov	r0, r4
 80346fe:	bd10      	pop	{r4, pc}
 8034700:	08047ba0 	.word	0x08047ba0

08034704 <binStateChangeCallback(void*)>:
 8034704:	b570      	push	{r4, r5, r6, lr}
 8034706:	6803      	ldr	r3, [r0, #0]
 8034708:	b084      	sub	sp, #16
 803470a:	69db      	ldr	r3, [r3, #28]
 803470c:	4604      	mov	r4, r0
 803470e:	4798      	blx	r3
 8034710:	212f      	movs	r1, #47	; 0x2f
 8034712:	4603      	mov	r3, r0
 8034714:	481c      	ldr	r0, [pc, #112]	; (8034788 <binStateChangeCallback(void*)+0x84>)
 8034716:	9303      	str	r3, [sp, #12]
 8034718:	f00a fe21 	bl	803f35e <strrchr>
 803471c:	b330      	cbz	r0, 803476c <binStateChangeCallback(void*)+0x68>
 803471e:	481a      	ldr	r0, [pc, #104]	; (8034788 <binStateChangeCallback(void*)+0x84>)
 8034720:	212f      	movs	r1, #47	; 0x2f
 8034722:	f00a fe1c 	bl	803f35e <strrchr>
 8034726:	1c45      	adds	r5, r0, #1
 8034728:	6823      	ldr	r3, [r4, #0]
 803472a:	4620      	mov	r0, r4
 803472c:	695a      	ldr	r2, [r3, #20]
 803472e:	6a1e      	ldr	r6, [r3, #32]
 8034730:	4790      	blx	r2
 8034732:	4601      	mov	r1, r0
 8034734:	4620      	mov	r0, r4
 8034736:	47b0      	blx	r6
 8034738:	4629      	mov	r1, r5
 803473a:	2226      	movs	r2, #38	; 0x26
 803473c:	9000      	str	r0, [sp, #0]
 803473e:	4b13      	ldr	r3, [pc, #76]	; (803478c <binStateChangeCallback(void*)+0x88>)
 8034740:	2002      	movs	r0, #2
 8034742:	f7ee f829 	bl	8022798 <DEBUG_logMsg>
 8034746:	6823      	ldr	r3, [r4, #0]
 8034748:	4620      	mov	r0, r4
 803474a:	699b      	ldr	r3, [r3, #24]
 803474c:	4798      	blx	r3
 803474e:	4601      	mov	r1, r0
 8034750:	201f      	movs	r0, #31
 8034752:	f7ef fd7f 	bl	8024254 <CCP_setMirrorData>
 8034756:	2204      	movs	r2, #4
 8034758:	a903      	add	r1, sp, #12
 803475a:	2003      	movs	r0, #3
 803475c:	f7ef fc28 	bl	8023fb0 <CCP_sendDataMessage>
 8034760:	f44f 7000 	mov.w	r0, #512	; 0x200
 8034764:	f7f1 f836 	bl	80257d4 <ANTCTRL_setEvent>
 8034768:	b004      	add	sp, #16
 803476a:	bd70      	pop	{r4, r5, r6, pc}
 803476c:	4806      	ldr	r0, [pc, #24]	; (8034788 <binStateChangeCallback(void*)+0x84>)
 803476e:	215c      	movs	r1, #92	; 0x5c
 8034770:	f00a fdf5 	bl	803f35e <strrchr>
 8034774:	b128      	cbz	r0, 8034782 <binStateChangeCallback(void*)+0x7e>
 8034776:	4804      	ldr	r0, [pc, #16]	; (8034788 <binStateChangeCallback(void*)+0x84>)
 8034778:	215c      	movs	r1, #92	; 0x5c
 803477a:	f00a fdf0 	bl	803f35e <strrchr>
 803477e:	1c45      	adds	r5, r0, #1
 8034780:	e7d2      	b.n	8034728 <binStateChangeCallback(void*)+0x24>
 8034782:	4d01      	ldr	r5, [pc, #4]	; (8034788 <binStateChangeCallback(void*)+0x84>)
 8034784:	e7d0      	b.n	8034728 <binStateChangeCallback(void*)+0x24>
 8034786:	bf00      	nop
 8034788:	080488bc 	.word	0x080488bc
 803478c:	0804890c 	.word	0x0804890c

08034790 <_GLOBAL__sub_I_binManager>:
 8034790:	b510      	push	{r4, lr}
 8034792:	4c09      	ldr	r4, [pc, #36]	; (80347b8 <_GLOBAL__sub_I_binManager+0x28>)
 8034794:	4909      	ldr	r1, [pc, #36]	; (80347bc <_GLOBAL__sub_I_binManager+0x2c>)
 8034796:	b082      	sub	sp, #8
 8034798:	230a      	movs	r3, #10
 803479a:	4622      	mov	r2, r4
 803479c:	9300      	str	r3, [sp, #0]
 803479e:	4620      	mov	r0, r4
 80347a0:	2305      	movs	r3, #5
 80347a2:	f7fc fced 	bl	8031180 <HardwareBinManager::HardwareBinManager(void (*)(void*), void*, unsigned short, unsigned int)>
 80347a6:	4a06      	ldr	r2, [pc, #24]	; (80347c0 <_GLOBAL__sub_I_binManager+0x30>)
 80347a8:	4906      	ldr	r1, [pc, #24]	; (80347c4 <_GLOBAL__sub_I_binManager+0x34>)
 80347aa:	4620      	mov	r0, r4
 80347ac:	b002      	add	sp, #8
 80347ae:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80347b2:	f00a bb23 	b.w	803edfc <__aeabi_atexit>
 80347b6:	bf00      	nop
 80347b8:	2000f4d8 	.word	0x2000f4d8
 80347bc:	08034705 	.word	0x08034705
 80347c0:	200124cc 	.word	0x200124cc
 80347c4:	080346d5 	.word	0x080346d5

080347c8 <_GLOBAL__sub_I_robot>:
 80347c8:	4b2f      	ldr	r3, [pc, #188]	; (8034888 <_GLOBAL__sub_I_robot+0xc0>)
 80347ca:	4930      	ldr	r1, [pc, #192]	; (803488c <_GLOBAL__sub_I_robot+0xc4>)
 80347cc:	681b      	ldr	r3, [r3, #0]
 80347ce:	4a30      	ldr	r2, [pc, #192]	; (8034890 <_GLOBAL__sub_I_robot+0xc8>)
 80347d0:	4830      	ldr	r0, [pc, #192]	; (8034894 <_GLOBAL__sub_I_robot+0xcc>)
 80347d2:	6812      	ldr	r2, [r2, #0]
 80347d4:	6800      	ldr	r0, [r0, #0]
 80347d6:	b4f0      	push	{r4, r5, r6, r7}
 80347d8:	4c2f      	ldr	r4, [pc, #188]	; (8034898 <_GLOBAL__sub_I_robot+0xd0>)
 80347da:	600b      	str	r3, [r1, #0]
 80347dc:	492f      	ldr	r1, [pc, #188]	; (803489c <_GLOBAL__sub_I_robot+0xd4>)
 80347de:	6824      	ldr	r4, [r4, #0]
 80347e0:	4d2f      	ldr	r5, [pc, #188]	; (80348a0 <_GLOBAL__sub_I_robot+0xd8>)
 80347e2:	4e30      	ldr	r6, [pc, #192]	; (80348a4 <_GLOBAL__sub_I_robot+0xdc>)
 80347e4:	604a      	str	r2, [r1, #4]
 80347e6:	6088      	str	r0, [r1, #8]
 80347e8:	60cc      	str	r4, [r1, #12]
 80347ea:	4a2f      	ldr	r2, [pc, #188]	; (80348a8 <_GLOBAL__sub_I_robot+0xe0>)
 80347ec:	482f      	ldr	r0, [pc, #188]	; (80348ac <_GLOBAL__sub_I_robot+0xe4>)
 80347ee:	4c30      	ldr	r4, [pc, #192]	; (80348b0 <_GLOBAL__sub_I_robot+0xe8>)
 80347f0:	682d      	ldr	r5, [r5, #0]
 80347f2:	6837      	ldr	r7, [r6, #0]
 80347f4:	6812      	ldr	r2, [r2, #0]
 80347f6:	6800      	ldr	r0, [r0, #0]
 80347f8:	6824      	ldr	r4, [r4, #0]
 80347fa:	610d      	str	r5, [r1, #16]
 80347fc:	4e2d      	ldr	r6, [pc, #180]	; (80348b4 <_GLOBAL__sub_I_robot+0xec>)
 80347fe:	4d2e      	ldr	r5, [pc, #184]	; (80348b8 <_GLOBAL__sub_I_robot+0xf0>)
 8034800:	618a      	str	r2, [r1, #24]
 8034802:	61c8      	str	r0, [r1, #28]
 8034804:	620c      	str	r4, [r1, #32]
 8034806:	4a2d      	ldr	r2, [pc, #180]	; (80348bc <_GLOBAL__sub_I_robot+0xf4>)
 8034808:	482d      	ldr	r0, [pc, #180]	; (80348c0 <_GLOBAL__sub_I_robot+0xf8>)
 803480a:	4c2e      	ldr	r4, [pc, #184]	; (80348c4 <_GLOBAL__sub_I_robot+0xfc>)
 803480c:	6836      	ldr	r6, [r6, #0]
 803480e:	682d      	ldr	r5, [r5, #0]
 8034810:	6812      	ldr	r2, [r2, #0]
 8034812:	6800      	ldr	r0, [r0, #0]
 8034814:	6824      	ldr	r4, [r4, #0]
 8034816:	614e      	str	r6, [r1, #20]
 8034818:	624d      	str	r5, [r1, #36]	; 0x24
 803481a:	4e2b      	ldr	r6, [pc, #172]	; (80348c8 <_GLOBAL__sub_I_robot+0x100>)
 803481c:	4d2b      	ldr	r5, [pc, #172]	; (80348cc <_GLOBAL__sub_I_robot+0x104>)
 803481e:	62ca      	str	r2, [r1, #44]	; 0x2c
 8034820:	6308      	str	r0, [r1, #48]	; 0x30
 8034822:	634c      	str	r4, [r1, #52]	; 0x34
 8034824:	4a2a      	ldr	r2, [pc, #168]	; (80348d0 <_GLOBAL__sub_I_robot+0x108>)
 8034826:	482b      	ldr	r0, [pc, #172]	; (80348d4 <_GLOBAL__sub_I_robot+0x10c>)
 8034828:	4c2b      	ldr	r4, [pc, #172]	; (80348d8 <_GLOBAL__sub_I_robot+0x110>)
 803482a:	6836      	ldr	r6, [r6, #0]
 803482c:	682d      	ldr	r5, [r5, #0]
 803482e:	600f      	str	r7, [r1, #0]
 8034830:	628e      	str	r6, [r1, #40]	; 0x28
 8034832:	638d      	str	r5, [r1, #56]	; 0x38
 8034834:	4e29      	ldr	r6, [pc, #164]	; (80348dc <_GLOBAL__sub_I_robot+0x114>)
 8034836:	6812      	ldr	r2, [r2, #0]
 8034838:	6800      	ldr	r0, [r0, #0]
 803483a:	6824      	ldr	r4, [r4, #0]
 803483c:	4d28      	ldr	r5, [pc, #160]	; (80348e0 <_GLOBAL__sub_I_robot+0x118>)
 803483e:	63ca      	str	r2, [r1, #60]	; 0x3c
 8034840:	6408      	str	r0, [r1, #64]	; 0x40
 8034842:	4a28      	ldr	r2, [pc, #160]	; (80348e4 <_GLOBAL__sub_I_robot+0x11c>)
 8034844:	4828      	ldr	r0, [pc, #160]	; (80348e8 <_GLOBAL__sub_I_robot+0x120>)
 8034846:	644c      	str	r4, [r1, #68]	; 0x44
 8034848:	4c28      	ldr	r4, [pc, #160]	; (80348ec <_GLOBAL__sub_I_robot+0x124>)
 803484a:	6836      	ldr	r6, [r6, #0]
 803484c:	682d      	ldr	r5, [r5, #0]
 803484e:	6812      	ldr	r2, [r2, #0]
 8034850:	6800      	ldr	r0, [r0, #0]
 8034852:	6824      	ldr	r4, [r4, #0]
 8034854:	648e      	str	r6, [r1, #72]	; 0x48
 8034856:	64cd      	str	r5, [r1, #76]	; 0x4c
 8034858:	4e25      	ldr	r6, [pc, #148]	; (80348f0 <_GLOBAL__sub_I_robot+0x128>)
 803485a:	4d26      	ldr	r5, [pc, #152]	; (80348f4 <_GLOBAL__sub_I_robot+0x12c>)
 803485c:	650a      	str	r2, [r1, #80]	; 0x50
 803485e:	6548      	str	r0, [r1, #84]	; 0x54
 8034860:	4a25      	ldr	r2, [pc, #148]	; (80348f8 <_GLOBAL__sub_I_robot+0x130>)
 8034862:	4826      	ldr	r0, [pc, #152]	; (80348fc <_GLOBAL__sub_I_robot+0x134>)
 8034864:	658c      	str	r4, [r1, #88]	; 0x58
 8034866:	4c26      	ldr	r4, [pc, #152]	; (8034900 <_GLOBAL__sub_I_robot+0x138>)
 8034868:	6836      	ldr	r6, [r6, #0]
 803486a:	682d      	ldr	r5, [r5, #0]
 803486c:	6812      	ldr	r2, [r2, #0]
 803486e:	6800      	ldr	r0, [r0, #0]
 8034870:	6824      	ldr	r4, [r4, #0]
 8034872:	664a      	str	r2, [r1, #100]	; 0x64
 8034874:	e9c1 6517 	strd	r6, r5, [r1, #92]	; 0x5c
 8034878:	6688      	str	r0, [r1, #104]	; 0x68
 803487a:	66cc      	str	r4, [r1, #108]	; 0x6c
 803487c:	4821      	ldr	r0, [pc, #132]	; (8034904 <_GLOBAL__sub_I_robot+0x13c>)
 803487e:	bcf0      	pop	{r4, r5, r6, r7}
 8034880:	221c      	movs	r2, #28
 8034882:	f7ee b905 	b.w	8022a90 <Robot::Robot(AxisBase**, unsigned char, Robot::Sensors)>
 8034886:	bf00      	nop
 8034888:	20002450 	.word	0x20002450
 803488c:	2000f5bc 	.word	0x2000f5bc
 8034890:	20002268 	.word	0x20002268
 8034894:	2000226c 	.word	0x2000226c
 8034898:	20002270 	.word	0x20002270
 803489c:	2000f5c0 	.word	0x2000f5c0
 80348a0:	20002274 	.word	0x20002274
 80348a4:	20002264 	.word	0x20002264
 80348a8:	2000227c 	.word	0x2000227c
 80348ac:	20002280 	.word	0x20002280
 80348b0:	20002284 	.word	0x20002284
 80348b4:	20002278 	.word	0x20002278
 80348b8:	20002288 	.word	0x20002288
 80348bc:	2000228c 	.word	0x2000228c
 80348c0:	20002294 	.word	0x20002294
 80348c4:	20002300 	.word	0x20002300
 80348c8:	20002290 	.word	0x20002290
 80348cc:	20002304 	.word	0x20002304
 80348d0:	200022fc 	.word	0x200022fc
 80348d4:	20002364 	.word	0x20002364
 80348d8:	200023c4 	.word	0x200023c4
 80348dc:	20002444 	.word	0x20002444
 80348e0:	20002448 	.word	0x20002448
 80348e4:	2000244c 	.word	0x2000244c
 80348e8:	20002440 	.word	0x20002440
 80348ec:	20002438 	.word	0x20002438
 80348f0:	2000243c 	.word	0x2000243c
 80348f4:	20002430 	.word	0x20002430
 80348f8:	20002434 	.word	0x20002434
 80348fc:	20002428 	.word	0x20002428
 8034900:	2000242c 	.word	0x2000242c
 8034904:	2000f630 	.word	0x2000f630

08034908 <handleIRQ(USART_TypeDef*)>:
 8034908:	b5f0      	push	{r4, r5, r6, r7, lr}
 803490a:	4c25      	ldr	r4, [pc, #148]	; (80349a0 <handleIRQ(USART_TypeDef*)+0x98>)
 803490c:	6823      	ldr	r3, [r4, #0]
 803490e:	4298      	cmp	r0, r3
 8034910:	b083      	sub	sp, #12
 8034912:	d004      	beq.n	803491e <handleIRQ(USART_TypeDef*)+0x16>
 8034914:	6923      	ldr	r3, [r4, #16]
 8034916:	4298      	cmp	r0, r3
 8034918:	d025      	beq.n	8034966 <handleIRQ(USART_TypeDef*)+0x5e>
 803491a:	b003      	add	sp, #12
 803491c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 803491e:	2300      	movs	r3, #0
 8034920:	eb04 1603 	add.w	r6, r4, r3, lsl #4
 8034924:	011d      	lsls	r5, r3, #4
 8034926:	7b33      	ldrb	r3, [r6, #12]
 8034928:	2b00      	cmp	r3, #0
 803492a:	d0f6      	beq.n	803491a <handleIRQ(USART_TypeDef*)+0x12>
 803492c:	5960      	ldr	r0, [r4, r5]
 803492e:	2180      	movs	r1, #128	; 0x80
 8034930:	f007 fc4c 	bl	803c1cc <USART_GetFlagStatus>
 8034934:	2801      	cmp	r0, #1
 8034936:	4607      	mov	r7, r0
 8034938:	d017      	beq.n	803496a <handleIRQ(USART_TypeDef*)+0x62>
 803493a:	5960      	ldr	r0, [r4, r5]
 803493c:	2120      	movs	r1, #32
 803493e:	f007 fc45 	bl	803c1cc <USART_GetFlagStatus>
 8034942:	2801      	cmp	r0, #1
 8034944:	eb04 0605 	add.w	r6, r4, r5
 8034948:	d1e7      	bne.n	803491a <handleIRQ(USART_TypeDef*)+0x12>
 803494a:	5960      	ldr	r0, [r4, r5]
 803494c:	f007 fb66 	bl	803c01c <USART_ReceiveData>
 8034950:	6873      	ldr	r3, [r6, #4]
 8034952:	b10b      	cbz	r3, 8034958 <handleIRQ(USART_TypeDef*)+0x50>
 8034954:	b2c0      	uxtb	r0, r0
 8034956:	4798      	blx	r3
 8034958:	5960      	ldr	r0, [r4, r5]
 803495a:	2201      	movs	r2, #1
 803495c:	f240 5125 	movw	r1, #1317	; 0x525
 8034960:	f007 fb92 	bl	803c088 <USART_ITConfig>
 8034964:	e7d9      	b.n	803491a <handleIRQ(USART_TypeDef*)+0x12>
 8034966:	2301      	movs	r3, #1
 8034968:	e7da      	b.n	8034920 <handleIRQ(USART_TypeDef*)+0x18>
 803496a:	5962      	ldr	r2, [r4, r5]
 803496c:	68b0      	ldr	r0, [r6, #8]
 803496e:	8993      	ldrh	r3, [r2, #12]
 8034970:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8034974:	041b      	lsls	r3, r3, #16
 8034976:	0c1b      	lsrs	r3, r3, #16
 8034978:	8193      	strh	r3, [r2, #12]
 803497a:	f10d 0107 	add.w	r1, sp, #7
 803497e:	463a      	mov	r2, r7
 8034980:	f007 fcec 	bl	803c35c <FIFO_getData>
 8034984:	2800      	cmp	r0, #0
 8034986:	d0d8      	beq.n	803493a <handleIRQ(USART_TypeDef*)+0x32>
 8034988:	f89d 1007 	ldrb.w	r1, [sp, #7]
 803498c:	5960      	ldr	r0, [r4, r5]
 803498e:	f007 fb01 	bl	803bf94 <USART_SendData>
 8034992:	5960      	ldr	r0, [r4, r5]
 8034994:	463a      	mov	r2, r7
 8034996:	f240 7127 	movw	r1, #1831	; 0x727
 803499a:	f007 fb75 	bl	803c088 <USART_ITConfig>
 803499e:	e7cc      	b.n	803493a <handleIRQ(USART_TypeDef*)+0x32>
 80349a0:	20010638 	.word	0x20010638

080349a4 <USART_init>:
 80349a4:	b510      	push	{r4, lr}
 80349a6:	4c06      	ldr	r4, [pc, #24]	; (80349c0 <USART_init+0x1c>)
 80349a8:	2220      	movs	r2, #32
 80349aa:	4620      	mov	r0, r4
 80349ac:	2100      	movs	r1, #0
 80349ae:	f00a fe51 	bl	803f654 <memset>
 80349b2:	4b04      	ldr	r3, [pc, #16]	; (80349c4 <USART_init+0x20>)
 80349b4:	60a3      	str	r3, [r4, #8]
 80349b6:	f203 53ec 	addw	r3, r3, #1516	; 0x5ec
 80349ba:	61a3      	str	r3, [r4, #24]
 80349bc:	bd10      	pop	{r4, pc}
 80349be:	bf00      	nop
 80349c0:	20010638 	.word	0x20010638
 80349c4:	2000f640 	.word	0x2000f640

080349c8 <USART_setup>:
 80349c8:	b5f0      	push	{r4, r5, r6, r7, lr}
 80349ca:	460f      	mov	r7, r1
 80349cc:	b087      	sub	sp, #28
 80349ce:	4604      	mov	r4, r0
 80349d0:	2800      	cmp	r0, #0
 80349d2:	d050      	beq.n	8034a76 <USART_setup+0xae>
 80349d4:	2801      	cmp	r0, #1
 80349d6:	d14c      	bne.n	8034a72 <USART_setup+0xaa>
 80349d8:	4e43      	ldr	r6, [pc, #268]	; (8034ae8 <USART_setup+0x120>)
 80349da:	4b44      	ldr	r3, [pc, #272]	; (8034aec <USART_setup+0x124>)
 80349dc:	6133      	str	r3, [r6, #16]
 80349de:	4601      	mov	r1, r0
 80349e0:	f44f 2080 	mov.w	r0, #262144	; 0x40000
 80349e4:	f006 fffa 	bl	803b9dc <RCC_APB1PeriphClockCmd>
 80349e8:	4b41      	ldr	r3, [pc, #260]	; (8034af0 <USART_setup+0x128>)
 80349ea:	9301      	str	r3, [sp, #4]
 80349ec:	f44f 7080 	mov.w	r0, #256	; 0x100
 80349f0:	f000 fb44 	bl	803507c <GPIO_getPinSourceVal>
 80349f4:	2207      	movs	r2, #7
 80349f6:	b281      	uxth	r1, r0
 80349f8:	483e      	ldr	r0, [pc, #248]	; (8034af4 <USART_setup+0x12c>)
 80349fa:	f006 ff25 	bl	803b848 <GPIO_PinAFConfig>
 80349fe:	f44f 7000 	mov.w	r0, #512	; 0x200
 8034a02:	f000 fb3b 	bl	803507c <GPIO_getPinSourceVal>
 8034a06:	2207      	movs	r2, #7
 8034a08:	b281      	uxth	r1, r0
 8034a0a:	483a      	ldr	r0, [pc, #232]	; (8034af4 <USART_setup+0x12c>)
 8034a0c:	f006 ff1c 	bl	803b848 <GPIO_PinAFConfig>
 8034a10:	f44f 53d8 	mov.w	r3, #6912	; 0x1b00
 8034a14:	4837      	ldr	r0, [pc, #220]	; (8034af4 <USART_setup+0x12c>)
 8034a16:	9300      	str	r3, [sp, #0]
 8034a18:	4669      	mov	r1, sp
 8034a1a:	f006 fd07 	bl	803b42c <GPIO_Init>
 8034a1e:	4b36      	ldr	r3, [pc, #216]	; (8034af8 <USART_setup+0x130>)
 8034a20:	f44f 30e1 	mov.w	r0, #115200	; 0x1c200
 8034a24:	2100      	movs	r1, #0
 8034a26:	f44f 2240 	mov.w	r2, #786432	; 0xc0000
 8034a2a:	9002      	str	r0, [sp, #8]
 8034a2c:	9103      	str	r1, [sp, #12]
 8034a2e:	9204      	str	r2, [sp, #16]
 8034a30:	f44f 7040 	mov.w	r0, #768	; 0x300
 8034a34:	21a0      	movs	r1, #160	; 0xa0
 8034a36:	2280      	movs	r2, #128	; 0x80
 8034a38:	f8ad 0014 	strh.w	r0, [sp, #20]
 8034a3c:	f883 1327 	strb.w	r1, [r3, #807]	; 0x327
 8034a40:	605a      	str	r2, [r3, #4]
 8034a42:	eb06 1504 	add.w	r5, r6, r4, lsl #4
 8034a46:	0124      	lsls	r4, r4, #4
 8034a48:	68a8      	ldr	r0, [r5, #8]
 8034a4a:	f240 51dc 	movw	r1, #1500	; 0x5dc
 8034a4e:	f007 fc2f 	bl	803c2b0 <FIFO_initBuffer>
 8034a52:	5930      	ldr	r0, [r6, r4]
 8034a54:	606f      	str	r7, [r5, #4]
 8034a56:	a902      	add	r1, sp, #8
 8034a58:	f007 f95e 	bl	803bd18 <USART_Init>
 8034a5c:	5930      	ldr	r0, [r6, r4]
 8034a5e:	2101      	movs	r1, #1
 8034a60:	f007 fa50 	bl	803bf04 <USART_Cmd>
 8034a64:	2201      	movs	r2, #1
 8034a66:	5930      	ldr	r0, [r6, r4]
 8034a68:	732a      	strb	r2, [r5, #12]
 8034a6a:	f240 5125 	movw	r1, #1317	; 0x525
 8034a6e:	f007 fb0b 	bl	803c088 <USART_ITConfig>
 8034a72:	b007      	add	sp, #28
 8034a74:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8034a76:	4e1c      	ldr	r6, [pc, #112]	; (8034ae8 <USART_setup+0x120>)
 8034a78:	4b20      	ldr	r3, [pc, #128]	; (8034afc <USART_setup+0x134>)
 8034a7a:	6033      	str	r3, [r6, #0]
 8034a7c:	2101      	movs	r1, #1
 8034a7e:	f44f 2000 	mov.w	r0, #524288	; 0x80000
 8034a82:	f006 ffab 	bl	803b9dc <RCC_APB1PeriphClockCmd>
 8034a86:	4b1a      	ldr	r3, [pc, #104]	; (8034af0 <USART_setup+0x128>)
 8034a88:	9301      	str	r3, [sp, #4]
 8034a8a:	f44f 6000 	mov.w	r0, #2048	; 0x800
 8034a8e:	f000 faf5 	bl	803507c <GPIO_getPinSourceVal>
 8034a92:	2208      	movs	r2, #8
 8034a94:	b281      	uxth	r1, r0
 8034a96:	481a      	ldr	r0, [pc, #104]	; (8034b00 <USART_setup+0x138>)
 8034a98:	f006 fed6 	bl	803b848 <GPIO_PinAFConfig>
 8034a9c:	2001      	movs	r0, #1
 8034a9e:	f000 faed 	bl	803507c <GPIO_getPinSourceVal>
 8034aa2:	2208      	movs	r2, #8
 8034aa4:	b281      	uxth	r1, r0
 8034aa6:	4817      	ldr	r0, [pc, #92]	; (8034b04 <USART_setup+0x13c>)
 8034aa8:	f006 fece 	bl	803b848 <GPIO_PinAFConfig>
 8034aac:	2301      	movs	r3, #1
 8034aae:	4815      	ldr	r0, [pc, #84]	; (8034b04 <USART_setup+0x13c>)
 8034ab0:	9300      	str	r3, [sp, #0]
 8034ab2:	4669      	mov	r1, sp
 8034ab4:	f006 fcba 	bl	803b42c <GPIO_Init>
 8034ab8:	f44f 6300 	mov.w	r3, #2048	; 0x800
 8034abc:	4810      	ldr	r0, [pc, #64]	; (8034b00 <USART_setup+0x138>)
 8034abe:	9300      	str	r3, [sp, #0]
 8034ac0:	4669      	mov	r1, sp
 8034ac2:	f006 fcb3 	bl	803b42c <GPIO_Init>
 8034ac6:	4b0c      	ldr	r3, [pc, #48]	; (8034af8 <USART_setup+0x130>)
 8034ac8:	9403      	str	r4, [sp, #12]
 8034aca:	f44f 32e1 	mov.w	r2, #115200	; 0x1c200
 8034ace:	9202      	str	r2, [sp, #8]
 8034ad0:	f44f 2040 	mov.w	r0, #786432	; 0xc0000
 8034ad4:	21a0      	movs	r1, #160	; 0xa0
 8034ad6:	f44f 1280 	mov.w	r2, #1048576	; 0x100000
 8034ada:	f8ad 4014 	strh.w	r4, [sp, #20]
 8034ade:	9004      	str	r0, [sp, #16]
 8034ae0:	f883 1334 	strb.w	r1, [r3, #820]	; 0x334
 8034ae4:	605a      	str	r2, [r3, #4]
 8034ae6:	e7ac      	b.n	8034a42 <USART_setup+0x7a>
 8034ae8:	20010638 	.word	0x20010638
 8034aec:	40004800 	.word	0x40004800
 8034af0:	01000302 	.word	0x01000302
 8034af4:	40020c00 	.word	0x40020c00
 8034af8:	e000e100 	.word	0xe000e100
 8034afc:	40004c00 	.word	0x40004c00
 8034b00:	40020800 	.word	0x40020800
 8034b04:	40020000 	.word	0x40020000

08034b08 <USART_initCcpUSART>:
 8034b08:	b570      	push	{r4, r5, r6, lr}
 8034b0a:	2101      	movs	r1, #1
 8034b0c:	b086      	sub	sp, #24
 8034b0e:	2010      	movs	r0, #16
 8034b10:	f006 ff8a 	bl	803ba28 <RCC_APB2PeriphClockCmd>
 8034b14:	4b36      	ldr	r3, [pc, #216]	; (8034bf0 <USART_initCcpUSART+0xe8>)
 8034b16:	9301      	str	r3, [sp, #4]
 8034b18:	f44f 6080 	mov.w	r0, #1024	; 0x400
 8034b1c:	f000 faae 	bl	803507c <GPIO_getPinSourceVal>
 8034b20:	4c34      	ldr	r4, [pc, #208]	; (8034bf4 <USART_initCcpUSART+0xec>)
 8034b22:	4e35      	ldr	r6, [pc, #212]	; (8034bf8 <USART_initCcpUSART+0xf0>)
 8034b24:	b281      	uxth	r1, r0
 8034b26:	2207      	movs	r2, #7
 8034b28:	4620      	mov	r0, r4
 8034b2a:	f006 fe8d 	bl	803b848 <GPIO_PinAFConfig>
 8034b2e:	f44f 7000 	mov.w	r0, #512	; 0x200
 8034b32:	f000 faa3 	bl	803507c <GPIO_getPinSourceVal>
 8034b36:	2207      	movs	r2, #7
 8034b38:	b281      	uxth	r1, r0
 8034b3a:	4620      	mov	r0, r4
 8034b3c:	f006 fe84 	bl	803b848 <GPIO_PinAFConfig>
 8034b40:	f44f 5080 	mov.w	r0, #4096	; 0x1000
 8034b44:	f000 fa9a 	bl	803507c <GPIO_getPinSourceVal>
 8034b48:	2207      	movs	r2, #7
 8034b4a:	b281      	uxth	r1, r0
 8034b4c:	4620      	mov	r0, r4
 8034b4e:	f006 fe7b 	bl	803b848 <GPIO_PinAFConfig>
 8034b52:	f44f 6000 	mov.w	r0, #2048	; 0x800
 8034b56:	f000 fa91 	bl	803507c <GPIO_getPinSourceVal>
 8034b5a:	2207      	movs	r2, #7
 8034b5c:	b281      	uxth	r1, r0
 8034b5e:	4620      	mov	r0, r4
 8034b60:	f006 fe72 	bl	803b848 <GPIO_PinAFConfig>
 8034b64:	4620      	mov	r0, r4
 8034b66:	f44f 53f0 	mov.w	r3, #7680	; 0x1e00
 8034b6a:	4669      	mov	r1, sp
 8034b6c:	9300      	str	r3, [sp, #0]
 8034b6e:	f006 fc5d 	bl	803b42c <GPIO_Init>
 8034b72:	f44f 2261 	mov.w	r2, #921600	; 0xe1000
 8034b76:	9202      	str	r2, [sp, #8]
 8034b78:	4b20      	ldr	r3, [pc, #128]	; (8034bfc <USART_initCcpUSART+0xf4>)
 8034b7a:	4c21      	ldr	r4, [pc, #132]	; (8034c00 <USART_initCcpUSART+0xf8>)
 8034b7c:	2500      	movs	r5, #0
 8034b7e:	f44f 2140 	mov.w	r1, #786432	; 0xc0000
 8034b82:	f44f 7240 	mov.w	r2, #768	; 0x300
 8034b86:	e9cd 5103 	strd	r5, r1, [sp, #12]
 8034b8a:	f8ad 2014 	strh.w	r2, [sp, #20]
 8034b8e:	21a0      	movs	r1, #160	; 0xa0
 8034b90:	2220      	movs	r2, #32
 8034b92:	f883 1325 	strb.w	r1, [r3, #805]	; 0x325
 8034b96:	4620      	mov	r0, r4
 8034b98:	4629      	mov	r1, r5
 8034b9a:	605a      	str	r2, [r3, #4]
 8034b9c:	f44f 7200 	mov.w	r2, #512	; 0x200
 8034ba0:	f00a fd58 	bl	803f654 <memset>
 8034ba4:	4623      	mov	r3, r4
 8034ba6:	2201      	movs	r2, #1
 8034ba8:	f44f 7100 	mov.w	r1, #512	; 0x200
 8034bac:	4815      	ldr	r0, [pc, #84]	; (8034c04 <USART_initCcpUSART+0xfc>)
 8034bae:	4c16      	ldr	r4, [pc, #88]	; (8034c08 <USART_initCcpUSART+0x100>)
 8034bb0:	f7f9 fbba 	bl	802e328 <UTILITIES_initRingBuff>
 8034bb4:	4629      	mov	r1, r5
 8034bb6:	4630      	mov	r0, r6
 8034bb8:	f44f 7200 	mov.w	r2, #512	; 0x200
 8034bbc:	f00a fd4a 	bl	803f654 <memset>
 8034bc0:	4633      	mov	r3, r6
 8034bc2:	2201      	movs	r2, #1
 8034bc4:	f44f 7100 	mov.w	r1, #512	; 0x200
 8034bc8:	4810      	ldr	r0, [pc, #64]	; (8034c0c <USART_initCcpUSART+0x104>)
 8034bca:	f7f9 fbad 	bl	802e328 <UTILITIES_initRingBuff>
 8034bce:	4620      	mov	r0, r4
 8034bd0:	a902      	add	r1, sp, #8
 8034bd2:	f007 f8a1 	bl	803bd18 <USART_Init>
 8034bd6:	4620      	mov	r0, r4
 8034bd8:	2201      	movs	r2, #1
 8034bda:	f240 5125 	movw	r1, #1317	; 0x525
 8034bde:	f007 fa53 	bl	803c088 <USART_ITConfig>
 8034be2:	4620      	mov	r0, r4
 8034be4:	2101      	movs	r1, #1
 8034be6:	f007 f98d 	bl	803bf04 <USART_Cmd>
 8034bea:	b006      	add	sp, #24
 8034bec:	bd70      	pop	{r4, r5, r6, pc}
 8034bee:	bf00      	nop
 8034bf0:	01000302 	.word	0x01000302
 8034bf4:	40020000 	.word	0x40020000
 8034bf8:	20010418 	.word	0x20010418
 8034bfc:	e000e100 	.word	0xe000e100
 8034c00:	20010218 	.word	0x20010218
 8034c04:	20010618 	.word	0x20010618
 8034c08:	40011000 	.word	0x40011000
 8034c0c:	20010628 	.word	0x20010628

08034c10 <USART_send>:
 8034c10:	2801      	cmp	r0, #1
 8034c12:	b570      	push	{r4, r5, r6, lr}
 8034c14:	d805      	bhi.n	8034c22 <USART_send+0x12>
 8034c16:	4e0b      	ldr	r6, [pc, #44]	; (8034c44 <USART_send+0x34>)
 8034c18:	eb06 1300 	add.w	r3, r6, r0, lsl #4
 8034c1c:	0104      	lsls	r4, r0, #4
 8034c1e:	7b18      	ldrb	r0, [r3, #12]
 8034c20:	b910      	cbnz	r0, 8034c28 <USART_send+0x18>
 8034c22:	2500      	movs	r5, #0
 8034c24:	4628      	mov	r0, r5
 8034c26:	bd70      	pop	{r4, r5, r6, pc}
 8034c28:	6898      	ldr	r0, [r3, #8]
 8034c2a:	f007 fb47 	bl	803c2bc <FIFO_addData>
 8034c2e:	4605      	mov	r5, r0
 8034c30:	2800      	cmp	r0, #0
 8034c32:	d0f6      	beq.n	8034c22 <USART_send+0x12>
 8034c34:	5930      	ldr	r0, [r6, r4]
 8034c36:	2201      	movs	r2, #1
 8034c38:	f240 7127 	movw	r1, #1831	; 0x727
 8034c3c:	f007 fa24 	bl	803c088 <USART_ITConfig>
 8034c40:	e7f0      	b.n	8034c24 <USART_send+0x14>
 8034c42:	bf00      	nop
 8034c44:	20010638 	.word	0x20010638

08034c48 <USART_sendCcpUsartData>:
 8034c48:	b570      	push	{r4, r5, r6, lr}
 8034c4a:	b158      	cbz	r0, 8034c64 <USART_sendCcpUsartData+0x1c>
 8034c4c:	b151      	cbz	r1, 8034c64 <USART_sendCcpUsartData+0x1c>
 8034c4e:	4e09      	ldr	r6, [pc, #36]	; (8034c74 <USART_sendCcpUsartData+0x2c>)
 8034c50:	4604      	mov	r4, r0
 8034c52:	1845      	adds	r5, r0, r1
 8034c54:	4621      	mov	r1, r4
 8034c56:	2200      	movs	r2, #0
 8034c58:	4630      	mov	r0, r6
 8034c5a:	3401      	adds	r4, #1
 8034c5c:	f7f9 fba4 	bl	802e3a8 <UTILITIES_pushRingBuff>
 8034c60:	42a5      	cmp	r5, r4
 8034c62:	d1f7      	bne.n	8034c54 <USART_sendCcpUsartData+0xc>
 8034c64:	4a04      	ldr	r2, [pc, #16]	; (8034c78 <USART_sendCcpUsartData+0x30>)
 8034c66:	8993      	ldrh	r3, [r2, #12]
 8034c68:	b29b      	uxth	r3, r3
 8034c6a:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8034c6e:	8193      	strh	r3, [r2, #12]
 8034c70:	bd70      	pop	{r4, r5, r6, pc}
 8034c72:	bf00      	nop
 8034c74:	20010628 	.word	0x20010628
 8034c78:	40011000 	.word	0x40011000

08034c7c <USART_readCcpUsartData>:
 8034c7c:	4601      	mov	r1, r0
 8034c7e:	4801      	ldr	r0, [pc, #4]	; (8034c84 <USART_readCcpUsartData+0x8>)
 8034c80:	f7f9 bb64 	b.w	802e34c <UTILITIES_popRingBuff>
 8034c84:	20010618 	.word	0x20010618

08034c88 <UART1_IRQ_handler>:
 8034c88:	b510      	push	{r4, lr}
 8034c8a:	4a19      	ldr	r2, [pc, #100]	; (8034cf0 <UART1_IRQ_handler+0x68>)
 8034c8c:	8813      	ldrh	r3, [r2, #0]
 8034c8e:	0699      	lsls	r1, r3, #26
 8034c90:	b082      	sub	sp, #8
 8034c92:	b29c      	uxth	r4, r3
 8034c94:	d403      	bmi.n	8034c9e <UART1_IRQ_handler+0x16>
 8034c96:	0623      	lsls	r3, r4, #24
 8034c98:	d411      	bmi.n	8034cbe <UART1_IRQ_handler+0x36>
 8034c9a:	b002      	add	sp, #8
 8034c9c:	bd10      	pop	{r4, pc}
 8034c9e:	8893      	ldrh	r3, [r2, #4]
 8034ca0:	4814      	ldr	r0, [pc, #80]	; (8034cf4 <UART1_IRQ_handler+0x6c>)
 8034ca2:	f88d 3007 	strb.w	r3, [sp, #7]
 8034ca6:	2201      	movs	r2, #1
 8034ca8:	f10d 0107 	add.w	r1, sp, #7
 8034cac:	f7f9 fb7c 	bl	802e3a8 <UTILITIES_pushRingBuff>
 8034cb0:	4811      	ldr	r0, [pc, #68]	; (8034cf8 <UART1_IRQ_handler+0x70>)
 8034cb2:	2200      	movs	r2, #0
 8034cb4:	2102      	movs	r1, #2
 8034cb6:	f004 fa5f 	bl	8039178 <_tx_event_flags_set>
 8034cba:	0623      	lsls	r3, r4, #24
 8034cbc:	d5ed      	bpl.n	8034c9a <UART1_IRQ_handler+0x12>
 8034cbe:	2300      	movs	r3, #0
 8034cc0:	480e      	ldr	r0, [pc, #56]	; (8034cfc <UART1_IRQ_handler+0x74>)
 8034cc2:	f88d 3007 	strb.w	r3, [sp, #7]
 8034cc6:	f10d 0107 	add.w	r1, sp, #7
 8034cca:	f7f9 fb3f 	bl	802e34c <UTILITIES_popRingBuff>
 8034cce:	2800      	cmp	r0, #0
 8034cd0:	db05      	blt.n	8034cde <UART1_IRQ_handler+0x56>
 8034cd2:	4b07      	ldr	r3, [pc, #28]	; (8034cf0 <UART1_IRQ_handler+0x68>)
 8034cd4:	f89d 2007 	ldrb.w	r2, [sp, #7]
 8034cd8:	809a      	strh	r2, [r3, #4]
 8034cda:	b002      	add	sp, #8
 8034cdc:	bd10      	pop	{r4, pc}
 8034cde:	4a04      	ldr	r2, [pc, #16]	; (8034cf0 <UART1_IRQ_handler+0x68>)
 8034ce0:	8993      	ldrh	r3, [r2, #12]
 8034ce2:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8034ce6:	041b      	lsls	r3, r3, #16
 8034ce8:	0c1b      	lsrs	r3, r3, #16
 8034cea:	8193      	strh	r3, [r2, #12]
 8034cec:	b002      	add	sp, #8
 8034cee:	bd10      	pop	{r4, pc}
 8034cf0:	40011000 	.word	0x40011000
 8034cf4:	20010618 	.word	0x20010618
 8034cf8:	20003718 	.word	0x20003718
 8034cfc:	20010628 	.word	0x20010628

08034d00 <UART2_IRQ_handler>:
 8034d00:	4801      	ldr	r0, [pc, #4]	; (8034d08 <UART2_IRQ_handler+0x8>)
 8034d02:	f7ff be01 	b.w	8034908 <handleIRQ(USART_TypeDef*)>
 8034d06:	bf00      	nop
 8034d08:	40004400 	.word	0x40004400

08034d0c <UART3_IRQ_handler>:
 8034d0c:	4801      	ldr	r0, [pc, #4]	; (8034d14 <UART3_IRQ_handler+0x8>)
 8034d0e:	f7ff bdfb 	b.w	8034908 <handleIRQ(USART_TypeDef*)>
 8034d12:	bf00      	nop
 8034d14:	40004800 	.word	0x40004800

08034d18 <UART4_IRQ_handler>:
 8034d18:	4801      	ldr	r0, [pc, #4]	; (8034d20 <UART4_IRQ_handler+0x8>)
 8034d1a:	f7ff bdf5 	b.w	8034908 <handleIRQ(USART_TypeDef*)>
 8034d1e:	bf00      	nop
 8034d20:	40004c00 	.word	0x40004c00

08034d24 <UART6_IRQ_handler>:
 8034d24:	4801      	ldr	r0, [pc, #4]	; (8034d2c <UART6_IRQ_handler+0x8>)
 8034d26:	f7ff bdef 	b.w	8034908 <handleIRQ(USART_TypeDef*)>
 8034d2a:	bf00      	nop
 8034d2c:	40011400 	.word	0x40011400

08034d30 <HWM_pwrp>:
 8034d30:	b500      	push	{lr}
 8034d32:	b083      	sub	sp, #12
 8034d34:	2200      	movs	r2, #0
 8034d36:	4b2f      	ldr	r3, [pc, #188]	; (8034df4 <HWM_pwrp+0xc4>)
 8034d38:	9200      	str	r2, [sp, #0]
 8034d3a:	9201      	str	r2, [sp, #4]
 8034d3c:	681a      	ldr	r2, [r3, #0]
 8034d3e:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 8034d42:	601a      	str	r2, [r3, #0]
 8034d44:	e003      	b.n	8034d4e <HWM_pwrp+0x1e>
 8034d46:	9a00      	ldr	r2, [sp, #0]
 8034d48:	f5b2 4fa0 	cmp.w	r2, #20480	; 0x5000
 8034d4c:	d009      	beq.n	8034d62 <HWM_pwrp+0x32>
 8034d4e:	681a      	ldr	r2, [r3, #0]
 8034d50:	f402 3200 	and.w	r2, r2, #131072	; 0x20000
 8034d54:	9201      	str	r2, [sp, #4]
 8034d56:	9a00      	ldr	r2, [sp, #0]
 8034d58:	3201      	adds	r2, #1
 8034d5a:	9200      	str	r2, [sp, #0]
 8034d5c:	9a01      	ldr	r2, [sp, #4]
 8034d5e:	2a00      	cmp	r2, #0
 8034d60:	d0f1      	beq.n	8034d46 <HWM_pwrp+0x16>
 8034d62:	4b24      	ldr	r3, [pc, #144]	; (8034df4 <HWM_pwrp+0xc4>)
 8034d64:	681b      	ldr	r3, [r3, #0]
 8034d66:	f413 3300 	ands.w	r3, r3, #131072	; 0x20000
 8034d6a:	bf18      	it	ne
 8034d6c:	2301      	movne	r3, #1
 8034d6e:	9301      	str	r3, [sp, #4]
 8034d70:	9b01      	ldr	r3, [sp, #4]
 8034d72:	2b01      	cmp	r3, #1
 8034d74:	d00e      	beq.n	8034d94 <HWM_pwrp+0x64>
 8034d76:	f7fc fe81 	bl	8031a7c <SystemCoreClockUpdate>
 8034d7a:	f000 f8f5 	bl	8034f68 <GPIO_init>
 8034d7e:	f7ff fe11 	bl	80349a4 <USART_init>
 8034d82:	f7ff fec1 	bl	8034b08 <USART_initCcpUSART>
 8034d86:	f000 fa7b 	bl	8035280 <SPI_init>
 8034d8a:	b003      	add	sp, #12
 8034d8c:	f85d eb04 	ldr.w	lr, [sp], #4
 8034d90:	f7fd b89c 	b.w	8031ecc <UPGRADER_eraseCRCKeyIfAny>
 8034d94:	4b17      	ldr	r3, [pc, #92]	; (8034df4 <HWM_pwrp+0xc4>)
 8034d96:	4918      	ldr	r1, [pc, #96]	; (8034df8 <HWM_pwrp+0xc8>)
 8034d98:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8034d9a:	4818      	ldr	r0, [pc, #96]	; (8034dfc <HWM_pwrp+0xcc>)
 8034d9c:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 8034da0:	641a      	str	r2, [r3, #64]	; 0x40
 8034da2:	680a      	ldr	r2, [r1, #0]
 8034da4:	f442 4240 	orr.w	r2, r2, #49152	; 0xc000
 8034da8:	600a      	str	r2, [r1, #0]
 8034daa:	689a      	ldr	r2, [r3, #8]
 8034dac:	609a      	str	r2, [r3, #8]
 8034dae:	689a      	ldr	r2, [r3, #8]
 8034db0:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 8034db4:	609a      	str	r2, [r3, #8]
 8034db6:	689a      	ldr	r2, [r3, #8]
 8034db8:	f442 52a0 	orr.w	r2, r2, #5120	; 0x1400
 8034dbc:	609a      	str	r2, [r3, #8]
 8034dbe:	6058      	str	r0, [r3, #4]
 8034dc0:	681a      	ldr	r2, [r3, #0]
 8034dc2:	f042 7280 	orr.w	r2, r2, #16777216	; 0x1000000
 8034dc6:	601a      	str	r2, [r3, #0]
 8034dc8:	681a      	ldr	r2, [r3, #0]
 8034dca:	0192      	lsls	r2, r2, #6
 8034dcc:	d5fc      	bpl.n	8034dc8 <HWM_pwrp+0x98>
 8034dce:	4a0c      	ldr	r2, [pc, #48]	; (8034e00 <HWM_pwrp+0xd0>)
 8034dd0:	4908      	ldr	r1, [pc, #32]	; (8034df4 <HWM_pwrp+0xc4>)
 8034dd2:	f240 7005 	movw	r0, #1797	; 0x705
 8034dd6:	6010      	str	r0, [r2, #0]
 8034dd8:	689a      	ldr	r2, [r3, #8]
 8034dda:	f022 0203 	bic.w	r2, r2, #3
 8034dde:	609a      	str	r2, [r3, #8]
 8034de0:	689a      	ldr	r2, [r3, #8]
 8034de2:	f042 0202 	orr.w	r2, r2, #2
 8034de6:	609a      	str	r2, [r3, #8]
 8034de8:	688b      	ldr	r3, [r1, #8]
 8034dea:	f003 030c 	and.w	r3, r3, #12
 8034dee:	2b08      	cmp	r3, #8
 8034df0:	d1fa      	bne.n	8034de8 <HWM_pwrp+0xb8>
 8034df2:	e7c0      	b.n	8034d76 <HWM_pwrp+0x46>
 8034df4:	40023800 	.word	0x40023800
 8034df8:	40007000 	.word	0x40007000
 8034dfc:	07405408 	.word	0x07405408
 8034e00:	40023c00 	.word	0x40023c00

08034e04 <HWM_init>:
 8034e04:	b508      	push	{r3, lr}
 8034e06:	4b08      	ldr	r3, [pc, #32]	; (8034e28 <HWM_init+0x24>)
 8034e08:	4a08      	ldr	r2, [pc, #32]	; (8034e2c <HWM_init+0x28>)
 8034e0a:	4909      	ldr	r1, [pc, #36]	; (8034e30 <HWM_init+0x2c>)
 8034e0c:	2040      	movs	r0, #64	; 0x40
 8034e0e:	8318      	strh	r0, [r3, #24]
 8034e10:	6b53      	ldr	r3, [r2, #52]	; 0x34
 8034e12:	2004      	movs	r0, #4
 8034e14:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8034e18:	6353      	str	r3, [r2, #52]	; 0x34
 8034e1a:	6008      	str	r0, [r1, #0]
 8034e1c:	f007 fafe 	bl	803c41c <FRAM_init>
 8034e20:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8034e24:	f007 bcf4 	b.w	803c810 <SRAM_init>
 8034e28:	40020000 	.word	0x40020000
 8034e2c:	40023800 	.word	0x40023800
 8034e30:	50060800 	.word	0x50060800

08034e34 <HWM_getRandomNum>:
 8034e34:	4b01      	ldr	r3, [pc, #4]	; (8034e3c <HWM_getRandomNum+0x8>)
 8034e36:	6898      	ldr	r0, [r3, #8]
 8034e38:	4770      	bx	lr
 8034e3a:	bf00      	nop
 8034e3c:	50060800 	.word	0x50060800

08034e40 <defaultCallback>:
 8034e40:	b510      	push	{r4, lr}
 8034e42:	480f      	ldr	r0, [pc, #60]	; (8034e80 <defaultCallback+0x40>)
 8034e44:	212f      	movs	r1, #47	; 0x2f
 8034e46:	f00a fa8a 	bl	803f35e <strrchr>
 8034e4a:	b160      	cbz	r0, 8034e66 <defaultCallback+0x26>
 8034e4c:	212f      	movs	r1, #47	; 0x2f
 8034e4e:	480c      	ldr	r0, [pc, #48]	; (8034e80 <defaultCallback+0x40>)
 8034e50:	f00a fa85 	bl	803f35e <strrchr>
 8034e54:	1c41      	adds	r1, r0, #1
 8034e56:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8034e5a:	4b0a      	ldr	r3, [pc, #40]	; (8034e84 <defaultCallback+0x44>)
 8034e5c:	f44f 729c 	mov.w	r2, #312	; 0x138
 8034e60:	2000      	movs	r0, #0
 8034e62:	f7ed bc99 	b.w	8022798 <DEBUG_logMsg>
 8034e66:	4806      	ldr	r0, [pc, #24]	; (8034e80 <defaultCallback+0x40>)
 8034e68:	215c      	movs	r1, #92	; 0x5c
 8034e6a:	f00a fa78 	bl	803f35e <strrchr>
 8034e6e:	b128      	cbz	r0, 8034e7c <defaultCallback+0x3c>
 8034e70:	215c      	movs	r1, #92	; 0x5c
 8034e72:	4803      	ldr	r0, [pc, #12]	; (8034e80 <defaultCallback+0x40>)
 8034e74:	f00a fa73 	bl	803f35e <strrchr>
 8034e78:	1c41      	adds	r1, r0, #1
 8034e7a:	e7ec      	b.n	8034e56 <defaultCallback+0x16>
 8034e7c:	4900      	ldr	r1, [pc, #0]	; (8034e80 <defaultCallback+0x40>)
 8034e7e:	e7ea      	b.n	8034e56 <defaultCallback+0x16>
 8034e80:	08048924 	.word	0x08048924
 8034e84:	08048958 	.word	0x08048958

08034e88 <setupInterrupt>:
 8034e88:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8034e8c:	b084      	sub	sp, #16
 8034e8e:	4b30      	ldr	r3, [pc, #192]	; (8034f50 <setupInterrupt+0xc8>)
 8034e90:	4e30      	ldr	r6, [pc, #192]	; (8034f54 <setupInterrupt+0xcc>)
 8034e92:	9301      	str	r3, [sp, #4]
 8034e94:	eb00 0340 	add.w	r3, r0, r0, lsl #1
 8034e98:	eb06 0383 	add.w	r3, r6, r3, lsl #2
 8034e9c:	4681      	mov	r9, r0
 8034e9e:	685c      	ldr	r4, [r3, #4]
 8034ea0:	885d      	ldrh	r5, [r3, #2]
 8034ea2:	9500      	str	r5, [sp, #0]
 8034ea4:	4688      	mov	r8, r1
 8034ea6:	4620      	mov	r0, r4
 8034ea8:	4669      	mov	r1, sp
 8034eaa:	4617      	mov	r7, r2
 8034eac:	ea4f 0a49 	mov.w	sl, r9, lsl #1
 8034eb0:	f006 fabc 	bl	803b42c <GPIO_Init>
 8034eb4:	4928      	ldr	r1, [pc, #160]	; (8034f58 <setupInterrupt+0xd0>)
 8034eb6:	4a29      	ldr	r2, [pc, #164]	; (8034f5c <setupInterrupt+0xd4>)
 8034eb8:	2300      	movs	r3, #0
 8034eba:	e001      	b.n	8034ec0 <setupInterrupt+0x38>
 8034ebc:	f851 2f04 	ldr.w	r2, [r1, #4]!
 8034ec0:	4294      	cmp	r4, r2
 8034ec2:	b2d8      	uxtb	r0, r3
 8034ec4:	f103 0301 	add.w	r3, r3, #1
 8034ec8:	d002      	beq.n	8034ed0 <setupInterrupt+0x48>
 8034eca:	2b0b      	cmp	r3, #11
 8034ecc:	d1f6      	bne.n	8034ebc <setupInterrupt+0x34>
 8034ece:	4618      	mov	r0, r3
 8034ed0:	2300      	movs	r3, #0
 8034ed2:	2201      	movs	r2, #1
 8034ed4:	e001      	b.n	8034eda <setupInterrupt+0x52>
 8034ed6:	2b20      	cmp	r3, #32
 8034ed8:	d038      	beq.n	8034f4c <setupInterrupt+0xc4>
 8034eda:	fa02 f403 	lsl.w	r4, r2, r3
 8034ede:	422c      	tst	r4, r5
 8034ee0:	b2d9      	uxtb	r1, r3
 8034ee2:	f103 0301 	add.w	r3, r3, #1
 8034ee6:	d0f6      	beq.n	8034ed6 <setupInterrupt+0x4e>
 8034ee8:	44d1      	add	r9, sl
 8034eea:	eb06 0689 	add.w	r6, r6, r9, lsl #2
 8034eee:	f006 fed9 	bl	803bca4 <SYSCFG_EXTILineConfig>
 8034ef2:	2300      	movs	r3, #0
 8034ef4:	a802      	add	r0, sp, #8
 8034ef6:	f88d 300c 	strb.w	r3, [sp, #12]
 8034efa:	9502      	str	r5, [sp, #8]
 8034efc:	f88d 800d 	strb.w	r8, [sp, #13]
 8034f00:	f88d 700e 	strb.w	r7, [sp, #14]
 8034f04:	f006 f956 	bl	803b1b4 <EXTI_Init>
 8034f08:	f996 300a 	ldrsb.w	r3, [r6, #10]
 8034f0c:	7a72      	ldrb	r2, [r6, #9]
 8034f0e:	2b00      	cmp	r3, #0
 8034f10:	db13      	blt.n	8034f3a <setupInterrupt+0xb2>
 8034f12:	f103 4160 	add.w	r1, r3, #3758096384	; 0xe0000000
 8034f16:	0112      	lsls	r2, r2, #4
 8034f18:	f501 4161 	add.w	r1, r1, #57600	; 0xe100
 8034f1c:	b2d2      	uxtb	r2, r2
 8034f1e:	f881 2300 	strb.w	r2, [r1, #768]	; 0x300
 8034f22:	b2da      	uxtb	r2, r3
 8034f24:	f002 011f 	and.w	r1, r2, #31
 8034f28:	480d      	ldr	r0, [pc, #52]	; (8034f60 <setupInterrupt+0xd8>)
 8034f2a:	095b      	lsrs	r3, r3, #5
 8034f2c:	2201      	movs	r2, #1
 8034f2e:	408a      	lsls	r2, r1
 8034f30:	f840 2023 	str.w	r2, [r0, r3, lsl #2]
 8034f34:	b004      	add	sp, #16
 8034f36:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8034f3a:	490a      	ldr	r1, [pc, #40]	; (8034f64 <setupInterrupt+0xdc>)
 8034f3c:	f003 000f 	and.w	r0, r3, #15
 8034f40:	0112      	lsls	r2, r2, #4
 8034f42:	4401      	add	r1, r0
 8034f44:	b2d2      	uxtb	r2, r2
 8034f46:	760a      	strb	r2, [r1, #24]
 8034f48:	b2da      	uxtb	r2, r3
 8034f4a:	e7eb      	b.n	8034f24 <setupInterrupt+0x9c>
 8034f4c:	4619      	mov	r1, r3
 8034f4e:	e7cb      	b.n	8034ee8 <setupInterrupt+0x60>
 8034f50:	00010300 	.word	0x00010300
 8034f54:	08048970 	.word	0x08048970
 8034f58:	080489ac 	.word	0x080489ac
 8034f5c:	40020000 	.word	0x40020000
 8034f60:	e000e100 	.word	0xe000e100
 8034f64:	e000ecfc 	.word	0xe000ecfc

08034f68 <GPIO_init>:
 8034f68:	b530      	push	{r4, r5, lr}
 8034f6a:	4b3c      	ldr	r3, [pc, #240]	; (803505c <GPIO_init+0xf4>)
 8034f6c:	4d3c      	ldr	r5, [pc, #240]	; (8035060 <GPIO_init+0xf8>)
 8034f6e:	2400      	movs	r4, #0
 8034f70:	b083      	sub	sp, #12
 8034f72:	4622      	mov	r2, r4
 8034f74:	2001      	movs	r0, #1
 8034f76:	fa00 f104 	lsl.w	r1, r0, r4
 8034f7a:	3401      	adds	r4, #1
 8034f7c:	2c10      	cmp	r4, #16
 8034f7e:	601d      	str	r5, [r3, #0]
 8034f80:	731a      	strb	r2, [r3, #12]
 8034f82:	611a      	str	r2, [r3, #16]
 8034f84:	6099      	str	r1, [r3, #8]
 8034f86:	f103 0314 	add.w	r3, r3, #20
 8034f8a:	d1f4      	bne.n	8034f76 <GPIO_init+0xe>
 8034f8c:	2101      	movs	r1, #1
 8034f8e:	4608      	mov	r0, r1
 8034f90:	f006 fcfc 	bl	803b98c <RCC_AHB1PeriphClockCmd>
 8034f94:	2101      	movs	r1, #1
 8034f96:	2002      	movs	r0, #2
 8034f98:	f006 fcf8 	bl	803b98c <RCC_AHB1PeriphClockCmd>
 8034f9c:	2101      	movs	r1, #1
 8034f9e:	2004      	movs	r0, #4
 8034fa0:	f006 fcf4 	bl	803b98c <RCC_AHB1PeriphClockCmd>
 8034fa4:	2101      	movs	r1, #1
 8034fa6:	2008      	movs	r0, #8
 8034fa8:	f006 fcf0 	bl	803b98c <RCC_AHB1PeriphClockCmd>
 8034fac:	4620      	mov	r0, r4
 8034fae:	2101      	movs	r1, #1
 8034fb0:	f006 fcec 	bl	803b98c <RCC_AHB1PeriphClockCmd>
 8034fb4:	2101      	movs	r1, #1
 8034fb6:	2020      	movs	r0, #32
 8034fb8:	f006 fce8 	bl	803b98c <RCC_AHB1PeriphClockCmd>
 8034fbc:	2101      	movs	r1, #1
 8034fbe:	2040      	movs	r0, #64	; 0x40
 8034fc0:	f006 fce4 	bl	803b98c <RCC_AHB1PeriphClockCmd>
 8034fc4:	2101      	movs	r1, #1
 8034fc6:	2080      	movs	r0, #128	; 0x80
 8034fc8:	f006 fce0 	bl	803b98c <RCC_AHB1PeriphClockCmd>
 8034fcc:	2101      	movs	r1, #1
 8034fce:	f44f 7080 	mov.w	r0, #256	; 0x100
 8034fd2:	f006 fcdb 	bl	803b98c <RCC_AHB1PeriphClockCmd>
 8034fd6:	2101      	movs	r1, #1
 8034fd8:	f44f 7000 	mov.w	r0, #512	; 0x200
 8034fdc:	f006 fcd6 	bl	803b98c <RCC_AHB1PeriphClockCmd>
 8034fe0:	4b20      	ldr	r3, [pc, #128]	; (8035064 <GPIO_init+0xfc>)
 8034fe2:	4821      	ldr	r0, [pc, #132]	; (8035068 <GPIO_init+0x100>)
 8034fe4:	2204      	movs	r2, #4
 8034fe6:	4669      	mov	r1, sp
 8034fe8:	e9cd 2300 	strd	r2, r3, [sp]
 8034fec:	f006 fa1e 	bl	803b42c <GPIO_Init>
 8034ff0:	4669      	mov	r1, sp
 8034ff2:	2308      	movs	r3, #8
 8034ff4:	481c      	ldr	r0, [pc, #112]	; (8035068 <GPIO_init+0x100>)
 8034ff6:	9300      	str	r3, [sp, #0]
 8034ff8:	f006 fa18 	bl	803b42c <GPIO_Init>
 8034ffc:	4669      	mov	r1, sp
 8034ffe:	2340      	movs	r3, #64	; 0x40
 8035000:	481a      	ldr	r0, [pc, #104]	; (803506c <GPIO_init+0x104>)
 8035002:	9300      	str	r3, [sp, #0]
 8035004:	f006 fa12 	bl	803b42c <GPIO_Init>
 8035008:	4669      	mov	r1, sp
 803500a:	2320      	movs	r3, #32
 803500c:	4817      	ldr	r0, [pc, #92]	; (803506c <GPIO_init+0x104>)
 803500e:	9300      	str	r3, [sp, #0]
 8035010:	f006 fa0c 	bl	803b42c <GPIO_Init>
 8035014:	4669      	mov	r1, sp
 8035016:	2302      	movs	r3, #2
 8035018:	4815      	ldr	r0, [pc, #84]	; (8035070 <GPIO_init+0x108>)
 803501a:	9300      	str	r3, [sp, #0]
 803501c:	f006 fa06 	bl	803b42c <GPIO_Init>
 8035020:	4669      	mov	r1, sp
 8035022:	2380      	movs	r3, #128	; 0x80
 8035024:	4813      	ldr	r0, [pc, #76]	; (8035074 <GPIO_init+0x10c>)
 8035026:	9300      	str	r3, [sp, #0]
 8035028:	f006 fa00 	bl	803b42c <GPIO_Init>
 803502c:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8035030:	4669      	mov	r1, sp
 8035032:	4810      	ldr	r0, [pc, #64]	; (8035074 <GPIO_init+0x10c>)
 8035034:	9300      	str	r3, [sp, #0]
 8035036:	f006 f9f9 	bl	803b42c <GPIO_Init>
 803503a:	4669      	mov	r1, sp
 803503c:	480e      	ldr	r0, [pc, #56]	; (8035078 <GPIO_init+0x110>)
 803503e:	9400      	str	r4, [sp, #0]
 8035040:	f006 f9f4 	bl	803b42c <GPIO_Init>
 8035044:	f44f 52f0 	mov.w	r2, #7680	; 0x1e00
 8035048:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
 803504c:	4806      	ldr	r0, [pc, #24]	; (8035068 <GPIO_init+0x100>)
 803504e:	4669      	mov	r1, sp
 8035050:	e9cd 2300 	strd	r2, r3, [sp]
 8035054:	f006 f9ea 	bl	803b42c <GPIO_Init>
 8035058:	b003      	add	sp, #12
 803505a:	bd30      	pop	{r4, r5, pc}
 803505c:	20010658 	.word	0x20010658
 8035060:	08034e41 	.word	0x08034e41
 8035064:	02000101 	.word	0x02000101
 8035068:	40021c00 	.word	0x40021c00
 803506c:	40020000 	.word	0x40020000
 8035070:	40021800 	.word	0x40021800
 8035074:	40021000 	.word	0x40021000
 8035078:	40021400 	.word	0x40021400

0803507c <GPIO_getPinSourceVal>:
 803507c:	b410      	push	{r4}
 803507e:	2300      	movs	r3, #0
 8035080:	2401      	movs	r4, #1
 8035082:	e001      	b.n	8035088 <GPIO_getPinSourceVal+0xc>
 8035084:	2b20      	cmp	r3, #32
 8035086:	d00a      	beq.n	803509e <GPIO_getPinSourceVal+0x22>
 8035088:	fa04 f203 	lsl.w	r2, r4, r3
 803508c:	4202      	tst	r2, r0
 803508e:	b2d9      	uxtb	r1, r3
 8035090:	f103 0301 	add.w	r3, r3, #1
 8035094:	d0f6      	beq.n	8035084 <GPIO_getPinSourceVal+0x8>
 8035096:	4608      	mov	r0, r1
 8035098:	f85d 4b04 	ldr.w	r4, [sp], #4
 803509c:	4770      	bx	lr
 803509e:	4619      	mov	r1, r3
 80350a0:	4608      	mov	r0, r1
 80350a2:	f85d 4b04 	ldr.w	r4, [sp], #4
 80350a6:	4770      	bx	lr

080350a8 <GPIO_setupExtiInterrupt>:
 80350a8:	f8df c07c 	ldr.w	ip, [pc, #124]	; 8035128 <GPIO_setupExtiInterrupt+0x80>
 80350ac:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80350b0:	eb00 0440 	add.w	r4, r0, r0, lsl #1
 80350b4:	eb0c 0484 	add.w	r4, ip, r4, lsl #2
 80350b8:	4696      	mov	lr, r2
 80350ba:	8867      	ldrh	r7, [r4, #2]
 80350bc:	4688      	mov	r8, r1
 80350be:	0042      	lsls	r2, r0, #1
 80350c0:	2400      	movs	r4, #0
 80350c2:	2601      	movs	r6, #1
 80350c4:	e002      	b.n	80350cc <GPIO_setupExtiInterrupt+0x24>
 80350c6:	3401      	adds	r4, #1
 80350c8:	2c20      	cmp	r4, #32
 80350ca:	d003      	beq.n	80350d4 <GPIO_setupExtiInterrupt+0x2c>
 80350cc:	fa06 f504 	lsl.w	r5, r6, r4
 80350d0:	423d      	tst	r5, r7
 80350d2:	d0f8      	beq.n	80350c6 <GPIO_setupExtiInterrupt+0x1e>
 80350d4:	4e13      	ldr	r6, [pc, #76]	; (8035124 <GPIO_setupExtiInterrupt+0x7c>)
 80350d6:	eb04 0484 	add.w	r4, r4, r4, lsl #2
 80350da:	eb06 0584 	add.w	r5, r6, r4, lsl #2
 80350de:	00a4      	lsls	r4, r4, #2
 80350e0:	7b29      	ldrb	r1, [r5, #12]
 80350e2:	b181      	cbz	r1, 8035106 <GPIO_setupExtiInterrupt+0x5e>
 80350e4:	b10b      	cbz	r3, 80350ea <GPIO_setupExtiInterrupt+0x42>
 80350e6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80350ea:	4402      	add	r2, r0
 80350ec:	eb0c 0c82 	add.w	ip, ip, r2, lsl #2
 80350f0:	5133      	str	r3, [r6, r4]
 80350f2:	732b      	strb	r3, [r5, #12]
 80350f4:	606b      	str	r3, [r5, #4]
 80350f6:	612b      	str	r3, [r5, #16]
 80350f8:	f89c 1008 	ldrb.w	r1, [ip, #8]
 80350fc:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8035100:	461a      	mov	r2, r3
 8035102:	f7ff bec1 	b.w	8034e88 <setupInterrupt>
 8035106:	4402      	add	r2, r0
 8035108:	eb0c 0282 	add.w	r2, ip, r2, lsl #2
 803510c:	612a      	str	r2, [r5, #16]
 803510e:	7a11      	ldrb	r1, [r2, #8]
 8035110:	f846 8004 	str.w	r8, [r6, r4]
 8035114:	732b      	strb	r3, [r5, #12]
 8035116:	f8c5 e004 	str.w	lr, [r5, #4]
 803511a:	461a      	mov	r2, r3
 803511c:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8035120:	f7ff beb2 	b.w	8034e88 <setupInterrupt>
 8035124:	20010658 	.word	0x20010658
 8035128:	08048970 	.word	0x08048970

0803512c <GPIO_setPins>:
 803512c:	b10a      	cbz	r2, 8035132 <GPIO_setPins+0x6>
 803512e:	f006 ba8f 	b.w	803b650 <GPIO_SetBits>
 8035132:	f006 bacf 	b.w	803b6d4 <GPIO_ResetBits>
 8035136:	bf00      	nop

08035138 <GPIO_readPin>:
 8035138:	b082      	sub	sp, #8
 803513a:	ab02      	add	r3, sp, #8
 803513c:	e903 0003 	stmdb	r3, {r0, r1}
 8035140:	9b01      	ldr	r3, [sp, #4]
 8035142:	f8bd 2000 	ldrh.w	r2, [sp]
 8035146:	691b      	ldr	r3, [r3, #16]
 8035148:	421a      	tst	r2, r3
 803514a:	bf14      	ite	ne
 803514c:	2001      	movne	r0, #1
 803514e:	2000      	moveq	r0, #0
 8035150:	b002      	add	sp, #8
 8035152:	4770      	bx	lr

08035154 <EXTI0_IRQ_Handler>:
 8035154:	b510      	push	{r4, lr}
 8035156:	4c06      	ldr	r4, [pc, #24]	; (8035170 <EXTI0_IRQ_Handler+0x1c>)
 8035158:	6923      	ldr	r3, [r4, #16]
 803515a:	6822      	ldr	r2, [r4, #0]
 803515c:	6859      	ldr	r1, [r3, #4]
 803515e:	789b      	ldrb	r3, [r3, #2]
 8035160:	6908      	ldr	r0, [r1, #16]
 8035162:	6861      	ldr	r1, [r4, #4]
 8035164:	4018      	ands	r0, r3
 8035166:	4790      	blx	r2
 8035168:	4b02      	ldr	r3, [pc, #8]	; (8035174 <EXTI0_IRQ_Handler+0x20>)
 803516a:	68a2      	ldr	r2, [r4, #8]
 803516c:	615a      	str	r2, [r3, #20]
 803516e:	bd10      	pop	{r4, pc}
 8035170:	20010658 	.word	0x20010658
 8035174:	40013c00 	.word	0x40013c00

08035178 <EXTI1_IRQ_Handler>:
 8035178:	b510      	push	{r4, lr}
 803517a:	4c06      	ldr	r4, [pc, #24]	; (8035194 <EXTI1_IRQ_Handler+0x1c>)
 803517c:	6a63      	ldr	r3, [r4, #36]	; 0x24
 803517e:	6962      	ldr	r2, [r4, #20]
 8035180:	6859      	ldr	r1, [r3, #4]
 8035182:	789b      	ldrb	r3, [r3, #2]
 8035184:	6908      	ldr	r0, [r1, #16]
 8035186:	69a1      	ldr	r1, [r4, #24]
 8035188:	4018      	ands	r0, r3
 803518a:	4790      	blx	r2
 803518c:	4b02      	ldr	r3, [pc, #8]	; (8035198 <EXTI1_IRQ_Handler+0x20>)
 803518e:	69e2      	ldr	r2, [r4, #28]
 8035190:	615a      	str	r2, [r3, #20]
 8035192:	bd10      	pop	{r4, pc}
 8035194:	20010658 	.word	0x20010658
 8035198:	40013c00 	.word	0x40013c00

0803519c <EXTI2_IRQ_Handler>:
 803519c:	b510      	push	{r4, lr}
 803519e:	4c06      	ldr	r4, [pc, #24]	; (80351b8 <EXTI2_IRQ_Handler+0x1c>)
 80351a0:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 80351a2:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 80351a4:	6859      	ldr	r1, [r3, #4]
 80351a6:	789b      	ldrb	r3, [r3, #2]
 80351a8:	6908      	ldr	r0, [r1, #16]
 80351aa:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 80351ac:	4018      	ands	r0, r3
 80351ae:	4790      	blx	r2
 80351b0:	4b02      	ldr	r3, [pc, #8]	; (80351bc <EXTI2_IRQ_Handler+0x20>)
 80351b2:	6b22      	ldr	r2, [r4, #48]	; 0x30
 80351b4:	615a      	str	r2, [r3, #20]
 80351b6:	bd10      	pop	{r4, pc}
 80351b8:	20010658 	.word	0x20010658
 80351bc:	40013c00 	.word	0x40013c00

080351c0 <EXTI3_IRQ_Handler>:
 80351c0:	b510      	push	{r4, lr}
 80351c2:	4c06      	ldr	r4, [pc, #24]	; (80351dc <EXTI3_IRQ_Handler+0x1c>)
 80351c4:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
 80351c6:	6be2      	ldr	r2, [r4, #60]	; 0x3c
 80351c8:	6859      	ldr	r1, [r3, #4]
 80351ca:	789b      	ldrb	r3, [r3, #2]
 80351cc:	6908      	ldr	r0, [r1, #16]
 80351ce:	6c21      	ldr	r1, [r4, #64]	; 0x40
 80351d0:	4018      	ands	r0, r3
 80351d2:	4790      	blx	r2
 80351d4:	4b02      	ldr	r3, [pc, #8]	; (80351e0 <EXTI3_IRQ_Handler+0x20>)
 80351d6:	6c62      	ldr	r2, [r4, #68]	; 0x44
 80351d8:	615a      	str	r2, [r3, #20]
 80351da:	bd10      	pop	{r4, pc}
 80351dc:	20010658 	.word	0x20010658
 80351e0:	40013c00 	.word	0x40013c00

080351e4 <EXTI4_IRQ_Handler>:
 80351e4:	b510      	push	{r4, lr}
 80351e6:	4c06      	ldr	r4, [pc, #24]	; (8035200 <EXTI4_IRQ_Handler+0x1c>)
 80351e8:	6e23      	ldr	r3, [r4, #96]	; 0x60
 80351ea:	6d22      	ldr	r2, [r4, #80]	; 0x50
 80351ec:	6859      	ldr	r1, [r3, #4]
 80351ee:	789b      	ldrb	r3, [r3, #2]
 80351f0:	6908      	ldr	r0, [r1, #16]
 80351f2:	6d61      	ldr	r1, [r4, #84]	; 0x54
 80351f4:	4018      	ands	r0, r3
 80351f6:	4790      	blx	r2
 80351f8:	4b02      	ldr	r3, [pc, #8]	; (8035204 <EXTI4_IRQ_Handler+0x20>)
 80351fa:	6da2      	ldr	r2, [r4, #88]	; 0x58
 80351fc:	615a      	str	r2, [r3, #20]
 80351fe:	bd10      	pop	{r4, pc}
 8035200:	20010658 	.word	0x20010658
 8035204:	40013c00 	.word	0x40013c00

08035208 <EXTI9_5_IRQ_Handler>:
 8035208:	b570      	push	{r4, r5, r6, lr}
 803520a:	4c0b      	ldr	r4, [pc, #44]	; (8035238 <EXTI9_5_IRQ_Handler+0x30>)
 803520c:	4d0b      	ldr	r5, [pc, #44]	; (803523c <EXTI9_5_IRQ_Handler+0x34>)
 803520e:	f104 0664 	add.w	r6, r4, #100	; 0x64
 8035212:	696a      	ldr	r2, [r5, #20]
 8035214:	6ee3      	ldr	r3, [r4, #108]	; 0x6c
 8035216:	421a      	tst	r2, r3
 8035218:	d009      	beq.n	803522e <EXTI9_5_IRQ_Handler+0x26>
 803521a:	6f63      	ldr	r3, [r4, #116]	; 0x74
 803521c:	6e62      	ldr	r2, [r4, #100]	; 0x64
 803521e:	6859      	ldr	r1, [r3, #4]
 8035220:	789b      	ldrb	r3, [r3, #2]
 8035222:	6908      	ldr	r0, [r1, #16]
 8035224:	6ea1      	ldr	r1, [r4, #104]	; 0x68
 8035226:	4018      	ands	r0, r3
 8035228:	4790      	blx	r2
 803522a:	6ee3      	ldr	r3, [r4, #108]	; 0x6c
 803522c:	616b      	str	r3, [r5, #20]
 803522e:	3414      	adds	r4, #20
 8035230:	42b4      	cmp	r4, r6
 8035232:	d1ee      	bne.n	8035212 <EXTI9_5_IRQ_Handler+0xa>
 8035234:	bd70      	pop	{r4, r5, r6, pc}
 8035236:	bf00      	nop
 8035238:	20010658 	.word	0x20010658
 803523c:	40013c00 	.word	0x40013c00

08035240 <EXTI15_10_IRQ_Handler>:
 8035240:	b570      	push	{r4, r5, r6, lr}
 8035242:	4c0d      	ldr	r4, [pc, #52]	; (8035278 <EXTI15_10_IRQ_Handler+0x38>)
 8035244:	4d0d      	ldr	r5, [pc, #52]	; (803527c <EXTI15_10_IRQ_Handler+0x3c>)
 8035246:	f104 0678 	add.w	r6, r4, #120	; 0x78
 803524a:	696a      	ldr	r2, [r5, #20]
 803524c:	f8d4 30d0 	ldr.w	r3, [r4, #208]	; 0xd0
 8035250:	421a      	tst	r2, r3
 8035252:	d00d      	beq.n	8035270 <EXTI15_10_IRQ_Handler+0x30>
 8035254:	f8d4 30d8 	ldr.w	r3, [r4, #216]	; 0xd8
 8035258:	f8d4 20c8 	ldr.w	r2, [r4, #200]	; 0xc8
 803525c:	6859      	ldr	r1, [r3, #4]
 803525e:	789b      	ldrb	r3, [r3, #2]
 8035260:	6908      	ldr	r0, [r1, #16]
 8035262:	f8d4 10cc 	ldr.w	r1, [r4, #204]	; 0xcc
 8035266:	4018      	ands	r0, r3
 8035268:	4790      	blx	r2
 803526a:	f8d4 30d0 	ldr.w	r3, [r4, #208]	; 0xd0
 803526e:	616b      	str	r3, [r5, #20]
 8035270:	3414      	adds	r4, #20
 8035272:	42b4      	cmp	r4, r6
 8035274:	d1e9      	bne.n	803524a <EXTI15_10_IRQ_Handler+0xa>
 8035276:	bd70      	pop	{r4, r5, r6, pc}
 8035278:	20010658 	.word	0x20010658
 803527c:	40013c00 	.word	0x40013c00

08035280 <SPI_init>:
 8035280:	4802      	ldr	r0, [pc, #8]	; (803528c <SPI_init+0xc>)
 8035282:	2220      	movs	r2, #32
 8035284:	2100      	movs	r1, #0
 8035286:	f00a b9e5 	b.w	803f654 <memset>
 803528a:	bf00      	nop
 803528c:	20010798 	.word	0x20010798

08035290 <SPI_setup>:
 8035290:	b570      	push	{r4, r5, r6, lr}
 8035292:	b088      	sub	sp, #32
 8035294:	4604      	mov	r4, r0
 8035296:	a803      	add	r0, sp, #12
 8035298:	f006 fcc0 	bl	803bc1c <SPI_StructInit>
 803529c:	f240 3302 	movw	r3, #770	; 0x302
 80352a0:	2c01      	cmp	r4, #1
 80352a2:	9302      	str	r3, [sp, #8]
 80352a4:	d006      	beq.n	80352b4 <SPI_setup+0x24>
 80352a6:	2c02      	cmp	r4, #2
 80352a8:	f000 80a8 	beq.w	80353fc <SPI_setup+0x16c>
 80352ac:	2c00      	cmp	r4, #0
 80352ae:	d056      	beq.n	803535e <SPI_setup+0xce>
 80352b0:	b008      	add	sp, #32
 80352b2:	bd70      	pop	{r4, r5, r6, pc}
 80352b4:	4d78      	ldr	r5, [pc, #480]	; (8035498 <SPI_setup+0x208>)
 80352b6:	4b79      	ldr	r3, [pc, #484]	; (803549c <SPI_setup+0x20c>)
 80352b8:	60ab      	str	r3, [r5, #8]
 80352ba:	4621      	mov	r1, r4
 80352bc:	f44f 5000 	mov.w	r0, #8192	; 0x2000
 80352c0:	f006 fbb2 	bl	803ba28 <RCC_APB2PeriphClockCmd>
 80352c4:	2608      	movs	r6, #8
 80352c6:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
 80352ca:	f04f 7182 	mov.w	r1, #17039360	; 0x1040000
 80352ce:	2200      	movs	r2, #0
 80352d0:	2020      	movs	r0, #32
 80352d2:	e9cd 3605 	strd	r3, r6, [sp, #20]
 80352d6:	e9cd 1203 	strd	r1, r2, [sp, #12]
 80352da:	f7ff fecf 	bl	803507c <GPIO_getPinSourceVal>
 80352de:	2205      	movs	r2, #5
 80352e0:	b281      	uxth	r1, r0
 80352e2:	486f      	ldr	r0, [pc, #444]	; (80354a0 <SPI_setup+0x210>)
 80352e4:	f006 fab0 	bl	803b848 <GPIO_PinAFConfig>
 80352e8:	2040      	movs	r0, #64	; 0x40
 80352ea:	f7ff fec7 	bl	803507c <GPIO_getPinSourceVal>
 80352ee:	2205      	movs	r2, #5
 80352f0:	b281      	uxth	r1, r0
 80352f2:	486b      	ldr	r0, [pc, #428]	; (80354a0 <SPI_setup+0x210>)
 80352f4:	f006 faa8 	bl	803b848 <GPIO_PinAFConfig>
 80352f8:	2004      	movs	r0, #4
 80352fa:	f7ff febf 	bl	803507c <GPIO_getPinSourceVal>
 80352fe:	2205      	movs	r2, #5
 8035300:	b281      	uxth	r1, r0
 8035302:	4867      	ldr	r0, [pc, #412]	; (80354a0 <SPI_setup+0x210>)
 8035304:	f006 faa0 	bl	803b848 <GPIO_PinAFConfig>
 8035308:	2320      	movs	r3, #32
 803530a:	4865      	ldr	r0, [pc, #404]	; (80354a0 <SPI_setup+0x210>)
 803530c:	9301      	str	r3, [sp, #4]
 803530e:	a901      	add	r1, sp, #4
 8035310:	f006 f88c 	bl	803b42c <GPIO_Init>
 8035314:	2340      	movs	r3, #64	; 0x40
 8035316:	4862      	ldr	r0, [pc, #392]	; (80354a0 <SPI_setup+0x210>)
 8035318:	9301      	str	r3, [sp, #4]
 803531a:	a901      	add	r1, sp, #4
 803531c:	f006 f886 	bl	803b42c <GPIO_Init>
 8035320:	485f      	ldr	r0, [pc, #380]	; (80354a0 <SPI_setup+0x210>)
 8035322:	a901      	add	r1, sp, #4
 8035324:	2304      	movs	r3, #4
 8035326:	9301      	str	r3, [sp, #4]
 8035328:	f006 f880 	bl	803b42c <GPIO_Init>
 803532c:	485c      	ldr	r0, [pc, #368]	; (80354a0 <SPI_setup+0x210>)
 803532e:	9601      	str	r6, [sp, #4]
 8035330:	a901      	add	r1, sp, #4
 8035332:	f88d 4008 	strb.w	r4, [sp, #8]
 8035336:	f88d 400b 	strb.w	r4, [sp, #11]
 803533a:	f006 f877 	bl	803b42c <GPIO_Init>
 803533e:	f855 0034 	ldr.w	r0, [r5, r4, lsl #3]
 8035342:	a903      	add	r1, sp, #12
 8035344:	f006 fbc0 	bl	803bac8 <SPI_Init>
 8035348:	f855 0034 	ldr.w	r0, [r5, r4, lsl #3]
 803534c:	2101      	movs	r1, #1
 803534e:	f006 fc71 	bl	803bc34 <SPI_Cmd>
 8035352:	eb05 04c4 	add.w	r4, r5, r4, lsl #3
 8035356:	2301      	movs	r3, #1
 8035358:	7123      	strb	r3, [r4, #4]
 803535a:	b008      	add	sp, #32
 803535c:	bd70      	pop	{r4, r5, r6, pc}
 803535e:	4d4e      	ldr	r5, [pc, #312]	; (8035498 <SPI_setup+0x208>)
 8035360:	4b50      	ldr	r3, [pc, #320]	; (80354a4 <SPI_setup+0x214>)
 8035362:	602b      	str	r3, [r5, #0]
 8035364:	2101      	movs	r1, #1
 8035366:	f44f 4000 	mov.w	r0, #32768	; 0x8000
 803536a:	f006 fb37 	bl	803b9dc <RCC_APB1PeriphClockCmd>
 803536e:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
 8035372:	f04f 7282 	mov.w	r2, #17039360	; 0x1040000
 8035376:	2010      	movs	r0, #16
 8035378:	9305      	str	r3, [sp, #20]
 803537a:	9203      	str	r2, [sp, #12]
 803537c:	9404      	str	r4, [sp, #16]
 803537e:	9406      	str	r4, [sp, #24]
 8035380:	f7ff fe7c 	bl	803507c <GPIO_getPinSourceVal>
 8035384:	2206      	movs	r2, #6
 8035386:	b281      	uxth	r1, r0
 8035388:	4847      	ldr	r0, [pc, #284]	; (80354a8 <SPI_setup+0x218>)
 803538a:	f006 fa5d 	bl	803b848 <GPIO_PinAFConfig>
 803538e:	2040      	movs	r0, #64	; 0x40
 8035390:	f7ff fe74 	bl	803507c <GPIO_getPinSourceVal>
 8035394:	2205      	movs	r2, #5
 8035396:	b281      	uxth	r1, r0
 8035398:	4844      	ldr	r0, [pc, #272]	; (80354ac <SPI_setup+0x21c>)
 803539a:	f006 fa55 	bl	803b848 <GPIO_PinAFConfig>
 803539e:	f44f 6080 	mov.w	r0, #1024	; 0x400
 80353a2:	f7ff fe6b 	bl	803507c <GPIO_getPinSourceVal>
 80353a6:	2206      	movs	r2, #6
 80353a8:	b281      	uxth	r1, r0
 80353aa:	4841      	ldr	r0, [pc, #260]	; (80354b0 <SPI_setup+0x220>)
 80353ac:	f006 fa4c 	bl	803b848 <GPIO_PinAFConfig>
 80353b0:	a901      	add	r1, sp, #4
 80353b2:	2310      	movs	r3, #16
 80353b4:	483c      	ldr	r0, [pc, #240]	; (80354a8 <SPI_setup+0x218>)
 80353b6:	9301      	str	r3, [sp, #4]
 80353b8:	f006 f838 	bl	803b42c <GPIO_Init>
 80353bc:	a901      	add	r1, sp, #4
 80353be:	2340      	movs	r3, #64	; 0x40
 80353c0:	483a      	ldr	r0, [pc, #232]	; (80354ac <SPI_setup+0x21c>)
 80353c2:	9301      	str	r3, [sp, #4]
 80353c4:	f006 f832 	bl	803b42c <GPIO_Init>
 80353c8:	a901      	add	r1, sp, #4
 80353ca:	f44f 6380 	mov.w	r3, #1024	; 0x400
 80353ce:	4838      	ldr	r0, [pc, #224]	; (80354b0 <SPI_setup+0x220>)
 80353d0:	9301      	str	r3, [sp, #4]
 80353d2:	f006 f82b 	bl	803b42c <GPIO_Init>
 80353d6:	2301      	movs	r3, #1
 80353d8:	a901      	add	r1, sp, #4
 80353da:	2280      	movs	r2, #128	; 0x80
 80353dc:	4833      	ldr	r0, [pc, #204]	; (80354ac <SPI_setup+0x21c>)
 80353de:	f88d 3008 	strb.w	r3, [sp, #8]
 80353e2:	f88d 300b 	strb.w	r3, [sp, #11]
 80353e6:	9201      	str	r2, [sp, #4]
 80353e8:	f006 f820 	bl	803b42c <GPIO_Init>
 80353ec:	f44f 7300 	mov.w	r3, #512	; 0x200
 80353f0:	4830      	ldr	r0, [pc, #192]	; (80354b4 <SPI_setup+0x224>)
 80353f2:	9301      	str	r3, [sp, #4]
 80353f4:	a901      	add	r1, sp, #4
 80353f6:	f006 f819 	bl	803b42c <GPIO_Init>
 80353fa:	e7a0      	b.n	803533e <SPI_setup+0xae>
 80353fc:	4d26      	ldr	r5, [pc, #152]	; (8035498 <SPI_setup+0x208>)
 80353fe:	4b2e      	ldr	r3, [pc, #184]	; (80354b8 <SPI_setup+0x228>)
 8035400:	612b      	str	r3, [r5, #16]
 8035402:	2101      	movs	r1, #1
 8035404:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
 8035408:	f006 fb0e 	bl	803ba28 <RCC_APB2PeriphClockCmd>
 803540c:	f04f 7082 	mov.w	r0, #17039360	; 0x1040000
 8035410:	2310      	movs	r3, #16
 8035412:	2100      	movs	r1, #0
 8035414:	f04f 7200 	mov.w	r2, #33554432	; 0x2000000
 8035418:	9003      	str	r0, [sp, #12]
 803541a:	f44f 7080 	mov.w	r0, #256	; 0x100
 803541e:	9306      	str	r3, [sp, #24]
 8035420:	e9cd 1204 	strd	r1, r2, [sp, #16]
 8035424:	f7ff fe2a 	bl	803507c <GPIO_getPinSourceVal>
 8035428:	2205      	movs	r2, #5
 803542a:	b281      	uxth	r1, r0
 803542c:	4823      	ldr	r0, [pc, #140]	; (80354bc <SPI_setup+0x22c>)
 803542e:	f006 fa0b 	bl	803b848 <GPIO_PinAFConfig>
 8035432:	f44f 7000 	mov.w	r0, #512	; 0x200
 8035436:	f7ff fe21 	bl	803507c <GPIO_getPinSourceVal>
 803543a:	2205      	movs	r2, #5
 803543c:	b281      	uxth	r1, r0
 803543e:	481f      	ldr	r0, [pc, #124]	; (80354bc <SPI_setup+0x22c>)
 8035440:	f006 fa02 	bl	803b848 <GPIO_PinAFConfig>
 8035444:	2080      	movs	r0, #128	; 0x80
 8035446:	f7ff fe19 	bl	803507c <GPIO_getPinSourceVal>
 803544a:	2205      	movs	r2, #5
 803544c:	b281      	uxth	r1, r0
 803544e:	481b      	ldr	r0, [pc, #108]	; (80354bc <SPI_setup+0x22c>)
 8035450:	f006 f9fa 	bl	803b848 <GPIO_PinAFConfig>
 8035454:	a901      	add	r1, sp, #4
 8035456:	f44f 7380 	mov.w	r3, #256	; 0x100
 803545a:	4818      	ldr	r0, [pc, #96]	; (80354bc <SPI_setup+0x22c>)
 803545c:	9301      	str	r3, [sp, #4]
 803545e:	f005 ffe5 	bl	803b42c <GPIO_Init>
 8035462:	a901      	add	r1, sp, #4
 8035464:	f44f 7300 	mov.w	r3, #512	; 0x200
 8035468:	4814      	ldr	r0, [pc, #80]	; (80354bc <SPI_setup+0x22c>)
 803546a:	9301      	str	r3, [sp, #4]
 803546c:	f005 ffde 	bl	803b42c <GPIO_Init>
 8035470:	a901      	add	r1, sp, #4
 8035472:	2380      	movs	r3, #128	; 0x80
 8035474:	4811      	ldr	r0, [pc, #68]	; (80354bc <SPI_setup+0x22c>)
 8035476:	9301      	str	r3, [sp, #4]
 8035478:	f005 ffd8 	bl	803b42c <GPIO_Init>
 803547c:	2301      	movs	r3, #1
 803547e:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8035482:	480e      	ldr	r0, [pc, #56]	; (80354bc <SPI_setup+0x22c>)
 8035484:	f88d 3008 	strb.w	r3, [sp, #8]
 8035488:	a901      	add	r1, sp, #4
 803548a:	f88d 300b 	strb.w	r3, [sp, #11]
 803548e:	9201      	str	r2, [sp, #4]
 8035490:	f005 ffcc 	bl	803b42c <GPIO_Init>
 8035494:	e753      	b.n	803533e <SPI_setup+0xae>
 8035496:	bf00      	nop
 8035498:	20010798 	.word	0x20010798
 803549c:	40013400 	.word	0x40013400
 80354a0:	40021000 	.word	0x40021000
 80354a4:	40003c00 	.word	0x40003c00
 80354a8:	40020400 	.word	0x40020400
 80354ac:	40020c00 	.word	0x40020c00
 80354b0:	40020800 	.word	0x40020800
 80354b4:	40021800 	.word	0x40021800
 80354b8:	40015000 	.word	0x40015000
 80354bc:	40021400 	.word	0x40021400

080354c0 <SPI_readWrite>:
 80354c0:	b4f0      	push	{r4, r5, r6, r7}
 80354c2:	4d14      	ldr	r5, [pc, #80]	; (8035514 <SPI_readWrite+0x54>)
 80354c4:	eb05 04c0 	add.w	r4, r5, r0, lsl #3
 80354c8:	7967      	ldrb	r7, [r4, #5]
 80354ca:	b117      	cbz	r7, 80354d2 <SPI_readWrite+0x12>
 80354cc:	2000      	movs	r0, #0
 80354ce:	bcf0      	pop	{r4, r5, r6, r7}
 80354d0:	4770      	bx	lr
 80354d2:	2701      	movs	r7, #1
 80354d4:	00c6      	lsls	r6, r0, #3
 80354d6:	7167      	strb	r7, [r4, #5]
 80354d8:	f855 0030 	ldr.w	r0, [r5, r0, lsl #3]
 80354dc:	b18b      	cbz	r3, 8035502 <SPI_readWrite+0x42>
 80354de:	8904      	ldrh	r4, [r0, #8]
 80354e0:	07a7      	lsls	r7, r4, #30
 80354e2:	d5fc      	bpl.n	80354de <SPI_readWrite+0x1e>
 80354e4:	b199      	cbz	r1, 803550e <SPI_readWrite+0x4e>
 80354e6:	f811 4b01 	ldrb.w	r4, [r1], #1
 80354ea:	8184      	strh	r4, [r0, #12]
 80354ec:	8904      	ldrh	r4, [r0, #8]
 80354ee:	07e4      	lsls	r4, r4, #31
 80354f0:	d5fc      	bpl.n	80354ec <SPI_readWrite+0x2c>
 80354f2:	8984      	ldrh	r4, [r0, #12]
 80354f4:	b10a      	cbz	r2, 80354fa <SPI_readWrite+0x3a>
 80354f6:	f802 4b01 	strb.w	r4, [r2], #1
 80354fa:	3b01      	subs	r3, #1
 80354fc:	b29b      	uxth	r3, r3
 80354fe:	2b00      	cmp	r3, #0
 8035500:	d1ed      	bne.n	80354de <SPI_readWrite+0x1e>
 8035502:	4435      	add	r5, r6
 8035504:	2300      	movs	r3, #0
 8035506:	716b      	strb	r3, [r5, #5]
 8035508:	2001      	movs	r0, #1
 803550a:	bcf0      	pop	{r4, r5, r6, r7}
 803550c:	4770      	bx	lr
 803550e:	8181      	strh	r1, [r0, #12]
 8035510:	e7ec      	b.n	80354ec <SPI_readWrite+0x2c>
 8035512:	bf00      	nop
 8035514:	20010798 	.word	0x20010798

08035518 <SPI1_IRQ_handler>:
 8035518:	4770      	bx	lr
 803551a:	bf00      	nop

0803551c <SPI2_IRQ_handler>:
 803551c:	4770      	bx	lr
 803551e:	bf00      	nop

08035520 <SPI3_IRQ_handler>:
 8035520:	4770      	bx	lr
 8035522:	bf00      	nop

08035524 <receiveMsg>:
 8035524:	b570      	push	{r4, r5, r6, lr}
 8035526:	ebc0 1000 	rsb	r0, r0, r0, lsl #4
 803552a:	4d15      	ldr	r5, [pc, #84]	; (8035580 <receiveMsg+0x5c>)
 803552c:	00c4      	lsls	r4, r0, #3
 803552e:	b086      	sub	sp, #24
 8035530:	460e      	mov	r6, r1
 8035532:	5928      	ldr	r0, [r5, r4]
 8035534:	aa01      	add	r2, sp, #4
 8035536:	ebc6 06c6 	rsb	r6, r6, r6, lsl #3
 803553a:	f005 fd89 	bl	803b050 <CAN_Receive>
 803553e:	eb04 04c6 	add.w	r4, r4, r6, lsl #3
 8035542:	f89d 3017 	ldrb.w	r3, [sp, #23]
 8035546:	442c      	add	r4, r5
 8035548:	441c      	add	r4, r3
 803554a:	79e3      	ldrb	r3, [r4, #7]
 803554c:	2b04      	cmp	r3, #4
 803554e:	d901      	bls.n	8035554 <receiveMsg+0x30>
 8035550:	b006      	add	sp, #24
 8035552:	bd70      	pop	{r4, r5, r6, pc}
 8035554:	4a0b      	ldr	r2, [pc, #44]	; (8035584 <receiveMsg+0x60>)
 8035556:	1e5c      	subs	r4, r3, #1
 8035558:	f44f 7024 	mov.w	r0, #656	; 0x290
 803555c:	fb00 2004 	mla	r0, r0, r4, r2
 8035560:	a901      	add	r1, sp, #4
 8035562:	2201      	movs	r2, #1
 8035564:	f500 7020 	add.w	r0, r0, #640	; 0x280
 8035568:	f7f8 ff1e 	bl	802e3a8 <UTILITIES_pushRingBuff>
 803556c:	4b06      	ldr	r3, [pc, #24]	; (8035588 <receiveMsg+0x64>)
 803556e:	4807      	ldr	r0, [pc, #28]	; (803558c <receiveMsg+0x68>)
 8035570:	f853 1024 	ldr.w	r1, [r3, r4, lsl #2]
 8035574:	2200      	movs	r2, #0
 8035576:	f003 fdff 	bl	8039178 <_tx_event_flags_set>
 803557a:	b006      	add	sp, #24
 803557c:	bd70      	pop	{r4, r5, r6, pc}
 803557e:	bf00      	nop
 8035580:	200107b8 	.word	0x200107b8
 8035584:	200108a8 	.word	0x200108a8
 8035588:	080489d8 	.word	0x080489d8
 803558c:	2000a2f0 	.word	0x2000a2f0

08035590 <CAN_init>:
 8035590:	b570      	push	{r4, r5, r6, lr}
 8035592:	4c23      	ldr	r4, [pc, #140]	; (8035620 <CAN_init+0x90>)
 8035594:	4823      	ldr	r0, [pc, #140]	; (8035624 <CAN_init+0x94>)
 8035596:	4e24      	ldr	r6, [pc, #144]	; (8035628 <CAN_init+0x98>)
 8035598:	4d24      	ldr	r5, [pc, #144]	; (803562c <CAN_init+0x9c>)
 803559a:	b082      	sub	sp, #8
 803559c:	22f0      	movs	r2, #240	; 0xf0
 803559e:	2100      	movs	r1, #0
 80355a0:	f00a f858 	bl	803f654 <memset>
 80355a4:	f504 7324 	add.w	r3, r4, #656	; 0x290
 80355a8:	f504 60a2 	add.w	r0, r4, #1296	; 0x510
 80355ac:	2214      	movs	r2, #20
 80355ae:	2120      	movs	r1, #32
 80355b0:	f7f8 feba 	bl	802e328 <UTILITIES_initRingBuff>
 80355b4:	f504 63a4 	add.w	r3, r4, #1312	; 0x520
 80355b8:	f504 60f4 	add.w	r0, r4, #1952	; 0x7a0
 80355bc:	2214      	movs	r2, #20
 80355be:	2120      	movs	r1, #32
 80355c0:	f7f8 feb2 	bl	802e328 <UTILITIES_initRingBuff>
 80355c4:	f504 63f6 	add.w	r3, r4, #1968	; 0x7b0
 80355c8:	f504 6023 	add.w	r0, r4, #2608	; 0xa30
 80355cc:	2214      	movs	r2, #20
 80355ce:	2120      	movs	r1, #32
 80355d0:	f7f8 feaa 	bl	802e328 <UTILITIES_initRingBuff>
 80355d4:	2214      	movs	r2, #20
 80355d6:	f504 6324 	add.w	r3, r4, #2624	; 0xa40
 80355da:	2120      	movs	r1, #32
 80355dc:	f504 604c 	add.w	r0, r4, #3264	; 0xcc0
 80355e0:	f7f8 fea2 	bl	802e328 <UTILITIES_initRingBuff>
 80355e4:	200e      	movs	r0, #14
 80355e6:	f005 fc6f 	bl	803aec8 <CAN_SlaveStartBank>
 80355ea:	f44f 4480 	mov.w	r4, #16384	; 0x4000
 80355ee:	2301      	movs	r3, #1
 80355f0:	4630      	mov	r0, r6
 80355f2:	4669      	mov	r1, sp
 80355f4:	e9cd 4300 	strd	r4, r3, [sp]
 80355f8:	f005 ff18 	bl	803b42c <GPIO_Init>
 80355fc:	4621      	mov	r1, r4
 80355fe:	4630      	mov	r0, r6
 8035600:	f006 f826 	bl	803b650 <GPIO_SetBits>
 8035604:	f44f 7480 	mov.w	r4, #256	; 0x100
 8035608:	4669      	mov	r1, sp
 803560a:	4628      	mov	r0, r5
 803560c:	9400      	str	r4, [sp, #0]
 803560e:	f005 ff0d 	bl	803b42c <GPIO_Init>
 8035612:	4621      	mov	r1, r4
 8035614:	4628      	mov	r0, r5
 8035616:	f006 f81b 	bl	803b650 <GPIO_SetBits>
 803561a:	b002      	add	sp, #8
 803561c:	bd70      	pop	{r4, r5, r6, pc}
 803561e:	bf00      	nop
 8035620:	200108a8 	.word	0x200108a8
 8035624:	200107b8 	.word	0x200107b8
 8035628:	40021c00 	.word	0x40021c00
 803562c:	40021000 	.word	0x40021000

08035630 <CAN_setup>:
 8035630:	b530      	push	{r4, r5, lr}
 8035632:	b087      	sub	sp, #28
 8035634:	4b4e      	ldr	r3, [pc, #312]	; (8035770 <CAN_setup+0x140>)
 8035636:	9302      	str	r3, [sp, #8]
 8035638:	4604      	mov	r4, r0
 803563a:	2800      	cmp	r0, #0
 803563c:	d057      	beq.n	80356ee <CAN_setup+0xbe>
 803563e:	2801      	cmp	r0, #1
 8035640:	d153      	bne.n	80356ea <CAN_setup+0xba>
 8035642:	4d4c      	ldr	r5, [pc, #304]	; (8035774 <CAN_setup+0x144>)
 8035644:	4b4c      	ldr	r3, [pc, #304]	; (8035778 <CAN_setup+0x148>)
 8035646:	67ab      	str	r3, [r5, #120]	; 0x78
 8035648:	4601      	mov	r1, r0
 803564a:	230e      	movs	r3, #14
 803564c:	f04f 7000 	mov.w	r0, #33554432	; 0x2000000
 8035650:	f885 307c 	strb.w	r3, [r5, #124]	; 0x7c
 8035654:	f006 f9c2 	bl	803b9dc <RCC_APB1PeriphClockCmd>
 8035658:	4621      	mov	r1, r4
 803565a:	f04f 6080 	mov.w	r0, #67108864	; 0x4000000
 803565e:	f006 f9bd 	bl	803b9dc <RCC_APB1PeriphClockCmd>
 8035662:	2020      	movs	r0, #32
 8035664:	f7ff fd0a 	bl	803507c <GPIO_getPinSourceVal>
 8035668:	2209      	movs	r2, #9
 803566a:	b281      	uxth	r1, r0
 803566c:	4843      	ldr	r0, [pc, #268]	; (803577c <CAN_setup+0x14c>)
 803566e:	f006 f8eb 	bl	803b848 <GPIO_PinAFConfig>
 8035672:	2040      	movs	r0, #64	; 0x40
 8035674:	f7ff fd02 	bl	803507c <GPIO_getPinSourceVal>
 8035678:	2209      	movs	r2, #9
 803567a:	b281      	uxth	r1, r0
 803567c:	483f      	ldr	r0, [pc, #252]	; (803577c <CAN_setup+0x14c>)
 803567e:	f006 f8e3 	bl	803b848 <GPIO_PinAFConfig>
 8035682:	2340      	movs	r3, #64	; 0x40
 8035684:	483d      	ldr	r0, [pc, #244]	; (803577c <CAN_setup+0x14c>)
 8035686:	9301      	str	r3, [sp, #4]
 8035688:	a901      	add	r1, sp, #4
 803568a:	f005 fecf 	bl	803b42c <GPIO_Init>
 803568e:	2320      	movs	r3, #32
 8035690:	483a      	ldr	r0, [pc, #232]	; (803577c <CAN_setup+0x14c>)
 8035692:	9301      	str	r3, [sp, #4]
 8035694:	a901      	add	r1, sp, #4
 8035696:	f005 fec9 	bl	803b42c <GPIO_Init>
 803569a:	4b39      	ldr	r3, [pc, #228]	; (8035780 <CAN_setup+0x150>)
 803569c:	4839      	ldr	r0, [pc, #228]	; (8035784 <CAN_setup+0x154>)
 803569e:	2260      	movs	r2, #96	; 0x60
 80356a0:	f04f 4100 	mov.w	r1, #2147483648	; 0x80000000
 80356a4:	f883 233f 	strb.w	r2, [r3, #831]	; 0x33f
 80356a8:	6059      	str	r1, [r3, #4]
 80356aa:	2102      	movs	r1, #2
 80356ac:	f883 2340 	strb.w	r2, [r3, #832]	; 0x340
 80356b0:	f883 2341 	strb.w	r2, [r3, #833]	; 0x341
 80356b4:	609c      	str	r4, [r3, #8]
 80356b6:	6099      	str	r1, [r3, #8]
 80356b8:	f44f 7180 	mov.w	r1, #256	; 0x100
 80356bc:	f006 f80a 	bl	803b6d4 <GPIO_ResetBits>
 80356c0:	ebc4 1404 	rsb	r4, r4, r4, lsl #4
 80356c4:	00e4      	lsls	r4, r4, #3
 80356c6:	2064      	movs	r0, #100	; 0x64
 80356c8:	f004 fc42 	bl	8039f50 <_tx_thread_sleep>
 80356cc:	4a2e      	ldr	r2, [pc, #184]	; (8035788 <CAN_setup+0x158>)
 80356ce:	5928      	ldr	r0, [r5, r4]
 80356d0:	2303      	movs	r3, #3
 80356d2:	9303      	str	r3, [sp, #12]
 80356d4:	a903      	add	r1, sp, #12
 80356d6:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
 80356da:	442c      	add	r4, r5
 80356dc:	e9cd 2304 	strd	r2, r3, [sp, #16]
 80356e0:	f005 fa62 	bl	803aba8 <CAN_Init>
 80356e4:	2301      	movs	r3, #1
 80356e6:	f884 3077 	strb.w	r3, [r4, #119]	; 0x77
 80356ea:	b007      	add	sp, #28
 80356ec:	bd30      	pop	{r4, r5, pc}
 80356ee:	4d21      	ldr	r5, [pc, #132]	; (8035774 <CAN_setup+0x144>)
 80356f0:	4b26      	ldr	r3, [pc, #152]	; (803578c <CAN_setup+0x15c>)
 80356f2:	7128      	strb	r0, [r5, #4]
 80356f4:	2101      	movs	r1, #1
 80356f6:	f04f 7000 	mov.w	r0, #33554432	; 0x2000000
 80356fa:	602b      	str	r3, [r5, #0]
 80356fc:	f006 f96e 	bl	803b9dc <RCC_APB1PeriphClockCmd>
 8035700:	f44f 7000 	mov.w	r0, #512	; 0x200
 8035704:	f7ff fcba 	bl	803507c <GPIO_getPinSourceVal>
 8035708:	2209      	movs	r2, #9
 803570a:	b281      	uxth	r1, r0
 803570c:	4820      	ldr	r0, [pc, #128]	; (8035790 <CAN_setup+0x160>)
 803570e:	f006 f89b 	bl	803b848 <GPIO_PinAFConfig>
 8035712:	f44f 5000 	mov.w	r0, #8192	; 0x2000
 8035716:	f7ff fcb1 	bl	803507c <GPIO_getPinSourceVal>
 803571a:	2209      	movs	r2, #9
 803571c:	b281      	uxth	r1, r0
 803571e:	481d      	ldr	r0, [pc, #116]	; (8035794 <CAN_setup+0x164>)
 8035720:	f006 f892 	bl	803b848 <GPIO_PinAFConfig>
 8035724:	a901      	add	r1, sp, #4
 8035726:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 803572a:	481a      	ldr	r0, [pc, #104]	; (8035794 <CAN_setup+0x164>)
 803572c:	9301      	str	r3, [sp, #4]
 803572e:	f005 fe7d 	bl	803b42c <GPIO_Init>
 8035732:	a901      	add	r1, sp, #4
 8035734:	f44f 7300 	mov.w	r3, #512	; 0x200
 8035738:	4815      	ldr	r0, [pc, #84]	; (8035790 <CAN_setup+0x160>)
 803573a:	9301      	str	r3, [sp, #4]
 803573c:	f005 fe76 	bl	803b42c <GPIO_Init>
 8035740:	4b0f      	ldr	r3, [pc, #60]	; (8035780 <CAN_setup+0x150>)
 8035742:	4814      	ldr	r0, [pc, #80]	; (8035794 <CAN_setup+0x164>)
 8035744:	2260      	movs	r2, #96	; 0x60
 8035746:	f44f 2100 	mov.w	r1, #524288	; 0x80000
 803574a:	f883 2313 	strb.w	r2, [r3, #787]	; 0x313
 803574e:	6019      	str	r1, [r3, #0]
 8035750:	f883 2314 	strb.w	r2, [r3, #788]	; 0x314
 8035754:	f44f 1180 	mov.w	r1, #1048576	; 0x100000
 8035758:	f883 2315 	strb.w	r2, [r3, #789]	; 0x315
 803575c:	f44f 1200 	mov.w	r2, #2097152	; 0x200000
 8035760:	6019      	str	r1, [r3, #0]
 8035762:	601a      	str	r2, [r3, #0]
 8035764:	f44f 4180 	mov.w	r1, #16384	; 0x4000
 8035768:	f005 ffb4 	bl	803b6d4 <GPIO_ResetBits>
 803576c:	e7a8      	b.n	80356c0 <CAN_setup+0x90>
 803576e:	bf00      	nop
 8035770:	01000302 	.word	0x01000302
 8035774:	200107b8 	.word	0x200107b8
 8035778:	40006800 	.word	0x40006800
 803577c:	40020400 	.word	0x40020400
 8035780:	e000e100 	.word	0xe000e100
 8035784:	40021000 	.word	0x40021000
 8035788:	0100010a 	.word	0x0100010a
 803578c:	40006400 	.word	0x40006400
 8035790:	40022000 	.word	0x40022000
 8035794:	40021c00 	.word	0x40021c00

08035798 <CAN_addFilter>:
 8035798:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 803579c:	4f19      	ldr	r7, [pc, #100]	; (8035804 <CAN_addFilter+0x6c>)
 803579e:	ebc0 1400 	rsb	r4, r0, r0, lsl #4
 80357a2:	eb07 08c4 	add.w	r8, r7, r4, lsl #3
 80357a6:	f898 5077 	ldrb.w	r5, [r8, #119]	; 0x77
 80357aa:	b13d      	cbz	r5, 80357bc <CAN_addFilter+0x24>
 80357ac:	4616      	mov	r6, r2
 80357ae:	4a16      	ldr	r2, [pc, #88]	; (8035808 <CAN_addFilter+0x70>)
 80357b0:	f898 3004 	ldrb.w	r3, [r8, #4]
 80357b4:	5c12      	ldrb	r2, [r2, r0]
 80357b6:	429a      	cmp	r2, r3
 80357b8:	d803      	bhi.n	80357c2 <CAN_addFilter+0x2a>
 80357ba:	2500      	movs	r5, #0
 80357bc:	4628      	mov	r0, r5
 80357be:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80357c2:	1c5a      	adds	r2, r3, #1
 80357c4:	4689      	mov	r9, r1
 80357c6:	f888 2004 	strb.w	r2, [r8, #4]
 80357ca:	4608      	mov	r0, r1
 80357cc:	728b      	strb	r3, [r1, #10]
 80357ce:	f005 fad1 	bl	803ad74 <CAN_FilterInit>
 80357d2:	00e4      	lsls	r4, r4, #3
 80357d4:	f899 9008 	ldrb.w	r9, [r9, #8]
 80357d8:	4b0c      	ldr	r3, [pc, #48]	; (803580c <CAN_addFilter+0x74>)
 80357da:	5938      	ldr	r0, [r7, r4]
 80357dc:	f853 1029 	ldr.w	r1, [r3, r9, lsl #2]
 80357e0:	2201      	movs	r2, #1
 80357e2:	f005 fc9b 	bl	803b11c <CAN_ITConfig>
 80357e6:	eb08 0309 	add.w	r3, r8, r9
 80357ea:	ebc9 09c9 	rsb	r9, r9, r9, lsl #3
 80357ee:	795a      	ldrb	r2, [r3, #5]
 80357f0:	eb04 04c9 	add.w	r4, r4, r9, lsl #3
 80357f4:	443c      	add	r4, r7
 80357f6:	4414      	add	r4, r2
 80357f8:	3201      	adds	r2, #1
 80357fa:	715a      	strb	r2, [r3, #5]
 80357fc:	71e6      	strb	r6, [r4, #7]
 80357fe:	4628      	mov	r0, r5
 8035800:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8035804:	200107b8 	.word	0x200107b8
 8035808:	080489f4 	.word	0x080489f4
 803580c:	080489ec 	.word	0x080489ec

08035810 <CAN_sendMsg>:
 8035810:	4a08      	ldr	r2, [pc, #32]	; (8035834 <CAN_sendMsg+0x24>)
 8035812:	ebc0 1000 	rsb	r0, r0, r0, lsl #4
 8035816:	b510      	push	{r4, lr}
 8035818:	eb02 04c0 	add.w	r4, r2, r0, lsl #3
 803581c:	00c3      	lsls	r3, r0, #3
 803581e:	f894 0077 	ldrb.w	r0, [r4, #119]	; 0x77
 8035822:	b900      	cbnz	r0, 8035826 <CAN_sendMsg+0x16>
 8035824:	bd10      	pop	{r4, pc}
 8035826:	58d0      	ldr	r0, [r2, r3]
 8035828:	f005 fb7a 	bl	803af20 <CAN_Transmit>
 803582c:	3804      	subs	r0, #4
 803582e:	bf18      	it	ne
 8035830:	2001      	movne	r0, #1
 8035832:	bd10      	pop	{r4, pc}
 8035834:	200107b8 	.word	0x200107b8

08035838 <CAN_readMessage>:
 8035838:	b570      	push	{r4, r5, r6, lr}
 803583a:	4b0e      	ldr	r3, [pc, #56]	; (8035874 <CAN_readMessage+0x3c>)
 803583c:	f44f 7224 	mov.w	r2, #656	; 0x290
 8035840:	3901      	subs	r1, #1
 8035842:	b086      	sub	sp, #24
 8035844:	fb02 3301 	mla	r3, r2, r1, r3
 8035848:	4606      	mov	r6, r0
 803584a:	a901      	add	r1, sp, #4
 803584c:	f503 7020 	add.w	r0, r3, #640	; 0x280
 8035850:	ac01      	add	r4, sp, #4
 8035852:	2300      	movs	r3, #0
 8035854:	e9cd 3301 	strd	r3, r3, [sp, #4]
 8035858:	e9cd 3303 	strd	r3, r3, [sp, #12]
 803585c:	9305      	str	r3, [sp, #20]
 803585e:	f7f8 fd75 	bl	802e34c <UTILITIES_popRingBuff>
 8035862:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8035864:	4635      	mov	r5, r6
 8035866:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 8035868:	6823      	ldr	r3, [r4, #0]
 803586a:	602b      	str	r3, [r5, #0]
 803586c:	4630      	mov	r0, r6
 803586e:	b006      	add	sp, #24
 8035870:	bd70      	pop	{r4, r5, r6, pc}
 8035872:	bf00      	nop
 8035874:	200108a8 	.word	0x200108a8

08035878 <CAN1_TX_IRQ_Handler>:
 8035878:	4770      	bx	lr
 803587a:	bf00      	nop

0803587c <CAN2_TX_IRQ_Handler>:
 803587c:	4770      	bx	lr
 803587e:	bf00      	nop

08035880 <CAN1_SCE_IRQ_Handler>:
 8035880:	4770      	bx	lr
 8035882:	bf00      	nop

08035884 <CAN1_RX0_IRQ_Handler>:
 8035884:	b508      	push	{r3, lr}
 8035886:	2200      	movs	r2, #0
 8035888:	4807      	ldr	r0, [pc, #28]	; (80358a8 <CAN1_RX0_IRQ_Handler+0x24>)
 803588a:	2102      	movs	r1, #2
 803588c:	f005 fc46 	bl	803b11c <CAN_ITConfig>
 8035890:	2100      	movs	r1, #0
 8035892:	4608      	mov	r0, r1
 8035894:	f7ff fe46 	bl	8035524 <receiveMsg>
 8035898:	4b04      	ldr	r3, [pc, #16]	; (80358ac <CAN1_RX0_IRQ_Handler+0x28>)
 803589a:	2201      	movs	r2, #1
 803589c:	6818      	ldr	r0, [r3, #0]
 803589e:	2102      	movs	r1, #2
 80358a0:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 80358a4:	f005 bc3a 	b.w	803b11c <CAN_ITConfig>
 80358a8:	40006400 	.word	0x40006400
 80358ac:	200107b8 	.word	0x200107b8

080358b0 <CAN1_RX1_IRQ_Handler>:
 80358b0:	b508      	push	{r3, lr}
 80358b2:	2200      	movs	r2, #0
 80358b4:	4807      	ldr	r0, [pc, #28]	; (80358d4 <CAN1_RX1_IRQ_Handler+0x24>)
 80358b6:	2110      	movs	r1, #16
 80358b8:	f005 fc30 	bl	803b11c <CAN_ITConfig>
 80358bc:	2101      	movs	r1, #1
 80358be:	2000      	movs	r0, #0
 80358c0:	f7ff fe30 	bl	8035524 <receiveMsg>
 80358c4:	4b04      	ldr	r3, [pc, #16]	; (80358d8 <CAN1_RX1_IRQ_Handler+0x28>)
 80358c6:	2201      	movs	r2, #1
 80358c8:	6818      	ldr	r0, [r3, #0]
 80358ca:	2110      	movs	r1, #16
 80358cc:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 80358d0:	f005 bc24 	b.w	803b11c <CAN_ITConfig>
 80358d4:	40006400 	.word	0x40006400
 80358d8:	200107b8 	.word	0x200107b8

080358dc <CAN2_RX0_IRQ_Handler>:
 80358dc:	b508      	push	{r3, lr}
 80358de:	2200      	movs	r2, #0
 80358e0:	4807      	ldr	r0, [pc, #28]	; (8035900 <CAN2_RX0_IRQ_Handler+0x24>)
 80358e2:	2102      	movs	r1, #2
 80358e4:	f005 fc1a 	bl	803b11c <CAN_ITConfig>
 80358e8:	2100      	movs	r1, #0
 80358ea:	2001      	movs	r0, #1
 80358ec:	f7ff fe1a 	bl	8035524 <receiveMsg>
 80358f0:	4b04      	ldr	r3, [pc, #16]	; (8035904 <CAN2_RX0_IRQ_Handler+0x28>)
 80358f2:	2201      	movs	r2, #1
 80358f4:	6f98      	ldr	r0, [r3, #120]	; 0x78
 80358f6:	2102      	movs	r1, #2
 80358f8:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 80358fc:	f005 bc0e 	b.w	803b11c <CAN_ITConfig>
 8035900:	40006800 	.word	0x40006800
 8035904:	200107b8 	.word	0x200107b8

08035908 <CAN2_RX1_IRQ_Handler>:
 8035908:	b508      	push	{r3, lr}
 803590a:	2200      	movs	r2, #0
 803590c:	4807      	ldr	r0, [pc, #28]	; (803592c <CAN2_RX1_IRQ_Handler+0x24>)
 803590e:	2110      	movs	r1, #16
 8035910:	f005 fc04 	bl	803b11c <CAN_ITConfig>
 8035914:	2101      	movs	r1, #1
 8035916:	4608      	mov	r0, r1
 8035918:	f7ff fe04 	bl	8035524 <receiveMsg>
 803591c:	4b04      	ldr	r3, [pc, #16]	; (8035930 <CAN2_RX1_IRQ_Handler+0x28>)
 803591e:	2201      	movs	r2, #1
 8035920:	6f98      	ldr	r0, [r3, #120]	; 0x78
 8035922:	2110      	movs	r1, #16
 8035924:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8035928:	f005 bbf8 	b.w	803b11c <CAN_ITConfig>
 803592c:	40006800 	.word	0x40006800
 8035930:	200107b8 	.word	0x200107b8

08035934 <CRC_calculate>:
 8035934:	b570      	push	{r4, r5, r6, lr}
 8035936:	4606      	mov	r6, r0
 8035938:	460d      	mov	r5, r1
 803593a:	4814      	ldr	r0, [pc, #80]	; (803598c <CRC_calculate+0x58>)
 803593c:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 8035940:	4614      	mov	r4, r2
 8035942:	f003 fe91 	bl	8039668 <_tx_mutex_get>
 8035946:	b9f0      	cbnz	r0, 8035986 <CRC_calculate+0x52>
 8035948:	4911      	ldr	r1, [pc, #68]	; (8035990 <CRC_calculate+0x5c>)
 803594a:	4a12      	ldr	r2, [pc, #72]	; (8035994 <CRC_calculate+0x60>)
 803594c:	6b0b      	ldr	r3, [r1, #48]	; 0x30
 803594e:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 8035952:	630b      	str	r3, [r1, #48]	; 0x30
 8035954:	2301      	movs	r3, #1
 8035956:	6093      	str	r3, [r2, #8]
 8035958:	6893      	ldr	r3, [r2, #8]
 803595a:	2b00      	cmp	r3, #0
 803595c:	d1fc      	bne.n	8035958 <CRC_calculate+0x24>
 803595e:	b13c      	cbz	r4, 8035970 <CRC_calculate+0x3c>
 8035960:	4a0c      	ldr	r2, [pc, #48]	; (8035994 <CRC_calculate+0x60>)
 8035962:	f855 3b04 	ldr.w	r3, [r5], #4
 8035966:	fa93 f3a3 	rbit	r3, r3
 803596a:	3c01      	subs	r4, #1
 803596c:	6013      	str	r3, [r2, #0]
 803596e:	d1f8      	bne.n	8035962 <CRC_calculate+0x2e>
 8035970:	4b08      	ldr	r3, [pc, #32]	; (8035994 <CRC_calculate+0x60>)
 8035972:	681b      	ldr	r3, [r3, #0]
 8035974:	fa93 f3a3 	rbit	r3, r3
 8035978:	43db      	mvns	r3, r3
 803597a:	6033      	str	r3, [r6, #0]
 803597c:	4803      	ldr	r0, [pc, #12]	; (803598c <CRC_calculate+0x58>)
 803597e:	f003 ffe9 	bl	8039954 <_tx_mutex_put>
 8035982:	2000      	movs	r0, #0
 8035984:	bd70      	pop	{r4, r5, r6, pc}
 8035986:	2001      	movs	r0, #1
 8035988:	bd70      	pop	{r4, r5, r6, pc}
 803598a:	bf00      	nop
 803598c:	20011578 	.word	0x20011578
 8035990:	40023800 	.word	0x40023800
 8035994:	40023000 	.word	0x40023000

08035998 <nx_driver_stm32f4xx>:
 8035998:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 803599c:	6803      	ldr	r3, [r0, #0]
 803599e:	2200      	movs	r2, #0
 80359a0:	b085      	sub	sp, #20
 80359a2:	4606      	mov	r6, r0
 80359a4:	6042      	str	r2, [r0, #4]
 80359a6:	2b13      	cmp	r3, #19
 80359a8:	d831      	bhi.n	8035a0e <nx_driver_stm32f4xx+0x76>
 80359aa:	e8df f013 	tbh	[pc, r3, lsl #1]
 80359ae:	0035      	.short	0x0035
 80359b0:	015000f3 	.word	0x015000f3
 80359b4:	0035002b 	.word	0x0035002b
 80359b8:	00350035 	.word	0x00350035
 80359bc:	00280035 	.word	0x00280035
 80359c0:	00280028 	.word	0x00280028
 80359c4:	00300030 	.word	0x00300030
 80359c8:	00300030 	.word	0x00300030
 80359cc:	00300030 	.word	0x00300030
 80359d0:	00140030 	.word	0x00140030
 80359d4:	015b      	.short	0x015b
 80359d6:	4ccf      	ldr	r4, [pc, #828]	; (8035d14 <nx_driver_stm32f4xx+0x37c>)
 80359d8:	2001      	movs	r0, #1
 80359da:	f004 fa19 	bl	8039e10 <_tx_thread_interrupt_control>
 80359de:	f8d4 9010 	ldr.w	r9, [r4, #16]
 80359e2:	2500      	movs	r5, #0
 80359e4:	6125      	str	r5, [r4, #16]
 80359e6:	f004 fa13 	bl	8039e10 <_tx_thread_interrupt_control>
 80359ea:	f019 0f04 	tst.w	r9, #4
 80359ee:	f040 8184 	bne.w	8035cfa <nx_driver_stm32f4xx+0x362>
 80359f2:	f019 0f01 	tst.w	r9, #1
 80359f6:	f040 81bf 	bne.w	8035d78 <nx_driver_stm32f4xx+0x3e0>
 80359fa:	2300      	movs	r3, #0
 80359fc:	6073      	str	r3, [r6, #4]
 80359fe:	b005      	add	sp, #20
 8035a00:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8035a04:	4cc3      	ldr	r4, [pc, #780]	; (8035d14 <nx_driver_stm32f4xx+0x37c>)
 8035a06:	6863      	ldr	r3, [r4, #4]
 8035a08:	2b04      	cmp	r3, #4
 8035a0a:	f000 8155 	beq.w	8035cb8 <nx_driver_stm32f4xx+0x320>
 8035a0e:	235a      	movs	r3, #90	; 0x5a
 8035a10:	6073      	str	r3, [r6, #4]
 8035a12:	b005      	add	sp, #20
 8035a14:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8035a18:	4cbe      	ldr	r4, [pc, #760]	; (8035d14 <nx_driver_stm32f4xx+0x37c>)
 8035a1a:	6862      	ldr	r2, [r4, #4]
 8035a1c:	2a04      	cmp	r2, #4
 8035a1e:	f040 8166 	bne.w	8035cee <nx_driver_stm32f4xx+0x356>
 8035a22:	f8d0 8010 	ldr.w	r8, [r0, #16]
 8035a26:	f8d0 a008 	ldr.w	sl, [r0, #8]
 8035a2a:	f8d8 2018 	ldr.w	r2, [r8, #24]
 8035a2e:	f8d8 e02c 	ldr.w	lr, [r8, #44]	; 0x2c
 8035a32:	6985      	ldr	r5, [r0, #24]
 8035a34:	320e      	adds	r2, #14
 8035a36:	f1ae 010e 	sub.w	r1, lr, #14
 8035a3a:	f8c8 2018 	str.w	r2, [r8, #24]
 8035a3e:	f8c8 102c 	str.w	r1, [r8, #44]	; 0x2c
 8035a42:	f84e ac10 	str.w	sl, [lr, #-16]
 8035a46:	f8d0 c00c 	ldr.w	ip, [r0, #12]
 8035a4a:	f84e cc0c 	str.w	ip, [lr, #-12]
 8035a4e:	f8d5 2740 	ldr.w	r2, [r5, #1856]	; 0x740
 8035a52:	f8b5 7746 	ldrh.w	r7, [r5, #1862]	; 0x746
 8035a56:	ea47 4702 	orr.w	r7, r7, r2, lsl #16
 8035a5a:	f84e 7c08 	str.w	r7, [lr, #-8]
 8035a5e:	f8d5 0744 	ldr.w	r0, [r5, #1860]	; 0x744
 8035a62:	1f5a      	subs	r2, r3, #5
 8035a64:	2a01      	cmp	r2, #1
 8035a66:	ea4f 4000 	mov.w	r0, r0, lsl #16
 8035a6a:	f240 813b 	bls.w	8035ce4 <nx_driver_stm32f4xx+0x34c>
 8035a6e:	2b07      	cmp	r3, #7
 8035a70:	bf06      	itte	eq
 8035a72:	f440 4300 	orreq.w	r3, r0, #32768	; 0x8000
 8035a76:	f043 0335 	orreq.w	r3, r3, #53	; 0x35
 8035a7a:	f440 6300 	orrne.w	r3, r0, #2048	; 0x800
 8035a7e:	ea8c 493c 	eor.w	r9, ip, ip, ror #16
 8035a82:	ea83 4233 	eor.w	r2, r3, r3, ror #16
 8035a86:	ea8a 453a 	eor.w	r5, sl, sl, ror #16
 8035a8a:	ea87 4037 	eor.w	r0, r7, r7, ror #16
 8035a8e:	0a2d      	lsrs	r5, r5, #8
 8035a90:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8035a94:	0a00      	lsrs	r0, r0, #8
 8035a96:	0a12      	lsrs	r2, r2, #8
 8035a98:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8035a9c:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8035aa0:	f009 19ff 	and.w	r9, r9, #16711935	; 0xff00ff
 8035aa4:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 8035aa8:	ea82 2333 	eor.w	r3, r2, r3, ror #8
 8035aac:	ea85 253a 	eor.w	r5, r5, sl, ror #8
 8035ab0:	ea89 2c3c 	eor.w	ip, r9, ip, ror #8
 8035ab4:	ea80 2037 	eor.w	r0, r0, r7, ror #8
 8035ab8:	e94e 5c04 	strd	r5, ip, [lr, #-16]
 8035abc:	e94e 0302 	strd	r0, r3, [lr, #-8]
 8035ac0:	f8d8 3018 	ldr.w	r3, [r8, #24]
 8035ac4:	9300      	str	r3, [sp, #0]
 8035ac6:	461a      	mov	r2, r3
 8035ac8:	f240 53ea 	movw	r3, #1514	; 0x5ea
 8035acc:	429a      	cmp	r2, r3
 8035ace:	f200 822e 	bhi.w	8035f2e <nx_driver_stm32f4xx+0x596>
 8035ad2:	69a3      	ldr	r3, [r4, #24]
 8035ad4:	f103 0211 	add.w	r2, r3, #17
 8035ad8:	eb04 1242 	add.w	r2, r4, r2, lsl #5
 8035adc:	6850      	ldr	r0, [r2, #4]
 8035ade:	2800      	cmp	r0, #0
 8035ae0:	db4c      	blt.n	8035b7c <nx_driver_stm32f4xx+0x1e4>
 8035ae2:	f503 7022 	add.w	r0, r3, #648	; 0x288
 8035ae6:	eb04 0080 	add.w	r0, r4, r0, lsl #2
 8035aea:	f8d0 c004 	ldr.w	ip, [r0, #4]
 8035aee:	f1bc 0f00 	cmp.w	ip, #0
 8035af2:	d143      	bne.n	8035b7c <nx_driver_stm32f4xx+0x1e4>
 8035af4:	f8d2 9004 	ldr.w	r9, [r2, #4]
 8035af8:	f8d8 7030 	ldr.w	r7, [r8, #48]	; 0x30
 8035afc:	f8d8 500c 	ldr.w	r5, [r8, #12]
 8035b00:	f049 5980 	orr.w	r9, r9, #268435456	; 0x10000000
 8035b04:	f8c2 9004 	str.w	r9, [r2, #4]
 8035b08:	1a7f      	subs	r7, r7, r1
 8035b0a:	f8d2 9004 	ldr.w	r9, [r2, #4]
 8035b0e:	f3c7 070c 	ubfx	r7, r7, #0, #13
 8035b12:	6097      	str	r7, [r2, #8]
 8035b14:	eb04 1743 	add.w	r7, r4, r3, lsl #5
 8035b18:	f029 5900 	bic.w	r9, r9, #536870912	; 0x20000000
 8035b1c:	f8c2 9004 	str.w	r9, [r2, #4]
 8035b20:	f8c7 122c 	str.w	r1, [r7, #556]	; 0x22c
 8035b24:	2d00      	cmp	r5, #0
 8035b26:	f000 8263 	beq.w	8035ff0 <nx_driver_stm32f4xx+0x658>
 8035b2a:	46b3      	mov	fp, r6
 8035b2c:	e013      	b.n	8035b56 <nx_driver_stm32f4xx+0x1be>
 8035b2e:	6879      	ldr	r1, [r7, #4]
 8035b30:	bb19      	cbnz	r1, 8035b7a <nx_driver_stm32f4xx+0x1e2>
 8035b32:	e9d5 610b 	ldrd	r6, r1, [r5, #44]	; 0x2c
 8035b36:	6850      	ldr	r0, [r2, #4]
 8035b38:	68ed      	ldr	r5, [r5, #12]
 8035b3a:	f8c9 622c 	str.w	r6, [r9, #556]	; 0x22c
 8035b3e:	1b89      	subs	r1, r1, r6
 8035b40:	f3c1 010c 	ubfx	r1, r1, #0, #13
 8035b44:	f020 5040 	bic.w	r0, r0, #805306368	; 0x30000000
 8035b48:	f10c 0c01 	add.w	ip, ip, #1
 8035b4c:	6091      	str	r1, [r2, #8]
 8035b4e:	6050      	str	r0, [r2, #4]
 8035b50:	2d00      	cmp	r5, #0
 8035b52:	f000 820b 	beq.w	8035f6c <nx_driver_stm32f4xx+0x5d4>
 8035b56:	3301      	adds	r3, #1
 8035b58:	f003 033f 	and.w	r3, r3, #63	; 0x3f
 8035b5c:	f103 0211 	add.w	r2, r3, #17
 8035b60:	eb04 1242 	add.w	r2, r4, r2, lsl #5
 8035b64:	f503 7722 	add.w	r7, r3, #648	; 0x288
 8035b68:	6851      	ldr	r1, [r2, #4]
 8035b6a:	2900      	cmp	r1, #0
 8035b6c:	eb04 0787 	add.w	r7, r4, r7, lsl #2
 8035b70:	eb04 1943 	add.w	r9, r4, r3, lsl #5
 8035b74:	f102 0a04 	add.w	sl, r2, #4
 8035b78:	dad9      	bge.n	8035b2e <nx_driver_stm32f4xx+0x196>
 8035b7a:	465e      	mov	r6, fp
 8035b7c:	9b00      	ldr	r3, [sp, #0]
 8035b7e:	f8c8 e02c 	str.w	lr, [r8, #44]	; 0x2c
 8035b82:	3b0e      	subs	r3, #14
 8035b84:	225a      	movs	r2, #90	; 0x5a
 8035b86:	f8c8 3018 	str.w	r3, [r8, #24]
 8035b8a:	4640      	mov	r0, r8
 8035b8c:	6072      	str	r2, [r6, #4]
 8035b8e:	f002 fc9f 	bl	80384d0 <_nx_packet_transmit_release>
 8035b92:	e734      	b.n	80359fe <nx_driver_stm32f4xx+0x66>
 8035b94:	6983      	ldr	r3, [r0, #24]
 8035b96:	4c5f      	ldr	r4, [pc, #380]	; (8035d14 <nx_driver_stm32f4xx+0x37c>)
 8035b98:	f8d3 3134 	ldr.w	r3, [r3, #308]	; 0x134
 8035b9c:	60a3      	str	r3, [r4, #8]
 8035b9e:	2201      	movs	r2, #1
 8035ba0:	2500      	movs	r5, #0
 8035ba2:	6062      	str	r2, [r4, #4]
 8035ba4:	69c2      	ldr	r2, [r0, #28]
 8035ba6:	6125      	str	r5, [r4, #16]
 8035ba8:	6025      	str	r5, [r4, #0]
 8035baa:	6045      	str	r5, [r0, #4]
 8035bac:	9201      	str	r2, [sp, #4]
 8035bae:	e9c4 5505 	strd	r5, r5, [r4, #20]
 8035bb2:	e9c4 5507 	strd	r5, r5, [r4, #28]
 8035bb6:	2b00      	cmp	r3, #0
 8035bb8:	f43f af29 	beq.w	8035a0e <nx_driver_stm32f4xx+0x76>
 8035bbc:	f000 ff34 	bl	8036a28 <ETH_BSP_Config>
 8035bc0:	4955      	ldr	r1, [pc, #340]	; (8035d18 <nx_driver_stm32f4xx+0x380>)
 8035bc2:	4628      	mov	r0, r5
 8035bc4:	f000 fe66 	bl	8036894 <ETH_MACAddressConfig>
 8035bc8:	4954      	ldr	r1, [pc, #336]	; (8035d1c <nx_driver_stm32f4xx+0x384>)
 8035bca:	f8c4 1224 	str.w	r1, [r4, #548]	; 0x224
 8035bce:	4628      	mov	r0, r5
 8035bd0:	f504 7311 	add.w	r3, r4, #580	; 0x244
 8035bd4:	3001      	adds	r0, #1
 8035bd6:	f100 0211 	add.w	r2, r0, #17
 8035bda:	eb04 1242 	add.w	r2, r4, r2, lsl #5
 8035bde:	283f      	cmp	r0, #63	; 0x3f
 8035be0:	f843 3c14 	str.w	r3, [r3, #-20]
 8035be4:	f103 0320 	add.w	r3, r3, #32
 8035be8:	6051      	str	r1, [r2, #4]
 8035bea:	d1f3      	bne.n	8035bd4 <nx_driver_stm32f4xx+0x23c>
 8035bec:	4f4c      	ldr	r7, [pc, #304]	; (8035d20 <nx_driver_stm32f4xx+0x388>)
 8035bee:	4a4d      	ldr	r2, [pc, #308]	; (8035d24 <nx_driver_stm32f4xx+0x38c>)
 8035bf0:	f8c4 7a10 	str.w	r7, [r4, #2576]	; 0xa10
 8035bf4:	f241 0310 	movw	r3, #4112	; 0x1010
 8035bf8:	f5a7 7900 	sub.w	r9, r7, #512	; 0x200
 8035bfc:	50d7      	str	r7, [r2, r3]
 8035bfe:	464d      	mov	r5, r9
 8035c00:	f607 08fc 	addw	r8, r7, #2300	; 0x8fc
 8035c04:	f10d 0b0c 	add.w	fp, sp, #12
 8035c08:	f04f 4a00 	mov.w	sl, #2147483648	; 0x80000000
 8035c0c:	2300      	movs	r3, #0
 8035c0e:	68a0      	ldr	r0, [r4, #8]
 8035c10:	461a      	mov	r2, r3
 8035c12:	4659      	mov	r1, fp
 8035c14:	f002 fa02 	bl	803801c <_nx_packet_allocate>
 8035c18:	46ae      	mov	lr, r5
 8035c1a:	2800      	cmp	r0, #0
 8035c1c:	f47f aef7 	bne.w	8035a0e <nx_driver_stm32f4xx+0x76>
 8035c20:	9b03      	ldr	r3, [sp, #12]
 8035c22:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8035c24:	6a59      	ldr	r1, [r3, #36]	; 0x24
 8035c26:	9200      	str	r2, [sp, #0]
 8035c28:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8035c2a:	eba2 0c01 	sub.w	ip, r2, r1
 8035c2e:	9a00      	ldr	r2, [sp, #0]
 8035c30:	f44c 4180 	orr.w	r1, ip, #16384	; 0x4000
 8035c34:	3202      	adds	r2, #2
 8035c36:	62da      	str	r2, [r3, #44]	; 0x2c
 8035c38:	e9c5 1201 	strd	r1, r2, [r5, #4]
 8035c3c:	f848 3f04 	str.w	r3, [r8, #4]!
 8035c40:	f845 ab20 	str.w	sl, [r5], #32
 8035c44:	42bd      	cmp	r5, r7
 8035c46:	d015      	beq.n	8035c74 <nx_driver_stm32f4xx+0x2dc>
 8035c48:	f845 5c14 	str.w	r5, [r5, #-20]
 8035c4c:	e7de      	b.n	8035c0c <nx_driver_stm32f4xx+0x274>
 8035c4e:	4c31      	ldr	r4, [pc, #196]	; (8035d14 <nx_driver_stm32f4xx+0x37c>)
 8035c50:	6863      	ldr	r3, [r4, #4]
 8035c52:	2b02      	cmp	r3, #2
 8035c54:	f67f aedb 	bls.w	8035a0e <nx_driver_stm32f4xx+0x76>
 8035c58:	2b03      	cmp	r3, #3
 8035c5a:	f000 817c 	beq.w	8035f56 <nx_driver_stm32f4xx+0x5be>
 8035c5e:	2315      	movs	r3, #21
 8035c60:	6043      	str	r3, [r0, #4]
 8035c62:	e6cc      	b.n	80359fe <nx_driver_stm32f4xx+0x66>
 8035c64:	4b2b      	ldr	r3, [pc, #172]	; (8035d14 <nx_driver_stm32f4xx+0x37c>)
 8035c66:	69c2      	ldr	r2, [r0, #28]
 8035c68:	60da      	str	r2, [r3, #12]
 8035c6a:	2300      	movs	r3, #0
 8035c6c:	6043      	str	r3, [r0, #4]
 8035c6e:	b005      	add	sp, #20
 8035c70:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8035c74:	492b      	ldr	r1, [pc, #172]	; (8035d24 <nx_driver_stm32f4xx+0x38c>)
 8035c76:	f8ce 900c 	str.w	r9, [lr, #12]
 8035c7a:	f241 030c 	movw	r3, #4108	; 0x100c
 8035c7e:	f8c4 cb64 	str.w	ip, [r4, #2916]	; 0xb64
 8035c82:	4a25      	ldr	r2, [pc, #148]	; (8035d18 <nx_driver_stm32f4xx+0x380>)
 8035c84:	f841 9003 	str.w	r9, [r1, r3]
 8035c88:	8813      	ldrh	r3, [r2, #0]
 8035c8a:	9f01      	ldr	r7, [sp, #4]
 8035c8c:	f8d2 2002 	ldr.w	r2, [r2, #2]
 8035c90:	69b1      	ldr	r1, [r6, #24]
 8035c92:	6021      	str	r1, [r4, #0]
 8035c94:	ba5b      	rev16	r3, r3
 8035c96:	b29b      	uxth	r3, r3
 8035c98:	60fb      	str	r3, [r7, #12]
 8035c9a:	fa92 fc82 	rev.w	ip, r2
 8035c9e:	2501      	movs	r5, #1
 8035ca0:	f240 51dc 	movw	r1, #1500	; 0x5dc
 8035ca4:	2303      	movs	r3, #3
 8035ca6:	717d      	strb	r5, [r7, #5]
 8035ca8:	f8c7 c010 	str.w	ip, [r7, #16]
 8035cac:	6239      	str	r1, [r7, #32]
 8035cae:	6063      	str	r3, [r4, #4]
 8035cb0:	6070      	str	r0, [r6, #4]
 8035cb2:	b005      	add	sp, #20
 8035cb4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8035cb8:	2000      	movs	r0, #0
 8035cba:	69b5      	ldr	r5, [r6, #24]
 8035cbc:	f000 fd86 	bl	80367cc <ETH_MACTransmissionCmd>
 8035cc0:	f000 fe3a 	bl	8036938 <ETH_FlushTransmitFIFO>
 8035cc4:	2000      	movs	r0, #0
 8035cc6:	f000 fdb3 	bl	8036830 <ETH_MACReceptionCmd>
 8035cca:	2000      	movs	r0, #0
 8035ccc:	f000 fe70 	bl	80369b0 <ETH_DMATransmissionCmd>
 8035cd0:	2000      	movs	r0, #0
 8035cd2:	f000 fe8b 	bl	80369ec <ETH_DMAReceptionCmd>
 8035cd6:	2300      	movs	r3, #0
 8035cd8:	2203      	movs	r2, #3
 8035cda:	f885 373a 	strb.w	r3, [r5, #1850]	; 0x73a
 8035cde:	6062      	str	r2, [r4, #4]
 8035ce0:	6073      	str	r3, [r6, #4]
 8035ce2:	e68c      	b.n	80359fe <nx_driver_stm32f4xx+0x66>
 8035ce4:	f440 6300 	orr.w	r3, r0, #2048	; 0x800
 8035ce8:	f043 0306 	orr.w	r3, r3, #6
 8035cec:	e6c7      	b.n	8035a7e <nx_driver_stm32f4xx+0xe6>
 8035cee:	235a      	movs	r3, #90	; 0x5a
 8035cf0:	6043      	str	r3, [r0, #4]
 8035cf2:	6900      	ldr	r0, [r0, #16]
 8035cf4:	f002 fbec 	bl	80384d0 <_nx_packet_transmit_release>
 8035cf8:	e681      	b.n	80359fe <nx_driver_stm32f4xx+0x66>
 8035cfa:	e9d4 7307 	ldrd	r7, r3, [r4, #28]
 8035cfe:	f103 3aff 	add.w	sl, r3, #4294967295
 8035d02:	2b00      	cmp	r3, #0
 8035d04:	f43f ae75 	beq.w	80359f2 <nx_driver_stm32f4xx+0x5a>
 8035d08:	4623      	mov	r3, r4
 8035d0a:	46a8      	mov	r8, r5
 8035d0c:	4654      	mov	r4, sl
 8035d0e:	469a      	mov	sl, r3
 8035d10:	e022      	b.n	8035d58 <nx_driver_stm32f4xx+0x3c0>
 8035d12:	bf00      	nop
 8035d14:	200115c4 	.word	0x200115c4
 8035d18:	20002454 	.word	0x20002454
 8035d1c:	40d00000 	.word	0x40d00000
 8035d20:	200117e8 	.word	0x200117e8
 8035d24:	40028000 	.word	0x40028000
 8035d28:	6852      	ldr	r2, [r2, #4]
 8035d2a:	2a00      	cmp	r2, #0
 8035d2c:	f2c0 80fd 	blt.w	8035f2a <nx_driver_stm32f4xx+0x592>
 8035d30:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 8035d32:	699a      	ldr	r2, [r3, #24]
 8035d34:	310e      	adds	r1, #14
 8035d36:	3a0e      	subs	r2, #14
 8035d38:	3701      	adds	r7, #1
 8035d3a:	62d9      	str	r1, [r3, #44]	; 0x2c
 8035d3c:	619a      	str	r2, [r3, #24]
 8035d3e:	f007 073f 	and.w	r7, r7, #63	; 0x3f
 8035d42:	f002 fbc5 	bl	80384d0 <_nx_packet_transmit_release>
 8035d46:	f8ca 701c 	str.w	r7, [sl, #28]
 8035d4a:	f8c5 8004 	str.w	r8, [r5, #4]
 8035d4e:	f8ca 4020 	str.w	r4, [sl, #32]
 8035d52:	3c01      	subs	r4, #1
 8035d54:	f0c0 80e9 	bcc.w	8035f2a <nx_driver_stm32f4xx+0x592>
 8035d58:	f507 7522 	add.w	r5, r7, #648	; 0x288
 8035d5c:	eb0a 0585 	add.w	r5, sl, r5, lsl #2
 8035d60:	f107 0311 	add.w	r3, r7, #17
 8035d64:	eb0a 1243 	add.w	r2, sl, r3, lsl #5
 8035d68:	686b      	ldr	r3, [r5, #4]
 8035d6a:	4618      	mov	r0, r3
 8035d6c:	2b00      	cmp	r3, #0
 8035d6e:	d1db      	bne.n	8035d28 <nx_driver_stm32f4xx+0x390>
 8035d70:	3701      	adds	r7, #1
 8035d72:	f007 073f 	and.w	r7, r7, #63	; 0x3f
 8035d76:	e7ec      	b.n	8035d52 <nx_driver_stm32f4xx+0x3ba>
 8035d78:	6962      	ldr	r2, [r4, #20]
 8035d7a:	f102 0801 	add.w	r8, r2, #1
 8035d7e:	eb04 1348 	add.w	r3, r4, r8, lsl #5
 8035d82:	eb04 0182 	add.w	r1, r4, r2, lsl #2
 8035d86:	685b      	ldr	r3, [r3, #4]
 8035d88:	f8d1 bb24 	ldr.w	fp, [r1, #2852]	; 0xb24
 8035d8c:	2b00      	cmp	r3, #0
 8035d8e:	f2c0 80be 	blt.w	8035f0e <nx_driver_stm32f4xx+0x576>
 8035d92:	9600      	str	r6, [sp, #0]
 8035d94:	2700      	movs	r7, #0
 8035d96:	465b      	mov	r3, fp
 8035d98:	4691      	mov	r9, r2
 8035d9a:	f04f 4a00 	mov.w	sl, #2147483648	; 0x80000000
 8035d9e:	465e      	mov	r6, fp
 8035da0:	e01b      	b.n	8035dda <nx_driver_stm32f4xx+0x442>
 8035da2:	f008 080f 	and.w	r8, r8, #15
 8035da6:	eb04 0088 	add.w	r0, r4, r8, lsl #2
 8035daa:	4591      	cmp	r9, r2
 8035dac:	f8d0 0b24 	ldr.w	r0, [r0, #2852]	; 0xb24
 8035db0:	bf18      	it	ne
 8035db2:	6a5a      	ldrne	r2, [r3, #36]	; 0x24
 8035db4:	6a99      	ldr	r1, [r3, #40]	; 0x28
 8035db6:	bf18      	it	ne
 8035db8:	62da      	strne	r2, [r3, #44]	; 0x2c
 8035dba:	60d8      	str	r0, [r3, #12]
 8035dbc:	6319      	str	r1, [r3, #48]	; 0x30
 8035dbe:	3701      	adds	r7, #1
 8035dc0:	4642      	mov	r2, r8
 8035dc2:	f102 0801 	add.w	r8, r2, #1
 8035dc6:	eb04 1348 	add.w	r3, r4, r8, lsl #5
 8035dca:	685b      	ldr	r3, [r3, #4]
 8035dcc:	2b00      	cmp	r3, #0
 8035dce:	f2c0 809d 	blt.w	8035f0c <nx_driver_stm32f4xx+0x574>
 8035dd2:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 8035dd6:	f8d3 3b24 	ldr.w	r3, [r3, #2852]	; 0xb24
 8035dda:	eb04 1148 	add.w	r1, r4, r8, lsl #5
 8035dde:	6848      	ldr	r0, [r1, #4]
 8035de0:	05c5      	lsls	r5, r0, #23
 8035de2:	d5de      	bpl.n	8035da2 <nx_driver_stm32f4xx+0x40a>
 8035de4:	2500      	movs	r5, #0
 8035de6:	6848      	ldr	r0, [r1, #4]
 8035de8:	f8d4 cb64 	ldr.w	ip, [r4, #2916]	; 0xb64
 8035dec:	60dd      	str	r5, [r3, #12]
 8035dee:	eb04 0589 	add.w	r5, r4, r9, lsl #2
 8035df2:	f3c0 400d 	ubfx	r0, r0, #16, #14
 8035df6:	f8d5 eb24 	ldr.w	lr, [r5, #2852]	; 0xb24
 8035dfa:	6add      	ldr	r5, [r3, #44]	; 0x2c
 8035dfc:	3804      	subs	r0, #4
 8035dfe:	f8ce 0018 	str.w	r0, [lr, #24]
 8035e02:	fb0c 0017 	mls	r0, ip, r7, r0
 8035e06:	4428      	add	r0, r5
 8035e08:	4591      	cmp	r9, r2
 8035e0a:	6318      	str	r0, [r3, #48]	; 0x30
 8035e0c:	d017      	beq.n	8035e3e <nx_driver_stm32f4xx+0x4a6>
 8035e0e:	3d02      	subs	r5, #2
 8035e10:	42a8      	cmp	r0, r5
 8035e12:	62dd      	str	r5, [r3, #44]	; 0x2c
 8035e14:	d813      	bhi.n	8035e3e <nx_driver_stm32f4xx+0x4a6>
 8035e16:	3a01      	subs	r2, #1
 8035e18:	f002 020f 	and.w	r2, r2, #15
 8035e1c:	eb04 0282 	add.w	r2, r4, r2, lsl #2
 8035e20:	3f01      	subs	r7, #1
 8035e22:	f8d2 5b24 	ldr.w	r5, [r2, #2852]	; 0xb24
 8035e26:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8035e28:	6b28      	ldr	r0, [r5, #48]	; 0x30
 8035e2a:	9001      	str	r0, [sp, #4]
 8035e2c:	2000      	movs	r0, #0
 8035e2e:	60e8      	str	r0, [r5, #12]
 8035e30:	9801      	ldr	r0, [sp, #4]
 8035e32:	3202      	adds	r2, #2
 8035e34:	3801      	subs	r0, #1
 8035e36:	6328      	str	r0, [r5, #48]	; 0x30
 8035e38:	f8c1 a004 	str.w	sl, [r1, #4]
 8035e3c:	62da      	str	r2, [r3, #44]	; 0x2c
 8035e3e:	2f00      	cmp	r7, #0
 8035e40:	db4a      	blt.n	8035ed8 <nx_driver_stm32f4xx+0x540>
 8035e42:	f10d 0b0c 	add.w	fp, sp, #12
 8035e46:	e00c      	b.n	8035e62 <nx_driver_stm32f4xx+0x4ca>
 8035e48:	9903      	ldr	r1, [sp, #12]
 8035e4a:	6acb      	ldr	r3, [r1, #44]	; 0x2c
 8035e4c:	1c78      	adds	r0, r7, #1
 8035e4e:	f103 0302 	add.w	r3, r3, #2
 8035e52:	62cb      	str	r3, [r1, #44]	; 0x2c
 8035e54:	f8ce 1b24 	str.w	r1, [lr, #2852]	; 0xb24
 8035e58:	f8cc 302c 	str.w	r3, [ip, #44]	; 0x2c
 8035e5c:	f8c2 a004 	str.w	sl, [r2, #4]
 8035e60:	d03a      	beq.n	8035ed8 <nx_driver_stm32f4xx+0x540>
 8035e62:	2300      	movs	r3, #0
 8035e64:	461a      	mov	r2, r3
 8035e66:	68a0      	ldr	r0, [r4, #8]
 8035e68:	4659      	mov	r1, fp
 8035e6a:	f002 f8d7 	bl	803801c <_nx_packet_allocate>
 8035e6e:	eb07 0309 	add.w	r3, r7, r9
 8035e72:	f003 050f 	and.w	r5, r3, #15
 8035e76:	1c6a      	adds	r2, r5, #1
 8035e78:	3f01      	subs	r7, #1
 8035e7a:	eb04 1c45 	add.w	ip, r4, r5, lsl #5
 8035e7e:	eb04 1242 	add.w	r2, r4, r2, lsl #5
 8035e82:	eb04 0e85 	add.w	lr, r4, r5, lsl #2
 8035e86:	2800      	cmp	r0, #0
 8035e88:	d0de      	beq.n	8035e48 <nx_driver_stm32f4xx+0x4b0>
 8035e8a:	eb04 0285 	add.w	r2, r4, r5, lsl #2
 8035e8e:	9301      	str	r3, [sp, #4]
 8035e90:	f8d2 2b24 	ldr.w	r2, [r2, #2852]	; 0xb24
 8035e94:	68d0      	ldr	r0, [r2, #12]
 8035e96:	f002 fabf 	bl	8038418 <_nx_packet_release>
 8035e9a:	9b01      	ldr	r3, [sp, #4]
 8035e9c:	e001      	b.n	8035ea2 <nx_driver_stm32f4xx+0x50a>
 8035e9e:	f003 050f 	and.w	r5, r3, #15
 8035ea2:	eb04 0285 	add.w	r2, r4, r5, lsl #2
 8035ea6:	3501      	adds	r5, #1
 8035ea8:	f8d2 0b24 	ldr.w	r0, [r2, #2852]	; 0xb24
 8035eac:	6a42      	ldr	r2, [r0, #36]	; 0x24
 8035eae:	eb04 1545 	add.w	r5, r4, r5, lsl #5
 8035eb2:	1c91      	adds	r1, r2, #2
 8035eb4:	4599      	cmp	r9, r3
 8035eb6:	f8c5 a004 	str.w	sl, [r5, #4]
 8035eba:	f103 33ff 	add.w	r3, r3, #4294967295
 8035ebe:	62c1      	str	r1, [r0, #44]	; 0x2c
 8035ec0:	d1ed      	bne.n	8035e9e <nx_driver_stm32f4xx+0x506>
 8035ec2:	f008 090f 	and.w	r9, r8, #15
 8035ec6:	eb04 0389 	add.w	r3, r4, r9, lsl #2
 8035eca:	f8c4 9014 	str.w	r9, [r4, #20]
 8035ece:	f8d3 6b24 	ldr.w	r6, [r3, #2852]	; 0xb24
 8035ed2:	464a      	mov	r2, r9
 8035ed4:	2700      	movs	r7, #0
 8035ed6:	e774      	b.n	8035dc2 <nx_driver_stm32f4xx+0x42a>
 8035ed8:	68e3      	ldr	r3, [r4, #12]
 8035eda:	6af2      	ldr	r2, [r6, #44]	; 0x2c
 8035edc:	61f3      	str	r3, [r6, #28]
 8035ede:	8993      	ldrh	r3, [r2, #12]
 8035ee0:	6820      	ldr	r0, [r4, #0]
 8035ee2:	ba5b      	rev16	r3, r3
 8035ee4:	b29b      	uxth	r3, r3
 8035ee6:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 8035eea:	d02b      	beq.n	8035f44 <nx_driver_stm32f4xx+0x5ac>
 8035eec:	f248 61dd 	movw	r1, #34525	; 0x86dd
 8035ef0:	428b      	cmp	r3, r1
 8035ef2:	d027      	beq.n	8035f44 <nx_driver_stm32f4xx+0x5ac>
 8035ef4:	f640 0106 	movw	r1, #2054	; 0x806
 8035ef8:	428b      	cmp	r3, r1
 8035efa:	d070      	beq.n	8035fde <nx_driver_stm32f4xx+0x646>
 8035efc:	f248 0135 	movw	r1, #32821	; 0x8035
 8035f00:	428b      	cmp	r3, r1
 8035f02:	d063      	beq.n	8035fcc <nx_driver_stm32f4xx+0x634>
 8035f04:	4630      	mov	r0, r6
 8035f06:	f002 fa87 	bl	8038418 <_nx_packet_release>
 8035f0a:	e7da      	b.n	8035ec2 <nx_driver_stm32f4xx+0x52a>
 8035f0c:	9e00      	ldr	r6, [sp, #0]
 8035f0e:	4b3f      	ldr	r3, [pc, #252]	; (803600c <nx_driver_stm32f4xx+0x674>)
 8035f10:	f241 0214 	movw	r2, #4116	; 0x1014
 8035f14:	5899      	ldr	r1, [r3, r2]
 8035f16:	0609      	lsls	r1, r1, #24
 8035f18:	f57f ad6f 	bpl.w	80359fa <nx_driver_stm32f4xx+0x62>
 8035f1c:	f241 0108 	movw	r1, #4104	; 0x1008
 8035f20:	2480      	movs	r4, #128	; 0x80
 8035f22:	2000      	movs	r0, #0
 8035f24:	509c      	str	r4, [r3, r2]
 8035f26:	5058      	str	r0, [r3, r1]
 8035f28:	e567      	b.n	80359fa <nx_driver_stm32f4xx+0x62>
 8035f2a:	4654      	mov	r4, sl
 8035f2c:	e561      	b.n	80359f2 <nx_driver_stm32f4xx+0x5a>
 8035f2e:	3a0e      	subs	r2, #14
 8035f30:	235a      	movs	r3, #90	; 0x5a
 8035f32:	f8c8 2018 	str.w	r2, [r8, #24]
 8035f36:	f8c8 e02c 	str.w	lr, [r8, #44]	; 0x2c
 8035f3a:	4640      	mov	r0, r8
 8035f3c:	6073      	str	r3, [r6, #4]
 8035f3e:	f002 fac7 	bl	80384d0 <_nx_packet_transmit_release>
 8035f42:	e55c      	b.n	80359fe <nx_driver_stm32f4xx+0x66>
 8035f44:	69b3      	ldr	r3, [r6, #24]
 8035f46:	320e      	adds	r2, #14
 8035f48:	3b0e      	subs	r3, #14
 8035f4a:	62f2      	str	r2, [r6, #44]	; 0x2c
 8035f4c:	61b3      	str	r3, [r6, #24]
 8035f4e:	4631      	mov	r1, r6
 8035f50:	f001 fc36 	bl	80377c0 <_nx_ip_packet_deferred_receive>
 8035f54:	e7b5      	b.n	8035ec2 <nx_driver_stm32f4xx+0x52a>
 8035f56:	6985      	ldr	r5, [r0, #24]
 8035f58:	f000 fd12 	bl	8036980 <ETH_Start>
 8035f5c:	2104      	movs	r1, #4
 8035f5e:	2200      	movs	r2, #0
 8035f60:	2301      	movs	r3, #1
 8035f62:	6061      	str	r1, [r4, #4]
 8035f64:	6072      	str	r2, [r6, #4]
 8035f66:	f885 373a 	strb.w	r3, [r5, #1850]	; 0x73a
 8035f6a:	e548      	b.n	80359fe <nx_driver_stm32f4xx+0x66>
 8035f6c:	6a22      	ldr	r2, [r4, #32]
 8035f6e:	f8da 0000 	ldr.w	r0, [sl]
 8035f72:	f8c7 8004 	str.w	r8, [r7, #4]
 8035f76:	1c51      	adds	r1, r2, #1
 8035f78:	1c5a      	adds	r2, r3, #1
 8035f7a:	4461      	add	r1, ip
 8035f7c:	f040 4060 	orr.w	r0, r0, #3758096384	; 0xe0000000
 8035f80:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 8035f84:	465e      	mov	r6, fp
 8035f86:	6221      	str	r1, [r4, #32]
 8035f88:	f8ca 0000 	str.w	r0, [sl]
 8035f8c:	61a2      	str	r2, [r4, #24]
 8035f8e:	f1bc 0f00 	cmp.w	ip, #0
 8035f92:	d00d      	beq.n	8035fb0 <nx_driver_stm32f4xx+0x618>
 8035f94:	3b01      	subs	r3, #1
 8035f96:	f003 033f 	and.w	r3, r3, #63	; 0x3f
 8035f9a:	f103 0211 	add.w	r2, r3, #17
 8035f9e:	eb04 1242 	add.w	r2, r4, r2, lsl #5
 8035fa2:	f1bc 0c01 	subs.w	ip, ip, #1
 8035fa6:	6851      	ldr	r1, [r2, #4]
 8035fa8:	f041 4100 	orr.w	r1, r1, #2147483648	; 0x80000000
 8035fac:	6051      	str	r1, [r2, #4]
 8035fae:	d1f1      	bne.n	8035f94 <nx_driver_stm32f4xx+0x5fc>
 8035fb0:	4b16      	ldr	r3, [pc, #88]	; (803600c <nx_driver_stm32f4xx+0x674>)
 8035fb2:	f241 0214 	movw	r2, #4116	; 0x1014
 8035fb6:	5899      	ldr	r1, [r3, r2]
 8035fb8:	074f      	lsls	r7, r1, #29
 8035fba:	f57f ad1e 	bpl.w	80359fa <nx_driver_stm32f4xx+0x62>
 8035fbe:	f241 0104 	movw	r1, #4100	; 0x1004
 8035fc2:	2404      	movs	r4, #4
 8035fc4:	2000      	movs	r0, #0
 8035fc6:	509c      	str	r4, [r3, r2]
 8035fc8:	5058      	str	r0, [r3, r1]
 8035fca:	e516      	b.n	80359fa <nx_driver_stm32f4xx+0x62>
 8035fcc:	69b3      	ldr	r3, [r6, #24]
 8035fce:	320e      	adds	r2, #14
 8035fd0:	3b0e      	subs	r3, #14
 8035fd2:	62f2      	str	r2, [r6, #44]	; 0x2c
 8035fd4:	61b3      	str	r3, [r6, #24]
 8035fd6:	4631      	mov	r1, r6
 8035fd8:	f002 fa9c 	bl	8038514 <_nx_rarp_packet_deferred_receive>
 8035fdc:	e771      	b.n	8035ec2 <nx_driver_stm32f4xx+0x52a>
 8035fde:	69b3      	ldr	r3, [r6, #24]
 8035fe0:	320e      	adds	r2, #14
 8035fe2:	3b0e      	subs	r3, #14
 8035fe4:	62f2      	str	r2, [r6, #44]	; 0x2c
 8035fe6:	61b3      	str	r3, [r6, #24]
 8035fe8:	4631      	mov	r1, r6
 8035fea:	f000 fedd 	bl	8036da8 <_nx_arp_packet_deferred_receive>
 8035fee:	e768      	b.n	8035ec2 <nx_driver_stm32f4xx+0x52a>
 8035ff0:	6855      	ldr	r5, [r2, #4]
 8035ff2:	6a21      	ldr	r1, [r4, #32]
 8035ff4:	f8c0 8004 	str.w	r8, [r0, #4]
 8035ff8:	3301      	adds	r3, #1
 8035ffa:	f003 033f 	and.w	r3, r3, #63	; 0x3f
 8035ffe:	f045 4560 	orr.w	r5, r5, #3758096384	; 0xe0000000
 8036002:	3101      	adds	r1, #1
 8036004:	61a3      	str	r3, [r4, #24]
 8036006:	6055      	str	r5, [r2, #4]
 8036008:	6221      	str	r1, [r4, #32]
 803600a:	e7d1      	b.n	8035fb0 <nx_driver_stm32f4xx+0x618>
 803600c:	40028000 	.word	0x40028000

08036010 <nx_driver_stm32f4xx_ethernet_isr>:
 8036010:	f241 0114 	movw	r1, #4116	; 0x1014
 8036014:	480c      	ldr	r0, [pc, #48]	; (8036048 <nx_driver_stm32f4xx_ethernet_isr+0x38>)
 8036016:	4b0d      	ldr	r3, [pc, #52]	; (803604c <nx_driver_stm32f4xx_ethernet_isr+0x3c>)
 8036018:	5842      	ldr	r2, [r0, r1]
 803601a:	b430      	push	{r4, r5}
 803601c:	691c      	ldr	r4, [r3, #16]
 803601e:	4d0c      	ldr	r5, [pc, #48]	; (8036050 <nx_driver_stm32f4xx_ethernet_isr+0x40>)
 8036020:	5045      	str	r5, [r0, r1]
 8036022:	07d1      	lsls	r1, r2, #31
 8036024:	bf44      	itt	mi
 8036026:	f044 0104 	orrmi.w	r1, r4, #4
 803602a:	6119      	strmi	r1, [r3, #16]
 803602c:	0652      	lsls	r2, r2, #25
 803602e:	d503      	bpl.n	8036038 <nx_driver_stm32f4xx_ethernet_isr+0x28>
 8036030:	691a      	ldr	r2, [r3, #16]
 8036032:	f042 0201 	orr.w	r2, r2, #1
 8036036:	611a      	str	r2, [r3, #16]
 8036038:	b10c      	cbz	r4, 803603e <nx_driver_stm32f4xx_ethernet_isr+0x2e>
 803603a:	bc30      	pop	{r4, r5}
 803603c:	4770      	bx	lr
 803603e:	bc30      	pop	{r4, r5}
 8036040:	6818      	ldr	r0, [r3, #0]
 8036042:	f001 bb8f 	b.w	8037764 <_nx_ip_driver_deferred_processing>
 8036046:	bf00      	nop
 8036048:	40028000 	.word	0x40028000
 803604c:	200115c4 	.word	0x200115c4
 8036050:	00010041 	.word	0x00010041

08036054 <ETH_DeInit>:
 8036054:	b508      	push	{r3, lr}
 8036056:	2101      	movs	r1, #1
 8036058:	f04f 7000 	mov.w	r0, #33554432	; 0x2000000
 803605c:	f005 fd0c 	bl	803ba78 <RCC_AHB1PeriphResetCmd>
 8036060:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8036064:	2100      	movs	r1, #0
 8036066:	f04f 7000 	mov.w	r0, #33554432	; 0x2000000
 803606a:	f005 bd05 	b.w	803ba78 <RCC_AHB1PeriphResetCmd>
 803606e:	bf00      	nop

08036070 <ETH_StructInit>:
 8036070:	b430      	push	{r4, r5}
 8036072:	2101      	movs	r1, #1
 8036074:	f44f 4380 	mov.w	r3, #16384	; 0x4000
 8036078:	f44f 6200 	mov.w	r2, #2048	; 0x800
 803607c:	2540      	movs	r5, #64	; 0x40
 803607e:	2420      	movs	r4, #32
 8036080:	6001      	str	r1, [r0, #0]
 8036082:	6143      	str	r3, [r0, #20]
 8036084:	2180      	movs	r1, #128	; 0x80
 8036086:	2300      	movs	r3, #0
 8036088:	6202      	str	r2, [r0, #32]
 803608a:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 803608e:	e9c0 3301 	strd	r3, r3, [r0, #4]
 8036092:	e9c0 3303 	strd	r3, r3, [r0, #12]
 8036096:	e9c0 3306 	strd	r3, r3, [r0, #24]
 803609a:	e9c0 3309 	strd	r3, r3, [r0, #36]	; 0x24
 803609e:	e9c0 330b 	strd	r3, r3, [r0, #44]	; 0x2c
 80360a2:	e9c0 330d 	strd	r3, r3, [r0, #52]	; 0x34
 80360a6:	e9c0 3312 	strd	r3, r3, [r0, #72]	; 0x48
 80360aa:	e9c0 3314 	strd	r3, r3, [r0, #80]	; 0x50
 80360ae:	e9c0 3316 	strd	r3, r3, [r0, #88]	; 0x58
 80360b2:	e9c0 331a 	strd	r3, r3, [r0, #104]	; 0x68
 80360b6:	e9c0 331c 	strd	r3, r3, [r0, #112]	; 0x70
 80360ba:	6405      	str	r5, [r0, #64]	; 0x40
 80360bc:	6444      	str	r4, [r0, #68]	; 0x44
 80360be:	f44f 1500 	mov.w	r5, #2097152	; 0x200000
 80360c2:	f44f 3480 	mov.w	r4, #65536	; 0x10000
 80360c6:	6641      	str	r1, [r0, #100]	; 0x64
 80360c8:	63c3      	str	r3, [r0, #60]	; 0x3c
 80360ca:	6603      	str	r3, [r0, #96]	; 0x60
 80360cc:	f44f 0180 	mov.w	r1, #4194304	; 0x400000
 80360d0:	e9c0 331e 	strd	r3, r3, [r0, #120]	; 0x78
 80360d4:	e9c0 3324 	strd	r3, r3, [r0, #144]	; 0x90
 80360d8:	e9c0 3326 	strd	r3, r3, [r0, #152]	; 0x98
 80360dc:	e9c0 332d 	strd	r3, r3, [r0, #180]	; 0xb4
 80360e0:	f8c0 2080 	str.w	r2, [r0, #128]	; 0x80
 80360e4:	f8c0 3088 	str.w	r3, [r0, #136]	; 0x88
 80360e8:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 80360ec:	f8c0 30a0 	str.w	r3, [r0, #160]	; 0xa0
 80360f0:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
 80360f4:	e9c0 412a 	strd	r4, r1, [r0, #168]	; 0xa8
 80360f8:	f8c0 508c 	str.w	r5, [r0, #140]	; 0x8c
 80360fc:	f8c0 20b0 	str.w	r2, [r0, #176]	; 0xb0
 8036100:	bc30      	pop	{r4, r5}
 8036102:	f8c0 3084 	str.w	r3, [r0, #132]	; 0x84
 8036106:	f8c0 30a4 	str.w	r3, [r0, #164]	; 0xa4
 803610a:	4770      	bx	lr

0803610c <ETH_Init>:
 803610c:	b570      	push	{r4, r5, r6, lr}
 803610e:	b08e      	sub	sp, #56	; 0x38
 8036110:	2200      	movs	r2, #0
 8036112:	6803      	ldr	r3, [r0, #0]
 8036114:	9201      	str	r2, [sp, #4]
 8036116:	2201      	movs	r2, #1
 8036118:	4293      	cmp	r3, r2
 803611a:	4604      	mov	r4, r0
 803611c:	9202      	str	r2, [sp, #8]
 803611e:	d904      	bls.n	803612a <ETH_Init+0x1e>
 8036120:	48cc      	ldr	r0, [pc, #816]	; (8036454 <ETH_Init+0x348>)
 8036122:	f240 111d 	movw	r1, #285	; 0x11d
 8036126:	f7ec fbb1 	bl	802288c <assert_failed>
 803612a:	6863      	ldr	r3, [r4, #4]
 803612c:	f433 0300 	bics.w	r3, r3, #8388608	; 0x800000
 8036130:	d004      	beq.n	803613c <ETH_Init+0x30>
 8036132:	48c8      	ldr	r0, [pc, #800]	; (8036454 <ETH_Init+0x348>)
 8036134:	f44f 718f 	mov.w	r1, #286	; 0x11e
 8036138:	f7ec fba8 	bl	802288c <assert_failed>
 803613c:	68a3      	ldr	r3, [r4, #8]
 803613e:	f433 0380 	bics.w	r3, r3, #4194304	; 0x400000
 8036142:	d004      	beq.n	803614e <ETH_Init+0x42>
 8036144:	48c3      	ldr	r0, [pc, #780]	; (8036454 <ETH_Init+0x348>)
 8036146:	f240 111f 	movw	r1, #287	; 0x11f
 803614a:	f7ec fb9f 	bl	802288c <assert_failed>
 803614e:	68e3      	ldr	r3, [r4, #12]
 8036150:	f433 23c0 	bics.w	r3, r3, #393216	; 0x60000
 8036154:	d007      	beq.n	8036166 <ETH_Init+0x5a>
 8036156:	f5b3 2f00 	cmp.w	r3, #524288	; 0x80000
 803615a:	d004      	beq.n	8036166 <ETH_Init+0x5a>
 803615c:	48bd      	ldr	r0, [pc, #756]	; (8036454 <ETH_Init+0x348>)
 803615e:	f44f 7190 	mov.w	r1, #288	; 0x120
 8036162:	f7ec fb93 	bl	802288c <assert_failed>
 8036166:	6923      	ldr	r3, [r4, #16]
 8036168:	f433 3380 	bics.w	r3, r3, #65536	; 0x10000
 803616c:	d004      	beq.n	8036178 <ETH_Init+0x6c>
 803616e:	48b9      	ldr	r0, [pc, #740]	; (8036454 <ETH_Init+0x348>)
 8036170:	f240 1121 	movw	r1, #289	; 0x121
 8036174:	f7ec fb8a 	bl	802288c <assert_failed>
 8036178:	6963      	ldr	r3, [r4, #20]
 803617a:	f433 4380 	bics.w	r3, r3, #16384	; 0x4000
 803617e:	d004      	beq.n	803618a <ETH_Init+0x7e>
 8036180:	48b4      	ldr	r0, [pc, #720]	; (8036454 <ETH_Init+0x348>)
 8036182:	f44f 7191 	mov.w	r1, #290	; 0x122
 8036186:	f7ec fb81 	bl	802288c <assert_failed>
 803618a:	69a3      	ldr	r3, [r4, #24]
 803618c:	f433 5300 	bics.w	r3, r3, #8192	; 0x2000
 8036190:	d004      	beq.n	803619c <ETH_Init+0x90>
 8036192:	48b0      	ldr	r0, [pc, #704]	; (8036454 <ETH_Init+0x348>)
 8036194:	f240 1123 	movw	r1, #291	; 0x123
 8036198:	f7ec fb78 	bl	802288c <assert_failed>
 803619c:	69e3      	ldr	r3, [r4, #28]
 803619e:	f433 5380 	bics.w	r3, r3, #4096	; 0x1000
 80361a2:	f040 8289 	bne.w	80366b8 <ETH_Init+0x5ac>
 80361a6:	6a23      	ldr	r3, [r4, #32]
 80361a8:	f433 6300 	bics.w	r3, r3, #2048	; 0x800
 80361ac:	f040 828e 	bne.w	80366cc <ETH_Init+0x5c0>
 80361b0:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80361b2:	f433 6380 	bics.w	r3, r3, #1024	; 0x400
 80361b6:	f040 8293 	bne.w	80366e0 <ETH_Init+0x5d4>
 80361ba:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 80361bc:	f433 7300 	bics.w	r3, r3, #512	; 0x200
 80361c0:	d004      	beq.n	80361cc <ETH_Init+0xc0>
 80361c2:	48a4      	ldr	r0, [pc, #656]	; (8036454 <ETH_Init+0x348>)
 80361c4:	f240 1127 	movw	r1, #295	; 0x127
 80361c8:	f7ec fb60 	bl	802288c <assert_failed>
 80361cc:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 80361ce:	f033 0380 	bics.w	r3, r3, #128	; 0x80
 80361d2:	f040 8297 	bne.w	8036704 <ETH_Init+0x5f8>
 80361d6:	6b23      	ldr	r3, [r4, #48]	; 0x30
 80361d8:	f033 0360 	bics.w	r3, r3, #96	; 0x60
 80361dc:	d004      	beq.n	80361e8 <ETH_Init+0xdc>
 80361de:	489d      	ldr	r0, [pc, #628]	; (8036454 <ETH_Init+0x348>)
 80361e0:	f240 1129 	movw	r1, #297	; 0x129
 80361e4:	f7ec fb52 	bl	802288c <assert_failed>
 80361e8:	6b63      	ldr	r3, [r4, #52]	; 0x34
 80361ea:	f033 0310 	bics.w	r3, r3, #16
 80361ee:	f040 8283 	bne.w	80366f8 <ETH_Init+0x5ec>
 80361f2:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 80361f4:	f033 4300 	bics.w	r3, r3, #2147483648	; 0x80000000
 80361f8:	f040 8258 	bne.w	80366ac <ETH_Init+0x5a0>
 80361fc:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 80361fe:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 8036202:	d003      	beq.n	803620c <ETH_Init+0x100>
 8036204:	f433 7300 	bics.w	r3, r3, #512	; 0x200
 8036208:	f040 82d2 	bne.w	80367b0 <ETH_Init+0x6a4>
 803620c:	6c23      	ldr	r3, [r4, #64]	; 0x40
 803620e:	f023 0280 	bic.w	r2, r3, #128	; 0x80
 8036212:	2a40      	cmp	r2, #64	; 0x40
 8036214:	d006      	beq.n	8036224 <ETH_Init+0x118>
 8036216:	2b80      	cmp	r3, #128	; 0x80
 8036218:	d004      	beq.n	8036224 <ETH_Init+0x118>
 803621a:	488e      	ldr	r0, [pc, #568]	; (8036454 <ETH_Init+0x348>)
 803621c:	f240 112d 	movw	r1, #301	; 0x12d
 8036220:	f7ec fb34 	bl	802288c <assert_failed>
 8036224:	6c63      	ldr	r3, [r4, #68]	; 0x44
 8036226:	f033 0320 	bics.w	r3, r3, #32
 803622a:	d004      	beq.n	8036236 <ETH_Init+0x12a>
 803622c:	4889      	ldr	r0, [pc, #548]	; (8036454 <ETH_Init+0x348>)
 803622e:	f44f 7197 	mov.w	r1, #302	; 0x12e
 8036232:	f7ec fb2b 	bl	802288c <assert_failed>
 8036236:	6ca3      	ldr	r3, [r4, #72]	; 0x48
 8036238:	f033 0308 	bics.w	r3, r3, #8
 803623c:	d004      	beq.n	8036248 <ETH_Init+0x13c>
 803623e:	4885      	ldr	r0, [pc, #532]	; (8036454 <ETH_Init+0x348>)
 8036240:	f240 112f 	movw	r1, #303	; 0x12f
 8036244:	f7ec fb22 	bl	802288c <assert_failed>
 8036248:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
 803624a:	2b01      	cmp	r3, #1
 803624c:	d904      	bls.n	8036258 <ETH_Init+0x14c>
 803624e:	4881      	ldr	r0, [pc, #516]	; (8036454 <ETH_Init+0x348>)
 8036250:	f44f 7198 	mov.w	r1, #304	; 0x130
 8036254:	f7ec fb1a 	bl	802288c <assert_failed>
 8036258:	6d23      	ldr	r3, [r4, #80]	; 0x50
 803625a:	f240 4204 	movw	r2, #1028	; 0x404
 803625e:	4293      	cmp	r3, r2
 8036260:	d003      	beq.n	803626a <ETH_Init+0x15e>
 8036262:	f033 0204 	bics.w	r2, r3, #4
 8036266:	f040 8206 	bne.w	8036676 <ETH_Init+0x56a>
 803626a:	6d63      	ldr	r3, [r4, #84]	; 0x54
 803626c:	f240 4202 	movw	r2, #1026	; 0x402
 8036270:	4293      	cmp	r3, r2
 8036272:	d003      	beq.n	803627c <ETH_Init+0x170>
 8036274:	f033 0302 	bics.w	r3, r3, #2
 8036278:	f040 82a0 	bne.w	80367bc <ETH_Init+0x6b0>
 803627c:	6e23      	ldr	r3, [r4, #96]	; 0x60
 803627e:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8036282:	f080 820d 	bcs.w	80366a0 <ETH_Init+0x594>
 8036286:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8036288:	f033 0380 	bics.w	r3, r3, #128	; 0x80
 803628c:	d004      	beq.n	8036298 <ETH_Init+0x18c>
 803628e:	4871      	ldr	r0, [pc, #452]	; (8036454 <ETH_Init+0x348>)
 8036290:	f44f 719a 	mov.w	r1, #308	; 0x134
 8036294:	f7ec fafa 	bl	802288c <assert_failed>
 8036298:	6ea3      	ldr	r3, [r4, #104]	; 0x68
 803629a:	f033 0330 	bics.w	r3, r3, #48	; 0x30
 803629e:	d004      	beq.n	80362aa <ETH_Init+0x19e>
 80362a0:	486c      	ldr	r0, [pc, #432]	; (8036454 <ETH_Init+0x348>)
 80362a2:	f240 1135 	movw	r1, #309	; 0x135
 80362a6:	f7ec faf1 	bl	802288c <assert_failed>
 80362aa:	6ee3      	ldr	r3, [r4, #108]	; 0x6c
 80362ac:	f033 0308 	bics.w	r3, r3, #8
 80362b0:	f040 8278 	bne.w	80367a4 <ETH_Init+0x698>
 80362b4:	6f23      	ldr	r3, [r4, #112]	; 0x70
 80362b6:	f033 0304 	bics.w	r3, r3, #4
 80362ba:	f040 826d 	bne.w	8036798 <ETH_Init+0x68c>
 80362be:	6f63      	ldr	r3, [r4, #116]	; 0x74
 80362c0:	f033 0302 	bics.w	r3, r3, #2
 80362c4:	f040 824e 	bne.w	8036764 <ETH_Init+0x658>
 80362c8:	6fa3      	ldr	r3, [r4, #120]	; 0x78
 80362ca:	f433 3380 	bics.w	r3, r3, #65536	; 0x10000
 80362ce:	f040 8243 	bne.w	8036758 <ETH_Init+0x64c>
 80362d2:	6fe3      	ldr	r3, [r4, #124]	; 0x7c
 80362d4:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 80362d8:	f080 81d6 	bcs.w	8036688 <ETH_Init+0x57c>
 80362dc:	f8d4 3080 	ldr.w	r3, [r4, #128]	; 0x80
 80362e0:	f033 6380 	bics.w	r3, r3, #67108864	; 0x4000000
 80362e4:	d004      	beq.n	80362f0 <ETH_Init+0x1e4>
 80362e6:	485b      	ldr	r0, [pc, #364]	; (8036454 <ETH_Init+0x348>)
 80362e8:	f44f 719e 	mov.w	r1, #316	; 0x13c
 80362ec:	f7ec face 	bl	802288c <assert_failed>
 80362f0:	f8d4 3084 	ldr.w	r3, [r4, #132]	; 0x84
 80362f4:	f033 7300 	bics.w	r3, r3, #33554432	; 0x2000000
 80362f8:	f040 820a 	bne.w	8036710 <ETH_Init+0x604>
 80362fc:	f8d4 3088 	ldr.w	r3, [r4, #136]	; 0x88
 8036300:	f033 7380 	bics.w	r3, r3, #16777216	; 0x1000000
 8036304:	d004      	beq.n	8036310 <ETH_Init+0x204>
 8036306:	4853      	ldr	r0, [pc, #332]	; (8036454 <ETH_Init+0x348>)
 8036308:	f44f 719f 	mov.w	r1, #318	; 0x13e
 803630c:	f7ec fabe 	bl	802288c <assert_failed>
 8036310:	f8d4 308c 	ldr.w	r3, [r4, #140]	; 0x8c
 8036314:	f433 1300 	bics.w	r3, r3, #2097152	; 0x200000
 8036318:	f040 81e8 	bne.w	80366ec <ETH_Init+0x5e0>
 803631c:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 8036320:	f433 4340 	bics.w	r3, r3, #49152	; 0xc000
 8036324:	d007      	beq.n	8036336 <ETH_Init+0x22a>
 8036326:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 803632a:	d004      	beq.n	8036336 <ETH_Init+0x22a>
 803632c:	4849      	ldr	r0, [pc, #292]	; (8036454 <ETH_Init+0x348>)
 803632e:	f44f 71a0 	mov.w	r1, #320	; 0x140
 8036332:	f7ec faab 	bl	802288c <assert_failed>
 8036336:	f8d4 3094 	ldr.w	r3, [r4, #148]	; 0x94
 803633a:	f033 0380 	bics.w	r3, r3, #128	; 0x80
 803633e:	f040 8205 	bne.w	803674c <ETH_Init+0x640>
 8036342:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
 8036346:	f033 0340 	bics.w	r3, r3, #64	; 0x40
 803634a:	f040 81f9 	bne.w	8036740 <ETH_Init+0x634>
 803634e:	f8d4 309c 	ldr.w	r3, [r4, #156]	; 0x9c
 8036352:	f033 0318 	bics.w	r3, r3, #24
 8036356:	d004      	beq.n	8036362 <ETH_Init+0x256>
 8036358:	483e      	ldr	r0, [pc, #248]	; (8036454 <ETH_Init+0x348>)
 803635a:	f240 1143 	movw	r1, #323	; 0x143
 803635e:	f7ec fa95 	bl	802288c <assert_failed>
 8036362:	f8d4 30a0 	ldr.w	r3, [r4, #160]	; 0xa0
 8036366:	f033 0304 	bics.w	r3, r3, #4
 803636a:	f040 81e3 	bne.w	8036734 <ETH_Init+0x628>
 803636e:	f8d4 30a4 	ldr.w	r3, [r4, #164]	; 0xa4
 8036372:	f033 7300 	bics.w	r3, r3, #33554432	; 0x2000000
 8036376:	f040 81d7 	bne.w	8036728 <ETH_Init+0x61c>
 803637a:	f8d4 30a8 	ldr.w	r3, [r4, #168]	; 0xa8
 803637e:	f433 3380 	bics.w	r3, r3, #65536	; 0x10000
 8036382:	f040 81cb 	bne.w	803671c <ETH_Init+0x610>
 8036386:	f8d4 30ac 	ldr.w	r3, [r4, #172]	; 0xac
 803638a:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
 803638e:	f5b3 3f00 	cmp.w	r3, #131072	; 0x20000
 8036392:	d013      	beq.n	80363bc <ETH_Init+0x2b0>
 8036394:	f5b3 2f80 	cmp.w	r3, #262144	; 0x40000
 8036398:	d010      	beq.n	80363bc <ETH_Init+0x2b0>
 803639a:	f5b3 2f00 	cmp.w	r3, #524288	; 0x80000
 803639e:	d00d      	beq.n	80363bc <ETH_Init+0x2b0>
 80363a0:	f5b3 1f80 	cmp.w	r3, #1048576	; 0x100000
 80363a4:	d00a      	beq.n	80363bc <ETH_Init+0x2b0>
 80363a6:	f5b3 1f00 	cmp.w	r3, #2097152	; 0x200000
 80363aa:	d007      	beq.n	80363bc <ETH_Init+0x2b0>
 80363ac:	f5b3 0f80 	cmp.w	r3, #4194304	; 0x400000
 80363b0:	d004      	beq.n	80363bc <ETH_Init+0x2b0>
 80363b2:	4828      	ldr	r0, [pc, #160]	; (8036454 <ETH_Init+0x348>)
 80363b4:	f240 1147 	movw	r1, #327	; 0x147
 80363b8:	f7ec fa68 	bl	802288c <assert_failed>
 80363bc:	f8d4 30b0 	ldr.w	r3, [r4, #176]	; 0xb0
 80363c0:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
 80363c4:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 80363c8:	d013      	beq.n	80363f2 <ETH_Init+0x2e6>
 80363ca:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 80363ce:	d010      	beq.n	80363f2 <ETH_Init+0x2e6>
 80363d0:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 80363d4:	d00d      	beq.n	80363f2 <ETH_Init+0x2e6>
 80363d6:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 80363da:	d00a      	beq.n	80363f2 <ETH_Init+0x2e6>
 80363dc:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 80363e0:	d007      	beq.n	80363f2 <ETH_Init+0x2e6>
 80363e2:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 80363e6:	d004      	beq.n	80363f2 <ETH_Init+0x2e6>
 80363e8:	481a      	ldr	r0, [pc, #104]	; (8036454 <ETH_Init+0x348>)
 80363ea:	f44f 71a4 	mov.w	r1, #328	; 0x148
 80363ee:	f7ec fa4d 	bl	802288c <assert_failed>
 80363f2:	f8d4 30b4 	ldr.w	r3, [r4, #180]	; 0xb4
 80363f6:	2b1f      	cmp	r3, #31
 80363f8:	f200 814c 	bhi.w	8036694 <ETH_Init+0x588>
 80363fc:	f8d4 30b8 	ldr.w	r3, [r4, #184]	; 0xb8
 8036400:	f033 0202 	bics.w	r2, r3, #2
 8036404:	d00c      	beq.n	8036420 <ETH_Init+0x314>
 8036406:	f423 4200 	bic.w	r2, r3, #32768	; 0x8000
 803640a:	f5b2 4f80 	cmp.w	r2, #16384	; 0x4000
 803640e:	d007      	beq.n	8036420 <ETH_Init+0x314>
 8036410:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 8036414:	d004      	beq.n	8036420 <ETH_Init+0x314>
 8036416:	480f      	ldr	r0, [pc, #60]	; (8036454 <ETH_Init+0x348>)
 8036418:	f44f 71a5 	mov.w	r1, #330	; 0x14a
 803641c:	f7ec fa36 	bl	802288c <assert_failed>
 8036420:	4b0d      	ldr	r3, [pc, #52]	; (8036458 <ETH_Init+0x34c>)
 8036422:	a80a      	add	r0, sp, #40	; 0x28
 8036424:	691d      	ldr	r5, [r3, #16]
 8036426:	f005 fa69 	bl	803b8fc <RCC_GetClocksFreq>
 803642a:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 803642c:	4b0b      	ldr	r3, [pc, #44]	; (803645c <ETH_Init+0x350>)
 803642e:	490c      	ldr	r1, [pc, #48]	; (8036460 <ETH_Init+0x354>)
 8036430:	4413      	add	r3, r2
 8036432:	428b      	cmp	r3, r1
 8036434:	f025 051c 	bic.w	r5, r5, #28
 8036438:	f080 8105 	bcs.w	8036646 <ETH_Init+0x53a>
 803643c:	f045 0508 	orr.w	r5, r5, #8
 8036440:	4a05      	ldr	r2, [pc, #20]	; (8036458 <ETH_Init+0x34c>)
 8036442:	4908      	ldr	r1, [pc, #32]	; (8036464 <ETH_Init+0x358>)
 8036444:	6115      	str	r5, [r2, #16]
 8036446:	e9d4 3001 	ldrd	r3, r0, [r4, #4]
 803644a:	6815      	ldr	r5, [r2, #0]
 803644c:	4303      	orrs	r3, r0
 803644e:	4029      	ands	r1, r5
 8036450:	e00a      	b.n	8036468 <ETH_Init+0x35c>
 8036452:	bf00      	nop
 8036454:	080489f8 	.word	0x080489f8
 8036458:	40028000 	.word	0x40028000
 803645c:	feced300 	.word	0xfeced300
 8036460:	00e4e1c0 	.word	0x00e4e1c0
 8036464:	ff20810f 	.word	0xff20810f
 8036468:	e9d4 5003 	ldrd	r5, r0, [r4, #12]
 803646c:	430b      	orrs	r3, r1
 803646e:	432b      	orrs	r3, r5
 8036470:	e9d4 1505 	ldrd	r1, r5, [r4, #20]
 8036474:	4303      	orrs	r3, r0
 8036476:	430b      	orrs	r3, r1
 8036478:	e9d4 1007 	ldrd	r1, r0, [r4, #28]
 803647c:	432b      	orrs	r3, r5
 803647e:	430b      	orrs	r3, r1
 8036480:	e9d4 1509 	ldrd	r1, r5, [r4, #36]	; 0x24
 8036484:	4303      	orrs	r3, r0
 8036486:	430b      	orrs	r3, r1
 8036488:	e9d4 100b 	ldrd	r1, r0, [r4, #44]	; 0x2c
 803648c:	432b      	orrs	r3, r5
 803648e:	430b      	orrs	r3, r1
 8036490:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8036492:	4303      	orrs	r3, r0
 8036494:	430b      	orrs	r3, r1
 8036496:	6013      	str	r3, [r2, #0]
 8036498:	2000      	movs	r0, #0
 803649a:	f64f 73ff 	movw	r3, #65535	; 0xffff
 803649e:	6811      	ldr	r1, [r2, #0]
 80364a0:	9009      	str	r0, [sp, #36]	; 0x24
 80364a2:	9309      	str	r3, [sp, #36]	; 0x24
 80364a4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80364a6:	b12b      	cbz	r3, 80364b4 <ETH_Init+0x3a8>
 80364a8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80364aa:	3b01      	subs	r3, #1
 80364ac:	9309      	str	r3, [sp, #36]	; 0x24
 80364ae:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80364b0:	2b00      	cmp	r3, #0
 80364b2:	d1f9      	bne.n	80364a8 <ETH_Init+0x39c>
 80364b4:	4aae      	ldr	r2, [pc, #696]	; (8036770 <ETH_Init+0x664>)
 80364b6:	6011      	str	r1, [r2, #0]
 80364b8:	e9d4 350e 	ldrd	r3, r5, [r4, #56]	; 0x38
 80364bc:	e9d4 1010 	ldrd	r1, r0, [r4, #64]	; 0x40
 80364c0:	432b      	orrs	r3, r5
 80364c2:	430b      	orrs	r3, r1
 80364c4:	e9d4 1512 	ldrd	r1, r5, [r4, #72]	; 0x48
 80364c8:	4303      	orrs	r3, r0
 80364ca:	430b      	orrs	r3, r1
 80364cc:	e9d4 0114 	ldrd	r0, r1, [r4, #80]	; 0x50
 80364d0:	432b      	orrs	r3, r5
 80364d2:	4303      	orrs	r3, r0
 80364d4:	430b      	orrs	r3, r1
 80364d6:	6053      	str	r3, [r2, #4]
 80364d8:	2000      	movs	r0, #0
 80364da:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80364de:	6851      	ldr	r1, [r2, #4]
 80364e0:	9008      	str	r0, [sp, #32]
 80364e2:	9308      	str	r3, [sp, #32]
 80364e4:	9b08      	ldr	r3, [sp, #32]
 80364e6:	b12b      	cbz	r3, 80364f4 <ETH_Init+0x3e8>
 80364e8:	9b08      	ldr	r3, [sp, #32]
 80364ea:	3b01      	subs	r3, #1
 80364ec:	9308      	str	r3, [sp, #32]
 80364ee:	9b08      	ldr	r3, [sp, #32]
 80364f0:	2b00      	cmp	r3, #0
 80364f2:	d1f9      	bne.n	80364e8 <ETH_Init+0x3dc>
 80364f4:	4a9e      	ldr	r2, [pc, #632]	; (8036770 <ETH_Init+0x664>)
 80364f6:	6051      	str	r1, [r2, #4]
 80364f8:	6da3      	ldr	r3, [r4, #88]	; 0x58
 80364fa:	6093      	str	r3, [r2, #8]
 80364fc:	6de3      	ldr	r3, [r4, #92]	; 0x5c
 80364fe:	60d3      	str	r3, [r2, #12]
 8036500:	e9d4 3019 	ldrd	r3, r0, [r4, #100]	; 0x64
 8036504:	6991      	ldr	r1, [r2, #24]
 8036506:	f64f 7541 	movw	r5, #65345	; 0xff41
 803650a:	4029      	ands	r1, r5
 803650c:	4303      	orrs	r3, r0
 803650e:	e9d4 501b 	ldrd	r5, r0, [r4, #108]	; 0x6c
 8036512:	430b      	orrs	r3, r1
 8036514:	432b      	orrs	r3, r5
 8036516:	6f65      	ldr	r5, [r4, #116]	; 0x74
 8036518:	6e21      	ldr	r1, [r4, #96]	; 0x60
 803651a:	4303      	orrs	r3, r0
 803651c:	432b      	orrs	r3, r5
 803651e:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8036522:	6193      	str	r3, [r2, #24]
 8036524:	2100      	movs	r1, #0
 8036526:	f64f 73ff 	movw	r3, #65535	; 0xffff
 803652a:	6992      	ldr	r2, [r2, #24]
 803652c:	9107      	str	r1, [sp, #28]
 803652e:	9307      	str	r3, [sp, #28]
 8036530:	9b07      	ldr	r3, [sp, #28]
 8036532:	b12b      	cbz	r3, 8036540 <ETH_Init+0x434>
 8036534:	9b07      	ldr	r3, [sp, #28]
 8036536:	3b01      	subs	r3, #1
 8036538:	9307      	str	r3, [sp, #28]
 803653a:	9b07      	ldr	r3, [sp, #28]
 803653c:	2b00      	cmp	r3, #0
 803653e:	d1f9      	bne.n	8036534 <ETH_Init+0x428>
 8036540:	4b8b      	ldr	r3, [pc, #556]	; (8036770 <ETH_Init+0x664>)
 8036542:	619a      	str	r2, [r3, #24]
 8036544:	e9d4 211e 	ldrd	r2, r1, [r4, #120]	; 0x78
 8036548:	430a      	orrs	r2, r1
 803654a:	61da      	str	r2, [r3, #28]
 803654c:	2000      	movs	r0, #0
 803654e:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8036552:	69d9      	ldr	r1, [r3, #28]
 8036554:	9006      	str	r0, [sp, #24]
 8036556:	9206      	str	r2, [sp, #24]
 8036558:	9b06      	ldr	r3, [sp, #24]
 803655a:	b12b      	cbz	r3, 8036568 <ETH_Init+0x45c>
 803655c:	9b06      	ldr	r3, [sp, #24]
 803655e:	3b01      	subs	r3, #1
 8036560:	9306      	str	r3, [sp, #24]
 8036562:	9b06      	ldr	r3, [sp, #24]
 8036564:	2b00      	cmp	r3, #0
 8036566:	d1f9      	bne.n	803655c <ETH_Init+0x450>
 8036568:	4a81      	ldr	r2, [pc, #516]	; (8036770 <ETH_Init+0x664>)
 803656a:	4882      	ldr	r0, [pc, #520]	; (8036774 <ETH_Init+0x668>)
 803656c:	61d1      	str	r1, [r2, #28]
 803656e:	f241 0118 	movw	r1, #4120	; 0x1018
 8036572:	f8d4 5084 	ldr.w	r5, [r4, #132]	; 0x84
 8036576:	5856      	ldr	r6, [r2, r1]
 8036578:	f8d4 3080 	ldr.w	r3, [r4, #128]	; 0x80
 803657c:	4030      	ands	r0, r6
 803657e:	432b      	orrs	r3, r5
 8036580:	e9d4 6522 	ldrd	r6, r5, [r4, #136]	; 0x88
 8036584:	4303      	orrs	r3, r0
 8036586:	4333      	orrs	r3, r6
 8036588:	e9d4 6024 	ldrd	r6, r0, [r4, #144]	; 0x90
 803658c:	432b      	orrs	r3, r5
 803658e:	4333      	orrs	r3, r6
 8036590:	e9d4 6526 	ldrd	r6, r5, [r4, #152]	; 0x98
 8036594:	4303      	orrs	r3, r0
 8036596:	4333      	orrs	r3, r6
 8036598:	f8d4 00a0 	ldr.w	r0, [r4, #160]	; 0xa0
 803659c:	432b      	orrs	r3, r5
 803659e:	4303      	orrs	r3, r0
 80365a0:	5053      	str	r3, [r2, r1]
 80365a2:	2000      	movs	r0, #0
 80365a4:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80365a8:	5851      	ldr	r1, [r2, r1]
 80365aa:	9005      	str	r0, [sp, #20]
 80365ac:	9305      	str	r3, [sp, #20]
 80365ae:	9b05      	ldr	r3, [sp, #20]
 80365b0:	b12b      	cbz	r3, 80365be <ETH_Init+0x4b2>
 80365b2:	9b05      	ldr	r3, [sp, #20]
 80365b4:	3b01      	subs	r3, #1
 80365b6:	9305      	str	r3, [sp, #20]
 80365b8:	9b05      	ldr	r3, [sp, #20]
 80365ba:	2b00      	cmp	r3, #0
 80365bc:	d1f9      	bne.n	80365b2 <ETH_Init+0x4a6>
 80365be:	4d6c      	ldr	r5, [pc, #432]	; (8036770 <ETH_Init+0x664>)
 80365c0:	4a6d      	ldr	r2, [pc, #436]	; (8036778 <ETH_Init+0x66c>)
 80365c2:	f241 0318 	movw	r3, #4120	; 0x1018
 80365c6:	2000      	movs	r0, #0
 80365c8:	50e9      	str	r1, [r5, r3]
 80365ca:	e9d4 3529 	ldrd	r3, r5, [r4, #164]	; 0xa4
 80365ce:	f8d4 10b4 	ldr.w	r1, [r4, #180]	; 0xb4
 80365d2:	f8d4 60ac 	ldr.w	r6, [r4, #172]	; 0xac
 80365d6:	432b      	orrs	r3, r5
 80365d8:	ea43 0381 	orr.w	r3, r3, r1, lsl #2
 80365dc:	f8d4 50b0 	ldr.w	r5, [r4, #176]	; 0xb0
 80365e0:	f8d4 10b8 	ldr.w	r1, [r4, #184]	; 0xb8
 80365e4:	4333      	orrs	r3, r6
 80365e6:	432b      	orrs	r3, r5
 80365e8:	430b      	orrs	r3, r1
 80365ea:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 80365ee:	6013      	str	r3, [r2, #0]
 80365f0:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80365f4:	6812      	ldr	r2, [r2, #0]
 80365f6:	9004      	str	r0, [sp, #16]
 80365f8:	9304      	str	r3, [sp, #16]
 80365fa:	9b04      	ldr	r3, [sp, #16]
 80365fc:	b12b      	cbz	r3, 803660a <ETH_Init+0x4fe>
 80365fe:	9b04      	ldr	r3, [sp, #16]
 8036600:	3b01      	subs	r3, #1
 8036602:	9304      	str	r3, [sp, #16]
 8036604:	9b04      	ldr	r3, [sp, #16]
 8036606:	2b00      	cmp	r3, #0
 8036608:	d1f9      	bne.n	80365fe <ETH_Init+0x4f2>
 803660a:	4b5b      	ldr	r3, [pc, #364]	; (8036778 <ETH_Init+0x66c>)
 803660c:	601a      	str	r2, [r3, #0]
 803660e:	681a      	ldr	r2, [r3, #0]
 8036610:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 8036614:	601a      	str	r2, [r3, #0]
 8036616:	2000      	movs	r0, #0
 8036618:	f64f 71ff 	movw	r1, #65535	; 0xffff
 803661c:	681a      	ldr	r2, [r3, #0]
 803661e:	9003      	str	r0, [sp, #12]
 8036620:	9103      	str	r1, [sp, #12]
 8036622:	9b03      	ldr	r3, [sp, #12]
 8036624:	b12b      	cbz	r3, 8036632 <ETH_Init+0x526>
 8036626:	9b03      	ldr	r3, [sp, #12]
 8036628:	3b01      	subs	r3, #1
 803662a:	9303      	str	r3, [sp, #12]
 803662c:	9b03      	ldr	r3, [sp, #12]
 803662e:	2b00      	cmp	r3, #0
 8036630:	d1f9      	bne.n	8036626 <ETH_Init+0x51a>
 8036632:	4b51      	ldr	r3, [pc, #324]	; (8036778 <ETH_Init+0x66c>)
 8036634:	601a      	str	r2, [r3, #0]
 8036636:	9802      	ldr	r0, [sp, #8]
 8036638:	f1a0 0001 	sub.w	r0, r0, #1
 803663c:	fab0 f080 	clz	r0, r0
 8036640:	0940      	lsrs	r0, r0, #5
 8036642:	b00e      	add	sp, #56	; 0x38
 8036644:	bd70      	pop	{r4, r5, r6, pc}
 8036646:	4b4d      	ldr	r3, [pc, #308]	; (803677c <ETH_Init+0x670>)
 8036648:	494d      	ldr	r1, [pc, #308]	; (8036780 <ETH_Init+0x674>)
 803664a:	4413      	add	r3, r2
 803664c:	428b      	cmp	r3, r1
 803664e:	d802      	bhi.n	8036656 <ETH_Init+0x54a>
 8036650:	f045 050c 	orr.w	r5, r5, #12
 8036654:	e6f4      	b.n	8036440 <ETH_Init+0x334>
 8036656:	4b4b      	ldr	r3, [pc, #300]	; (8036784 <ETH_Init+0x678>)
 8036658:	494b      	ldr	r1, [pc, #300]	; (8036788 <ETH_Init+0x67c>)
 803665a:	4413      	add	r3, r2
 803665c:	428b      	cmp	r3, r1
 803665e:	f4ff aeef 	bcc.w	8036440 <ETH_Init+0x334>
 8036662:	4b4a      	ldr	r3, [pc, #296]	; (803678c <ETH_Init+0x680>)
 8036664:	494a      	ldr	r1, [pc, #296]	; (8036790 <ETH_Init+0x684>)
 8036666:	4413      	add	r3, r2
 8036668:	428b      	cmp	r3, r1
 803666a:	bf94      	ite	ls
 803666c:	f045 0504 	orrls.w	r5, r5, #4
 8036670:	f045 0510 	orrhi.w	r5, r5, #16
 8036674:	e6e4      	b.n	8036440 <ETH_Init+0x334>
 8036676:	2b10      	cmp	r3, #16
 8036678:	f43f adf7 	beq.w	803626a <ETH_Init+0x15e>
 803667c:	4845      	ldr	r0, [pc, #276]	; (8036794 <ETH_Init+0x688>)
 803667e:	f240 1131 	movw	r1, #305	; 0x131
 8036682:	f7ec f903 	bl	802288c <assert_failed>
 8036686:	e5f0      	b.n	803626a <ETH_Init+0x15e>
 8036688:	4842      	ldr	r0, [pc, #264]	; (8036794 <ETH_Init+0x688>)
 803668a:	f44f 719d 	mov.w	r1, #314	; 0x13a
 803668e:	f7ec f8fd 	bl	802288c <assert_failed>
 8036692:	e623      	b.n	80362dc <ETH_Init+0x1d0>
 8036694:	483f      	ldr	r0, [pc, #252]	; (8036794 <ETH_Init+0x688>)
 8036696:	f240 1149 	movw	r1, #329	; 0x149
 803669a:	f7ec f8f7 	bl	802288c <assert_failed>
 803669e:	e6ad      	b.n	80363fc <ETH_Init+0x2f0>
 80366a0:	483c      	ldr	r0, [pc, #240]	; (8036794 <ETH_Init+0x688>)
 80366a2:	f240 1133 	movw	r1, #307	; 0x133
 80366a6:	f7ec f8f1 	bl	802288c <assert_failed>
 80366aa:	e5ec      	b.n	8036286 <ETH_Init+0x17a>
 80366ac:	4839      	ldr	r0, [pc, #228]	; (8036794 <ETH_Init+0x688>)
 80366ae:	f240 112b 	movw	r1, #299	; 0x12b
 80366b2:	f7ec f8eb 	bl	802288c <assert_failed>
 80366b6:	e5a1      	b.n	80361fc <ETH_Init+0xf0>
 80366b8:	4836      	ldr	r0, [pc, #216]	; (8036794 <ETH_Init+0x688>)
 80366ba:	f44f 7192 	mov.w	r1, #292	; 0x124
 80366be:	f7ec f8e5 	bl	802288c <assert_failed>
 80366c2:	6a23      	ldr	r3, [r4, #32]
 80366c4:	f433 6300 	bics.w	r3, r3, #2048	; 0x800
 80366c8:	f43f ad72 	beq.w	80361b0 <ETH_Init+0xa4>
 80366cc:	4831      	ldr	r0, [pc, #196]	; (8036794 <ETH_Init+0x688>)
 80366ce:	f240 1125 	movw	r1, #293	; 0x125
 80366d2:	f7ec f8db 	bl	802288c <assert_failed>
 80366d6:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80366d8:	f433 6380 	bics.w	r3, r3, #1024	; 0x400
 80366dc:	f43f ad6d 	beq.w	80361ba <ETH_Init+0xae>
 80366e0:	482c      	ldr	r0, [pc, #176]	; (8036794 <ETH_Init+0x688>)
 80366e2:	f44f 7193 	mov.w	r1, #294	; 0x126
 80366e6:	f7ec f8d1 	bl	802288c <assert_failed>
 80366ea:	e566      	b.n	80361ba <ETH_Init+0xae>
 80366ec:	4829      	ldr	r0, [pc, #164]	; (8036794 <ETH_Init+0x688>)
 80366ee:	f240 113f 	movw	r1, #319	; 0x13f
 80366f2:	f7ec f8cb 	bl	802288c <assert_failed>
 80366f6:	e611      	b.n	803631c <ETH_Init+0x210>
 80366f8:	4826      	ldr	r0, [pc, #152]	; (8036794 <ETH_Init+0x688>)
 80366fa:	f44f 7195 	mov.w	r1, #298	; 0x12a
 80366fe:	f7ec f8c5 	bl	802288c <assert_failed>
 8036702:	e576      	b.n	80361f2 <ETH_Init+0xe6>
 8036704:	4823      	ldr	r0, [pc, #140]	; (8036794 <ETH_Init+0x688>)
 8036706:	f44f 7194 	mov.w	r1, #296	; 0x128
 803670a:	f7ec f8bf 	bl	802288c <assert_failed>
 803670e:	e562      	b.n	80361d6 <ETH_Init+0xca>
 8036710:	4820      	ldr	r0, [pc, #128]	; (8036794 <ETH_Init+0x688>)
 8036712:	f240 113d 	movw	r1, #317	; 0x13d
 8036716:	f7ec f8b9 	bl	802288c <assert_failed>
 803671a:	e5ef      	b.n	80362fc <ETH_Init+0x1f0>
 803671c:	481d      	ldr	r0, [pc, #116]	; (8036794 <ETH_Init+0x688>)
 803671e:	f44f 71a3 	mov.w	r1, #326	; 0x146
 8036722:	f7ec f8b3 	bl	802288c <assert_failed>
 8036726:	e62e      	b.n	8036386 <ETH_Init+0x27a>
 8036728:	481a      	ldr	r0, [pc, #104]	; (8036794 <ETH_Init+0x688>)
 803672a:	f240 1145 	movw	r1, #325	; 0x145
 803672e:	f7ec f8ad 	bl	802288c <assert_failed>
 8036732:	e622      	b.n	803637a <ETH_Init+0x26e>
 8036734:	4817      	ldr	r0, [pc, #92]	; (8036794 <ETH_Init+0x688>)
 8036736:	f44f 71a2 	mov.w	r1, #324	; 0x144
 803673a:	f7ec f8a7 	bl	802288c <assert_failed>
 803673e:	e616      	b.n	803636e <ETH_Init+0x262>
 8036740:	4814      	ldr	r0, [pc, #80]	; (8036794 <ETH_Init+0x688>)
 8036742:	f44f 71a1 	mov.w	r1, #322	; 0x142
 8036746:	f7ec f8a1 	bl	802288c <assert_failed>
 803674a:	e600      	b.n	803634e <ETH_Init+0x242>
 803674c:	4811      	ldr	r0, [pc, #68]	; (8036794 <ETH_Init+0x688>)
 803674e:	f240 1141 	movw	r1, #321	; 0x141
 8036752:	f7ec f89b 	bl	802288c <assert_failed>
 8036756:	e5f4      	b.n	8036342 <ETH_Init+0x236>
 8036758:	480e      	ldr	r0, [pc, #56]	; (8036794 <ETH_Init+0x688>)
 803675a:	f240 1139 	movw	r1, #313	; 0x139
 803675e:	f7ec f895 	bl	802288c <assert_failed>
 8036762:	e5b6      	b.n	80362d2 <ETH_Init+0x1c6>
 8036764:	480b      	ldr	r0, [pc, #44]	; (8036794 <ETH_Init+0x688>)
 8036766:	f44f 719c 	mov.w	r1, #312	; 0x138
 803676a:	f7ec f88f 	bl	802288c <assert_failed>
 803676e:	e5ab      	b.n	80362c8 <ETH_Init+0x1bc>
 8036770:	40028000 	.word	0x40028000
 8036774:	f8de3f23 	.word	0xf8de3f23
 8036778:	40029000 	.word	0x40029000
 803677c:	fde9f140 	.word	0xfde9f140
 8036780:	017d783f 	.word	0x017d783f
 8036784:	fc6c7900 	.word	0xfc6c7900
 8036788:	02625a00 	.word	0x02625a00
 803678c:	fa0a1f00 	.word	0xfa0a1f00
 8036790:	02faf07f 	.word	0x02faf07f
 8036794:	080489f8 	.word	0x080489f8
 8036798:	480b      	ldr	r0, [pc, #44]	; (80367c8 <ETH_Init+0x6bc>)
 803679a:	f240 1137 	movw	r1, #311	; 0x137
 803679e:	f7ec f875 	bl	802288c <assert_failed>
 80367a2:	e58c      	b.n	80362be <ETH_Init+0x1b2>
 80367a4:	4808      	ldr	r0, [pc, #32]	; (80367c8 <ETH_Init+0x6bc>)
 80367a6:	f44f 719b 	mov.w	r1, #310	; 0x136
 80367aa:	f7ec f86f 	bl	802288c <assert_failed>
 80367ae:	e581      	b.n	80362b4 <ETH_Init+0x1a8>
 80367b0:	4805      	ldr	r0, [pc, #20]	; (80367c8 <ETH_Init+0x6bc>)
 80367b2:	f44f 7196 	mov.w	r1, #300	; 0x12c
 80367b6:	f7ec f869 	bl	802288c <assert_failed>
 80367ba:	e527      	b.n	803620c <ETH_Init+0x100>
 80367bc:	4802      	ldr	r0, [pc, #8]	; (80367c8 <ETH_Init+0x6bc>)
 80367be:	f44f 7199 	mov.w	r1, #306	; 0x132
 80367c2:	f7ec f863 	bl	802288c <assert_failed>
 80367c6:	e559      	b.n	803627c <ETH_Init+0x170>
 80367c8:	080489f8 	.word	0x080489f8

080367cc <ETH_MACTransmissionCmd>:
 80367cc:	b500      	push	{lr}
 80367ce:	b083      	sub	sp, #12
 80367d0:	2300      	movs	r3, #0
 80367d2:	2801      	cmp	r0, #1
 80367d4:	9300      	str	r3, [sp, #0]
 80367d6:	d81b      	bhi.n	8036810 <ETH_MACTransmissionCmd+0x44>
 80367d8:	b9f8      	cbnz	r0, 803681a <ETH_MACTransmissionCmd+0x4e>
 80367da:	4a13      	ldr	r2, [pc, #76]	; (8036828 <ETH_MACTransmissionCmd+0x5c>)
 80367dc:	6813      	ldr	r3, [r2, #0]
 80367de:	f023 0308 	bic.w	r3, r3, #8
 80367e2:	6013      	str	r3, [r2, #0]
 80367e4:	4b10      	ldr	r3, [pc, #64]	; (8036828 <ETH_MACTransmissionCmd+0x5c>)
 80367e6:	681b      	ldr	r3, [r3, #0]
 80367e8:	9300      	str	r3, [sp, #0]
 80367ea:	2200      	movs	r2, #0
 80367ec:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80367f0:	9201      	str	r2, [sp, #4]
 80367f2:	9301      	str	r3, [sp, #4]
 80367f4:	9b01      	ldr	r3, [sp, #4]
 80367f6:	b12b      	cbz	r3, 8036804 <ETH_MACTransmissionCmd+0x38>
 80367f8:	9b01      	ldr	r3, [sp, #4]
 80367fa:	3b01      	subs	r3, #1
 80367fc:	9301      	str	r3, [sp, #4]
 80367fe:	9b01      	ldr	r3, [sp, #4]
 8036800:	2b00      	cmp	r3, #0
 8036802:	d1f9      	bne.n	80367f8 <ETH_MACTransmissionCmd+0x2c>
 8036804:	4b08      	ldr	r3, [pc, #32]	; (8036828 <ETH_MACTransmissionCmd+0x5c>)
 8036806:	9a00      	ldr	r2, [sp, #0]
 8036808:	601a      	str	r2, [r3, #0]
 803680a:	b003      	add	sp, #12
 803680c:	f85d fb04 	ldr.w	pc, [sp], #4
 8036810:	4806      	ldr	r0, [pc, #24]	; (803682c <ETH_MACTransmissionCmd+0x60>)
 8036812:	f44f 7134 	mov.w	r1, #720	; 0x2d0
 8036816:	f7ec f839 	bl	802288c <assert_failed>
 803681a:	4a03      	ldr	r2, [pc, #12]	; (8036828 <ETH_MACTransmissionCmd+0x5c>)
 803681c:	6813      	ldr	r3, [r2, #0]
 803681e:	f043 0308 	orr.w	r3, r3, #8
 8036822:	6013      	str	r3, [r2, #0]
 8036824:	e7de      	b.n	80367e4 <ETH_MACTransmissionCmd+0x18>
 8036826:	bf00      	nop
 8036828:	40028000 	.word	0x40028000
 803682c:	080489f8 	.word	0x080489f8

08036830 <ETH_MACReceptionCmd>:
 8036830:	b500      	push	{lr}
 8036832:	b083      	sub	sp, #12
 8036834:	2300      	movs	r3, #0
 8036836:	2801      	cmp	r0, #1
 8036838:	9300      	str	r3, [sp, #0]
 803683a:	d81b      	bhi.n	8036874 <ETH_MACReceptionCmd+0x44>
 803683c:	b9f8      	cbnz	r0, 803687e <ETH_MACReceptionCmd+0x4e>
 803683e:	4a13      	ldr	r2, [pc, #76]	; (803688c <ETH_MACReceptionCmd+0x5c>)
 8036840:	6813      	ldr	r3, [r2, #0]
 8036842:	f023 0304 	bic.w	r3, r3, #4
 8036846:	6013      	str	r3, [r2, #0]
 8036848:	4b10      	ldr	r3, [pc, #64]	; (803688c <ETH_MACReceptionCmd+0x5c>)
 803684a:	681b      	ldr	r3, [r3, #0]
 803684c:	9300      	str	r3, [sp, #0]
 803684e:	2200      	movs	r2, #0
 8036850:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8036854:	9201      	str	r2, [sp, #4]
 8036856:	9301      	str	r3, [sp, #4]
 8036858:	9b01      	ldr	r3, [sp, #4]
 803685a:	b12b      	cbz	r3, 8036868 <ETH_MACReceptionCmd+0x38>
 803685c:	9b01      	ldr	r3, [sp, #4]
 803685e:	3b01      	subs	r3, #1
 8036860:	9301      	str	r3, [sp, #4]
 8036862:	9b01      	ldr	r3, [sp, #4]
 8036864:	2b00      	cmp	r3, #0
 8036866:	d1f9      	bne.n	803685c <ETH_MACReceptionCmd+0x2c>
 8036868:	4b08      	ldr	r3, [pc, #32]	; (803688c <ETH_MACReceptionCmd+0x5c>)
 803686a:	9a00      	ldr	r2, [sp, #0]
 803686c:	601a      	str	r2, [r3, #0]
 803686e:	b003      	add	sp, #12
 8036870:	f85d fb04 	ldr.w	pc, [sp], #4
 8036874:	4806      	ldr	r0, [pc, #24]	; (8036890 <ETH_MACReceptionCmd+0x60>)
 8036876:	f240 21ee 	movw	r1, #750	; 0x2ee
 803687a:	f7ec f807 	bl	802288c <assert_failed>
 803687e:	4a03      	ldr	r2, [pc, #12]	; (803688c <ETH_MACReceptionCmd+0x5c>)
 8036880:	6813      	ldr	r3, [r2, #0]
 8036882:	f043 0304 	orr.w	r3, r3, #4
 8036886:	6013      	str	r3, [r2, #0]
 8036888:	e7de      	b.n	8036848 <ETH_MACReceptionCmd+0x18>
 803688a:	bf00      	nop
 803688c:	40028000 	.word	0x40028000
 8036890:	080489f8 	.word	0x080489f8

08036894 <ETH_MACAddressConfig>:
 8036894:	b538      	push	{r3, r4, r5, lr}
 8036896:	f030 0318 	bics.w	r3, r0, #24
 803689a:	4604      	mov	r4, r0
 803689c:	460d      	mov	r5, r1
 803689e:	d004      	beq.n	80368aa <ETH_MACAddressConfig+0x16>
 80368a0:	4805      	ldr	r0, [pc, #20]	; (80368b8 <ETH_MACAddressConfig+0x24>)
 80368a2:	f240 31aa 	movw	r1, #938	; 0x3aa
 80368a6:	f7eb fff1 	bl	802288c <assert_failed>
 80368aa:	4b04      	ldr	r3, [pc, #16]	; (80368bc <ETH_MACAddressConfig+0x28>)
 80368ac:	88aa      	ldrh	r2, [r5, #4]
 80368ae:	50e2      	str	r2, [r4, r3]
 80368b0:	3304      	adds	r3, #4
 80368b2:	682a      	ldr	r2, [r5, #0]
 80368b4:	50e2      	str	r2, [r4, r3]
 80368b6:	bd38      	pop	{r3, r4, r5, pc}
 80368b8:	080489f8 	.word	0x080489f8
 80368bc:	40028040 	.word	0x40028040

080368c0 <ETH_SoftwareReset>:
 80368c0:	4a02      	ldr	r2, [pc, #8]	; (80368cc <ETH_SoftwareReset+0xc>)
 80368c2:	6813      	ldr	r3, [r2, #0]
 80368c4:	f043 0301 	orr.w	r3, r3, #1
 80368c8:	6013      	str	r3, [r2, #0]
 80368ca:	4770      	bx	lr
 80368cc:	40029000 	.word	0x40029000

080368d0 <ETH_GetSoftwareResetStatus>:
 80368d0:	4b02      	ldr	r3, [pc, #8]	; (80368dc <ETH_GetSoftwareResetStatus+0xc>)
 80368d2:	6818      	ldr	r0, [r3, #0]
 80368d4:	f000 0001 	and.w	r0, r0, #1
 80368d8:	4770      	bx	lr
 80368da:	bf00      	nop
 80368dc:	40029000 	.word	0x40029000

080368e0 <ETH_DMAITConfig>:
 80368e0:	b538      	push	{r3, r4, r5, lr}
 80368e2:	4b12      	ldr	r3, [pc, #72]	; (803692c <ETH_DMAITConfig+0x4c>)
 80368e4:	4003      	ands	r3, r0
 80368e6:	4604      	mov	r4, r0
 80368e8:	460d      	mov	r5, r1
 80368ea:	b95b      	cbnz	r3, 8036904 <ETH_DMAITConfig+0x24>
 80368ec:	b150      	cbz	r0, 8036904 <ETH_DMAITConfig+0x24>
 80368ee:	2d01      	cmp	r5, #1
 80368f0:	d80f      	bhi.n	8036912 <ETH_DMAITConfig+0x32>
 80368f2:	b99d      	cbnz	r5, 803691c <ETH_DMAITConfig+0x3c>
 80368f4:	4a0e      	ldr	r2, [pc, #56]	; (8036930 <ETH_DMAITConfig+0x50>)
 80368f6:	f241 031c 	movw	r3, #4124	; 0x101c
 80368fa:	58d0      	ldr	r0, [r2, r3]
 80368fc:	ea20 0404 	bic.w	r4, r0, r4
 8036900:	50d4      	str	r4, [r2, r3]
 8036902:	bd38      	pop	{r3, r4, r5, pc}
 8036904:	480b      	ldr	r0, [pc, #44]	; (8036934 <ETH_DMAITConfig+0x54>)
 8036906:	f240 71bd 	movw	r1, #1981	; 0x7bd
 803690a:	f7eb ffbf 	bl	802288c <assert_failed>
 803690e:	2d01      	cmp	r5, #1
 8036910:	d9ef      	bls.n	80368f2 <ETH_DMAITConfig+0x12>
 8036912:	4808      	ldr	r0, [pc, #32]	; (8036934 <ETH_DMAITConfig+0x54>)
 8036914:	f240 71be 	movw	r1, #1982	; 0x7be
 8036918:	f7eb ffb8 	bl	802288c <assert_failed>
 803691c:	4a04      	ldr	r2, [pc, #16]	; (8036930 <ETH_DMAITConfig+0x50>)
 803691e:	f241 031c 	movw	r3, #4124	; 0x101c
 8036922:	58d0      	ldr	r0, [r2, r3]
 8036924:	4304      	orrs	r4, r0
 8036926:	50d4      	str	r4, [r2, r3]
 8036928:	bd38      	pop	{r3, r4, r5, pc}
 803692a:	bf00      	nop
 803692c:	fffe1800 	.word	0xfffe1800
 8036930:	40028000 	.word	0x40028000
 8036934:	080489f8 	.word	0x080489f8

08036938 <ETH_FlushTransmitFIFO>:
 8036938:	b410      	push	{r4}
 803693a:	b083      	sub	sp, #12
 803693c:	4a0f      	ldr	r2, [pc, #60]	; (803697c <ETH_FlushTransmitFIFO+0x44>)
 803693e:	f241 0318 	movw	r3, #4120	; 0x1018
 8036942:	2000      	movs	r0, #0
 8036944:	9000      	str	r0, [sp, #0]
 8036946:	58d1      	ldr	r1, [r2, r3]
 8036948:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 803694c:	50d1      	str	r1, [r2, r3]
 803694e:	f64f 74ff 	movw	r4, #65535	; 0xffff
 8036952:	58d3      	ldr	r3, [r2, r3]
 8036954:	9300      	str	r3, [sp, #0]
 8036956:	9001      	str	r0, [sp, #4]
 8036958:	9401      	str	r4, [sp, #4]
 803695a:	9b01      	ldr	r3, [sp, #4]
 803695c:	b12b      	cbz	r3, 803696a <ETH_FlushTransmitFIFO+0x32>
 803695e:	9b01      	ldr	r3, [sp, #4]
 8036960:	3b01      	subs	r3, #1
 8036962:	9301      	str	r3, [sp, #4]
 8036964:	9b01      	ldr	r3, [sp, #4]
 8036966:	2b00      	cmp	r3, #0
 8036968:	d1f9      	bne.n	803695e <ETH_FlushTransmitFIFO+0x26>
 803696a:	4a04      	ldr	r2, [pc, #16]	; (803697c <ETH_FlushTransmitFIFO+0x44>)
 803696c:	9900      	ldr	r1, [sp, #0]
 803696e:	f241 0318 	movw	r3, #4120	; 0x1018
 8036972:	50d1      	str	r1, [r2, r3]
 8036974:	b003      	add	sp, #12
 8036976:	f85d 4b04 	ldr.w	r4, [sp], #4
 803697a:	4770      	bx	lr
 803697c:	40028000 	.word	0x40028000

08036980 <ETH_Start>:
 8036980:	b508      	push	{r3, lr}
 8036982:	2001      	movs	r0, #1
 8036984:	f7ff ff22 	bl	80367cc <ETH_MACTransmissionCmd>
 8036988:	2001      	movs	r0, #1
 803698a:	f7ff ff51 	bl	8036830 <ETH_MACReceptionCmd>
 803698e:	f7ff ffd3 	bl	8036938 <ETH_FlushTransmitFIFO>
 8036992:	4a06      	ldr	r2, [pc, #24]	; (80369ac <ETH_Start+0x2c>)
 8036994:	f241 0318 	movw	r3, #4120	; 0x1018
 8036998:	58d1      	ldr	r1, [r2, r3]
 803699a:	f441 5100 	orr.w	r1, r1, #8192	; 0x2000
 803699e:	50d1      	str	r1, [r2, r3]
 80369a0:	58d1      	ldr	r1, [r2, r3]
 80369a2:	f041 0102 	orr.w	r1, r1, #2
 80369a6:	50d1      	str	r1, [r2, r3]
 80369a8:	bd08      	pop	{r3, pc}
 80369aa:	bf00      	nop
 80369ac:	40028000 	.word	0x40028000

080369b0 <ETH_DMATransmissionCmd>:
 80369b0:	2801      	cmp	r0, #1
 80369b2:	b508      	push	{r3, lr}
 80369b4:	d808      	bhi.n	80369c8 <ETH_DMATransmissionCmd+0x18>
 80369b6:	b960      	cbnz	r0, 80369d2 <ETH_DMATransmissionCmd+0x22>
 80369b8:	490a      	ldr	r1, [pc, #40]	; (80369e4 <ETH_DMATransmissionCmd+0x34>)
 80369ba:	f241 0218 	movw	r2, #4120	; 0x1018
 80369be:	588b      	ldr	r3, [r1, r2]
 80369c0:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 80369c4:	508b      	str	r3, [r1, r2]
 80369c6:	bd08      	pop	{r3, pc}
 80369c8:	4807      	ldr	r0, [pc, #28]	; (80369e8 <ETH_DMATransmissionCmd+0x38>)
 80369ca:	f640 0162 	movw	r1, #2146	; 0x862
 80369ce:	f7eb ff5d 	bl	802288c <assert_failed>
 80369d2:	4904      	ldr	r1, [pc, #16]	; (80369e4 <ETH_DMATransmissionCmd+0x34>)
 80369d4:	f241 0218 	movw	r2, #4120	; 0x1018
 80369d8:	588b      	ldr	r3, [r1, r2]
 80369da:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 80369de:	508b      	str	r3, [r1, r2]
 80369e0:	bd08      	pop	{r3, pc}
 80369e2:	bf00      	nop
 80369e4:	40028000 	.word	0x40028000
 80369e8:	080489f8 	.word	0x080489f8

080369ec <ETH_DMAReceptionCmd>:
 80369ec:	2801      	cmp	r0, #1
 80369ee:	b508      	push	{r3, lr}
 80369f0:	d808      	bhi.n	8036a04 <ETH_DMAReceptionCmd+0x18>
 80369f2:	b960      	cbnz	r0, 8036a0e <ETH_DMAReceptionCmd+0x22>
 80369f4:	490a      	ldr	r1, [pc, #40]	; (8036a20 <ETH_DMAReceptionCmd+0x34>)
 80369f6:	f241 0218 	movw	r2, #4120	; 0x1018
 80369fa:	588b      	ldr	r3, [r1, r2]
 80369fc:	f023 0302 	bic.w	r3, r3, #2
 8036a00:	508b      	str	r3, [r1, r2]
 8036a02:	bd08      	pop	{r3, pc}
 8036a04:	4807      	ldr	r0, [pc, #28]	; (8036a24 <ETH_DMAReceptionCmd+0x38>)
 8036a06:	f640 0179 	movw	r1, #2169	; 0x879
 8036a0a:	f7eb ff3f 	bl	802288c <assert_failed>
 8036a0e:	4904      	ldr	r1, [pc, #16]	; (8036a20 <ETH_DMAReceptionCmd+0x34>)
 8036a10:	f241 0218 	movw	r2, #4120	; 0x1018
 8036a14:	588b      	ldr	r3, [r1, r2]
 8036a16:	f043 0302 	orr.w	r3, r3, #2
 8036a1a:	508b      	str	r3, [r1, r2]
 8036a1c:	bd08      	pop	{r3, pc}
 8036a1e:	bf00      	nop
 8036a20:	40028000 	.word	0x40028000
 8036a24:	080489f8 	.word	0x080489f8

08036a28 <ETH_BSP_Config>:
 8036a28:	b570      	push	{r4, r5, r6, lr}
 8036a2a:	2101      	movs	r1, #1
 8036a2c:	b084      	sub	sp, #16
 8036a2e:	f44f 4080 	mov.w	r0, #16384	; 0x4000
 8036a32:	f004 fff9 	bl	803ba28 <RCC_APB2PeriphClockCmd>
 8036a36:	2101      	movs	r1, #1
 8036a38:	f44f 4080 	mov.w	r0, #16384	; 0x4000
 8036a3c:	f004 fff4 	bl	803ba28 <RCC_APB2PeriphClockCmd>
 8036a40:	2001      	movs	r0, #1
 8036a42:	f005 f959 	bl	803bcf8 <SYSCFG_ETH_MediaInterfaceConfig>
 8036a46:	2402      	movs	r4, #2
 8036a48:	f240 3302 	movw	r3, #770	; 0x302
 8036a4c:	a902      	add	r1, sp, #8
 8036a4e:	4877      	ldr	r0, [pc, #476]	; (8036c2c <ETH_BSP_Config+0x204>)
 8036a50:	e9cd 4302 	strd	r4, r3, [sp, #8]
 8036a54:	f004 fcea 	bl	803b42c <GPIO_Init>
 8036a58:	4620      	mov	r0, r4
 8036a5a:	f7fe fb0f 	bl	803507c <GPIO_getPinSourceVal>
 8036a5e:	220b      	movs	r2, #11
 8036a60:	b281      	uxth	r1, r0
 8036a62:	4872      	ldr	r0, [pc, #456]	; (8036c2c <ETH_BSP_Config+0x204>)
 8036a64:	f004 fef0 	bl	803b848 <GPIO_PinAFConfig>
 8036a68:	2580      	movs	r5, #128	; 0x80
 8036a6a:	a902      	add	r1, sp, #8
 8036a6c:	486f      	ldr	r0, [pc, #444]	; (8036c2c <ETH_BSP_Config+0x204>)
 8036a6e:	9502      	str	r5, [sp, #8]
 8036a70:	f004 fcdc 	bl	803b42c <GPIO_Init>
 8036a74:	4628      	mov	r0, r5
 8036a76:	f7fe fb01 	bl	803507c <GPIO_getPinSourceVal>
 8036a7a:	220b      	movs	r2, #11
 8036a7c:	b281      	uxth	r1, r0
 8036a7e:	486b      	ldr	r0, [pc, #428]	; (8036c2c <ETH_BSP_Config+0x204>)
 8036a80:	f004 fee2 	bl	803b848 <GPIO_PinAFConfig>
 8036a84:	f44f 6500 	mov.w	r5, #2048	; 0x800
 8036a88:	a902      	add	r1, sp, #8
 8036a8a:	4869      	ldr	r0, [pc, #420]	; (8036c30 <ETH_BSP_Config+0x208>)
 8036a8c:	9502      	str	r5, [sp, #8]
 8036a8e:	f004 fccd 	bl	803b42c <GPIO_Init>
 8036a92:	4628      	mov	r0, r5
 8036a94:	f7fe faf2 	bl	803507c <GPIO_getPinSourceVal>
 8036a98:	220b      	movs	r2, #11
 8036a9a:	b281      	uxth	r1, r0
 8036a9c:	4864      	ldr	r0, [pc, #400]	; (8036c30 <ETH_BSP_Config+0x208>)
 8036a9e:	f004 fed3 	bl	803b848 <GPIO_PinAFConfig>
 8036aa2:	f44f 5580 	mov.w	r5, #4096	; 0x1000
 8036aa6:	a902      	add	r1, sp, #8
 8036aa8:	4861      	ldr	r0, [pc, #388]	; (8036c30 <ETH_BSP_Config+0x208>)
 8036aaa:	9502      	str	r5, [sp, #8]
 8036aac:	f004 fcbe 	bl	803b42c <GPIO_Init>
 8036ab0:	4628      	mov	r0, r5
 8036ab2:	f7fe fae3 	bl	803507c <GPIO_getPinSourceVal>
 8036ab6:	220b      	movs	r2, #11
 8036ab8:	b281      	uxth	r1, r0
 8036aba:	485d      	ldr	r0, [pc, #372]	; (8036c30 <ETH_BSP_Config+0x208>)
 8036abc:	f004 fec4 	bl	803b848 <GPIO_PinAFConfig>
 8036ac0:	f44f 5500 	mov.w	r5, #8192	; 0x2000
 8036ac4:	a902      	add	r1, sp, #8
 8036ac6:	485a      	ldr	r0, [pc, #360]	; (8036c30 <ETH_BSP_Config+0x208>)
 8036ac8:	9502      	str	r5, [sp, #8]
 8036aca:	f004 fcaf 	bl	803b42c <GPIO_Init>
 8036ace:	4628      	mov	r0, r5
 8036ad0:	f7fe fad4 	bl	803507c <GPIO_getPinSourceVal>
 8036ad4:	220b      	movs	r2, #11
 8036ad6:	b281      	uxth	r1, r0
 8036ad8:	4855      	ldr	r0, [pc, #340]	; (8036c30 <ETH_BSP_Config+0x208>)
 8036ada:	f004 feb5 	bl	803b848 <GPIO_PinAFConfig>
 8036ade:	2510      	movs	r5, #16
 8036ae0:	a902      	add	r1, sp, #8
 8036ae2:	4854      	ldr	r0, [pc, #336]	; (8036c34 <ETH_BSP_Config+0x20c>)
 8036ae4:	9502      	str	r5, [sp, #8]
 8036ae6:	f004 fca1 	bl	803b42c <GPIO_Init>
 8036aea:	4628      	mov	r0, r5
 8036aec:	f7fe fac6 	bl	803507c <GPIO_getPinSourceVal>
 8036af0:	220b      	movs	r2, #11
 8036af2:	b281      	uxth	r1, r0
 8036af4:	484f      	ldr	r0, [pc, #316]	; (8036c34 <ETH_BSP_Config+0x20c>)
 8036af6:	f004 fea7 	bl	803b848 <GPIO_PinAFConfig>
 8036afa:	2520      	movs	r5, #32
 8036afc:	a902      	add	r1, sp, #8
 8036afe:	484d      	ldr	r0, [pc, #308]	; (8036c34 <ETH_BSP_Config+0x20c>)
 8036b00:	9502      	str	r5, [sp, #8]
 8036b02:	f004 fc93 	bl	803b42c <GPIO_Init>
 8036b06:	4628      	mov	r0, r5
 8036b08:	f7fe fab8 	bl	803507c <GPIO_getPinSourceVal>
 8036b0c:	220b      	movs	r2, #11
 8036b0e:	b281      	uxth	r1, r0
 8036b10:	4848      	ldr	r0, [pc, #288]	; (8036c34 <ETH_BSP_Config+0x20c>)
 8036b12:	f004 fe99 	bl	803b848 <GPIO_PinAFConfig>
 8036b16:	2500      	movs	r5, #0
 8036b18:	2304      	movs	r3, #4
 8036b1a:	a902      	add	r1, sp, #8
 8036b1c:	4843      	ldr	r0, [pc, #268]	; (8036c2c <ETH_BSP_Config+0x204>)
 8036b1e:	9302      	str	r3, [sp, #8]
 8036b20:	f88d 500c 	strb.w	r5, [sp, #12]
 8036b24:	f004 fc82 	bl	803b42c <GPIO_Init>
 8036b28:	a902      	add	r1, sp, #8
 8036b2a:	4842      	ldr	r0, [pc, #264]	; (8036c34 <ETH_BSP_Config+0x20c>)
 8036b2c:	9402      	str	r4, [sp, #8]
 8036b2e:	f88d 500c 	strb.w	r5, [sp, #12]
 8036b32:	f004 fc7b 	bl	803b42c <GPIO_Init>
 8036b36:	2101      	movs	r1, #1
 8036b38:	f04f 6060 	mov.w	r0, #234881024	; 0xe000000
 8036b3c:	f004 ff26 	bl	803b98c <RCC_AHB1PeriphClockCmd>
 8036b40:	f7ff fa88 	bl	8036054 <ETH_DeInit>
 8036b44:	f7ff febc 	bl	80368c0 <ETH_SoftwareReset>
 8036b48:	e001      	b.n	8036b4e <ETH_BSP_Config+0x126>
 8036b4a:	f003 fa01 	bl	8039f50 <_tx_thread_sleep>
 8036b4e:	f7ff febf 	bl	80368d0 <ETH_GetSoftwareResetStatus>
 8036b52:	2801      	cmp	r0, #1
 8036b54:	f04f 000a 	mov.w	r0, #10
 8036b58:	d0f7      	beq.n	8036b4a <ETH_BSP_Config+0x122>
 8036b5a:	4c37      	ldr	r4, [pc, #220]	; (8036c38 <ETH_BSP_Config+0x210>)
 8036b5c:	4d37      	ldr	r5, [pc, #220]	; (8036c3c <ETH_BSP_Config+0x214>)
 8036b5e:	4620      	mov	r0, r4
 8036b60:	f7ff fa86 	bl	8036070 <ETH_StructInit>
 8036b64:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8036b68:	f44f 7200 	mov.w	r2, #512	; 0x200
 8036b6c:	f44f 1000 	mov.w	r0, #2097152	; 0x200000
 8036b70:	6263      	str	r3, [r4, #36]	; 0x24
 8036b72:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 8036b76:	62a2      	str	r2, [r4, #40]	; 0x28
 8036b78:	f8c4 008c 	str.w	r0, [r4, #140]	; 0x8c
 8036b7c:	2204      	movs	r2, #4
 8036b7e:	f44f 0080 	mov.w	r0, #4194304	; 0x400000
 8036b82:	f8c4 30a8 	str.w	r3, [r4, #168]	; 0xa8
 8036b86:	f44f 4380 	mov.w	r3, #16384	; 0x4000
 8036b8a:	2100      	movs	r1, #0
 8036b8c:	2601      	movs	r6, #1
 8036b8e:	f8c4 20a0 	str.w	r2, [r4, #160]	; 0xa0
 8036b92:	f8c4 00ac 	str.w	r0, [r4, #172]	; 0xac
 8036b96:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 8036b9a:	f8c4 30b8 	str.w	r3, [r4, #184]	; 0xb8
 8036b9e:	4620      	mov	r0, r4
 8036ba0:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
 8036ba4:	e9c4 1113 	strd	r1, r1, [r4, #76]	; 0x4c
 8036ba8:	e9c4 1125 	strd	r1, r1, [r4, #148]	; 0x94
 8036bac:	f8c4 20b0 	str.w	r2, [r4, #176]	; 0xb0
 8036bb0:	61e1      	str	r1, [r4, #28]
 8036bb2:	62e1      	str	r1, [r4, #44]	; 0x2c
 8036bb4:	63a1      	str	r1, [r4, #56]	; 0x38
 8036bb6:	6461      	str	r1, [r4, #68]	; 0x44
 8036bb8:	6561      	str	r1, [r4, #84]	; 0x54
 8036bba:	f8c4 1080 	str.w	r1, [r4, #128]	; 0x80
 8036bbe:	f8c4 3084 	str.w	r3, [r4, #132]	; 0x84
 8036bc2:	f8c4 30a4 	str.w	r3, [r4, #164]	; 0xa4
 8036bc6:	6026      	str	r6, [r4, #0]
 8036bc8:	f7ff faa0 	bl	803610c <ETH_Init>
 8036bcc:	4631      	mov	r1, r6
 8036bce:	4603      	mov	r3, r0
 8036bd0:	481b      	ldr	r0, [pc, #108]	; (8036c40 <ETH_BSP_Config+0x218>)
 8036bd2:	602b      	str	r3, [r5, #0]
 8036bd4:	f7ff fe84 	bl	80368e0 <ETH_DMAITConfig>
 8036bd8:	682b      	ldr	r3, [r5, #0]
 8036bda:	42b3      	cmp	r3, r6
 8036bdc:	d106      	bne.n	8036bec <ETH_BSP_Config+0x1c4>
 8036bde:	4b19      	ldr	r3, [pc, #100]	; (8036c44 <ETH_BSP_Config+0x21c>)
 8036be0:	9302      	str	r3, [sp, #8]
 8036be2:	a802      	add	r0, sp, #8
 8036be4:	f003 ff90 	bl	803ab08 <NVIC_Init>
 8036be8:	b004      	add	sp, #16
 8036bea:	bd70      	pop	{r4, r5, r6, pc}
 8036bec:	4816      	ldr	r0, [pc, #88]	; (8036c48 <ETH_BSP_Config+0x220>)
 8036bee:	212f      	movs	r1, #47	; 0x2f
 8036bf0:	f008 fbb5 	bl	803f35e <strrchr>
 8036bf4:	b160      	cbz	r0, 8036c10 <ETH_BSP_Config+0x1e8>
 8036bf6:	212f      	movs	r1, #47	; 0x2f
 8036bf8:	4813      	ldr	r0, [pc, #76]	; (8036c48 <ETH_BSP_Config+0x220>)
 8036bfa:	f008 fbb0 	bl	803f35e <strrchr>
 8036bfe:	1981      	adds	r1, r0, r6
 8036c00:	682b      	ldr	r3, [r5, #0]
 8036c02:	9300      	str	r3, [sp, #0]
 8036c04:	2243      	movs	r2, #67	; 0x43
 8036c06:	4b11      	ldr	r3, [pc, #68]	; (8036c4c <ETH_BSP_Config+0x224>)
 8036c08:	2000      	movs	r0, #0
 8036c0a:	f7eb fdc5 	bl	8022798 <DEBUG_logMsg>
 8036c0e:	e7e6      	b.n	8036bde <ETH_BSP_Config+0x1b6>
 8036c10:	480d      	ldr	r0, [pc, #52]	; (8036c48 <ETH_BSP_Config+0x220>)
 8036c12:	215c      	movs	r1, #92	; 0x5c
 8036c14:	f008 fba3 	bl	803f35e <strrchr>
 8036c18:	b128      	cbz	r0, 8036c26 <ETH_BSP_Config+0x1fe>
 8036c1a:	215c      	movs	r1, #92	; 0x5c
 8036c1c:	480a      	ldr	r0, [pc, #40]	; (8036c48 <ETH_BSP_Config+0x220>)
 8036c1e:	f008 fb9e 	bl	803f35e <strrchr>
 8036c22:	1c41      	adds	r1, r0, #1
 8036c24:	e7ec      	b.n	8036c00 <ETH_BSP_Config+0x1d8>
 8036c26:	4908      	ldr	r1, [pc, #32]	; (8036c48 <ETH_BSP_Config+0x220>)
 8036c28:	e7ea      	b.n	8036c00 <ETH_BSP_Config+0x1d8>
 8036c2a:	bf00      	nop
 8036c2c:	40020000 	.word	0x40020000
 8036c30:	40020400 	.word	0x40020400
 8036c34:	40020800 	.word	0x40020800
 8036c38:	2001212c 	.word	0x2001212c
 8036c3c:	200121e8 	.word	0x200121e8
 8036c40:	00010041 	.word	0x00010041
 8036c44:	0100023d 	.word	0x0100023d
 8036c48:	08048a40 	.word	0x08048a40
 8036c4c:	08048a8c 	.word	0x08048a8c

08036c50 <_nx_arp_enable>:
 8036c50:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8036c52:	460f      	mov	r7, r1
 8036c54:	4606      	mov	r6, r0
 8036c56:	4608      	mov	r0, r1
 8036c58:	2100      	movs	r1, #0
 8036c5a:	4615      	mov	r5, r2
 8036c5c:	f008 fcfa 	bl	803f654 <memset>
 8036c60:	4a1e      	ldr	r2, [pc, #120]	; (8036cdc <_nx_arp_enable+0x8c>)
 8036c62:	fba2 3505 	umull	r3, r5, r2, r5
 8036c66:	092d      	lsrs	r5, r5, #4
 8036c68:	1e6c      	subs	r4, r5, #1
 8036c6a:	d033      	beq.n	8036cd4 <_nx_arp_enable+0x84>
 8036c6c:	463b      	mov	r3, r7
 8036c6e:	2200      	movs	r2, #0
 8036c70:	3334      	adds	r3, #52	; 0x34
 8036c72:	3201      	adds	r2, #1
 8036c74:	42a2      	cmp	r2, r4
 8036c76:	f843 3c28 	str.w	r3, [r3, #-40]
 8036c7a:	d1f9      	bne.n	8036c70 <_nx_arp_enable+0x20>
 8036c7c:	2134      	movs	r1, #52	; 0x34
 8036c7e:	fb01 7105 	mla	r1, r1, r5, r7
 8036c82:	3934      	subs	r1, #52	; 0x34
 8036c84:	460b      	mov	r3, r1
 8036c86:	2200      	movs	r2, #0
 8036c88:	60cf      	str	r7, [r1, #12]
 8036c8a:	3b34      	subs	r3, #52	; 0x34
 8036c8c:	3201      	adds	r2, #1
 8036c8e:	42a2      	cmp	r2, r4
 8036c90:	645b      	str	r3, [r3, #68]	; 0x44
 8036c92:	d1fa      	bne.n	8036c8a <_nx_arp_enable+0x3a>
 8036c94:	f06f 0333 	mvn.w	r3, #51	; 0x33
 8036c98:	fb03 1105 	mla	r1, r3, r5, r1
 8036c9c:	3134      	adds	r1, #52	; 0x34
 8036c9e:	2334      	movs	r3, #52	; 0x34
 8036ca0:	fb03 1305 	mla	r3, r3, r5, r1
 8036ca4:	3b34      	subs	r3, #52	; 0x34
 8036ca6:	610b      	str	r3, [r1, #16]
 8036ca8:	4c0d      	ldr	r4, [pc, #52]	; (8036ce0 <_nx_arp_enable+0x90>)
 8036caa:	490e      	ldr	r1, [pc, #56]	; (8036ce4 <_nx_arp_enable+0x94>)
 8036cac:	4a0e      	ldr	r2, [pc, #56]	; (8036ce8 <_nx_arp_enable+0x98>)
 8036cae:	4b0f      	ldr	r3, [pc, #60]	; (8036cec <_nx_arp_enable+0x9c>)
 8036cb0:	f8c6 76e8 	str.w	r7, [r6, #1768]	; 0x6e8
 8036cb4:	2000      	movs	r0, #0
 8036cb6:	f8c6 770c 	str.w	r7, [r6, #1804]	; 0x70c
 8036cba:	f8c6 5710 	str.w	r5, [r6, #1808]	; 0x710
 8036cbe:	f8c6 06e4 	str.w	r0, [r6, #1764]	; 0x6e4
 8036cc2:	f8c6 46fc 	str.w	r4, [r6, #1788]	; 0x6fc
 8036cc6:	f8c6 1700 	str.w	r1, [r6, #1792]	; 0x700
 8036cca:	f8c6 2704 	str.w	r2, [r6, #1796]	; 0x704
 8036cce:	f8c6 36f8 	str.w	r3, [r6, #1784]	; 0x6f8
 8036cd2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8036cd4:	60ff      	str	r7, [r7, #12]
 8036cd6:	4639      	mov	r1, r7
 8036cd8:	e7e1      	b.n	8036c9e <_nx_arp_enable+0x4e>
 8036cda:	bf00      	nop
 8036cdc:	4ec4ec4f 	.word	0x4ec4ec4f
 8036ce0:	08037229 	.word	0x08037229
 8036ce4:	08037311 	.word	0x08037311
 8036ce8:	0803714d 	.word	0x0803714d
 8036cec:	08036cf1 	.word	0x08036cf1

08036cf0 <_nx_arp_entry_allocate>:
 8036cf0:	f8d0 36e8 	ldr.w	r3, [r0, #1768]	; 0x6e8
 8036cf4:	2b00      	cmp	r3, #0
 8036cf6:	d051      	beq.n	8036d9c <_nx_arp_entry_allocate+0xac>
 8036cf8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8036cfc:	691d      	ldr	r5, [r3, #16]
 8036cfe:	69eb      	ldr	r3, [r5, #28]
 8036d00:	4606      	mov	r6, r0
 8036d02:	460f      	mov	r7, r1
 8036d04:	b31b      	cbz	r3, 8036d4e <_nx_arp_entry_allocate+0x5e>
 8036d06:	2001      	movs	r0, #1
 8036d08:	f003 f882 	bl	8039e10 <_tx_thread_interrupt_control>
 8036d0c:	696b      	ldr	r3, [r5, #20]
 8036d0e:	42ab      	cmp	r3, r5
 8036d10:	d046      	beq.n	8036da0 <_nx_arp_entry_allocate+0xb0>
 8036d12:	69ea      	ldr	r2, [r5, #28]
 8036d14:	6811      	ldr	r1, [r2, #0]
 8036d16:	42a9      	cmp	r1, r5
 8036d18:	bf04      	itt	eq
 8036d1a:	6013      	streq	r3, [r2, #0]
 8036d1c:	696b      	ldreq	r3, [r5, #20]
 8036d1e:	69aa      	ldr	r2, [r5, #24]
 8036d20:	619a      	str	r2, [r3, #24]
 8036d22:	6153      	str	r3, [r2, #20]
 8036d24:	f8d6 36ec 	ldr.w	r3, [r6, #1772]	; 0x6ec
 8036d28:	6b2c      	ldr	r4, [r5, #48]	; 0x30
 8036d2a:	3b01      	subs	r3, #1
 8036d2c:	f04f 0800 	mov.w	r8, #0
 8036d30:	f8c6 36ec 	str.w	r3, [r6, #1772]	; 0x6ec
 8036d34:	f8c5 8030 	str.w	r8, [r5, #48]	; 0x30
 8036d38:	f003 f86a 	bl	8039e10 <_tx_thread_interrupt_control>
 8036d3c:	b13c      	cbz	r4, 8036d4e <_nx_arp_entry_allocate+0x5e>
 8036d3e:	4620      	mov	r0, r4
 8036d40:	6864      	ldr	r4, [r4, #4]
 8036d42:	f8c0 8004 	str.w	r8, [r0, #4]
 8036d46:	f001 fbc3 	bl	80384d0 <_nx_packet_transmit_release>
 8036d4a:	2c00      	cmp	r4, #0
 8036d4c:	d1f7      	bne.n	8036d3e <_nx_arp_entry_allocate+0x4e>
 8036d4e:	683b      	ldr	r3, [r7, #0]
 8036d50:	b1fb      	cbz	r3, 8036d92 <_nx_arp_entry_allocate+0xa2>
 8036d52:	616b      	str	r3, [r5, #20]
 8036d54:	683b      	ldr	r3, [r7, #0]
 8036d56:	61ef      	str	r7, [r5, #28]
 8036d58:	699b      	ldr	r3, [r3, #24]
 8036d5a:	61ab      	str	r3, [r5, #24]
 8036d5c:	615d      	str	r5, [r3, #20]
 8036d5e:	683b      	ldr	r3, [r7, #0]
 8036d60:	619d      	str	r5, [r3, #24]
 8036d62:	f8d6 36e8 	ldr.w	r3, [r6, #1768]	; 0x6e8
 8036d66:	42ab      	cmp	r3, r5
 8036d68:	d00b      	beq.n	8036d82 <_nx_arp_entry_allocate+0x92>
 8036d6a:	e9d5 0103 	ldrd	r0, r1, [r5, #12]
 8036d6e:	6101      	str	r1, [r0, #16]
 8036d70:	691a      	ldr	r2, [r3, #16]
 8036d72:	60c8      	str	r0, [r1, #12]
 8036d74:	e9c5 3203 	strd	r3, r2, [r5, #12]
 8036d78:	60d5      	str	r5, [r2, #12]
 8036d7a:	68eb      	ldr	r3, [r5, #12]
 8036d7c:	611d      	str	r5, [r3, #16]
 8036d7e:	f8c6 56e8 	str.w	r5, [r6, #1768]	; 0x6e8
 8036d82:	f8d6 36ec 	ldr.w	r3, [r6, #1772]	; 0x6ec
 8036d86:	3301      	adds	r3, #1
 8036d88:	f8c6 36ec 	str.w	r3, [r6, #1772]	; 0x6ec
 8036d8c:	2000      	movs	r0, #0
 8036d8e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8036d92:	e9c5 5505 	strd	r5, r5, [r5, #20]
 8036d96:	61ef      	str	r7, [r5, #28]
 8036d98:	603d      	str	r5, [r7, #0]
 8036d9a:	e7e2      	b.n	8036d62 <_nx_arp_entry_allocate+0x72>
 8036d9c:	2017      	movs	r0, #23
 8036d9e:	4770      	bx	lr
 8036da0:	69eb      	ldr	r3, [r5, #28]
 8036da2:	2200      	movs	r2, #0
 8036da4:	601a      	str	r2, [r3, #0]
 8036da6:	e7bd      	b.n	8036d24 <_nx_arp_entry_allocate+0x34>

08036da8 <_nx_arp_packet_deferred_receive>:
 8036da8:	b570      	push	{r4, r5, r6, lr}
 8036daa:	4604      	mov	r4, r0
 8036dac:	2001      	movs	r0, #1
 8036dae:	460d      	mov	r5, r1
 8036db0:	f003 f82e 	bl	8039e10 <_tx_thread_interrupt_control>
 8036db4:	f8d4 3700 	ldr.w	r3, [r4, #1792]	; 0x700
 8036db8:	b1e3      	cbz	r3, 8036df4 <_nx_arp_packet_deferred_receive+0x4c>
 8036dba:	f8d4 66f0 	ldr.w	r6, [r4, #1776]	; 0x6f0
 8036dbe:	b156      	cbz	r6, 8036dd6 <_nx_arp_packet_deferred_receive+0x2e>
 8036dc0:	f8d4 26f4 	ldr.w	r2, [r4, #1780]	; 0x6f4
 8036dc4:	2300      	movs	r3, #0
 8036dc6:	6055      	str	r5, [r2, #4]
 8036dc8:	606b      	str	r3, [r5, #4]
 8036dca:	f8c4 56f4 	str.w	r5, [r4, #1780]	; 0x6f4
 8036dce:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8036dd2:	f003 b81d 	b.w	8039e10 <_tx_thread_interrupt_control>
 8036dd6:	f8c4 56f0 	str.w	r5, [r4, #1776]	; 0x6f0
 8036dda:	f8c4 56f4 	str.w	r5, [r4, #1780]	; 0x6f4
 8036dde:	606e      	str	r6, [r5, #4]
 8036de0:	f003 f816 	bl	8039e10 <_tx_thread_interrupt_control>
 8036de4:	4632      	mov	r2, r6
 8036de6:	f504 701a 	add.w	r0, r4, #616	; 0x268
 8036dea:	2110      	movs	r1, #16
 8036dec:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8036df0:	f002 b9c2 	b.w	8039178 <_tx_event_flags_set>
 8036df4:	f003 f80c 	bl	8039e10 <_tx_thread_interrupt_control>
 8036df8:	4628      	mov	r0, r5
 8036dfa:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8036dfe:	f001 bb0b 	b.w	8038418 <_nx_packet_release>
 8036e02:	bf00      	nop

08036e04 <_nx_arp_packet_receive>:
 8036e04:	6acb      	ldr	r3, [r1, #44]	; 0x2c
 8036e06:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8036e0a:	f8d1 b01c 	ldr.w	fp, [r1, #28]
 8036e0e:	695e      	ldr	r6, [r3, #20]
 8036e10:	f8d3 e018 	ldr.w	lr, [r3, #24]
 8036e14:	4689      	mov	r9, r1
 8036e16:	e9d3 2101 	ldrd	r2, r1, [r3, #4]
 8036e1a:	e9d3 c703 	ldrd	ip, r7, [r3, #12]
 8036e1e:	ea86 4536 	eor.w	r5, r6, r6, ror #16
 8036e22:	ea82 4432 	eor.w	r4, r2, r2, ror #16
 8036e26:	0a2d      	lsrs	r5, r5, #8
 8036e28:	0a24      	lsrs	r4, r4, #8
 8036e2a:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8036e2e:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8036e32:	ea84 2432 	eor.w	r4, r4, r2, ror #8
 8036e36:	ea85 2536 	eor.w	r5, r5, r6, ror #8
 8036e3a:	ea8c 423c 	eor.w	r2, ip, ip, ror #16
 8036e3e:	ea81 4631 	eor.w	r6, r1, r1, ror #16
 8036e42:	0a36      	lsrs	r6, r6, #8
 8036e44:	0a12      	lsrs	r2, r2, #8
 8036e46:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8036e4a:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8036e4e:	ea86 2631 	eor.w	r6, r6, r1, ror #8
 8036e52:	ea82 223c 	eor.w	r2, r2, ip, ror #8
 8036e56:	ea87 4137 	eor.w	r1, r7, r7, ror #16
 8036e5a:	ea8e 4c3e 	eor.w	ip, lr, lr, ror #16
 8036e5e:	0a09      	lsrs	r1, r1, #8
 8036e60:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8036e64:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 8036e68:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8036e6c:	ea81 2837 	eor.w	r8, r1, r7, ror #8
 8036e70:	ea8c 213e 	eor.w	r1, ip, lr, ror #8
 8036e74:	4607      	mov	r7, r0
 8036e76:	e9c3 6202 	strd	r6, r2, [r3, #8]
 8036e7a:	b08d      	sub	sp, #52	; 0x34
 8036e7c:	615d      	str	r5, [r3, #20]
 8036e7e:	605c      	str	r4, [r3, #4]
 8036e80:	b2a0      	uxth	r0, r4
 8036e82:	f8c3 8010 	str.w	r8, [r3, #16]
 8036e86:	6199      	str	r1, [r3, #24]
 8036e88:	f1bb 0f00 	cmp.w	fp, #0
 8036e8c:	f000 8093 	beq.w	8036fb6 <_nx_arp_packet_receive+0x1b2>
 8036e90:	1e45      	subs	r5, r0, #1
 8036e92:	2d01      	cmp	r5, #1
 8036e94:	f200 8089 	bhi.w	8036faa <_nx_arp_packet_receive+0x1a6>
 8036e98:	f8db c014 	ldr.w	ip, [fp, #20]
 8036e9c:	ea4f 4518 	mov.w	r5, r8, lsr #16
 8036ea0:	ea4f 4812 	mov.w	r8, r2, lsr #16
 8036ea4:	ea48 4806 	orr.w	r8, r8, r6, lsl #16
 8036ea8:	ea45 4502 	orr.w	r5, r5, r2, lsl #16
 8036eac:	0c36      	lsrs	r6, r6, #16
 8036eae:	f1bc 0f00 	cmp.w	ip, #0
 8036eb2:	d141      	bne.n	8036f38 <_nx_arp_packet_receive+0x134>
 8036eb4:	f8db 2030 	ldr.w	r2, [fp, #48]	; 0x30
 8036eb8:	42aa      	cmp	r2, r5
 8036eba:	d064      	beq.n	8036f86 <_nx_arp_packet_receive+0x182>
 8036ebc:	2d00      	cmp	r5, #0
 8036ebe:	d15f      	bne.n	8036f80 <_nx_arp_packet_receive+0x17c>
 8036ec0:	428a      	cmp	r2, r1
 8036ec2:	d060      	beq.n	8036f86 <_nx_arp_packet_receive+0x182>
 8036ec4:	2801      	cmp	r0, #1
 8036ec6:	d170      	bne.n	8036faa <_nx_arp_packet_receive+0x1a6>
 8036ec8:	458c      	cmp	ip, r1
 8036eca:	d079      	beq.n	8036fc0 <_nx_arp_packet_receive+0x1bc>
 8036ecc:	2d00      	cmp	r5, #0
 8036ece:	d06c      	beq.n	8036faa <_nx_arp_packet_receive+0x1a6>
 8036ed0:	f04f 0a00 	mov.w	sl, #0
 8036ed4:	eb05 2215 	add.w	r2, r5, r5, lsr #8
 8036ed8:	f002 021f 	and.w	r2, r2, #31
 8036edc:	eb07 0382 	add.w	r3, r7, r2, lsl #2
 8036ee0:	0a29      	lsrs	r1, r5, #8
 8036ee2:	f8d3 0664 	ldr.w	r0, [r3, #1636]	; 0x664
 8036ee6:	4604      	mov	r4, r0
 8036ee8:	b134      	cbz	r4, 8036ef8 <_nx_arp_packet_receive+0xf4>
 8036eea:	6a23      	ldr	r3, [r4, #32]
 8036eec:	42ab      	cmp	r3, r5
 8036eee:	f000 80cb 	beq.w	8037088 <_nx_arp_packet_receive+0x284>
 8036ef2:	6964      	ldr	r4, [r4, #20]
 8036ef4:	42a0      	cmp	r0, r4
 8036ef6:	d1f7      	bne.n	8036ee8 <_nx_arp_packet_receive+0xe4>
 8036ef8:	f1ba 0f00 	cmp.w	sl, #0
 8036efc:	f000 80fd 	beq.w	80370fa <_nx_arp_packet_receive+0x2f6>
 8036f00:	2d00      	cmp	r5, #0
 8036f02:	d055      	beq.n	8036fb0 <_nx_arp_packet_receive+0x1ac>
 8036f04:	f202 1199 	addw	r1, r2, #409	; 0x199
 8036f08:	f8d7 36f8 	ldr.w	r3, [r7, #1784]	; 0x6f8
 8036f0c:	9203      	str	r2, [sp, #12]
 8036f0e:	eb07 0181 	add.w	r1, r7, r1, lsl #2
 8036f12:	4638      	mov	r0, r7
 8036f14:	4798      	blx	r3
 8036f16:	2800      	cmp	r0, #0
 8036f18:	d14a      	bne.n	8036fb0 <_nx_arp_packet_receive+0x1ac>
 8036f1a:	9a03      	ldr	r2, [sp, #12]
 8036f1c:	eb07 0282 	add.w	r2, r7, r2, lsl #2
 8036f20:	f8d2 3664 	ldr.w	r3, [r2, #1636]	; 0x664
 8036f24:	699b      	ldr	r3, [r3, #24]
 8036f26:	e9c3 5608 	strd	r5, r6, [r3, #32]
 8036f2a:	e9c3 0001 	strd	r0, r0, [r3, #4]
 8036f2e:	f8c3 8028 	str.w	r8, [r3, #40]	; 0x28
 8036f32:	f8c3 b02c 	str.w	fp, [r3, #44]	; 0x2c
 8036f36:	e03b      	b.n	8036fb0 <_nx_arp_packet_receive+0x1ac>
 8036f38:	2d00      	cmp	r5, #0
 8036f3a:	d0c3      	beq.n	8036ec4 <_nx_arp_packet_receive+0xc0>
 8036f3c:	45ac      	cmp	ip, r5
 8036f3e:	d11f      	bne.n	8036f80 <_nx_arp_packet_receive+0x17c>
 8036f40:	f8db 300c 	ldr.w	r3, [fp, #12]
 8036f44:	42b3      	cmp	r3, r6
 8036f46:	f000 80eb 	beq.w	8037120 <_nx_arp_packet_receive+0x31c>
 8036f4a:	f8db 302c 	ldr.w	r3, [fp, #44]	; 0x2c
 8036f4e:	2b00      	cmp	r3, #0
 8036f50:	f000 80f2 	beq.w	8037138 <_nx_arp_packet_receive+0x334>
 8036f54:	f8db 4034 	ldr.w	r4, [fp, #52]	; 0x34
 8036f58:	b15c      	cbz	r4, 8036f72 <_nx_arp_packet_receive+0x16e>
 8036f5a:	f207 7334 	addw	r3, r7, #1844	; 0x734
 8036f5e:	459b      	cmp	fp, r3
 8036f60:	d107      	bne.n	8036f72 <_nx_arp_packet_receive+0x16e>
 8036f62:	f8db 2030 	ldr.w	r2, [fp, #48]	; 0x30
 8036f66:	f8cd 8000 	str.w	r8, [sp]
 8036f6a:	4633      	mov	r3, r6
 8036f6c:	2100      	movs	r1, #0
 8036f6e:	4638      	mov	r0, r7
 8036f70:	47a0      	blx	r4
 8036f72:	f8d7 3708 	ldr.w	r3, [r7, #1800]	; 0x708
 8036f76:	b1c3      	cbz	r3, 8036faa <_nx_arp_packet_receive+0x1a6>
 8036f78:	4649      	mov	r1, r9
 8036f7a:	4638      	mov	r0, r7
 8036f7c:	4798      	blx	r3
 8036f7e:	e017      	b.n	8036fb0 <_nx_arp_packet_receive+0x1ac>
 8036f80:	2801      	cmp	r0, #1
 8036f82:	d1a5      	bne.n	8036ed0 <_nx_arp_packet_receive+0xcc>
 8036f84:	e7a0      	b.n	8036ec8 <_nx_arp_packet_receive+0xc4>
 8036f86:	f8db 300c 	ldr.w	r3, [fp, #12]
 8036f8a:	42b3      	cmp	r3, r6
 8036f8c:	f000 80ce 	beq.w	803712c <_nx_arp_packet_receive+0x328>
 8036f90:	f8db 4034 	ldr.w	r4, [fp, #52]	; 0x34
 8036f94:	b14c      	cbz	r4, 8036faa <_nx_arp_packet_receive+0x1a6>
 8036f96:	f207 7334 	addw	r3, r7, #1844	; 0x734
 8036f9a:	459b      	cmp	fp, r3
 8036f9c:	d105      	bne.n	8036faa <_nx_arp_packet_receive+0x1a6>
 8036f9e:	f8cd 8000 	str.w	r8, [sp]
 8036fa2:	4633      	mov	r3, r6
 8036fa4:	4638      	mov	r0, r7
 8036fa6:	2100      	movs	r1, #0
 8036fa8:	47a0      	blx	r4
 8036faa:	4648      	mov	r0, r9
 8036fac:	f001 fa34 	bl	8038418 <_nx_packet_release>
 8036fb0:	b00d      	add	sp, #52	; 0x34
 8036fb2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8036fb6:	f207 7b34 	addw	fp, r7, #1844	; 0x734
 8036fba:	f8c9 b01c 	str.w	fp, [r9, #28]
 8036fbe:	e767      	b.n	8036e90 <_nx_arp_packet_receive+0x8c>
 8036fc0:	0c20      	lsrs	r0, r4, #16
 8036fc2:	0400      	lsls	r0, r0, #16
 8036fc4:	f040 0002 	orr.w	r0, r0, #2
 8036fc8:	6058      	str	r0, [r3, #4]
 8036fca:	f8db 200c 	ldr.w	r2, [fp, #12]
 8036fce:	f8bb e012 	ldrh.w	lr, [fp, #18]
 8036fd2:	f8db 1028 	ldr.w	r1, [fp, #40]	; 0x28
 8036fd6:	ea4e 4e02 	orr.w	lr, lr, r2, lsl #16
 8036fda:	f8c3 e008 	str.w	lr, [r3, #8]
 8036fde:	f8db 2010 	ldr.w	r2, [fp, #16]
 8036fe2:	f8bb 4016 	ldrh.w	r4, [fp, #22]
 8036fe6:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
 8036fea:	60dc      	str	r4, [r3, #12]
 8036fec:	f8db 2014 	ldr.w	r2, [fp, #20]
 8036ff0:	ea46 4202 	orr.w	r2, r6, r2, lsl #16
 8036ff4:	ea82 4a32 	eor.w	sl, r2, r2, ror #16
 8036ff8:	ea84 4c34 	eor.w	ip, r4, r4, ror #16
 8036ffc:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8037000:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8037004:	f00a 1aff 	and.w	sl, sl, #16711935	; 0xff00ff
 8037008:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 803700c:	ea8a 2a32 	eor.w	sl, sl, r2, ror #8
 8037010:	ea8c 2c34 	eor.w	ip, ip, r4, ror #8
 8037014:	ea8e 423e 	eor.w	r2, lr, lr, ror #16
 8037018:	ea80 4430 	eor.w	r4, r0, r0, ror #16
 803701c:	0a12      	lsrs	r2, r2, #8
 803701e:	0a24      	lsrs	r4, r4, #8
 8037020:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8037024:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8037028:	ea84 2430 	eor.w	r4, r4, r0, ror #8
 803702c:	ea82 2e3e 	eor.w	lr, r2, lr, ror #8
 8037030:	ea85 4035 	eor.w	r0, r5, r5, ror #16
 8037034:	ea88 4238 	eor.w	r2, r8, r8, ror #16
 8037038:	0a12      	lsrs	r2, r2, #8
 803703a:	0a00      	lsrs	r0, r0, #8
 803703c:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8037040:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 8037044:	e9c3 ca03 	strd	ip, sl, [r3, #12]
 8037048:	605c      	str	r4, [r3, #4]
 803704a:	ea80 2035 	eor.w	r0, r0, r5, ror #8
 803704e:	ea82 2238 	eor.w	r2, r2, r8, ror #8
 8037052:	f103 0a1c 	add.w	sl, r3, #28
 8037056:	f04f 0c1c 	mov.w	ip, #28
 803705a:	2406      	movs	r4, #6
 803705c:	f8c3 e008 	str.w	lr, [r3, #8]
 8037060:	e9c3 2005 	strd	r2, r0, [r3, #20]
 8037064:	e9cd 6806 	strd	r6, r8, [sp, #24]
 8037068:	e9cd 7b0a 	strd	r7, fp, [sp, #40]	; 0x28
 803706c:	f8cd 9020 	str.w	r9, [sp, #32]
 8037070:	9404      	str	r4, [sp, #16]
 8037072:	f8c9 a030 	str.w	sl, [r9, #48]	; 0x30
 8037076:	f8c9 c018 	str.w	ip, [r9, #24]
 803707a:	a804      	add	r0, sp, #16
 803707c:	4788      	blx	r1
 803707e:	2d00      	cmp	r5, #0
 8037080:	d096      	beq.n	8036fb0 <_nx_arp_packet_receive+0x1ac>
 8037082:	f04f 0a01 	mov.w	sl, #1
 8037086:	e725      	b.n	8036ed4 <_nx_arp_packet_receive+0xd0>
 8037088:	2300      	movs	r3, #0
 803708a:	e9c4 6809 	strd	r6, r8, [r4, #36]	; 0x24
 803708e:	e9c4 3301 	strd	r3, r3, [r4, #4]
 8037092:	f8c4 b02c 	str.w	fp, [r4, #44]	; 0x2c
 8037096:	2001      	movs	r0, #1
 8037098:	f002 feba 	bl	8039e10 <_tx_thread_interrupt_control>
 803709c:	6b25      	ldr	r5, [r4, #48]	; 0x30
 803709e:	2d00      	cmp	r5, #0
 80370a0:	d037      	beq.n	8037112 <_nx_arp_packet_receive+0x30e>
 80370a2:	2300      	movs	r3, #0
 80370a4:	6323      	str	r3, [r4, #48]	; 0x30
 80370a6:	f002 feb3 	bl	8039e10 <_tx_thread_interrupt_control>
 80370aa:	f1ba 0f00 	cmp.w	sl, #0
 80370ae:	d102      	bne.n	80370b6 <_nx_arp_packet_receive+0x2b2>
 80370b0:	4648      	mov	r0, r9
 80370b2:	f001 f9b1 	bl	8038418 <_nx_packet_release>
 80370b6:	2400      	movs	r4, #0
 80370b8:	e9d5 0206 	ldrd	r0, r2, [r5, #24]
 80370bc:	6a11      	ldr	r1, [r2, #32]
 80370be:	9404      	str	r4, [sp, #16]
 80370c0:	462b      	mov	r3, r5
 80370c2:	4288      	cmp	r0, r1
 80370c4:	686d      	ldr	r5, [r5, #4]
 80370c6:	605c      	str	r4, [r3, #4]
 80370c8:	a804      	add	r0, sp, #16
 80370ca:	e9cd 6806 	strd	r6, r8, [sp, #24]
 80370ce:	e9cd 720a 	strd	r7, r2, [sp, #40]	; 0x28
 80370d2:	9308      	str	r3, [sp, #32]
 80370d4:	d906      	bls.n	80370e4 <_nx_arp_packet_receive+0x2e0>
 80370d6:	f8d7 22b8 	ldr.w	r2, [r7, #696]	; 0x2b8
 80370da:	b142      	cbz	r2, 80370ee <_nx_arp_packet_receive+0x2ea>
 80370dc:	4790      	blx	r2
 80370de:	2d00      	cmp	r5, #0
 80370e0:	d1ea      	bne.n	80370b8 <_nx_arp_packet_receive+0x2b4>
 80370e2:	e765      	b.n	8036fb0 <_nx_arp_packet_receive+0x1ac>
 80370e4:	6a93      	ldr	r3, [r2, #40]	; 0x28
 80370e6:	4798      	blx	r3
 80370e8:	2d00      	cmp	r5, #0
 80370ea:	d1e5      	bne.n	80370b8 <_nx_arp_packet_receive+0x2b4>
 80370ec:	e760      	b.n	8036fb0 <_nx_arp_packet_receive+0x1ac>
 80370ee:	4618      	mov	r0, r3
 80370f0:	f001 f9ee 	bl	80384d0 <_nx_packet_transmit_release>
 80370f4:	2d00      	cmp	r5, #0
 80370f6:	d1df      	bne.n	80370b8 <_nx_arp_packet_receive+0x2b4>
 80370f8:	e75a      	b.n	8036fb0 <_nx_arp_packet_receive+0x1ac>
 80370fa:	4648      	mov	r0, r9
 80370fc:	9103      	str	r1, [sp, #12]
 80370fe:	f001 f98b 	bl	8038418 <_nx_packet_release>
 8037102:	9903      	ldr	r1, [sp, #12]
 8037104:	2d00      	cmp	r5, #0
 8037106:	f43f af53 	beq.w	8036fb0 <_nx_arp_packet_receive+0x1ac>
 803710a:	194a      	adds	r2, r1, r5
 803710c:	f002 021f 	and.w	r2, r2, #31
 8037110:	e6f8      	b.n	8036f04 <_nx_arp_packet_receive+0x100>
 8037112:	f002 fe7d 	bl	8039e10 <_tx_thread_interrupt_control>
 8037116:	f1ba 0f00 	cmp.w	sl, #0
 803711a:	f43f af46 	beq.w	8036faa <_nx_arp_packet_receive+0x1a6>
 803711e:	e747      	b.n	8036fb0 <_nx_arp_packet_receive+0x1ac>
 8037120:	f8db 3010 	ldr.w	r3, [fp, #16]
 8037124:	4543      	cmp	r3, r8
 8037126:	f47f af10 	bne.w	8036f4a <_nx_arp_packet_receive+0x146>
 803712a:	e73e      	b.n	8036faa <_nx_arp_packet_receive+0x1a6>
 803712c:	f8db 3010 	ldr.w	r3, [fp, #16]
 8037130:	4543      	cmp	r3, r8
 8037132:	f47f af2d 	bne.w	8036f90 <_nx_arp_packet_receive+0x18c>
 8037136:	e738      	b.n	8036faa <_nx_arp_packet_receive+0x1a6>
 8037138:	230a      	movs	r3, #10
 803713a:	4629      	mov	r1, r5
 803713c:	f8cb 302c 	str.w	r3, [fp, #44]	; 0x2c
 8037140:	465a      	mov	r2, fp
 8037142:	4638      	mov	r0, r7
 8037144:	f000 f802 	bl	803714c <_nx_arp_packet_send>
 8037148:	e704      	b.n	8036f54 <_nx_arp_packet_receive+0x150>
 803714a:	bf00      	nop

0803714c <_nx_arp_packet_send>:
 803714c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8037150:	b08b      	sub	sp, #44	; 0x2c
 8037152:	4606      	mov	r6, r0
 8037154:	460f      	mov	r7, r1
 8037156:	4614      	mov	r4, r2
 8037158:	f8d0 0134 	ldr.w	r0, [r0, #308]	; 0x134
 803715c:	2300      	movs	r3, #0
 803715e:	2210      	movs	r2, #16
 8037160:	a901      	add	r1, sp, #4
 8037162:	f000 ff5b 	bl	803801c <_nx_packet_allocate>
 8037166:	2800      	cmp	r0, #0
 8037168:	d155      	bne.n	8037216 <_nx_arp_packet_send+0xca>
 803716a:	f8dd c004 	ldr.w	ip, [sp, #4]
 803716e:	4a2b      	ldr	r2, [pc, #172]	; (803721c <_nx_arp_packet_send+0xd0>)
 8037170:	f8dc 302c 	ldr.w	r3, [ip, #44]	; 0x2c
 8037174:	f8cc 401c 	str.w	r4, [ip, #28]
 8037178:	f04f 0e1c 	mov.w	lr, #28
 803717c:	eb03 050e 	add.w	r5, r3, lr
 8037180:	f44f 3184 	mov.w	r1, #67584	; 0x10800
 8037184:	f8cc e018 	str.w	lr, [ip, #24]
 8037188:	f8cc 5030 	str.w	r5, [ip, #48]	; 0x30
 803718c:	e9c3 1200 	strd	r1, r2, [r3]
 8037190:	68e2      	ldr	r2, [r4, #12]
 8037192:	8a65      	ldrh	r5, [r4, #18]
 8037194:	f8df e08c 	ldr.w	lr, [pc, #140]	; 8037224 <_nx_arp_packet_send+0xd8>
 8037198:	ea45 4502 	orr.w	r5, r5, r2, lsl #16
 803719c:	609d      	str	r5, [r3, #8]
 803719e:	8ae1      	ldrh	r1, [r4, #22]
 80371a0:	6922      	ldr	r2, [r4, #16]
 80371a2:	ea41 4202 	orr.w	r2, r1, r2, lsl #16
 80371a6:	60da      	str	r2, [r3, #12]
 80371a8:	6961      	ldr	r1, [r4, #20]
 80371aa:	6158      	str	r0, [r3, #20]
 80371ac:	ea82 4832 	eor.w	r8, r2, r2, ror #16
 80371b0:	ea85 4035 	eor.w	r0, r5, r5, ror #16
 80371b4:	0a00      	lsrs	r0, r0, #8
 80371b6:	ea4f 2818 	mov.w	r8, r8, lsr #8
 80371ba:	0409      	lsls	r1, r1, #16
 80371bc:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 80371c0:	f008 18ff 	and.w	r8, r8, #16711935	; 0xff00ff
 80371c4:	ea80 2035 	eor.w	r0, r0, r5, ror #8
 80371c8:	ea88 2832 	eor.w	r8, r8, r2, ror #8
 80371cc:	ea41 4531 	orr.w	r5, r1, r1, ror #16
 80371d0:	ea87 4237 	eor.w	r2, r7, r7, ror #16
 80371d4:	0a2d      	lsrs	r5, r5, #8
 80371d6:	0a12      	lsrs	r2, r2, #8
 80371d8:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 80371dc:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 80371e0:	ea85 2931 	eor.w	r9, r5, r1, ror #8
 80371e4:	ea82 2137 	eor.w	r1, r2, r7, ror #8
 80371e8:	4a0d      	ldr	r2, [pc, #52]	; (8037220 <_nx_arp_packet_send+0xd4>)
 80371ea:	605a      	str	r2, [r3, #4]
 80371ec:	2505      	movs	r5, #5
 80371ee:	f64f 77ff 	movw	r7, #65535	; 0xffff
 80371f2:	f04f 32ff 	mov.w	r2, #4294967295
 80371f6:	f8c3 e000 	str.w	lr, [r3]
 80371fa:	6098      	str	r0, [r3, #8]
 80371fc:	e9c3 8903 	strd	r8, r9, [r3, #12]
 8037200:	6199      	str	r1, [r3, #24]
 8037202:	e9cd 7204 	strd	r7, r2, [sp, #16]
 8037206:	e9cd 6408 	strd	r6, r4, [sp, #32]
 803720a:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 803720c:	f8cd c018 	str.w	ip, [sp, #24]
 8037210:	9502      	str	r5, [sp, #8]
 8037212:	a802      	add	r0, sp, #8
 8037214:	4798      	blx	r3
 8037216:	b00b      	add	sp, #44	; 0x2c
 8037218:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 803721c:	06040001 	.word	0x06040001
 8037220:	01000406 	.word	0x01000406
 8037224:	00080100 	.word	0x00080100

08037228 <_nx_arp_periodic_update>:
 8037228:	f8d0 26ec 	ldr.w	r2, [r0, #1772]	; 0x6ec
 803722c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8037230:	f8d0 46e8 	ldr.w	r4, [r0, #1768]	; 0x6e8
 8037234:	4606      	mov	r6, r0
 8037236:	b1fa      	cbz	r2, 8037278 <_nx_arp_periodic_update+0x50>
 8037238:	f04f 0900 	mov.w	r9, #0
 803723c:	464f      	mov	r7, r9
 803723e:	f04f 080a 	mov.w	r8, #10
 8037242:	6863      	ldr	r3, [r4, #4]
 8037244:	b19b      	cbz	r3, 803726e <_nx_arp_periodic_update+0x46>
 8037246:	3b01      	subs	r3, #1
 8037248:	6063      	str	r3, [r4, #4]
 803724a:	b983      	cbnz	r3, 803726e <_nx_arp_periodic_update+0x46>
 803724c:	6a63      	ldr	r3, [r4, #36]	; 0x24
 803724e:	b9f3      	cbnz	r3, 803728e <_nx_arp_periodic_update+0x66>
 8037250:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 8037252:	b9e3      	cbnz	r3, 803728e <_nx_arp_periodic_update+0x66>
 8037254:	68a3      	ldr	r3, [r4, #8]
 8037256:	2b12      	cmp	r3, #18
 8037258:	d019      	beq.n	803728e <_nx_arp_periodic_update+0x66>
 803725a:	3301      	adds	r3, #1
 803725c:	e9c4 8301 	strd	r8, r3, [r4, #4]
 8037260:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8037262:	6a21      	ldr	r1, [r4, #32]
 8037264:	4630      	mov	r0, r6
 8037266:	f7ff ff71 	bl	803714c <_nx_arp_packet_send>
 803726a:	f8d6 26ec 	ldr.w	r2, [r6, #1772]	; 0x6ec
 803726e:	68e4      	ldr	r4, [r4, #12]
 8037270:	f109 0901 	add.w	r9, r9, #1
 8037274:	454a      	cmp	r2, r9
 8037276:	d8e4      	bhi.n	8037242 <_nx_arp_periodic_update+0x1a>
 8037278:	f896 3738 	ldrb.w	r3, [r6, #1848]	; 0x738
 803727c:	b12b      	cbz	r3, 803728a <_nx_arp_periodic_update+0x62>
 803727e:	f8d6 3760 	ldr.w	r3, [r6, #1888]	; 0x760
 8037282:	b113      	cbz	r3, 803728a <_nx_arp_periodic_update+0x62>
 8037284:	3b01      	subs	r3, #1
 8037286:	f8c6 3760 	str.w	r3, [r6, #1888]	; 0x760
 803728a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 803728e:	2001      	movs	r0, #1
 8037290:	f002 fdbe 	bl	8039e10 <_tx_thread_interrupt_control>
 8037294:	69e3      	ldr	r3, [r4, #28]
 8037296:	b18b      	cbz	r3, 80372bc <_nx_arp_periodic_update+0x94>
 8037298:	6961      	ldr	r1, [r4, #20]
 803729a:	42a1      	cmp	r1, r4
 803729c:	d036      	beq.n	803730c <_nx_arp_periodic_update+0xe4>
 803729e:	681a      	ldr	r2, [r3, #0]
 80372a0:	42a2      	cmp	r2, r4
 80372a2:	bf04      	itt	eq
 80372a4:	6019      	streq	r1, [r3, #0]
 80372a6:	6961      	ldreq	r1, [r4, #20]
 80372a8:	69a3      	ldr	r3, [r4, #24]
 80372aa:	618b      	str	r3, [r1, #24]
 80372ac:	69a3      	ldr	r3, [r4, #24]
 80372ae:	6159      	str	r1, [r3, #20]
 80372b0:	f8d6 36ec 	ldr.w	r3, [r6, #1772]	; 0x6ec
 80372b4:	3b01      	subs	r3, #1
 80372b6:	f8c6 36ec 	str.w	r3, [r6, #1772]	; 0x6ec
 80372ba:	61e7      	str	r7, [r4, #28]
 80372bc:	68e1      	ldr	r1, [r4, #12]
 80372be:	42a1      	cmp	r1, r4
 80372c0:	d01f      	beq.n	8037302 <_nx_arp_periodic_update+0xda>
 80372c2:	6923      	ldr	r3, [r4, #16]
 80372c4:	610b      	str	r3, [r1, #16]
 80372c6:	6922      	ldr	r2, [r4, #16]
 80372c8:	f8d6 36e8 	ldr.w	r3, [r6, #1768]	; 0x6e8
 80372cc:	60d1      	str	r1, [r2, #12]
 80372ce:	42a3      	cmp	r3, r4
 80372d0:	bf04      	itt	eq
 80372d2:	68e3      	ldreq	r3, [r4, #12]
 80372d4:	f8c6 36e8 	streq.w	r3, [r6, #1768]	; 0x6e8
 80372d8:	b19b      	cbz	r3, 8037302 <_nx_arp_periodic_update+0xda>
 80372da:	691a      	ldr	r2, [r3, #16]
 80372dc:	6122      	str	r2, [r4, #16]
 80372de:	691a      	ldr	r2, [r3, #16]
 80372e0:	60e3      	str	r3, [r4, #12]
 80372e2:	60d4      	str	r4, [r2, #12]
 80372e4:	611c      	str	r4, [r3, #16]
 80372e6:	6b25      	ldr	r5, [r4, #48]	; 0x30
 80372e8:	6327      	str	r7, [r4, #48]	; 0x30
 80372ea:	f002 fd91 	bl	8039e10 <_tx_thread_interrupt_control>
 80372ee:	2d00      	cmp	r5, #0
 80372f0:	d0bb      	beq.n	803726a <_nx_arp_periodic_update+0x42>
 80372f2:	4628      	mov	r0, r5
 80372f4:	686d      	ldr	r5, [r5, #4]
 80372f6:	6047      	str	r7, [r0, #4]
 80372f8:	f001 f8ea 	bl	80384d0 <_nx_packet_transmit_release>
 80372fc:	2d00      	cmp	r5, #0
 80372fe:	d1f8      	bne.n	80372f2 <_nx_arp_periodic_update+0xca>
 8037300:	e7b3      	b.n	803726a <_nx_arp_periodic_update+0x42>
 8037302:	f8c6 46e8 	str.w	r4, [r6, #1768]	; 0x6e8
 8037306:	e9c4 4403 	strd	r4, r4, [r4, #12]
 803730a:	e7ec      	b.n	80372e6 <_nx_arp_periodic_update+0xbe>
 803730c:	601f      	str	r7, [r3, #0]
 803730e:	e7cf      	b.n	80372b0 <_nx_arp_periodic_update+0x88>

08037310 <_nx_arp_queue_process>:
 8037310:	b538      	push	{r3, r4, r5, lr}
 8037312:	f8d0 36f0 	ldr.w	r3, [r0, #1776]	; 0x6f0
 8037316:	b1bb      	cbz	r3, 8037348 <_nx_arp_queue_process+0x38>
 8037318:	4604      	mov	r4, r0
 803731a:	e008      	b.n	803732e <_nx_arp_queue_process+0x1e>
 803731c:	f002 fd78 	bl	8039e10 <_tx_thread_interrupt_control>
 8037320:	4629      	mov	r1, r5
 8037322:	4620      	mov	r0, r4
 8037324:	f7ff fd6e 	bl	8036e04 <_nx_arp_packet_receive>
 8037328:	f8d4 36f0 	ldr.w	r3, [r4, #1776]	; 0x6f0
 803732c:	b163      	cbz	r3, 8037348 <_nx_arp_queue_process+0x38>
 803732e:	2001      	movs	r0, #1
 8037330:	f002 fd6e 	bl	8039e10 <_tx_thread_interrupt_control>
 8037334:	f8d4 56f0 	ldr.w	r5, [r4, #1776]	; 0x6f0
 8037338:	686b      	ldr	r3, [r5, #4]
 803733a:	f8c4 36f0 	str.w	r3, [r4, #1776]	; 0x6f0
 803733e:	2b00      	cmp	r3, #0
 8037340:	d1ec      	bne.n	803731c <_nx_arp_queue_process+0xc>
 8037342:	f8c4 36f4 	str.w	r3, [r4, #1780]	; 0x6f4
 8037346:	e7e9      	b.n	803731c <_nx_arp_queue_process+0xc>
 8037348:	bd38      	pop	{r3, r4, r5, pc}
 803734a:	bf00      	nop

0803734c <_nx_icmp_enable>:
 803734c:	4a02      	ldr	r2, [pc, #8]	; (8037358 <_nx_icmp_enable+0xc>)
 803734e:	4b03      	ldr	r3, [pc, #12]	; (803735c <_nx_icmp_enable+0x10>)
 8037350:	e9c0 32e1 	strd	r3, r2, [r0, #900]	; 0x384
 8037354:	2000      	movs	r0, #0
 8037356:	4770      	bx	lr
 8037358:	080374dd 	.word	0x080374dd
 803735c:	080374a1 	.word	0x080374a1

08037360 <_nx_icmp_packet_process>:
 8037360:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8037364:	6acc      	ldr	r4, [r1, #44]	; 0x2c
 8037366:	6822      	ldr	r2, [r4, #0]
 8037368:	ea82 4332 	eor.w	r3, r2, r2, ror #16
 803736c:	0a1b      	lsrs	r3, r3, #8
 803736e:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8037372:	ea83 2332 	eor.w	r3, r3, r2, ror #8
 8037376:	6023      	str	r3, [r4, #0]
 8037378:	0e1b      	lsrs	r3, r3, #24
 803737a:	b085      	sub	sp, #20
 803737c:	460d      	mov	r5, r1
 803737e:	4607      	mov	r7, r0
 8037380:	d023      	beq.n	80373ca <_nx_icmp_packet_process+0x6a>
 8037382:	2b08      	cmp	r3, #8
 8037384:	d005      	beq.n	8037392 <_nx_icmp_packet_process+0x32>
 8037386:	4628      	mov	r0, r5
 8037388:	b005      	add	sp, #20
 803738a:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
 803738e:	f001 b843 	b.w	8038418 <_nx_packet_release>
 8037392:	2300      	movs	r3, #0
 8037394:	6023      	str	r3, [r4, #0]
 8037396:	f101 021c 	add.w	r2, r1, #28
 803739a:	f101 0320 	add.w	r3, r1, #32
 803739e:	f854 1c08 	ldr.w	r1, [r4, #-8]
 80373a2:	f000 fced 	bl	8037d80 <_nx_ip_route_find>
 80373a6:	4603      	mov	r3, r0
 80373a8:	2800      	cmp	r0, #0
 80373aa:	d1ec      	bne.n	8037386 <_nx_icmp_packet_process+0x26>
 80373ac:	f854 2c08 	ldr.w	r2, [r4, #-8]
 80373b0:	9002      	str	r0, [sp, #8]
 80373b2:	f44f 3680 	mov.w	r6, #65536	; 0x10000
 80373b6:	2480      	movs	r4, #128	; 0x80
 80373b8:	e9cd 4600 	strd	r4, r6, [sp]
 80373bc:	4629      	mov	r1, r5
 80373be:	4638      	mov	r0, r7
 80373c0:	f000 fb6a 	bl	8037a98 <_nx_ip_packet_send>
 80373c4:	b005      	add	sp, #20
 80373c6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80373ca:	6863      	ldr	r3, [r4, #4]
 80373cc:	f8df 80cc 	ldr.w	r8, [pc, #204]	; 803749c <_nx_icmp_packet_process+0x13c>
 80373d0:	ea83 4633 	eor.w	r6, r3, r3, ror #16
 80373d4:	0a36      	lsrs	r6, r6, #8
 80373d6:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 80373da:	ea86 2633 	eor.w	r6, r6, r3, ror #8
 80373de:	6066      	str	r6, [r4, #4]
 80373e0:	2001      	movs	r0, #1
 80373e2:	f002 fd15 	bl	8039e10 <_tx_thread_interrupt_control>
 80373e6:	f8d8 3000 	ldr.w	r3, [r8]
 80373ea:	e9d7 49e4 	ldrd	r4, r9, [r7, #912]	; 0x390
 80373ee:	3301      	adds	r3, #1
 80373f0:	f8c8 3000 	str.w	r3, [r8]
 80373f4:	b2b6      	uxth	r6, r6
 80373f6:	f002 fd0b 	bl	8039e10 <_tx_thread_interrupt_control>
 80373fa:	f109 33ff 	add.w	r3, r9, #4294967295
 80373fe:	f1b9 0f00 	cmp.w	r9, #0
 8037402:	d103      	bne.n	803740c <_nx_icmp_packet_process+0xac>
 8037404:	e041      	b.n	803748a <_nx_icmp_packet_process+0x12a>
 8037406:	1c5a      	adds	r2, r3, #1
 8037408:	6f24      	ldr	r4, [r4, #112]	; 0x70
 803740a:	d03e      	beq.n	803748a <_nx_icmp_packet_process+0x12a>
 803740c:	6fa2      	ldr	r2, [r4, #120]	; 0x78
 803740e:	42b2      	cmp	r2, r6
 8037410:	f103 33ff 	add.w	r3, r3, #4294967295
 8037414:	d1f7      	bne.n	8037406 <_nx_icmp_packet_process+0xa6>
 8037416:	2001      	movs	r0, #1
 8037418:	f002 fcfa 	bl	8039e10 <_tx_thread_interrupt_control>
 803741c:	6f23      	ldr	r3, [r4, #112]	; 0x70
 803741e:	42a3      	cmp	r3, r4
 8037420:	d037      	beq.n	8037492 <_nx_icmp_packet_process+0x132>
 8037422:	f8d7 2390 	ldr.w	r2, [r7, #912]	; 0x390
 8037426:	42a2      	cmp	r2, r4
 8037428:	6f62      	ldr	r2, [r4, #116]	; 0x74
 803742a:	bf08      	it	eq
 803742c:	f8c7 3390 	streq.w	r3, [r7, #912]	; 0x390
 8037430:	675a      	str	r2, [r3, #116]	; 0x74
 8037432:	6f62      	ldr	r2, [r4, #116]	; 0x74
 8037434:	6713      	str	r3, [r2, #112]	; 0x70
 8037436:	f8d7 2394 	ldr.w	r2, [r7, #916]	; 0x394
 803743a:	f8d8 3000 	ldr.w	r3, [r8]
 803743e:	3a01      	subs	r2, #1
 8037440:	2600      	movs	r6, #0
 8037442:	f8c7 2394 	str.w	r2, [r7, #916]	; 0x394
 8037446:	3301      	adds	r3, #1
 8037448:	66a6      	str	r6, [r4, #104]	; 0x68
 803744a:	f8c8 3000 	str.w	r3, [r8]
 803744e:	f002 fcdf 	bl	8039e10 <_tx_thread_interrupt_control>
 8037452:	69aa      	ldr	r2, [r5, #24]
 8037454:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
 8037456:	6fe1      	ldr	r1, [r4, #124]	; 0x7c
 8037458:	3a08      	subs	r2, #8
 803745a:	3308      	adds	r3, #8
 803745c:	61aa      	str	r2, [r5, #24]
 803745e:	62eb      	str	r3, [r5, #44]	; 0x2c
 8037460:	4620      	mov	r0, r4
 8037462:	600d      	str	r5, [r1, #0]
 8037464:	f8c4 6084 	str.w	r6, [r4, #132]	; 0x84
 8037468:	f002 fe80 	bl	803a16c <_tx_thread_system_resume>
 803746c:	2001      	movs	r0, #1
 803746e:	f002 fccf 	bl	8039e10 <_tx_thread_interrupt_control>
 8037472:	f8d8 3000 	ldr.w	r3, [r8]
 8037476:	3b01      	subs	r3, #1
 8037478:	f8c8 3000 	str.w	r3, [r8]
 803747c:	f002 fcc8 	bl	8039e10 <_tx_thread_interrupt_control>
 8037480:	b005      	add	sp, #20
 8037482:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8037486:	f002 be1b 	b.w	803a0c0 <_tx_thread_system_preempt_check>
 803748a:	4628      	mov	r0, r5
 803748c:	f000 ffc4 	bl	8038418 <_nx_packet_release>
 8037490:	e7ec      	b.n	803746c <_nx_icmp_packet_process+0x10c>
 8037492:	2300      	movs	r3, #0
 8037494:	f8c7 3390 	str.w	r3, [r7, #912]	; 0x390
 8037498:	e7cd      	b.n	8037436 <_nx_icmp_packet_process+0xd6>
 803749a:	bf00      	nop
 803749c:	2001227c 	.word	0x2001227c

080374a0 <_nx_icmp_packet_receive>:
 80374a0:	b538      	push	{r3, r4, r5, lr}
 80374a2:	4b0d      	ldr	r3, [pc, #52]	; (80374d8 <_nx_icmp_packet_receive+0x38>)
 80374a4:	681b      	ldr	r3, [r3, #0]
 80374a6:	b19b      	cbz	r3, 80374d0 <_nx_icmp_packet_receive+0x30>
 80374a8:	4604      	mov	r4, r0
 80374aa:	460d      	mov	r5, r1
 80374ac:	2001      	movs	r0, #1
 80374ae:	f002 fcaf 	bl	8039e10 <_tx_thread_interrupt_control>
 80374b2:	f8d4 338c 	ldr.w	r3, [r4, #908]	; 0x38c
 80374b6:	606b      	str	r3, [r5, #4]
 80374b8:	f8c4 538c 	str.w	r5, [r4, #908]	; 0x38c
 80374bc:	f002 fca8 	bl	8039e10 <_tx_thread_interrupt_control>
 80374c0:	f504 701a 	add.w	r0, r4, #616	; 0x268
 80374c4:	2200      	movs	r2, #0
 80374c6:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80374ca:	2104      	movs	r1, #4
 80374cc:	f001 be54 	b.w	8039178 <_tx_event_flags_set>
 80374d0:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80374d4:	f7ff bf44 	b.w	8037360 <_nx_icmp_packet_process>
 80374d8:	200024c8 	.word	0x200024c8

080374dc <_nx_icmp_queue_process>:
 80374dc:	b570      	push	{r4, r5, r6, lr}
 80374de:	4605      	mov	r5, r0
 80374e0:	2001      	movs	r0, #1
 80374e2:	f002 fc95 	bl	8039e10 <_tx_thread_interrupt_control>
 80374e6:	2600      	movs	r6, #0
 80374e8:	f8d5 438c 	ldr.w	r4, [r5, #908]	; 0x38c
 80374ec:	f8c5 638c 	str.w	r6, [r5, #908]	; 0x38c
 80374f0:	f002 fc8e 	bl	8039e10 <_tx_thread_interrupt_control>
 80374f4:	b13c      	cbz	r4, 8037506 <_nx_icmp_queue_process+0x2a>
 80374f6:	4621      	mov	r1, r4
 80374f8:	6864      	ldr	r4, [r4, #4]
 80374fa:	604e      	str	r6, [r1, #4]
 80374fc:	4628      	mov	r0, r5
 80374fe:	f7ff ff2f 	bl	8037360 <_nx_icmp_packet_process>
 8037502:	2c00      	cmp	r4, #0
 8037504:	d1f7      	bne.n	80374f6 <_nx_icmp_queue_process+0x1a>
 8037506:	bd70      	pop	{r4, r5, r6, pc}

08037508 <_nx_igmp_multicast_check>:
 8037508:	4b0c      	ldr	r3, [pc, #48]	; (803753c <_nx_igmp_multicast_check+0x34>)
 803750a:	4299      	cmp	r1, r3
 803750c:	d014      	beq.n	8037538 <_nx_igmp_multicast_check+0x30>
 803750e:	f500 7338 	add.w	r3, r0, #736	; 0x2e0
 8037512:	b410      	push	{r4}
 8037514:	f500 703f 	add.w	r0, r0, #764	; 0x2fc
 8037518:	e001      	b.n	803751e <_nx_igmp_multicast_check+0x16>
 803751a:	4283      	cmp	r3, r0
 803751c:	d008      	beq.n	8037530 <_nx_igmp_multicast_check+0x28>
 803751e:	f853 4b04 	ldr.w	r4, [r3], #4
 8037522:	428c      	cmp	r4, r1
 8037524:	d1f9      	bne.n	803751a <_nx_igmp_multicast_check+0x12>
 8037526:	699c      	ldr	r4, [r3, #24]
 8037528:	4294      	cmp	r4, r2
 803752a:	d1f6      	bne.n	803751a <_nx_igmp_multicast_check+0x12>
 803752c:	2001      	movs	r0, #1
 803752e:	e000      	b.n	8037532 <_nx_igmp_multicast_check+0x2a>
 8037530:	2000      	movs	r0, #0
 8037532:	f85d 4b04 	ldr.w	r4, [sp], #4
 8037536:	4770      	bx	lr
 8037538:	2001      	movs	r0, #1
 803753a:	4770      	bx	lr
 803753c:	e0000001 	.word	0xe0000001

08037540 <_nx_ip_create>:
 8037540:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8037544:	4d66      	ldr	r5, [pc, #408]	; (80376e0 <_nx_ip_create+0x1a0>)
 8037546:	4c67      	ldr	r4, [pc, #412]	; (80376e4 <_nx_ip_create+0x1a4>)
 8037548:	4e67      	ldr	r6, [pc, #412]	; (80376e8 <_nx_ip_create+0x1a8>)
 803754a:	f8d5 c000 	ldr.w	ip, [r5]
 803754e:	6824      	ldr	r4, [r4, #0]
 8037550:	4d66      	ldr	r5, [pc, #408]	; (80376ec <_nx_ip_create+0x1ac>)
 8037552:	6837      	ldr	r7, [r6, #0]
 8037554:	682e      	ldr	r6, [r5, #0]
 8037556:	4d66      	ldr	r5, [pc, #408]	; (80376f0 <_nx_ip_create+0x1b0>)
 8037558:	ea44 040c 	orr.w	r4, r4, ip
 803755c:	433c      	orrs	r4, r7
 803755e:	4f65      	ldr	r7, [pc, #404]	; (80376f4 <_nx_ip_create+0x1b4>)
 8037560:	682d      	ldr	r5, [r5, #0]
 8037562:	f897 c000 	ldrb.w	ip, [r7]
 8037566:	4334      	orrs	r4, r6
 8037568:	4325      	orrs	r5, r4
 803756a:	461e      	mov	r6, r3
 803756c:	ea55 030c 	orrs.w	r3, r5, ip
 8037570:	b086      	sub	sp, #24
 8037572:	f000 8090 	beq.w	8037696 <_nx_ip_create+0x156>
 8037576:	4604      	mov	r4, r0
 8037578:	4617      	mov	r7, r2
 803757a:	4688      	mov	r8, r1
 803757c:	f44f 62f5 	mov.w	r2, #1960	; 0x7a8
 8037580:	2100      	movs	r1, #0
 8037582:	f008 f867 	bl	803f654 <memset>
 8037586:	ea07 0006 	and.w	r0, r7, r6
 803758a:	495b      	ldr	r1, [pc, #364]	; (80376f8 <_nx_ip_create+0x1b8>)
 803758c:	4b5b      	ldr	r3, [pc, #364]	; (80376fc <_nx_ip_create+0x1bc>)
 803758e:	f8c4 7748 	str.w	r7, [r4, #1864]	; 0x748
 8037592:	f8c4 674c 	str.w	r6, [r4, #1868]	; 0x74c
 8037596:	4f5a      	ldr	r7, [pc, #360]	; (8037700 <_nx_ip_create+0x1c0>)
 8037598:	9e0f      	ldr	r6, [sp, #60]	; 0x3c
 803759a:	f8c4 0750 	str.w	r0, [r4, #1872]	; 0x750
 803759e:	2501      	movs	r5, #1
 80375a0:	2200      	movs	r2, #0
 80375a2:	f04f 407f 	mov.w	r0, #4278190080	; 0xff000000
 80375a6:	f8c4 675c 	str.w	r6, [r4, #1884]	; 0x75c
 80375aa:	f8c4 1734 	str.w	r1, [r4, #1844]	; 0x734
 80375ae:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 80375b0:	f8c4 376c 	str.w	r3, [r4, #1900]	; 0x76c
 80375b4:	f04f 41fe 	mov.w	r1, #2130706432	; 0x7f000000
 80375b8:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80375bc:	f8c4 7780 	str.w	r7, [r4, #1920]	; 0x780
 80375c0:	f504 779c 	add.w	r7, r4, #312	; 0x138
 80375c4:	f8c4 0784 	str.w	r0, [r4, #1924]	; 0x784
 80375c8:	f8c4 1788 	str.w	r1, [r4, #1928]	; 0x788
 80375cc:	f8c4 473c 	str.w	r4, [r4, #1852]	; 0x73c
 80375d0:	f8c4 4774 	str.w	r4, [r4, #1908]	; 0x774
 80375d4:	f8c4 8004 	str.w	r8, [r4, #4]
 80375d8:	f8c4 6134 	str.w	r6, [r4, #308]	; 0x134
 80375dc:	f884 5738 	strb.w	r5, [r4, #1848]	; 0x738
 80375e0:	f8a4 5770 	strh.w	r5, [r4, #1904]	; 0x770
 80375e4:	f884 5772 	strb.w	r5, [r4, #1906]	; 0x772
 80375e8:	f8c4 5130 	str.w	r5, [r4, #304]	; 0x130
 80375ec:	f8c4 2760 	str.w	r2, [r4, #1888]	; 0x760
 80375f0:	f8c4 2794 	str.w	r2, [r4, #1940]	; 0x794
 80375f4:	f8c4 378c 	str.w	r3, [r4, #1932]	; 0x78c
 80375f8:	4638      	mov	r0, r7
 80375fa:	4641      	mov	r1, r8
 80375fc:	f001 ffa4 	bl	8039548 <_tx_mutex_create>
 8037600:	2800      	cmp	r0, #0
 8037602:	d143      	bne.n	803768c <_nx_ip_create+0x14c>
 8037604:	f504 791a 	add.w	r9, r4, #616	; 0x268
 8037608:	4648      	mov	r0, r9
 803760a:	4641      	mov	r1, r8
 803760c:	f001 fcc0 	bl	8038f90 <_tx_event_flags_create>
 8037610:	2800      	cmp	r0, #0
 8037612:	d156      	bne.n	80376c2 <_nx_ip_create+0x182>
 8037614:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8037616:	4a3b      	ldr	r2, [pc, #236]	; (8037704 <_nx_ip_create+0x1c4>)
 8037618:	e9cd 3302 	strd	r3, r3, [sp, #8]
 803761c:	9b11      	ldr	r3, [sp, #68]	; 0x44
 803761e:	9301      	str	r3, [sp, #4]
 8037620:	f504 7ada 	add.w	sl, r4, #436	; 0x1b4
 8037624:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8037626:	9300      	str	r3, [sp, #0]
 8037628:	e9cd 5504 	strd	r5, r5, [sp, #16]
 803762c:	4650      	mov	r0, sl
 803762e:	4623      	mov	r3, r4
 8037630:	4641      	mov	r1, r8
 8037632:	f002 fae1 	bl	8039bf8 <_tx_thread_create>
 8037636:	2800      	cmp	r0, #0
 8037638:	d140      	bne.n	80376bc <_nx_ip_create+0x17c>
 803763a:	2364      	movs	r3, #100	; 0x64
 803763c:	e9cd 3300 	strd	r3, r3, [sp]
 8037640:	4a31      	ldr	r2, [pc, #196]	; (8037708 <_nx_ip_create+0x1c8>)
 8037642:	9502      	str	r5, [sp, #8]
 8037644:	4641      	mov	r1, r8
 8037646:	4623      	mov	r3, r4
 8037648:	f504 7023 	add.w	r0, r4, #652	; 0x28c
 803764c:	f003 f8c6 	bl	803a7dc <_tx_timer_create>
 8037650:	4606      	mov	r6, r0
 8037652:	bb28      	cbnz	r0, 80376a0 <_nx_ip_create+0x160>
 8037654:	4628      	mov	r0, r5
 8037656:	f002 fbdb 	bl	8039e10 <_tx_thread_interrupt_control>
 803765a:	4a2c      	ldr	r2, [pc, #176]	; (803770c <_nx_ip_create+0x1cc>)
 803765c:	492c      	ldr	r1, [pc, #176]	; (8037710 <_nx_ip_create+0x1d0>)
 803765e:	6813      	ldr	r3, [r2, #0]
 8037660:	6021      	str	r1, [r4, #0]
 8037662:	b3b3      	cbz	r3, 80376d2 <_nx_ip_create+0x192>
 8037664:	f8d3 2728 	ldr.w	r2, [r3, #1832]	; 0x728
 8037668:	f8c3 4728 	str.w	r4, [r3, #1832]	; 0x728
 803766c:	f8c2 4724 	str.w	r4, [r2, #1828]	; 0x724
 8037670:	f8c4 2728 	str.w	r2, [r4, #1832]	; 0x728
 8037674:	f8c4 3724 	str.w	r3, [r4, #1828]	; 0x724
 8037678:	4a26      	ldr	r2, [pc, #152]	; (8037714 <_nx_ip_create+0x1d4>)
 803767a:	6813      	ldr	r3, [r2, #0]
 803767c:	3301      	adds	r3, #1
 803767e:	6013      	str	r3, [r2, #0]
 8037680:	f002 fbc6 	bl	8039e10 <_tx_thread_interrupt_control>
 8037684:	4630      	mov	r0, r6
 8037686:	b006      	add	sp, #24
 8037688:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 803768c:	2620      	movs	r6, #32
 803768e:	4630      	mov	r0, r6
 8037690:	b006      	add	sp, #24
 8037692:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8037696:	264a      	movs	r6, #74	; 0x4a
 8037698:	4630      	mov	r0, r6
 803769a:	b006      	add	sp, #24
 803769c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80376a0:	4648      	mov	r0, r9
 80376a2:	f001 fc9d 	bl	8038fe0 <_tx_event_flags_delete>
 80376a6:	4638      	mov	r0, r7
 80376a8:	f001 ff7e 	bl	80395a8 <_tx_mutex_delete>
 80376ac:	4650      	mov	r0, sl
 80376ae:	f002 ff53 	bl	803a558 <_tx_thread_terminate>
 80376b2:	4650      	mov	r0, sl
 80376b4:	f002 fb44 	bl	8039d40 <_tx_thread_delete>
 80376b8:	2620      	movs	r6, #32
 80376ba:	e7e8      	b.n	803768e <_nx_ip_create+0x14e>
 80376bc:	4648      	mov	r0, r9
 80376be:	f001 fc8f 	bl	8038fe0 <_tx_event_flags_delete>
 80376c2:	4638      	mov	r0, r7
 80376c4:	f001 ff70 	bl	80395a8 <_tx_mutex_delete>
 80376c8:	2620      	movs	r6, #32
 80376ca:	4630      	mov	r0, r6
 80376cc:	b006      	add	sp, #24
 80376ce:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80376d2:	6014      	str	r4, [r2, #0]
 80376d4:	f8c4 4724 	str.w	r4, [r4, #1828]	; 0x724
 80376d8:	f8c4 4728 	str.w	r4, [r4, #1832]	; 0x728
 80376dc:	e7cc      	b.n	8037678 <_nx_ip_create+0x138>
 80376de:	bf00      	nop
 80376e0:	20012200 	.word	0x20012200
 80376e4:	200121fc 	.word	0x200121fc
 80376e8:	20012204 	.word	0x20012204
 80376ec:	20012208 	.word	0x20012208
 80376f0:	2001220c 	.word	0x2001220c
 80376f4:	2000245c 	.word	0x2000245c
 80376f8:	08048aac 	.word	0x08048aac
 80376fc:	08048ab0 	.word	0x08048ab0
 8037700:	7f000001 	.word	0x7f000001
 8037704:	08037e15 	.word	0x08037e15
 8037708:	08037d75 	.word	0x08037d75
 803770c:	200121f0 	.word	0x200121f0
 8037710:	49502020 	.word	0x49502020
 8037714:	200121ec 	.word	0x200121ec

08037718 <_nx_ip_deferred_link_status_process>:
 8037718:	f8d0 37a4 	ldr.w	r3, [r0, #1956]	; 0x7a4
 803771c:	b30b      	cbz	r3, 8037762 <_nx_ip_deferred_link_status_process+0x4a>
 803771e:	b530      	push	{r4, r5, lr}
 8037720:	f890 3738 	ldrb.w	r3, [r0, #1848]	; 0x738
 8037724:	b08b      	sub	sp, #44	; 0x2c
 8037726:	4604      	mov	r4, r0
 8037728:	b113      	cbz	r3, 8037730 <_nx_ip_deferred_link_status_process+0x18>
 803772a:	f894 373b 	ldrb.w	r3, [r4, #1851]	; 0x73b
 803772e:	b90b      	cbnz	r3, 8037734 <_nx_ip_deferred_link_status_process+0x1c>
 8037730:	b00b      	add	sp, #44	; 0x2c
 8037732:	bd30      	pop	{r4, r5, pc}
 8037734:	f204 7234 	addw	r2, r4, #1844	; 0x734
 8037738:	2500      	movs	r5, #0
 803773a:	210a      	movs	r1, #10
 803773c:	ab01      	add	r3, sp, #4
 803773e:	9102      	str	r1, [sp, #8]
 8037740:	9209      	str	r2, [sp, #36]	; 0x24
 8037742:	9307      	str	r3, [sp, #28]
 8037744:	a802      	add	r0, sp, #8
 8037746:	f8d4 375c 	ldr.w	r3, [r4, #1884]	; 0x75c
 803774a:	9408      	str	r4, [sp, #32]
 803774c:	f884 573b 	strb.w	r5, [r4, #1851]	; 0x73b
 8037750:	4798      	blx	r3
 8037752:	f8d4 37a4 	ldr.w	r3, [r4, #1956]	; 0x7a4
 8037756:	9a01      	ldr	r2, [sp, #4]
 8037758:	4629      	mov	r1, r5
 803775a:	4620      	mov	r0, r4
 803775c:	4798      	blx	r3
 803775e:	b00b      	add	sp, #44	; 0x2c
 8037760:	bd30      	pop	{r4, r5, pc}
 8037762:	4770      	bx	lr

08037764 <_nx_ip_driver_deferred_processing>:
 8037764:	f500 701a 	add.w	r0, r0, #616	; 0x268
 8037768:	2200      	movs	r2, #0
 803776a:	f44f 6100 	mov.w	r1, #2048	; 0x800
 803776e:	f001 bd03 	b.w	8039178 <_tx_event_flags_set>
 8037772:	bf00      	nop

08037774 <_nx_ip_initialize>:
 8037774:	4902      	ldr	r1, [pc, #8]	; (8037780 <_nx_ip_initialize+0xc>)
 8037776:	4a03      	ldr	r2, [pc, #12]	; (8037784 <_nx_ip_initialize+0x10>)
 8037778:	2300      	movs	r3, #0
 803777a:	600b      	str	r3, [r1, #0]
 803777c:	6013      	str	r3, [r2, #0]
 803777e:	4770      	bx	lr
 8037780:	200121f0 	.word	0x200121f0
 8037784:	200121ec 	.word	0x200121ec

08037788 <_nx_ip_loopback_send>:
 8037788:	b570      	push	{r4, r5, r6, lr}
 803778a:	4605      	mov	r5, r0
 803778c:	b082      	sub	sp, #8
 803778e:	460c      	mov	r4, r1
 8037790:	4616      	mov	r6, r2
 8037792:	4608      	mov	r0, r1
 8037794:	f8d5 2134 	ldr.w	r2, [r5, #308]	; 0x134
 8037798:	2300      	movs	r3, #0
 803779a:	a901      	add	r1, sp, #4
 803779c:	f000 fc96 	bl	80380cc <_nx_packet_copy>
 80377a0:	b110      	cbz	r0, 80377a8 <_nx_ip_loopback_send+0x20>
 80377a2:	b93e      	cbnz	r6, 80377b4 <_nx_ip_loopback_send+0x2c>
 80377a4:	b002      	add	sp, #8
 80377a6:	bd70      	pop	{r4, r5, r6, pc}
 80377a8:	9901      	ldr	r1, [sp, #4]
 80377aa:	4628      	mov	r0, r5
 80377ac:	f000 f808 	bl	80377c0 <_nx_ip_packet_deferred_receive>
 80377b0:	2e00      	cmp	r6, #0
 80377b2:	d0f7      	beq.n	80377a4 <_nx_ip_loopback_send+0x1c>
 80377b4:	4620      	mov	r0, r4
 80377b6:	f000 fe8b 	bl	80384d0 <_nx_packet_transmit_release>
 80377ba:	b002      	add	sp, #8
 80377bc:	bd70      	pop	{r4, r5, r6, pc}
 80377be:	bf00      	nop

080377c0 <_nx_ip_packet_deferred_receive>:
 80377c0:	b570      	push	{r4, r5, r6, lr}
 80377c2:	4604      	mov	r4, r0
 80377c4:	2001      	movs	r0, #1
 80377c6:	460d      	mov	r5, r1
 80377c8:	f002 fb22 	bl	8039e10 <_tx_thread_interrupt_control>
 80377cc:	f8d4 6194 	ldr.w	r6, [r4, #404]	; 0x194
 80377d0:	b156      	cbz	r6, 80377e8 <_nx_ip_packet_deferred_receive+0x28>
 80377d2:	f8d4 2198 	ldr.w	r2, [r4, #408]	; 0x198
 80377d6:	2300      	movs	r3, #0
 80377d8:	6055      	str	r5, [r2, #4]
 80377da:	606b      	str	r3, [r5, #4]
 80377dc:	f8c4 5198 	str.w	r5, [r4, #408]	; 0x198
 80377e0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80377e4:	f002 bb14 	b.w	8039e10 <_tx_thread_interrupt_control>
 80377e8:	e9c4 5565 	strd	r5, r5, [r4, #404]	; 0x194
 80377ec:	606e      	str	r6, [r5, #4]
 80377ee:	f002 fb0f 	bl	8039e10 <_tx_thread_interrupt_control>
 80377f2:	4632      	mov	r2, r6
 80377f4:	f504 701a 	add.w	r0, r4, #616	; 0x268
 80377f8:	2108      	movs	r1, #8
 80377fa:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80377fe:	f001 bcbb 	b.w	8039178 <_tx_event_flags_set>
 8037802:	bf00      	nop

08037804 <_nx_ip_packet_receive>:
 8037804:	69cb      	ldr	r3, [r1, #28]
 8037806:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 803780a:	460c      	mov	r4, r1
 803780c:	4605      	mov	r5, r0
 803780e:	2b00      	cmp	r3, #0
 8037810:	f000 8106 	beq.w	8037a20 <_nx_ip_packet_receive+0x21c>
 8037814:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
 8037816:	e9d7 e000 	ldrd	lr, r0, [r7]
 803781a:	e9d7 2102 	ldrd	r2, r1, [r7, #8]
 803781e:	ea80 4630 	eor.w	r6, r0, r0, ror #16
 8037822:	0a36      	lsrs	r6, r6, #8
 8037824:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8037828:	ea86 2630 	eor.w	r6, r6, r0, ror #8
 803782c:	ea82 4032 	eor.w	r0, r2, r2, ror #16
 8037830:	0a00      	lsrs	r0, r0, #8
 8037832:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 8037836:	ea80 2032 	eor.w	r0, r0, r2, ror #8
 803783a:	ea81 4231 	eor.w	r2, r1, r1, ror #16
 803783e:	f8d7 c010 	ldr.w	ip, [r7, #16]
 8037842:	607e      	str	r6, [r7, #4]
 8037844:	ea8e 433e 	eor.w	r3, lr, lr, ror #16
 8037848:	0a12      	lsrs	r2, r2, #8
 803784a:	0a1b      	lsrs	r3, r3, #8
 803784c:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8037850:	ea82 2231 	eor.w	r2, r2, r1, ror #8
 8037854:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8037858:	ea8c 413c 	eor.w	r1, ip, ip, ror #16
 803785c:	ea83 233e 	eor.w	r3, r3, lr, ror #8
 8037860:	0a09      	lsrs	r1, r1, #8
 8037862:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 8037866:	b29e      	uxth	r6, r3
 8037868:	ea81 213c 	eor.w	r1, r1, ip, ror #8
 803786c:	2e13      	cmp	r6, #19
 803786e:	e9c7 0202 	strd	r0, r2, [r7, #8]
 8037872:	603b      	str	r3, [r7, #0]
 8037874:	6139      	str	r1, [r7, #16]
 8037876:	f240 80b2 	bls.w	80379de <_nx_ip_packet_receive+0x1da>
 803787a:	69a2      	ldr	r2, [r4, #24]
 803787c:	4296      	cmp	r6, r2
 803787e:	d022      	beq.n	80378c6 <_nx_ip_packet_receive+0xc2>
 8037880:	f200 80ad 	bhi.w	80379de <_nx_ip_packet_receive+0x1da>
 8037884:	eba2 0806 	sub.w	r8, r2, r6
 8037888:	61a6      	str	r6, [r4, #24]
 803788a:	2600      	movs	r6, #0
 803788c:	6920      	ldr	r0, [r4, #16]
 803788e:	2800      	cmp	r0, #0
 8037890:	f000 80db 	beq.w	8037a4a <_nx_ip_packet_receive+0x246>
 8037894:	e9d0 320b 	ldrd	r3, r2, [r0, #44]	; 0x2c
 8037898:	1ad3      	subs	r3, r2, r3
 803789a:	4543      	cmp	r3, r8
 803789c:	f200 80e1 	bhi.w	8037a62 <_nx_ip_packet_receive+0x25e>
 80378a0:	eba8 0803 	sub.w	r8, r8, r3
 80378a4:	4623      	mov	r3, r4
 80378a6:	461a      	mov	r2, r3
 80378a8:	68db      	ldr	r3, [r3, #12]
 80378aa:	4298      	cmp	r0, r3
 80378ac:	d1fb      	bne.n	80378a6 <_nx_ip_packet_receive+0xa2>
 80378ae:	60d6      	str	r6, [r2, #12]
 80378b0:	42a2      	cmp	r2, r4
 80378b2:	bf08      	it	eq
 80378b4:	2200      	moveq	r2, #0
 80378b6:	6122      	str	r2, [r4, #16]
 80378b8:	f000 fdae 	bl	8038418 <_nx_packet_release>
 80378bc:	f1b8 0f00 	cmp.w	r8, #0
 80378c0:	d1e4      	bne.n	803788c <_nx_ip_packet_receive+0x88>
 80378c2:	683b      	ldr	r3, [r7, #0]
 80378c4:	6939      	ldr	r1, [r7, #16]
 80378c6:	f3c3 6303 	ubfx	r3, r3, #24, #4
 80378ca:	2b05      	cmp	r3, #5
 80378cc:	d920      	bls.n	8037910 <_nx_ip_packet_receive+0x10c>
 80378ce:	f103 4680 	add.w	r6, r3, #1073741824	; 0x40000000
 80378d2:	3e01      	subs	r6, #1
 80378d4:	eb07 0286 	add.w	r2, r7, r6, lsl #2
 80378d8:	f847 1026 	str.w	r1, [r7, r6, lsl #2]
 80378dc:	68f9      	ldr	r1, [r7, #12]
 80378de:	f842 1c04 	str.w	r1, [r2, #-4]
 80378e2:	68b9      	ldr	r1, [r7, #8]
 80378e4:	f842 1c08 	str.w	r1, [r2, #-8]
 80378e8:	6879      	ldr	r1, [r7, #4]
 80378ea:	f842 1c0c 	str.w	r1, [r2, #-12]
 80378ee:	6839      	ldr	r1, [r7, #0]
 80378f0:	f021 419e 	bic.w	r1, r1, #1325400064	; 0x4f000000
 80378f4:	f041 418a 	orr.w	r1, r1, #1157627904	; 0x45000000
 80378f8:	f842 1c10 	str.w	r1, [r2, #-16]
 80378fc:	69a0      	ldr	r0, [r4, #24]
 80378fe:	f857 1026 	ldr.w	r1, [r7, r6, lsl #2]
 8037902:	3b05      	subs	r3, #5
 8037904:	f1a2 0710 	sub.w	r7, r2, #16
 8037908:	eba0 0383 	sub.w	r3, r0, r3, lsl #2
 803790c:	62e7      	str	r7, [r4, #44]	; 0x2c
 803790e:	61a3      	str	r3, [r4, #24]
 8037910:	69e2      	ldr	r2, [r4, #28]
 8037912:	6953      	ldr	r3, [r2, #20]
 8037914:	428b      	cmp	r3, r1
 8037916:	d00e      	beq.n	8037936 <_nx_ip_packet_receive+0x132>
 8037918:	b169      	cbz	r1, 8037936 <_nx_ip_packet_receive+0x132>
 803791a:	e9d2 3006 	ldrd	r3, r0, [r2, #24]
 803791e:	ea03 0601 	and.w	r6, r3, r1
 8037922:	4286      	cmp	r6, r0
 8037924:	f000 8085 	beq.w	8037a32 <_nx_ip_packet_receive+0x22e>
 8037928:	1c4b      	adds	r3, r1, #1
 803792a:	d004      	beq.n	8037936 <_nx_ip_packet_receive+0x132>
 803792c:	f101 4301 	add.w	r3, r1, #2164260864	; 0x81000000
 8037930:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 8037934:	d224      	bcs.n	8037980 <_nx_ip_packet_receive+0x17c>
 8037936:	687b      	ldr	r3, [r7, #4]
 8037938:	f3c3 030d 	ubfx	r3, r3, #0, #14
 803793c:	2b00      	cmp	r3, #0
 803793e:	d153      	bne.n	80379e8 <_nx_ip_packet_receive+0x1e4>
 8037940:	68bb      	ldr	r3, [r7, #8]
 8037942:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 8037944:	69a2      	ldr	r2, [r4, #24]
 8037946:	f403 037f 	and.w	r3, r3, #16711680	; 0xff0000
 803794a:	3114      	adds	r1, #20
 803794c:	3a14      	subs	r2, #20
 803794e:	f5b3 1f88 	cmp.w	r3, #1114112	; 0x110000
 8037952:	62e1      	str	r1, [r4, #44]	; 0x2c
 8037954:	61a2      	str	r2, [r4, #24]
 8037956:	d073      	beq.n	8037a40 <_nx_ip_packet_receive+0x23c>
 8037958:	f5b3 2fc0 	cmp.w	r3, #393216	; 0x60000
 803795c:	d064      	beq.n	8037a28 <_nx_ip_packet_receive+0x224>
 803795e:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8037962:	f000 8089 	beq.w	8037a78 <_nx_ip_packet_receive+0x274>
 8037966:	f5b3 3f00 	cmp.w	r3, #131072	; 0x20000
 803796a:	f000 808f 	beq.w	8037a8c <_nx_ip_packet_receive+0x288>
 803796e:	f8d5 319c 	ldr.w	r3, [r5, #412]	; 0x19c
 8037972:	2b00      	cmp	r3, #0
 8037974:	d033      	beq.n	80379de <_nx_ip_packet_receive+0x1da>
 8037976:	4621      	mov	r1, r4
 8037978:	4628      	mov	r0, r5
 803797a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 803797e:	4718      	bx	r3
 8037980:	4628      	mov	r0, r5
 8037982:	f7ff fdc1 	bl	8037508 <_nx_igmp_multicast_check>
 8037986:	2800      	cmp	r0, #0
 8037988:	d1d5      	bne.n	8037936 <_nx_ip_packet_receive+0x132>
 803798a:	f8d5 312c 	ldr.w	r3, [r5, #300]	; 0x12c
 803798e:	2b00      	cmp	r3, #0
 8037990:	d1f1      	bne.n	8037976 <_nx_ip_packet_receive+0x172>
 8037992:	69e3      	ldr	r3, [r4, #28]
 8037994:	695b      	ldr	r3, [r3, #20]
 8037996:	bb13      	cbnz	r3, 80379de <_nx_ip_packet_receive+0x1da>
 8037998:	68bb      	ldr	r3, [r7, #8]
 803799a:	f403 037f 	and.w	r3, r3, #16711680	; 0xff0000
 803799e:	f5b3 1f88 	cmp.w	r3, #1114112	; 0x110000
 80379a2:	d11c      	bne.n	80379de <_nx_ip_packet_receive+0x1da>
 80379a4:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
 80379a6:	69a1      	ldr	r1, [r4, #24]
 80379a8:	6942      	ldr	r2, [r0, #20]
 80379aa:	ea82 4332 	eor.w	r3, r2, r2, ror #16
 80379ae:	0a1b      	lsrs	r3, r3, #8
 80379b0:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80379b4:	ea83 2332 	eor.w	r3, r3, r2, ror #8
 80379b8:	ea83 4233 	eor.w	r2, r3, r3, ror #16
 80379bc:	f100 0614 	add.w	r6, r0, #20
 80379c0:	0a12      	lsrs	r2, r2, #8
 80379c2:	62e6      	str	r6, [r4, #44]	; 0x2c
 80379c4:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 80379c8:	0c1e      	lsrs	r6, r3, #16
 80379ca:	ea82 2233 	eor.w	r2, r2, r3, ror #8
 80379ce:	3914      	subs	r1, #20
 80379d0:	2e43      	cmp	r6, #67	; 0x43
 80379d2:	61a1      	str	r1, [r4, #24]
 80379d4:	6142      	str	r2, [r0, #20]
 80379d6:	d102      	bne.n	80379de <_nx_ip_packet_receive+0x1da>
 80379d8:	b29b      	uxth	r3, r3
 80379da:	2b44      	cmp	r3, #68	; 0x44
 80379dc:	d030      	beq.n	8037a40 <_nx_ip_packet_receive+0x23c>
 80379de:	4620      	mov	r0, r4
 80379e0:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80379e4:	f000 bd18 	b.w	8038418 <_nx_packet_release>
 80379e8:	f8d5 32bc 	ldr.w	r3, [r5, #700]	; 0x2bc
 80379ec:	2b00      	cmp	r3, #0
 80379ee:	d0f6      	beq.n	80379de <_nx_ip_packet_receive+0x1da>
 80379f0:	2001      	movs	r0, #1
 80379f2:	f002 fa0d 	bl	8039e10 <_tx_thread_interrupt_control>
 80379f6:	f8d5 32c8 	ldr.w	r3, [r5, #712]	; 0x2c8
 80379fa:	2b00      	cmp	r3, #0
 80379fc:	d042      	beq.n	8037a84 <_nx_ip_packet_receive+0x280>
 80379fe:	f8d5 22cc 	ldr.w	r2, [r5, #716]	; 0x2cc
 8037a02:	2300      	movs	r3, #0
 8037a04:	6054      	str	r4, [r2, #4]
 8037a06:	6063      	str	r3, [r4, #4]
 8037a08:	f8c5 42cc 	str.w	r4, [r5, #716]	; 0x2cc
 8037a0c:	f002 fa00 	bl	8039e10 <_tx_thread_interrupt_control>
 8037a10:	f505 701a 	add.w	r0, r5, #616	; 0x268
 8037a14:	2200      	movs	r2, #0
 8037a16:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8037a1a:	2102      	movs	r1, #2
 8037a1c:	f001 bbac 	b.w	8039178 <_tx_event_flags_set>
 8037a20:	f200 7334 	addw	r3, r0, #1844	; 0x734
 8037a24:	61cb      	str	r3, [r1, #28]
 8037a26:	e6f5      	b.n	8037814 <_nx_ip_packet_receive+0x10>
 8037a28:	f8d5 34ac 	ldr.w	r3, [r5, #1196]	; 0x4ac
 8037a2c:	2b00      	cmp	r3, #0
 8037a2e:	d1a2      	bne.n	8037976 <_nx_ip_packet_receive+0x172>
 8037a30:	e7d5      	b.n	80379de <_nx_ip_packet_receive+0x1da>
 8037a32:	43d8      	mvns	r0, r3
 8037a34:	ea21 0303 	bic.w	r3, r1, r3
 8037a38:	4298      	cmp	r0, r3
 8037a3a:	f47f af75 	bne.w	8037928 <_nx_ip_packet_receive+0x124>
 8037a3e:	e77a      	b.n	8037936 <_nx_ip_packet_receive+0x132>
 8037a40:	f8d5 3420 	ldr.w	r3, [r5, #1056]	; 0x420
 8037a44:	2b00      	cmp	r3, #0
 8037a46:	d196      	bne.n	8037976 <_nx_ip_packet_receive+0x172>
 8037a48:	e7c9      	b.n	80379de <_nx_ip_packet_receive+0x1da>
 8037a4a:	683b      	ldr	r3, [r7, #0]
 8037a4c:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8037a4e:	6939      	ldr	r1, [r7, #16]
 8037a50:	f3c3 6303 	ubfx	r3, r3, #24, #4
 8037a54:	eba2 0208 	sub.w	r2, r2, r8
 8037a58:	2b05      	cmp	r3, #5
 8037a5a:	6322      	str	r2, [r4, #48]	; 0x30
 8037a5c:	f67f af58 	bls.w	8037910 <_nx_ip_packet_receive+0x10c>
 8037a60:	e735      	b.n	80378ce <_nx_ip_packet_receive+0xca>
 8037a62:	683b      	ldr	r3, [r7, #0]
 8037a64:	6939      	ldr	r1, [r7, #16]
 8037a66:	f3c3 6303 	ubfx	r3, r3, #24, #4
 8037a6a:	eba2 0208 	sub.w	r2, r2, r8
 8037a6e:	2b05      	cmp	r3, #5
 8037a70:	6302      	str	r2, [r0, #48]	; 0x30
 8037a72:	f67f af4d 	bls.w	8037910 <_nx_ip_packet_receive+0x10c>
 8037a76:	e72a      	b.n	80378ce <_nx_ip_packet_receive+0xca>
 8037a78:	f8d5 3384 	ldr.w	r3, [r5, #900]	; 0x384
 8037a7c:	2b00      	cmp	r3, #0
 8037a7e:	f47f af7a 	bne.w	8037976 <_nx_ip_packet_receive+0x172>
 8037a82:	e7ac      	b.n	80379de <_nx_ip_packet_receive+0x1da>
 8037a84:	e9c5 44b2 	strd	r4, r4, [r5, #712]	; 0x2c8
 8037a88:	6063      	str	r3, [r4, #4]
 8037a8a:	e7bf      	b.n	8037a0c <_nx_ip_packet_receive+0x208>
 8037a8c:	f8d5 3370 	ldr.w	r3, [r5, #880]	; 0x370
 8037a90:	2b00      	cmp	r3, #0
 8037a92:	f47f af70 	bne.w	8037976 <_nx_ip_packet_receive+0x172>
 8037a96:	e7a2      	b.n	80379de <_nx_ip_packet_receive+0x1da>

08037a98 <_nx_ip_packet_send>:
 8037a98:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8037a9c:	460c      	mov	r4, r1
 8037a9e:	6ace      	ldr	r6, [r1, #44]	; 0x2c
 8037aa0:	6989      	ldr	r1, [r1, #24]
 8037aa2:	f8d4 e01c 	ldr.w	lr, [r4, #28]
 8037aa6:	f1a6 0714 	sub.w	r7, r6, #20
 8037aaa:	3114      	adds	r1, #20
 8037aac:	b089      	sub	sp, #36	; 0x24
 8037aae:	62e7      	str	r7, [r4, #44]	; 0x2c
 8037ab0:	61a1      	str	r1, [r4, #24]
 8037ab2:	f1be 0f00 	cmp.w	lr, #0
 8037ab6:	d07f      	beq.n	8037bb8 <_nx_ip_packet_send+0x120>
 8037ab8:	f8d4 8020 	ldr.w	r8, [r4, #32]
 8037abc:	f1b8 0f00 	cmp.w	r8, #0
 8037ac0:	d07a      	beq.n	8037bb8 <_nx_ip_packet_send+0x120>
 8037ac2:	4605      	mov	r5, r0
 8037ac4:	6a60      	ldr	r0, [r4, #36]	; 0x24
 8037ac6:	4287      	cmp	r7, r0
 8037ac8:	d376      	bcc.n	8037bb8 <_nx_ip_packet_send+0x120>
 8037aca:	b288      	uxth	r0, r1
 8037acc:	f8d5 b130 	ldr.w	fp, [r5, #304]	; 0x130
 8037ad0:	f8de a014 	ldr.w	sl, [lr, #20]
 8037ad4:	4303      	orrs	r3, r0
 8037ad6:	9814      	ldr	r0, [sp, #80]	; 0x50
 8037ad8:	ea40 470b 	orr.w	r7, r0, fp, lsl #16
 8037adc:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8037ade:	4684      	mov	ip, r0
 8037ae0:	9812      	ldr	r0, [sp, #72]	; 0x48
 8037ae2:	ea4c 6000 	orr.w	r0, ip, r0, lsl #24
 8037ae6:	ea87 4c37 	eor.w	ip, r7, r7, ror #16
 8037aea:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8037aee:	f043 438a 	orr.w	r3, r3, #1157627904	; 0x45000000
 8037af2:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8037af6:	ea83 4933 	eor.w	r9, r3, r3, ror #16
 8037afa:	ea8c 2c37 	eor.w	ip, ip, r7, ror #8
 8037afe:	ea80 4730 	eor.w	r7, r0, r0, ror #16
 8037b02:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8037b06:	0a3f      	lsrs	r7, r7, #8
 8037b08:	f009 19ff 	and.w	r9, r9, #16711935	; 0xff00ff
 8037b0c:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8037b10:	ea89 2933 	eor.w	r9, r9, r3, ror #8
 8037b14:	ea87 2730 	eor.w	r7, r7, r0, ror #8
 8037b18:	ea8a 433a 	eor.w	r3, sl, sl, ror #16
 8037b1c:	ea82 4032 	eor.w	r0, r2, r2, ror #16
 8037b20:	0a1b      	lsrs	r3, r3, #8
 8037b22:	0a00      	lsrs	r0, r0, #8
 8037b24:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8037b28:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 8037b2c:	f10b 0b01 	add.w	fp, fp, #1
 8037b30:	ea83 233a 	eor.w	r3, r3, sl, ror #8
 8037b34:	ea80 2032 	eor.w	r0, r0, r2, ror #8
 8037b38:	4592      	cmp	sl, r2
 8037b3a:	f8c5 b130 	str.w	fp, [r5, #304]	; 0x130
 8037b3e:	e946 9c05 	strd	r9, ip, [r6, #-20]
 8037b42:	e946 7303 	strd	r7, r3, [r6, #-12]
 8037b46:	f846 0c04 	str.w	r0, [r6, #-4]
 8037b4a:	d04b      	beq.n	8037be4 <_nx_ip_packet_send+0x14c>
 8037b4c:	f102 4301 	add.w	r3, r2, #2164260864	; 0x81000000
 8037b50:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 8037b54:	d346      	bcc.n	8037be4 <_nx_ip_packet_send+0x14c>
 8037b56:	f89e 3005 	ldrb.w	r3, [lr, #5]
 8037b5a:	b39b      	cbz	r3, 8037bc4 <_nx_ip_packet_send+0x12c>
 8037b5c:	1c56      	adds	r6, r2, #1
 8037b5e:	d04e      	beq.n	8037bfe <_nx_ip_packet_send+0x166>
 8037b60:	e9de 3006 	ldrd	r3, r0, [lr, #24]
 8037b64:	ea03 0602 	and.w	r6, r3, r2
 8037b68:	4286      	cmp	r6, r0
 8037b6a:	d043      	beq.n	8037bf4 <_nx_ip_packet_send+0x15c>
 8037b6c:	f002 4370 	and.w	r3, r2, #4026531840	; 0xf0000000
 8037b70:	f1b3 4f60 	cmp.w	r3, #3758096384	; 0xe0000000
 8037b74:	d154      	bne.n	8037c20 <_nx_ip_packet_send+0x188>
 8037b76:	f3c2 0316 	ubfx	r3, r2, #0, #23
 8037b7a:	f043 43bc 	orr.w	r3, r3, #1577058304	; 0x5e000000
 8037b7e:	f44f 7080 	mov.w	r0, #256	; 0x100
 8037b82:	e9cd 0302 	strd	r0, r3, [sp, #8]
 8037b86:	f8cd e01c 	str.w	lr, [sp, #28]
 8037b8a:	f505 7038 	add.w	r0, r5, #736	; 0x2e0
 8037b8e:	2300      	movs	r3, #0
 8037b90:	f850 6b04 	ldr.w	r6, [r0], #4
 8037b94:	4296      	cmp	r6, r2
 8037b96:	d07f      	beq.n	8037c98 <_nx_ip_packet_send+0x200>
 8037b98:	3301      	adds	r3, #1
 8037b9a:	2b07      	cmp	r3, #7
 8037b9c:	d1f8      	bne.n	8037b90 <_nx_ip_packet_send+0xf8>
 8037b9e:	f8de 3020 	ldr.w	r3, [lr, #32]
 8037ba2:	9506      	str	r5, [sp, #24]
 8037ba4:	2200      	movs	r2, #0
 8037ba6:	428b      	cmp	r3, r1
 8037ba8:	9404      	str	r4, [sp, #16]
 8037baa:	f8cd e01c 	str.w	lr, [sp, #28]
 8037bae:	9200      	str	r2, [sp, #0]
 8037bb0:	d211      	bcs.n	8037bd6 <_nx_ip_packet_send+0x13e>
 8037bb2:	f8d5 32b8 	ldr.w	r3, [r5, #696]	; 0x2b8
 8037bb6:	b983      	cbnz	r3, 8037bda <_nx_ip_packet_send+0x142>
 8037bb8:	4620      	mov	r0, r4
 8037bba:	f000 fc89 	bl	80384d0 <_nx_packet_transmit_release>
 8037bbe:	b009      	add	sp, #36	; 0x24
 8037bc0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8037bc4:	f8de 2020 	ldr.w	r2, [lr, #32]
 8037bc8:	9506      	str	r5, [sp, #24]
 8037bca:	4291      	cmp	r1, r2
 8037bcc:	9300      	str	r3, [sp, #0]
 8037bce:	9404      	str	r4, [sp, #16]
 8037bd0:	f8cd e01c 	str.w	lr, [sp, #28]
 8037bd4:	d8ed      	bhi.n	8037bb2 <_nx_ip_packet_send+0x11a>
 8037bd6:	f8de 3028 	ldr.w	r3, [lr, #40]	; 0x28
 8037bda:	4668      	mov	r0, sp
 8037bdc:	4798      	blx	r3
 8037bde:	b009      	add	sp, #36	; 0x24
 8037be0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8037be4:	4621      	mov	r1, r4
 8037be6:	4628      	mov	r0, r5
 8037be8:	2201      	movs	r2, #1
 8037bea:	f7ff fdcd 	bl	8037788 <_nx_ip_loopback_send>
 8037bee:	b009      	add	sp, #36	; 0x24
 8037bf0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8037bf4:	43d8      	mvns	r0, r3
 8037bf6:	ea22 0303 	bic.w	r3, r2, r3
 8037bfa:	4298      	cmp	r0, r3
 8037bfc:	d1b6      	bne.n	8037b6c <_nx_ip_packet_send+0xd4>
 8037bfe:	f8de 3020 	ldr.w	r3, [lr, #32]
 8037c02:	9506      	str	r5, [sp, #24]
 8037c04:	2204      	movs	r2, #4
 8037c06:	9200      	str	r2, [sp, #0]
 8037c08:	f64f 70ff 	movw	r0, #65535	; 0xffff
 8037c0c:	f04f 32ff 	mov.w	r2, #4294967295
 8037c10:	4299      	cmp	r1, r3
 8037c12:	e9cd 0202 	strd	r0, r2, [sp, #8]
 8037c16:	9404      	str	r4, [sp, #16]
 8037c18:	f8cd e01c 	str.w	lr, [sp, #28]
 8037c1c:	d9db      	bls.n	8037bd6 <_nx_ip_packet_send+0x13e>
 8037c1e:	e7c8      	b.n	8037bb2 <_nx_ip_packet_send+0x11a>
 8037c20:	eb08 2718 	add.w	r7, r8, r8, lsr #8
 8037c24:	f007 071f 	and.w	r7, r7, #31
 8037c28:	eb05 0987 	add.w	r9, r5, r7, lsl #2
 8037c2c:	2001      	movs	r0, #1
 8037c2e:	f002 f8ef 	bl	8039e10 <_tx_thread_interrupt_control>
 8037c32:	f8d9 6664 	ldr.w	r6, [r9, #1636]	; 0x664
 8037c36:	4601      	mov	r1, r0
 8037c38:	b116      	cbz	r6, 8037c40 <_nx_ip_packet_send+0x1a8>
 8037c3a:	6a33      	ldr	r3, [r6, #32]
 8037c3c:	4598      	cmp	r8, r3
 8037c3e:	d056      	beq.n	8037cee <_nx_ip_packet_send+0x256>
 8037c40:	4608      	mov	r0, r1
 8037c42:	f002 f8e5 	bl	8039e10 <_tx_thread_interrupt_control>
 8037c46:	f8d9 2664 	ldr.w	r2, [r9, #1636]	; 0x664
 8037c4a:	4616      	mov	r6, r2
 8037c4c:	b12e      	cbz	r6, 8037c5a <_nx_ip_packet_send+0x1c2>
 8037c4e:	6a33      	ldr	r3, [r6, #32]
 8037c50:	4598      	cmp	r8, r3
 8037c52:	d02f      	beq.n	8037cb4 <_nx_ip_packet_send+0x21c>
 8037c54:	6976      	ldr	r6, [r6, #20]
 8037c56:	42b2      	cmp	r2, r6
 8037c58:	d1f8      	bne.n	8037c4c <_nx_ip_packet_send+0x1b4>
 8037c5a:	f8d5 36f8 	ldr.w	r3, [r5, #1784]	; 0x6f8
 8037c5e:	2b00      	cmp	r3, #0
 8037c60:	d0aa      	beq.n	8037bb8 <_nx_ip_packet_send+0x120>
 8037c62:	f207 1199 	addw	r1, r7, #409	; 0x199
 8037c66:	eb05 0181 	add.w	r1, r5, r1, lsl #2
 8037c6a:	4628      	mov	r0, r5
 8037c6c:	4798      	blx	r3
 8037c6e:	2800      	cmp	r0, #0
 8037c70:	d1a2      	bne.n	8037bb8 <_nx_ip_packet_send+0x120>
 8037c72:	f8d9 3664 	ldr.w	r3, [r9, #1636]	; 0x664
 8037c76:	69e2      	ldr	r2, [r4, #28]
 8037c78:	699b      	ldr	r3, [r3, #24]
 8037c7a:	260a      	movs	r6, #10
 8037c7c:	e9c3 8008 	strd	r8, r0, [r3, #32]
 8037c80:	6298      	str	r0, [r3, #40]	; 0x28
 8037c82:	6098      	str	r0, [r3, #8]
 8037c84:	605e      	str	r6, [r3, #4]
 8037c86:	62da      	str	r2, [r3, #44]	; 0x2c
 8037c88:	f8d5 6704 	ldr.w	r6, [r5, #1796]	; 0x704
 8037c8c:	6060      	str	r0, [r4, #4]
 8037c8e:	4641      	mov	r1, r8
 8037c90:	631c      	str	r4, [r3, #48]	; 0x30
 8037c92:	4628      	mov	r0, r5
 8037c94:	47b0      	blx	r6
 8037c96:	e792      	b.n	8037bbe <_nx_ip_packet_send+0x126>
 8037c98:	33d4      	adds	r3, #212	; 0xd4
 8037c9a:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 8037c9e:	2b00      	cmp	r3, #0
 8037ca0:	f43f af7d 	beq.w	8037b9e <_nx_ip_packet_send+0x106>
 8037ca4:	4621      	mov	r1, r4
 8037ca6:	2200      	movs	r2, #0
 8037ca8:	4628      	mov	r0, r5
 8037caa:	f7ff fd6d 	bl	8037788 <_nx_ip_loopback_send>
 8037cae:	e9d4 1e06 	ldrd	r1, lr, [r4, #24]
 8037cb2:	e774      	b.n	8037b9e <_nx_ip_packet_send+0x106>
 8037cb4:	e9d6 2309 	ldrd	r2, r3, [r6, #36]	; 0x24
 8037cb8:	ea52 0703 	orrs.w	r7, r2, r3
 8037cbc:	d02c      	beq.n	8037d18 <_nx_ip_packet_send+0x280>
 8037cbe:	2001      	movs	r0, #1
 8037cc0:	e9cd 2302 	strd	r2, r3, [sp, #8]
 8037cc4:	f002 f8a4 	bl	8039e10 <_tx_thread_interrupt_control>
 8037cc8:	f8c9 6664 	str.w	r6, [r9, #1636]	; 0x664
 8037ccc:	f002 f8a0 	bl	8039e10 <_tx_thread_interrupt_control>
 8037cd0:	e9d4 1306 	ldrd	r1, r3, [r4, #24]
 8037cd4:	6a1a      	ldr	r2, [r3, #32]
 8037cd6:	9506      	str	r5, [sp, #24]
 8037cd8:	2000      	movs	r0, #0
 8037cda:	4291      	cmp	r1, r2
 8037cdc:	9404      	str	r4, [sp, #16]
 8037cde:	9307      	str	r3, [sp, #28]
 8037ce0:	9000      	str	r0, [sp, #0]
 8037ce2:	f63f af66 	bhi.w	8037bb2 <_nx_ip_packet_send+0x11a>
 8037ce6:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8037ce8:	4668      	mov	r0, sp
 8037cea:	4798      	blx	r3
 8037cec:	e767      	b.n	8037bbe <_nx_ip_packet_send+0x126>
 8037cee:	e9d6 7309 	ldrd	r7, r3, [r6, #36]	; 0x24
 8037cf2:	ea57 0203 	orrs.w	r2, r7, r3
 8037cf6:	d023      	beq.n	8037d40 <_nx_ip_packet_send+0x2a8>
 8037cf8:	69e2      	ldr	r2, [r4, #28]
 8037cfa:	9207      	str	r2, [sp, #28]
 8037cfc:	e9cd 7302 	strd	r7, r3, [sp, #8]
 8037d00:	f002 f886 	bl	8039e10 <_tx_thread_interrupt_control>
 8037d04:	e9d4 1306 	ldrd	r1, r3, [r4, #24]
 8037d08:	6a1a      	ldr	r2, [r3, #32]
 8037d0a:	9506      	str	r5, [sp, #24]
 8037d0c:	2000      	movs	r0, #0
 8037d0e:	4291      	cmp	r1, r2
 8037d10:	9404      	str	r4, [sp, #16]
 8037d12:	9000      	str	r0, [sp, #0]
 8037d14:	d9e7      	bls.n	8037ce6 <_nx_ip_packet_send+0x24e>
 8037d16:	e74c      	b.n	8037bb2 <_nx_ip_packet_send+0x11a>
 8037d18:	2001      	movs	r0, #1
 8037d1a:	f002 f879 	bl	8039e10 <_tx_thread_interrupt_control>
 8037d1e:	6b35      	ldr	r5, [r6, #48]	; 0x30
 8037d20:	6067      	str	r7, [r4, #4]
 8037d22:	4601      	mov	r1, r0
 8037d24:	b315      	cbz	r5, 8037d6c <_nx_ip_packet_send+0x2d4>
 8037d26:	462b      	mov	r3, r5
 8037d28:	461a      	mov	r2, r3
 8037d2a:	685b      	ldr	r3, [r3, #4]
 8037d2c:	3701      	adds	r7, #1
 8037d2e:	2b00      	cmp	r3, #0
 8037d30:	d1fa      	bne.n	8037d28 <_nx_ip_packet_send+0x290>
 8037d32:	2f03      	cmp	r7, #3
 8037d34:	6054      	str	r4, [r2, #4]
 8037d36:	d80f      	bhi.n	8037d58 <_nx_ip_packet_send+0x2c0>
 8037d38:	4608      	mov	r0, r1
 8037d3a:	f002 f869 	bl	8039e10 <_tx_thread_interrupt_control>
 8037d3e:	e73e      	b.n	8037bbe <_nx_ip_packet_send+0x126>
 8037d40:	6b35      	ldr	r5, [r6, #48]	; 0x30
 8037d42:	6062      	str	r2, [r4, #4]
 8037d44:	b195      	cbz	r5, 8037d6c <_nx_ip_packet_send+0x2d4>
 8037d46:	462b      	mov	r3, r5
 8037d48:	4618      	mov	r0, r3
 8037d4a:	685b      	ldr	r3, [r3, #4]
 8037d4c:	3201      	adds	r2, #1
 8037d4e:	2b00      	cmp	r3, #0
 8037d50:	d1fa      	bne.n	8037d48 <_nx_ip_packet_send+0x2b0>
 8037d52:	2a03      	cmp	r2, #3
 8037d54:	6044      	str	r4, [r0, #4]
 8037d56:	d9ef      	bls.n	8037d38 <_nx_ip_packet_send+0x2a0>
 8037d58:	686a      	ldr	r2, [r5, #4]
 8037d5a:	6332      	str	r2, [r6, #48]	; 0x30
 8037d5c:	4608      	mov	r0, r1
 8037d5e:	606b      	str	r3, [r5, #4]
 8037d60:	f002 f856 	bl	8039e10 <_tx_thread_interrupt_control>
 8037d64:	4628      	mov	r0, r5
 8037d66:	f000 fbb3 	bl	80384d0 <_nx_packet_transmit_release>
 8037d6a:	e728      	b.n	8037bbe <_nx_ip_packet_send+0x126>
 8037d6c:	6334      	str	r4, [r6, #48]	; 0x30
 8037d6e:	f002 f84f 	bl	8039e10 <_tx_thread_interrupt_control>
 8037d72:	e724      	b.n	8037bbe <_nx_ip_packet_send+0x126>

08037d74 <_nx_ip_periodic_timer_entry>:
 8037d74:	f500 701a 	add.w	r0, r0, #616	; 0x268
 8037d78:	2200      	movs	r2, #0
 8037d7a:	2101      	movs	r1, #1
 8037d7c:	f001 b9fc 	b.w	8039178 <_tx_event_flags_set>

08037d80 <_nx_ip_route_find>:
 8037d80:	b470      	push	{r4, r5, r6}
 8037d82:	f001 4470 	and.w	r4, r1, #4026531840	; 0xf0000000
 8037d86:	f1b4 4f60 	cmp.w	r4, #3758096384	; 0xe0000000
 8037d8a:	d023      	beq.n	8037dd4 <_nx_ip_route_find+0x54>
 8037d8c:	1c4c      	adds	r4, r1, #1
 8037d8e:	d021      	beq.n	8037dd4 <_nx_ip_route_find+0x54>
 8037d90:	f890 4738 	ldrb.w	r4, [r0, #1848]	; 0x738
 8037d94:	b134      	cbz	r4, 8037da4 <_nx_ip_route_find+0x24>
 8037d96:	f8d0 474c 	ldr.w	r4, [r0, #1868]	; 0x74c
 8037d9a:	f8d0 5750 	ldr.w	r5, [r0, #1872]	; 0x750
 8037d9e:	400c      	ands	r4, r1
 8037da0:	42ac      	cmp	r4, r5
 8037da2:	d02b      	beq.n	8037dfc <_nx_ip_route_find+0x7c>
 8037da4:	f890 4770 	ldrb.w	r4, [r0, #1904]	; 0x770
 8037da8:	f200 756c 	addw	r5, r0, #1900	; 0x76c
 8037dac:	b134      	cbz	r4, 8037dbc <_nx_ip_route_find+0x3c>
 8037dae:	f8d0 4784 	ldr.w	r4, [r0, #1924]	; 0x784
 8037db2:	f8d0 6788 	ldr.w	r6, [r0, #1928]	; 0x788
 8037db6:	400c      	ands	r4, r1
 8037db8:	42b4      	cmp	r4, r6
 8037dba:	d021      	beq.n	8037e00 <_nx_ip_route_find+0x80>
 8037dbc:	4c14      	ldr	r4, [pc, #80]	; (8037e10 <_nx_ip_route_find+0x90>)
 8037dbe:	42a1      	cmp	r1, r4
 8037dc0:	d011      	beq.n	8037de6 <_nx_ip_route_find+0x66>
 8037dc2:	6881      	ldr	r1, [r0, #8]
 8037dc4:	b161      	cbz	r1, 8037de0 <_nx_ip_route_find+0x60>
 8037dc6:	68c4      	ldr	r4, [r0, #12]
 8037dc8:	b154      	cbz	r4, 8037de0 <_nx_ip_route_find+0x60>
 8037dca:	6019      	str	r1, [r3, #0]
 8037dcc:	2000      	movs	r0, #0
 8037dce:	6014      	str	r4, [r2, #0]
 8037dd0:	bc70      	pop	{r4, r5, r6}
 8037dd2:	4770      	bx	lr
 8037dd4:	6814      	ldr	r4, [r2, #0]
 8037dd6:	6019      	str	r1, [r3, #0]
 8037dd8:	b154      	cbz	r4, 8037df0 <_nx_ip_route_find+0x70>
 8037dda:	2000      	movs	r0, #0
 8037ddc:	bc70      	pop	{r4, r5, r6}
 8037dde:	4770      	bx	lr
 8037de0:	2021      	movs	r0, #33	; 0x21
 8037de2:	bc70      	pop	{r4, r5, r6}
 8037de4:	4770      	bx	lr
 8037de6:	6015      	str	r5, [r2, #0]
 8037de8:	2000      	movs	r0, #0
 8037dea:	bc70      	pop	{r4, r5, r6}
 8037dec:	6019      	str	r1, [r3, #0]
 8037dee:	4770      	bx	lr
 8037df0:	f200 7034 	addw	r0, r0, #1844	; 0x734
 8037df4:	6010      	str	r0, [r2, #0]
 8037df6:	4620      	mov	r0, r4
 8037df8:	bc70      	pop	{r4, r5, r6}
 8037dfa:	4770      	bx	lr
 8037dfc:	f200 7534 	addw	r5, r0, #1844	; 0x734
 8037e00:	6810      	ldr	r0, [r2, #0]
 8037e02:	b110      	cbz	r0, 8037e0a <_nx_ip_route_find+0x8a>
 8037e04:	6019      	str	r1, [r3, #0]
 8037e06:	2000      	movs	r0, #0
 8037e08:	e7e2      	b.n	8037dd0 <_nx_ip_route_find+0x50>
 8037e0a:	6015      	str	r5, [r2, #0]
 8037e0c:	e7fa      	b.n	8037e04 <_nx_ip_route_find+0x84>
 8037e0e:	bf00      	nop
 8037e10:	7f000001 	.word	0x7f000001

08037e14 <_nx_ip_thread_entry>:
 8037e14:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8037e18:	4604      	mov	r4, r0
 8037e1a:	f500 759c 	add.w	r5, r0, #312	; 0x138
 8037e1e:	b08d      	sub	sp, #52	; 0x34
 8037e20:	4628      	mov	r0, r5
 8037e22:	f04f 31ff 	mov.w	r1, #4294967295
 8037e26:	f001 fc1f 	bl	8039668 <_tx_mutex_get>
 8037e2a:	f894 3738 	ldrb.w	r3, [r4, #1848]	; 0x738
 8037e2e:	f04f 0801 	mov.w	r8, #1
 8037e32:	f8c4 8184 	str.w	r8, [r4, #388]	; 0x184
 8037e36:	b123      	cbz	r3, 8037e42 <_nx_ip_thread_entry+0x2e>
 8037e38:	f8d4 375c 	ldr.w	r3, [r4, #1884]	; 0x75c
 8037e3c:	2b00      	cmp	r3, #0
 8037e3e:	f040 80d1 	bne.w	8037fe4 <_nx_ip_thread_entry+0x1d0>
 8037e42:	f204 7b34 	addw	fp, r4, #1844	; 0x734
 8037e46:	ae04      	add	r6, sp, #16
 8037e48:	f8df 81cc 	ldr.w	r8, [pc, #460]	; 8038018 <_nx_ip_thread_entry+0x204>
 8037e4c:	f504 7a1a 	add.w	sl, r4, #616	; 0x268
 8037e50:	f04f 39ff 	mov.w	r9, #4294967295
 8037e54:	4628      	mov	r0, r5
 8037e56:	f001 fd7d 	bl	8039954 <_tx_mutex_put>
 8037e5a:	ab03      	add	r3, sp, #12
 8037e5c:	2201      	movs	r2, #1
 8037e5e:	f04f 31ff 	mov.w	r1, #4294967295
 8037e62:	f8cd 9000 	str.w	r9, [sp]
 8037e66:	4650      	mov	r0, sl
 8037e68:	f001 f90c 	bl	8039084 <_tx_event_flags_get>
 8037e6c:	f04f 31ff 	mov.w	r1, #4294967295
 8037e70:	4628      	mov	r0, r5
 8037e72:	f001 fbf9 	bl	8039668 <_tx_mutex_get>
 8037e76:	9b03      	ldr	r3, [sp, #12]
 8037e78:	071f      	lsls	r7, r3, #28
 8037e7a:	d51f      	bpl.n	8037ebc <_nx_ip_thread_entry+0xa8>
 8037e7c:	f8d4 2194 	ldr.w	r2, [r4, #404]	; 0x194
 8037e80:	b94a      	cbnz	r2, 8037e96 <_nx_ip_thread_entry+0x82>
 8037e82:	e016      	b.n	8037eb2 <_nx_ip_thread_entry+0x9e>
 8037e84:	f001 ffc4 	bl	8039e10 <_tx_thread_interrupt_control>
 8037e88:	4639      	mov	r1, r7
 8037e8a:	4620      	mov	r0, r4
 8037e8c:	f7ff fcba 	bl	8037804 <_nx_ip_packet_receive>
 8037e90:	f8d4 3194 	ldr.w	r3, [r4, #404]	; 0x194
 8037e94:	b163      	cbz	r3, 8037eb0 <_nx_ip_thread_entry+0x9c>
 8037e96:	2001      	movs	r0, #1
 8037e98:	f001 ffba 	bl	8039e10 <_tx_thread_interrupt_control>
 8037e9c:	f8d4 7194 	ldr.w	r7, [r4, #404]	; 0x194
 8037ea0:	687b      	ldr	r3, [r7, #4]
 8037ea2:	f8c4 3194 	str.w	r3, [r4, #404]	; 0x194
 8037ea6:	2b00      	cmp	r3, #0
 8037ea8:	d1ec      	bne.n	8037e84 <_nx_ip_thread_entry+0x70>
 8037eaa:	f8c4 3198 	str.w	r3, [r4, #408]	; 0x198
 8037eae:	e7e9      	b.n	8037e84 <_nx_ip_thread_entry+0x70>
 8037eb0:	9b03      	ldr	r3, [sp, #12]
 8037eb2:	f023 0308 	bic.w	r3, r3, #8
 8037eb6:	9303      	str	r3, [sp, #12]
 8037eb8:	2b00      	cmp	r3, #0
 8037eba:	d0cb      	beq.n	8037e54 <_nx_ip_thread_entry+0x40>
 8037ebc:	0618      	lsls	r0, r3, #24
 8037ebe:	d509      	bpl.n	8037ed4 <_nx_ip_thread_entry+0xc0>
 8037ec0:	f8d4 34b8 	ldr.w	r3, [r4, #1208]	; 0x4b8
 8037ec4:	4620      	mov	r0, r4
 8037ec6:	4798      	blx	r3
 8037ec8:	9b03      	ldr	r3, [sp, #12]
 8037eca:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8037ece:	9303      	str	r3, [sp, #12]
 8037ed0:	2b00      	cmp	r3, #0
 8037ed2:	d0bf      	beq.n	8037e54 <_nx_ip_thread_entry+0x40>
 8037ed4:	05d9      	lsls	r1, r3, #23
 8037ed6:	d50a      	bpl.n	8037eee <_nx_ip_thread_entry+0xda>
 8037ed8:	f8d4 24b4 	ldr.w	r2, [r4, #1204]	; 0x4b4
 8037edc:	b13a      	cbz	r2, 8037eee <_nx_ip_thread_entry+0xda>
 8037ede:	4620      	mov	r0, r4
 8037ee0:	4790      	blx	r2
 8037ee2:	9b03      	ldr	r3, [sp, #12]
 8037ee4:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8037ee8:	9303      	str	r3, [sp, #12]
 8037eea:	2b00      	cmp	r3, #0
 8037eec:	d0b2      	beq.n	8037e54 <_nx_ip_thread_entry+0x40>
 8037eee:	07da      	lsls	r2, r3, #31
 8037ef0:	d51e      	bpl.n	8037f30 <_nx_ip_thread_entry+0x11c>
 8037ef2:	f8d4 36fc 	ldr.w	r3, [r4, #1788]	; 0x6fc
 8037ef6:	b10b      	cbz	r3, 8037efc <_nx_ip_thread_entry+0xe8>
 8037ef8:	4620      	mov	r0, r4
 8037efa:	4798      	blx	r3
 8037efc:	f8d4 3714 	ldr.w	r3, [r4, #1812]	; 0x714
 8037f00:	b10b      	cbz	r3, 8037f06 <_nx_ip_thread_entry+0xf2>
 8037f02:	4620      	mov	r0, r4
 8037f04:	4798      	blx	r3
 8037f06:	f8d4 32c0 	ldr.w	r3, [r4, #704]	; 0x2c0
 8037f0a:	b10b      	cbz	r3, 8037f10 <_nx_ip_thread_entry+0xfc>
 8037f0c:	4620      	mov	r0, r4
 8037f0e:	4798      	blx	r3
 8037f10:	f8d4 3374 	ldr.w	r3, [r4, #884]	; 0x374
 8037f14:	b10b      	cbz	r3, 8037f1a <_nx_ip_thread_entry+0x106>
 8037f16:	4620      	mov	r0, r4
 8037f18:	4798      	blx	r3
 8037f1a:	f8d4 34b0 	ldr.w	r3, [r4, #1200]	; 0x4b0
 8037f1e:	b10b      	cbz	r3, 8037f24 <_nx_ip_thread_entry+0x110>
 8037f20:	4620      	mov	r0, r4
 8037f22:	4798      	blx	r3
 8037f24:	9b03      	ldr	r3, [sp, #12]
 8037f26:	f023 0301 	bic.w	r3, r3, #1
 8037f2a:	9303      	str	r3, [sp, #12]
 8037f2c:	2b00      	cmp	r3, #0
 8037f2e:	d091      	beq.n	8037e54 <_nx_ip_thread_entry+0x40>
 8037f30:	06df      	lsls	r7, r3, #27
 8037f32:	d505      	bpl.n	8037f40 <_nx_ip_thread_entry+0x12c>
 8037f34:	f8d4 2700 	ldr.w	r2, [r4, #1792]	; 0x700
 8037f38:	b112      	cbz	r2, 8037f40 <_nx_ip_thread_entry+0x12c>
 8037f3a:	4620      	mov	r0, r4
 8037f3c:	4790      	blx	r2
 8037f3e:	9b03      	ldr	r3, [sp, #12]
 8037f40:	0698      	lsls	r0, r3, #26
 8037f42:	d505      	bpl.n	8037f50 <_nx_ip_thread_entry+0x13c>
 8037f44:	f8d4 2718 	ldr.w	r2, [r4, #1816]	; 0x718
 8037f48:	b112      	cbz	r2, 8037f50 <_nx_ip_thread_entry+0x13c>
 8037f4a:	4620      	mov	r0, r4
 8037f4c:	4790      	blx	r2
 8037f4e:	9b03      	ldr	r3, [sp, #12]
 8037f50:	0799      	lsls	r1, r3, #30
 8037f52:	d504      	bpl.n	8037f5e <_nx_ip_thread_entry+0x14a>
 8037f54:	f8d4 32bc 	ldr.w	r3, [r4, #700]	; 0x2bc
 8037f58:	4620      	mov	r0, r4
 8037f5a:	4798      	blx	r3
 8037f5c:	9b03      	ldr	r3, [sp, #12]
 8037f5e:	075a      	lsls	r2, r3, #29
 8037f60:	d504      	bpl.n	8037f6c <_nx_ip_thread_entry+0x158>
 8037f62:	f8d4 3388 	ldr.w	r3, [r4, #904]	; 0x388
 8037f66:	4620      	mov	r0, r4
 8037f68:	4798      	blx	r3
 8037f6a:	9b03      	ldr	r3, [sp, #12]
 8037f6c:	065f      	lsls	r7, r3, #25
 8037f6e:	d504      	bpl.n	8037f7a <_nx_ip_thread_entry+0x166>
 8037f70:	f8d4 3378 	ldr.w	r3, [r4, #888]	; 0x378
 8037f74:	4620      	mov	r0, r4
 8037f76:	4798      	blx	r3
 8037f78:	9b03      	ldr	r3, [sp, #12]
 8037f7a:	0558      	lsls	r0, r3, #21
 8037f7c:	d40f      	bmi.n	8037f9e <_nx_ip_thread_entry+0x18a>
 8037f7e:	0519      	lsls	r1, r3, #20
 8037f80:	d422      	bmi.n	8037fc8 <_nx_ip_thread_entry+0x1b4>
 8037f82:	04da      	lsls	r2, r3, #19
 8037f84:	d504      	bpl.n	8037f90 <_nx_ip_thread_entry+0x17c>
 8037f86:	f8d4 3730 	ldr.w	r3, [r4, #1840]	; 0x730
 8037f8a:	4620      	mov	r0, r4
 8037f8c:	4798      	blx	r3
 8037f8e:	9b03      	ldr	r3, [sp, #12]
 8037f90:	049b      	lsls	r3, r3, #18
 8037f92:	f57f af5f 	bpl.w	8037e54 <_nx_ip_thread_entry+0x40>
 8037f96:	4620      	mov	r0, r4
 8037f98:	f7ff fbbe 	bl	8037718 <_nx_ip_deferred_link_status_process>
 8037f9c:	e75a      	b.n	8037e54 <_nx_ip_thread_entry+0x40>
 8037f9e:	f894 2738 	ldrb.w	r2, [r4, #1848]	; 0x738
 8037fa2:	2a00      	cmp	r2, #0
 8037fa4:	d0ed      	beq.n	8037f82 <_nx_ip_thread_entry+0x16e>
 8037fa6:	2208      	movs	r2, #8
 8037fa8:	f44f 7380 	mov.w	r3, #256	; 0x100
 8037fac:	9306      	str	r3, [sp, #24]
 8037fae:	940a      	str	r4, [sp, #40]	; 0x28
 8037fb0:	f8d4 375c 	ldr.w	r3, [r4, #1884]	; 0x75c
 8037fb4:	f8cd 801c 	str.w	r8, [sp, #28]
 8037fb8:	f8cd b02c 	str.w	fp, [sp, #44]	; 0x2c
 8037fbc:	9204      	str	r2, [sp, #16]
 8037fbe:	4630      	mov	r0, r6
 8037fc0:	4798      	blx	r3
 8037fc2:	9b03      	ldr	r3, [sp, #12]
 8037fc4:	0519      	lsls	r1, r3, #20
 8037fc6:	d5dc      	bpl.n	8037f82 <_nx_ip_thread_entry+0x16e>
 8037fc8:	f894 2738 	ldrb.w	r2, [r4, #1848]	; 0x738
 8037fcc:	2a00      	cmp	r2, #0
 8037fce:	d0d8      	beq.n	8037f82 <_nx_ip_thread_entry+0x16e>
 8037fd0:	2312      	movs	r3, #18
 8037fd2:	9304      	str	r3, [sp, #16]
 8037fd4:	e9cd 4b0a 	strd	r4, fp, [sp, #40]	; 0x28
 8037fd8:	f8d4 375c 	ldr.w	r3, [r4, #1884]	; 0x75c
 8037fdc:	4630      	mov	r0, r6
 8037fde:	4798      	blx	r3
 8037fe0:	9b03      	ldr	r3, [sp, #12]
 8037fe2:	e7ce      	b.n	8037f82 <_nx_ip_thread_entry+0x16e>
 8037fe4:	2213      	movs	r2, #19
 8037fe6:	ae04      	add	r6, sp, #16
 8037fe8:	f204 7b34 	addw	fp, r4, #1844	; 0x734
 8037fec:	9204      	str	r2, [sp, #16]
 8037fee:	4630      	mov	r0, r6
 8037ff0:	940a      	str	r4, [sp, #40]	; 0x28
 8037ff2:	f8cd b02c 	str.w	fp, [sp, #44]	; 0x2c
 8037ff6:	4798      	blx	r3
 8037ff8:	f8d4 375c 	ldr.w	r3, [r4, #1884]	; 0x75c
 8037ffc:	940a      	str	r4, [sp, #40]	; 0x28
 8037ffe:	4630      	mov	r0, r6
 8038000:	f8cd 8010 	str.w	r8, [sp, #16]
 8038004:	4798      	blx	r3
 8038006:	2302      	movs	r3, #2
 8038008:	9304      	str	r3, [sp, #16]
 803800a:	940a      	str	r4, [sp, #40]	; 0x28
 803800c:	f8d4 375c 	ldr.w	r3, [r4, #1884]	; 0x75c
 8038010:	4630      	mov	r0, r6
 8038012:	4798      	blx	r3
 8038014:	e718      	b.n	8037e48 <_nx_ip_thread_entry+0x34>
 8038016:	bf00      	nop
 8038018:	5e000001 	.word	0x5e000001

0803801c <_nx_packet_allocate>:
 803801c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8038020:	4604      	mov	r4, r0
 8038022:	2500      	movs	r5, #0
 8038024:	600d      	str	r5, [r1, #0]
 8038026:	2001      	movs	r0, #1
 8038028:	460e      	mov	r6, r1
 803802a:	4690      	mov	r8, r2
 803802c:	461f      	mov	r7, r3
 803802e:	f001 feef 	bl	8039e10 <_tx_thread_interrupt_control>
 8038032:	68a1      	ldr	r1, [r4, #8]
 8038034:	b1c1      	cbz	r1, 8038068 <_nx_packet_allocate+0x4c>
 8038036:	69e3      	ldr	r3, [r4, #28]
 8038038:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 803803a:	68df      	ldr	r7, [r3, #12]
 803803c:	61e7      	str	r7, [r4, #28]
 803803e:	3901      	subs	r1, #1
 8038040:	60a1      	str	r1, [r4, #8]
 8038042:	4442      	add	r2, r8
 8038044:	f04f 31aa 	mov.w	r1, #2863311530	; 0xaaaaaaaa
 8038048:	e9c3 5506 	strd	r5, r5, [r3, #24]
 803804c:	e9c3 220b 	strd	r2, r2, [r3, #44]	; 0x2c
 8038050:	60dd      	str	r5, [r3, #12]
 8038052:	605d      	str	r5, [r3, #4]
 8038054:	611d      	str	r5, [r3, #16]
 8038056:	621d      	str	r5, [r3, #32]
 8038058:	6099      	str	r1, [r3, #8]
 803805a:	462c      	mov	r4, r5
 803805c:	6033      	str	r3, [r6, #0]
 803805e:	f001 fed7 	bl	8039e10 <_tx_thread_interrupt_control>
 8038062:	4620      	mov	r0, r4
 8038064:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8038068:	b90f      	cbnz	r7, 803806e <_nx_packet_allocate+0x52>
 803806a:	2401      	movs	r4, #1
 803806c:	e7f7      	b.n	803805e <_nx_packet_allocate+0x42>
 803806e:	4a14      	ldr	r2, [pc, #80]	; (80380c0 <_nx_packet_allocate+0xa4>)
 8038070:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8038072:	6815      	ldr	r5, [r2, #0]
 8038074:	4a13      	ldr	r2, [pc, #76]	; (80380c4 <_nx_packet_allocate+0xa8>)
 8038076:	66ec      	str	r4, [r5, #108]	; 0x6c
 8038078:	e9c5 861e 	strd	r8, r6, [r5, #120]	; 0x78
 803807c:	66aa      	str	r2, [r5, #104]	; 0x68
 803807e:	b1db      	cbz	r3, 80380b8 <_nx_packet_allocate+0x9c>
 8038080:	6f5a      	ldr	r2, [r3, #116]	; 0x74
 8038082:	676a      	str	r2, [r5, #116]	; 0x74
 8038084:	6f5a      	ldr	r2, [r3, #116]	; 0x74
 8038086:	672b      	str	r3, [r5, #112]	; 0x70
 8038088:	6715      	str	r5, [r2, #112]	; 0x70
 803808a:	675d      	str	r5, [r3, #116]	; 0x74
 803808c:	6b22      	ldr	r2, [r4, #48]	; 0x30
 803808e:	490e      	ldr	r1, [pc, #56]	; (80380c8 <_nx_packet_allocate+0xac>)
 8038090:	3201      	adds	r2, #1
 8038092:	680b      	ldr	r3, [r1, #0]
 8038094:	6322      	str	r2, [r4, #48]	; 0x30
 8038096:	2201      	movs	r2, #1
 8038098:	240c      	movs	r4, #12
 803809a:	3301      	adds	r3, #1
 803809c:	632c      	str	r4, [r5, #48]	; 0x30
 803809e:	63aa      	str	r2, [r5, #56]	; 0x38
 80380a0:	64ef      	str	r7, [r5, #76]	; 0x4c
 80380a2:	600b      	str	r3, [r1, #0]
 80380a4:	f001 feb4 	bl	8039e10 <_tx_thread_interrupt_control>
 80380a8:	4628      	mov	r0, r5
 80380aa:	f002 f963 	bl	803a374 <_tx_thread_system_suspend>
 80380ae:	f8d5 4084 	ldr.w	r4, [r5, #132]	; 0x84
 80380b2:	4620      	mov	r0, r4
 80380b4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80380b8:	62e5      	str	r5, [r4, #44]	; 0x2c
 80380ba:	e9c5 551c 	strd	r5, r5, [r5, #112]	; 0x70
 80380be:	e7e5      	b.n	803808c <_nx_packet_allocate+0x70>
 80380c0:	2001226c 	.word	0x2001226c
 80380c4:	080382c9 	.word	0x080382c9
 80380c8:	2001227c 	.word	0x2001227c

080380cc <_nx_packet_copy>:
 80380cc:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80380d0:	4689      	mov	r9, r1
 80380d2:	6981      	ldr	r1, [r0, #24]
 80380d4:	4680      	mov	r8, r0
 80380d6:	2000      	movs	r0, #0
 80380d8:	b085      	sub	sp, #20
 80380da:	f8c9 0000 	str.w	r0, [r9]
 80380de:	b339      	cbz	r1, 8038130 <_nx_packet_copy+0x64>
 80380e0:	f8d8 002c 	ldr.w	r0, [r8, #44]	; 0x2c
 80380e4:	4616      	mov	r6, r2
 80380e6:	f8d8 2024 	ldr.w	r2, [r8, #36]	; 0x24
 80380ea:	a903      	add	r1, sp, #12
 80380ec:	1a82      	subs	r2, r0, r2
 80380ee:	4630      	mov	r0, r6
 80380f0:	461f      	mov	r7, r3
 80380f2:	f7ff ff93 	bl	803801c <_nx_packet_allocate>
 80380f6:	4604      	mov	r4, r0
 80380f8:	b9b0      	cbnz	r0, 8038128 <_nx_packet_copy+0x5c>
 80380fa:	e9d8 2307 	ldrd	r2, r3, [r8, #28]
 80380fe:	9803      	ldr	r0, [sp, #12]
 8038100:	4645      	mov	r5, r8
 8038102:	e9c0 2307 	strd	r2, r3, [r0, #28]
 8038106:	e002      	b.n	803810e <_nx_packet_copy+0x42>
 8038108:	68ed      	ldr	r5, [r5, #12]
 803810a:	9803      	ldr	r0, [sp, #12]
 803810c:	b1ad      	cbz	r5, 803813a <_nx_packet_copy+0x6e>
 803810e:	e9d5 120b 	ldrd	r1, r2, [r5, #44]	; 0x2c
 8038112:	4633      	mov	r3, r6
 8038114:	9700      	str	r7, [sp, #0]
 8038116:	1a52      	subs	r2, r2, r1
 8038118:	f000 f81e 	bl	8038158 <_nx_packet_data_append>
 803811c:	4604      	mov	r4, r0
 803811e:	2800      	cmp	r0, #0
 8038120:	d0f2      	beq.n	8038108 <_nx_packet_copy+0x3c>
 8038122:	9803      	ldr	r0, [sp, #12]
 8038124:	f000 f978 	bl	8038418 <_nx_packet_release>
 8038128:	4620      	mov	r0, r4
 803812a:	b005      	add	sp, #20
 803812c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8038130:	2412      	movs	r4, #18
 8038132:	4620      	mov	r0, r4
 8038134:	b005      	add	sp, #20
 8038136:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 803813a:	f8d8 2018 	ldr.w	r2, [r8, #24]
 803813e:	6983      	ldr	r3, [r0, #24]
 8038140:	429a      	cmp	r2, r3
 8038142:	d105      	bne.n	8038150 <_nx_packet_copy+0x84>
 8038144:	f8c9 0000 	str.w	r0, [r9]
 8038148:	4620      	mov	r0, r4
 803814a:	b005      	add	sp, #20
 803814c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8038150:	f000 f962 	bl	8038418 <_nx_packet_release>
 8038154:	2412      	movs	r4, #18
 8038156:	e7e7      	b.n	8038128 <_nx_packet_copy+0x5c>

08038158 <_nx_packet_data_append>:
 8038158:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 803815c:	4680      	mov	r8, r0
 803815e:	b085      	sub	sp, #20
 8038160:	6900      	ldr	r0, [r0, #16]
 8038162:	f8dd b038 	ldr.w	fp, [sp, #56]	; 0x38
 8038166:	460f      	mov	r7, r1
 8038168:	4615      	mov	r5, r2
 803816a:	4699      	mov	r9, r3
 803816c:	b358      	cbz	r0, 80381c6 <_nx_packet_data_append+0x6e>
 803816e:	4604      	mov	r4, r0
 8038170:	2600      	movs	r6, #0
 8038172:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 8038174:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8038176:	46a2      	mov	sl, r4
 8038178:	68e4      	ldr	r4, [r4, #12]
 803817a:	1a9b      	subs	r3, r3, r2
 803817c:	441e      	add	r6, r3
 803817e:	2c00      	cmp	r4, #0
 8038180:	d1f7      	bne.n	8038172 <_nx_packet_data_append+0x1a>
 8038182:	42ae      	cmp	r6, r5
 8038184:	9403      	str	r4, [sp, #12]
 8038186:	d326      	bcc.n	80381d6 <_nx_packet_data_append+0x7e>
 8038188:	f8d8 3018 	ldr.w	r3, [r8, #24]
 803818c:	442b      	add	r3, r5
 803818e:	f8c8 3018 	str.w	r3, [r8, #24]
 8038192:	9003      	str	r0, [sp, #12]
 8038194:	2d00      	cmp	r5, #0
 8038196:	d03b      	beq.n	8038210 <_nx_packet_data_append+0xb8>
 8038198:	6b03      	ldr	r3, [r0, #48]	; 0x30
 803819a:	6a84      	ldr	r4, [r0, #40]	; 0x28
 803819c:	1ae4      	subs	r4, r4, r3
 803819e:	42ac      	cmp	r4, r5
 80381a0:	bf28      	it	cs
 80381a2:	462c      	movcs	r4, r5
 80381a4:	4618      	mov	r0, r3
 80381a6:	4622      	mov	r2, r4
 80381a8:	4639      	mov	r1, r7
 80381aa:	f007 fa2a 	bl	803f602 <__aeabi_memcpy>
 80381ae:	9a03      	ldr	r2, [sp, #12]
 80381b0:	6b13      	ldr	r3, [r2, #48]	; 0x30
 80381b2:	1b2d      	subs	r5, r5, r4
 80381b4:	4423      	add	r3, r4
 80381b6:	6313      	str	r3, [r2, #48]	; 0x30
 80381b8:	d02a      	beq.n	8038210 <_nx_packet_data_append+0xb8>
 80381ba:	68d0      	ldr	r0, [r2, #12]
 80381bc:	9003      	str	r0, [sp, #12]
 80381be:	f8c8 0010 	str.w	r0, [r8, #16]
 80381c2:	4427      	add	r7, r4
 80381c4:	e7e8      	b.n	8038198 <_nx_packet_data_append+0x40>
 80381c6:	f8d8 6028 	ldr.w	r6, [r8, #40]	; 0x28
 80381ca:	f8d8 3030 	ldr.w	r3, [r8, #48]	; 0x30
 80381ce:	1af6      	subs	r6, r6, r3
 80381d0:	4296      	cmp	r6, r2
 80381d2:	d242      	bcs.n	803825a <_nx_packet_data_append+0x102>
 80381d4:	4682      	mov	sl, r0
 80381d6:	2400      	movs	r4, #0
 80381d8:	e00a      	b.n	80381f0 <_nx_packet_data_append+0x98>
 80381da:	6922      	ldr	r2, [r4, #16]
 80381dc:	9b03      	ldr	r3, [sp, #12]
 80381de:	b1a2      	cbz	r2, 803820a <_nx_packet_data_append+0xb2>
 80381e0:	60d3      	str	r3, [r2, #12]
 80381e2:	6123      	str	r3, [r4, #16]
 80381e4:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 80381e6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80381e8:	1ad3      	subs	r3, r2, r3
 80381ea:	441e      	add	r6, r3
 80381ec:	42b5      	cmp	r5, r6
 80381ee:	d914      	bls.n	803821a <_nx_packet_data_append+0xc2>
 80381f0:	465b      	mov	r3, fp
 80381f2:	2200      	movs	r2, #0
 80381f4:	a903      	add	r1, sp, #12
 80381f6:	4648      	mov	r0, r9
 80381f8:	f7ff ff10 	bl	803801c <_nx_packet_allocate>
 80381fc:	4603      	mov	r3, r0
 80381fe:	b9e8      	cbnz	r0, 803823c <_nx_packet_data_append+0xe4>
 8038200:	2c00      	cmp	r4, #0
 8038202:	d1ea      	bne.n	80381da <_nx_packet_data_append+0x82>
 8038204:	9c03      	ldr	r4, [sp, #12]
 8038206:	4623      	mov	r3, r4
 8038208:	e7ec      	b.n	80381e4 <_nx_packet_data_append+0x8c>
 803820a:	e9c4 3303 	strd	r3, r3, [r4, #12]
 803820e:	e7e9      	b.n	80381e4 <_nx_packet_data_append+0x8c>
 8038210:	2300      	movs	r3, #0
 8038212:	4618      	mov	r0, r3
 8038214:	b005      	add	sp, #20
 8038216:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 803821a:	f1ba 0f00 	cmp.w	sl, #0
 803821e:	d023      	beq.n	8038268 <_nx_packet_data_append+0x110>
 8038220:	f8ca 400c 	str.w	r4, [sl, #12]
 8038224:	2300      	movs	r3, #0
 8038226:	6123      	str	r3, [r4, #16]
 8038228:	f8d8 3018 	ldr.w	r3, [r8, #24]
 803822c:	f8d8 0010 	ldr.w	r0, [r8, #16]
 8038230:	442b      	add	r3, r5
 8038232:	f8c8 3018 	str.w	r3, [r8, #24]
 8038236:	b1d0      	cbz	r0, 803826e <_nx_packet_data_append+0x116>
 8038238:	9003      	str	r0, [sp, #12]
 803823a:	e7ad      	b.n	8038198 <_nx_packet_data_append+0x40>
 803823c:	2c00      	cmp	r4, #0
 803823e:	d0e8      	beq.n	8038212 <_nx_packet_data_append+0xba>
 8038240:	9403      	str	r4, [sp, #12]
 8038242:	4620      	mov	r0, r4
 8038244:	68e4      	ldr	r4, [r4, #12]
 8038246:	9301      	str	r3, [sp, #4]
 8038248:	f000 f8e6 	bl	8038418 <_nx_packet_release>
 803824c:	9b01      	ldr	r3, [sp, #4]
 803824e:	2c00      	cmp	r4, #0
 8038250:	d1f6      	bne.n	8038240 <_nx_packet_data_append+0xe8>
 8038252:	4618      	mov	r0, r3
 8038254:	b005      	add	sp, #20
 8038256:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 803825a:	f8d8 3018 	ldr.w	r3, [r8, #24]
 803825e:	4413      	add	r3, r2
 8038260:	f8c8 3018 	str.w	r3, [r8, #24]
 8038264:	4640      	mov	r0, r8
 8038266:	e794      	b.n	8038192 <_nx_packet_data_append+0x3a>
 8038268:	f8c8 400c 	str.w	r4, [r8, #12]
 803826c:	e7da      	b.n	8038224 <_nx_packet_data_append+0xcc>
 803826e:	f8cd 800c 	str.w	r8, [sp, #12]
 8038272:	4640      	mov	r0, r8
 8038274:	e790      	b.n	8038198 <_nx_packet_data_append+0x40>
 8038276:	bf00      	nop

08038278 <_nx_packet_data_retrieve>:
 8038278:	b430      	push	{r4, r5}
 803827a:	6984      	ldr	r4, [r0, #24]
 803827c:	6014      	str	r4, [r2, #0]
 803827e:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8038280:	b934      	cbnz	r4, 8038290 <_nx_packet_data_retrieve+0x18>
 8038282:	e00f      	b.n	80382a4 <_nx_packet_data_retrieve+0x2c>
 8038284:	f813 5b01 	ldrb.w	r5, [r3], #1
 8038288:	f801 5b01 	strb.w	r5, [r1], #1
 803828c:	3c01      	subs	r4, #1
 803828e:	d002      	beq.n	8038296 <_nx_packet_data_retrieve+0x1e>
 8038290:	6b05      	ldr	r5, [r0, #48]	; 0x30
 8038292:	429d      	cmp	r5, r3
 8038294:	d1f6      	bne.n	8038284 <_nx_packet_data_retrieve+0xc>
 8038296:	68c0      	ldr	r0, [r0, #12]
 8038298:	2800      	cmp	r0, #0
 803829a:	d1f0      	bne.n	803827e <_nx_packet_data_retrieve+0x6>
 803829c:	b94c      	cbnz	r4, 80382b2 <_nx_packet_data_retrieve+0x3a>
 803829e:	2000      	movs	r0, #0
 80382a0:	bc30      	pop	{r4, r5}
 80382a2:	4770      	bx	lr
 80382a4:	68c0      	ldr	r0, [r0, #12]
 80382a6:	2800      	cmp	r0, #0
 80382a8:	d0f9      	beq.n	803829e <_nx_packet_data_retrieve+0x26>
 80382aa:	68c0      	ldr	r0, [r0, #12]
 80382ac:	2800      	cmp	r0, #0
 80382ae:	d1e6      	bne.n	803827e <_nx_packet_data_retrieve+0x6>
 80382b0:	e7f4      	b.n	803829c <_nx_packet_data_retrieve+0x24>
 80382b2:	6813      	ldr	r3, [r2, #0]
 80382b4:	1b1b      	subs	r3, r3, r4
 80382b6:	2012      	movs	r0, #18
 80382b8:	bc30      	pop	{r4, r5}
 80382ba:	6013      	str	r3, [r2, #0]
 80382bc:	4770      	bx	lr
 80382be:	bf00      	nop

080382c0 <_nx_packet_length_get>:
 80382c0:	6983      	ldr	r3, [r0, #24]
 80382c2:	600b      	str	r3, [r1, #0]
 80382c4:	2000      	movs	r0, #0
 80382c6:	4770      	bx	lr

080382c8 <_nx_packet_pool_cleanup>:
 80382c8:	b538      	push	{r3, r4, r5, lr}
 80382ca:	4604      	mov	r4, r0
 80382cc:	2001      	movs	r0, #1
 80382ce:	6ee5      	ldr	r5, [r4, #108]	; 0x6c
 80382d0:	f001 fd9e 	bl	8039e10 <_tx_thread_interrupt_control>
 80382d4:	6ea3      	ldr	r3, [r4, #104]	; 0x68
 80382d6:	b123      	cbz	r3, 80382e2 <_nx_packet_pool_cleanup+0x1a>
 80382d8:	b11d      	cbz	r5, 80382e2 <_nx_packet_pool_cleanup+0x1a>
 80382da:	4b15      	ldr	r3, [pc, #84]	; (8038330 <_nx_packet_pool_cleanup+0x68>)
 80382dc:	682a      	ldr	r2, [r5, #0]
 80382de:	429a      	cmp	r2, r3
 80382e0:	d003      	beq.n	80382ea <_nx_packet_pool_cleanup+0x22>
 80382e2:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80382e6:	f001 bd93 	b.w	8039e10 <_tx_thread_interrupt_control>
 80382ea:	6f23      	ldr	r3, [r4, #112]	; 0x70
 80382ec:	2200      	movs	r2, #0
 80382ee:	42a3      	cmp	r3, r4
 80382f0:	66a2      	str	r2, [r4, #104]	; 0x68
 80382f2:	d01b      	beq.n	803832c <_nx_packet_pool_cleanup+0x64>
 80382f4:	6aea      	ldr	r2, [r5, #44]	; 0x2c
 80382f6:	42a2      	cmp	r2, r4
 80382f8:	6f62      	ldr	r2, [r4, #116]	; 0x74
 80382fa:	bf08      	it	eq
 80382fc:	62eb      	streq	r3, [r5, #44]	; 0x2c
 80382fe:	675a      	str	r2, [r3, #116]	; 0x74
 8038300:	6f62      	ldr	r2, [r4, #116]	; 0x74
 8038302:	6713      	str	r3, [r2, #112]	; 0x70
 8038304:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8038306:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8038308:	3b01      	subs	r3, #1
 803830a:	2a0c      	cmp	r2, #12
 803830c:	632b      	str	r3, [r5, #48]	; 0x30
 803830e:	d1e8      	bne.n	80382e2 <_nx_packet_pool_cleanup+0x1a>
 8038310:	4a08      	ldr	r2, [pc, #32]	; (8038334 <_nx_packet_pool_cleanup+0x6c>)
 8038312:	6813      	ldr	r3, [r2, #0]
 8038314:	2101      	movs	r1, #1
 8038316:	440b      	add	r3, r1
 8038318:	f8c4 1084 	str.w	r1, [r4, #132]	; 0x84
 803831c:	6013      	str	r3, [r2, #0]
 803831e:	f001 fd77 	bl	8039e10 <_tx_thread_interrupt_control>
 8038322:	4620      	mov	r0, r4
 8038324:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8038328:	f001 bf20 	b.w	803a16c <_tx_thread_system_resume>
 803832c:	62ea      	str	r2, [r5, #44]	; 0x2c
 803832e:	e7e9      	b.n	8038304 <_nx_packet_pool_cleanup+0x3c>
 8038330:	5041434b 	.word	0x5041434b
 8038334:	2001227c 	.word	0x2001227c

08038338 <_nx_packet_pool_create>:
 8038338:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 803833c:	9c08      	ldr	r4, [sp, #32]
 803833e:	6282      	str	r2, [r0, #40]	; 0x28
 8038340:	f102 0c03 	add.w	ip, r2, #3
 8038344:	f02c 0903 	bic.w	r9, ip, #3
 8038348:	4698      	mov	r8, r3
 803834a:	f109 0634 	add.w	r6, r9, #52	; 0x34
 803834e:	f024 0303 	bic.w	r3, r4, #3
 8038352:	4605      	mov	r5, r0
 8038354:	eb08 0406 	add.w	r4, r8, r6
 8038358:	eb08 0e03 	add.w	lr, r8, r3
 803835c:	f8c0 8020 	str.w	r8, [r0, #32]
 8038360:	6041      	str	r1, [r0, #4]
 8038362:	45a6      	cmp	lr, r4
 8038364:	f04f 0000 	mov.w	r0, #0
 8038368:	e9c5 000b 	strd	r0, r0, [r5, #44]	; 0x2c
 803836c:	626b      	str	r3, [r5, #36]	; 0x24
 803836e:	d335      	bcc.n	80383dc <_nx_packet_pool_create+0xa4>
 8038370:	4603      	mov	r3, r0
 8038372:	f108 0134 	add.w	r1, r8, #52	; 0x34
 8038376:	f04f 3aff 	mov.w	sl, #4294967295
 803837a:	f841 4c28 	str.w	r4, [r1, #-40]
 803837e:	46a4      	mov	ip, r4
 8038380:	4434      	add	r4, r6
 8038382:	1857      	adds	r7, r2, r1
 8038384:	45a6      	cmp	lr, r4
 8038386:	e941 530d 	strd	r5, r3, [r1, #-52]	; 0x34
 803838a:	f841 ac2c 	str.w	sl, [r1, #-44]
 803838e:	f841 1c10 	str.w	r1, [r1, #-16]
 8038392:	f841 7c0c 	str.w	r7, [r1, #-12]
 8038396:	f100 0001 	add.w	r0, r0, #1
 803839a:	4431      	add	r1, r6
 803839c:	d2ed      	bcs.n	803837a <_nx_packet_pool_create+0x42>
 803839e:	ebac 0c09 	sub.w	ip, ip, r9
 80383a2:	f84c 3c28 	str.w	r3, [ip, #-40]
 80383a6:	e9c5 0002 	strd	r0, r0, [r5, #8]
 80383aa:	b1e8      	cbz	r0, 80383e8 <_nx_packet_pool_create+0xb0>
 80383ac:	f8c5 801c 	str.w	r8, [r5, #28]
 80383b0:	2001      	movs	r0, #1
 80383b2:	f001 fd2d 	bl	8039e10 <_tx_thread_interrupt_control>
 80383b6:	4a10      	ldr	r2, [pc, #64]	; (80383f8 <_nx_packet_pool_create+0xc0>)
 80383b8:	4910      	ldr	r1, [pc, #64]	; (80383fc <_nx_packet_pool_create+0xc4>)
 80383ba:	6813      	ldr	r3, [r2, #0]
 80383bc:	6029      	str	r1, [r5, #0]
 80383be:	b1b3      	cbz	r3, 80383ee <_nx_packet_pool_create+0xb6>
 80383c0:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 80383c2:	639d      	str	r5, [r3, #56]	; 0x38
 80383c4:	6355      	str	r5, [r2, #52]	; 0x34
 80383c6:	e9c5 320d 	strd	r3, r2, [r5, #52]	; 0x34
 80383ca:	4a0d      	ldr	r2, [pc, #52]	; (8038400 <_nx_packet_pool_create+0xc8>)
 80383cc:	6813      	ldr	r3, [r2, #0]
 80383ce:	3301      	adds	r3, #1
 80383d0:	6013      	str	r3, [r2, #0]
 80383d2:	f001 fd1d 	bl	8039e10 <_tx_thread_interrupt_control>
 80383d6:	2000      	movs	r0, #0
 80383d8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80383dc:	eba8 0309 	sub.w	r3, r8, r9
 80383e0:	f843 0c28 	str.w	r0, [r3, #-40]
 80383e4:	e9c5 0002 	strd	r0, r0, [r5, #8]
 80383e8:	f04f 0800 	mov.w	r8, #0
 80383ec:	e7de      	b.n	80383ac <_nx_packet_pool_create+0x74>
 80383ee:	e9c5 550d 	strd	r5, r5, [r5, #52]	; 0x34
 80383f2:	6015      	str	r5, [r2, #0]
 80383f4:	e7e9      	b.n	80383ca <_nx_packet_pool_create+0x92>
 80383f6:	bf00      	nop
 80383f8:	200121f8 	.word	0x200121f8
 80383fc:	5041434b 	.word	0x5041434b
 8038400:	200121f4 	.word	0x200121f4

08038404 <_nx_packet_pool_initialize>:
 8038404:	4902      	ldr	r1, [pc, #8]	; (8038410 <_nx_packet_pool_initialize+0xc>)
 8038406:	4a03      	ldr	r2, [pc, #12]	; (8038414 <_nx_packet_pool_initialize+0x10>)
 8038408:	2300      	movs	r3, #0
 803840a:	600b      	str	r3, [r1, #0]
 803840c:	6013      	str	r3, [r2, #0]
 803840e:	4770      	bx	lr
 8038410:	200121f8 	.word	0x200121f8
 8038414:	200121f4 	.word	0x200121f4

08038418 <_nx_packet_release>:
 8038418:	2800      	cmp	r0, #0
 803841a:	d055      	beq.n	80384c8 <_nx_packet_release+0xb0>
 803841c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8038420:	4604      	mov	r4, r0
 8038422:	f8df 80a8 	ldr.w	r8, [pc, #168]	; 80384cc <_nx_packet_release+0xb4>
 8038426:	68a3      	ldr	r3, [r4, #8]
 8038428:	f1b3 3faa 	cmp.w	r3, #2863311530	; 0xaaaaaaaa
 803842c:	f04f 39ff 	mov.w	r9, #4294967295
 8038430:	f04f 0001 	mov.w	r0, #1
 8038434:	d133      	bne.n	803849e <_nx_packet_release+0x86>
 8038436:	68e7      	ldr	r7, [r4, #12]
 8038438:	f001 fcea 	bl	8039e10 <_tx_thread_interrupt_control>
 803843c:	6823      	ldr	r3, [r4, #0]
 803843e:	6add      	ldr	r5, [r3, #44]	; 0x2c
 8038440:	4684      	mov	ip, r0
 8038442:	2d00      	cmp	r5, #0
 8038444:	d031      	beq.n	80384aa <_nx_packet_release+0x92>
 8038446:	6f2a      	ldr	r2, [r5, #112]	; 0x70
 8038448:	42aa      	cmp	r2, r5
 803844a:	d02b      	beq.n	80384a4 <_nx_packet_release+0x8c>
 803844c:	6f69      	ldr	r1, [r5, #116]	; 0x74
 803844e:	62da      	str	r2, [r3, #44]	; 0x2c
 8038450:	6751      	str	r1, [r2, #116]	; 0x74
 8038452:	6f69      	ldr	r1, [r5, #116]	; 0x74
 8038454:	670a      	str	r2, [r1, #112]	; 0x70
 8038456:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8038458:	f8d8 2000 	ldr.w	r2, [r8]
 803845c:	2600      	movs	r6, #0
 803845e:	3901      	subs	r1, #1
 8038460:	6319      	str	r1, [r3, #48]	; 0x30
 8038462:	3201      	adds	r2, #1
 8038464:	4660      	mov	r0, ip
 8038466:	66ae      	str	r6, [r5, #104]	; 0x68
 8038468:	f8c8 2000 	str.w	r2, [r8]
 803846c:	f001 fcd0 	bl	8039e10 <_tx_thread_interrupt_control>
 8038470:	e9d5 121e 	ldrd	r1, r2, [r5, #120]	; 0x78
 8038474:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8038476:	60e6      	str	r6, [r4, #12]
 8038478:	440b      	add	r3, r1
 803847a:	e9c4 330b 	strd	r3, r3, [r4, #44]	; 0x2c
 803847e:	6066      	str	r6, [r4, #4]
 8038480:	6126      	str	r6, [r4, #16]
 8038482:	61a6      	str	r6, [r4, #24]
 8038484:	4628      	mov	r0, r5
 8038486:	6014      	str	r4, [r2, #0]
 8038488:	f8c5 6084 	str.w	r6, [r5, #132]	; 0x84
 803848c:	f001 fe6e 	bl	803a16c <_tx_thread_system_resume>
 8038490:	b1bf      	cbz	r7, 80384c2 <_nx_packet_release+0xaa>
 8038492:	463c      	mov	r4, r7
 8038494:	2001      	movs	r0, #1
 8038496:	68a3      	ldr	r3, [r4, #8]
 8038498:	f1b3 3faa 	cmp.w	r3, #2863311530	; 0xaaaaaaaa
 803849c:	d0cb      	beq.n	8038436 <_nx_packet_release+0x1e>
 803849e:	2007      	movs	r0, #7
 80384a0:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80384a4:	2200      	movs	r2, #0
 80384a6:	62da      	str	r2, [r3, #44]	; 0x2c
 80384a8:	e7d5      	b.n	8038456 <_nx_packet_release+0x3e>
 80384aa:	689a      	ldr	r2, [r3, #8]
 80384ac:	69d9      	ldr	r1, [r3, #28]
 80384ae:	60e1      	str	r1, [r4, #12]
 80384b0:	3201      	adds	r2, #1
 80384b2:	f8c4 9008 	str.w	r9, [r4, #8]
 80384b6:	609a      	str	r2, [r3, #8]
 80384b8:	61dc      	str	r4, [r3, #28]
 80384ba:	f001 fca9 	bl	8039e10 <_tx_thread_interrupt_control>
 80384be:	2f00      	cmp	r7, #0
 80384c0:	d1e7      	bne.n	8038492 <_nx_packet_release+0x7a>
 80384c2:	2000      	movs	r0, #0
 80384c4:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80384c8:	2000      	movs	r0, #0
 80384ca:	4770      	bx	lr
 80384cc:	2001227c 	.word	0x2001227c

080384d0 <_nx_packet_transmit_release>:
 80384d0:	b510      	push	{r4, lr}
 80384d2:	4604      	mov	r4, r0
 80384d4:	2001      	movs	r0, #1
 80384d6:	f001 fc9b 	bl	8039e10 <_tx_thread_interrupt_control>
 80384da:	68a2      	ldr	r2, [r4, #8]
 80384dc:	f1b2 3faa 	cmp.w	r2, #2863311530	; 0xaaaaaaaa
 80384e0:	4603      	mov	r3, r0
 80384e2:	d00e      	beq.n	8038502 <_nx_packet_transmit_release+0x32>
 80384e4:	3201      	adds	r2, #1
 80384e6:	d00c      	beq.n	8038502 <_nx_packet_transmit_release+0x32>
 80384e8:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 80384ea:	69a3      	ldr	r3, [r4, #24]
 80384ec:	3214      	adds	r2, #20
 80384ee:	3b14      	subs	r3, #20
 80384f0:	f04f 31dd 	mov.w	r1, #3722304989	; 0xdddddddd
 80384f4:	62e2      	str	r2, [r4, #44]	; 0x2c
 80384f6:	61a3      	str	r3, [r4, #24]
 80384f8:	6061      	str	r1, [r4, #4]
 80384fa:	f001 fc89 	bl	8039e10 <_tx_thread_interrupt_control>
 80384fe:	2000      	movs	r0, #0
 8038500:	bd10      	pop	{r4, pc}
 8038502:	4618      	mov	r0, r3
 8038504:	f001 fc84 	bl	8039e10 <_tx_thread_interrupt_control>
 8038508:	4620      	mov	r0, r4
 803850a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 803850e:	f7ff bf83 	b.w	8038418 <_nx_packet_release>
 8038512:	bf00      	nop

08038514 <_nx_rarp_packet_deferred_receive>:
 8038514:	b570      	push	{r4, r5, r6, lr}
 8038516:	4604      	mov	r4, r0
 8038518:	2001      	movs	r0, #1
 803851a:	460d      	mov	r5, r1
 803851c:	f001 fc78 	bl	8039e10 <_tx_thread_interrupt_control>
 8038520:	f8d4 3718 	ldr.w	r3, [r4, #1816]	; 0x718
 8038524:	b1e3      	cbz	r3, 8038560 <_nx_rarp_packet_deferred_receive+0x4c>
 8038526:	f8d4 671c 	ldr.w	r6, [r4, #1820]	; 0x71c
 803852a:	b156      	cbz	r6, 8038542 <_nx_rarp_packet_deferred_receive+0x2e>
 803852c:	f8d4 2720 	ldr.w	r2, [r4, #1824]	; 0x720
 8038530:	2300      	movs	r3, #0
 8038532:	6055      	str	r5, [r2, #4]
 8038534:	606b      	str	r3, [r5, #4]
 8038536:	f8c4 5720 	str.w	r5, [r4, #1824]	; 0x720
 803853a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 803853e:	f001 bc67 	b.w	8039e10 <_tx_thread_interrupt_control>
 8038542:	f8c4 571c 	str.w	r5, [r4, #1820]	; 0x71c
 8038546:	f8c4 5720 	str.w	r5, [r4, #1824]	; 0x720
 803854a:	606e      	str	r6, [r5, #4]
 803854c:	f001 fc60 	bl	8039e10 <_tx_thread_interrupt_control>
 8038550:	4632      	mov	r2, r6
 8038552:	f504 701a 	add.w	r0, r4, #616	; 0x268
 8038556:	2120      	movs	r1, #32
 8038558:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 803855c:	f000 be0c 	b.w	8039178 <_tx_event_flags_set>
 8038560:	f001 fc56 	bl	8039e10 <_tx_thread_interrupt_control>
 8038564:	4628      	mov	r0, r5
 8038566:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 803856a:	f7ff bf55 	b.w	8038418 <_nx_packet_release>
 803856e:	bf00      	nop

08038570 <_nx_system_initialize>:
 8038570:	b538      	push	{r3, r4, r5, lr}
 8038572:	f7ff ff47 	bl	8038404 <_nx_packet_pool_initialize>
 8038576:	f7ff f8fd 	bl	8037774 <_nx_ip_initialize>
 803857a:	4808      	ldr	r0, [pc, #32]	; (803859c <_nx_system_initialize+0x2c>)
 803857c:	4a08      	ldr	r2, [pc, #32]	; (80385a0 <_nx_system_initialize+0x30>)
 803857e:	4d09      	ldr	r5, [pc, #36]	; (80385a4 <_nx_system_initialize+0x34>)
 8038580:	6005      	str	r5, [r0, #0]
 8038582:	4c09      	ldr	r4, [pc, #36]	; (80385a8 <_nx_system_initialize+0x38>)
 8038584:	4809      	ldr	r0, [pc, #36]	; (80385ac <_nx_system_initialize+0x3c>)
 8038586:	490a      	ldr	r1, [pc, #40]	; (80385b0 <_nx_system_initialize+0x40>)
 8038588:	4b0a      	ldr	r3, [pc, #40]	; (80385b4 <_nx_system_initialize+0x44>)
 803858a:	6010      	str	r0, [r2, #0]
 803858c:	4d0a      	ldr	r5, [pc, #40]	; (80385b8 <_nx_system_initialize+0x48>)
 803858e:	480b      	ldr	r0, [pc, #44]	; (80385bc <_nx_system_initialize+0x4c>)
 8038590:	4a0b      	ldr	r2, [pc, #44]	; (80385c0 <_nx_system_initialize+0x50>)
 8038592:	6025      	str	r5, [r4, #0]
 8038594:	6008      	str	r0, [r1, #0]
 8038596:	601a      	str	r2, [r3, #0]
 8038598:	bd38      	pop	{r3, r4, r5, pc}
 803859a:	bf00      	nop
 803859c:	200121fc 	.word	0x200121fc
 80385a0:	20012200 	.word	0x20012200
 80385a4:	83dfe000 	.word	0x83dfe000
 80385a8:	20012204 	.word	0x20012204
 80385ac:	0064000a 	.word	0x0064000a
 80385b0:	20012208 	.word	0x20012208
 80385b4:	2001220c 	.word	0x2001220c
 80385b8:	050a014b 	.word	0x050a014b
 80385bc:	1c20124a 	.word	0x1c20124a
 80385c0:	070a0a14 	.word	0x070a0a14

080385c4 <_nx_udp_bind_cleanup>:
 80385c4:	b538      	push	{r3, r4, r5, lr}
 80385c6:	4604      	mov	r4, r0
 80385c8:	2001      	movs	r0, #1
 80385ca:	6ee5      	ldr	r5, [r4, #108]	; 0x6c
 80385cc:	f001 fc20 	bl	8039e10 <_tx_thread_interrupt_control>
 80385d0:	6ea3      	ldr	r3, [r4, #104]	; 0x68
 80385d2:	b123      	cbz	r3, 80385de <_nx_udp_bind_cleanup+0x1a>
 80385d4:	b11d      	cbz	r5, 80385de <_nx_udp_bind_cleanup+0x1a>
 80385d6:	4b15      	ldr	r3, [pc, #84]	; (803862c <_nx_udp_bind_cleanup+0x68>)
 80385d8:	682a      	ldr	r2, [r5, #0]
 80385da:	429a      	cmp	r2, r3
 80385dc:	d003      	beq.n	80385e6 <_nx_udp_bind_cleanup+0x22>
 80385de:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80385e2:	f001 bc15 	b.w	8039e10 <_tx_thread_interrupt_control>
 80385e6:	6f23      	ldr	r3, [r4, #112]	; 0x70
 80385e8:	6d2a      	ldr	r2, [r5, #80]	; 0x50
 80385ea:	2100      	movs	r1, #0
 80385ec:	42a3      	cmp	r3, r4
 80385ee:	6569      	str	r1, [r5, #84]	; 0x54
 80385f0:	66a1      	str	r1, [r4, #104]	; 0x68
 80385f2:	d018      	beq.n	8038626 <_nx_udp_bind_cleanup+0x62>
 80385f4:	6f61      	ldr	r1, [r4, #116]	; 0x74
 80385f6:	6613      	str	r3, [r2, #96]	; 0x60
 80385f8:	6759      	str	r1, [r3, #116]	; 0x74
 80385fa:	6f61      	ldr	r1, [r4, #116]	; 0x74
 80385fc:	670b      	str	r3, [r1, #112]	; 0x70
 80385fe:	6e53      	ldr	r3, [r2, #100]	; 0x64
 8038600:	6b21      	ldr	r1, [r4, #48]	; 0x30
 8038602:	3b01      	subs	r3, #1
 8038604:	290c      	cmp	r1, #12
 8038606:	6653      	str	r3, [r2, #100]	; 0x64
 8038608:	d1e9      	bne.n	80385de <_nx_udp_bind_cleanup+0x1a>
 803860a:	4a09      	ldr	r2, [pc, #36]	; (8038630 <_nx_udp_bind_cleanup+0x6c>)
 803860c:	6813      	ldr	r3, [r2, #0]
 803860e:	2123      	movs	r1, #35	; 0x23
 8038610:	3301      	adds	r3, #1
 8038612:	f8c4 1084 	str.w	r1, [r4, #132]	; 0x84
 8038616:	6013      	str	r3, [r2, #0]
 8038618:	f001 fbfa 	bl	8039e10 <_tx_thread_interrupt_control>
 803861c:	4620      	mov	r0, r4
 803861e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8038622:	f001 bda3 	b.w	803a16c <_tx_thread_system_resume>
 8038626:	6611      	str	r1, [r2, #96]	; 0x60
 8038628:	e7e9      	b.n	80385fe <_nx_udp_bind_cleanup+0x3a>
 803862a:	bf00      	nop
 803862c:	55445020 	.word	0x55445020
 8038630:	2001227c 	.word	0x2001227c

08038634 <_nx_udp_enable>:
 8038634:	4b02      	ldr	r3, [pc, #8]	; (8038640 <_nx_udp_enable+0xc>)
 8038636:	f8c0 3420 	str.w	r3, [r0, #1056]	; 0x420
 803863a:	2000      	movs	r0, #0
 803863c:	4770      	bx	lr
 803863e:	bf00      	nop
 8038640:	080386ad 	.word	0x080386ad

08038644 <_nx_udp_free_port_find>:
 8038644:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8038648:	4607      	mov	r7, r0
 803864a:	4688      	mov	r8, r1
 803864c:	4691      	mov	r9, r2
 803864e:	f500 7a9c 	add.w	sl, r0, #312	; 0x138
 8038652:	460c      	mov	r4, r1
 8038654:	f04f 31ff 	mov.w	r1, #4294967295
 8038658:	4650      	mov	r0, sl
 803865a:	f001 f805 	bl	8039668 <_tx_mutex_get>
 803865e:	eb04 2314 	add.w	r3, r4, r4, lsr #8
 8038662:	f003 031f 	and.w	r3, r3, #31
 8038666:	33e6      	adds	r3, #230	; 0xe6
 8038668:	f857 6023 	ldr.w	r6, [r7, r3, lsl #2]
 803866c:	b1ae      	cbz	r6, 803869a <_nx_udp_free_port_find+0x56>
 803866e:	4633      	mov	r3, r6
 8038670:	e002      	b.n	8038678 <_nx_udp_free_port_find+0x34>
 8038672:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8038674:	429e      	cmp	r6, r3
 8038676:	d010      	beq.n	803869a <_nx_udp_free_port_find+0x56>
 8038678:	689d      	ldr	r5, [r3, #8]
 803867a:	42a5      	cmp	r5, r4
 803867c:	d1f9      	bne.n	8038672 <_nx_udp_free_port_find+0x2e>
 803867e:	3401      	adds	r4, #1
 8038680:	4650      	mov	r0, sl
 8038682:	f001 f967 	bl	8039954 <_tx_mutex_put>
 8038686:	f5b4 3f80 	cmp.w	r4, #65536	; 0x10000
 803868a:	bf28      	it	cs
 803868c:	f44f 4440 	movcs.w	r4, #49152	; 0xc000
 8038690:	4544      	cmp	r4, r8
 8038692:	d1df      	bne.n	8038654 <_nx_udp_free_port_find+0x10>
 8038694:	2045      	movs	r0, #69	; 0x45
 8038696:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 803869a:	4650      	mov	r0, sl
 803869c:	f001 f95a 	bl	8039954 <_tx_mutex_put>
 80386a0:	f8c9 4000 	str.w	r4, [r9]
 80386a4:	2000      	movs	r0, #0
 80386a6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80386aa:	bf00      	nop

080386ac <_nx_udp_packet_receive>:
 80386ac:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80386b0:	f8d1 e02c 	ldr.w	lr, [r1, #44]	; 0x2c
 80386b4:	4c89      	ldr	r4, [pc, #548]	; (80388dc <_nx_udp_packet_receive+0x230>)
 80386b6:	e9de 2600 	ldrd	r2, r6, [lr]
 80386ba:	ea82 4332 	eor.w	r3, r2, r2, ror #16
 80386be:	0a1b      	lsrs	r3, r3, #8
 80386c0:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80386c4:	ea83 2332 	eor.w	r3, r3, r2, ror #8
 80386c8:	460f      	mov	r7, r1
 80386ca:	ea86 4236 	eor.w	r2, r6, r6, ror #16
 80386ce:	f8d0 1090 	ldr.w	r1, [r0, #144]	; 0x90
 80386d2:	0a12      	lsrs	r2, r2, #8
 80386d4:	3101      	adds	r1, #1
 80386d6:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 80386da:	f8c0 1090 	str.w	r1, [r0, #144]	; 0x90
 80386de:	ea82 2236 	eor.w	r2, r2, r6, ror #8
 80386e2:	6821      	ldr	r1, [r4, #0]
 80386e4:	f8ce 2004 	str.w	r2, [lr, #4]
 80386e8:	b29e      	uxth	r6, r3
 80386ea:	eb06 2813 	add.w	r8, r6, r3, lsr #8
 80386ee:	4605      	mov	r5, r0
 80386f0:	f8ce 3000 	str.w	r3, [lr]
 80386f4:	f008 081f 	and.w	r8, r8, #31
 80386f8:	2900      	cmp	r1, #0
 80386fa:	d069      	beq.n	80387d0 <_nx_udp_packet_receive+0x124>
 80386fc:	f8df 91e0 	ldr.w	r9, [pc, #480]	; 80388e0 <_nx_udp_packet_receive+0x234>
 8038700:	f8d9 3000 	ldr.w	r3, [r9]
 8038704:	eb00 0888 	add.w	r8, r0, r8, lsl #2
 8038708:	2b00      	cmp	r3, #0
 803870a:	d03a      	beq.n	8038782 <_nx_udp_packet_receive+0xd6>
 803870c:	f8d8 2398 	ldr.w	r2, [r8, #920]	; 0x398
 8038710:	2a00      	cmp	r2, #0
 8038712:	f000 80a0 	beq.w	8038856 <_nx_udp_packet_receive+0x1aa>
 8038716:	4614      	mov	r4, r2
 8038718:	e002      	b.n	8038720 <_nx_udp_packet_receive+0x74>
 803871a:	6ce4      	ldr	r4, [r4, #76]	; 0x4c
 803871c:	4294      	cmp	r4, r2
 803871e:	d044      	beq.n	80387aa <_nx_udp_packet_receive+0xfe>
 8038720:	68a3      	ldr	r3, [r4, #8]
 8038722:	42b3      	cmp	r3, r6
 8038724:	d1f9      	bne.n	803871a <_nx_udp_packet_receive+0x6e>
 8038726:	69a3      	ldr	r3, [r4, #24]
 8038728:	69ba      	ldr	r2, [r7, #24]
 803872a:	f8d5 0094 	ldr.w	r0, [r5, #148]	; 0x94
 803872e:	f103 0c01 	add.w	ip, r3, #1
 8038732:	69e3      	ldr	r3, [r4, #28]
 8038734:	f8c4 c018 	str.w	ip, [r4, #24]
 8038738:	3a08      	subs	r2, #8
 803873a:	4410      	add	r0, r2
 803873c:	441a      	add	r2, r3
 803873e:	f8c5 0094 	str.w	r0, [r5, #148]	; 0x94
 8038742:	61e2      	str	r2, [r4, #28]
 8038744:	b119      	cbz	r1, 803874e <_nx_udp_packet_receive+0xa2>
 8038746:	4b66      	ldr	r3, [pc, #408]	; (80388e0 <_nx_udp_packet_receive+0x234>)
 8038748:	681b      	ldr	r3, [r3, #0]
 803874a:	2b00      	cmp	r3, #0
 803874c:	d07e      	beq.n	803884c <_nx_udp_packet_receive+0x1a0>
 803874e:	2001      	movs	r0, #1
 8038750:	f001 fb5e 	bl	8039e10 <_tx_thread_interrupt_control>
 8038754:	68a3      	ldr	r3, [r4, #8]
 8038756:	42b3      	cmp	r3, r6
 8038758:	d103      	bne.n	8038762 <_nx_udp_packet_receive+0xb6>
 803875a:	4b62      	ldr	r3, [pc, #392]	; (80388e4 <_nx_udp_packet_receive+0x238>)
 803875c:	6822      	ldr	r2, [r4, #0]
 803875e:	429a      	cmp	r2, r3
 8038760:	d043      	beq.n	80387ea <_nx_udp_packet_receive+0x13e>
 8038762:	e9d5 1227 	ldrd	r1, r2, [r5, #156]	; 0x9c
 8038766:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8038768:	3101      	adds	r1, #1
 803876a:	3201      	adds	r2, #1
 803876c:	3301      	adds	r3, #1
 803876e:	e9c5 1227 	strd	r1, r2, [r5, #156]	; 0x9c
 8038772:	6263      	str	r3, [r4, #36]	; 0x24
 8038774:	f001 fb4c 	bl	8039e10 <_tx_thread_interrupt_control>
 8038778:	4638      	mov	r0, r7
 803877a:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 803877e:	f7ff be4b 	b.w	8038418 <_nx_packet_release>
 8038782:	f04f 31ff 	mov.w	r1, #4294967295
 8038786:	f500 709c 	add.w	r0, r0, #312	; 0x138
 803878a:	f000 ff6d 	bl	8039668 <_tx_mutex_get>
 803878e:	f8d8 2398 	ldr.w	r2, [r8, #920]	; 0x398
 8038792:	6821      	ldr	r1, [r4, #0]
 8038794:	2a00      	cmp	r2, #0
 8038796:	d1be      	bne.n	8038716 <_nx_udp_packet_receive+0x6a>
 8038798:	e9d5 2327 	ldrd	r2, r3, [r5, #156]	; 0x9c
 803879c:	3201      	adds	r2, #1
 803879e:	3301      	adds	r3, #1
 80387a0:	e9c5 2327 	strd	r2, r3, [r5, #156]	; 0x9c
 80387a4:	2900      	cmp	r1, #0
 80387a6:	d15c      	bne.n	8038862 <_nx_udp_packet_receive+0x1b6>
 80387a8:	e7e6      	b.n	8038778 <_nx_udp_packet_receive+0xcc>
 80387aa:	b119      	cbz	r1, 80387b4 <_nx_udp_packet_receive+0x108>
 80387ac:	4b4c      	ldr	r3, [pc, #304]	; (80388e0 <_nx_udp_packet_receive+0x234>)
 80387ae:	681b      	ldr	r3, [r3, #0]
 80387b0:	2b00      	cmp	r3, #0
 80387b2:	d04b      	beq.n	803884c <_nx_udp_packet_receive+0x1a0>
 80387b4:	68a3      	ldr	r3, [r4, #8]
 80387b6:	42b3      	cmp	r3, r6
 80387b8:	d0c9      	beq.n	803874e <_nx_udp_packet_receive+0xa2>
 80387ba:	e9d5 2327 	ldrd	r2, r3, [r5, #156]	; 0x9c
 80387be:	3201      	adds	r2, #1
 80387c0:	3301      	adds	r3, #1
 80387c2:	e9c5 2327 	strd	r2, r3, [r5, #156]	; 0x9c
 80387c6:	4638      	mov	r0, r7
 80387c8:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80387cc:	f7ff be24 	b.w	8038418 <_nx_packet_release>
 80387d0:	eb00 0888 	add.w	r8, r0, r8, lsl #2
 80387d4:	f8d8 2398 	ldr.w	r2, [r8, #920]	; 0x398
 80387d8:	2a00      	cmp	r2, #0
 80387da:	d19c      	bne.n	8038716 <_nx_udp_packet_receive+0x6a>
 80387dc:	e9d5 2327 	ldrd	r2, r3, [r5, #156]	; 0x9c
 80387e0:	3201      	adds	r2, #1
 80387e2:	3301      	adds	r3, #1
 80387e4:	e9c5 2327 	strd	r2, r3, [r5, #156]	; 0x9c
 80387e8:	e7c6      	b.n	8038778 <_nx_udp_packet_receive+0xcc>
 80387ea:	f8d8 3398 	ldr.w	r3, [r8, #920]	; 0x398
 80387ee:	f8d4 9070 	ldr.w	r9, [r4, #112]	; 0x70
 80387f2:	42a3      	cmp	r3, r4
 80387f4:	d003      	beq.n	80387fe <_nx_udp_packet_receive+0x152>
 80387f6:	f8d5 3140 	ldr.w	r3, [r5, #320]	; 0x140
 80387fa:	2b00      	cmp	r3, #0
 80387fc:	d03a      	beq.n	8038874 <_nx_udp_packet_receive+0x1c8>
 80387fe:	6da6      	ldr	r6, [r4, #88]	; 0x58
 8038800:	2e00      	cmp	r6, #0
 8038802:	d03a      	beq.n	803887a <_nx_udp_packet_receive+0x1ce>
 8038804:	6f33      	ldr	r3, [r6, #112]	; 0x70
 8038806:	42b3      	cmp	r3, r6
 8038808:	d05a      	beq.n	80388c0 <_nx_udp_packet_receive+0x214>
 803880a:	6f72      	ldr	r2, [r6, #116]	; 0x74
 803880c:	65a3      	str	r3, [r4, #88]	; 0x58
 803880e:	675a      	str	r2, [r3, #116]	; 0x74
 8038810:	6f72      	ldr	r2, [r6, #116]	; 0x74
 8038812:	6713      	str	r3, [r2, #112]	; 0x70
 8038814:	4934      	ldr	r1, [pc, #208]	; (80388e8 <_nx_udp_packet_receive+0x23c>)
 8038816:	6de3      	ldr	r3, [r4, #92]	; 0x5c
 8038818:	680a      	ldr	r2, [r1, #0]
 803881a:	f8d6 c07c 	ldr.w	ip, [r6, #124]	; 0x7c
 803881e:	3201      	adds	r2, #1
 8038820:	3b01      	subs	r3, #1
 8038822:	2500      	movs	r5, #0
 8038824:	65e3      	str	r3, [r4, #92]	; 0x5c
 8038826:	600a      	str	r2, [r1, #0]
 8038828:	66b5      	str	r5, [r6, #104]	; 0x68
 803882a:	f8cc 7000 	str.w	r7, [ip]
 803882e:	f001 faef 	bl	8039e10 <_tx_thread_interrupt_control>
 8038832:	f8c6 5084 	str.w	r5, [r6, #132]	; 0x84
 8038836:	4630      	mov	r0, r6
 8038838:	f001 fc98 	bl	803a16c <_tx_thread_system_resume>
 803883c:	f1b9 0f00 	cmp.w	r9, #0
 8038840:	d03c      	beq.n	80388bc <_nx_udp_packet_receive+0x210>
 8038842:	4620      	mov	r0, r4
 8038844:	464b      	mov	r3, r9
 8038846:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 803884a:	4718      	bx	r3
 803884c:	f505 709c 	add.w	r0, r5, #312	; 0x138
 8038850:	f001 f880 	bl	8039954 <_tx_mutex_put>
 8038854:	e7ae      	b.n	80387b4 <_nx_udp_packet_receive+0x108>
 8038856:	e9d5 2327 	ldrd	r2, r3, [r5, #156]	; 0x9c
 803885a:	3201      	adds	r2, #1
 803885c:	3301      	adds	r3, #1
 803885e:	e9c5 2327 	strd	r2, r3, [r5, #156]	; 0x9c
 8038862:	f8d9 3000 	ldr.w	r3, [r9]
 8038866:	2b00      	cmp	r3, #0
 8038868:	d186      	bne.n	8038778 <_nx_udp_packet_receive+0xcc>
 803886a:	f505 709c 	add.w	r0, r5, #312	; 0x138
 803886e:	f001 f871 	bl	8039954 <_tx_mutex_put>
 8038872:	e781      	b.n	8038778 <_nx_udp_packet_receive+0xcc>
 8038874:	f8c8 4398 	str.w	r4, [r8, #920]	; 0x398
 8038878:	e7c1      	b.n	80387fe <_nx_udp_packet_receive+0x152>
 803887a:	f8d4 8044 	ldr.w	r8, [r4, #68]	; 0x44
 803887e:	f1b8 0f00 	cmp.w	r8, #0
 8038882:	d020      	beq.n	80388c6 <_nx_udp_packet_receive+0x21a>
 8038884:	6be2      	ldr	r2, [r4, #60]	; 0x3c
 8038886:	6ca3      	ldr	r3, [r4, #72]	; 0x48
 8038888:	6c21      	ldr	r1, [r4, #64]	; 0x40
 803888a:	605f      	str	r7, [r3, #4]
 803888c:	1c53      	adds	r3, r2, #1
 803888e:	428b      	cmp	r3, r1
 8038890:	64a7      	str	r7, [r4, #72]	; 0x48
 8038892:	607e      	str	r6, [r7, #4]
 8038894:	63e3      	str	r3, [r4, #60]	; 0x3c
 8038896:	d91d      	bls.n	80388d4 <_nx_udp_packet_receive+0x228>
 8038898:	f8d5 10a0 	ldr.w	r1, [r5, #160]	; 0xa0
 803889c:	6a63      	ldr	r3, [r4, #36]	; 0x24
 803889e:	f8d8 6004 	ldr.w	r6, [r8, #4]
 80388a2:	6466      	str	r6, [r4, #68]	; 0x44
 80388a4:	3101      	adds	r1, #1
 80388a6:	3301      	adds	r3, #1
 80388a8:	63e2      	str	r2, [r4, #60]	; 0x3c
 80388aa:	f8c5 10a0 	str.w	r1, [r5, #160]	; 0xa0
 80388ae:	6263      	str	r3, [r4, #36]	; 0x24
 80388b0:	f001 faae 	bl	8039e10 <_tx_thread_interrupt_control>
 80388b4:	4640      	mov	r0, r8
 80388b6:	f7ff fdaf 	bl	8038418 <_nx_packet_release>
 80388ba:	e7bf      	b.n	803883c <_nx_udp_packet_receive+0x190>
 80388bc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80388c0:	2300      	movs	r3, #0
 80388c2:	65a3      	str	r3, [r4, #88]	; 0x58
 80388c4:	e7a6      	b.n	8038814 <_nx_udp_packet_receive+0x168>
 80388c6:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 80388c8:	6467      	str	r7, [r4, #68]	; 0x44
 80388ca:	3301      	adds	r3, #1
 80388cc:	64a7      	str	r7, [r4, #72]	; 0x48
 80388ce:	f8c7 8004 	str.w	r8, [r7, #4]
 80388d2:	63e3      	str	r3, [r4, #60]	; 0x3c
 80388d4:	f001 fa9c 	bl	8039e10 <_tx_thread_interrupt_control>
 80388d8:	e7b0      	b.n	803883c <_nx_udp_packet_receive+0x190>
 80388da:	bf00      	nop
 80388dc:	2001226c 	.word	0x2001226c
 80388e0:	200024c8 	.word	0x200024c8
 80388e4:	55445020 	.word	0x55445020
 80388e8:	2001227c 	.word	0x2001227c

080388ec <_nx_udp_receive_cleanup>:
 80388ec:	b538      	push	{r3, r4, r5, lr}
 80388ee:	4604      	mov	r4, r0
 80388f0:	2001      	movs	r0, #1
 80388f2:	6ee5      	ldr	r5, [r4, #108]	; 0x6c
 80388f4:	f001 fa8c 	bl	8039e10 <_tx_thread_interrupt_control>
 80388f8:	6ea3      	ldr	r3, [r4, #104]	; 0x68
 80388fa:	b123      	cbz	r3, 8038906 <_nx_udp_receive_cleanup+0x1a>
 80388fc:	b11d      	cbz	r5, 8038906 <_nx_udp_receive_cleanup+0x1a>
 80388fe:	4b14      	ldr	r3, [pc, #80]	; (8038950 <_nx_udp_receive_cleanup+0x64>)
 8038900:	682a      	ldr	r2, [r5, #0]
 8038902:	429a      	cmp	r2, r3
 8038904:	d003      	beq.n	803890e <_nx_udp_receive_cleanup+0x22>
 8038906:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 803890a:	f001 ba81 	b.w	8039e10 <_tx_thread_interrupt_control>
 803890e:	6f23      	ldr	r3, [r4, #112]	; 0x70
 8038910:	2200      	movs	r2, #0
 8038912:	42a3      	cmp	r3, r4
 8038914:	66a2      	str	r2, [r4, #104]	; 0x68
 8038916:	d018      	beq.n	803894a <_nx_udp_receive_cleanup+0x5e>
 8038918:	6f62      	ldr	r2, [r4, #116]	; 0x74
 803891a:	65ab      	str	r3, [r5, #88]	; 0x58
 803891c:	675a      	str	r2, [r3, #116]	; 0x74
 803891e:	6f62      	ldr	r2, [r4, #116]	; 0x74
 8038920:	6713      	str	r3, [r2, #112]	; 0x70
 8038922:	6deb      	ldr	r3, [r5, #92]	; 0x5c
 8038924:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8038926:	3b01      	subs	r3, #1
 8038928:	2a0c      	cmp	r2, #12
 803892a:	65eb      	str	r3, [r5, #92]	; 0x5c
 803892c:	d1eb      	bne.n	8038906 <_nx_udp_receive_cleanup+0x1a>
 803892e:	4a09      	ldr	r2, [pc, #36]	; (8038954 <_nx_udp_receive_cleanup+0x68>)
 8038930:	6813      	ldr	r3, [r2, #0]
 8038932:	2101      	movs	r1, #1
 8038934:	440b      	add	r3, r1
 8038936:	f8c4 1084 	str.w	r1, [r4, #132]	; 0x84
 803893a:	6013      	str	r3, [r2, #0]
 803893c:	f001 fa68 	bl	8039e10 <_tx_thread_interrupt_control>
 8038940:	4620      	mov	r0, r4
 8038942:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8038946:	f001 bc11 	b.w	803a16c <_tx_thread_system_resume>
 803894a:	65aa      	str	r2, [r5, #88]	; 0x58
 803894c:	e7e9      	b.n	8038922 <_nx_udp_receive_cleanup+0x36>
 803894e:	bf00      	nop
 8038950:	55445020 	.word	0x55445020
 8038954:	2001227c 	.word	0x2001227c

08038958 <_nx_udp_socket_bind>:
 8038958:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 803895c:	68c4      	ldr	r4, [r0, #12]
 803895e:	b082      	sub	sp, #8
 8038960:	4605      	mov	r5, r0
 8038962:	f504 789c 	add.w	r8, r4, #312	; 0x138
 8038966:	9101      	str	r1, [sp, #4]
 8038968:	4640      	mov	r0, r8
 803896a:	f04f 31ff 	mov.w	r1, #4294967295
 803896e:	4617      	mov	r7, r2
 8038970:	f000 fe7a 	bl	8039668 <_tx_mutex_get>
 8038974:	6ceb      	ldr	r3, [r5, #76]	; 0x4c
 8038976:	2b00      	cmp	r3, #0
 8038978:	d146      	bne.n	8038a08 <_nx_udp_socket_bind+0xb0>
 803897a:	6d6b      	ldr	r3, [r5, #84]	; 0x54
 803897c:	2b00      	cmp	r3, #0
 803897e:	d143      	bne.n	8038a08 <_nx_udp_socket_bind+0xb0>
 8038980:	9901      	ldr	r1, [sp, #4]
 8038982:	2900      	cmp	r1, #0
 8038984:	d04c      	beq.n	8038a20 <_nx_udp_socket_bind+0xc8>
 8038986:	eb01 2611 	add.w	r6, r1, r1, lsr #8
 803898a:	f006 061f 	and.w	r6, r6, #31
 803898e:	eb04 0686 	add.w	r6, r4, r6, lsl #2
 8038992:	60a9      	str	r1, [r5, #8]
 8038994:	f8d6 0398 	ldr.w	r0, [r6, #920]	; 0x398
 8038998:	2800      	cmp	r0, #0
 803899a:	d068      	beq.n	8038a6e <_nx_udp_socket_bind+0x116>
 803899c:	4604      	mov	r4, r0
 803899e:	e002      	b.n	80389a6 <_nx_udp_socket_bind+0x4e>
 80389a0:	6ce4      	ldr	r4, [r4, #76]	; 0x4c
 80389a2:	42a0      	cmp	r0, r4
 80389a4:	d04f      	beq.n	8038a46 <_nx_udp_socket_bind+0xee>
 80389a6:	68a3      	ldr	r3, [r4, #8]
 80389a8:	428b      	cmp	r3, r1
 80389aa:	d1f9      	bne.n	80389a0 <_nx_udp_socket_bind+0x48>
 80389ac:	2f00      	cmp	r7, #0
 80389ae:	d032      	beq.n	8038a16 <_nx_udp_socket_bind+0xbe>
 80389b0:	2001      	movs	r0, #1
 80389b2:	f001 fa2d 	bl	8039e10 <_tx_thread_interrupt_control>
 80389b6:	4a36      	ldr	r2, [pc, #216]	; (8038a90 <_nx_udp_socket_bind+0x138>)
 80389b8:	6e23      	ldr	r3, [r4, #96]	; 0x60
 80389ba:	6816      	ldr	r6, [r2, #0]
 80389bc:	4a35      	ldr	r2, [pc, #212]	; (8038a94 <_nx_udp_socket_bind+0x13c>)
 80389be:	e9c6 251a 	strd	r2, r5, [r6, #104]	; 0x68
 80389c2:	e9c5 4614 	strd	r4, r6, [r5, #80]	; 0x50
 80389c6:	2b00      	cmp	r3, #0
 80389c8:	d059      	beq.n	8038a7e <_nx_udp_socket_bind+0x126>
 80389ca:	6f5a      	ldr	r2, [r3, #116]	; 0x74
 80389cc:	6772      	str	r2, [r6, #116]	; 0x74
 80389ce:	6f5a      	ldr	r2, [r3, #116]	; 0x74
 80389d0:	6733      	str	r3, [r6, #112]	; 0x70
 80389d2:	6716      	str	r6, [r2, #112]	; 0x70
 80389d4:	675e      	str	r6, [r3, #116]	; 0x74
 80389d6:	6e62      	ldr	r2, [r4, #100]	; 0x64
 80389d8:	492f      	ldr	r1, [pc, #188]	; (8038a98 <_nx_udp_socket_bind+0x140>)
 80389da:	3201      	adds	r2, #1
 80389dc:	680b      	ldr	r3, [r1, #0]
 80389de:	6662      	str	r2, [r4, #100]	; 0x64
 80389e0:	2201      	movs	r2, #1
 80389e2:	240c      	movs	r4, #12
 80389e4:	3301      	adds	r3, #1
 80389e6:	63b2      	str	r2, [r6, #56]	; 0x38
 80389e8:	64f7      	str	r7, [r6, #76]	; 0x4c
 80389ea:	6334      	str	r4, [r6, #48]	; 0x30
 80389ec:	600b      	str	r3, [r1, #0]
 80389ee:	f001 fa0f 	bl	8039e10 <_tx_thread_interrupt_control>
 80389f2:	4640      	mov	r0, r8
 80389f4:	f000 ffae 	bl	8039954 <_tx_mutex_put>
 80389f8:	4630      	mov	r0, r6
 80389fa:	f001 fcbb 	bl	803a374 <_tx_thread_system_suspend>
 80389fe:	f8d6 0084 	ldr.w	r0, [r6, #132]	; 0x84
 8038a02:	b002      	add	sp, #8
 8038a04:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8038a08:	4640      	mov	r0, r8
 8038a0a:	f000 ffa3 	bl	8039954 <_tx_mutex_put>
 8038a0e:	2022      	movs	r0, #34	; 0x22
 8038a10:	b002      	add	sp, #8
 8038a12:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8038a16:	4640      	mov	r0, r8
 8038a18:	f000 ff9c 	bl	8039954 <_tx_mutex_put>
 8038a1c:	2023      	movs	r0, #35	; 0x23
 8038a1e:	e7f7      	b.n	8038a10 <_nx_udp_socket_bind+0xb8>
 8038a20:	f006 fbec 	bl	803f1fc <rand>
 8038a24:	4243      	negs	r3, r0
 8038a26:	f3c3 030d 	ubfx	r3, r3, #0, #14
 8038a2a:	f3c0 010d 	ubfx	r1, r0, #0, #14
 8038a2e:	bf58      	it	pl
 8038a30:	4259      	negpl	r1, r3
 8038a32:	f501 4140 	add.w	r1, r1, #49152	; 0xc000
 8038a36:	aa01      	add	r2, sp, #4
 8038a38:	4620      	mov	r0, r4
 8038a3a:	9101      	str	r1, [sp, #4]
 8038a3c:	f7ff fe02 	bl	8038644 <_nx_udp_free_port_find>
 8038a40:	bb08      	cbnz	r0, 8038a86 <_nx_udp_socket_bind+0x12e>
 8038a42:	9901      	ldr	r1, [sp, #4]
 8038a44:	e79f      	b.n	8038986 <_nx_udp_socket_bind+0x2e>
 8038a46:	2001      	movs	r0, #1
 8038a48:	f001 f9e2 	bl	8039e10 <_tx_thread_interrupt_control>
 8038a4c:	f8d6 3398 	ldr.w	r3, [r6, #920]	; 0x398
 8038a50:	64eb      	str	r3, [r5, #76]	; 0x4c
 8038a52:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 8038a54:	652a      	str	r2, [r5, #80]	; 0x50
 8038a56:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 8038a58:	64d5      	str	r5, [r2, #76]	; 0x4c
 8038a5a:	651d      	str	r5, [r3, #80]	; 0x50
 8038a5c:	f001 f9d8 	bl	8039e10 <_tx_thread_interrupt_control>
 8038a60:	4640      	mov	r0, r8
 8038a62:	f000 ff77 	bl	8039954 <_tx_mutex_put>
 8038a66:	2000      	movs	r0, #0
 8038a68:	b002      	add	sp, #8
 8038a6a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8038a6e:	2001      	movs	r0, #1
 8038a70:	f001 f9ce 	bl	8039e10 <_tx_thread_interrupt_control>
 8038a74:	e9c5 5513 	strd	r5, r5, [r5, #76]	; 0x4c
 8038a78:	f8c6 5398 	str.w	r5, [r6, #920]	; 0x398
 8038a7c:	e7ee      	b.n	8038a5c <_nx_udp_socket_bind+0x104>
 8038a7e:	6626      	str	r6, [r4, #96]	; 0x60
 8038a80:	e9c6 661c 	strd	r6, r6, [r6, #112]	; 0x70
 8038a84:	e7a7      	b.n	80389d6 <_nx_udp_socket_bind+0x7e>
 8038a86:	4640      	mov	r0, r8
 8038a88:	f000 ff64 	bl	8039954 <_tx_mutex_put>
 8038a8c:	2045      	movs	r0, #69	; 0x45
 8038a8e:	e7bf      	b.n	8038a10 <_nx_udp_socket_bind+0xb8>
 8038a90:	2001226c 	.word	0x2001226c
 8038a94:	080385c5 	.word	0x080385c5
 8038a98:	2001227c 	.word	0x2001227c

08038a9c <_nx_udp_socket_create>:
 8038a9c:	e92d 4af8 	stmdb	sp!, {r3, r4, r5, r6, r7, r9, fp, lr}
 8038aa0:	9d08      	ldr	r5, [sp, #32]
 8038aa2:	460c      	mov	r4, r1
 8038aa4:	4606      	mov	r6, r0
 8038aa6:	4693      	mov	fp, r2
 8038aa8:	4608      	mov	r0, r1
 8038aaa:	227c      	movs	r2, #124	; 0x7c
 8038aac:	2100      	movs	r1, #0
 8038aae:	461f      	mov	r7, r3
 8038ab0:	f006 fdd0 	bl	803f654 <memset>
 8038ab4:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8038ab6:	6322      	str	r2, [r4, #48]	; 0x30
 8038ab8:	f405 4380 	and.w	r3, r5, #16384	; 0x4000
 8038abc:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8038abe:	6422      	str	r2, [r4, #64]	; 0x40
 8038ac0:	2500      	movs	r5, #0
 8038ac2:	f506 799c 	add.w	r9, r6, #312	; 0x138
 8038ac6:	6363      	str	r3, [r4, #52]	; 0x34
 8038ac8:	f04f 31ff 	mov.w	r1, #4294967295
 8038acc:	e9c4 5513 	strd	r5, r5, [r4, #76]	; 0x4c
 8038ad0:	e9c4 5518 	strd	r5, r5, [r4, #96]	; 0x60
 8038ad4:	e9c4 5511 	strd	r5, r5, [r4, #68]	; 0x44
 8038ad8:	f8c4 b004 	str.w	fp, [r4, #4]
 8038adc:	60e6      	str	r6, [r4, #12]
 8038ade:	62e7      	str	r7, [r4, #44]	; 0x2c
 8038ae0:	4648      	mov	r0, r9
 8038ae2:	63a5      	str	r5, [r4, #56]	; 0x38
 8038ae4:	6565      	str	r5, [r4, #84]	; 0x54
 8038ae6:	63e5      	str	r5, [r4, #60]	; 0x3c
 8038ae8:	6725      	str	r5, [r4, #112]	; 0x70
 8038aea:	f000 fdbd 	bl	8039668 <_tx_mutex_get>
 8038aee:	2001      	movs	r0, #1
 8038af0:	f001 f98e 	bl	8039e10 <_tx_thread_interrupt_control>
 8038af4:	f8d6 3418 	ldr.w	r3, [r6, #1048]	; 0x418
 8038af8:	4a0d      	ldr	r2, [pc, #52]	; (8038b30 <_nx_udp_socket_create+0x94>)
 8038afa:	67a5      	str	r5, [r4, #120]	; 0x78
 8038afc:	6022      	str	r2, [r4, #0]
 8038afe:	b18b      	cbz	r3, 8038b24 <_nx_udp_socket_create+0x88>
 8038b00:	6eda      	ldr	r2, [r3, #108]	; 0x6c
 8038b02:	66dc      	str	r4, [r3, #108]	; 0x6c
 8038b04:	6694      	str	r4, [r2, #104]	; 0x68
 8038b06:	e9c4 321a 	strd	r3, r2, [r4, #104]	; 0x68
 8038b0a:	f8d6 341c 	ldr.w	r3, [r6, #1052]	; 0x41c
 8038b0e:	3301      	adds	r3, #1
 8038b10:	f8c6 341c 	str.w	r3, [r6, #1052]	; 0x41c
 8038b14:	f001 f97c 	bl	8039e10 <_tx_thread_interrupt_control>
 8038b18:	4648      	mov	r0, r9
 8038b1a:	f000 ff1b 	bl	8039954 <_tx_mutex_put>
 8038b1e:	2000      	movs	r0, #0
 8038b20:	e8bd 8af8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r9, fp, pc}
 8038b24:	f8c6 4418 	str.w	r4, [r6, #1048]	; 0x418
 8038b28:	e9c4 441a 	strd	r4, r4, [r4, #104]	; 0x68
 8038b2c:	e7ed      	b.n	8038b0a <_nx_udp_socket_create+0x6e>
 8038b2e:	bf00      	nop
 8038b30:	55445020 	.word	0x55445020

08038b34 <_nx_udp_socket_receive>:
 8038b34:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8038b36:	2300      	movs	r3, #0
 8038b38:	4604      	mov	r4, r0
 8038b3a:	600b      	str	r3, [r1, #0]
 8038b3c:	2001      	movs	r0, #1
 8038b3e:	460d      	mov	r5, r1
 8038b40:	4617      	mov	r7, r2
 8038b42:	f001 f965 	bl	8039e10 <_tx_thread_interrupt_control>
 8038b46:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
 8038b48:	2b00      	cmp	r3, #0
 8038b4a:	d04a      	beq.n	8038be2 <_nx_udp_socket_receive+0xae>
 8038b4c:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8038b4e:	4601      	mov	r1, r0
 8038b50:	2b00      	cmp	r3, #0
 8038b52:	d131      	bne.n	8038bb8 <_nx_udp_socket_receive+0x84>
 8038b54:	2f00      	cmp	r7, #0
 8038b56:	d040      	beq.n	8038bda <_nx_udp_socket_receive+0xa6>
 8038b58:	4a24      	ldr	r2, [pc, #144]	; (8038bec <_nx_udp_socket_receive+0xb8>)
 8038b5a:	6da3      	ldr	r3, [r4, #88]	; 0x58
 8038b5c:	6816      	ldr	r6, [r2, #0]
 8038b5e:	4a24      	ldr	r2, [pc, #144]	; (8038bf0 <_nx_udp_socket_receive+0xbc>)
 8038b60:	66f4      	str	r4, [r6, #108]	; 0x6c
 8038b62:	67f5      	str	r5, [r6, #124]	; 0x7c
 8038b64:	66b2      	str	r2, [r6, #104]	; 0x68
 8038b66:	2b00      	cmp	r3, #0
 8038b68:	d033      	beq.n	8038bd2 <_nx_udp_socket_receive+0x9e>
 8038b6a:	6f5a      	ldr	r2, [r3, #116]	; 0x74
 8038b6c:	6772      	str	r2, [r6, #116]	; 0x74
 8038b6e:	6f5a      	ldr	r2, [r3, #116]	; 0x74
 8038b70:	6733      	str	r3, [r6, #112]	; 0x70
 8038b72:	6716      	str	r6, [r2, #112]	; 0x70
 8038b74:	675e      	str	r6, [r3, #116]	; 0x74
 8038b76:	6de2      	ldr	r2, [r4, #92]	; 0x5c
 8038b78:	f8df c078 	ldr.w	ip, [pc, #120]	; 8038bf4 <_nx_udp_socket_receive+0xc0>
 8038b7c:	3201      	adds	r2, #1
 8038b7e:	f8dc 3000 	ldr.w	r3, [ip]
 8038b82:	65e2      	str	r2, [r4, #92]	; 0x5c
 8038b84:	4608      	mov	r0, r1
 8038b86:	2201      	movs	r2, #1
 8038b88:	210c      	movs	r1, #12
 8038b8a:	3301      	adds	r3, #1
 8038b8c:	6331      	str	r1, [r6, #48]	; 0x30
 8038b8e:	63b2      	str	r2, [r6, #56]	; 0x38
 8038b90:	64f7      	str	r7, [r6, #76]	; 0x4c
 8038b92:	f8cc 3000 	str.w	r3, [ip]
 8038b96:	f001 f93b 	bl	8039e10 <_tx_thread_interrupt_control>
 8038b9a:	4630      	mov	r0, r6
 8038b9c:	f001 fbea 	bl	803a374 <_tx_thread_system_suspend>
 8038ba0:	f8d6 0084 	ldr.w	r0, [r6, #132]	; 0x84
 8038ba4:	b938      	cbnz	r0, 8038bb6 <_nx_udp_socket_receive+0x82>
 8038ba6:	682b      	ldr	r3, [r5, #0]
 8038ba8:	6999      	ldr	r1, [r3, #24]
 8038baa:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8038bac:	3908      	subs	r1, #8
 8038bae:	3208      	adds	r2, #8
 8038bb0:	6199      	str	r1, [r3, #24]
 8038bb2:	62da      	str	r2, [r3, #44]	; 0x2c
 8038bb4:	2000      	movs	r0, #0
 8038bb6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8038bb8:	6c62      	ldr	r2, [r4, #68]	; 0x44
 8038bba:	602a      	str	r2, [r5, #0]
 8038bbc:	6852      	ldr	r2, [r2, #4]
 8038bbe:	6462      	str	r2, [r4, #68]	; 0x44
 8038bc0:	b12a      	cbz	r2, 8038bce <_nx_udp_socket_receive+0x9a>
 8038bc2:	3b01      	subs	r3, #1
 8038bc4:	63e3      	str	r3, [r4, #60]	; 0x3c
 8038bc6:	4608      	mov	r0, r1
 8038bc8:	f001 f922 	bl	8039e10 <_tx_thread_interrupt_control>
 8038bcc:	e7eb      	b.n	8038ba6 <_nx_udp_socket_receive+0x72>
 8038bce:	64a2      	str	r2, [r4, #72]	; 0x48
 8038bd0:	e7f7      	b.n	8038bc2 <_nx_udp_socket_receive+0x8e>
 8038bd2:	65a6      	str	r6, [r4, #88]	; 0x58
 8038bd4:	e9c6 661c 	strd	r6, r6, [r6, #112]	; 0x70
 8038bd8:	e7cd      	b.n	8038b76 <_nx_udp_socket_receive+0x42>
 8038bda:	f001 f919 	bl	8039e10 <_tx_thread_interrupt_control>
 8038bde:	2001      	movs	r0, #1
 8038be0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8038be2:	f001 f915 	bl	8039e10 <_tx_thread_interrupt_control>
 8038be6:	2024      	movs	r0, #36	; 0x24
 8038be8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8038bea:	bf00      	nop
 8038bec:	2001226c 	.word	0x2001226c
 8038bf0:	080388ed 	.word	0x080388ed
 8038bf4:	2001227c 	.word	0x2001227c

08038bf8 <_nx_udp_socket_receive_notify>:
 8038bf8:	b538      	push	{r3, r4, r5, lr}
 8038bfa:	4604      	mov	r4, r0
 8038bfc:	460d      	mov	r5, r1
 8038bfe:	2001      	movs	r0, #1
 8038c00:	f001 f906 	bl	8039e10 <_tx_thread_interrupt_control>
 8038c04:	6725      	str	r5, [r4, #112]	; 0x70
 8038c06:	f001 f903 	bl	8039e10 <_tx_thread_interrupt_control>
 8038c0a:	2000      	movs	r0, #0
 8038c0c:	bd38      	pop	{r3, r4, r5, pc}
 8038c0e:	bf00      	nop

08038c10 <_nx_udp_socket_send>:
 8038c10:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8038c14:	4604      	mov	r4, r0
 8038c16:	b085      	sub	sp, #20
 8038c18:	2001      	movs	r0, #1
 8038c1a:	4699      	mov	r9, r3
 8038c1c:	460d      	mov	r5, r1
 8038c1e:	4690      	mov	r8, r2
 8038c20:	f001 f8f6 	bl	8039e10 <_tx_thread_interrupt_control>
 8038c24:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
 8038c26:	2b00      	cmp	r3, #0
 8038c28:	d061      	beq.n	8038cee <_nx_udp_socket_send+0xde>
 8038c2a:	68e6      	ldr	r6, [r4, #12]
 8038c2c:	f001 f8f0 	bl	8039e10 <_tx_thread_interrupt_control>
 8038c30:	69eb      	ldr	r3, [r5, #28]
 8038c32:	2b00      	cmp	r3, #0
 8038c34:	d058      	beq.n	8038ce8 <_nx_udp_socket_send+0xd8>
 8038c36:	f105 0320 	add.w	r3, r5, #32
 8038c3a:	f105 021c 	add.w	r2, r5, #28
 8038c3e:	4641      	mov	r1, r8
 8038c40:	4630      	mov	r0, r6
 8038c42:	f7ff f89d 	bl	8037d80 <_nx_ip_route_find>
 8038c46:	4607      	mov	r7, r0
 8038c48:	2800      	cmp	r0, #0
 8038c4a:	d148      	bne.n	8038cde <_nx_udp_socket_send+0xce>
 8038c4c:	69a8      	ldr	r0, [r5, #24]
 8038c4e:	68a2      	ldr	r2, [r4, #8]
 8038c50:	f8d5 e02c 	ldr.w	lr, [r5, #44]	; 0x2c
 8038c54:	f100 0a08 	add.w	sl, r0, #8
 8038c58:	ea4f 4b0a 	mov.w	fp, sl, lsl #16
 8038c5c:	ea4b 433b 	orr.w	r3, fp, fp, ror #16
 8038c60:	0a1b      	lsrs	r3, r3, #8
 8038c62:	f003 11ff 	and.w	r1, r3, #16711935	; 0xff00ff
 8038c66:	ea81 233b 	eor.w	r3, r1, fp, ror #8
 8038c6a:	ea49 4902 	orr.w	r9, r9, r2, lsl #16
 8038c6e:	6961      	ldr	r1, [r4, #20]
 8038c70:	f8d6 b08c 	ldr.w	fp, [r6, #140]	; 0x8c
 8038c74:	f1ae 0208 	sub.w	r2, lr, #8
 8038c78:	ea89 4c39 	eor.w	ip, r9, r9, ror #16
 8038c7c:	62ea      	str	r2, [r5, #44]	; 0x2c
 8038c7e:	4483      	add	fp, r0
 8038c80:	6922      	ldr	r2, [r4, #16]
 8038c82:	4408      	add	r0, r1
 8038c84:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8038c88:	f8d6 1088 	ldr.w	r1, [r6, #136]	; 0x88
 8038c8c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8038c90:	ea8c 2c39 	eor.w	ip, ip, r9, ror #8
 8038c94:	3201      	adds	r2, #1
 8038c96:	f506 799c 	add.w	r9, r6, #312	; 0x138
 8038c9a:	3101      	adds	r1, #1
 8038c9c:	e9c6 1b22 	strd	r1, fp, [r6, #136]	; 0x88
 8038ca0:	e9c4 2004 	strd	r2, r0, [r4, #16]
 8038ca4:	f04f 31ff 	mov.w	r1, #4294967295
 8038ca8:	f8c5 a018 	str.w	sl, [r5, #24]
 8038cac:	4648      	mov	r0, r9
 8038cae:	e94e c302 	strd	ip, r3, [lr, #-8]
 8038cb2:	f000 fcd9 	bl	8039668 <_tx_mutex_get>
 8038cb6:	e9d4 320c 	ldrd	r3, r2, [r4, #48]	; 0x30
 8038cba:	f44f 1c88 	mov.w	ip, #1114112	; 0x110000
 8038cbe:	e9cd 3c00 	strd	r3, ip, [sp]
 8038cc2:	9202      	str	r2, [sp, #8]
 8038cc4:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8038cc6:	4642      	mov	r2, r8
 8038cc8:	4629      	mov	r1, r5
 8038cca:	4630      	mov	r0, r6
 8038ccc:	f7fe fee4 	bl	8037a98 <_nx_ip_packet_send>
 8038cd0:	4648      	mov	r0, r9
 8038cd2:	f000 fe3f 	bl	8039954 <_tx_mutex_put>
 8038cd6:	4638      	mov	r0, r7
 8038cd8:	b005      	add	sp, #20
 8038cda:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8038cde:	2721      	movs	r7, #33	; 0x21
 8038ce0:	4638      	mov	r0, r7
 8038ce2:	b005      	add	sp, #20
 8038ce4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8038ce8:	6fa3      	ldr	r3, [r4, #120]	; 0x78
 8038cea:	61eb      	str	r3, [r5, #28]
 8038cec:	e7a3      	b.n	8038c36 <_nx_udp_socket_send+0x26>
 8038cee:	f001 f88f 	bl	8039e10 <_tx_thread_interrupt_control>
 8038cf2:	2724      	movs	r7, #36	; 0x24
 8038cf4:	4638      	mov	r0, r7
 8038cf6:	b005      	add	sp, #20
 8038cf8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08038cfc <_nx_udp_source_extract>:
 8038cfc:	6ac0      	ldr	r0, [r0, #44]	; 0x2c
 8038cfe:	f850 3c10 	ldr.w	r3, [r0, #-16]
 8038d02:	f830 0c06 	ldrh.w	r0, [r0, #-6]
 8038d06:	6010      	str	r0, [r2, #0]
 8038d08:	2b00      	cmp	r3, #0
 8038d0a:	600b      	str	r3, [r1, #0]
 8038d0c:	bf0c      	ite	eq
 8038d0e:	2012      	moveq	r0, #18
 8038d10:	2000      	movne	r0, #0
 8038d12:	4770      	bx	lr
	...

08038d20 <_tx_initialize_low_level>:
 8038d20:	b672      	cpsid	i
 8038d22:	486e      	ldr	r0, [pc, #440]	; (8038edc <CAN2_SCE_IRQHandler+0x10>)
 8038d24:	496e      	ldr	r1, [pc, #440]	; (8038ee0 <CAN2_SCE_IRQHandler+0x14>)
 8038d26:	f101 0104 	add.w	r1, r1, #4
 8038d2a:	6001      	str	r1, [r0, #0]
 8038d2c:	f04f 20e0 	mov.w	r0, #3758153728	; 0xe000e000
 8038d30:	496c      	ldr	r1, [pc, #432]	; (8038ee4 <CAN2_SCE_IRQHandler+0x18>)
 8038d32:	f8c0 1d08 	str.w	r1, [r0, #3336]	; 0xd08
 8038d36:	486c      	ldr	r0, [pc, #432]	; (8038ee8 <CAN2_SCE_IRQHandler+0x1c>)
 8038d38:	496a      	ldr	r1, [pc, #424]	; (8038ee4 <CAN2_SCE_IRQHandler+0x18>)
 8038d3a:	6809      	ldr	r1, [r1, #0]
 8038d3c:	6001      	str	r1, [r0, #0]
 8038d3e:	486b      	ldr	r0, [pc, #428]	; (8038eec <CAN2_SCE_IRQHandler+0x20>)
 8038d40:	6801      	ldr	r1, [r0, #0]
 8038d42:	f041 0101 	orr.w	r1, r1, #1
 8038d46:	6001      	str	r1, [r0, #0]
 8038d48:	f04f 20e0 	mov.w	r0, #3758153728	; 0xe000e000
 8038d4c:	4968      	ldr	r1, [pc, #416]	; (8038ef0 <CAN2_SCE_IRQHandler+0x24>)
 8038d4e:	6141      	str	r1, [r0, #20]
 8038d50:	f04f 0107 	mov.w	r1, #7
 8038d54:	6101      	str	r1, [r0, #16]
 8038d56:	f04f 0100 	mov.w	r1, #0
 8038d5a:	f8c0 1d18 	str.w	r1, [r0, #3352]	; 0xd18
 8038d5e:	f04f 417f 	mov.w	r1, #4278190080	; 0xff000000
 8038d62:	f8c0 1d1c 	str.w	r1, [r0, #3356]	; 0xd1c
 8038d66:	4963      	ldr	r1, [pc, #396]	; (8038ef4 <CAN2_SCE_IRQHandler+0x28>)
 8038d68:	f8c0 1d20 	str.w	r1, [r0, #3360]	; 0xd20
 8038d6c:	4862      	ldr	r0, [pc, #392]	; (8038ef8 <CAN2_SCE_IRQHandler+0x2c>)
 8038d6e:	6801      	ldr	r1, [r0, #0]
 8038d70:	f06f 4240 	mvn.w	r2, #3221225472	; 0xc0000000
 8038d74:	ea01 0102 	and.w	r1, r1, r2
 8038d78:	6001      	str	r1, [r0, #0]
 8038d7a:	4770      	bx	lr

08038d7c <__tx_SysTickHandler>:
 8038d7c:	b500      	push	{lr}
 8038d7e:	f000 ff2f 	bl	8039be0 <_tx_thread_context_save>
 8038d82:	f001 fe35 	bl	803a9f0 <_tx_timer_interrupt>
 8038d86:	f000 bf03 	b.w	8039b90 <_tx_thread_context_restore>

08038d8a <ETH_IRQHandler>:
 8038d8a:	b500      	push	{lr}
 8038d8c:	f000 ff28 	bl	8039be0 <_tx_thread_context_save>
 8038d90:	f7fd f93e 	bl	8036010 <nx_driver_stm32f4xx_ethernet_isr>
 8038d94:	f000 befc 	b.w	8039b90 <_tx_thread_context_restore>

08038d98 <USART1_IRQHandler>:
 8038d98:	b500      	push	{lr}
 8038d9a:	f000 ff21 	bl	8039be0 <_tx_thread_context_save>
 8038d9e:	f7fb ff73 	bl	8034c88 <UART1_IRQ_handler>
 8038da2:	f000 bef5 	b.w	8039b90 <_tx_thread_context_restore>

08038da6 <USART2_IRQHandler>:
 8038da6:	b500      	push	{lr}
 8038da8:	f000 ff1a 	bl	8039be0 <_tx_thread_context_save>
 8038dac:	f7fb ffa8 	bl	8034d00 <UART2_IRQ_handler>
 8038db0:	f000 beee 	b.w	8039b90 <_tx_thread_context_restore>

08038db4 <USART3_IRQHandler>:
 8038db4:	b500      	push	{lr}
 8038db6:	f000 ff13 	bl	8039be0 <_tx_thread_context_save>
 8038dba:	f7fb ffa7 	bl	8034d0c <UART3_IRQ_handler>
 8038dbe:	f000 bee7 	b.w	8039b90 <_tx_thread_context_restore>

08038dc2 <UART4_IRQHandler>:
 8038dc2:	b500      	push	{lr}
 8038dc4:	f000 ff0c 	bl	8039be0 <_tx_thread_context_save>
 8038dc8:	f7fb ffa6 	bl	8034d18 <UART4_IRQ_handler>
 8038dcc:	f000 bee0 	b.w	8039b90 <_tx_thread_context_restore>

08038dd0 <USART6_IRQHandler>:
 8038dd0:	b500      	push	{lr}
 8038dd2:	f000 ff05 	bl	8039be0 <_tx_thread_context_save>
 8038dd6:	f7fb ffa5 	bl	8034d24 <UART6_IRQ_handler>
 8038dda:	f000 bed9 	b.w	8039b90 <_tx_thread_context_restore>

08038dde <EXTI0_IRQHandler>:
 8038dde:	b500      	push	{lr}
 8038de0:	f000 fefe 	bl	8039be0 <_tx_thread_context_save>
 8038de4:	f7fc f9b6 	bl	8035154 <EXTI0_IRQ_Handler>
 8038de8:	f000 bed2 	b.w	8039b90 <_tx_thread_context_restore>

08038dec <EXTI1_IRQHandler>:
 8038dec:	b500      	push	{lr}
 8038dee:	f000 fef7 	bl	8039be0 <_tx_thread_context_save>
 8038df2:	f7fc f9c1 	bl	8035178 <EXTI1_IRQ_Handler>
 8038df6:	f000 becb 	b.w	8039b90 <_tx_thread_context_restore>

08038dfa <EXTI2_IRQHandler>:
 8038dfa:	b500      	push	{lr}
 8038dfc:	f000 fef0 	bl	8039be0 <_tx_thread_context_save>
 8038e00:	f7fc f9cc 	bl	803519c <EXTI2_IRQ_Handler>
 8038e04:	f000 bec4 	b.w	8039b90 <_tx_thread_context_restore>

08038e08 <EXTI3_IRQHandler>:
 8038e08:	b500      	push	{lr}
 8038e0a:	f000 fee9 	bl	8039be0 <_tx_thread_context_save>
 8038e0e:	f7fc f9d7 	bl	80351c0 <EXTI3_IRQ_Handler>
 8038e12:	f000 bebd 	b.w	8039b90 <_tx_thread_context_restore>

08038e16 <EXTI4_IRQHandler>:
 8038e16:	b500      	push	{lr}
 8038e18:	f000 fee2 	bl	8039be0 <_tx_thread_context_save>
 8038e1c:	f7fc f9e2 	bl	80351e4 <EXTI4_IRQ_Handler>
 8038e20:	f000 beb6 	b.w	8039b90 <_tx_thread_context_restore>

08038e24 <EXTI9_5_IRQHandler>:
 8038e24:	b500      	push	{lr}
 8038e26:	f000 fedb 	bl	8039be0 <_tx_thread_context_save>
 8038e2a:	f7fc f9ed 	bl	8035208 <EXTI9_5_IRQ_Handler>
 8038e2e:	f000 beaf 	b.w	8039b90 <_tx_thread_context_restore>

08038e32 <EXTI15_10_IRQHandler>:
 8038e32:	b500      	push	{lr}
 8038e34:	f000 fed4 	bl	8039be0 <_tx_thread_context_save>
 8038e38:	f7fc fa02 	bl	8035240 <EXTI15_10_IRQ_Handler>
 8038e3c:	f000 bea8 	b.w	8039b90 <_tx_thread_context_restore>

08038e40 <SPI1_IRQHandler>:
 8038e40:	b500      	push	{lr}
 8038e42:	f000 fecd 	bl	8039be0 <_tx_thread_context_save>
 8038e46:	f7fc fb67 	bl	8035518 <SPI1_IRQ_handler>
 8038e4a:	f000 bea1 	b.w	8039b90 <_tx_thread_context_restore>

08038e4e <SPI2_IRQHandler>:
 8038e4e:	b500      	push	{lr}
 8038e50:	f000 fec6 	bl	8039be0 <_tx_thread_context_save>
 8038e54:	f7fc fb62 	bl	803551c <SPI2_IRQ_handler>
 8038e58:	f000 be9a 	b.w	8039b90 <_tx_thread_context_restore>

08038e5c <SPI3_IRQHandler>:
 8038e5c:	b500      	push	{lr}
 8038e5e:	f000 febf 	bl	8039be0 <_tx_thread_context_save>
 8038e62:	f7fc fb5d 	bl	8035520 <SPI3_IRQ_handler>
 8038e66:	f000 be93 	b.w	8039b90 <_tx_thread_context_restore>

08038e6a <CAN1_TX_IRQHandler>:
 8038e6a:	b500      	push	{lr}
 8038e6c:	f000 feb8 	bl	8039be0 <_tx_thread_context_save>
 8038e70:	f7fc fd02 	bl	8035878 <CAN1_TX_IRQ_Handler>
 8038e74:	f000 be8c 	b.w	8039b90 <_tx_thread_context_restore>

08038e78 <CAN1_RX0_IRQHandler>:
 8038e78:	b500      	push	{lr}
 8038e7a:	f000 feb1 	bl	8039be0 <_tx_thread_context_save>
 8038e7e:	f7fc fd01 	bl	8035884 <CAN1_RX0_IRQ_Handler>
 8038e82:	f000 be85 	b.w	8039b90 <_tx_thread_context_restore>

08038e86 <CAN1_SCE_IRQHandler>:
 8038e86:	b500      	push	{lr}
 8038e88:	f000 feaa 	bl	8039be0 <_tx_thread_context_save>
 8038e8c:	f7fc fcf8 	bl	8035880 <CAN1_SCE_IRQ_Handler>
 8038e90:	f000 be7e 	b.w	8039b90 <_tx_thread_context_restore>

08038e94 <CAN2_TX_IRQHandler>:
 8038e94:	b500      	push	{lr}
 8038e96:	f000 fea3 	bl	8039be0 <_tx_thread_context_save>
 8038e9a:	f7fc fcef 	bl	803587c <CAN2_TX_IRQ_Handler>
 8038e9e:	f000 be77 	b.w	8039b90 <_tx_thread_context_restore>

08038ea2 <CAN1_RX1_IRQHandler>:
 8038ea2:	b500      	push	{lr}
 8038ea4:	f000 fe9c 	bl	8039be0 <_tx_thread_context_save>
 8038ea8:	f7fc fd02 	bl	80358b0 <CAN1_RX1_IRQ_Handler>
 8038eac:	f000 be70 	b.w	8039b90 <_tx_thread_context_restore>

08038eb0 <CAN2_RX0_IRQHandler>:
 8038eb0:	b500      	push	{lr}
 8038eb2:	f000 fe95 	bl	8039be0 <_tx_thread_context_save>
 8038eb6:	f7fc fd11 	bl	80358dc <CAN2_RX0_IRQ_Handler>
 8038eba:	f000 be69 	b.w	8039b90 <_tx_thread_context_restore>

08038ebe <CAN2_RX1_IRQHandler>:
 8038ebe:	b500      	push	{lr}
 8038ec0:	f000 fe8e 	bl	8039be0 <_tx_thread_context_save>
 8038ec4:	f7fc fd20 	bl	8035908 <CAN2_RX1_IRQ_Handler>
 8038ec8:	f000 be62 	b.w	8039b90 <_tx_thread_context_restore>

08038ecc <CAN2_SCE_IRQHandler>:
 8038ecc:	b500      	push	{lr}
 8038ece:	f000 fe87 	bl	8039be0 <_tx_thread_context_save>
 8038ed2:	f7ff fffb 	bl	8038ecc <CAN2_SCE_IRQHandler>
 8038ed6:	f000 be5b 	b.w	8039b90 <_tx_thread_context_restore>
 8038eda:	0000      	.short	0x0000
 8038edc:	20012228 	.word	0x20012228
 8038ee0:	200148f8 	.word	0x200148f8
 8038ee4:	08020000 	.word	0x08020000
 8038ee8:	20012304 	.word	0x20012304
 8038eec:	e0001000 	.word	0xe0001000
 8038ef0:	0002903f 	.word	0x0002903f
 8038ef4:	40ff0000 	.word	0x40ff0000
 8038ef8:	e000ef34 	.word	0xe000ef34

08038efc <__aeabi_read_tp>:
 8038efc:	4800      	ldr	r0, [pc, #0]	; (8038f00 <__aeabi_read_tp+0x4>)
 8038efe:	4770      	bx	lr
 8038f00:	200124e8 	.word	0x200124e8

08038f04 <abort>:
 8038f04:	e7fe      	b.n	8038f04 <abort>
	...

08038f08 <_tx_event_flags_cleanup>:
 8038f08:	b538      	push	{r3, r4, r5, lr}
 8038f0a:	4604      	mov	r4, r0
 8038f0c:	2001      	movs	r0, #1
 8038f0e:	460d      	mov	r5, r1
 8038f10:	f000 ff7e 	bl	8039e10 <_tx_thread_interrupt_control>
 8038f14:	6ea2      	ldr	r2, [r4, #104]	; 0x68
 8038f16:	4b1b      	ldr	r3, [pc, #108]	; (8038f84 <_tx_event_flags_cleanup+0x7c>)
 8038f18:	429a      	cmp	r2, r3
 8038f1a:	d003      	beq.n	8038f24 <_tx_event_flags_cleanup+0x1c>
 8038f1c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8038f20:	f000 bf76 	b.w	8039e10 <_tx_thread_interrupt_control>
 8038f24:	f8d4 30b0 	ldr.w	r3, [r4, #176]	; 0xb0
 8038f28:	42ab      	cmp	r3, r5
 8038f2a:	d1f7      	bne.n	8038f1c <_tx_event_flags_cleanup+0x14>
 8038f2c:	6ee3      	ldr	r3, [r4, #108]	; 0x6c
 8038f2e:	2b00      	cmp	r3, #0
 8038f30:	d0f4      	beq.n	8038f1c <_tx_event_flags_cleanup+0x14>
 8038f32:	4a15      	ldr	r2, [pc, #84]	; (8038f88 <_tx_event_flags_cleanup+0x80>)
 8038f34:	6819      	ldr	r1, [r3, #0]
 8038f36:	4291      	cmp	r1, r2
 8038f38:	d1f0      	bne.n	8038f1c <_tx_event_flags_cleanup+0x14>
 8038f3a:	695a      	ldr	r2, [r3, #20]
 8038f3c:	2a00      	cmp	r2, #0
 8038f3e:	d0ed      	beq.n	8038f1c <_tx_event_flags_cleanup+0x14>
 8038f40:	6919      	ldr	r1, [r3, #16]
 8038f42:	2500      	movs	r5, #0
 8038f44:	66a5      	str	r5, [r4, #104]	; 0x68
 8038f46:	b141      	cbz	r1, 8038f5a <_tx_event_flags_cleanup+0x52>
 8038f48:	3a01      	subs	r2, #1
 8038f4a:	615a      	str	r2, [r3, #20]
 8038f4c:	b1ba      	cbz	r2, 8038f7e <_tx_event_flags_cleanup+0x76>
 8038f4e:	e9d4 251c 	ldrd	r2, r5, [r4, #112]	; 0x70
 8038f52:	428c      	cmp	r4, r1
 8038f54:	6755      	str	r5, [r2, #116]	; 0x74
 8038f56:	672a      	str	r2, [r5, #112]	; 0x70
 8038f58:	d011      	beq.n	8038f7e <_tx_event_flags_cleanup+0x76>
 8038f5a:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8038f5c:	2b07      	cmp	r3, #7
 8038f5e:	d1dd      	bne.n	8038f1c <_tx_event_flags_cleanup+0x14>
 8038f60:	4a0a      	ldr	r2, [pc, #40]	; (8038f8c <_tx_event_flags_cleanup+0x84>)
 8038f62:	f8c4 3084 	str.w	r3, [r4, #132]	; 0x84
 8038f66:	6813      	ldr	r3, [r2, #0]
 8038f68:	3301      	adds	r3, #1
 8038f6a:	6013      	str	r3, [r2, #0]
 8038f6c:	f000 ff50 	bl	8039e10 <_tx_thread_interrupt_control>
 8038f70:	4620      	mov	r0, r4
 8038f72:	f001 f8fb 	bl	803a16c <_tx_thread_system_resume>
 8038f76:	2001      	movs	r0, #1
 8038f78:	f000 ff4a 	bl	8039e10 <_tx_thread_interrupt_control>
 8038f7c:	e7ce      	b.n	8038f1c <_tx_event_flags_cleanup+0x14>
 8038f7e:	611a      	str	r2, [r3, #16]
 8038f80:	e7eb      	b.n	8038f5a <_tx_event_flags_cleanup+0x52>
 8038f82:	bf00      	nop
 8038f84:	08038f09 	.word	0x08038f09
 8038f88:	4456444e 	.word	0x4456444e
 8038f8c:	2001227c 	.word	0x2001227c

08038f90 <_tx_event_flags_create>:
 8038f90:	b538      	push	{r3, r4, r5, lr}
 8038f92:	4604      	mov	r4, r0
 8038f94:	2224      	movs	r2, #36	; 0x24
 8038f96:	460d      	mov	r5, r1
 8038f98:	2100      	movs	r1, #0
 8038f9a:	f006 fb5b 	bl	803f654 <memset>
 8038f9e:	6065      	str	r5, [r4, #4]
 8038fa0:	2001      	movs	r0, #1
 8038fa2:	f000 ff35 	bl	8039e10 <_tx_thread_interrupt_control>
 8038fa6:	4a0b      	ldr	r2, [pc, #44]	; (8038fd4 <_tx_event_flags_create+0x44>)
 8038fa8:	490b      	ldr	r1, [pc, #44]	; (8038fd8 <_tx_event_flags_create+0x48>)
 8038faa:	6813      	ldr	r3, [r2, #0]
 8038fac:	6021      	str	r1, [r4, #0]
 8038fae:	490b      	ldr	r1, [pc, #44]	; (8038fdc <_tx_event_flags_create+0x4c>)
 8038fb0:	b943      	cbnz	r3, 8038fc4 <_tx_event_flags_create+0x34>
 8038fb2:	e9c4 4406 	strd	r4, r4, [r4, #24]
 8038fb6:	600c      	str	r4, [r1, #0]
 8038fb8:	3301      	adds	r3, #1
 8038fba:	6013      	str	r3, [r2, #0]
 8038fbc:	f000 ff28 	bl	8039e10 <_tx_thread_interrupt_control>
 8038fc0:	2000      	movs	r0, #0
 8038fc2:	bd38      	pop	{r3, r4, r5, pc}
 8038fc4:	6809      	ldr	r1, [r1, #0]
 8038fc6:	69cd      	ldr	r5, [r1, #28]
 8038fc8:	61cc      	str	r4, [r1, #28]
 8038fca:	61ac      	str	r4, [r5, #24]
 8038fcc:	e9c4 1506 	strd	r1, r5, [r4, #24]
 8038fd0:	e7f2      	b.n	8038fb8 <_tx_event_flags_create+0x28>
 8038fd2:	bf00      	nop
 8038fd4:	20012220 	.word	0x20012220
 8038fd8:	4456444e 	.word	0x4456444e
 8038fdc:	20012224 	.word	0x20012224

08038fe0 <_tx_event_flags_delete>:
 8038fe0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8038fe4:	4680      	mov	r8, r0
 8038fe6:	2001      	movs	r0, #1
 8038fe8:	f000 ff12 	bl	8039e10 <_tx_thread_interrupt_control>
 8038fec:	4a22      	ldr	r2, [pc, #136]	; (8039078 <_tx_event_flags_delete+0x98>)
 8038fee:	6813      	ldr	r3, [r2, #0]
 8038ff0:	2100      	movs	r1, #0
 8038ff2:	3b01      	subs	r3, #1
 8038ff4:	f8c8 1000 	str.w	r1, [r8]
 8038ff8:	6013      	str	r3, [r2, #0]
 8038ffa:	bb9b      	cbnz	r3, 8039064 <_tx_event_flags_delete+0x84>
 8038ffc:	4a1f      	ldr	r2, [pc, #124]	; (803907c <_tx_event_flags_delete+0x9c>)
 8038ffe:	6013      	str	r3, [r2, #0]
 8039000:	4e1f      	ldr	r6, [pc, #124]	; (8039080 <_tx_event_flags_delete+0xa0>)
 8039002:	f8d8 5014 	ldr.w	r5, [r8, #20]
 8039006:	6833      	ldr	r3, [r6, #0]
 8039008:	f8d8 4010 	ldr.w	r4, [r8, #16]
 803900c:	2700      	movs	r7, #0
 803900e:	3301      	adds	r3, #1
 8039010:	e9c8 7704 	strd	r7, r7, [r8, #16]
 8039014:	6033      	str	r3, [r6, #0]
 8039016:	f000 fefb 	bl	8039e10 <_tx_thread_interrupt_control>
 803901a:	b1b5      	cbz	r5, 803904a <_tx_event_flags_delete+0x6a>
 803901c:	46b8      	mov	r8, r7
 803901e:	f04f 0901 	mov.w	r9, #1
 8039022:	2001      	movs	r0, #1
 8039024:	f000 fef4 	bl	8039e10 <_tx_thread_interrupt_control>
 8039028:	6833      	ldr	r3, [r6, #0]
 803902a:	f8c4 8068 	str.w	r8, [r4, #104]	; 0x68
 803902e:	f8c4 9084 	str.w	r9, [r4, #132]	; 0x84
 8039032:	3301      	adds	r3, #1
 8039034:	4627      	mov	r7, r4
 8039036:	3d01      	subs	r5, #1
 8039038:	6f24      	ldr	r4, [r4, #112]	; 0x70
 803903a:	6033      	str	r3, [r6, #0]
 803903c:	f000 fee8 	bl	8039e10 <_tx_thread_interrupt_control>
 8039040:	4638      	mov	r0, r7
 8039042:	f001 f893 	bl	803a16c <_tx_thread_system_resume>
 8039046:	2d00      	cmp	r5, #0
 8039048:	d1eb      	bne.n	8039022 <_tx_event_flags_delete+0x42>
 803904a:	2001      	movs	r0, #1
 803904c:	f000 fee0 	bl	8039e10 <_tx_thread_interrupt_control>
 8039050:	6833      	ldr	r3, [r6, #0]
 8039052:	3b01      	subs	r3, #1
 8039054:	6033      	str	r3, [r6, #0]
 8039056:	f000 fedb 	bl	8039e10 <_tx_thread_interrupt_control>
 803905a:	f001 f831 	bl	803a0c0 <_tx_thread_system_preempt_check>
 803905e:	2000      	movs	r0, #0
 8039060:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8039064:	4905      	ldr	r1, [pc, #20]	; (803907c <_tx_event_flags_delete+0x9c>)
 8039066:	e9d8 3206 	ldrd	r3, r2, [r8, #24]
 803906a:	680c      	ldr	r4, [r1, #0]
 803906c:	61da      	str	r2, [r3, #28]
 803906e:	4544      	cmp	r4, r8
 8039070:	6193      	str	r3, [r2, #24]
 8039072:	bf08      	it	eq
 8039074:	600b      	streq	r3, [r1, #0]
 8039076:	e7c3      	b.n	8039000 <_tx_event_flags_delete+0x20>
 8039078:	20012220 	.word	0x20012220
 803907c:	20012224 	.word	0x20012224
 8039080:	2001227c 	.word	0x2001227c

08039084 <_tx_event_flags_get>:
 8039084:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8039088:	4605      	mov	r5, r0
 803908a:	2001      	movs	r0, #1
 803908c:	4614      	mov	r4, r2
 803908e:	460e      	mov	r6, r1
 8039090:	4698      	mov	r8, r3
 8039092:	f000 febd 	bl	8039e10 <_tx_thread_interrupt_control>
 8039096:	6a2b      	ldr	r3, [r5, #32]
 8039098:	68aa      	ldr	r2, [r5, #8]
 803909a:	f004 0102 	and.w	r1, r4, #2
 803909e:	b10b      	cbz	r3, 80390a4 <_tx_event_flags_get+0x20>
 80390a0:	ea22 0203 	bic.w	r2, r2, r3
 80390a4:	ea02 0306 	and.w	r3, r2, r6
 80390a8:	2900      	cmp	r1, #0
 80390aa:	d03c      	beq.n	8039126 <_tx_event_flags_get+0xa2>
 80390ac:	ea36 0102 	bics.w	r1, r6, r2
 80390b0:	d039      	beq.n	8039126 <_tx_event_flags_get+0xa2>
 80390b2:	9b06      	ldr	r3, [sp, #24]
 80390b4:	2b00      	cmp	r3, #0
 80390b6:	d04b      	beq.n	8039150 <_tx_event_flags_get+0xcc>
 80390b8:	4b2c      	ldr	r3, [pc, #176]	; (803916c <_tx_event_flags_get+0xe8>)
 80390ba:	681a      	ldr	r2, [r3, #0]
 80390bc:	2a00      	cmp	r2, #0
 80390be:	d147      	bne.n	8039150 <_tx_event_flags_get+0xcc>
 80390c0:	492b      	ldr	r1, [pc, #172]	; (8039170 <_tx_event_flags_get+0xec>)
 80390c2:	696a      	ldr	r2, [r5, #20]
 80390c4:	680f      	ldr	r7, [r1, #0]
 80390c6:	f8df c0ac 	ldr.w	ip, [pc, #172]	; 8039174 <_tx_event_flags_get+0xf0>
 80390ca:	f8d7 10b0 	ldr.w	r1, [r7, #176]	; 0xb0
 80390ce:	67be      	str	r6, [r7, #120]	; 0x78
 80390d0:	3101      	adds	r1, #1
 80390d2:	e9c7 c51a 	strd	ip, r5, [r7, #104]	; 0x68
 80390d6:	f8c7 4080 	str.w	r4, [r7, #128]	; 0x80
 80390da:	f8c7 807c 	str.w	r8, [r7, #124]	; 0x7c
 80390de:	f8c7 10b0 	str.w	r1, [r7, #176]	; 0xb0
 80390e2:	2a00      	cmp	r2, #0
 80390e4:	d03a      	beq.n	803915c <_tx_event_flags_get+0xd8>
 80390e6:	6929      	ldr	r1, [r5, #16]
 80390e8:	6739      	str	r1, [r7, #112]	; 0x70
 80390ea:	6f4c      	ldr	r4, [r1, #116]	; 0x74
 80390ec:	677c      	str	r4, [r7, #116]	; 0x74
 80390ee:	6727      	str	r7, [r4, #112]	; 0x70
 80390f0:	674f      	str	r7, [r1, #116]	; 0x74
 80390f2:	6819      	ldr	r1, [r3, #0]
 80390f4:	3201      	adds	r2, #1
 80390f6:	616a      	str	r2, [r5, #20]
 80390f8:	2401      	movs	r4, #1
 80390fa:	2207      	movs	r2, #7
 80390fc:	9d06      	ldr	r5, [sp, #24]
 80390fe:	633a      	str	r2, [r7, #48]	; 0x30
 8039100:	4421      	add	r1, r4
 8039102:	63bc      	str	r4, [r7, #56]	; 0x38
 8039104:	64fd      	str	r5, [r7, #76]	; 0x4c
 8039106:	6019      	str	r1, [r3, #0]
 8039108:	f000 fe82 	bl	8039e10 <_tx_thread_interrupt_control>
 803910c:	4638      	mov	r0, r7
 803910e:	f001 f931 	bl	803a374 <_tx_thread_system_suspend>
 8039112:	4620      	mov	r0, r4
 8039114:	f000 fe7c 	bl	8039e10 <_tx_thread_interrupt_control>
 8039118:	f8d7 4084 	ldr.w	r4, [r7, #132]	; 0x84
 803911c:	f000 fe78 	bl	8039e10 <_tx_thread_interrupt_control>
 8039120:	4620      	mov	r0, r4
 8039122:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8039126:	2b00      	cmp	r3, #0
 8039128:	d0c3      	beq.n	80390b2 <_tx_event_flags_get+0x2e>
 803912a:	f014 0401 	ands.w	r4, r4, #1
 803912e:	f8c8 2000 	str.w	r2, [r8]
 8039132:	d00e      	beq.n	8039152 <_tx_event_flags_get+0xce>
 8039134:	696b      	ldr	r3, [r5, #20]
 8039136:	b10b      	cbz	r3, 803913c <_tx_event_flags_get+0xb8>
 8039138:	692c      	ldr	r4, [r5, #16]
 803913a:	b19c      	cbz	r4, 8039164 <_tx_event_flags_get+0xe0>
 803913c:	68a9      	ldr	r1, [r5, #8]
 803913e:	ea21 0106 	bic.w	r1, r1, r6
 8039142:	60a9      	str	r1, [r5, #8]
 8039144:	2400      	movs	r4, #0
 8039146:	f000 fe63 	bl	8039e10 <_tx_thread_interrupt_control>
 803914a:	4620      	mov	r0, r4
 803914c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8039150:	2407      	movs	r4, #7
 8039152:	f000 fe5d 	bl	8039e10 <_tx_thread_interrupt_control>
 8039156:	4620      	mov	r0, r4
 8039158:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 803915c:	612f      	str	r7, [r5, #16]
 803915e:	e9c7 771c 	strd	r7, r7, [r7, #112]	; 0x70
 8039162:	e7c6      	b.n	80390f2 <_tx_event_flags_get+0x6e>
 8039164:	6a2b      	ldr	r3, [r5, #32]
 8039166:	431e      	orrs	r6, r3
 8039168:	622e      	str	r6, [r5, #32]
 803916a:	e7f2      	b.n	8039152 <_tx_event_flags_get+0xce>
 803916c:	2001227c 	.word	0x2001227c
 8039170:	2001226c 	.word	0x2001226c
 8039174:	08038f09 	.word	0x08038f09

08039178 <_tx_event_flags_set>:
 8039178:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 803917c:	4615      	mov	r5, r2
 803917e:	b083      	sub	sp, #12
 8039180:	4604      	mov	r4, r0
 8039182:	2001      	movs	r0, #1
 8039184:	460e      	mov	r6, r1
 8039186:	f000 fe43 	bl	8039e10 <_tx_thread_interrupt_control>
 803918a:	f015 0302 	ands.w	r3, r5, #2
 803918e:	9301      	str	r3, [sp, #4]
 8039190:	d00b      	beq.n	80391aa <_tx_event_flags_set+0x32>
 8039192:	6963      	ldr	r3, [r4, #20]
 8039194:	2b00      	cmp	r3, #0
 8039196:	d15f      	bne.n	8039258 <_tx_event_flags_set+0xe0>
 8039198:	68a1      	ldr	r1, [r4, #8]
 803919a:	4031      	ands	r1, r6
 803919c:	60a1      	str	r1, [r4, #8]
 803919e:	f000 fe37 	bl	8039e10 <_tx_thread_interrupt_control>
 80391a2:	2000      	movs	r0, #0
 80391a4:	b003      	add	sp, #12
 80391a6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80391aa:	68a3      	ldr	r3, [r4, #8]
 80391ac:	6a21      	ldr	r1, [r4, #32]
 80391ae:	ea46 0803 	orr.w	r8, r6, r3
 80391b2:	f8c4 8008 	str.w	r8, [r4, #8]
 80391b6:	b111      	cbz	r1, 80391be <_tx_event_flags_set+0x46>
 80391b8:	ea21 0106 	bic.w	r1, r1, r6
 80391bc:	6221      	str	r1, [r4, #32]
 80391be:	e9d4 6704 	ldrd	r6, r7, [r4, #16]
 80391c2:	2e00      	cmp	r6, #0
 80391c4:	f000 80a5 	beq.w	8039312 <_tx_event_flags_set+0x19a>
 80391c8:	2f01      	cmp	r7, #1
 80391ca:	f000 80b1 	beq.w	8039330 <_tx_event_flags_set+0x1b8>
 80391ce:	f8df 91b8 	ldr.w	r9, [pc, #440]	; 8039388 <_tx_event_flags_set+0x210>
 80391d2:	9700      	str	r7, [sp, #0]
 80391d4:	f8d9 3000 	ldr.w	r3, [r9]
 80391d8:	2200      	movs	r2, #0
 80391da:	3301      	adds	r3, #1
 80391dc:	4693      	mov	fp, r2
 80391de:	f8c9 3000 	str.w	r3, [r9]
 80391e2:	6122      	str	r2, [r4, #16]
 80391e4:	4615      	mov	r5, r2
 80391e6:	46b2      	mov	sl, r6
 80391e8:	e02c      	b.n	8039244 <_tx_event_flags_set+0xcc>
 80391ea:	68a3      	ldr	r3, [r4, #8]
 80391ec:	2200      	movs	r2, #0
 80391ee:	ea48 0803 	orr.w	r8, r8, r3
 80391f2:	6963      	ldr	r3, [r4, #20]
 80391f4:	9300      	str	r3, [sp, #0]
 80391f6:	60e2      	str	r2, [r4, #12]
 80391f8:	4653      	mov	r3, sl
 80391fa:	f8d3 2080 	ldr.w	r2, [r3, #128]	; 0x80
 80391fe:	6f99      	ldr	r1, [r3, #120]	; 0x78
 8039200:	6f1e      	ldr	r6, [r3, #112]	; 0x70
 8039202:	0797      	lsls	r7, r2, #30
 8039204:	ea08 0e01 	and.w	lr, r8, r1
 8039208:	d52e      	bpl.n	8039268 <_tx_event_flags_set+0xf0>
 803920a:	ea31 0708 	bics.w	r7, r1, r8
 803920e:	d02b      	beq.n	8039268 <_tx_event_flags_set+0xf0>
 8039210:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8039212:	2a07      	cmp	r2, #7
 8039214:	d012      	beq.n	803923c <_tx_event_flags_set+0xc4>
 8039216:	42b3      	cmp	r3, r6
 8039218:	d03b      	beq.n	8039292 <_tx_event_flags_set+0x11a>
 803921a:	6f5a      	ldr	r2, [r3, #116]	; 0x74
 803921c:	6772      	str	r2, [r6, #116]	; 0x74
 803921e:	4553      	cmp	r3, sl
 8039220:	6716      	str	r6, [r2, #112]	; 0x70
 8039222:	d073      	beq.n	803930c <_tx_event_flags_set+0x194>
 8039224:	6962      	ldr	r2, [r4, #20]
 8039226:	3a01      	subs	r2, #1
 8039228:	6162      	str	r2, [r4, #20]
 803922a:	2d00      	cmp	r5, #0
 803922c:	d038      	beq.n	80392a0 <_tx_event_flags_set+0x128>
 803922e:	2201      	movs	r2, #1
 8039230:	9201      	str	r2, [sp, #4]
 8039232:	2200      	movs	r2, #0
 8039234:	f8cb 3070 	str.w	r3, [fp, #112]	; 0x70
 8039238:	671a      	str	r2, [r3, #112]	; 0x70
 803923a:	469b      	mov	fp, r3
 803923c:	9b00      	ldr	r3, [sp, #0]
 803923e:	3b01      	subs	r3, #1
 8039240:	9300      	str	r3, [sp, #0]
 8039242:	d036      	beq.n	80392b2 <_tx_event_flags_set+0x13a>
 8039244:	f000 fde4 	bl	8039e10 <_tx_thread_interrupt_control>
 8039248:	2001      	movs	r0, #1
 803924a:	f000 fde1 	bl	8039e10 <_tx_thread_interrupt_control>
 803924e:	68e3      	ldr	r3, [r4, #12]
 8039250:	2b00      	cmp	r3, #0
 8039252:	d1ca      	bne.n	80391ea <_tx_event_flags_set+0x72>
 8039254:	4633      	mov	r3, r6
 8039256:	e7d0      	b.n	80391fa <_tx_event_flags_set+0x82>
 8039258:	6923      	ldr	r3, [r4, #16]
 803925a:	2b00      	cmp	r3, #0
 803925c:	d19c      	bne.n	8039198 <_tx_event_flags_set+0x20>
 803925e:	6a23      	ldr	r3, [r4, #32]
 8039260:	ea63 0606 	orn	r6, r3, r6
 8039264:	6226      	str	r6, [r4, #32]
 8039266:	e79a      	b.n	803919e <_tx_event_flags_set+0x26>
 8039268:	6b1f      	ldr	r7, [r3, #48]	; 0x30
 803926a:	2f07      	cmp	r7, #7
 803926c:	d1d3      	bne.n	8039216 <_tx_event_flags_set+0x9e>
 803926e:	f1be 0f00 	cmp.w	lr, #0
 8039272:	d0e3      	beq.n	803923c <_tx_event_flags_set+0xc4>
 8039274:	6fdf      	ldr	r7, [r3, #124]	; 0x7c
 8039276:	07d2      	lsls	r2, r2, #31
 8039278:	f8c7 8000 	str.w	r8, [r7]
 803927c:	d503      	bpl.n	8039286 <_tx_event_flags_set+0x10e>
 803927e:	68a2      	ldr	r2, [r4, #8]
 8039280:	ea22 0201 	bic.w	r2, r2, r1
 8039284:	60a2      	str	r2, [r4, #8]
 8039286:	2200      	movs	r2, #0
 8039288:	42b3      	cmp	r3, r6
 803928a:	669a      	str	r2, [r3, #104]	; 0x68
 803928c:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
 8039290:	d1c3      	bne.n	803921a <_tx_event_flags_set+0xa2>
 8039292:	6962      	ldr	r2, [r4, #20]
 8039294:	3a01      	subs	r2, #1
 8039296:	f04f 0a00 	mov.w	sl, #0
 803929a:	6162      	str	r2, [r4, #20]
 803929c:	2d00      	cmp	r5, #0
 803929e:	d1c6      	bne.n	803922e <_tx_event_flags_set+0xb6>
 80392a0:	671d      	str	r5, [r3, #112]	; 0x70
 80392a2:	469b      	mov	fp, r3
 80392a4:	461d      	mov	r5, r3
 80392a6:	2301      	movs	r3, #1
 80392a8:	9301      	str	r3, [sp, #4]
 80392aa:	9b00      	ldr	r3, [sp, #0]
 80392ac:	3b01      	subs	r3, #1
 80392ae:	9300      	str	r3, [sp, #0]
 80392b0:	d1c8      	bne.n	8039244 <_tx_event_flags_set+0xcc>
 80392b2:	461f      	mov	r7, r3
 80392b4:	6a23      	ldr	r3, [r4, #32]
 80392b6:	f8c4 a010 	str.w	sl, [r4, #16]
 80392ba:	bb9b      	cbnz	r3, 8039324 <_tx_event_flags_set+0x1ac>
 80392bc:	f000 fda8 	bl	8039e10 <_tx_thread_interrupt_control>
 80392c0:	b185      	cbz	r5, 80392e4 <_tx_event_flags_set+0x16c>
 80392c2:	2001      	movs	r0, #1
 80392c4:	462c      	mov	r4, r5
 80392c6:	6f2d      	ldr	r5, [r5, #112]	; 0x70
 80392c8:	f000 fda2 	bl	8039e10 <_tx_thread_interrupt_control>
 80392cc:	f8d9 3000 	ldr.w	r3, [r9]
 80392d0:	3301      	adds	r3, #1
 80392d2:	f8c9 3000 	str.w	r3, [r9]
 80392d6:	f000 fd9b 	bl	8039e10 <_tx_thread_interrupt_control>
 80392da:	4620      	mov	r0, r4
 80392dc:	f000 ff46 	bl	803a16c <_tx_thread_system_resume>
 80392e0:	2d00      	cmp	r5, #0
 80392e2:	d1ee      	bne.n	80392c2 <_tx_event_flags_set+0x14a>
 80392e4:	2001      	movs	r0, #1
 80392e6:	f000 fd93 	bl	8039e10 <_tx_thread_interrupt_control>
 80392ea:	f8d9 3000 	ldr.w	r3, [r9]
 80392ee:	3b01      	subs	r3, #1
 80392f0:	f8c9 3000 	str.w	r3, [r9]
 80392f4:	f000 fd8c 	bl	8039e10 <_tx_thread_interrupt_control>
 80392f8:	9b01      	ldr	r3, [sp, #4]
 80392fa:	2b01      	cmp	r3, #1
 80392fc:	f47f af51 	bne.w	80391a2 <_tx_event_flags_set+0x2a>
 8039300:	f000 fede 	bl	803a0c0 <_tx_thread_system_preempt_check>
 8039304:	2000      	movs	r0, #0
 8039306:	b003      	add	sp, #12
 8039308:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 803930c:	f8d3 a070 	ldr.w	sl, [r3, #112]	; 0x70
 8039310:	e788      	b.n	8039224 <_tx_event_flags_set+0xac>
 8039312:	2f00      	cmp	r7, #0
 8039314:	f43f af43 	beq.w	803919e <_tx_event_flags_set+0x26>
 8039318:	68e3      	ldr	r3, [r4, #12]
 803931a:	3301      	adds	r3, #1
 803931c:	60e3      	str	r3, [r4, #12]
 803931e:	f000 fd77 	bl	8039e10 <_tx_thread_interrupt_control>
 8039322:	e73e      	b.n	80391a2 <_tx_event_flags_set+0x2a>
 8039324:	68a2      	ldr	r2, [r4, #8]
 8039326:	6227      	str	r7, [r4, #32]
 8039328:	ea22 0303 	bic.w	r3, r2, r3
 803932c:	60a3      	str	r3, [r4, #8]
 803932e:	e7c5      	b.n	80392bc <_tx_event_flags_set+0x144>
 8039330:	f8d6 2080 	ldr.w	r2, [r6, #128]	; 0x80
 8039334:	6fb3      	ldr	r3, [r6, #120]	; 0x78
 8039336:	0795      	lsls	r5, r2, #30
 8039338:	ea08 0103 	and.w	r1, r8, r3
 803933c:	d503      	bpl.n	8039346 <_tx_event_flags_set+0x1ce>
 803933e:	ea33 0508 	bics.w	r5, r3, r8
 8039342:	f47f af2c 	bne.w	803919e <_tx_event_flags_set+0x26>
 8039346:	2900      	cmp	r1, #0
 8039348:	f43f af29 	beq.w	803919e <_tx_event_flags_set+0x26>
 803934c:	6ff1      	ldr	r1, [r6, #124]	; 0x7c
 803934e:	07d2      	lsls	r2, r2, #31
 8039350:	f8c1 8000 	str.w	r8, [r1]
 8039354:	d503      	bpl.n	803935e <_tx_event_flags_set+0x1e6>
 8039356:	68a2      	ldr	r2, [r4, #8]
 8039358:	ea22 0303 	bic.w	r3, r2, r3
 803935c:	60a3      	str	r3, [r4, #8]
 803935e:	490a      	ldr	r1, [pc, #40]	; (8039388 <_tx_event_flags_set+0x210>)
 8039360:	680a      	ldr	r2, [r1, #0]
 8039362:	2300      	movs	r3, #0
 8039364:	e9c4 3304 	strd	r3, r3, [r4, #16]
 8039368:	3201      	adds	r2, #1
 803936a:	66b3      	str	r3, [r6, #104]	; 0x68
 803936c:	f8c6 3084 	str.w	r3, [r6, #132]	; 0x84
 8039370:	600a      	str	r2, [r1, #0]
 8039372:	f000 fd4d 	bl	8039e10 <_tx_thread_interrupt_control>
 8039376:	4630      	mov	r0, r6
 8039378:	f000 fef8 	bl	803a16c <_tx_thread_system_resume>
 803937c:	2001      	movs	r0, #1
 803937e:	f000 fd47 	bl	8039e10 <_tx_thread_interrupt_control>
 8039382:	f000 fd45 	bl	8039e10 <_tx_thread_interrupt_control>
 8039386:	e7bb      	b.n	8039300 <_tx_event_flags_set+0x188>
 8039388:	2001227c 	.word	0x2001227c

0803938c <_tx_initialize_high_level>:
 803938c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 803938e:	f000 fd03 	bl	8039d98 <_tx_thread_initialize>
 8039392:	f001 faef 	bl	803a974 <_tx_timer_initialize>
 8039396:	4a13      	ldr	r2, [pc, #76]	; (80393e4 <_tx_initialize_high_level+0x58>)
 8039398:	4d13      	ldr	r5, [pc, #76]	; (80393e8 <_tx_initialize_high_level+0x5c>)
 803939a:	4c14      	ldr	r4, [pc, #80]	; (80393ec <_tx_initialize_high_level+0x60>)
 803939c:	4814      	ldr	r0, [pc, #80]	; (80393f0 <_tx_initialize_high_level+0x64>)
 803939e:	4915      	ldr	r1, [pc, #84]	; (80393f4 <_tx_initialize_high_level+0x68>)
 80393a0:	4f15      	ldr	r7, [pc, #84]	; (80393f8 <_tx_initialize_high_level+0x6c>)
 80393a2:	4e16      	ldr	r6, [pc, #88]	; (80393fc <_tx_initialize_high_level+0x70>)
 80393a4:	2300      	movs	r3, #0
 80393a6:	6013      	str	r3, [r2, #0]
 80393a8:	4a15      	ldr	r2, [pc, #84]	; (8039400 <_tx_initialize_high_level+0x74>)
 80393aa:	602b      	str	r3, [r5, #0]
 80393ac:	6023      	str	r3, [r4, #0]
 80393ae:	6003      	str	r3, [r0, #0]
 80393b0:	600b      	str	r3, [r1, #0]
 80393b2:	6013      	str	r3, [r2, #0]
 80393b4:	4d13      	ldr	r5, [pc, #76]	; (8039404 <_tx_initialize_high_level+0x78>)
 80393b6:	4c14      	ldr	r4, [pc, #80]	; (8039408 <_tx_initialize_high_level+0x7c>)
 80393b8:	4814      	ldr	r0, [pc, #80]	; (803940c <_tx_initialize_high_level+0x80>)
 80393ba:	4915      	ldr	r1, [pc, #84]	; (8039410 <_tx_initialize_high_level+0x84>)
 80393bc:	4a15      	ldr	r2, [pc, #84]	; (8039414 <_tx_initialize_high_level+0x88>)
 80393be:	602b      	str	r3, [r5, #0]
 80393c0:	6023      	str	r3, [r4, #0]
 80393c2:	6003      	str	r3, [r0, #0]
 80393c4:	600b      	str	r3, [r1, #0]
 80393c6:	6013      	str	r3, [r2, #0]
 80393c8:	4d13      	ldr	r5, [pc, #76]	; (8039418 <_tx_initialize_high_level+0x8c>)
 80393ca:	4c14      	ldr	r4, [pc, #80]	; (803941c <_tx_initialize_high_level+0x90>)
 80393cc:	4814      	ldr	r0, [pc, #80]	; (8039420 <_tx_initialize_high_level+0x94>)
 80393ce:	4915      	ldr	r1, [pc, #84]	; (8039424 <_tx_initialize_high_level+0x98>)
 80393d0:	4a15      	ldr	r2, [pc, #84]	; (8039428 <_tx_initialize_high_level+0x9c>)
 80393d2:	603b      	str	r3, [r7, #0]
 80393d4:	6033      	str	r3, [r6, #0]
 80393d6:	602b      	str	r3, [r5, #0]
 80393d8:	6023      	str	r3, [r4, #0]
 80393da:	6003      	str	r3, [r0, #0]
 80393dc:	600b      	str	r3, [r1, #0]
 80393de:	6013      	str	r3, [r2, #0]
 80393e0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80393e2:	bf00      	nop
 80393e4:	20012250 	.word	0x20012250
 80393e8:	2001224c 	.word	0x2001224c
 80393ec:	20012224 	.word	0x20012224
 80393f0:	20012220 	.word	0x20012220
 80393f4:	20012214 	.word	0x20012214
 80393f8:	20012258 	.word	0x20012258
 80393fc:	20012254 	.word	0x20012254
 8039400:	20012210 	.word	0x20012210
 8039404:	2001221c 	.word	0x2001221c
 8039408:	20012218 	.word	0x20012218
 803940c:	20012230 	.word	0x20012230
 8039410:	2001222c 	.word	0x2001222c
 8039414:	20012240 	.word	0x20012240
 8039418:	20012238 	.word	0x20012238
 803941c:	20012244 	.word	0x20012244
 8039420:	20012248 	.word	0x20012248
 8039424:	2001223c 	.word	0x2001223c
 8039428:	20012234 	.word	0x20012234

0803942c <_tx_initialize_kernel_enter>:
 803942c:	b510      	push	{r4, lr}
 803942e:	4c0c      	ldr	r4, [pc, #48]	; (8039460 <_tx_initialize_kernel_enter+0x34>)
 8039430:	6823      	ldr	r3, [r4, #0]
 8039432:	f113 3f0f 	cmn.w	r3, #252645135	; 0xf0f0f0f
 8039436:	d006      	beq.n	8039446 <_tx_initialize_kernel_enter+0x1a>
 8039438:	f04f 33f0 	mov.w	r3, #4042322160	; 0xf0f0f0f0
 803943c:	6023      	str	r3, [r4, #0]
 803943e:	f7ff fc6f 	bl	8038d20 <_tx_initialize_low_level>
 8039442:	f7ff ffa3 	bl	803938c <_tx_initialize_high_level>
 8039446:	4a07      	ldr	r2, [pc, #28]	; (8039464 <_tx_initialize_kernel_enter+0x38>)
 8039448:	f04f 33f0 	mov.w	r3, #4042322160	; 0xf0f0f0f0
 803944c:	6810      	ldr	r0, [r2, #0]
 803944e:	6023      	str	r3, [r4, #0]
 8039450:	f7f8 fb70 	bl	8031b34 <tx_application_define>
 8039454:	2300      	movs	r3, #0
 8039456:	6023      	str	r3, [r4, #0]
 8039458:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 803945c:	f000 bce0 	b.w	8039e20 <_tx_thread_schedule>
 8039460:	200024c8 	.word	0x200024c8
 8039464:	20012228 	.word	0x20012228

08039468 <_tx_mutex_cleanup>:
 8039468:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 803946a:	4604      	mov	r4, r0
 803946c:	2001      	movs	r0, #1
 803946e:	460d      	mov	r5, r1
 8039470:	f000 fcce 	bl	8039e10 <_tx_thread_interrupt_control>
 8039474:	6ea2      	ldr	r2, [r4, #104]	; 0x68
 8039476:	4b1e      	ldr	r3, [pc, #120]	; (80394f0 <_tx_mutex_cleanup+0x88>)
 8039478:	429a      	cmp	r2, r3
 803947a:	d003      	beq.n	8039484 <_tx_mutex_cleanup+0x1c>
 803947c:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 8039480:	f000 bcc6 	b.w	8039e10 <_tx_thread_interrupt_control>
 8039484:	f8d4 30b0 	ldr.w	r3, [r4, #176]	; 0xb0
 8039488:	42ab      	cmp	r3, r5
 803948a:	d1f7      	bne.n	803947c <_tx_mutex_cleanup+0x14>
 803948c:	6ee3      	ldr	r3, [r4, #108]	; 0x6c
 803948e:	2b00      	cmp	r3, #0
 8039490:	d0f4      	beq.n	803947c <_tx_mutex_cleanup+0x14>
 8039492:	4a18      	ldr	r2, [pc, #96]	; (80394f4 <_tx_mutex_cleanup+0x8c>)
 8039494:	6819      	ldr	r1, [r3, #0]
 8039496:	4291      	cmp	r1, r2
 8039498:	d1f0      	bne.n	803947c <_tx_mutex_cleanup+0x14>
 803949a:	69da      	ldr	r2, [r3, #28]
 803949c:	2a00      	cmp	r2, #0
 803949e:	d0ed      	beq.n	803947c <_tx_mutex_cleanup+0x14>
 80394a0:	3a01      	subs	r2, #1
 80394a2:	2100      	movs	r1, #0
 80394a4:	66a1      	str	r1, [r4, #104]	; 0x68
 80394a6:	61da      	str	r2, [r3, #28]
 80394a8:	b302      	cbz	r2, 80394ec <_tx_mutex_cleanup+0x84>
 80394aa:	699d      	ldr	r5, [r3, #24]
 80394ac:	e9d4 211c 	ldrd	r2, r1, [r4, #112]	; 0x70
 80394b0:	42a5      	cmp	r5, r4
 80394b2:	6751      	str	r1, [r2, #116]	; 0x74
 80394b4:	670a      	str	r2, [r1, #112]	; 0x70
 80394b6:	d019      	beq.n	80394ec <_tx_mutex_cleanup+0x84>
 80394b8:	6b22      	ldr	r2, [r4, #48]	; 0x30
 80394ba:	2a0d      	cmp	r2, #13
 80394bc:	d1de      	bne.n	803947c <_tx_mutex_cleanup+0x14>
 80394be:	6c1d      	ldr	r5, [r3, #64]	; 0x40
 80394c0:	4f0d      	ldr	r7, [pc, #52]	; (80394f8 <_tx_mutex_cleanup+0x90>)
 80394c2:	4e0e      	ldr	r6, [pc, #56]	; (80394fc <_tx_mutex_cleanup+0x94>)
 80394c4:	6839      	ldr	r1, [r7, #0]
 80394c6:	6832      	ldr	r2, [r6, #0]
 80394c8:	3501      	adds	r5, #1
 80394ca:	641d      	str	r5, [r3, #64]	; 0x40
 80394cc:	231d      	movs	r3, #29
 80394ce:	3101      	adds	r1, #1
 80394d0:	3201      	adds	r2, #1
 80394d2:	f8c4 3084 	str.w	r3, [r4, #132]	; 0x84
 80394d6:	6039      	str	r1, [r7, #0]
 80394d8:	6032      	str	r2, [r6, #0]
 80394da:	f000 fc99 	bl	8039e10 <_tx_thread_interrupt_control>
 80394de:	4620      	mov	r0, r4
 80394e0:	f000 fe44 	bl	803a16c <_tx_thread_system_resume>
 80394e4:	2001      	movs	r0, #1
 80394e6:	f000 fc93 	bl	8039e10 <_tx_thread_interrupt_control>
 80394ea:	e7c7      	b.n	803947c <_tx_mutex_cleanup+0x14>
 80394ec:	619a      	str	r2, [r3, #24]
 80394ee:	e7e3      	b.n	80394b8 <_tx_mutex_cleanup+0x50>
 80394f0:	08039469 	.word	0x08039469
 80394f4:	4d555445 	.word	0x4d555445
 80394f8:	20012248 	.word	0x20012248
 80394fc:	2001227c 	.word	0x2001227c

08039500 <_tx_mutex_thread_release>:
 8039500:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8039502:	4f10      	ldr	r7, [pc, #64]	; (8039544 <_tx_mutex_thread_release+0x44>)
 8039504:	4605      	mov	r5, r0
 8039506:	2001      	movs	r0, #1
 8039508:	f000 fc82 	bl	8039e10 <_tx_thread_interrupt_control>
 803950c:	683b      	ldr	r3, [r7, #0]
 803950e:	f8d5 40a8 	ldr.w	r4, [r5, #168]	; 0xa8
 8039512:	3301      	adds	r3, #1
 8039514:	603b      	str	r3, [r7, #0]
 8039516:	2601      	movs	r6, #1
 8039518:	b164      	cbz	r4, 8039534 <_tx_mutex_thread_release+0x34>
 803951a:	60a6      	str	r6, [r4, #8]
 803951c:	f000 fc78 	bl	8039e10 <_tx_thread_interrupt_control>
 8039520:	4620      	mov	r0, r4
 8039522:	f000 fa17 	bl	8039954 <_tx_mutex_put>
 8039526:	2001      	movs	r0, #1
 8039528:	f000 fc72 	bl	8039e10 <_tx_thread_interrupt_control>
 803952c:	f8d5 40a8 	ldr.w	r4, [r5, #168]	; 0xa8
 8039530:	2c00      	cmp	r4, #0
 8039532:	d1f1      	bne.n	8039518 <_tx_mutex_thread_release+0x18>
 8039534:	683b      	ldr	r3, [r7, #0]
 8039536:	3b01      	subs	r3, #1
 8039538:	603b      	str	r3, [r7, #0]
 803953a:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 803953e:	f000 bc67 	b.w	8039e10 <_tx_thread_interrupt_control>
 8039542:	bf00      	nop
 8039544:	2001227c 	.word	0x2001227c

08039548 <_tx_mutex_create>:
 8039548:	b570      	push	{r4, r5, r6, lr}
 803954a:	4604      	mov	r4, r0
 803954c:	460e      	mov	r6, r1
 803954e:	4615      	mov	r5, r2
 8039550:	2100      	movs	r1, #0
 8039552:	224c      	movs	r2, #76	; 0x4c
 8039554:	f006 f87e 	bl	803f654 <memset>
 8039558:	6066      	str	r6, [r4, #4]
 803955a:	6125      	str	r5, [r4, #16]
 803955c:	2001      	movs	r0, #1
 803955e:	f000 fc57 	bl	8039e10 <_tx_thread_interrupt_control>
 8039562:	4a0c      	ldr	r2, [pc, #48]	; (8039594 <_tx_mutex_create+0x4c>)
 8039564:	490c      	ldr	r1, [pc, #48]	; (8039598 <_tx_mutex_create+0x50>)
 8039566:	6813      	ldr	r3, [r2, #0]
 8039568:	4e0c      	ldr	r6, [pc, #48]	; (803959c <_tx_mutex_create+0x54>)
 803956a:	4d0d      	ldr	r5, [pc, #52]	; (80395a0 <_tx_mutex_create+0x58>)
 803956c:	6026      	str	r6, [r4, #0]
 803956e:	600d      	str	r5, [r1, #0]
 8039570:	490c      	ldr	r1, [pc, #48]	; (80395a4 <_tx_mutex_create+0x5c>)
 8039572:	b943      	cbnz	r3, 8039586 <_tx_mutex_create+0x3e>
 8039574:	e9c4 4408 	strd	r4, r4, [r4, #32]
 8039578:	600c      	str	r4, [r1, #0]
 803957a:	3301      	adds	r3, #1
 803957c:	6013      	str	r3, [r2, #0]
 803957e:	f000 fc47 	bl	8039e10 <_tx_thread_interrupt_control>
 8039582:	2000      	movs	r0, #0
 8039584:	bd70      	pop	{r4, r5, r6, pc}
 8039586:	6809      	ldr	r1, [r1, #0]
 8039588:	6a4d      	ldr	r5, [r1, #36]	; 0x24
 803958a:	624c      	str	r4, [r1, #36]	; 0x24
 803958c:	622c      	str	r4, [r5, #32]
 803958e:	e9c4 1508 	strd	r1, r5, [r4, #32]
 8039592:	e7f2      	b.n	803957a <_tx_mutex_create+0x32>
 8039594:	2001222c 	.word	0x2001222c
 8039598:	20012278 	.word	0x20012278
 803959c:	4d555445 	.word	0x4d555445
 80395a0:	08039501 	.word	0x08039501
 80395a4:	20012230 	.word	0x20012230

080395a8 <_tx_mutex_delete>:
 80395a8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80395ac:	4607      	mov	r7, r0
 80395ae:	2001      	movs	r0, #1
 80395b0:	f000 fc2e 	bl	8039e10 <_tx_thread_interrupt_control>
 80395b4:	4a29      	ldr	r2, [pc, #164]	; (803965c <_tx_mutex_delete+0xb4>)
 80395b6:	6813      	ldr	r3, [r2, #0]
 80395b8:	2100      	movs	r1, #0
 80395ba:	3b01      	subs	r3, #1
 80395bc:	6039      	str	r1, [r7, #0]
 80395be:	6013      	str	r3, [r2, #0]
 80395c0:	2b00      	cmp	r3, #0
 80395c2:	d140      	bne.n	8039646 <_tx_mutex_delete+0x9e>
 80395c4:	4a26      	ldr	r2, [pc, #152]	; (8039660 <_tx_mutex_delete+0xb8>)
 80395c6:	6013      	str	r3, [r2, #0]
 80395c8:	4e26      	ldr	r6, [pc, #152]	; (8039664 <_tx_mutex_delete+0xbc>)
 80395ca:	68fa      	ldr	r2, [r7, #12]
 80395cc:	6833      	ldr	r3, [r6, #0]
 80395ce:	69bc      	ldr	r4, [r7, #24]
 80395d0:	69fd      	ldr	r5, [r7, #28]
 80395d2:	3301      	adds	r3, #1
 80395d4:	6033      	str	r3, [r6, #0]
 80395d6:	2300      	movs	r3, #0
 80395d8:	e9c7 3306 	strd	r3, r3, [r7, #24]
 80395dc:	b15a      	cbz	r2, 80395f6 <_tx_mutex_delete+0x4e>
 80395de:	f04f 0801 	mov.w	r8, #1
 80395e2:	f8c7 8008 	str.w	r8, [r7, #8]
 80395e6:	f000 fc13 	bl	8039e10 <_tx_thread_interrupt_control>
 80395ea:	4638      	mov	r0, r7
 80395ec:	f000 f9b2 	bl	8039954 <_tx_mutex_put>
 80395f0:	4640      	mov	r0, r8
 80395f2:	f000 fc0d 	bl	8039e10 <_tx_thread_interrupt_control>
 80395f6:	f000 fc0b 	bl	8039e10 <_tx_thread_interrupt_control>
 80395fa:	b1bd      	cbz	r5, 803962c <_tx_mutex_delete+0x84>
 80395fc:	f04f 0901 	mov.w	r9, #1
 8039600:	f04f 0800 	mov.w	r8, #0
 8039604:	2001      	movs	r0, #1
 8039606:	f000 fc03 	bl	8039e10 <_tx_thread_interrupt_control>
 803960a:	6833      	ldr	r3, [r6, #0]
 803960c:	f8c4 8068 	str.w	r8, [r4, #104]	; 0x68
 8039610:	f8c4 9084 	str.w	r9, [r4, #132]	; 0x84
 8039614:	3301      	adds	r3, #1
 8039616:	4627      	mov	r7, r4
 8039618:	3d01      	subs	r5, #1
 803961a:	6f24      	ldr	r4, [r4, #112]	; 0x70
 803961c:	6033      	str	r3, [r6, #0]
 803961e:	f000 fbf7 	bl	8039e10 <_tx_thread_interrupt_control>
 8039622:	4638      	mov	r0, r7
 8039624:	f000 fda2 	bl	803a16c <_tx_thread_system_resume>
 8039628:	2d00      	cmp	r5, #0
 803962a:	d1eb      	bne.n	8039604 <_tx_mutex_delete+0x5c>
 803962c:	2001      	movs	r0, #1
 803962e:	f000 fbef 	bl	8039e10 <_tx_thread_interrupt_control>
 8039632:	6833      	ldr	r3, [r6, #0]
 8039634:	3b01      	subs	r3, #1
 8039636:	6033      	str	r3, [r6, #0]
 8039638:	f000 fbea 	bl	8039e10 <_tx_thread_interrupt_control>
 803963c:	f000 fd40 	bl	803a0c0 <_tx_thread_system_preempt_check>
 8039640:	2000      	movs	r0, #0
 8039642:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8039646:	4906      	ldr	r1, [pc, #24]	; (8039660 <_tx_mutex_delete+0xb8>)
 8039648:	e9d7 3208 	ldrd	r3, r2, [r7, #32]
 803964c:	680c      	ldr	r4, [r1, #0]
 803964e:	625a      	str	r2, [r3, #36]	; 0x24
 8039650:	42bc      	cmp	r4, r7
 8039652:	6213      	str	r3, [r2, #32]
 8039654:	bf08      	it	eq
 8039656:	600b      	streq	r3, [r1, #0]
 8039658:	e7b6      	b.n	80395c8 <_tx_mutex_delete+0x20>
 803965a:	bf00      	nop
 803965c:	2001222c 	.word	0x2001222c
 8039660:	20012230 	.word	0x20012230
 8039664:	2001227c 	.word	0x2001227c

08039668 <_tx_mutex_get>:
 8039668:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 803966c:	4604      	mov	r4, r0
 803966e:	2001      	movs	r0, #1
 8039670:	460f      	mov	r7, r1
 8039672:	f000 fbcd 	bl	8039e10 <_tx_thread_interrupt_control>
 8039676:	4951      	ldr	r1, [pc, #324]	; (80397bc <_tx_mutex_get+0x154>)
 8039678:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 803967a:	680b      	ldr	r3, [r1, #0]
 803967c:	4d50      	ldr	r5, [pc, #320]	; (80397c0 <_tx_mutex_get+0x158>)
 803967e:	68a6      	ldr	r6, [r4, #8]
 8039680:	682d      	ldr	r5, [r5, #0]
 8039682:	3301      	adds	r3, #1
 8039684:	3201      	adds	r2, #1
 8039686:	600b      	str	r3, [r1, #0]
 8039688:	63a2      	str	r2, [r4, #56]	; 0x38
 803968a:	4603      	mov	r3, r0
 803968c:	b9f6      	cbnz	r6, 80396cc <_tx_mutex_get+0x64>
 803968e:	2201      	movs	r2, #1
 8039690:	e9c4 2502 	strd	r2, r5, [r4, #8]
 8039694:	b1a5      	cbz	r5, 80396c0 <_tx_mutex_get+0x58>
 8039696:	6922      	ldr	r2, [r4, #16]
 8039698:	2a01      	cmp	r2, #1
 803969a:	d103      	bne.n	80396a4 <_tx_mutex_get+0x3c>
 803969c:	6aea      	ldr	r2, [r5, #44]	; 0x2c
 803969e:	6162      	str	r2, [r4, #20]
 80396a0:	2220      	movs	r2, #32
 80396a2:	62a2      	str	r2, [r4, #40]	; 0x28
 80396a4:	f8d5 20a8 	ldr.w	r2, [r5, #168]	; 0xa8
 80396a8:	2a00      	cmp	r2, #0
 80396aa:	d067      	beq.n	803977c <_tx_mutex_get+0x114>
 80396ac:	6b11      	ldr	r1, [r2, #48]	; 0x30
 80396ae:	6314      	str	r4, [r2, #48]	; 0x30
 80396b0:	62cc      	str	r4, [r1, #44]	; 0x2c
 80396b2:	e9c4 210b 	strd	r2, r1, [r4, #44]	; 0x2c
 80396b6:	f8d5 20a4 	ldr.w	r2, [r5, #164]	; 0xa4
 80396ba:	3201      	adds	r2, #1
 80396bc:	f8c5 20a4 	str.w	r2, [r5, #164]	; 0xa4
 80396c0:	4618      	mov	r0, r3
 80396c2:	f000 fba5 	bl	8039e10 <_tx_thread_interrupt_control>
 80396c6:	4630      	mov	r0, r6
 80396c8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80396cc:	f8d4 800c 	ldr.w	r8, [r4, #12]
 80396d0:	45a8      	cmp	r8, r5
 80396d2:	d047      	beq.n	8039764 <_tx_mutex_get+0xfc>
 80396d4:	2f00      	cmp	r7, #0
 80396d6:	d04b      	beq.n	8039770 <_tx_mutex_get+0x108>
 80396d8:	493a      	ldr	r1, [pc, #232]	; (80397c4 <_tx_mutex_get+0x15c>)
 80396da:	680a      	ldr	r2, [r1, #0]
 80396dc:	2a00      	cmp	r2, #0
 80396de:	d147      	bne.n	8039770 <_tx_mutex_get+0x108>
 80396e0:	4e39      	ldr	r6, [pc, #228]	; (80397c8 <_tx_mutex_get+0x160>)
 80396e2:	6be2      	ldr	r2, [r4, #60]	; 0x3c
 80396e4:	6830      	ldr	r0, [r6, #0]
 80396e6:	f8d5 e02c 	ldr.w	lr, [r5, #44]	; 0x2c
 80396ea:	f8d8 c02c 	ldr.w	ip, [r8, #44]	; 0x2c
 80396ee:	3001      	adds	r0, #1
 80396f0:	3201      	adds	r2, #1
 80396f2:	45e6      	cmp	lr, ip
 80396f4:	6030      	str	r0, [r6, #0]
 80396f6:	63e2      	str	r2, [r4, #60]	; 0x3c
 80396f8:	d206      	bcs.n	8039708 <_tx_mutex_get+0xa0>
 80396fa:	4e34      	ldr	r6, [pc, #208]	; (80397cc <_tx_mutex_get+0x164>)
 80396fc:	6c62      	ldr	r2, [r4, #68]	; 0x44
 80396fe:	6830      	ldr	r0, [r6, #0]
 8039700:	3201      	adds	r2, #1
 8039702:	3001      	adds	r0, #1
 8039704:	6030      	str	r0, [r6, #0]
 8039706:	6462      	str	r2, [r4, #68]	; 0x44
 8039708:	f8d5 00b0 	ldr.w	r0, [r5, #176]	; 0xb0
 803970c:	69e2      	ldr	r2, [r4, #28]
 803970e:	66ec      	str	r4, [r5, #108]	; 0x6c
 8039710:	3001      	adds	r0, #1
 8039712:	f8c5 00b0 	str.w	r0, [r5, #176]	; 0xb0
 8039716:	482e      	ldr	r0, [pc, #184]	; (80397d0 <_tx_mutex_get+0x168>)
 8039718:	66a8      	str	r0, [r5, #104]	; 0x68
 803971a:	b1fa      	cbz	r2, 803975c <_tx_mutex_get+0xf4>
 803971c:	69a0      	ldr	r0, [r4, #24]
 803971e:	6728      	str	r0, [r5, #112]	; 0x70
 8039720:	6f46      	ldr	r6, [r0, #116]	; 0x74
 8039722:	676e      	str	r6, [r5, #116]	; 0x74
 8039724:	6735      	str	r5, [r6, #112]	; 0x70
 8039726:	6745      	str	r5, [r0, #116]	; 0x74
 8039728:	680e      	ldr	r6, [r1, #0]
 803972a:	3201      	adds	r2, #1
 803972c:	61e2      	str	r2, [r4, #28]
 803972e:	f04f 0c0d 	mov.w	ip, #13
 8039732:	2201      	movs	r2, #1
 8039734:	4618      	mov	r0, r3
 8039736:	4416      	add	r6, r2
 8039738:	64ef      	str	r7, [r5, #76]	; 0x4c
 803973a:	f8c5 c030 	str.w	ip, [r5, #48]	; 0x30
 803973e:	63aa      	str	r2, [r5, #56]	; 0x38
 8039740:	600e      	str	r6, [r1, #0]
 8039742:	f000 fb65 	bl	8039e10 <_tx_thread_interrupt_control>
 8039746:	6923      	ldr	r3, [r4, #16]
 8039748:	2b01      	cmp	r3, #1
 803974a:	d01c      	beq.n	8039786 <_tx_mutex_get+0x11e>
 803974c:	4628      	mov	r0, r5
 803974e:	f000 fe11 	bl	803a374 <_tx_thread_system_suspend>
 8039752:	f8d5 6084 	ldr.w	r6, [r5, #132]	; 0x84
 8039756:	4630      	mov	r0, r6
 8039758:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 803975c:	61a5      	str	r5, [r4, #24]
 803975e:	e9c5 551c 	strd	r5, r5, [r5, #112]	; 0x70
 8039762:	e7e1      	b.n	8039728 <_tx_mutex_get+0xc0>
 8039764:	3601      	adds	r6, #1
 8039766:	60a6      	str	r6, [r4, #8]
 8039768:	f000 fb52 	bl	8039e10 <_tx_thread_interrupt_control>
 803976c:	2600      	movs	r6, #0
 803976e:	e7aa      	b.n	80396c6 <_tx_mutex_get+0x5e>
 8039770:	261d      	movs	r6, #29
 8039772:	f000 fb4d 	bl	8039e10 <_tx_thread_interrupt_control>
 8039776:	4630      	mov	r0, r6
 8039778:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 803977c:	f8c5 40a8 	str.w	r4, [r5, #168]	; 0xa8
 8039780:	e9c4 440b 	strd	r4, r4, [r4, #44]	; 0x2c
 8039784:	e797      	b.n	80396b6 <_tx_mutex_get+0x4e>
 8039786:	6ae9      	ldr	r1, [r5, #44]	; 0x2c
 8039788:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 803978a:	428b      	cmp	r3, r1
 803978c:	f8d8 30a0 	ldr.w	r3, [r8, #160]	; 0xa0
 8039790:	bf88      	it	hi
 8039792:	62a1      	strhi	r1, [r4, #40]	; 0x28
 8039794:	4299      	cmp	r1, r3
 8039796:	f8d8 302c 	ldr.w	r3, [r8, #44]	; 0x2c
 803979a:	bf38      	it	cc
 803979c:	f8c8 10a0 	strcc.w	r1, [r8, #160]	; 0xa0
 80397a0:	4299      	cmp	r1, r3
 80397a2:	d2d3      	bcs.n	803974c <_tx_mutex_get+0xe4>
 80397a4:	4640      	mov	r0, r8
 80397a6:	f000 f877 	bl	8039898 <_tx_mutex_priority_change>
 80397aa:	490a      	ldr	r1, [pc, #40]	; (80397d4 <_tx_mutex_get+0x16c>)
 80397ac:	6ca3      	ldr	r3, [r4, #72]	; 0x48
 80397ae:	680a      	ldr	r2, [r1, #0]
 80397b0:	3301      	adds	r3, #1
 80397b2:	3201      	adds	r2, #1
 80397b4:	600a      	str	r2, [r1, #0]
 80397b6:	64a3      	str	r3, [r4, #72]	; 0x48
 80397b8:	e7c8      	b.n	803974c <_tx_mutex_get+0xe4>
 80397ba:	bf00      	nop
 80397bc:	20012238 	.word	0x20012238
 80397c0:	2001226c 	.word	0x2001226c
 80397c4:	2001227c 	.word	0x2001227c
 80397c8:	20012244 	.word	0x20012244
 80397cc:	2001223c 	.word	0x2001223c
 80397d0:	08039469 	.word	0x08039469
 80397d4:	20012234 	.word	0x20012234

080397d8 <_tx_mutex_prioritize>:
 80397d8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80397dc:	4681      	mov	r9, r0
 80397de:	2001      	movs	r0, #1
 80397e0:	f000 fb16 	bl	8039e10 <_tx_thread_interrupt_control>
 80397e4:	f8d9 601c 	ldr.w	r6, [r9, #28]
 80397e8:	2e01      	cmp	r6, #1
 80397ea:	d932      	bls.n	8039852 <_tx_mutex_prioritize+0x7a>
 80397ec:	2e02      	cmp	r6, #2
 80397ee:	4603      	mov	r3, r0
 80397f0:	d025      	beq.n	803983e <_tx_mutex_prioritize+0x66>
 80397f2:	4f28      	ldr	r7, [pc, #160]	; (8039894 <_tx_mutex_prioritize+0xbc>)
 80397f4:	f8d9 4018 	ldr.w	r4, [r9, #24]
 80397f8:	683a      	ldr	r2, [r7, #0]
 80397fa:	6f25      	ldr	r5, [r4, #112]	; 0x70
 80397fc:	3201      	adds	r2, #1
 80397fe:	603a      	str	r2, [r7, #0]
 8039800:	46a0      	mov	r8, r4
 8039802:	e006      	b.n	8039812 <_tx_mutex_prioritize+0x3a>
 8039804:	f8d9 601c 	ldr.w	r6, [r9, #28]
 8039808:	6f15      	ldr	r5, [r2, #112]	; 0x70
 803980a:	4690      	mov	r8, r2
 803980c:	4614      	mov	r4, r2
 803980e:	4545      	cmp	r5, r8
 8039810:	d024      	beq.n	803985c <_tx_mutex_prioritize+0x84>
 8039812:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8039814:	6ae9      	ldr	r1, [r5, #44]	; 0x2c
 8039816:	4618      	mov	r0, r3
 8039818:	4291      	cmp	r1, r2
 803981a:	bf38      	it	cc
 803981c:	462c      	movcc	r4, r5
 803981e:	f000 faf7 	bl	8039e10 <_tx_thread_interrupt_control>
 8039822:	2001      	movs	r0, #1
 8039824:	f000 faf4 	bl	8039e10 <_tx_thread_interrupt_control>
 8039828:	f8d9 2018 	ldr.w	r2, [r9, #24]
 803982c:	4542      	cmp	r2, r8
 803982e:	4603      	mov	r3, r0
 8039830:	d1e8      	bne.n	8039804 <_tx_mutex_prioritize+0x2c>
 8039832:	f8d9 101c 	ldr.w	r1, [r9, #28]
 8039836:	42b1      	cmp	r1, r6
 8039838:	d029      	beq.n	803988e <_tx_mutex_prioritize+0xb6>
 803983a:	460e      	mov	r6, r1
 803983c:	e7e4      	b.n	8039808 <_tx_mutex_prioritize+0x30>
 803983e:	f8d9 2018 	ldr.w	r2, [r9, #24]
 8039842:	6f11      	ldr	r1, [r2, #112]	; 0x70
 8039844:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 8039846:	6ac8      	ldr	r0, [r1, #44]	; 0x2c
 8039848:	4290      	cmp	r0, r2
 803984a:	bf38      	it	cc
 803984c:	f8c9 1018 	strcc.w	r1, [r9, #24]
 8039850:	4618      	mov	r0, r3
 8039852:	f000 fadd 	bl	8039e10 <_tx_thread_interrupt_control>
 8039856:	2000      	movs	r0, #0
 8039858:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 803985c:	683a      	ldr	r2, [r7, #0]
 803985e:	42ac      	cmp	r4, r5
 8039860:	f102 32ff 	add.w	r2, r2, #4294967295
 8039864:	603a      	str	r2, [r7, #0]
 8039866:	d00a      	beq.n	803987e <_tx_mutex_prioritize+0xa6>
 8039868:	e9d4 011c 	ldrd	r0, r1, [r4, #112]	; 0x70
 803986c:	6741      	str	r1, [r0, #116]	; 0x74
 803986e:	6f6a      	ldr	r2, [r5, #116]	; 0x74
 8039870:	6708      	str	r0, [r1, #112]	; 0x70
 8039872:	e9c4 521c 	strd	r5, r2, [r4, #112]	; 0x70
 8039876:	6714      	str	r4, [r2, #112]	; 0x70
 8039878:	676c      	str	r4, [r5, #116]	; 0x74
 803987a:	f8c9 4018 	str.w	r4, [r9, #24]
 803987e:	4618      	mov	r0, r3
 8039880:	f000 fac6 	bl	8039e10 <_tx_thread_interrupt_control>
 8039884:	f000 fc1c 	bl	803a0c0 <_tx_thread_system_preempt_check>
 8039888:	2000      	movs	r0, #0
 803988a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 803988e:	6f2d      	ldr	r5, [r5, #112]	; 0x70
 8039890:	e7bd      	b.n	803980e <_tx_mutex_prioritize+0x36>
 8039892:	bf00      	nop
 8039894:	2001227c 	.word	0x2001227c

08039898 <_tx_mutex_priority_change>:
 8039898:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 803989c:	4604      	mov	r4, r0
 803989e:	2001      	movs	r0, #1
 80398a0:	460d      	mov	r5, r1
 80398a2:	f000 fab5 	bl	8039e10 <_tx_thread_interrupt_control>
 80398a6:	6b22      	ldr	r2, [r4, #48]	; 0x30
 80398a8:	b152      	cbz	r2, 80398c0 <_tx_mutex_priority_change+0x28>
 80398aa:	f8d4 309c 	ldr.w	r3, [r4, #156]	; 0x9c
 80398ae:	62e5      	str	r5, [r4, #44]	; 0x2c
 80398b0:	42ab      	cmp	r3, r5
 80398b2:	bf28      	it	cs
 80398b4:	462b      	movcs	r3, r5
 80398b6:	63e3      	str	r3, [r4, #60]	; 0x3c
 80398b8:	e8bd 43f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80398bc:	f000 baa8 	b.w	8039e10 <_tx_thread_interrupt_control>
 80398c0:	4921      	ldr	r1, [pc, #132]	; (8039948 <_tx_mutex_priority_change+0xb0>)
 80398c2:	f8df 908c 	ldr.w	r9, [pc, #140]	; 8039950 <_tx_mutex_priority_change+0xb8>
 80398c6:	680b      	ldr	r3, [r1, #0]
 80398c8:	64e2      	str	r2, [r4, #76]	; 0x4c
 80398ca:	2601      	movs	r6, #1
 80398cc:	2203      	movs	r2, #3
 80398ce:	6322      	str	r2, [r4, #48]	; 0x30
 80398d0:	3302      	adds	r3, #2
 80398d2:	63a6      	str	r6, [r4, #56]	; 0x38
 80398d4:	600b      	str	r3, [r1, #0]
 80398d6:	f8d9 7000 	ldr.w	r7, [r9]
 80398da:	f8d4 802c 	ldr.w	r8, [r4, #44]	; 0x2c
 80398de:	f000 fa97 	bl	8039e10 <_tx_thread_interrupt_control>
 80398e2:	4620      	mov	r0, r4
 80398e4:	f000 fd46 	bl	803a374 <_tx_thread_system_suspend>
 80398e8:	4630      	mov	r0, r6
 80398ea:	f000 fa91 	bl	8039e10 <_tx_thread_interrupt_control>
 80398ee:	f8d4 309c 	ldr.w	r3, [r4, #156]	; 0x9c
 80398f2:	62e5      	str	r5, [r4, #44]	; 0x2c
 80398f4:	42ab      	cmp	r3, r5
 80398f6:	bf28      	it	cs
 80398f8:	462b      	movcs	r3, r5
 80398fa:	63e3      	str	r3, [r4, #60]	; 0x3c
 80398fc:	f000 fa88 	bl	8039e10 <_tx_thread_interrupt_control>
 8039900:	4620      	mov	r0, r4
 8039902:	f000 fc33 	bl	803a16c <_tx_thread_system_resume>
 8039906:	4630      	mov	r0, r6
 8039908:	f000 fa82 	bl	8039e10 <_tx_thread_interrupt_control>
 803990c:	f8d9 3000 	ldr.w	r3, [r9]
 8039910:	429c      	cmp	r4, r3
 8039912:	d007      	beq.n	8039924 <_tx_mutex_priority_change+0x8c>
 8039914:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8039916:	b92a      	cbnz	r2, 8039924 <_tx_mutex_priority_change+0x8c>
 8039918:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 803991a:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 803991c:	4293      	cmp	r3, r2
 803991e:	d805      	bhi.n	803992c <_tx_mutex_priority_change+0x94>
 8039920:	42bc      	cmp	r4, r7
 8039922:	d008      	beq.n	8039936 <_tx_mutex_priority_change+0x9e>
 8039924:	e8bd 43f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8039928:	f000 ba72 	b.w	8039e10 <_tx_thread_interrupt_control>
 803992c:	6be1      	ldr	r1, [r4, #60]	; 0x3c
 803992e:	428b      	cmp	r3, r1
 8039930:	d9f8      	bls.n	8039924 <_tx_mutex_priority_change+0x8c>
 8039932:	428a      	cmp	r2, r1
 8039934:	d3f6      	bcc.n	8039924 <_tx_mutex_priority_change+0x8c>
 8039936:	45a8      	cmp	r8, r5
 8039938:	bf38      	it	cc
 803993a:	4a04      	ldrcc	r2, [pc, #16]	; (803994c <_tx_mutex_priority_change+0xb4>)
 803993c:	f8c9 4000 	str.w	r4, [r9]
 8039940:	bf38      	it	cc
 8039942:	f842 4023 	strcc.w	r4, [r2, r3, lsl #2]
 8039946:	e7ed      	b.n	8039924 <_tx_mutex_priority_change+0x8c>
 8039948:	2001227c 	.word	0x2001227c
 803994c:	20012280 	.word	0x20012280
 8039950:	20012270 	.word	0x20012270

08039954 <_tx_mutex_put>:
 8039954:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8039958:	4604      	mov	r4, r0
 803995a:	2001      	movs	r0, #1
 803995c:	f000 fa58 	bl	8039e10 <_tx_thread_interrupt_control>
 8039960:	4988      	ldr	r1, [pc, #544]	; (8039b84 <_tx_mutex_put+0x230>)
 8039962:	6b62      	ldr	r2, [r4, #52]	; 0x34
 8039964:	680b      	ldr	r3, [r1, #0]
 8039966:	68a5      	ldr	r5, [r4, #8]
 8039968:	3201      	adds	r2, #1
 803996a:	3301      	adds	r3, #1
 803996c:	6362      	str	r2, [r4, #52]	; 0x34
 803996e:	600b      	str	r3, [r1, #0]
 8039970:	2d00      	cmp	r5, #0
 8039972:	d064      	beq.n	8039a3e <_tx_mutex_put+0xea>
 8039974:	4b84      	ldr	r3, [pc, #528]	; (8039b88 <_tx_mutex_put+0x234>)
 8039976:	68e6      	ldr	r6, [r4, #12]
 8039978:	681b      	ldr	r3, [r3, #0]
 803997a:	429e      	cmp	r6, r3
 803997c:	4601      	mov	r1, r0
 803997e:	d003      	beq.n	8039988 <_tx_mutex_put+0x34>
 8039980:	4f82      	ldr	r7, [pc, #520]	; (8039b8c <_tx_mutex_put+0x238>)
 8039982:	683b      	ldr	r3, [r7, #0]
 8039984:	2b00      	cmp	r3, #0
 8039986:	d05a      	beq.n	8039a3e <_tx_mutex_put+0xea>
 8039988:	3d01      	subs	r5, #1
 803998a:	60a5      	str	r5, [r4, #8]
 803998c:	2d00      	cmp	r5, #0
 803998e:	d14f      	bne.n	8039a30 <_tx_mutex_put+0xdc>
 8039990:	2e00      	cmp	r6, #0
 8039992:	f000 80a2 	beq.w	8039ada <_tx_mutex_put+0x186>
 8039996:	f8d6 30a4 	ldr.w	r3, [r6, #164]	; 0xa4
 803999a:	3b01      	subs	r3, #1
 803999c:	f8c6 30a4 	str.w	r3, [r6, #164]	; 0xa4
 80399a0:	2b00      	cmp	r3, #0
 80399a2:	d052      	beq.n	8039a4a <_tx_mutex_put+0xf6>
 80399a4:	e9d4 320b 	ldrd	r3, r2, [r4, #44]	; 0x2c
 80399a8:	f8d6 00a8 	ldr.w	r0, [r6, #168]	; 0xa8
 80399ac:	631a      	str	r2, [r3, #48]	; 0x30
 80399ae:	42a0      	cmp	r0, r4
 80399b0:	62d3      	str	r3, [r2, #44]	; 0x2c
 80399b2:	bf08      	it	eq
 80399b4:	f8c6 30a8 	streq.w	r3, [r6, #168]	; 0xa8
 80399b8:	69a3      	ldr	r3, [r4, #24]
 80399ba:	6927      	ldr	r7, [r4, #16]
 80399bc:	2b00      	cmp	r3, #0
 80399be:	d04a      	beq.n	8039a56 <_tx_mutex_put+0x102>
 80399c0:	2f01      	cmp	r7, #1
 80399c2:	f8d6 8098 	ldr.w	r8, [r6, #152]	; 0x98
 80399c6:	4f71      	ldr	r7, [pc, #452]	; (8039b8c <_tx_mutex_put+0x238>)
 80399c8:	f000 808b 	beq.w	8039ae2 <_tx_mutex_put+0x18e>
 80399cc:	69e3      	ldr	r3, [r4, #28]
 80399ce:	2b01      	cmp	r3, #1
 80399d0:	d959      	bls.n	8039a86 <_tx_mutex_put+0x132>
 80399d2:	6926      	ldr	r6, [r4, #16]
 80399d4:	2e01      	cmp	r6, #1
 80399d6:	d046      	beq.n	8039a66 <_tx_mutex_put+0x112>
 80399d8:	69a6      	ldr	r6, [r4, #24]
 80399da:	2e00      	cmp	r6, #0
 80399dc:	f000 80a4 	beq.w	8039b28 <_tx_mutex_put+0x1d4>
 80399e0:	f04f 0900 	mov.w	r9, #0
 80399e4:	f8d6 20a4 	ldr.w	r2, [r6, #164]	; 0xa4
 80399e8:	2a00      	cmp	r2, #0
 80399ea:	d160      	bne.n	8039aae <_tx_mutex_put+0x15a>
 80399ec:	f8c6 40a8 	str.w	r4, [r6, #168]	; 0xa8
 80399f0:	e9c4 440b 	strd	r4, r4, [r4, #44]	; 0x2c
 80399f4:	3201      	adds	r2, #1
 80399f6:	3b01      	subs	r3, #1
 80399f8:	2001      	movs	r0, #1
 80399fa:	f8c6 20a4 	str.w	r2, [r6, #164]	; 0xa4
 80399fe:	e9c4 0602 	strd	r0, r6, [r4, #8]
 8039a02:	61e3      	str	r3, [r4, #28]
 8039a04:	2b00      	cmp	r3, #0
 8039a06:	d14c      	bne.n	8039aa2 <_tx_mutex_put+0x14e>
 8039a08:	61a3      	str	r3, [r4, #24]
 8039a0a:	683b      	ldr	r3, [r7, #0]
 8039a0c:	2200      	movs	r2, #0
 8039a0e:	3301      	adds	r3, #1
 8039a10:	4608      	mov	r0, r1
 8039a12:	66b2      	str	r2, [r6, #104]	; 0x68
 8039a14:	f8c6 2084 	str.w	r2, [r6, #132]	; 0x84
 8039a18:	603b      	str	r3, [r7, #0]
 8039a1a:	f000 f9f9 	bl	8039e10 <_tx_thread_interrupt_control>
 8039a1e:	6927      	ldr	r7, [r4, #16]
 8039a20:	2f01      	cmp	r7, #1
 8039a22:	d04e      	beq.n	8039ac2 <_tx_mutex_put+0x16e>
 8039a24:	4630      	mov	r0, r6
 8039a26:	f000 fba1 	bl	803a16c <_tx_thread_system_resume>
 8039a2a:	4628      	mov	r0, r5
 8039a2c:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8039a30:	4608      	mov	r0, r1
 8039a32:	f000 f9ed 	bl	8039e10 <_tx_thread_interrupt_control>
 8039a36:	2500      	movs	r5, #0
 8039a38:	4628      	mov	r0, r5
 8039a3a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8039a3e:	251e      	movs	r5, #30
 8039a40:	f000 f9e6 	bl	8039e10 <_tx_thread_interrupt_control>
 8039a44:	4628      	mov	r0, r5
 8039a46:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8039a4a:	69a3      	ldr	r3, [r4, #24]
 8039a4c:	6927      	ldr	r7, [r4, #16]
 8039a4e:	f8c6 50a8 	str.w	r5, [r6, #168]	; 0xa8
 8039a52:	2b00      	cmp	r3, #0
 8039a54:	d1b4      	bne.n	80399c0 <_tx_mutex_put+0x6c>
 8039a56:	2f00      	cmp	r7, #0
 8039a58:	d1b2      	bne.n	80399c0 <_tx_mutex_put+0x6c>
 8039a5a:	60e7      	str	r7, [r4, #12]
 8039a5c:	4608      	mov	r0, r1
 8039a5e:	f000 f9d7 	bl	8039e10 <_tx_thread_interrupt_control>
 8039a62:	463d      	mov	r5, r7
 8039a64:	e7e8      	b.n	8039a38 <_tx_mutex_put+0xe4>
 8039a66:	683b      	ldr	r3, [r7, #0]
 8039a68:	4608      	mov	r0, r1
 8039a6a:	3301      	adds	r3, #1
 8039a6c:	603b      	str	r3, [r7, #0]
 8039a6e:	f000 f9cf 	bl	8039e10 <_tx_thread_interrupt_control>
 8039a72:	4620      	mov	r0, r4
 8039a74:	f7ff feb0 	bl	80397d8 <_tx_mutex_prioritize>
 8039a78:	4630      	mov	r0, r6
 8039a7a:	f000 f9c9 	bl	8039e10 <_tx_thread_interrupt_control>
 8039a7e:	683b      	ldr	r3, [r7, #0]
 8039a80:	3b01      	subs	r3, #1
 8039a82:	4601      	mov	r1, r0
 8039a84:	603b      	str	r3, [r7, #0]
 8039a86:	69a6      	ldr	r6, [r4, #24]
 8039a88:	2e00      	cmp	r6, #0
 8039a8a:	d04d      	beq.n	8039b28 <_tx_mutex_put+0x1d4>
 8039a8c:	6923      	ldr	r3, [r4, #16]
 8039a8e:	2b01      	cmp	r3, #1
 8039a90:	d163      	bne.n	8039b5a <_tx_mutex_put+0x206>
 8039a92:	6af2      	ldr	r2, [r6, #44]	; 0x2c
 8039a94:	6162      	str	r2, [r4, #20]
 8039a96:	2220      	movs	r2, #32
 8039a98:	f8d4 900c 	ldr.w	r9, [r4, #12]
 8039a9c:	69e3      	ldr	r3, [r4, #28]
 8039a9e:	62a2      	str	r2, [r4, #40]	; 0x28
 8039aa0:	e7a0      	b.n	80399e4 <_tx_mutex_put+0x90>
 8039aa2:	e9d6 321c 	ldrd	r3, r2, [r6, #112]	; 0x70
 8039aa6:	61a3      	str	r3, [r4, #24]
 8039aa8:	675a      	str	r2, [r3, #116]	; 0x74
 8039aaa:	6713      	str	r3, [r2, #112]	; 0x70
 8039aac:	e7ad      	b.n	8039a0a <_tx_mutex_put+0xb6>
 8039aae:	f8d6 00a8 	ldr.w	r0, [r6, #168]	; 0xa8
 8039ab2:	f8d0 c030 	ldr.w	ip, [r0, #48]	; 0x30
 8039ab6:	6304      	str	r4, [r0, #48]	; 0x30
 8039ab8:	f8cc 402c 	str.w	r4, [ip, #44]	; 0x2c
 8039abc:	e9c4 0c0b 	strd	r0, ip, [r4, #44]	; 0x2c
 8039ac0:	e798      	b.n	80399f4 <_tx_mutex_put+0xa0>
 8039ac2:	69e3      	ldr	r3, [r4, #28]
 8039ac4:	2b00      	cmp	r3, #0
 8039ac6:	d150      	bne.n	8039b6a <_tx_mutex_put+0x216>
 8039ac8:	f8d9 302c 	ldr.w	r3, [r9, #44]	; 0x2c
 8039acc:	4543      	cmp	r3, r8
 8039ace:	d0a9      	beq.n	8039a24 <_tx_mutex_put+0xd0>
 8039ad0:	4641      	mov	r1, r8
 8039ad2:	4648      	mov	r0, r9
 8039ad4:	f7ff fee0 	bl	8039898 <_tx_mutex_priority_change>
 8039ad8:	e7a4      	b.n	8039a24 <_tx_mutex_put+0xd0>
 8039ada:	4608      	mov	r0, r1
 8039adc:	f000 f998 	bl	8039e10 <_tx_thread_interrupt_control>
 8039ae0:	e7aa      	b.n	8039a38 <_tx_mutex_put+0xe4>
 8039ae2:	683b      	ldr	r3, [r7, #0]
 8039ae4:	4608      	mov	r0, r1
 8039ae6:	3301      	adds	r3, #1
 8039ae8:	603b      	str	r3, [r7, #0]
 8039aea:	f000 f991 	bl	8039e10 <_tx_thread_interrupt_control>
 8039aee:	f8d6 10a8 	ldr.w	r1, [r6, #168]	; 0xa8
 8039af2:	f04f 0920 	mov.w	r9, #32
 8039af6:	460b      	mov	r3, r1
 8039af8:	b14b      	cbz	r3, 8039b0e <_tx_mutex_put+0x1ba>
 8039afa:	691a      	ldr	r2, [r3, #16]
 8039afc:	2a01      	cmp	r2, #1
 8039afe:	d103      	bne.n	8039b08 <_tx_mutex_put+0x1b4>
 8039b00:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8039b02:	4591      	cmp	r9, r2
 8039b04:	bf28      	it	cs
 8039b06:	4691      	movcs	r9, r2
 8039b08:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8039b0a:	4299      	cmp	r1, r3
 8039b0c:	d1f4      	bne.n	8039af8 <_tx_mutex_put+0x1a4>
 8039b0e:	2001      	movs	r0, #1
 8039b10:	f000 f97e 	bl	8039e10 <_tx_thread_interrupt_control>
 8039b14:	683b      	ldr	r3, [r7, #0]
 8039b16:	f8c6 90a0 	str.w	r9, [r6, #160]	; 0xa0
 8039b1a:	3b01      	subs	r3, #1
 8039b1c:	45c8      	cmp	r8, r9
 8039b1e:	bf28      	it	cs
 8039b20:	46c8      	movcs	r8, r9
 8039b22:	4601      	mov	r1, r0
 8039b24:	603b      	str	r3, [r7, #0]
 8039b26:	e751      	b.n	80399cc <_tx_mutex_put+0x78>
 8039b28:	683b      	ldr	r3, [r7, #0]
 8039b2a:	4608      	mov	r0, r1
 8039b2c:	3301      	adds	r3, #1
 8039b2e:	603b      	str	r3, [r7, #0]
 8039b30:	f000 f96e 	bl	8039e10 <_tx_thread_interrupt_control>
 8039b34:	68e0      	ldr	r0, [r4, #12]
 8039b36:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8039b38:	2220      	movs	r2, #32
 8039b3a:	4543      	cmp	r3, r8
 8039b3c:	62a2      	str	r2, [r4, #40]	; 0x28
 8039b3e:	d110      	bne.n	8039b62 <_tx_mutex_put+0x20e>
 8039b40:	2001      	movs	r0, #1
 8039b42:	f000 f965 	bl	8039e10 <_tx_thread_interrupt_control>
 8039b46:	683b      	ldr	r3, [r7, #0]
 8039b48:	2200      	movs	r2, #0
 8039b4a:	3b01      	subs	r3, #1
 8039b4c:	60e2      	str	r2, [r4, #12]
 8039b4e:	603b      	str	r3, [r7, #0]
 8039b50:	f000 f95e 	bl	8039e10 <_tx_thread_interrupt_control>
 8039b54:	f000 fab4 	bl	803a0c0 <_tx_thread_system_preempt_check>
 8039b58:	e76e      	b.n	8039a38 <_tx_mutex_put+0xe4>
 8039b5a:	69e3      	ldr	r3, [r4, #28]
 8039b5c:	f04f 0900 	mov.w	r9, #0
 8039b60:	e740      	b.n	80399e4 <_tx_mutex_put+0x90>
 8039b62:	4641      	mov	r1, r8
 8039b64:	f7ff fe98 	bl	8039898 <_tx_mutex_priority_change>
 8039b68:	e7ea      	b.n	8039b40 <_tx_mutex_put+0x1ec>
 8039b6a:	4620      	mov	r0, r4
 8039b6c:	f7ff fe34 	bl	80397d8 <_tx_mutex_prioritize>
 8039b70:	4638      	mov	r0, r7
 8039b72:	f000 f94d 	bl	8039e10 <_tx_thread_interrupt_control>
 8039b76:	69a3      	ldr	r3, [r4, #24]
 8039b78:	b10b      	cbz	r3, 8039b7e <_tx_mutex_put+0x22a>
 8039b7a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8039b7c:	62a3      	str	r3, [r4, #40]	; 0x28
 8039b7e:	f000 f947 	bl	8039e10 <_tx_thread_interrupt_control>
 8039b82:	e7a1      	b.n	8039ac8 <_tx_mutex_put+0x174>
 8039b84:	20012240 	.word	0x20012240
 8039b88:	2001226c 	.word	0x2001226c
 8039b8c:	2001227c 	.word	0x2001227c

08039b90 <_tx_thread_context_restore>:
 8039b90:	480c      	ldr	r0, [pc, #48]	; (8039bc4 <_tx_thread_context_restore+0x34>)
 8039b92:	6801      	ldr	r1, [r0, #0]
 8039b94:	f1a1 0101 	sub.w	r1, r1, #1
 8039b98:	6001      	str	r1, [r0, #0]
 8039b9a:	e8bd 4400 	ldmia.w	sp!, {sl, lr}
 8039b9e:	480a      	ldr	r0, [pc, #40]	; (8039bc8 <_tx_thread_context_restore+0x38>)
 8039ba0:	6800      	ldr	r0, [r0, #0]
 8039ba2:	2800      	cmp	r0, #0
 8039ba4:	bf1d      	ittte	ne
 8039ba6:	4909      	ldrne	r1, [pc, #36]	; (8039bcc <_tx_thread_context_restore+0x3c>)
 8039ba8:	6809      	ldrne	r1, [r1, #0]
 8039baa:	4281      	cmpne	r1, r0
 8039bac:	4770      	bxeq	lr
 8039bae:	4808      	ldr	r0, [pc, #32]	; (8039bd0 <_tx_thread_context_restore+0x40>)
 8039bb0:	6800      	ldr	r0, [r0, #0]
 8039bb2:	2800      	cmp	r0, #0
 8039bb4:	bf02      	ittt	eq
 8039bb6:	f04f 5080 	moveq.w	r0, #268435456	; 0x10000000
 8039bba:	f04f 21e0 	moveq.w	r1, #3758153728	; 0xe000e000
 8039bbe:	f8c1 0d04 	streq.w	r0, [r1, #3332]	; 0xd04
 8039bc2:	4770      	bx	lr
 8039bc4:	200024c8 	.word	0x200024c8
 8039bc8:	20012270 	.word	0x20012270
 8039bcc:	2001226c 	.word	0x2001226c
 8039bd0:	2001227c 	.word	0x2001227c
	...

08039be0 <_tx_thread_context_save>:
 8039be0:	4804      	ldr	r0, [pc, #16]	; (8039bf4 <_tx_thread_context_save+0x14>)
 8039be2:	6801      	ldr	r1, [r0, #0]
 8039be4:	f101 0101 	add.w	r1, r1, #1
 8039be8:	6001      	str	r1, [r0, #0]
 8039bea:	f84d ad04 	str.w	sl, [sp, #-4]!
 8039bee:	f04f 0a00 	mov.w	sl, #0
 8039bf2:	4770      	bx	lr
 8039bf4:	200024c8 	.word	0x200024c8

08039bf8 <_tx_thread_create>:
 8039bf8:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8039bfc:	e9dd b50a 	ldrd	fp, r5, [sp, #40]	; 0x28
 8039c00:	4604      	mov	r4, r0
 8039c02:	468a      	mov	sl, r1
 8039c04:	4691      	mov	r9, r2
 8039c06:	21ef      	movs	r1, #239	; 0xef
 8039c08:	462a      	mov	r2, r5
 8039c0a:	4658      	mov	r0, fp
 8039c0c:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 8039c0e:	4698      	mov	r8, r3
 8039c10:	f005 fd20 	bl	803f654 <memset>
 8039c14:	f10b 0303 	add.w	r3, fp, #3
 8039c18:	f023 0703 	bic.w	r7, r3, #3
 8039c1c:	f025 0503 	bic.w	r5, r5, #3
 8039c20:	45bb      	cmp	fp, r7
 8039c22:	f04f 02b4 	mov.w	r2, #180	; 0xb4
 8039c26:	f04f 0100 	mov.w	r1, #0
 8039c2a:	4620      	mov	r0, r4
 8039c2c:	bf0c      	ite	eq
 8039c2e:	3d04      	subeq	r5, #4
 8039c30:	3d08      	subne	r5, #8
 8039c32:	f005 fd0f 	bl	803f654 <memset>
 8039c36:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8039c38:	f8c4 a028 	str.w	sl, [r4, #40]	; 0x28
 8039c3c:	e9c4 3306 	strd	r3, r3, [r4, #24]
 8039c40:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8039c42:	60e7      	str	r7, [r4, #12]
 8039c44:	1e6a      	subs	r2, r5, #1
 8039c46:	443a      	add	r2, r7
 8039c48:	2120      	movs	r1, #32
 8039c4a:	429e      	cmp	r6, r3
 8039c4c:	e9c4 9811 	strd	r9, r8, [r4, #68]	; 0x44
 8039c50:	e9c4 2504 	strd	r2, r5, [r4, #16]
 8039c54:	62e6      	str	r6, [r4, #44]	; 0x2c
 8039c56:	f8c4 6098 	str.w	r6, [r4, #152]	; 0x98
 8039c5a:	f8c4 10a0 	str.w	r1, [r4, #160]	; 0xa0
 8039c5e:	d05a      	beq.n	8039d16 <_tx_thread_create+0x11e>
 8039c60:	2300      	movs	r3, #0
 8039c62:	63e3      	str	r3, [r4, #60]	; 0x3c
 8039c64:	f8c4 309c 	str.w	r3, [r4, #156]	; 0x9c
 8039c68:	2203      	movs	r2, #3
 8039c6a:	4b2d      	ldr	r3, [pc, #180]	; (8039d20 <_tx_thread_create+0x128>)
 8039c6c:	492d      	ldr	r1, [pc, #180]	; (8039d24 <_tx_thread_create+0x12c>)
 8039c6e:	6322      	str	r2, [r4, #48]	; 0x30
 8039c70:	6563      	str	r3, [r4, #84]	; 0x54
 8039c72:	4620      	mov	r0, r4
 8039c74:	65a4      	str	r4, [r4, #88]	; 0x58
 8039c76:	f000 f9e3 	bl	803a040 <_tx_thread_stack_build>
 8039c7a:	68a3      	ldr	r3, [r4, #8]
 8039c7c:	f8c4 30ac 	str.w	r3, [r4, #172]	; 0xac
 8039c80:	2001      	movs	r0, #1
 8039c82:	f000 f8c5 	bl	8039e10 <_tx_thread_interrupt_control>
 8039c86:	4928      	ldr	r1, [pc, #160]	; (8039d28 <_tx_thread_create+0x130>)
 8039c88:	4a28      	ldr	r2, [pc, #160]	; (8039d2c <_tx_thread_create+0x134>)
 8039c8a:	680b      	ldr	r3, [r1, #0]
 8039c8c:	6022      	str	r2, [r4, #0]
 8039c8e:	4a28      	ldr	r2, [pc, #160]	; (8039d30 <_tx_thread_create+0x138>)
 8039c90:	b9c3      	cbnz	r3, 8039cc4 <_tx_thread_create+0xcc>
 8039c92:	e9c4 4422 	strd	r4, r4, [r4, #136]	; 0x88
 8039c96:	6014      	str	r4, [r2, #0]
 8039c98:	4d26      	ldr	r5, [pc, #152]	; (8039d34 <_tx_thread_create+0x13c>)
 8039c9a:	3301      	adds	r3, #1
 8039c9c:	682a      	ldr	r2, [r5, #0]
 8039c9e:	600b      	str	r3, [r1, #0]
 8039ca0:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8039ca2:	3201      	adds	r2, #1
 8039ca4:	2b01      	cmp	r3, #1
 8039ca6:	602a      	str	r2, [r5, #0]
 8039ca8:	d126      	bne.n	8039cf8 <_tx_thread_create+0x100>
 8039caa:	4b23      	ldr	r3, [pc, #140]	; (8039d38 <_tx_thread_create+0x140>)
 8039cac:	681b      	ldr	r3, [r3, #0]
 8039cae:	f1b3 3ff0 	cmp.w	r3, #4042322160	; 0xf0f0f0f0
 8039cb2:	d211      	bcs.n	8039cd8 <_tx_thread_create+0xe0>
 8039cb4:	f000 f8ac 	bl	8039e10 <_tx_thread_interrupt_control>
 8039cb8:	4620      	mov	r0, r4
 8039cba:	f000 fa57 	bl	803a16c <_tx_thread_system_resume>
 8039cbe:	2000      	movs	r0, #0
 8039cc0:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8039cc4:	6812      	ldr	r2, [r2, #0]
 8039cc6:	f8d2 508c 	ldr.w	r5, [r2, #140]	; 0x8c
 8039cca:	f8c2 408c 	str.w	r4, [r2, #140]	; 0x8c
 8039cce:	f8c5 4088 	str.w	r4, [r5, #136]	; 0x88
 8039cd2:	e9c4 2522 	strd	r2, r5, [r4, #136]	; 0x88
 8039cd6:	e7df      	b.n	8039c98 <_tx_thread_create+0xa0>
 8039cd8:	4b18      	ldr	r3, [pc, #96]	; (8039d3c <_tx_thread_create+0x144>)
 8039cda:	681d      	ldr	r5, [r3, #0]
 8039cdc:	2d00      	cmp	r5, #0
 8039cde:	d0e9      	beq.n	8039cb4 <_tx_thread_create+0xbc>
 8039ce0:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
 8039ce2:	6bee      	ldr	r6, [r5, #60]	; 0x3c
 8039ce4:	63eb      	str	r3, [r5, #60]	; 0x3c
 8039ce6:	f000 f893 	bl	8039e10 <_tx_thread_interrupt_control>
 8039cea:	4620      	mov	r0, r4
 8039cec:	f000 fa3e 	bl	803a16c <_tx_thread_system_resume>
 8039cf0:	63ee      	str	r6, [r5, #60]	; 0x3c
 8039cf2:	2000      	movs	r0, #0
 8039cf4:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8039cf8:	f000 f88a 	bl	8039e10 <_tx_thread_interrupt_control>
 8039cfc:	2001      	movs	r0, #1
 8039cfe:	f000 f887 	bl	8039e10 <_tx_thread_interrupt_control>
 8039d02:	682b      	ldr	r3, [r5, #0]
 8039d04:	3b01      	subs	r3, #1
 8039d06:	602b      	str	r3, [r5, #0]
 8039d08:	f000 f882 	bl	8039e10 <_tx_thread_interrupt_control>
 8039d0c:	f000 f9d8 	bl	803a0c0 <_tx_thread_system_preempt_check>
 8039d10:	2000      	movs	r0, #0
 8039d12:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8039d16:	63e6      	str	r6, [r4, #60]	; 0x3c
 8039d18:	f8c4 609c 	str.w	r6, [r4, #156]	; 0x9c
 8039d1c:	e7a4      	b.n	8039c68 <_tx_thread_create+0x70>
 8039d1e:	bf00      	nop
 8039d20:	0803a781 	.word	0x0803a781
 8039d24:	08039efd 	.word	0x08039efd
 8039d28:	20012264 	.word	0x20012264
 8039d2c:	54485244 	.word	0x54485244
 8039d30:	20012268 	.word	0x20012268
 8039d34:	2001227c 	.word	0x2001227c
 8039d38:	200024c8 	.word	0x200024c8
 8039d3c:	20012270 	.word	0x20012270

08039d40 <_tx_thread_delete>:
 8039d40:	b538      	push	{r3, r4, r5, lr}
 8039d42:	4604      	mov	r4, r0
 8039d44:	2001      	movs	r0, #1
 8039d46:	f000 f863 	bl	8039e10 <_tx_thread_interrupt_control>
 8039d4a:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8039d4c:	3b01      	subs	r3, #1
 8039d4e:	2b01      	cmp	r3, #1
 8039d50:	d903      	bls.n	8039d5a <_tx_thread_delete+0x1a>
 8039d52:	f000 f85d 	bl	8039e10 <_tx_thread_interrupt_control>
 8039d56:	2011      	movs	r0, #17
 8039d58:	bd38      	pop	{r3, r4, r5, pc}
 8039d5a:	490d      	ldr	r1, [pc, #52]	; (8039d90 <_tx_thread_delete+0x50>)
 8039d5c:	680b      	ldr	r3, [r1, #0]
 8039d5e:	4602      	mov	r2, r0
 8039d60:	3b01      	subs	r3, #1
 8039d62:	2000      	movs	r0, #0
 8039d64:	6020      	str	r0, [r4, #0]
 8039d66:	600b      	str	r3, [r1, #0]
 8039d68:	b17b      	cbz	r3, 8039d8a <_tx_thread_delete+0x4a>
 8039d6a:	480a      	ldr	r0, [pc, #40]	; (8039d94 <_tx_thread_delete+0x54>)
 8039d6c:	e9d4 3122 	ldrd	r3, r1, [r4, #136]	; 0x88
 8039d70:	6805      	ldr	r5, [r0, #0]
 8039d72:	f8c3 108c 	str.w	r1, [r3, #140]	; 0x8c
 8039d76:	42a5      	cmp	r5, r4
 8039d78:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
 8039d7c:	bf08      	it	eq
 8039d7e:	6003      	streq	r3, [r0, #0]
 8039d80:	4610      	mov	r0, r2
 8039d82:	f000 f845 	bl	8039e10 <_tx_thread_interrupt_control>
 8039d86:	2000      	movs	r0, #0
 8039d88:	bd38      	pop	{r3, r4, r5, pc}
 8039d8a:	4902      	ldr	r1, [pc, #8]	; (8039d94 <_tx_thread_delete+0x54>)
 8039d8c:	600b      	str	r3, [r1, #0]
 8039d8e:	e7f7      	b.n	8039d80 <_tx_thread_delete+0x40>
 8039d90:	20012264 	.word	0x20012264
 8039d94:	20012268 	.word	0x20012268

08039d98 <_tx_thread_initialize>:
 8039d98:	b538      	push	{r3, r4, r5, lr}
 8039d9a:	2400      	movs	r4, #0
 8039d9c:	4b11      	ldr	r3, [pc, #68]	; (8039de4 <_tx_thread_initialize+0x4c>)
 8039d9e:	4d12      	ldr	r5, [pc, #72]	; (8039de8 <_tx_thread_initialize+0x50>)
 8039da0:	4812      	ldr	r0, [pc, #72]	; (8039dec <_tx_thread_initialize+0x54>)
 8039da2:	602c      	str	r4, [r5, #0]
 8039da4:	4621      	mov	r1, r4
 8039da6:	2204      	movs	r2, #4
 8039da8:	601c      	str	r4, [r3, #0]
 8039daa:	f005 fc53 	bl	803f654 <memset>
 8039dae:	4b10      	ldr	r3, [pc, #64]	; (8039df0 <_tx_thread_initialize+0x58>)
 8039db0:	4810      	ldr	r0, [pc, #64]	; (8039df4 <_tx_thread_initialize+0x5c>)
 8039db2:	4621      	mov	r1, r4
 8039db4:	2520      	movs	r5, #32
 8039db6:	2280      	movs	r2, #128	; 0x80
 8039db8:	601d      	str	r5, [r3, #0]
 8039dba:	f005 fc4b 	bl	803f654 <memset>
 8039dbe:	4a0e      	ldr	r2, [pc, #56]	; (8039df8 <_tx_thread_initialize+0x60>)
 8039dc0:	480e      	ldr	r0, [pc, #56]	; (8039dfc <_tx_thread_initialize+0x64>)
 8039dc2:	6813      	ldr	r3, [r2, #0]
 8039dc4:	490e      	ldr	r1, [pc, #56]	; (8039e00 <_tx_thread_initialize+0x68>)
 8039dc6:	6004      	str	r4, [r0, #0]
 8039dc8:	600c      	str	r4, [r1, #0]
 8039dca:	4d0e      	ldr	r5, [pc, #56]	; (8039e04 <_tx_thread_initialize+0x6c>)
 8039dcc:	480e      	ldr	r0, [pc, #56]	; (8039e08 <_tx_thread_initialize+0x70>)
 8039dce:	490f      	ldr	r1, [pc, #60]	; (8039e0c <_tx_thread_initialize+0x74>)
 8039dd0:	602c      	str	r4, [r5, #0]
 8039dd2:	f043 73cd 	orr.w	r3, r3, #26869760	; 0x19a0000
 8039dd6:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 8039dda:	6004      	str	r4, [r0, #0]
 8039ddc:	600c      	str	r4, [r1, #0]
 8039dde:	6013      	str	r3, [r2, #0]
 8039de0:	bd38      	pop	{r3, r4, r5, pc}
 8039de2:	bf00      	nop
 8039de4:	20012270 	.word	0x20012270
 8039de8:	2001226c 	.word	0x2001226c
 8039dec:	20012300 	.word	0x20012300
 8039df0:	20012274 	.word	0x20012274
 8039df4:	20012280 	.word	0x20012280
 8039df8:	2001225c 	.word	0x2001225c
 8039dfc:	20012268 	.word	0x20012268
 8039e00:	20012264 	.word	0x20012264
 8039e04:	2001227c 	.word	0x2001227c
 8039e08:	20012278 	.word	0x20012278
 8039e0c:	20012260 	.word	0x20012260

08039e10 <_tx_thread_interrupt_control>:
 8039e10:	f3ef 8110 	mrs	r1, PRIMASK
 8039e14:	f380 8810 	msr	PRIMASK, r0
 8039e18:	4608      	mov	r0, r1
 8039e1a:	4770      	bx	lr
 8039e1c:	0000      	movs	r0, r0
	...

08039e20 <_tx_thread_schedule>:
 8039e20:	b662      	cpsie	i
 8039e22:	df00      	svc	0
 8039e24:	beef      	bkpt	0x00ef
 8039e26:	4770      	bx	lr

08039e28 <__tx_PendSVHandler>:
 8039e28:	4831      	ldr	r0, [pc, #196]	; (8039ef0 <__tx_no_thread_to_disable+0x2>)
 8039e2a:	6801      	ldr	r1, [r0, #0]
 8039e2c:	4a31      	ldr	r2, [pc, #196]	; (8039ef4 <__tx_no_thread_to_disable+0x6>)
 8039e2e:	b1c9      	cbz	r1, 8039e64 <__tx_ts_new>
 8039e30:	f3ef 8c09 	mrs	ip, PSP
 8039e34:	e92c 0ff0 	stmdb	ip!, {r4, r5, r6, r7, r8, r9, sl, fp}
 8039e38:	f8d1 4090 	ldr.w	r4, [r1, #144]	; 0x90
 8039e3c:	2c01      	cmp	r4, #1
 8039e3e:	d105      	bne.n	8039e4c <__tx_dont_save_fpu>
 8039e40:	eef1 4a10 	vmrs	r4, fpscr
 8039e44:	f84c 4d04 	str.w	r4, [ip, #-4]!
 8039e48:	ed2c 0a20 	vstmdb	ip!, {s0-s31}

08039e4c <__tx_dont_save_fpu>:
 8039e4c:	f8c1 c008 	str.w	ip, [r1, #8]
 8039e50:	f8df c0a4 	ldr.w	ip, [pc, #164]	; 8039ef8 <__tx_no_thread_to_disable+0xa>
 8039e54:	f8dc 5000 	ldr.w	r5, [ip]
 8039e58:	b125      	cbz	r5, 8039e64 <__tx_ts_new>
 8039e5a:	618d      	str	r5, [r1, #24]
 8039e5c:	f04f 0500 	mov.w	r5, #0
 8039e60:	f8cc 5000 	str.w	r5, [ip]

08039e64 <__tx_ts_new>:
 8039e64:	b672      	cpsid	i
 8039e66:	6813      	ldr	r3, [r2, #0]
 8039e68:	b1eb      	cbz	r3, 8039ea6 <__tx_ts_wait>
 8039e6a:	6003      	str	r3, [r0, #0]
 8039e6c:	b662      	cpsie	i

08039e6e <__tx_ts_restore>:
 8039e6e:	685c      	ldr	r4, [r3, #4]
 8039e70:	f104 0401 	add.w	r4, r4, #1
 8039e74:	605c      	str	r4, [r3, #4]
 8039e76:	f8df c080 	ldr.w	ip, [pc, #128]	; 8039ef8 <__tx_no_thread_to_disable+0xa>
 8039e7a:	699d      	ldr	r5, [r3, #24]
 8039e7c:	f8cc 5000 	str.w	r5, [ip]
 8039e80:	f8d3 c008 	ldr.w	ip, [r3, #8]
 8039e84:	f8d3 4090 	ldr.w	r4, [r3, #144]	; 0x90
 8039e88:	2c01      	cmp	r4, #1
 8039e8a:	d105      	bne.n	8039e98 <__tx_dont_restore_fpu>
 8039e8c:	ecbc 0a20 	vldmia	ip!, {s0-s31}
 8039e90:	f85c 4b04 	ldr.w	r4, [ip], #4
 8039e94:	eee1 4a10 	vmsr	fpscr, r4

08039e98 <__tx_dont_restore_fpu>:
 8039e98:	e8bc 0ff0 	ldmia.w	ip!, {r4, r5, r6, r7, r8, r9, sl, fp}
 8039e9c:	f38c 8809 	msr	PSP, ip
 8039ea0:	f06f 0e02 	mvn.w	lr, #2
 8039ea4:	4770      	bx	lr

08039ea6 <__tx_ts_wait>:
 8039ea6:	b672      	cpsid	i
 8039ea8:	6813      	ldr	r3, [r2, #0]
 8039eaa:	6003      	str	r3, [r0, #0]
 8039eac:	b91b      	cbnz	r3, 8039eb6 <__tx_ts_ready>
 8039eae:	b662      	cpsie	i

08039eb0 <__tx_ts_ISB>:
 8039eb0:	f3bf 8f6f 	isb	sy
 8039eb4:	e7f7      	b.n	8039ea6 <__tx_ts_wait>

08039eb6 <__tx_ts_ready>:
 8039eb6:	f04f 6400 	mov.w	r4, #134217728	; 0x8000000
 8039eba:	f04f 25e0 	mov.w	r5, #3758153728	; 0xe000e000
 8039ebe:	f8c5 4d04 	str.w	r4, [r5, #3332]	; 0xd04
 8039ec2:	b662      	cpsie	i
 8039ec4:	e7d3      	b.n	8039e6e <__tx_ts_restore>

08039ec6 <tx_thread_fpu_enable>:
 8039ec6:	f3ef 8210 	mrs	r2, PRIMASK
 8039eca:	b672      	cpsid	i
 8039ecc:	4808      	ldr	r0, [pc, #32]	; (8039ef0 <__tx_no_thread_to_disable+0x2>)
 8039ece:	6801      	ldr	r1, [r0, #0]
 8039ed0:	b119      	cbz	r1, 8039eda <__tx_no_thread_to_enable>
 8039ed2:	f04f 0001 	mov.w	r0, #1
 8039ed6:	f8c1 0090 	str.w	r0, [r1, #144]	; 0x90

08039eda <__tx_no_thread_to_enable>:
 8039eda:	f382 8810 	msr	PRIMASK, r2
 8039ede:	4770      	bx	lr

08039ee0 <tx_thread_fpu_disable>:
 8039ee0:	4803      	ldr	r0, [pc, #12]	; (8039ef0 <__tx_no_thread_to_disable+0x2>)
 8039ee2:	6801      	ldr	r1, [r0, #0]
 8039ee4:	b119      	cbz	r1, 8039eee <__tx_no_thread_to_disable>
 8039ee6:	f04f 0000 	mov.w	r0, #0
 8039eea:	f8c1 0090 	str.w	r0, [r1, #144]	; 0x90

08039eee <__tx_no_thread_to_disable>:
 8039eee:	4770      	bx	lr
 8039ef0:	2001226c 	.word	0x2001226c
 8039ef4:	20012270 	.word	0x20012270
 8039ef8:	200123b0 	.word	0x200123b0

08039efc <_tx_thread_shell_entry>:
 8039efc:	b538      	push	{r3, r4, r5, lr}
 8039efe:	4b11      	ldr	r3, [pc, #68]	; (8039f44 <_tx_thread_shell_entry+0x48>)
 8039f00:	681c      	ldr	r4, [r3, #0]
 8039f02:	4620      	mov	r0, r4
 8039f04:	f7f7 ff88 	bl	8031e18 <TX_USER_thread_started_handler>
 8039f08:	e9d4 3011 	ldrd	r3, r0, [r4, #68]	; 0x44
 8039f0c:	4798      	blx	r3
 8039f0e:	4b0e      	ldr	r3, [pc, #56]	; (8039f48 <_tx_thread_shell_entry+0x4c>)
 8039f10:	681b      	ldr	r3, [r3, #0]
 8039f12:	b10b      	cbz	r3, 8039f18 <_tx_thread_shell_entry+0x1c>
 8039f14:	4620      	mov	r0, r4
 8039f16:	4798      	blx	r3
 8039f18:	2001      	movs	r0, #1
 8039f1a:	f7ff ff79 	bl	8039e10 <_tx_thread_interrupt_control>
 8039f1e:	4a0b      	ldr	r2, [pc, #44]	; (8039f4c <_tx_thread_shell_entry+0x50>)
 8039f20:	6813      	ldr	r3, [r2, #0]
 8039f22:	2101      	movs	r1, #1
 8039f24:	2500      	movs	r5, #0
 8039f26:	440b      	add	r3, r1
 8039f28:	6321      	str	r1, [r4, #48]	; 0x30
 8039f2a:	63a1      	str	r1, [r4, #56]	; 0x38
 8039f2c:	64e5      	str	r5, [r4, #76]	; 0x4c
 8039f2e:	6013      	str	r3, [r2, #0]
 8039f30:	f7ff ff6e 	bl	8039e10 <_tx_thread_interrupt_control>
 8039f34:	4620      	mov	r0, r4
 8039f36:	f7f7 ff71 	bl	8031e1c <TX_USER_thread_completed_handler>
 8039f3a:	4620      	mov	r0, r4
 8039f3c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8039f40:	f000 ba18 	b.w	803a374 <_tx_thread_system_suspend>
 8039f44:	2001226c 	.word	0x2001226c
 8039f48:	20012278 	.word	0x20012278
 8039f4c:	2001227c 	.word	0x2001227c

08039f50 <_tx_thread_sleep>:
 8039f50:	b570      	push	{r4, r5, r6, lr}
 8039f52:	4604      	mov	r4, r0
 8039f54:	2001      	movs	r0, #1
 8039f56:	f7ff ff5b 	bl	8039e10 <_tx_thread_interrupt_control>
 8039f5a:	4b12      	ldr	r3, [pc, #72]	; (8039fa4 <_tx_thread_sleep+0x54>)
 8039f5c:	681d      	ldr	r5, [r3, #0]
 8039f5e:	b1e5      	cbz	r5, 8039f9a <_tx_thread_sleep+0x4a>
 8039f60:	4b11      	ldr	r3, [pc, #68]	; (8039fa8 <_tx_thread_sleep+0x58>)
 8039f62:	681b      	ldr	r3, [r3, #0]
 8039f64:	b9cb      	cbnz	r3, 8039f9a <_tx_thread_sleep+0x4a>
 8039f66:	b1a4      	cbz	r4, 8039f92 <_tx_thread_sleep+0x42>
 8039f68:	4b10      	ldr	r3, [pc, #64]	; (8039fac <_tx_thread_sleep+0x5c>)
 8039f6a:	681a      	ldr	r2, [r3, #0]
 8039f6c:	b9aa      	cbnz	r2, 8039f9a <_tx_thread_sleep+0x4a>
 8039f6e:	6819      	ldr	r1, [r3, #0]
 8039f70:	64ec      	str	r4, [r5, #76]	; 0x4c
 8039f72:	2604      	movs	r6, #4
 8039f74:	2401      	movs	r4, #1
 8039f76:	4421      	add	r1, r4
 8039f78:	f8c5 2084 	str.w	r2, [r5, #132]	; 0x84
 8039f7c:	632e      	str	r6, [r5, #48]	; 0x30
 8039f7e:	63ac      	str	r4, [r5, #56]	; 0x38
 8039f80:	6019      	str	r1, [r3, #0]
 8039f82:	f7ff ff45 	bl	8039e10 <_tx_thread_interrupt_control>
 8039f86:	4628      	mov	r0, r5
 8039f88:	f000 f9f4 	bl	803a374 <_tx_thread_system_suspend>
 8039f8c:	f8d5 0084 	ldr.w	r0, [r5, #132]	; 0x84
 8039f90:	bd70      	pop	{r4, r5, r6, pc}
 8039f92:	f7ff ff3d 	bl	8039e10 <_tx_thread_interrupt_control>
 8039f96:	4620      	mov	r0, r4
 8039f98:	bd70      	pop	{r4, r5, r6, pc}
 8039f9a:	f7ff ff39 	bl	8039e10 <_tx_thread_interrupt_control>
 8039f9e:	2013      	movs	r0, #19
 8039fa0:	bd70      	pop	{r4, r5, r6, pc}
 8039fa2:	bf00      	nop
 8039fa4:	2001226c 	.word	0x2001226c
 8039fa8:	200024c8 	.word	0x200024c8
 8039fac:	2001227c 	.word	0x2001227c

08039fb0 <_tx_thread_stack_analyze>:
 8039fb0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8039fb2:	4604      	mov	r4, r0
 8039fb4:	2001      	movs	r0, #1
 8039fb6:	f7ff ff2b 	bl	8039e10 <_tx_thread_interrupt_control>
 8039fba:	4603      	mov	r3, r0
 8039fbc:	b11c      	cbz	r4, 8039fc6 <_tx_thread_stack_analyze+0x16>
 8039fbe:	4a1f      	ldr	r2, [pc, #124]	; (803a03c <_tx_thread_stack_analyze+0x8c>)
 8039fc0:	6821      	ldr	r1, [r4, #0]
 8039fc2:	4291      	cmp	r1, r2
 8039fc4:	d004      	beq.n	8039fd0 <_tx_thread_stack_analyze+0x20>
 8039fc6:	4618      	mov	r0, r3
 8039fc8:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 8039fcc:	f7ff bf20 	b.w	8039e10 <_tx_thread_interrupt_control>
 8039fd0:	68e5      	ldr	r5, [r4, #12]
 8039fd2:	2d00      	cmp	r5, #0
 8039fd4:	d0f7      	beq.n	8039fc6 <_tx_thread_stack_analyze+0x16>
 8039fd6:	f8d4 70ac 	ldr.w	r7, [r4, #172]	; 0xac
 8039fda:	2f00      	cmp	r7, #0
 8039fdc:	d0f3      	beq.n	8039fc6 <_tx_thread_stack_analyze+0x16>
 8039fde:	f7ff ff17 	bl	8039e10 <_tx_thread_interrupt_control>
 8039fe2:	1b7b      	subs	r3, r7, r5
 8039fe4:	109b      	asrs	r3, r3, #2
 8039fe6:	085a      	lsrs	r2, r3, #1
 8039fe8:	eb05 0682 	add.w	r6, r5, r2, lsl #2
 8039fec:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 8039ff0:	f1b2 3fef 	cmp.w	r2, #4025479151	; 0xefefefef
 8039ff4:	bf14      	ite	ne
 8039ff6:	4637      	movne	r7, r6
 8039ff8:	4635      	moveq	r5, r6
 8039ffa:	2b03      	cmp	r3, #3
 8039ffc:	d8f1      	bhi.n	8039fe2 <_tx_thread_stack_analyze+0x32>
 8039ffe:	f1b2 3fef 	cmp.w	r2, #4025479151	; 0xefefefef
 803a002:	d104      	bne.n	803a00e <_tx_thread_stack_analyze+0x5e>
 803a004:	f856 3f04 	ldr.w	r3, [r6, #4]!
 803a008:	f1b3 3fef 	cmp.w	r3, #4025479151	; 0xefefefef
 803a00c:	d0fa      	beq.n	803a004 <_tx_thread_stack_analyze+0x54>
 803a00e:	2001      	movs	r0, #1
 803a010:	f7ff fefe 	bl	8039e10 <_tx_thread_interrupt_control>
 803a014:	4a09      	ldr	r2, [pc, #36]	; (803a03c <_tx_thread_stack_analyze+0x8c>)
 803a016:	6821      	ldr	r1, [r4, #0]
 803a018:	4291      	cmp	r1, r2
 803a01a:	4603      	mov	r3, r0
 803a01c:	d1d3      	bne.n	8039fc6 <_tx_thread_stack_analyze+0x16>
 803a01e:	68e2      	ldr	r2, [r4, #12]
 803a020:	42b2      	cmp	r2, r6
 803a022:	d2d0      	bcs.n	8039fc6 <_tx_thread_stack_analyze+0x16>
 803a024:	f8d4 20ac 	ldr.w	r2, [r4, #172]	; 0xac
 803a028:	42b2      	cmp	r2, r6
 803a02a:	d9cc      	bls.n	8039fc6 <_tx_thread_stack_analyze+0x16>
 803a02c:	6832      	ldr	r2, [r6, #0]
 803a02e:	f1b2 3fef 	cmp.w	r2, #4025479151	; 0xefefefef
 803a032:	bf18      	it	ne
 803a034:	f8c4 60ac 	strne.w	r6, [r4, #172]	; 0xac
 803a038:	e7c5      	b.n	8039fc6 <_tx_thread_stack_analyze+0x16>
 803a03a:	bf00      	nop
 803a03c:	54485244 	.word	0x54485244

0803a040 <_tx_thread_stack_build>:
 803a040:	6902      	ldr	r2, [r0, #16]
 803a042:	f1a2 0240 	sub.w	r2, r2, #64	; 0x40
 803a046:	f022 0207 	bic.w	r2, r2, #7
 803a04a:	f04f 0300 	mov.w	r3, #0
 803a04e:	6013      	str	r3, [r2, #0]
 803a050:	6053      	str	r3, [r2, #4]
 803a052:	6093      	str	r3, [r2, #8]
 803a054:	60d3      	str	r3, [r2, #12]
 803a056:	6113      	str	r3, [r2, #16]
 803a058:	6153      	str	r3, [r2, #20]
 803a05a:	68c3      	ldr	r3, [r0, #12]
 803a05c:	6193      	str	r3, [r2, #24]
 803a05e:	f04f 0300 	mov.w	r3, #0
 803a062:	61d3      	str	r3, [r2, #28]
 803a064:	6213      	str	r3, [r2, #32]
 803a066:	6253      	str	r3, [r2, #36]	; 0x24
 803a068:	6293      	str	r3, [r2, #40]	; 0x28
 803a06a:	62d3      	str	r3, [r2, #44]	; 0x2c
 803a06c:	6313      	str	r3, [r2, #48]	; 0x30
 803a06e:	f04f 33ff 	mov.w	r3, #4294967295
 803a072:	6353      	str	r3, [r2, #52]	; 0x34
 803a074:	6391      	str	r1, [r2, #56]	; 0x38
 803a076:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
 803a07a:	63d3      	str	r3, [r2, #60]	; 0x3c
 803a07c:	6082      	str	r2, [r0, #8]
 803a07e:	4770      	bx	lr

0803a080 <_tx_thread_stack_error_handler>:
 803a080:	b538      	push	{r3, r4, r5, lr}
 803a082:	4605      	mov	r5, r0
 803a084:	2001      	movs	r0, #1
 803a086:	f7ff fec3 	bl	8039e10 <_tx_thread_interrupt_control>
 803a08a:	4b05      	ldr	r3, [pc, #20]	; (803a0a0 <_tx_thread_stack_error_handler+0x20>)
 803a08c:	681b      	ldr	r3, [r3, #0]
 803a08e:	4604      	mov	r4, r0
 803a090:	b10b      	cbz	r3, 803a096 <_tx_thread_stack_error_handler+0x16>
 803a092:	4628      	mov	r0, r5
 803a094:	4798      	blx	r3
 803a096:	4620      	mov	r0, r4
 803a098:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 803a09c:	f7ff beb8 	b.w	8039e10 <_tx_thread_interrupt_control>
 803a0a0:	20012260 	.word	0x20012260

0803a0a4 <_tx_thread_stack_error_notify>:
 803a0a4:	b510      	push	{r4, lr}
 803a0a6:	4604      	mov	r4, r0
 803a0a8:	2001      	movs	r0, #1
 803a0aa:	f7ff feb1 	bl	8039e10 <_tx_thread_interrupt_control>
 803a0ae:	4b03      	ldr	r3, [pc, #12]	; (803a0bc <_tx_thread_stack_error_notify+0x18>)
 803a0b0:	601c      	str	r4, [r3, #0]
 803a0b2:	f7ff fead 	bl	8039e10 <_tx_thread_interrupt_control>
 803a0b6:	2000      	movs	r0, #0
 803a0b8:	bd10      	pop	{r4, pc}
 803a0ba:	bf00      	nop
 803a0bc:	20012260 	.word	0x20012260

0803a0c0 <_tx_thread_system_preempt_check>:
 803a0c0:	4b25      	ldr	r3, [pc, #148]	; (803a158 <_tx_thread_system_preempt_check+0x98>)
 803a0c2:	4a26      	ldr	r2, [pc, #152]	; (803a15c <_tx_thread_system_preempt_check+0x9c>)
 803a0c4:	681b      	ldr	r3, [r3, #0]
 803a0c6:	6812      	ldr	r2, [r2, #0]
 803a0c8:	4313      	orrs	r3, r2
 803a0ca:	d000      	beq.n	803a0ce <_tx_thread_system_preempt_check+0xe>
 803a0cc:	4770      	bx	lr
 803a0ce:	4a24      	ldr	r2, [pc, #144]	; (803a160 <_tx_thread_system_preempt_check+0xa0>)
 803a0d0:	4b24      	ldr	r3, [pc, #144]	; (803a164 <_tx_thread_system_preempt_check+0xa4>)
 803a0d2:	b510      	push	{r4, lr}
 803a0d4:	681b      	ldr	r3, [r3, #0]
 803a0d6:	6814      	ldr	r4, [r2, #0]
 803a0d8:	42a3      	cmp	r3, r4
 803a0da:	d032      	beq.n	803a142 <_tx_thread_system_preempt_check+0x82>
 803a0dc:	2001      	movs	r0, #1
 803a0de:	f7ff fe97 	bl	8039e10 <_tx_thread_interrupt_control>
 803a0e2:	b344      	cbz	r4, 803a136 <_tx_thread_system_preempt_check+0x76>
 803a0e4:	4b20      	ldr	r3, [pc, #128]	; (803a168 <_tx_thread_system_preempt_check+0xa8>)
 803a0e6:	6822      	ldr	r2, [r4, #0]
 803a0e8:	429a      	cmp	r2, r3
 803a0ea:	d124      	bne.n	803a136 <_tx_thread_system_preempt_check+0x76>
 803a0ec:	68a3      	ldr	r3, [r4, #8]
 803a0ee:	f8d4 20ac 	ldr.w	r2, [r4, #172]	; 0xac
 803a0f2:	4293      	cmp	r3, r2
 803a0f4:	68e2      	ldr	r2, [r4, #12]
 803a0f6:	bf38      	it	cc
 803a0f8:	f8c4 30ac 	strcc.w	r3, [r4, #172]	; 0xac
 803a0fc:	6813      	ldr	r3, [r2, #0]
 803a0fe:	f1b3 3fef 	cmp.w	r3, #4025479151	; 0xefefefef
 803a102:	d109      	bne.n	803a118 <_tx_thread_system_preempt_check+0x58>
 803a104:	6923      	ldr	r3, [r4, #16]
 803a106:	f8d3 3001 	ldr.w	r3, [r3, #1]
 803a10a:	f1b3 3fef 	cmp.w	r3, #4025479151	; 0xefefefef
 803a10e:	d103      	bne.n	803a118 <_tx_thread_system_preempt_check+0x58>
 803a110:	f8d4 30ac 	ldr.w	r3, [r4, #172]	; 0xac
 803a114:	429a      	cmp	r2, r3
 803a116:	d909      	bls.n	803a12c <_tx_thread_system_preempt_check+0x6c>
 803a118:	f7ff fe7a 	bl	8039e10 <_tx_thread_interrupt_control>
 803a11c:	4620      	mov	r0, r4
 803a11e:	f7ff ffaf 	bl	803a080 <_tx_thread_stack_error_handler>
 803a122:	2001      	movs	r0, #1
 803a124:	f7ff fe74 	bl	8039e10 <_tx_thread_interrupt_control>
 803a128:	f8d4 30ac 	ldr.w	r3, [r4, #172]	; 0xac
 803a12c:	f853 3c04 	ldr.w	r3, [r3, #-4]
 803a130:	f1b3 3fef 	cmp.w	r3, #4025479151	; 0xefefefef
 803a134:	d106      	bne.n	803a144 <_tx_thread_system_preempt_check+0x84>
 803a136:	f7ff fe6b 	bl	8039e10 <_tx_thread_interrupt_control>
 803a13a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 803a13e:	f000 b90f 	b.w	803a360 <_tx_thread_system_return>
 803a142:	bd10      	pop	{r4, pc}
 803a144:	f7ff fe64 	bl	8039e10 <_tx_thread_interrupt_control>
 803a148:	4620      	mov	r0, r4
 803a14a:	f7ff ff31 	bl	8039fb0 <_tx_thread_stack_analyze>
 803a14e:	2001      	movs	r0, #1
 803a150:	f7ff fe5e 	bl	8039e10 <_tx_thread_interrupt_control>
 803a154:	e7ef      	b.n	803a136 <_tx_thread_system_preempt_check+0x76>
 803a156:	bf00      	nop
 803a158:	2001227c 	.word	0x2001227c
 803a15c:	200024c8 	.word	0x200024c8
 803a160:	20012270 	.word	0x20012270
 803a164:	2001226c 	.word	0x2001226c
 803a168:	54485244 	.word	0x54485244

0803a16c <_tx_thread_system_resume>:
 803a16c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 803a170:	4604      	mov	r4, r0
 803a172:	2001      	movs	r0, #1
 803a174:	f7ff fe4c 	bl	8039e10 <_tx_thread_interrupt_control>
 803a178:	b11c      	cbz	r4, 803a182 <_tx_thread_system_resume+0x16>
 803a17a:	4b70      	ldr	r3, [pc, #448]	; (803a33c <_tx_thread_system_resume+0x1d0>)
 803a17c:	6822      	ldr	r2, [r4, #0]
 803a17e:	429a      	cmp	r2, r3
 803a180:	d049      	beq.n	803a216 <_tx_thread_system_resume+0xaa>
 803a182:	f7ff fe45 	bl	8039e10 <_tx_thread_interrupt_control>
 803a186:	2001      	movs	r0, #1
 803a188:	f7ff fe42 	bl	8039e10 <_tx_thread_interrupt_control>
 803a18c:	6e63      	ldr	r3, [r4, #100]	; 0x64
 803a18e:	4606      	mov	r6, r0
 803a190:	2b00      	cmp	r3, #0
 803a192:	d06f      	beq.n	803a274 <_tx_thread_system_resume+0x108>
 803a194:	f104 004c 	add.w	r0, r4, #76	; 0x4c
 803a198:	f000 fca0 	bl	803aadc <_tx_timer_system_deactivate>
 803a19c:	4d68      	ldr	r5, [pc, #416]	; (803a340 <_tx_thread_system_resume+0x1d4>)
 803a19e:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 803a1a0:	682b      	ldr	r3, [r5, #0]
 803a1a2:	3b01      	subs	r3, #1
 803a1a4:	602b      	str	r3, [r5, #0]
 803a1a6:	6b23      	ldr	r3, [r4, #48]	; 0x30
 803a1a8:	b9d2      	cbnz	r2, 803a1e0 <_tx_thread_system_resume+0x74>
 803a1aa:	bb1b      	cbnz	r3, 803a1f4 <_tx_thread_system_resume+0x88>
 803a1ac:	4f65      	ldr	r7, [pc, #404]	; (803a344 <_tx_thread_system_resume+0x1d8>)
 803a1ae:	4b66      	ldr	r3, [pc, #408]	; (803a348 <_tx_thread_system_resume+0x1dc>)
 803a1b0:	4630      	mov	r0, r6
 803a1b2:	681e      	ldr	r6, [r3, #0]
 803a1b4:	f7ff fe2c 	bl	8039e10 <_tx_thread_interrupt_control>
 803a1b8:	683c      	ldr	r4, [r7, #0]
 803a1ba:	42b4      	cmp	r4, r6
 803a1bc:	d00e      	beq.n	803a1dc <_tx_thread_system_resume+0x70>
 803a1be:	2001      	movs	r0, #1
 803a1c0:	f7ff fe26 	bl	8039e10 <_tx_thread_interrupt_control>
 803a1c4:	b11c      	cbz	r4, 803a1ce <_tx_thread_system_resume+0x62>
 803a1c6:	4b5d      	ldr	r3, [pc, #372]	; (803a33c <_tx_thread_system_resume+0x1d0>)
 803a1c8:	6822      	ldr	r2, [r4, #0]
 803a1ca:	429a      	cmp	r2, r3
 803a1cc:	d058      	beq.n	803a280 <_tx_thread_system_resume+0x114>
 803a1ce:	f7ff fe1f 	bl	8039e10 <_tx_thread_interrupt_control>
 803a1d2:	4a5e      	ldr	r2, [pc, #376]	; (803a34c <_tx_thread_system_resume+0x1e0>)
 803a1d4:	682b      	ldr	r3, [r5, #0]
 803a1d6:	6812      	ldr	r2, [r2, #0]
 803a1d8:	4313      	orrs	r3, r2
 803a1da:	d04d      	beq.n	803a278 <_tx_thread_system_resume+0x10c>
 803a1dc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 803a1e0:	3b01      	subs	r3, #1
 803a1e2:	2b01      	cmp	r3, #1
 803a1e4:	d9e2      	bls.n	803a1ac <_tx_thread_system_resume+0x40>
 803a1e6:	6b63      	ldr	r3, [r4, #52]	; 0x34
 803a1e8:	2b00      	cmp	r3, #0
 803a1ea:	d13e      	bne.n	803a26a <_tx_thread_system_resume+0xfe>
 803a1ec:	4f55      	ldr	r7, [pc, #340]	; (803a344 <_tx_thread_system_resume+0x1d8>)
 803a1ee:	63a3      	str	r3, [r4, #56]	; 0x38
 803a1f0:	6323      	str	r3, [r4, #48]	; 0x30
 803a1f2:	e7dc      	b.n	803a1ae <_tx_thread_system_resume+0x42>
 803a1f4:	6b63      	ldr	r3, [r4, #52]	; 0x34
 803a1f6:	2b00      	cmp	r3, #0
 803a1f8:	d137      	bne.n	803a26a <_tx_thread_system_resume+0xfe>
 803a1fa:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 803a1fc:	4954      	ldr	r1, [pc, #336]	; (803a350 <_tx_thread_system_resume+0x1e4>)
 803a1fe:	6323      	str	r3, [r4, #48]	; 0x30
 803a200:	f851 3022 	ldr.w	r3, [r1, r2, lsl #2]
 803a204:	2b00      	cmp	r3, #0
 803a206:	d06f      	beq.n	803a2e8 <_tx_thread_system_resume+0x17c>
 803a208:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 803a20a:	4f4e      	ldr	r7, [pc, #312]	; (803a344 <_tx_thread_system_resume+0x1d8>)
 803a20c:	6214      	str	r4, [r2, #32]
 803a20e:	625c      	str	r4, [r3, #36]	; 0x24
 803a210:	e9c4 3208 	strd	r3, r2, [r4, #32]
 803a214:	e7cb      	b.n	803a1ae <_tx_thread_system_resume+0x42>
 803a216:	68a3      	ldr	r3, [r4, #8]
 803a218:	f8d4 20ac 	ldr.w	r2, [r4, #172]	; 0xac
 803a21c:	4293      	cmp	r3, r2
 803a21e:	68e2      	ldr	r2, [r4, #12]
 803a220:	bf38      	it	cc
 803a222:	f8c4 30ac 	strcc.w	r3, [r4, #172]	; 0xac
 803a226:	6813      	ldr	r3, [r2, #0]
 803a228:	f1b3 3fef 	cmp.w	r3, #4025479151	; 0xefefefef
 803a22c:	d105      	bne.n	803a23a <_tx_thread_system_resume+0xce>
 803a22e:	6923      	ldr	r3, [r4, #16]
 803a230:	f8d3 3001 	ldr.w	r3, [r3, #1]
 803a234:	f1b3 3fef 	cmp.w	r3, #4025479151	; 0xefefefef
 803a238:	d04c      	beq.n	803a2d4 <_tx_thread_system_resume+0x168>
 803a23a:	f7ff fde9 	bl	8039e10 <_tx_thread_interrupt_control>
 803a23e:	4620      	mov	r0, r4
 803a240:	f7ff ff1e 	bl	803a080 <_tx_thread_stack_error_handler>
 803a244:	2001      	movs	r0, #1
 803a246:	f7ff fde3 	bl	8039e10 <_tx_thread_interrupt_control>
 803a24a:	f8d4 30ac 	ldr.w	r3, [r4, #172]	; 0xac
 803a24e:	f853 3c04 	ldr.w	r3, [r3, #-4]
 803a252:	f1b3 3fef 	cmp.w	r3, #4025479151	; 0xefefefef
 803a256:	d094      	beq.n	803a182 <_tx_thread_system_resume+0x16>
 803a258:	f7ff fdda 	bl	8039e10 <_tx_thread_interrupt_control>
 803a25c:	4620      	mov	r0, r4
 803a25e:	f7ff fea7 	bl	8039fb0 <_tx_thread_stack_analyze>
 803a262:	2001      	movs	r0, #1
 803a264:	f7ff fdd4 	bl	8039e10 <_tx_thread_interrupt_control>
 803a268:	e78b      	b.n	803a182 <_tx_thread_system_resume+0x16>
 803a26a:	2303      	movs	r3, #3
 803a26c:	2200      	movs	r2, #0
 803a26e:	e9c4 320c 	strd	r3, r2, [r4, #48]	; 0x30
 803a272:	e79b      	b.n	803a1ac <_tx_thread_system_resume+0x40>
 803a274:	64e3      	str	r3, [r4, #76]	; 0x4c
 803a276:	e791      	b.n	803a19c <_tx_thread_system_resume+0x30>
 803a278:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 803a27c:	f000 b870 	b.w	803a360 <_tx_thread_system_return>
 803a280:	68a3      	ldr	r3, [r4, #8]
 803a282:	f8d4 20ac 	ldr.w	r2, [r4, #172]	; 0xac
 803a286:	4293      	cmp	r3, r2
 803a288:	68e2      	ldr	r2, [r4, #12]
 803a28a:	bf38      	it	cc
 803a28c:	f8c4 30ac 	strcc.w	r3, [r4, #172]	; 0xac
 803a290:	6813      	ldr	r3, [r2, #0]
 803a292:	f1b3 3fef 	cmp.w	r3, #4025479151	; 0xefefefef
 803a296:	d105      	bne.n	803a2a4 <_tx_thread_system_resume+0x138>
 803a298:	6923      	ldr	r3, [r4, #16]
 803a29a:	f8d3 3001 	ldr.w	r3, [r3, #1]
 803a29e:	f1b3 3fef 	cmp.w	r3, #4025479151	; 0xefefefef
 803a2a2:	d01c      	beq.n	803a2de <_tx_thread_system_resume+0x172>
 803a2a4:	f7ff fdb4 	bl	8039e10 <_tx_thread_interrupt_control>
 803a2a8:	4620      	mov	r0, r4
 803a2aa:	f7ff fee9 	bl	803a080 <_tx_thread_stack_error_handler>
 803a2ae:	2001      	movs	r0, #1
 803a2b0:	f7ff fdae 	bl	8039e10 <_tx_thread_interrupt_control>
 803a2b4:	f8d4 30ac 	ldr.w	r3, [r4, #172]	; 0xac
 803a2b8:	f853 3c04 	ldr.w	r3, [r3, #-4]
 803a2bc:	f1b3 3fef 	cmp.w	r3, #4025479151	; 0xefefefef
 803a2c0:	d085      	beq.n	803a1ce <_tx_thread_system_resume+0x62>
 803a2c2:	f7ff fda5 	bl	8039e10 <_tx_thread_interrupt_control>
 803a2c6:	4620      	mov	r0, r4
 803a2c8:	f7ff fe72 	bl	8039fb0 <_tx_thread_stack_analyze>
 803a2cc:	2001      	movs	r0, #1
 803a2ce:	f7ff fd9f 	bl	8039e10 <_tx_thread_interrupt_control>
 803a2d2:	e77c      	b.n	803a1ce <_tx_thread_system_resume+0x62>
 803a2d4:	f8d4 30ac 	ldr.w	r3, [r4, #172]	; 0xac
 803a2d8:	429a      	cmp	r2, r3
 803a2da:	d9b8      	bls.n	803a24e <_tx_thread_system_resume+0xe2>
 803a2dc:	e7ad      	b.n	803a23a <_tx_thread_system_resume+0xce>
 803a2de:	f8d4 30ac 	ldr.w	r3, [r4, #172]	; 0xac
 803a2e2:	429a      	cmp	r2, r3
 803a2e4:	d9e8      	bls.n	803a2b8 <_tx_thread_system_resume+0x14c>
 803a2e6:	e7dd      	b.n	803a2a4 <_tx_thread_system_resume+0x138>
 803a2e8:	481a      	ldr	r0, [pc, #104]	; (803a354 <_tx_thread_system_resume+0x1e8>)
 803a2ea:	f8df c06c 	ldr.w	ip, [pc, #108]	; 803a358 <_tx_thread_system_resume+0x1ec>
 803a2ee:	6803      	ldr	r3, [r0, #0]
 803a2f0:	f841 4022 	str.w	r4, [r1, r2, lsl #2]
 803a2f4:	f04f 0801 	mov.w	r8, #1
 803a2f8:	fa08 f102 	lsl.w	r1, r8, r2
 803a2fc:	430b      	orrs	r3, r1
 803a2fe:	f8dc 1000 	ldr.w	r1, [ip]
 803a302:	4f10      	ldr	r7, [pc, #64]	; (803a344 <_tx_thread_system_resume+0x1d8>)
 803a304:	6003      	str	r3, [r0, #0]
 803a306:	4291      	cmp	r1, r2
 803a308:	e9c4 4408 	strd	r4, r4, [r4, #32]
 803a30c:	f67f af4f 	bls.w	803a1ae <_tx_thread_system_resume+0x42>
 803a310:	683b      	ldr	r3, [r7, #0]
 803a312:	f8cc 2000 	str.w	r2, [ip]
 803a316:	b17b      	cbz	r3, 803a338 <_tx_thread_system_resume+0x1cc>
 803a318:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 803a31a:	4293      	cmp	r3, r2
 803a31c:	f67f af47 	bls.w	803a1ae <_tx_thread_system_resume+0x42>
 803a320:	4630      	mov	r0, r6
 803a322:	603c      	str	r4, [r7, #0]
 803a324:	f7ff fd74 	bl	8039e10 <_tx_thread_interrupt_control>
 803a328:	683c      	ldr	r4, [r7, #0]
 803a32a:	4640      	mov	r0, r8
 803a32c:	f7ff fd70 	bl	8039e10 <_tx_thread_interrupt_control>
 803a330:	2c00      	cmp	r4, #0
 803a332:	f47f af48 	bne.w	803a1c6 <_tx_thread_system_resume+0x5a>
 803a336:	e74a      	b.n	803a1ce <_tx_thread_system_resume+0x62>
 803a338:	603c      	str	r4, [r7, #0]
 803a33a:	e738      	b.n	803a1ae <_tx_thread_system_resume+0x42>
 803a33c:	54485244 	.word	0x54485244
 803a340:	2001227c 	.word	0x2001227c
 803a344:	20012270 	.word	0x20012270
 803a348:	2001226c 	.word	0x2001226c
 803a34c:	200024c8 	.word	0x200024c8
 803a350:	20012280 	.word	0x20012280
 803a354:	20012300 	.word	0x20012300
 803a358:	20012274 	.word	0x20012274
 803a35c:	00000000 	.word	0x00000000

0803a360 <_tx_thread_system_return>:
 803a360:	f3ef 8010 	mrs	r0, PRIMASK
 803a364:	b401      	push	{r0}
 803a366:	b662      	cpsie	i
 803a368:	df00      	svc	0
 803a36a:	bf00      	nop
 803a36c:	bc01      	pop	{r0}
 803a36e:	f380 8810 	msr	PRIMASK, r0
 803a372:	4770      	bx	lr

0803a374 <_tx_thread_system_suspend>:
 803a374:	4b6f      	ldr	r3, [pc, #444]	; (803a534 <_tx_thread_system_suspend+0x1c0>)
 803a376:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 803a37a:	4604      	mov	r4, r0
 803a37c:	2001      	movs	r0, #1
 803a37e:	681d      	ldr	r5, [r3, #0]
 803a380:	f7ff fd46 	bl	8039e10 <_tx_thread_interrupt_control>
 803a384:	b11c      	cbz	r4, 803a38e <_tx_thread_system_suspend+0x1a>
 803a386:	4b6c      	ldr	r3, [pc, #432]	; (803a538 <_tx_thread_system_suspend+0x1c4>)
 803a388:	6822      	ldr	r2, [r4, #0]
 803a38a:	429a      	cmp	r2, r3
 803a38c:	d03b      	beq.n	803a406 <_tx_thread_system_suspend+0x92>
 803a38e:	f7ff fd3f 	bl	8039e10 <_tx_thread_interrupt_control>
 803a392:	2001      	movs	r0, #1
 803a394:	f7ff fd3c 	bl	8039e10 <_tx_thread_interrupt_control>
 803a398:	42a5      	cmp	r5, r4
 803a39a:	4680      	mov	r8, r0
 803a39c:	d05f      	beq.n	803a45e <_tx_thread_system_suspend+0xea>
 803a39e:	4e67      	ldr	r6, [pc, #412]	; (803a53c <_tx_thread_system_suspend+0x1c8>)
 803a3a0:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 803a3a2:	6833      	ldr	r3, [r6, #0]
 803a3a4:	2a01      	cmp	r2, #1
 803a3a6:	f103 33ff 	add.w	r3, r3, #4294967295
 803a3aa:	6033      	str	r3, [r6, #0]
 803a3ac:	d155      	bne.n	803a45a <_tx_thread_system_suspend+0xe6>
 803a3ae:	6a23      	ldr	r3, [r4, #32]
 803a3b0:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 803a3b2:	2000      	movs	r0, #0
 803a3b4:	429c      	cmp	r4, r3
 803a3b6:	63a0      	str	r0, [r4, #56]	; 0x38
 803a3b8:	d05d      	beq.n	803a476 <_tx_thread_system_suspend+0x102>
 803a3ba:	f8df c198 	ldr.w	ip, [pc, #408]	; 803a554 <_tx_thread_system_suspend+0x1e0>
 803a3be:	6a62      	ldr	r2, [r4, #36]	; 0x24
 803a3c0:	f85c 0021 	ldr.w	r0, [ip, r1, lsl #2]
 803a3c4:	625a      	str	r2, [r3, #36]	; 0x24
 803a3c6:	42a0      	cmp	r0, r4
 803a3c8:	6213      	str	r3, [r2, #32]
 803a3ca:	f000 8097 	beq.w	803a4fc <_tx_thread_system_suspend+0x188>
 803a3ce:	4f5c      	ldr	r7, [pc, #368]	; (803a540 <_tx_thread_system_suspend+0x1cc>)
 803a3d0:	683b      	ldr	r3, [r7, #0]
 803a3d2:	42a3      	cmp	r3, r4
 803a3d4:	f000 809f 	beq.w	803a516 <_tx_thread_system_suspend+0x1a2>
 803a3d8:	4640      	mov	r0, r8
 803a3da:	f7ff fd19 	bl	8039e10 <_tx_thread_interrupt_control>
 803a3de:	683c      	ldr	r4, [r7, #0]
 803a3e0:	42ac      	cmp	r4, r5
 803a3e2:	d00e      	beq.n	803a402 <_tx_thread_system_suspend+0x8e>
 803a3e4:	2001      	movs	r0, #1
 803a3e6:	f7ff fd13 	bl	8039e10 <_tx_thread_interrupt_control>
 803a3ea:	b11c      	cbz	r4, 803a3f4 <_tx_thread_system_suspend+0x80>
 803a3ec:	4b52      	ldr	r3, [pc, #328]	; (803a538 <_tx_thread_system_suspend+0x1c4>)
 803a3ee:	6822      	ldr	r2, [r4, #0]
 803a3f0:	429a      	cmp	r2, r3
 803a3f2:	d059      	beq.n	803a4a8 <_tx_thread_system_suspend+0x134>
 803a3f4:	f7ff fd0c 	bl	8039e10 <_tx_thread_interrupt_control>
 803a3f8:	4a52      	ldr	r2, [pc, #328]	; (803a544 <_tx_thread_system_suspend+0x1d0>)
 803a3fa:	6833      	ldr	r3, [r6, #0]
 803a3fc:	6812      	ldr	r2, [r2, #0]
 803a3fe:	4313      	orrs	r3, r2
 803a400:	d04e      	beq.n	803a4a0 <_tx_thread_system_suspend+0x12c>
 803a402:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 803a406:	68a3      	ldr	r3, [r4, #8]
 803a408:	f8d4 20ac 	ldr.w	r2, [r4, #172]	; 0xac
 803a40c:	4293      	cmp	r3, r2
 803a40e:	68e2      	ldr	r2, [r4, #12]
 803a410:	bf38      	it	cc
 803a412:	f8c4 30ac 	strcc.w	r3, [r4, #172]	; 0xac
 803a416:	6813      	ldr	r3, [r2, #0]
 803a418:	f1b3 3fef 	cmp.w	r3, #4025479151	; 0xefefefef
 803a41c:	d105      	bne.n	803a42a <_tx_thread_system_suspend+0xb6>
 803a41e:	6923      	ldr	r3, [r4, #16]
 803a420:	f8d3 3001 	ldr.w	r3, [r3, #1]
 803a424:	f1b3 3fef 	cmp.w	r3, #4025479151	; 0xefefefef
 803a428:	d06b      	beq.n	803a502 <_tx_thread_system_suspend+0x18e>
 803a42a:	f7ff fcf1 	bl	8039e10 <_tx_thread_interrupt_control>
 803a42e:	4620      	mov	r0, r4
 803a430:	f7ff fe26 	bl	803a080 <_tx_thread_stack_error_handler>
 803a434:	2001      	movs	r0, #1
 803a436:	f7ff fceb 	bl	8039e10 <_tx_thread_interrupt_control>
 803a43a:	f8d4 30ac 	ldr.w	r3, [r4, #172]	; 0xac
 803a43e:	f853 3c04 	ldr.w	r3, [r3, #-4]
 803a442:	f1b3 3fef 	cmp.w	r3, #4025479151	; 0xefefefef
 803a446:	d0a2      	beq.n	803a38e <_tx_thread_system_suspend+0x1a>
 803a448:	f7ff fce2 	bl	8039e10 <_tx_thread_interrupt_control>
 803a44c:	4620      	mov	r0, r4
 803a44e:	f7ff fdaf 	bl	8039fb0 <_tx_thread_stack_analyze>
 803a452:	2001      	movs	r0, #1
 803a454:	f7ff fcdc 	bl	8039e10 <_tx_thread_interrupt_control>
 803a458:	e799      	b.n	803a38e <_tx_thread_system_suspend+0x1a>
 803a45a:	4f39      	ldr	r7, [pc, #228]	; (803a540 <_tx_thread_system_suspend+0x1cc>)
 803a45c:	e7bc      	b.n	803a3d8 <_tx_thread_system_suspend+0x64>
 803a45e:	6ceb      	ldr	r3, [r5, #76]	; 0x4c
 803a460:	3b01      	subs	r3, #1
 803a462:	3303      	adds	r3, #3
 803a464:	d803      	bhi.n	803a46e <_tx_thread_system_suspend+0xfa>
 803a466:	f105 004c 	add.w	r0, r5, #76	; 0x4c
 803a46a:	f000 fb0d 	bl	803aa88 <_tx_timer_system_activate>
 803a46e:	4b36      	ldr	r3, [pc, #216]	; (803a548 <_tx_thread_system_suspend+0x1d4>)
 803a470:	69e2      	ldr	r2, [r4, #28]
 803a472:	601a      	str	r2, [r3, #0]
 803a474:	e793      	b.n	803a39e <_tx_thread_system_suspend+0x2a>
 803a476:	4f35      	ldr	r7, [pc, #212]	; (803a54c <_tx_thread_system_suspend+0x1d8>)
 803a478:	f8df c0d8 	ldr.w	ip, [pc, #216]	; 803a554 <_tx_thread_system_suspend+0x1e0>
 803a47c:	683b      	ldr	r3, [r7, #0]
 803a47e:	f84c 0021 	str.w	r0, [ip, r1, lsl #2]
 803a482:	408a      	lsls	r2, r1
 803a484:	ea23 0202 	bic.w	r2, r3, r2
 803a488:	603a      	str	r2, [r7, #0]
 803a48a:	2a00      	cmp	r2, #0
 803a48c:	d04a      	beq.n	803a524 <_tx_thread_system_suspend+0x1b0>
 803a48e:	4253      	negs	r3, r2
 803a490:	4013      	ands	r3, r2
 803a492:	fab3 f383 	clz	r3, r3
 803a496:	4a2e      	ldr	r2, [pc, #184]	; (803a550 <_tx_thread_system_suspend+0x1dc>)
 803a498:	f1c3 031f 	rsb	r3, r3, #31
 803a49c:	6013      	str	r3, [r2, #0]
 803a49e:	e796      	b.n	803a3ce <_tx_thread_system_suspend+0x5a>
 803a4a0:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 803a4a4:	f7ff bf5c 	b.w	803a360 <_tx_thread_system_return>
 803a4a8:	68a3      	ldr	r3, [r4, #8]
 803a4aa:	f8d4 20ac 	ldr.w	r2, [r4, #172]	; 0xac
 803a4ae:	4293      	cmp	r3, r2
 803a4b0:	68e2      	ldr	r2, [r4, #12]
 803a4b2:	bf38      	it	cc
 803a4b4:	f8c4 30ac 	strcc.w	r3, [r4, #172]	; 0xac
 803a4b8:	6813      	ldr	r3, [r2, #0]
 803a4ba:	f1b3 3fef 	cmp.w	r3, #4025479151	; 0xefefefef
 803a4be:	d105      	bne.n	803a4cc <_tx_thread_system_suspend+0x158>
 803a4c0:	6923      	ldr	r3, [r4, #16]
 803a4c2:	f8d3 3001 	ldr.w	r3, [r3, #1]
 803a4c6:	f1b3 3fef 	cmp.w	r3, #4025479151	; 0xefefefef
 803a4ca:	d01f      	beq.n	803a50c <_tx_thread_system_suspend+0x198>
 803a4cc:	f7ff fca0 	bl	8039e10 <_tx_thread_interrupt_control>
 803a4d0:	4620      	mov	r0, r4
 803a4d2:	f7ff fdd5 	bl	803a080 <_tx_thread_stack_error_handler>
 803a4d6:	2001      	movs	r0, #1
 803a4d8:	f7ff fc9a 	bl	8039e10 <_tx_thread_interrupt_control>
 803a4dc:	f8d4 30ac 	ldr.w	r3, [r4, #172]	; 0xac
 803a4e0:	f853 3c04 	ldr.w	r3, [r3, #-4]
 803a4e4:	f1b3 3fef 	cmp.w	r3, #4025479151	; 0xefefefef
 803a4e8:	d084      	beq.n	803a3f4 <_tx_thread_system_suspend+0x80>
 803a4ea:	f7ff fc91 	bl	8039e10 <_tx_thread_interrupt_control>
 803a4ee:	4620      	mov	r0, r4
 803a4f0:	f7ff fd5e 	bl	8039fb0 <_tx_thread_stack_analyze>
 803a4f4:	2001      	movs	r0, #1
 803a4f6:	f7ff fc8b 	bl	8039e10 <_tx_thread_interrupt_control>
 803a4fa:	e77b      	b.n	803a3f4 <_tx_thread_system_suspend+0x80>
 803a4fc:	f84c 3021 	str.w	r3, [ip, r1, lsl #2]
 803a500:	e765      	b.n	803a3ce <_tx_thread_system_suspend+0x5a>
 803a502:	f8d4 30ac 	ldr.w	r3, [r4, #172]	; 0xac
 803a506:	429a      	cmp	r2, r3
 803a508:	d999      	bls.n	803a43e <_tx_thread_system_suspend+0xca>
 803a50a:	e78e      	b.n	803a42a <_tx_thread_system_suspend+0xb6>
 803a50c:	f8d4 30ac 	ldr.w	r3, [r4, #172]	; 0xac
 803a510:	429a      	cmp	r2, r3
 803a512:	d9e5      	bls.n	803a4e0 <_tx_thread_system_suspend+0x16c>
 803a514:	e7da      	b.n	803a4cc <_tx_thread_system_suspend+0x158>
 803a516:	4b0e      	ldr	r3, [pc, #56]	; (803a550 <_tx_thread_system_suspend+0x1dc>)
 803a518:	681b      	ldr	r3, [r3, #0]
 803a51a:	f85c 3023 	ldr.w	r3, [ip, r3, lsl #2]
 803a51e:	603b      	str	r3, [r7, #0]
 803a520:	4640      	mov	r0, r8
 803a522:	e767      	b.n	803a3f4 <_tx_thread_system_suspend+0x80>
 803a524:	490a      	ldr	r1, [pc, #40]	; (803a550 <_tx_thread_system_suspend+0x1dc>)
 803a526:	4b06      	ldr	r3, [pc, #24]	; (803a540 <_tx_thread_system_suspend+0x1cc>)
 803a528:	2420      	movs	r4, #32
 803a52a:	4640      	mov	r0, r8
 803a52c:	600c      	str	r4, [r1, #0]
 803a52e:	601a      	str	r2, [r3, #0]
 803a530:	e760      	b.n	803a3f4 <_tx_thread_system_suspend+0x80>
 803a532:	bf00      	nop
 803a534:	2001226c 	.word	0x2001226c
 803a538:	54485244 	.word	0x54485244
 803a53c:	2001227c 	.word	0x2001227c
 803a540:	20012270 	.word	0x20012270
 803a544:	200024c8 	.word	0x200024c8
 803a548:	200123b0 	.word	0x200123b0
 803a54c:	20012300 	.word	0x20012300
 803a550:	20012274 	.word	0x20012274
 803a554:	20012280 	.word	0x20012280

0803a558 <_tx_thread_terminate>:
 803a558:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 803a55a:	4604      	mov	r4, r0
 803a55c:	2001      	movs	r0, #1
 803a55e:	f7ff fc57 	bl	8039e10 <_tx_thread_interrupt_control>
 803a562:	4606      	mov	r6, r0
 803a564:	f104 004c 	add.w	r0, r4, #76	; 0x4c
 803a568:	f000 fab8 	bl	803aadc <_tx_timer_system_deactivate>
 803a56c:	6b23      	ldr	r3, [r4, #48]	; 0x30
 803a56e:	2b02      	cmp	r3, #2
 803a570:	d043      	beq.n	803a5fa <_tx_thread_terminate+0xa2>
 803a572:	2b01      	cmp	r3, #1
 803a574:	d041      	beq.n	803a5fa <_tx_thread_terminate+0xa2>
 803a576:	4d24      	ldr	r5, [pc, #144]	; (803a608 <_tx_thread_terminate+0xb0>)
 803a578:	682a      	ldr	r2, [r5, #0]
 803a57a:	3201      	adds	r2, #1
 803a57c:	602a      	str	r2, [r5, #0]
 803a57e:	b353      	cbz	r3, 803a5d6 <_tx_thread_terminate+0x7e>
 803a580:	6ea7      	ldr	r7, [r4, #104]	; 0x68
 803a582:	2202      	movs	r2, #2
 803a584:	2301      	movs	r3, #1
 803a586:	4630      	mov	r0, r6
 803a588:	6322      	str	r2, [r4, #48]	; 0x30
 803a58a:	63a3      	str	r3, [r4, #56]	; 0x38
 803a58c:	f8d4 60b0 	ldr.w	r6, [r4, #176]	; 0xb0
 803a590:	f7ff fc3e 	bl	8039e10 <_tx_thread_interrupt_control>
 803a594:	b117      	cbz	r7, 803a59c <_tx_thread_terminate+0x44>
 803a596:	4631      	mov	r1, r6
 803a598:	4620      	mov	r0, r4
 803a59a:	47b8      	blx	r7
 803a59c:	2001      	movs	r0, #1
 803a59e:	f7ff fc37 	bl	8039e10 <_tx_thread_interrupt_control>
 803a5a2:	2300      	movs	r3, #0
 803a5a4:	63a3      	str	r3, [r4, #56]	; 0x38
 803a5a6:	f7ff fc33 	bl	8039e10 <_tx_thread_interrupt_control>
 803a5aa:	2001      	movs	r0, #1
 803a5ac:	f7ff fc30 	bl	8039e10 <_tx_thread_interrupt_control>
 803a5b0:	f7ff fc2e 	bl	8039e10 <_tx_thread_interrupt_control>
 803a5b4:	4b15      	ldr	r3, [pc, #84]	; (803a60c <_tx_thread_terminate+0xb4>)
 803a5b6:	681b      	ldr	r3, [r3, #0]
 803a5b8:	b10b      	cbz	r3, 803a5be <_tx_thread_terminate+0x66>
 803a5ba:	4620      	mov	r0, r4
 803a5bc:	4798      	blx	r3
 803a5be:	2001      	movs	r0, #1
 803a5c0:	f7ff fc26 	bl	8039e10 <_tx_thread_interrupt_control>
 803a5c4:	682b      	ldr	r3, [r5, #0]
 803a5c6:	3b01      	subs	r3, #1
 803a5c8:	602b      	str	r3, [r5, #0]
 803a5ca:	f7ff fc21 	bl	8039e10 <_tx_thread_interrupt_control>
 803a5ce:	f7ff fd77 	bl	803a0c0 <_tx_thread_system_preempt_check>
 803a5d2:	2000      	movs	r0, #0
 803a5d4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 803a5d6:	682a      	ldr	r2, [r5, #0]
 803a5d8:	64e3      	str	r3, [r4, #76]	; 0x4c
 803a5da:	2102      	movs	r1, #2
 803a5dc:	2701      	movs	r7, #1
 803a5de:	443a      	add	r2, r7
 803a5e0:	6321      	str	r1, [r4, #48]	; 0x30
 803a5e2:	4630      	mov	r0, r6
 803a5e4:	63a7      	str	r7, [r4, #56]	; 0x38
 803a5e6:	602a      	str	r2, [r5, #0]
 803a5e8:	f7ff fc12 	bl	8039e10 <_tx_thread_interrupt_control>
 803a5ec:	4620      	mov	r0, r4
 803a5ee:	f7ff fec1 	bl	803a374 <_tx_thread_system_suspend>
 803a5f2:	4638      	mov	r0, r7
 803a5f4:	f7ff fc0c 	bl	8039e10 <_tx_thread_interrupt_control>
 803a5f8:	e7da      	b.n	803a5b0 <_tx_thread_terminate+0x58>
 803a5fa:	4630      	mov	r0, r6
 803a5fc:	f7ff fc08 	bl	8039e10 <_tx_thread_interrupt_control>
 803a600:	f7ff fd5e 	bl	803a0c0 <_tx_thread_system_preempt_check>
 803a604:	2000      	movs	r0, #0
 803a606:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 803a608:	2001227c 	.word	0x2001227c
 803a60c:	20012278 	.word	0x20012278

0803a610 <_tx_thread_time_slice>:
 803a610:	4b54      	ldr	r3, [pc, #336]	; (803a764 <_tx_thread_time_slice+0x154>)
 803a612:	b510      	push	{r4, lr}
 803a614:	681c      	ldr	r4, [r3, #0]
 803a616:	2001      	movs	r0, #1
 803a618:	f7ff fbfa 	bl	8039e10 <_tx_thread_interrupt_control>
 803a61c:	2c00      	cmp	r4, #0
 803a61e:	d04c      	beq.n	803a6ba <_tx_thread_time_slice+0xaa>
 803a620:	4a51      	ldr	r2, [pc, #324]	; (803a768 <_tx_thread_time_slice+0x158>)
 803a622:	6821      	ldr	r1, [r4, #0]
 803a624:	4291      	cmp	r1, r2
 803a626:	4603      	mov	r3, r0
 803a628:	d019      	beq.n	803a65e <_tx_thread_time_slice+0x4e>
 803a62a:	4618      	mov	r0, r3
 803a62c:	f7ff fbf0 	bl	8039e10 <_tx_thread_interrupt_control>
 803a630:	2001      	movs	r0, #1
 803a632:	f7ff fbed 	bl	8039e10 <_tx_thread_interrupt_control>
 803a636:	4a4d      	ldr	r2, [pc, #308]	; (803a76c <_tx_thread_time_slice+0x15c>)
 803a638:	6b23      	ldr	r3, [r4, #48]	; 0x30
 803a63a:	2100      	movs	r1, #0
 803a63c:	6011      	str	r1, [r2, #0]
 803a63e:	b953      	cbnz	r3, 803a656 <_tx_thread_time_slice+0x46>
 803a640:	e9d4 3207 	ldrd	r3, r2, [r4, #28]
 803a644:	494a      	ldr	r1, [pc, #296]	; (803a770 <_tx_thread_time_slice+0x160>)
 803a646:	61a3      	str	r3, [r4, #24]
 803a648:	42a2      	cmp	r2, r4
 803a64a:	600b      	str	r3, [r1, #0]
 803a64c:	d003      	beq.n	803a656 <_tx_thread_time_slice+0x46>
 803a64e:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 803a650:	6be1      	ldr	r1, [r4, #60]	; 0x3c
 803a652:	428b      	cmp	r3, r1
 803a654:	d03c      	beq.n	803a6d0 <_tx_thread_time_slice+0xc0>
 803a656:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 803a65a:	f7ff bbd9 	b.w	8039e10 <_tx_thread_interrupt_control>
 803a65e:	68a2      	ldr	r2, [r4, #8]
 803a660:	f8d4 10ac 	ldr.w	r1, [r4, #172]	; 0xac
 803a664:	428a      	cmp	r2, r1
 803a666:	68e1      	ldr	r1, [r4, #12]
 803a668:	bf38      	it	cc
 803a66a:	f8c4 20ac 	strcc.w	r2, [r4, #172]	; 0xac
 803a66e:	680a      	ldr	r2, [r1, #0]
 803a670:	f1b2 3fef 	cmp.w	r2, #4025479151	; 0xefefefef
 803a674:	d105      	bne.n	803a682 <_tx_thread_time_slice+0x72>
 803a676:	6922      	ldr	r2, [r4, #16]
 803a678:	f8d2 2001 	ldr.w	r2, [r2, #1]
 803a67c:	f1b2 3fef 	cmp.w	r2, #4025479151	; 0xefefefef
 803a680:	d064      	beq.n	803a74c <_tx_thread_time_slice+0x13c>
 803a682:	4618      	mov	r0, r3
 803a684:	f7ff fbc4 	bl	8039e10 <_tx_thread_interrupt_control>
 803a688:	4620      	mov	r0, r4
 803a68a:	f7ff fcf9 	bl	803a080 <_tx_thread_stack_error_handler>
 803a68e:	2001      	movs	r0, #1
 803a690:	f7ff fbbe 	bl	8039e10 <_tx_thread_interrupt_control>
 803a694:	f8d4 20ac 	ldr.w	r2, [r4, #172]	; 0xac
 803a698:	4603      	mov	r3, r0
 803a69a:	f852 2c04 	ldr.w	r2, [r2, #-4]
 803a69e:	f1b2 3fef 	cmp.w	r2, #4025479151	; 0xefefefef
 803a6a2:	d0c2      	beq.n	803a62a <_tx_thread_time_slice+0x1a>
 803a6a4:	4618      	mov	r0, r3
 803a6a6:	f7ff fbb3 	bl	8039e10 <_tx_thread_interrupt_control>
 803a6aa:	4620      	mov	r0, r4
 803a6ac:	f7ff fc80 	bl	8039fb0 <_tx_thread_stack_analyze>
 803a6b0:	2001      	movs	r0, #1
 803a6b2:	f7ff fbad 	bl	8039e10 <_tx_thread_interrupt_control>
 803a6b6:	4603      	mov	r3, r0
 803a6b8:	e7b7      	b.n	803a62a <_tx_thread_time_slice+0x1a>
 803a6ba:	f7ff fba9 	bl	8039e10 <_tx_thread_interrupt_control>
 803a6be:	2001      	movs	r0, #1
 803a6c0:	f7ff fba6 	bl	8039e10 <_tx_thread_interrupt_control>
 803a6c4:	4b29      	ldr	r3, [pc, #164]	; (803a76c <_tx_thread_time_slice+0x15c>)
 803a6c6:	601c      	str	r4, [r3, #0]
 803a6c8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 803a6cc:	f7ff bba0 	b.w	8039e10 <_tx_thread_interrupt_control>
 803a6d0:	4928      	ldr	r1, [pc, #160]	; (803a774 <_tx_thread_time_slice+0x164>)
 803a6d2:	4c29      	ldr	r4, [pc, #164]	; (803a778 <_tx_thread_time_slice+0x168>)
 803a6d4:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 803a6d8:	6822      	ldr	r2, [r4, #0]
 803a6da:	4b28      	ldr	r3, [pc, #160]	; (803a77c <_tx_thread_time_slice+0x16c>)
 803a6dc:	f851 4022 	ldr.w	r4, [r1, r2, lsl #2]
 803a6e0:	601c      	str	r4, [r3, #0]
 803a6e2:	f7ff fb95 	bl	8039e10 <_tx_thread_interrupt_control>
 803a6e6:	2c00      	cmp	r4, #0
 803a6e8:	d03a      	beq.n	803a760 <_tx_thread_time_slice+0x150>
 803a6ea:	2001      	movs	r0, #1
 803a6ec:	f7ff fb90 	bl	8039e10 <_tx_thread_interrupt_control>
 803a6f0:	4b1d      	ldr	r3, [pc, #116]	; (803a768 <_tx_thread_time_slice+0x158>)
 803a6f2:	6822      	ldr	r2, [r4, #0]
 803a6f4:	429a      	cmp	r2, r3
 803a6f6:	d1ae      	bne.n	803a656 <_tx_thread_time_slice+0x46>
 803a6f8:	68a3      	ldr	r3, [r4, #8]
 803a6fa:	f8d4 20ac 	ldr.w	r2, [r4, #172]	; 0xac
 803a6fe:	4293      	cmp	r3, r2
 803a700:	68e2      	ldr	r2, [r4, #12]
 803a702:	bf38      	it	cc
 803a704:	f8c4 30ac 	strcc.w	r3, [r4, #172]	; 0xac
 803a708:	6813      	ldr	r3, [r2, #0]
 803a70a:	f1b3 3fef 	cmp.w	r3, #4025479151	; 0xefefefef
 803a70e:	d105      	bne.n	803a71c <_tx_thread_time_slice+0x10c>
 803a710:	6923      	ldr	r3, [r4, #16]
 803a712:	f8d3 3001 	ldr.w	r3, [r3, #1]
 803a716:	f1b3 3fef 	cmp.w	r3, #4025479151	; 0xefefefef
 803a71a:	d01c      	beq.n	803a756 <_tx_thread_time_slice+0x146>
 803a71c:	f7ff fb78 	bl	8039e10 <_tx_thread_interrupt_control>
 803a720:	4620      	mov	r0, r4
 803a722:	f7ff fcad 	bl	803a080 <_tx_thread_stack_error_handler>
 803a726:	2001      	movs	r0, #1
 803a728:	f7ff fb72 	bl	8039e10 <_tx_thread_interrupt_control>
 803a72c:	f8d4 30ac 	ldr.w	r3, [r4, #172]	; 0xac
 803a730:	f853 3c04 	ldr.w	r3, [r3, #-4]
 803a734:	f1b3 3fef 	cmp.w	r3, #4025479151	; 0xefefefef
 803a738:	d08d      	beq.n	803a656 <_tx_thread_time_slice+0x46>
 803a73a:	f7ff fb69 	bl	8039e10 <_tx_thread_interrupt_control>
 803a73e:	4620      	mov	r0, r4
 803a740:	f7ff fc36 	bl	8039fb0 <_tx_thread_stack_analyze>
 803a744:	2001      	movs	r0, #1
 803a746:	f7ff fb63 	bl	8039e10 <_tx_thread_interrupt_control>
 803a74a:	e784      	b.n	803a656 <_tx_thread_time_slice+0x46>
 803a74c:	f8d4 20ac 	ldr.w	r2, [r4, #172]	; 0xac
 803a750:	4291      	cmp	r1, r2
 803a752:	d9a2      	bls.n	803a69a <_tx_thread_time_slice+0x8a>
 803a754:	e795      	b.n	803a682 <_tx_thread_time_slice+0x72>
 803a756:	f8d4 30ac 	ldr.w	r3, [r4, #172]	; 0xac
 803a75a:	429a      	cmp	r2, r3
 803a75c:	d9e8      	bls.n	803a730 <_tx_thread_time_slice+0x120>
 803a75e:	e7dd      	b.n	803a71c <_tx_thread_time_slice+0x10c>
 803a760:	bd10      	pop	{r4, pc}
 803a762:	bf00      	nop
 803a764:	2001226c 	.word	0x2001226c
 803a768:	54485244 	.word	0x54485244
 803a76c:	20012318 	.word	0x20012318
 803a770:	200123b0 	.word	0x200123b0
 803a774:	20012280 	.word	0x20012280
 803a778:	20012274 	.word	0x20012274
 803a77c:	20012270 	.word	0x20012270

0803a780 <_tx_thread_timeout>:
 803a780:	b570      	push	{r4, r5, r6, lr}
 803a782:	4604      	mov	r4, r0
 803a784:	2001      	movs	r0, #1
 803a786:	f7ff fb43 	bl	8039e10 <_tx_thread_interrupt_control>
 803a78a:	6b23      	ldr	r3, [r4, #48]	; 0x30
 803a78c:	2b04      	cmp	r3, #4
 803a78e:	d00b      	beq.n	803a7a8 <_tx_thread_timeout+0x28>
 803a790:	6ea5      	ldr	r5, [r4, #104]	; 0x68
 803a792:	f8d4 60b0 	ldr.w	r6, [r4, #176]	; 0xb0
 803a796:	f7ff fb3b 	bl	8039e10 <_tx_thread_interrupt_control>
 803a79a:	b185      	cbz	r5, 803a7be <_tx_thread_timeout+0x3e>
 803a79c:	4631      	mov	r1, r6
 803a79e:	4620      	mov	r0, r4
 803a7a0:	462b      	mov	r3, r5
 803a7a2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 803a7a6:	4718      	bx	r3
 803a7a8:	4a05      	ldr	r2, [pc, #20]	; (803a7c0 <_tx_thread_timeout+0x40>)
 803a7aa:	6813      	ldr	r3, [r2, #0]
 803a7ac:	3301      	adds	r3, #1
 803a7ae:	6013      	str	r3, [r2, #0]
 803a7b0:	f7ff fb2e 	bl	8039e10 <_tx_thread_interrupt_control>
 803a7b4:	4620      	mov	r0, r4
 803a7b6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 803a7ba:	f7ff bcd7 	b.w	803a16c <_tx_thread_system_resume>
 803a7be:	bd70      	pop	{r4, r5, r6, pc}
 803a7c0:	2001227c 	.word	0x2001227c

0803a7c4 <_tx_time_get>:
 803a7c4:	b510      	push	{r4, lr}
 803a7c6:	2001      	movs	r0, #1
 803a7c8:	f7ff fb22 	bl	8039e10 <_tx_thread_interrupt_control>
 803a7cc:	4b02      	ldr	r3, [pc, #8]	; (803a7d8 <_tx_time_get+0x14>)
 803a7ce:	681c      	ldr	r4, [r3, #0]
 803a7d0:	f7ff fb1e 	bl	8039e10 <_tx_thread_interrupt_control>
 803a7d4:	4620      	mov	r0, r4
 803a7d6:	bd10      	pop	{r4, pc}
 803a7d8:	200123ac 	.word	0x200123ac

0803a7dc <_tx_timer_create>:
 803a7dc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 803a7de:	4604      	mov	r4, r0
 803a7e0:	4616      	mov	r6, r2
 803a7e2:	460f      	mov	r7, r1
 803a7e4:	222c      	movs	r2, #44	; 0x2c
 803a7e6:	2100      	movs	r1, #0
 803a7e8:	461d      	mov	r5, r3
 803a7ea:	f004 ff33 	bl	803f654 <memset>
 803a7ee:	9b06      	ldr	r3, [sp, #24]
 803a7f0:	60a3      	str	r3, [r4, #8]
 803a7f2:	9b07      	ldr	r3, [sp, #28]
 803a7f4:	6067      	str	r7, [r4, #4]
 803a7f6:	e9c4 3603 	strd	r3, r6, [r4, #12]
 803a7fa:	6165      	str	r5, [r4, #20]
 803a7fc:	2001      	movs	r0, #1
 803a7fe:	f7ff fb07 	bl	8039e10 <_tx_thread_interrupt_control>
 803a802:	4a14      	ldr	r2, [pc, #80]	; (803a854 <_tx_timer_create+0x78>)
 803a804:	4914      	ldr	r1, [pc, #80]	; (803a858 <_tx_timer_create+0x7c>)
 803a806:	6813      	ldr	r3, [r2, #0]
 803a808:	6021      	str	r1, [r4, #0]
 803a80a:	4606      	mov	r6, r0
 803a80c:	4913      	ldr	r1, [pc, #76]	; (803a85c <_tx_timer_create+0x80>)
 803a80e:	b963      	cbnz	r3, 803a82a <_tx_timer_create+0x4e>
 803a810:	3301      	adds	r3, #1
 803a812:	6013      	str	r3, [r2, #0]
 803a814:	9b08      	ldr	r3, [sp, #32]
 803a816:	600c      	str	r4, [r1, #0]
 803a818:	2b01      	cmp	r3, #1
 803a81a:	e9c4 4409 	strd	r4, r4, [r4, #36]	; 0x24
 803a81e:	d00f      	beq.n	803a840 <_tx_timer_create+0x64>
 803a820:	4630      	mov	r0, r6
 803a822:	f7ff faf5 	bl	8039e10 <_tx_thread_interrupt_control>
 803a826:	2000      	movs	r0, #0
 803a828:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 803a82a:	6809      	ldr	r1, [r1, #0]
 803a82c:	3301      	adds	r3, #1
 803a82e:	6013      	str	r3, [r2, #0]
 803a830:	9b08      	ldr	r3, [sp, #32]
 803a832:	6a88      	ldr	r0, [r1, #40]	; 0x28
 803a834:	628c      	str	r4, [r1, #40]	; 0x28
 803a836:	2b01      	cmp	r3, #1
 803a838:	6244      	str	r4, [r0, #36]	; 0x24
 803a83a:	e9c4 1009 	strd	r1, r0, [r4, #36]	; 0x24
 803a83e:	d1ef      	bne.n	803a820 <_tx_timer_create+0x44>
 803a840:	f104 0008 	add.w	r0, r4, #8
 803a844:	f000 f920 	bl	803aa88 <_tx_timer_system_activate>
 803a848:	4630      	mov	r0, r6
 803a84a:	f7ff fae1 	bl	8039e10 <_tx_thread_interrupt_control>
 803a84e:	2000      	movs	r0, #0
 803a850:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 803a852:	bf00      	nop
 803a854:	20012308 	.word	0x20012308
 803a858:	4154494d 	.word	0x4154494d
 803a85c:	2001230c 	.word	0x2001230c

0803a860 <_tx_timer_expiration_process>:
 803a860:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 803a864:	2001      	movs	r0, #1
 803a866:	b083      	sub	sp, #12
 803a868:	f7ff fad2 	bl	8039e10 <_tx_thread_interrupt_control>
 803a86c:	4b3b      	ldr	r3, [pc, #236]	; (803a95c <_tx_timer_expiration_process+0xfc>)
 803a86e:	681d      	ldr	r5, [r3, #0]
 803a870:	4683      	mov	fp, r0
 803a872:	2d00      	cmp	r5, #0
 803a874:	d15d      	bne.n	803a932 <_tx_timer_expiration_process+0xd2>
 803a876:	f8df 80f8 	ldr.w	r8, [pc, #248]	; 803a970 <_tx_timer_expiration_process+0x110>
 803a87a:	f8d8 2000 	ldr.w	r2, [r8]
 803a87e:	2a00      	cmp	r2, #0
 803a880:	d057      	beq.n	803a932 <_tx_timer_expiration_process+0xd2>
 803a882:	2201      	movs	r2, #1
 803a884:	4e36      	ldr	r6, [pc, #216]	; (803a960 <_tx_timer_expiration_process+0x100>)
 803a886:	601a      	str	r2, [r3, #0]
 803a888:	4b36      	ldr	r3, [pc, #216]	; (803a964 <_tx_timer_expiration_process+0x104>)
 803a88a:	681a      	ldr	r2, [r3, #0]
 803a88c:	6811      	ldr	r1, [r2, #0]
 803a88e:	9100      	str	r1, [sp, #0]
 803a890:	b109      	cbz	r1, 803a896 <_tx_timer_expiration_process+0x36>
 803a892:	f8c1 d018 	str.w	sp, [r1, #24]
 803a896:	4b34      	ldr	r3, [pc, #208]	; (803a968 <_tx_timer_expiration_process+0x108>)
 803a898:	6819      	ldr	r1, [r3, #0]
 803a89a:	f842 5b04 	str.w	r5, [r2], #4
 803a89e:	4b31      	ldr	r3, [pc, #196]	; (803a964 <_tx_timer_expiration_process+0x104>)
 803a8a0:	428a      	cmp	r2, r1
 803a8a2:	601a      	str	r2, [r3, #0]
 803a8a4:	d054      	beq.n	803a950 <_tx_timer_expiration_process+0xf0>
 803a8a6:	4658      	mov	r0, fp
 803a8a8:	f8c8 5000 	str.w	r5, [r8]
 803a8ac:	f7ff fab0 	bl	8039e10 <_tx_thread_interrupt_control>
 803a8b0:	2001      	movs	r0, #1
 803a8b2:	f7ff faad 	bl	8039e10 <_tx_thread_interrupt_control>
 803a8b6:	9c00      	ldr	r4, [sp, #0]
 803a8b8:	4683      	mov	fp, r0
 803a8ba:	2c00      	cmp	r4, #0
 803a8bc:	d033      	beq.n	803a926 <_tx_timer_expiration_process+0xc6>
 803a8be:	af01      	add	r7, sp, #4
 803a8c0:	e012      	b.n	803a8e8 <_tx_timer_expiration_process+0x88>
 803a8c2:	3a20      	subs	r2, #32
 803a8c4:	6022      	str	r2, [r4, #0]
 803a8c6:	61a7      	str	r7, [r4, #24]
 803a8c8:	6124      	str	r4, [r4, #16]
 803a8ca:	4658      	mov	r0, fp
 803a8cc:	9401      	str	r4, [sp, #4]
 803a8ce:	6034      	str	r4, [r6, #0]
 803a8d0:	f7ff fa9e 	bl	8039e10 <_tx_thread_interrupt_control>
 803a8d4:	2001      	movs	r0, #1
 803a8d6:	f7ff fa9b 	bl	8039e10 <_tx_thread_interrupt_control>
 803a8da:	9a01      	ldr	r2, [sp, #4]
 803a8dc:	6035      	str	r5, [r6, #0]
 803a8de:	4294      	cmp	r4, r2
 803a8e0:	4683      	mov	fp, r0
 803a8e2:	d030      	beq.n	803a946 <_tx_timer_expiration_process+0xe6>
 803a8e4:	9c00      	ldr	r4, [sp, #0]
 803a8e6:	b1f4      	cbz	r4, 803a926 <_tx_timer_expiration_process+0xc6>
 803a8e8:	6922      	ldr	r2, [r4, #16]
 803a8ea:	9501      	str	r5, [sp, #4]
 803a8ec:	4294      	cmp	r4, r2
 803a8ee:	d026      	beq.n	803a93e <_tx_timer_expiration_process+0xde>
 803a8f0:	6961      	ldr	r1, [r4, #20]
 803a8f2:	6151      	str	r1, [r2, #20]
 803a8f4:	9200      	str	r2, [sp, #0]
 803a8f6:	610a      	str	r2, [r1, #16]
 803a8f8:	f8c2 d018 	str.w	sp, [r2, #24]
 803a8fc:	6822      	ldr	r2, [r4, #0]
 803a8fe:	2a20      	cmp	r2, #32
 803a900:	d8df      	bhi.n	803a8c2 <_tx_timer_expiration_process+0x62>
 803a902:	6860      	ldr	r0, [r4, #4]
 803a904:	6020      	str	r0, [r4, #0]
 803a906:	e9d4 a902 	ldrd	sl, r9, [r4, #8]
 803a90a:	b1d0      	cbz	r0, 803a942 <_tx_timer_expiration_process+0xe2>
 803a90c:	61a7      	str	r7, [r4, #24]
 803a90e:	6124      	str	r4, [r4, #16]
 803a910:	9401      	str	r4, [sp, #4]
 803a912:	4658      	mov	r0, fp
 803a914:	6034      	str	r4, [r6, #0]
 803a916:	f7ff fa7b 	bl	8039e10 <_tx_thread_interrupt_control>
 803a91a:	f1ba 0f00 	cmp.w	sl, #0
 803a91e:	d0d9      	beq.n	803a8d4 <_tx_timer_expiration_process+0x74>
 803a920:	4648      	mov	r0, r9
 803a922:	47d0      	blx	sl
 803a924:	e7d6      	b.n	803a8d4 <_tx_timer_expiration_process+0x74>
 803a926:	f8d8 2000 	ldr.w	r2, [r8]
 803a92a:	2a00      	cmp	r2, #0
 803a92c:	d1ac      	bne.n	803a888 <_tx_timer_expiration_process+0x28>
 803a92e:	4b0b      	ldr	r3, [pc, #44]	; (803a95c <_tx_timer_expiration_process+0xfc>)
 803a930:	601a      	str	r2, [r3, #0]
 803a932:	4658      	mov	r0, fp
 803a934:	f7ff fa6c 	bl	8039e10 <_tx_thread_interrupt_control>
 803a938:	b003      	add	sp, #12
 803a93a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 803a93e:	9500      	str	r5, [sp, #0]
 803a940:	e7dc      	b.n	803a8fc <_tx_timer_expiration_process+0x9c>
 803a942:	61a0      	str	r0, [r4, #24]
 803a944:	e7e5      	b.n	803a912 <_tx_timer_expiration_process+0xb2>
 803a946:	61a5      	str	r5, [r4, #24]
 803a948:	4620      	mov	r0, r4
 803a94a:	f000 f89d 	bl	803aa88 <_tx_timer_system_activate>
 803a94e:	e7c9      	b.n	803a8e4 <_tx_timer_expiration_process+0x84>
 803a950:	4b06      	ldr	r3, [pc, #24]	; (803a96c <_tx_timer_expiration_process+0x10c>)
 803a952:	681a      	ldr	r2, [r3, #0]
 803a954:	4b03      	ldr	r3, [pc, #12]	; (803a964 <_tx_timer_expiration_process+0x104>)
 803a956:	601a      	str	r2, [r3, #0]
 803a958:	e7a5      	b.n	803a8a6 <_tx_timer_expiration_process+0x46>
 803a95a:	bf00      	nop
 803a95c:	200123a8 	.word	0x200123a8
 803a960:	2001231c 	.word	0x2001231c
 803a964:	20012310 	.word	0x20012310
 803a968:	200123a0 	.word	0x200123a0
 803a96c:	200123a4 	.word	0x200123a4
 803a970:	20012314 	.word	0x20012314

0803a974 <_tx_timer_initialize>:
 803a974:	4b0f      	ldr	r3, [pc, #60]	; (803a9b4 <_tx_timer_initialize+0x40>)
 803a976:	4910      	ldr	r1, [pc, #64]	; (803a9b8 <_tx_timer_initialize+0x44>)
 803a978:	4a10      	ldr	r2, [pc, #64]	; (803a9bc <_tx_timer_initialize+0x48>)
 803a97a:	b570      	push	{r4, r5, r6, lr}
 803a97c:	2400      	movs	r4, #0
 803a97e:	4d10      	ldr	r5, [pc, #64]	; (803a9c0 <_tx_timer_initialize+0x4c>)
 803a980:	601c      	str	r4, [r3, #0]
 803a982:	4e10      	ldr	r6, [pc, #64]	; (803a9c4 <_tx_timer_initialize+0x50>)
 803a984:	4b10      	ldr	r3, [pc, #64]	; (803a9c8 <_tx_timer_initialize+0x54>)
 803a986:	600c      	str	r4, [r1, #0]
 803a988:	4628      	mov	r0, r5
 803a98a:	4621      	mov	r1, r4
 803a98c:	6014      	str	r4, [r2, #0]
 803a98e:	2280      	movs	r2, #128	; 0x80
 803a990:	601c      	str	r4, [r3, #0]
 803a992:	6034      	str	r4, [r6, #0]
 803a994:	f004 fe5e 	bl	803f654 <memset>
 803a998:	4a0c      	ldr	r2, [pc, #48]	; (803a9cc <_tx_timer_initialize+0x58>)
 803a99a:	4b0d      	ldr	r3, [pc, #52]	; (803a9d0 <_tx_timer_initialize+0x5c>)
 803a99c:	6015      	str	r5, [r2, #0]
 803a99e:	601d      	str	r5, [r3, #0]
 803a9a0:	490c      	ldr	r1, [pc, #48]	; (803a9d4 <_tx_timer_initialize+0x60>)
 803a9a2:	480d      	ldr	r0, [pc, #52]	; (803a9d8 <_tx_timer_initialize+0x64>)
 803a9a4:	4a0d      	ldr	r2, [pc, #52]	; (803a9dc <_tx_timer_initialize+0x68>)
 803a9a6:	4b0e      	ldr	r3, [pc, #56]	; (803a9e0 <_tx_timer_initialize+0x6c>)
 803a9a8:	6004      	str	r4, [r0, #0]
 803a9aa:	3580      	adds	r5, #128	; 0x80
 803a9ac:	600d      	str	r5, [r1, #0]
 803a9ae:	6014      	str	r4, [r2, #0]
 803a9b0:	601c      	str	r4, [r3, #0]
 803a9b2:	bd70      	pop	{r4, r5, r6, pc}
 803a9b4:	200123b0 	.word	0x200123b0
 803a9b8:	20012318 	.word	0x20012318
 803a9bc:	20012314 	.word	0x20012314
 803a9c0:	20012320 	.word	0x20012320
 803a9c4:	200123ac 	.word	0x200123ac
 803a9c8:	2001231c 	.word	0x2001231c
 803a9cc:	200123a4 	.word	0x200123a4
 803a9d0:	20012310 	.word	0x20012310
 803a9d4:	200123a0 	.word	0x200123a0
 803a9d8:	200123a8 	.word	0x200123a8
 803a9dc:	2001230c 	.word	0x2001230c
 803a9e0:	20012308 	.word	0x20012308
	...

0803a9f0 <_tx_timer_interrupt>:
 803a9f0:	491e      	ldr	r1, [pc, #120]	; (803aa6c <__tx_timer_nothing_expired+0x2>)
 803a9f2:	6808      	ldr	r0, [r1, #0]
 803a9f4:	f100 0001 	add.w	r0, r0, #1
 803a9f8:	6008      	str	r0, [r1, #0]
 803a9fa:	4b1d      	ldr	r3, [pc, #116]	; (803aa70 <__tx_timer_nothing_expired+0x6>)
 803a9fc:	681a      	ldr	r2, [r3, #0]
 803a9fe:	2a00      	cmp	r2, #0
 803aa00:	d008      	beq.n	803aa14 <__tx_timer_no_time_slice>
 803aa02:	f1a2 0201 	sub.w	r2, r2, #1
 803aa06:	601a      	str	r2, [r3, #0]
 803aa08:	2a00      	cmp	r2, #0
 803aa0a:	d103      	bne.n	803aa14 <__tx_timer_no_time_slice>
 803aa0c:	4b19      	ldr	r3, [pc, #100]	; (803aa74 <__tx_timer_nothing_expired+0xa>)
 803aa0e:	f04f 0001 	mov.w	r0, #1
 803aa12:	6018      	str	r0, [r3, #0]

0803aa14 <__tx_timer_no_time_slice>:
 803aa14:	4918      	ldr	r1, [pc, #96]	; (803aa78 <__tx_timer_nothing_expired+0xe>)
 803aa16:	6808      	ldr	r0, [r1, #0]
 803aa18:	6802      	ldr	r2, [r0, #0]
 803aa1a:	2a00      	cmp	r2, #0
 803aa1c:	d004      	beq.n	803aa28 <__tx_timer_no_timer>
 803aa1e:	4b17      	ldr	r3, [pc, #92]	; (803aa7c <__tx_timer_nothing_expired+0x12>)
 803aa20:	f04f 0201 	mov.w	r2, #1
 803aa24:	601a      	str	r2, [r3, #0]
 803aa26:	e008      	b.n	803aa3a <__tx_timer_done>

0803aa28 <__tx_timer_no_timer>:
 803aa28:	f100 0004 	add.w	r0, r0, #4
 803aa2c:	4b14      	ldr	r3, [pc, #80]	; (803aa80 <__tx_timer_nothing_expired+0x16>)
 803aa2e:	681a      	ldr	r2, [r3, #0]
 803aa30:	4290      	cmp	r0, r2
 803aa32:	d101      	bne.n	803aa38 <__tx_timer_skip_wrap>
 803aa34:	4b13      	ldr	r3, [pc, #76]	; (803aa84 <__tx_timer_nothing_expired+0x1a>)
 803aa36:	6818      	ldr	r0, [r3, #0]

0803aa38 <__tx_timer_skip_wrap>:
 803aa38:	6008      	str	r0, [r1, #0]

0803aa3a <__tx_timer_done>:
 803aa3a:	4b0e      	ldr	r3, [pc, #56]	; (803aa74 <__tx_timer_nothing_expired+0xa>)
 803aa3c:	681a      	ldr	r2, [r3, #0]
 803aa3e:	2a00      	cmp	r2, #0
 803aa40:	d103      	bne.n	803aa4a <__tx_something_expired>
 803aa42:	490e      	ldr	r1, [pc, #56]	; (803aa7c <__tx_timer_nothing_expired+0x12>)
 803aa44:	6808      	ldr	r0, [r1, #0]
 803aa46:	2800      	cmp	r0, #0
 803aa48:	d00f      	beq.n	803aa6a <__tx_timer_nothing_expired>

0803aa4a <__tx_something_expired>:
 803aa4a:	e92d 4001 	stmdb	sp!, {r0, lr}
 803aa4e:	490b      	ldr	r1, [pc, #44]	; (803aa7c <__tx_timer_nothing_expired+0x12>)
 803aa50:	6808      	ldr	r0, [r1, #0]
 803aa52:	2800      	cmp	r0, #0
 803aa54:	d001      	beq.n	803aa5a <__tx_timer_dont_activate>
 803aa56:	f7ff ff03 	bl	803a860 <_tx_timer_expiration_process>

0803aa5a <__tx_timer_dont_activate>:
 803aa5a:	4b06      	ldr	r3, [pc, #24]	; (803aa74 <__tx_timer_nothing_expired+0xa>)
 803aa5c:	681a      	ldr	r2, [r3, #0]
 803aa5e:	2a00      	cmp	r2, #0
 803aa60:	d001      	beq.n	803aa66 <__tx_timer_not_ts_expiration>
 803aa62:	f7ff fdd5 	bl	803a610 <_tx_thread_time_slice>

0803aa66 <__tx_timer_not_ts_expiration>:
 803aa66:	e8bd 4001 	ldmia.w	sp!, {r0, lr}

0803aa6a <__tx_timer_nothing_expired>:
 803aa6a:	4770      	bx	lr
 803aa6c:	200123ac 	.word	0x200123ac
 803aa70:	200123b0 	.word	0x200123b0
 803aa74:	20012318 	.word	0x20012318
 803aa78:	20012310 	.word	0x20012310
 803aa7c:	20012314 	.word	0x20012314
 803aa80:	200123a0 	.word	0x200123a0
 803aa84:	200123a4 	.word	0x200123a4

0803aa88 <_tx_timer_system_activate>:
 803aa88:	6802      	ldr	r2, [r0, #0]
 803aa8a:	1e53      	subs	r3, r2, #1
 803aa8c:	1cd9      	adds	r1, r3, #3
 803aa8e:	d801      	bhi.n	803aa94 <_tx_timer_system_activate+0xc>
 803aa90:	6981      	ldr	r1, [r0, #24]
 803aa92:	b101      	cbz	r1, 803aa96 <_tx_timer_system_activate+0xe>
 803aa94:	4770      	bx	lr
 803aa96:	2a20      	cmp	r2, #32
 803aa98:	4a0d      	ldr	r2, [pc, #52]	; (803aad0 <_tx_timer_system_activate+0x48>)
 803aa9a:	490e      	ldr	r1, [pc, #56]	; (803aad4 <_tx_timer_system_activate+0x4c>)
 803aa9c:	6812      	ldr	r2, [r2, #0]
 803aa9e:	6809      	ldr	r1, [r1, #0]
 803aaa0:	bf94      	ite	ls
 803aaa2:	009b      	lslls	r3, r3, #2
 803aaa4:	237c      	movhi	r3, #124	; 0x7c
 803aaa6:	4413      	add	r3, r2
 803aaa8:	4299      	cmp	r1, r3
 803aaaa:	d908      	bls.n	803aabe <_tx_timer_system_activate+0x36>
 803aaac:	681a      	ldr	r2, [r3, #0]
 803aaae:	b15a      	cbz	r2, 803aac8 <_tx_timer_system_activate+0x40>
 803aab0:	6951      	ldr	r1, [r2, #20]
 803aab2:	6108      	str	r0, [r1, #16]
 803aab4:	6150      	str	r0, [r2, #20]
 803aab6:	e9c0 2104 	strd	r2, r1, [r0, #16]
 803aaba:	6183      	str	r3, [r0, #24]
 803aabc:	e7ea      	b.n	803aa94 <_tx_timer_system_activate+0xc>
 803aabe:	4a06      	ldr	r2, [pc, #24]	; (803aad8 <_tx_timer_system_activate+0x50>)
 803aac0:	6812      	ldr	r2, [r2, #0]
 803aac2:	1a5b      	subs	r3, r3, r1
 803aac4:	4413      	add	r3, r2
 803aac6:	e7f1      	b.n	803aaac <_tx_timer_system_activate+0x24>
 803aac8:	e9c0 0004 	strd	r0, r0, [r0, #16]
 803aacc:	6018      	str	r0, [r3, #0]
 803aace:	e7f4      	b.n	803aaba <_tx_timer_system_activate+0x32>
 803aad0:	20012310 	.word	0x20012310
 803aad4:	200123a0 	.word	0x200123a0
 803aad8:	200123a4 	.word	0x200123a4

0803aadc <_tx_timer_system_deactivate>:
 803aadc:	6983      	ldr	r3, [r0, #24]
 803aade:	b163      	cbz	r3, 803aafa <_tx_timer_system_deactivate+0x1e>
 803aae0:	6902      	ldr	r2, [r0, #16]
 803aae2:	4290      	cmp	r0, r2
 803aae4:	d00a      	beq.n	803aafc <_tx_timer_system_deactivate+0x20>
 803aae6:	6941      	ldr	r1, [r0, #20]
 803aae8:	6151      	str	r1, [r2, #20]
 803aaea:	610a      	str	r2, [r1, #16]
 803aaec:	6819      	ldr	r1, [r3, #0]
 803aaee:	4281      	cmp	r1, r0
 803aaf0:	bf04      	itt	eq
 803aaf2:	6193      	streq	r3, [r2, #24]
 803aaf4:	601a      	streq	r2, [r3, #0]
 803aaf6:	2300      	movs	r3, #0
 803aaf8:	6183      	str	r3, [r0, #24]
 803aafa:	4770      	bx	lr
 803aafc:	681a      	ldr	r2, [r3, #0]
 803aafe:	4282      	cmp	r2, r0
 803ab00:	d1f9      	bne.n	803aaf6 <_tx_timer_system_deactivate+0x1a>
 803ab02:	2200      	movs	r2, #0
 803ab04:	601a      	str	r2, [r3, #0]
 803ab06:	e7f6      	b.n	803aaf6 <_tx_timer_system_deactivate+0x1a>

0803ab08 <NVIC_Init>:
 803ab08:	b538      	push	{r3, r4, r5, lr}
 803ab0a:	78c3      	ldrb	r3, [r0, #3]
 803ab0c:	2b01      	cmp	r3, #1
 803ab0e:	4604      	mov	r4, r0
 803ab10:	d903      	bls.n	803ab1a <NVIC_Init+0x12>
 803ab12:	4822      	ldr	r0, [pc, #136]	; (803ab9c <NVIC_Init+0x94>)
 803ab14:	218d      	movs	r1, #141	; 0x8d
 803ab16:	f7e7 feb9 	bl	802288c <assert_failed>
 803ab1a:	7863      	ldrb	r3, [r4, #1]
 803ab1c:	2b0f      	cmp	r3, #15
 803ab1e:	d830      	bhi.n	803ab82 <NVIC_Init+0x7a>
 803ab20:	78a3      	ldrb	r3, [r4, #2]
 803ab22:	2b0f      	cmp	r3, #15
 803ab24:	d834      	bhi.n	803ab90 <NVIC_Init+0x88>
 803ab26:	78e3      	ldrb	r3, [r4, #3]
 803ab28:	b1fb      	cbz	r3, 803ab6a <NVIC_Init+0x62>
 803ab2a:	4a1d      	ldr	r2, [pc, #116]	; (803aba0 <NVIC_Init+0x98>)
 803ab2c:	7820      	ldrb	r0, [r4, #0]
 803ab2e:	68d1      	ldr	r1, [r2, #12]
 803ab30:	7863      	ldrb	r3, [r4, #1]
 803ab32:	78a2      	ldrb	r2, [r4, #2]
 803ab34:	4d1b      	ldr	r5, [pc, #108]	; (803aba4 <NVIC_Init+0x9c>)
 803ab36:	43c9      	mvns	r1, r1
 803ab38:	f3c1 2102 	ubfx	r1, r1, #8, #3
 803ab3c:	f1c1 0404 	rsb	r4, r1, #4
 803ab40:	b2e4      	uxtb	r4, r4
 803ab42:	fa03 f404 	lsl.w	r4, r3, r4
 803ab46:	230f      	movs	r3, #15
 803ab48:	410b      	asrs	r3, r1
 803ab4a:	b2e4      	uxtb	r4, r4
 803ab4c:	4013      	ands	r3, r2
 803ab4e:	4323      	orrs	r3, r4
 803ab50:	1829      	adds	r1, r5, r0
 803ab52:	011b      	lsls	r3, r3, #4
 803ab54:	f000 041f 	and.w	r4, r0, #31
 803ab58:	2201      	movs	r2, #1
 803ab5a:	0940      	lsrs	r0, r0, #5
 803ab5c:	b2db      	uxtb	r3, r3
 803ab5e:	40a2      	lsls	r2, r4
 803ab60:	f881 3300 	strb.w	r3, [r1, #768]	; 0x300
 803ab64:	f845 2020 	str.w	r2, [r5, r0, lsl #2]
 803ab68:	bd38      	pop	{r3, r4, r5, pc}
 803ab6a:	7823      	ldrb	r3, [r4, #0]
 803ab6c:	480d      	ldr	r0, [pc, #52]	; (803aba4 <NVIC_Init+0x9c>)
 803ab6e:	095a      	lsrs	r2, r3, #5
 803ab70:	3220      	adds	r2, #32
 803ab72:	f003 031f 	and.w	r3, r3, #31
 803ab76:	2101      	movs	r1, #1
 803ab78:	fa01 f303 	lsl.w	r3, r1, r3
 803ab7c:	f840 3022 	str.w	r3, [r0, r2, lsl #2]
 803ab80:	bd38      	pop	{r3, r4, r5, pc}
 803ab82:	4806      	ldr	r0, [pc, #24]	; (803ab9c <NVIC_Init+0x94>)
 803ab84:	218e      	movs	r1, #142	; 0x8e
 803ab86:	f7e7 fe81 	bl	802288c <assert_failed>
 803ab8a:	78a3      	ldrb	r3, [r4, #2]
 803ab8c:	2b0f      	cmp	r3, #15
 803ab8e:	d9ca      	bls.n	803ab26 <NVIC_Init+0x1e>
 803ab90:	4802      	ldr	r0, [pc, #8]	; (803ab9c <NVIC_Init+0x94>)
 803ab92:	218f      	movs	r1, #143	; 0x8f
 803ab94:	f7e7 fe7a 	bl	802288c <assert_failed>
 803ab98:	e7c5      	b.n	803ab26 <NVIC_Init+0x1e>
 803ab9a:	bf00      	nop
 803ab9c:	08048ac8 	.word	0x08048ac8
 803aba0:	e000ed00 	.word	0xe000ed00
 803aba4:	e000e100 	.word	0xe000e100

0803aba8 <CAN_Init>:
 803aba8:	4b70      	ldr	r3, [pc, #448]	; (803ad6c <CAN_Init+0x1c4>)
 803abaa:	4298      	cmp	r0, r3
 803abac:	b570      	push	{r4, r5, r6, lr}
 803abae:	4604      	mov	r4, r0
 803abb0:	460d      	mov	r5, r1
 803abb2:	d007      	beq.n	803abc4 <CAN_Init+0x1c>
 803abb4:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 803abb8:	4298      	cmp	r0, r3
 803abba:	d003      	beq.n	803abc4 <CAN_Init+0x1c>
 803abbc:	486c      	ldr	r0, [pc, #432]	; (803ad70 <CAN_Init+0x1c8>)
 803abbe:	21dd      	movs	r1, #221	; 0xdd
 803abc0:	f7e7 fe64 	bl	802288c <assert_failed>
 803abc4:	79ab      	ldrb	r3, [r5, #6]
 803abc6:	2b01      	cmp	r3, #1
 803abc8:	d903      	bls.n	803abd2 <CAN_Init+0x2a>
 803abca:	4869      	ldr	r0, [pc, #420]	; (803ad70 <CAN_Init+0x1c8>)
 803abcc:	21de      	movs	r1, #222	; 0xde
 803abce:	f7e7 fe5d 	bl	802288c <assert_failed>
 803abd2:	79eb      	ldrb	r3, [r5, #7]
 803abd4:	2b01      	cmp	r3, #1
 803abd6:	d903      	bls.n	803abe0 <CAN_Init+0x38>
 803abd8:	4865      	ldr	r0, [pc, #404]	; (803ad70 <CAN_Init+0x1c8>)
 803abda:	21df      	movs	r1, #223	; 0xdf
 803abdc:	f7e7 fe56 	bl	802288c <assert_failed>
 803abe0:	7a2b      	ldrb	r3, [r5, #8]
 803abe2:	2b01      	cmp	r3, #1
 803abe4:	d903      	bls.n	803abee <CAN_Init+0x46>
 803abe6:	4862      	ldr	r0, [pc, #392]	; (803ad70 <CAN_Init+0x1c8>)
 803abe8:	21e0      	movs	r1, #224	; 0xe0
 803abea:	f7e7 fe4f 	bl	802288c <assert_failed>
 803abee:	7a6b      	ldrb	r3, [r5, #9]
 803abf0:	2b01      	cmp	r3, #1
 803abf2:	d903      	bls.n	803abfc <CAN_Init+0x54>
 803abf4:	485e      	ldr	r0, [pc, #376]	; (803ad70 <CAN_Init+0x1c8>)
 803abf6:	21e1      	movs	r1, #225	; 0xe1
 803abf8:	f7e7 fe48 	bl	802288c <assert_failed>
 803abfc:	7aab      	ldrb	r3, [r5, #10]
 803abfe:	2b01      	cmp	r3, #1
 803ac00:	d903      	bls.n	803ac0a <CAN_Init+0x62>
 803ac02:	485b      	ldr	r0, [pc, #364]	; (803ad70 <CAN_Init+0x1c8>)
 803ac04:	21e2      	movs	r1, #226	; 0xe2
 803ac06:	f7e7 fe41 	bl	802288c <assert_failed>
 803ac0a:	7aeb      	ldrb	r3, [r5, #11]
 803ac0c:	2b01      	cmp	r3, #1
 803ac0e:	d903      	bls.n	803ac18 <CAN_Init+0x70>
 803ac10:	4857      	ldr	r0, [pc, #348]	; (803ad70 <CAN_Init+0x1c8>)
 803ac12:	21e3      	movs	r1, #227	; 0xe3
 803ac14:	f7e7 fe3a 	bl	802288c <assert_failed>
 803ac18:	78ab      	ldrb	r3, [r5, #2]
 803ac1a:	2b03      	cmp	r3, #3
 803ac1c:	f200 8083 	bhi.w	803ad26 <CAN_Init+0x17e>
 803ac20:	78eb      	ldrb	r3, [r5, #3]
 803ac22:	2b03      	cmp	r3, #3
 803ac24:	f200 8087 	bhi.w	803ad36 <CAN_Init+0x18e>
 803ac28:	792b      	ldrb	r3, [r5, #4]
 803ac2a:	2b0f      	cmp	r3, #15
 803ac2c:	f200 808b 	bhi.w	803ad46 <CAN_Init+0x19e>
 803ac30:	796b      	ldrb	r3, [r5, #5]
 803ac32:	2b07      	cmp	r3, #7
 803ac34:	f200 808f 	bhi.w	803ad56 <CAN_Init+0x1ae>
 803ac38:	882b      	ldrh	r3, [r5, #0]
 803ac3a:	3b01      	subs	r3, #1
 803ac3c:	b29b      	uxth	r3, r3
 803ac3e:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 803ac42:	f080 808d 	bcs.w	803ad60 <CAN_Init+0x1b8>
 803ac46:	6823      	ldr	r3, [r4, #0]
 803ac48:	f023 0302 	bic.w	r3, r3, #2
 803ac4c:	6023      	str	r3, [r4, #0]
 803ac4e:	6823      	ldr	r3, [r4, #0]
 803ac50:	f043 0301 	orr.w	r3, r3, #1
 803ac54:	6023      	str	r3, [r4, #0]
 803ac56:	6863      	ldr	r3, [r4, #4]
 803ac58:	07de      	lsls	r6, r3, #31
 803ac5a:	d407      	bmi.n	803ac6c <CAN_Init+0xc4>
 803ac5c:	f64f 73ff 	movw	r3, #65535	; 0xffff
 803ac60:	e001      	b.n	803ac66 <CAN_Init+0xbe>
 803ac62:	3b01      	subs	r3, #1
 803ac64:	d002      	beq.n	803ac6c <CAN_Init+0xc4>
 803ac66:	6862      	ldr	r2, [r4, #4]
 803ac68:	07d0      	lsls	r0, r2, #31
 803ac6a:	d5fa      	bpl.n	803ac62 <CAN_Init+0xba>
 803ac6c:	6860      	ldr	r0, [r4, #4]
 803ac6e:	f010 0001 	ands.w	r0, r0, #1
 803ac72:	d057      	beq.n	803ad24 <CAN_Init+0x17c>
 803ac74:	79ab      	ldrb	r3, [r5, #6]
 803ac76:	882a      	ldrh	r2, [r5, #0]
 803ac78:	2b01      	cmp	r3, #1
 803ac7a:	6823      	ldr	r3, [r4, #0]
 803ac7c:	bf0c      	ite	eq
 803ac7e:	f043 0380 	orreq.w	r3, r3, #128	; 0x80
 803ac82:	f023 0380 	bicne.w	r3, r3, #128	; 0x80
 803ac86:	6023      	str	r3, [r4, #0]
 803ac88:	79eb      	ldrb	r3, [r5, #7]
 803ac8a:	2b01      	cmp	r3, #1
 803ac8c:	6823      	ldr	r3, [r4, #0]
 803ac8e:	bf0c      	ite	eq
 803ac90:	f043 0340 	orreq.w	r3, r3, #64	; 0x40
 803ac94:	f023 0340 	bicne.w	r3, r3, #64	; 0x40
 803ac98:	6023      	str	r3, [r4, #0]
 803ac9a:	7a2b      	ldrb	r3, [r5, #8]
 803ac9c:	2b01      	cmp	r3, #1
 803ac9e:	6823      	ldr	r3, [r4, #0]
 803aca0:	bf0c      	ite	eq
 803aca2:	f043 0320 	orreq.w	r3, r3, #32
 803aca6:	f023 0320 	bicne.w	r3, r3, #32
 803acaa:	6023      	str	r3, [r4, #0]
 803acac:	7a6b      	ldrb	r3, [r5, #9]
 803acae:	2b01      	cmp	r3, #1
 803acb0:	6823      	ldr	r3, [r4, #0]
 803acb2:	bf0c      	ite	eq
 803acb4:	f043 0310 	orreq.w	r3, r3, #16
 803acb8:	f023 0310 	bicne.w	r3, r3, #16
 803acbc:	6023      	str	r3, [r4, #0]
 803acbe:	7aab      	ldrb	r3, [r5, #10]
 803acc0:	2b01      	cmp	r3, #1
 803acc2:	6823      	ldr	r3, [r4, #0]
 803acc4:	bf0c      	ite	eq
 803acc6:	f043 0308 	orreq.w	r3, r3, #8
 803acca:	f023 0308 	bicne.w	r3, r3, #8
 803acce:	6023      	str	r3, [r4, #0]
 803acd0:	7aeb      	ldrb	r3, [r5, #11]
 803acd2:	2b01      	cmp	r3, #1
 803acd4:	6823      	ldr	r3, [r4, #0]
 803acd6:	bf0c      	ite	eq
 803acd8:	f043 0304 	orreq.w	r3, r3, #4
 803acdc:	f023 0304 	bicne.w	r3, r3, #4
 803ace0:	6023      	str	r3, [r4, #0]
 803ace2:	78eb      	ldrb	r3, [r5, #3]
 803ace4:	78ae      	ldrb	r6, [r5, #2]
 803ace6:	7928      	ldrb	r0, [r5, #4]
 803ace8:	7969      	ldrb	r1, [r5, #5]
 803acea:	061b      	lsls	r3, r3, #24
 803acec:	ea43 7386 	orr.w	r3, r3, r6, lsl #30
 803acf0:	ea43 4300 	orr.w	r3, r3, r0, lsl #16
 803acf4:	ea43 5301 	orr.w	r3, r3, r1, lsl #20
 803acf8:	3a01      	subs	r2, #1
 803acfa:	4313      	orrs	r3, r2
 803acfc:	61e3      	str	r3, [r4, #28]
 803acfe:	6823      	ldr	r3, [r4, #0]
 803ad00:	f023 0301 	bic.w	r3, r3, #1
 803ad04:	6023      	str	r3, [r4, #0]
 803ad06:	6863      	ldr	r3, [r4, #4]
 803ad08:	07d9      	lsls	r1, r3, #31
 803ad0a:	d507      	bpl.n	803ad1c <CAN_Init+0x174>
 803ad0c:	f64f 73ff 	movw	r3, #65535	; 0xffff
 803ad10:	e001      	b.n	803ad16 <CAN_Init+0x16e>
 803ad12:	3b01      	subs	r3, #1
 803ad14:	d002      	beq.n	803ad1c <CAN_Init+0x174>
 803ad16:	6862      	ldr	r2, [r4, #4]
 803ad18:	07d2      	lsls	r2, r2, #31
 803ad1a:	d4fa      	bmi.n	803ad12 <CAN_Init+0x16a>
 803ad1c:	6860      	ldr	r0, [r4, #4]
 803ad1e:	43c0      	mvns	r0, r0
 803ad20:	f000 0001 	and.w	r0, r0, #1
 803ad24:	bd70      	pop	{r4, r5, r6, pc}
 803ad26:	4812      	ldr	r0, [pc, #72]	; (803ad70 <CAN_Init+0x1c8>)
 803ad28:	21e4      	movs	r1, #228	; 0xe4
 803ad2a:	f7e7 fdaf 	bl	802288c <assert_failed>
 803ad2e:	78eb      	ldrb	r3, [r5, #3]
 803ad30:	2b03      	cmp	r3, #3
 803ad32:	f67f af79 	bls.w	803ac28 <CAN_Init+0x80>
 803ad36:	480e      	ldr	r0, [pc, #56]	; (803ad70 <CAN_Init+0x1c8>)
 803ad38:	21e5      	movs	r1, #229	; 0xe5
 803ad3a:	f7e7 fda7 	bl	802288c <assert_failed>
 803ad3e:	792b      	ldrb	r3, [r5, #4]
 803ad40:	2b0f      	cmp	r3, #15
 803ad42:	f67f af75 	bls.w	803ac30 <CAN_Init+0x88>
 803ad46:	480a      	ldr	r0, [pc, #40]	; (803ad70 <CAN_Init+0x1c8>)
 803ad48:	21e6      	movs	r1, #230	; 0xe6
 803ad4a:	f7e7 fd9f 	bl	802288c <assert_failed>
 803ad4e:	796b      	ldrb	r3, [r5, #5]
 803ad50:	2b07      	cmp	r3, #7
 803ad52:	f67f af71 	bls.w	803ac38 <CAN_Init+0x90>
 803ad56:	4806      	ldr	r0, [pc, #24]	; (803ad70 <CAN_Init+0x1c8>)
 803ad58:	21e7      	movs	r1, #231	; 0xe7
 803ad5a:	f7e7 fd97 	bl	802288c <assert_failed>
 803ad5e:	e76b      	b.n	803ac38 <CAN_Init+0x90>
 803ad60:	4803      	ldr	r0, [pc, #12]	; (803ad70 <CAN_Init+0x1c8>)
 803ad62:	21e8      	movs	r1, #232	; 0xe8
 803ad64:	f7e7 fd92 	bl	802288c <assert_failed>
 803ad68:	e76d      	b.n	803ac46 <CAN_Init+0x9e>
 803ad6a:	bf00      	nop
 803ad6c:	40006400 	.word	0x40006400
 803ad70:	08048b44 	.word	0x08048b44

0803ad74 <CAN_FilterInit>:
 803ad74:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 803ad76:	7a83      	ldrb	r3, [r0, #10]
 803ad78:	2b1b      	cmp	r3, #27
 803ad7a:	4604      	mov	r4, r0
 803ad7c:	f200 8099 	bhi.w	803aeb2 <CAN_FilterInit+0x13e>
 803ad80:	7ae3      	ldrb	r3, [r4, #11]
 803ad82:	2b01      	cmp	r3, #1
 803ad84:	d904      	bls.n	803ad90 <CAN_FilterInit+0x1c>
 803ad86:	484e      	ldr	r0, [pc, #312]	; (803aec0 <CAN_FilterInit+0x14c>)
 803ad88:	f240 11c5 	movw	r1, #453	; 0x1c5
 803ad8c:	f7e7 fd7e 	bl	802288c <assert_failed>
 803ad90:	7b23      	ldrb	r3, [r4, #12]
 803ad92:	2b01      	cmp	r3, #1
 803ad94:	d904      	bls.n	803ada0 <CAN_FilterInit+0x2c>
 803ad96:	484a      	ldr	r0, [pc, #296]	; (803aec0 <CAN_FilterInit+0x14c>)
 803ad98:	f44f 71e3 	mov.w	r1, #454	; 0x1c6
 803ad9c:	f7e7 fd76 	bl	802288c <assert_failed>
 803ada0:	8923      	ldrh	r3, [r4, #8]
 803ada2:	2b01      	cmp	r3, #1
 803ada4:	d904      	bls.n	803adb0 <CAN_FilterInit+0x3c>
 803ada6:	4846      	ldr	r0, [pc, #280]	; (803aec0 <CAN_FilterInit+0x14c>)
 803ada8:	f240 11c7 	movw	r1, #455	; 0x1c7
 803adac:	f7e7 fd6e 	bl	802288c <assert_failed>
 803adb0:	7b65      	ldrb	r5, [r4, #13]
 803adb2:	2d01      	cmp	r5, #1
 803adb4:	d905      	bls.n	803adc2 <CAN_FilterInit+0x4e>
 803adb6:	4842      	ldr	r0, [pc, #264]	; (803aec0 <CAN_FilterInit+0x14c>)
 803adb8:	f44f 71e4 	mov.w	r1, #456	; 0x1c8
 803adbc:	f7e7 fd66 	bl	802288c <assert_failed>
 803adc0:	7b65      	ldrb	r5, [r4, #13]
 803adc2:	4a40      	ldr	r2, [pc, #256]	; (803aec4 <CAN_FilterInit+0x150>)
 803adc4:	7aa3      	ldrb	r3, [r4, #10]
 803adc6:	f8d2 1200 	ldr.w	r1, [r2, #512]	; 0x200
 803adca:	f041 0101 	orr.w	r1, r1, #1
 803adce:	f8c2 1200 	str.w	r1, [r2, #512]	; 0x200
 803add2:	f8d2 021c 	ldr.w	r0, [r2, #540]	; 0x21c
 803add6:	2101      	movs	r1, #1
 803add8:	4099      	lsls	r1, r3
 803adda:	ea20 0001 	bic.w	r0, r0, r1
 803adde:	f8c2 021c 	str.w	r0, [r2, #540]	; 0x21c
 803ade2:	7b26      	ldrb	r6, [r4, #12]
 803ade4:	43c8      	mvns	r0, r1
 803ade6:	2e00      	cmp	r6, #0
 803ade8:	d148      	bne.n	803ae7c <CAN_FilterInit+0x108>
 803adea:	f8d2 720c 	ldr.w	r7, [r2, #524]	; 0x20c
 803adee:	f8b4 e006 	ldrh.w	lr, [r4, #6]
 803adf2:	8866      	ldrh	r6, [r4, #2]
 803adf4:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 803adf8:	00db      	lsls	r3, r3, #3
 803adfa:	4007      	ands	r7, r0
 803adfc:	f8c2 720c 	str.w	r7, [r2, #524]	; 0x20c
 803ae00:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 803ae04:	8822      	ldrh	r2, [r4, #0]
 803ae06:	f503 43c8 	add.w	r3, r3, #25600	; 0x6400
 803ae0a:	ea46 460e 	orr.w	r6, r6, lr, lsl #16
 803ae0e:	ea42 420c 	orr.w	r2, r2, ip, lsl #16
 803ae12:	f8c3 6240 	str.w	r6, [r3, #576]	; 0x240
 803ae16:	f8c3 2244 	str.w	r2, [r3, #580]	; 0x244
 803ae1a:	7ae3      	ldrb	r3, [r4, #11]
 803ae1c:	4a29      	ldr	r2, [pc, #164]	; (803aec4 <CAN_FilterInit+0x150>)
 803ae1e:	b9e3      	cbnz	r3, 803ae5a <CAN_FilterInit+0xe6>
 803ae20:	f8d2 3204 	ldr.w	r3, [r2, #516]	; 0x204
 803ae24:	4003      	ands	r3, r0
 803ae26:	f8c2 3204 	str.w	r3, [r2, #516]	; 0x204
 803ae2a:	8923      	ldrh	r3, [r4, #8]
 803ae2c:	b9eb      	cbnz	r3, 803ae6a <CAN_FilterInit+0xf6>
 803ae2e:	4b25      	ldr	r3, [pc, #148]	; (803aec4 <CAN_FilterInit+0x150>)
 803ae30:	f8d3 2214 	ldr.w	r2, [r3, #532]	; 0x214
 803ae34:	4010      	ands	r0, r2
 803ae36:	f8c3 0214 	str.w	r0, [r3, #532]	; 0x214
 803ae3a:	2d01      	cmp	r5, #1
 803ae3c:	d105      	bne.n	803ae4a <CAN_FilterInit+0xd6>
 803ae3e:	4a21      	ldr	r2, [pc, #132]	; (803aec4 <CAN_FilterInit+0x150>)
 803ae40:	f8d2 321c 	ldr.w	r3, [r2, #540]	; 0x21c
 803ae44:	4319      	orrs	r1, r3
 803ae46:	f8c2 121c 	str.w	r1, [r2, #540]	; 0x21c
 803ae4a:	4a1e      	ldr	r2, [pc, #120]	; (803aec4 <CAN_FilterInit+0x150>)
 803ae4c:	f8d2 3200 	ldr.w	r3, [r2, #512]	; 0x200
 803ae50:	f023 0301 	bic.w	r3, r3, #1
 803ae54:	f8c2 3200 	str.w	r3, [r2, #512]	; 0x200
 803ae58:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 803ae5a:	f8d2 3204 	ldr.w	r3, [r2, #516]	; 0x204
 803ae5e:	430b      	orrs	r3, r1
 803ae60:	f8c2 3204 	str.w	r3, [r2, #516]	; 0x204
 803ae64:	8923      	ldrh	r3, [r4, #8]
 803ae66:	2b00      	cmp	r3, #0
 803ae68:	d0e1      	beq.n	803ae2e <CAN_FilterInit+0xba>
 803ae6a:	2b01      	cmp	r3, #1
 803ae6c:	d1e5      	bne.n	803ae3a <CAN_FilterInit+0xc6>
 803ae6e:	4a15      	ldr	r2, [pc, #84]	; (803aec4 <CAN_FilterInit+0x150>)
 803ae70:	f8d2 3214 	ldr.w	r3, [r2, #532]	; 0x214
 803ae74:	430b      	orrs	r3, r1
 803ae76:	f8c2 3214 	str.w	r3, [r2, #532]	; 0x214
 803ae7a:	e7de      	b.n	803ae3a <CAN_FilterInit+0xc6>
 803ae7c:	2e01      	cmp	r6, #1
 803ae7e:	d1cc      	bne.n	803ae1a <CAN_FilterInit+0xa6>
 803ae80:	f8d2 720c 	ldr.w	r7, [r2, #524]	; 0x20c
 803ae84:	f8b4 e000 	ldrh.w	lr, [r4]
 803ae88:	8866      	ldrh	r6, [r4, #2]
 803ae8a:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 803ae8e:	00db      	lsls	r3, r3, #3
 803ae90:	430f      	orrs	r7, r1
 803ae92:	f8c2 720c 	str.w	r7, [r2, #524]	; 0x20c
 803ae96:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 803ae9a:	88e2      	ldrh	r2, [r4, #6]
 803ae9c:	f503 43c8 	add.w	r3, r3, #25600	; 0x6400
 803aea0:	ea46 460e 	orr.w	r6, r6, lr, lsl #16
 803aea4:	ea42 420c 	orr.w	r2, r2, ip, lsl #16
 803aea8:	f8c3 6240 	str.w	r6, [r3, #576]	; 0x240
 803aeac:	f8c3 2244 	str.w	r2, [r3, #580]	; 0x244
 803aeb0:	e7b3      	b.n	803ae1a <CAN_FilterInit+0xa6>
 803aeb2:	4803      	ldr	r0, [pc, #12]	; (803aec0 <CAN_FilterInit+0x14c>)
 803aeb4:	f44f 71e2 	mov.w	r1, #452	; 0x1c4
 803aeb8:	f7e7 fce8 	bl	802288c <assert_failed>
 803aebc:	e760      	b.n	803ad80 <CAN_FilterInit+0xc>
 803aebe:	bf00      	nop
 803aec0:	08048b44 	.word	0x08048b44
 803aec4:	40006400 	.word	0x40006400

0803aec8 <CAN_SlaveStartBank>:
 803aec8:	1e43      	subs	r3, r0, #1
 803aeca:	2b1a      	cmp	r3, #26
 803aecc:	b510      	push	{r4, lr}
 803aece:	4604      	mov	r4, r0
 803aed0:	d81b      	bhi.n	803af0a <CAN_SlaveStartBank+0x42>
 803aed2:	4b11      	ldr	r3, [pc, #68]	; (803af18 <CAN_SlaveStartBank+0x50>)
 803aed4:	f8d3 2200 	ldr.w	r2, [r3, #512]	; 0x200
 803aed8:	f042 0201 	orr.w	r2, r2, #1
 803aedc:	f8c3 2200 	str.w	r2, [r3, #512]	; 0x200
 803aee0:	f8d3 2200 	ldr.w	r2, [r3, #512]	; 0x200
 803aee4:	f422 527c 	bic.w	r2, r2, #16128	; 0x3f00
 803aee8:	f022 020e 	bic.w	r2, r2, #14
 803aeec:	f8c3 2200 	str.w	r2, [r3, #512]	; 0x200
 803aef0:	f8d3 0200 	ldr.w	r0, [r3, #512]	; 0x200
 803aef4:	ea40 2404 	orr.w	r4, r0, r4, lsl #8
 803aef8:	f8c3 4200 	str.w	r4, [r3, #512]	; 0x200
 803aefc:	f8d3 2200 	ldr.w	r2, [r3, #512]	; 0x200
 803af00:	f022 0201 	bic.w	r2, r2, #1
 803af04:	f8c3 2200 	str.w	r2, [r3, #512]	; 0x200
 803af08:	bd10      	pop	{r4, pc}
 803af0a:	4804      	ldr	r0, [pc, #16]	; (803af1c <CAN_SlaveStartBank+0x54>)
 803af0c:	f240 2161 	movw	r1, #609	; 0x261
 803af10:	f7e7 fcbc 	bl	802288c <assert_failed>
 803af14:	e7dd      	b.n	803aed2 <CAN_SlaveStartBank+0xa>
 803af16:	bf00      	nop
 803af18:	40006400 	.word	0x40006400
 803af1c:	08048b44 	.word	0x08048b44

0803af20 <CAN_Transmit>:
 803af20:	4b49      	ldr	r3, [pc, #292]	; (803b048 <CAN_Transmit+0x128>)
 803af22:	4298      	cmp	r0, r3
 803af24:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 803af28:	4605      	mov	r5, r0
 803af2a:	460c      	mov	r4, r1
 803af2c:	d008      	beq.n	803af40 <CAN_Transmit+0x20>
 803af2e:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 803af32:	4298      	cmp	r0, r3
 803af34:	d004      	beq.n	803af40 <CAN_Transmit+0x20>
 803af36:	4845      	ldr	r0, [pc, #276]	; (803b04c <CAN_Transmit+0x12c>)
 803af38:	f240 21d2 	movw	r1, #722	; 0x2d2
 803af3c:	f7e7 fca6 	bl	802288c <assert_failed>
 803af40:	7a23      	ldrb	r3, [r4, #8]
 803af42:	f013 0ffb 	tst.w	r3, #251	; 0xfb
 803af46:	d004      	beq.n	803af52 <CAN_Transmit+0x32>
 803af48:	4840      	ldr	r0, [pc, #256]	; (803b04c <CAN_Transmit+0x12c>)
 803af4a:	f240 21d3 	movw	r1, #723	; 0x2d3
 803af4e:	f7e7 fc9d 	bl	802288c <assert_failed>
 803af52:	7a63      	ldrb	r3, [r4, #9]
 803af54:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 803af58:	d004      	beq.n	803af64 <CAN_Transmit+0x44>
 803af5a:	483c      	ldr	r0, [pc, #240]	; (803b04c <CAN_Transmit+0x12c>)
 803af5c:	f44f 7135 	mov.w	r1, #724	; 0x2d4
 803af60:	f7e7 fc94 	bl	802288c <assert_failed>
 803af64:	7aa3      	ldrb	r3, [r4, #10]
 803af66:	2b08      	cmp	r3, #8
 803af68:	d856      	bhi.n	803b018 <CAN_Transmit+0xf8>
 803af6a:	68ab      	ldr	r3, [r5, #8]
 803af6c:	0159      	lsls	r1, r3, #5
 803af6e:	d405      	bmi.n	803af7c <CAN_Transmit+0x5c>
 803af70:	68ab      	ldr	r3, [r5, #8]
 803af72:	011a      	lsls	r2, r3, #4
 803af74:	d54a      	bpl.n	803b00c <CAN_Transmit+0xec>
 803af76:	2701      	movs	r7, #1
 803af78:	46b8      	mov	r8, r7
 803af7a:	e001      	b.n	803af80 <CAN_Transmit+0x60>
 803af7c:	2700      	movs	r7, #0
 803af7e:	46b8      	mov	r8, r7
 803af80:	eb05 1607 	add.w	r6, r5, r7, lsl #4
 803af84:	013f      	lsls	r7, r7, #4
 803af86:	f8d6 3180 	ldr.w	r3, [r6, #384]	; 0x180
 803af8a:	f003 0301 	and.w	r3, r3, #1
 803af8e:	f8c6 3180 	str.w	r3, [r6, #384]	; 0x180
 803af92:	7a22      	ldrb	r2, [r4, #8]
 803af94:	b36a      	cbz	r2, 803aff2 <CAN_Transmit+0xd2>
 803af96:	6861      	ldr	r1, [r4, #4]
 803af98:	f1b1 5f00 	cmp.w	r1, #536870912	; 0x20000000
 803af9c:	d24c      	bcs.n	803b038 <CAN_Transmit+0x118>
 803af9e:	f8d6 0180 	ldr.w	r0, [r6, #384]	; 0x180
 803afa2:	7a63      	ldrb	r3, [r4, #9]
 803afa4:	4303      	orrs	r3, r0
 803afa6:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
 803afaa:	4313      	orrs	r3, r2
 803afac:	f8c6 3180 	str.w	r3, [r6, #384]	; 0x180
 803afb0:	7aa3      	ldrb	r3, [r4, #10]
 803afb2:	f003 030f 	and.w	r3, r3, #15
 803afb6:	72a3      	strb	r3, [r4, #10]
 803afb8:	f8d6 2184 	ldr.w	r2, [r6, #388]	; 0x184
 803afbc:	f022 020f 	bic.w	r2, r2, #15
 803afc0:	f8c6 2184 	str.w	r2, [r6, #388]	; 0x184
 803afc4:	f8d6 2184 	ldr.w	r2, [r6, #388]	; 0x184
 803afc8:	4313      	orrs	r3, r2
 803afca:	f8c6 3184 	str.w	r3, [r6, #388]	; 0x184
 803afce:	443d      	add	r5, r7
 803afd0:	f8d4 300b 	ldr.w	r3, [r4, #11]
 803afd4:	f8c5 3188 	str.w	r3, [r5, #392]	; 0x188
 803afd8:	f8d4 300f 	ldr.w	r3, [r4, #15]
 803afdc:	f8c5 318c 	str.w	r3, [r5, #396]	; 0x18c
 803afe0:	f8d6 3180 	ldr.w	r3, [r6, #384]	; 0x180
 803afe4:	f043 0301 	orr.w	r3, r3, #1
 803afe8:	f8c6 3180 	str.w	r3, [r6, #384]	; 0x180
 803afec:	4640      	mov	r0, r8
 803afee:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 803aff2:	6822      	ldr	r2, [r4, #0]
 803aff4:	f5b2 6f00 	cmp.w	r2, #2048	; 0x800
 803aff8:	d217      	bcs.n	803b02a <CAN_Transmit+0x10a>
 803affa:	f8d6 1180 	ldr.w	r1, [r6, #384]	; 0x180
 803affe:	7a63      	ldrb	r3, [r4, #9]
 803b000:	430b      	orrs	r3, r1
 803b002:	ea43 5342 	orr.w	r3, r3, r2, lsl #21
 803b006:	f8c6 3180 	str.w	r3, [r6, #384]	; 0x180
 803b00a:	e7d1      	b.n	803afb0 <CAN_Transmit+0x90>
 803b00c:	68ab      	ldr	r3, [r5, #8]
 803b00e:	00db      	lsls	r3, r3, #3
 803b010:	d508      	bpl.n	803b024 <CAN_Transmit+0x104>
 803b012:	2702      	movs	r7, #2
 803b014:	46b8      	mov	r8, r7
 803b016:	e7b3      	b.n	803af80 <CAN_Transmit+0x60>
 803b018:	480c      	ldr	r0, [pc, #48]	; (803b04c <CAN_Transmit+0x12c>)
 803b01a:	f240 21d5 	movw	r1, #725	; 0x2d5
 803b01e:	f7e7 fc35 	bl	802288c <assert_failed>
 803b022:	e7a2      	b.n	803af6a <CAN_Transmit+0x4a>
 803b024:	f04f 0804 	mov.w	r8, #4
 803b028:	e7e0      	b.n	803afec <CAN_Transmit+0xcc>
 803b02a:	4808      	ldr	r0, [pc, #32]	; (803b04c <CAN_Transmit+0x12c>)
 803b02c:	f240 21ef 	movw	r1, #751	; 0x2ef
 803b030:	f7e7 fc2c 	bl	802288c <assert_failed>
 803b034:	6822      	ldr	r2, [r4, #0]
 803b036:	e7e0      	b.n	803affa <CAN_Transmit+0xda>
 803b038:	f240 21f5 	movw	r1, #757	; 0x2f5
 803b03c:	4803      	ldr	r0, [pc, #12]	; (803b04c <CAN_Transmit+0x12c>)
 803b03e:	f7e7 fc25 	bl	802288c <assert_failed>
 803b042:	6861      	ldr	r1, [r4, #4]
 803b044:	7a22      	ldrb	r2, [r4, #8]
 803b046:	e7aa      	b.n	803af9e <CAN_Transmit+0x7e>
 803b048:	40006400 	.word	0x40006400
 803b04c:	08048b44 	.word	0x08048b44

0803b050 <CAN_Receive>:
 803b050:	4b30      	ldr	r3, [pc, #192]	; (803b114 <CAN_Receive+0xc4>)
 803b052:	4298      	cmp	r0, r3
 803b054:	b570      	push	{r4, r5, r6, lr}
 803b056:	4605      	mov	r5, r0
 803b058:	460e      	mov	r6, r1
 803b05a:	4614      	mov	r4, r2
 803b05c:	d008      	beq.n	803b070 <CAN_Receive+0x20>
 803b05e:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 803b062:	4298      	cmp	r0, r3
 803b064:	d004      	beq.n	803b070 <CAN_Receive+0x20>
 803b066:	482c      	ldr	r0, [pc, #176]	; (803b118 <CAN_Receive+0xc8>)
 803b068:	f240 3181 	movw	r1, #897	; 0x381
 803b06c:	f7e7 fc0e 	bl	802288c <assert_failed>
 803b070:	2e01      	cmp	r6, #1
 803b072:	d904      	bls.n	803b07e <CAN_Receive+0x2e>
 803b074:	4828      	ldr	r0, [pc, #160]	; (803b118 <CAN_Receive+0xc8>)
 803b076:	f240 3182 	movw	r1, #898	; 0x382
 803b07a:	f7e7 fc07 	bl	802288c <assert_failed>
 803b07e:	eb05 1306 	add.w	r3, r5, r6, lsl #4
 803b082:	f8d3 21b0 	ldr.w	r2, [r3, #432]	; 0x1b0
 803b086:	f002 0204 	and.w	r2, r2, #4
 803b08a:	7222      	strb	r2, [r4, #8]
 803b08c:	2a00      	cmp	r2, #0
 803b08e:	d13c      	bne.n	803b10a <CAN_Receive+0xba>
 803b090:	f8d3 21b0 	ldr.w	r2, [r3, #432]	; 0x1b0
 803b094:	0d52      	lsrs	r2, r2, #21
 803b096:	6022      	str	r2, [r4, #0]
 803b098:	f8d3 21b0 	ldr.w	r2, [r3, #432]	; 0x1b0
 803b09c:	f002 0202 	and.w	r2, r2, #2
 803b0a0:	7262      	strb	r2, [r4, #9]
 803b0a2:	f8d3 21b4 	ldr.w	r2, [r3, #436]	; 0x1b4
 803b0a6:	f002 020f 	and.w	r2, r2, #15
 803b0aa:	72a2      	strb	r2, [r4, #10]
 803b0ac:	f8d3 21b4 	ldr.w	r2, [r3, #436]	; 0x1b4
 803b0b0:	eb05 1306 	add.w	r3, r5, r6, lsl #4
 803b0b4:	0a12      	lsrs	r2, r2, #8
 803b0b6:	74e2      	strb	r2, [r4, #19]
 803b0b8:	f8d3 21b8 	ldr.w	r2, [r3, #440]	; 0x1b8
 803b0bc:	72e2      	strb	r2, [r4, #11]
 803b0be:	f8d3 21b8 	ldr.w	r2, [r3, #440]	; 0x1b8
 803b0c2:	0a12      	lsrs	r2, r2, #8
 803b0c4:	7322      	strb	r2, [r4, #12]
 803b0c6:	f8d3 21b8 	ldr.w	r2, [r3, #440]	; 0x1b8
 803b0ca:	0c12      	lsrs	r2, r2, #16
 803b0cc:	7362      	strb	r2, [r4, #13]
 803b0ce:	f8d3 21b8 	ldr.w	r2, [r3, #440]	; 0x1b8
 803b0d2:	0e12      	lsrs	r2, r2, #24
 803b0d4:	73a2      	strb	r2, [r4, #14]
 803b0d6:	f8d3 21bc 	ldr.w	r2, [r3, #444]	; 0x1bc
 803b0da:	73e2      	strb	r2, [r4, #15]
 803b0dc:	f8d3 21bc 	ldr.w	r2, [r3, #444]	; 0x1bc
 803b0e0:	0a12      	lsrs	r2, r2, #8
 803b0e2:	7422      	strb	r2, [r4, #16]
 803b0e4:	f8d3 21bc 	ldr.w	r2, [r3, #444]	; 0x1bc
 803b0e8:	0c12      	lsrs	r2, r2, #16
 803b0ea:	7462      	strb	r2, [r4, #17]
 803b0ec:	f8d3 31bc 	ldr.w	r3, [r3, #444]	; 0x1bc
 803b0f0:	0e1b      	lsrs	r3, r3, #24
 803b0f2:	74a3      	strb	r3, [r4, #18]
 803b0f4:	b926      	cbnz	r6, 803b100 <CAN_Receive+0xb0>
 803b0f6:	68eb      	ldr	r3, [r5, #12]
 803b0f8:	f043 0320 	orr.w	r3, r3, #32
 803b0fc:	60eb      	str	r3, [r5, #12]
 803b0fe:	bd70      	pop	{r4, r5, r6, pc}
 803b100:	692b      	ldr	r3, [r5, #16]
 803b102:	f043 0320 	orr.w	r3, r3, #32
 803b106:	612b      	str	r3, [r5, #16]
 803b108:	bd70      	pop	{r4, r5, r6, pc}
 803b10a:	f8d3 21b0 	ldr.w	r2, [r3, #432]	; 0x1b0
 803b10e:	08d2      	lsrs	r2, r2, #3
 803b110:	6062      	str	r2, [r4, #4]
 803b112:	e7c1      	b.n	803b098 <CAN_Receive+0x48>
 803b114:	40006400 	.word	0x40006400
 803b118:	08048b44 	.word	0x08048b44

0803b11c <CAN_ITConfig>:
 803b11c:	4b22      	ldr	r3, [pc, #136]	; (803b1a8 <CAN_ITConfig+0x8c>)
 803b11e:	4298      	cmp	r0, r3
 803b120:	b570      	push	{r4, r5, r6, lr}
 803b122:	4604      	mov	r4, r0
 803b124:	460d      	mov	r5, r1
 803b126:	4616      	mov	r6, r2
 803b128:	d008      	beq.n	803b13c <CAN_ITConfig+0x20>
 803b12a:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 803b12e:	4298      	cmp	r0, r3
 803b130:	d004      	beq.n	803b13c <CAN_ITConfig+0x20>
 803b132:	481e      	ldr	r0, [pc, #120]	; (803b1ac <CAN_ITConfig+0x90>)
 803b134:	f240 51a4 	movw	r1, #1444	; 0x5a4
 803b138:	f7e7 fba8 	bl	802288c <assert_failed>
 803b13c:	1e6b      	subs	r3, r5, #1
 803b13e:	2b1f      	cmp	r3, #31
 803b140:	d927      	bls.n	803b192 <CAN_ITConfig+0x76>
 803b142:	2d40      	cmp	r5, #64	; 0x40
 803b144:	d014      	beq.n	803b170 <CAN_ITConfig+0x54>
 803b146:	f5b5 7f80 	cmp.w	r5, #256	; 0x100
 803b14a:	d011      	beq.n	803b170 <CAN_ITConfig+0x54>
 803b14c:	f5b5 7f00 	cmp.w	r5, #512	; 0x200
 803b150:	d00e      	beq.n	803b170 <CAN_ITConfig+0x54>
 803b152:	f5b5 6f80 	cmp.w	r5, #1024	; 0x400
 803b156:	d00b      	beq.n	803b170 <CAN_ITConfig+0x54>
 803b158:	f5b5 6f00 	cmp.w	r5, #2048	; 0x800
 803b15c:	d008      	beq.n	803b170 <CAN_ITConfig+0x54>
 803b15e:	f5b5 4f00 	cmp.w	r5, #32768	; 0x8000
 803b162:	d005      	beq.n	803b170 <CAN_ITConfig+0x54>
 803b164:	f5b5 3f80 	cmp.w	r5, #65536	; 0x10000
 803b168:	d002      	beq.n	803b170 <CAN_ITConfig+0x54>
 803b16a:	f5b5 3f00 	cmp.w	r5, #131072	; 0x20000
 803b16e:	d115      	bne.n	803b19c <CAN_ITConfig+0x80>
 803b170:	2e01      	cmp	r6, #1
 803b172:	d805      	bhi.n	803b180 <CAN_ITConfig+0x64>
 803b174:	b94e      	cbnz	r6, 803b18a <CAN_ITConfig+0x6e>
 803b176:	6961      	ldr	r1, [r4, #20]
 803b178:	ea21 0505 	bic.w	r5, r1, r5
 803b17c:	6165      	str	r5, [r4, #20]
 803b17e:	bd70      	pop	{r4, r5, r6, pc}
 803b180:	480a      	ldr	r0, [pc, #40]	; (803b1ac <CAN_ITConfig+0x90>)
 803b182:	f240 51a6 	movw	r1, #1446	; 0x5a6
 803b186:	f7e7 fb81 	bl	802288c <assert_failed>
 803b18a:	6961      	ldr	r1, [r4, #20]
 803b18c:	430d      	orrs	r5, r1
 803b18e:	6165      	str	r5, [r4, #20]
 803b190:	bd70      	pop	{r4, r5, r6, pc}
 803b192:	4a07      	ldr	r2, [pc, #28]	; (803b1b0 <CAN_ITConfig+0x94>)
 803b194:	fa22 f303 	lsr.w	r3, r2, r3
 803b198:	07db      	lsls	r3, r3, #31
 803b19a:	d4e9      	bmi.n	803b170 <CAN_ITConfig+0x54>
 803b19c:	4803      	ldr	r0, [pc, #12]	; (803b1ac <CAN_ITConfig+0x90>)
 803b19e:	f240 51a5 	movw	r1, #1445	; 0x5a5
 803b1a2:	f7e7 fb73 	bl	802288c <assert_failed>
 803b1a6:	e7e3      	b.n	803b170 <CAN_ITConfig+0x54>
 803b1a8:	40006400 	.word	0x40006400
 803b1ac:	08048b44 	.word	0x08048b44
 803b1b0:	8000808b 	.word	0x8000808b

0803b1b4 <EXTI_Init>:
 803b1b4:	b510      	push	{r4, lr}
 803b1b6:	7903      	ldrb	r3, [r0, #4]
 803b1b8:	f013 0ffb 	tst.w	r3, #251	; 0xfb
 803b1bc:	4604      	mov	r4, r0
 803b1be:	d003      	beq.n	803b1c8 <EXTI_Init+0x14>
 803b1c0:	482d      	ldr	r0, [pc, #180]	; (803b278 <EXTI_Init+0xc4>)
 803b1c2:	2183      	movs	r1, #131	; 0x83
 803b1c4:	f7e7 fb62 	bl	802288c <assert_failed>
 803b1c8:	7963      	ldrb	r3, [r4, #5]
 803b1ca:	f003 02fb 	and.w	r2, r3, #251	; 0xfb
 803b1ce:	2a08      	cmp	r2, #8
 803b1d0:	d001      	beq.n	803b1d6 <EXTI_Init+0x22>
 803b1d2:	2b10      	cmp	r3, #16
 803b1d4:	d143      	bne.n	803b25e <EXTI_Init+0xaa>
 803b1d6:	6822      	ldr	r2, [r4, #0]
 803b1d8:	0dd3      	lsrs	r3, r2, #23
 803b1da:	05db      	lsls	r3, r3, #23
 803b1dc:	b903      	cbnz	r3, 803b1e0 <EXTI_Init+0x2c>
 803b1de:	b91a      	cbnz	r2, 803b1e8 <EXTI_Init+0x34>
 803b1e0:	4825      	ldr	r0, [pc, #148]	; (803b278 <EXTI_Init+0xc4>)
 803b1e2:	2185      	movs	r1, #133	; 0x85
 803b1e4:	f7e7 fb52 	bl	802288c <assert_failed>
 803b1e8:	79a3      	ldrb	r3, [r4, #6]
 803b1ea:	2b01      	cmp	r3, #1
 803b1ec:	d831      	bhi.n	803b252 <EXTI_Init+0x9e>
 803b1ee:	b32b      	cbz	r3, 803b23c <EXTI_Init+0x88>
 803b1f0:	4b22      	ldr	r3, [pc, #136]	; (803b27c <EXTI_Init+0xc8>)
 803b1f2:	6821      	ldr	r1, [r4, #0]
 803b1f4:	681a      	ldr	r2, [r3, #0]
 803b1f6:	ea22 0201 	bic.w	r2, r2, r1
 803b1fa:	601a      	str	r2, [r3, #0]
 803b1fc:	685a      	ldr	r2, [r3, #4]
 803b1fe:	ea22 0201 	bic.w	r2, r2, r1
 803b202:	605a      	str	r2, [r3, #4]
 803b204:	7922      	ldrb	r2, [r4, #4]
 803b206:	f102 4280 	add.w	r2, r2, #1073741824	; 0x40000000
 803b20a:	f502 329e 	add.w	r2, r2, #80896	; 0x13c00
 803b20e:	6810      	ldr	r0, [r2, #0]
 803b210:	4301      	orrs	r1, r0
 803b212:	6011      	str	r1, [r2, #0]
 803b214:	6899      	ldr	r1, [r3, #8]
 803b216:	6822      	ldr	r2, [r4, #0]
 803b218:	ea21 0102 	bic.w	r1, r1, r2
 803b21c:	6099      	str	r1, [r3, #8]
 803b21e:	68d9      	ldr	r1, [r3, #12]
 803b220:	ea21 0102 	bic.w	r1, r1, r2
 803b224:	60d9      	str	r1, [r3, #12]
 803b226:	7961      	ldrb	r1, [r4, #5]
 803b228:	2910      	cmp	r1, #16
 803b22a:	d01d      	beq.n	803b268 <EXTI_Init+0xb4>
 803b22c:	f101 4380 	add.w	r3, r1, #1073741824	; 0x40000000
 803b230:	f503 339e 	add.w	r3, r3, #80896	; 0x13c00
 803b234:	6819      	ldr	r1, [r3, #0]
 803b236:	430a      	orrs	r2, r1
 803b238:	601a      	str	r2, [r3, #0]
 803b23a:	bd10      	pop	{r4, pc}
 803b23c:	7923      	ldrb	r3, [r4, #4]
 803b23e:	6821      	ldr	r1, [r4, #0]
 803b240:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 803b244:	f503 339e 	add.w	r3, r3, #80896	; 0x13c00
 803b248:	681a      	ldr	r2, [r3, #0]
 803b24a:	ea22 0201 	bic.w	r2, r2, r1
 803b24e:	601a      	str	r2, [r3, #0]
 803b250:	bd10      	pop	{r4, pc}
 803b252:	4809      	ldr	r0, [pc, #36]	; (803b278 <EXTI_Init+0xc4>)
 803b254:	2186      	movs	r1, #134	; 0x86
 803b256:	f7e7 fb19 	bl	802288c <assert_failed>
 803b25a:	79a3      	ldrb	r3, [r4, #6]
 803b25c:	e7c7      	b.n	803b1ee <EXTI_Init+0x3a>
 803b25e:	4806      	ldr	r0, [pc, #24]	; (803b278 <EXTI_Init+0xc4>)
 803b260:	2184      	movs	r1, #132	; 0x84
 803b262:	f7e7 fb13 	bl	802288c <assert_failed>
 803b266:	e7b6      	b.n	803b1d6 <EXTI_Init+0x22>
 803b268:	6899      	ldr	r1, [r3, #8]
 803b26a:	4311      	orrs	r1, r2
 803b26c:	6099      	str	r1, [r3, #8]
 803b26e:	68d9      	ldr	r1, [r3, #12]
 803b270:	430a      	orrs	r2, r1
 803b272:	60da      	str	r2, [r3, #12]
 803b274:	bd10      	pop	{r4, pc}
 803b276:	bf00      	nop
 803b278:	08048bc8 	.word	0x08048bc8
 803b27c:	40013c00 	.word	0x40013c00

0803b280 <FLASH_Unlock>:
 803b280:	4b04      	ldr	r3, [pc, #16]	; (803b294 <FLASH_Unlock+0x14>)
 803b282:	691a      	ldr	r2, [r3, #16]
 803b284:	2a00      	cmp	r2, #0
 803b286:	da03      	bge.n	803b290 <FLASH_Unlock+0x10>
 803b288:	4903      	ldr	r1, [pc, #12]	; (803b298 <FLASH_Unlock+0x18>)
 803b28a:	4a04      	ldr	r2, [pc, #16]	; (803b29c <FLASH_Unlock+0x1c>)
 803b28c:	6059      	str	r1, [r3, #4]
 803b28e:	605a      	str	r2, [r3, #4]
 803b290:	4770      	bx	lr
 803b292:	bf00      	nop
 803b294:	40023c00 	.word	0x40023c00
 803b298:	45670123 	.word	0x45670123
 803b29c:	cdef89ab 	.word	0xcdef89ab

0803b2a0 <FLASH_Lock>:
 803b2a0:	4a02      	ldr	r2, [pc, #8]	; (803b2ac <FLASH_Lock+0xc>)
 803b2a2:	6913      	ldr	r3, [r2, #16]
 803b2a4:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 803b2a8:	6113      	str	r3, [r2, #16]
 803b2aa:	4770      	bx	lr
 803b2ac:	40023c00 	.word	0x40023c00

0803b2b0 <FLASH_GetStatus>:
 803b2b0:	4b0e      	ldr	r3, [pc, #56]	; (803b2ec <FLASH_GetStatus+0x3c>)
 803b2b2:	68da      	ldr	r2, [r3, #12]
 803b2b4:	03d2      	lsls	r2, r2, #15
 803b2b6:	d410      	bmi.n	803b2da <FLASH_GetStatus+0x2a>
 803b2b8:	68da      	ldr	r2, [r3, #12]
 803b2ba:	06d1      	lsls	r1, r2, #27
 803b2bc:	d40f      	bmi.n	803b2de <FLASH_GetStatus+0x2e>
 803b2be:	68da      	ldr	r2, [r3, #12]
 803b2c0:	05d2      	lsls	r2, r2, #23
 803b2c2:	d410      	bmi.n	803b2e6 <FLASH_GetStatus+0x36>
 803b2c4:	68da      	ldr	r2, [r3, #12]
 803b2c6:	f012 0fe0 	tst.w	r2, #224	; 0xe0
 803b2ca:	d10a      	bne.n	803b2e2 <FLASH_GetStatus+0x32>
 803b2cc:	68db      	ldr	r3, [r3, #12]
 803b2ce:	f013 0f02 	tst.w	r3, #2
 803b2d2:	bf14      	ite	ne
 803b2d4:	2008      	movne	r0, #8
 803b2d6:	2009      	moveq	r0, #9
 803b2d8:	4770      	bx	lr
 803b2da:	2001      	movs	r0, #1
 803b2dc:	4770      	bx	lr
 803b2de:	2006      	movs	r0, #6
 803b2e0:	4770      	bx	lr
 803b2e2:	2007      	movs	r0, #7
 803b2e4:	4770      	bx	lr
 803b2e6:	2002      	movs	r0, #2
 803b2e8:	4770      	bx	lr
 803b2ea:	bf00      	nop
 803b2ec:	40023c00 	.word	0x40023c00

0803b2f0 <FLASH_WaitForLastOperation>:
 803b2f0:	b500      	push	{lr}
 803b2f2:	b083      	sub	sp, #12
 803b2f4:	2309      	movs	r3, #9
 803b2f6:	f88d 3007 	strb.w	r3, [sp, #7]
 803b2fa:	f7ff ffd9 	bl	803b2b0 <FLASH_GetStatus>
 803b2fe:	f88d 0007 	strb.w	r0, [sp, #7]
 803b302:	f89d 3007 	ldrb.w	r3, [sp, #7]
 803b306:	2b01      	cmp	r3, #1
 803b308:	d0f7      	beq.n	803b2fa <FLASH_WaitForLastOperation+0xa>
 803b30a:	f89d 0007 	ldrb.w	r0, [sp, #7]
 803b30e:	b003      	add	sp, #12
 803b310:	f85d fb04 	ldr.w	pc, [sp], #4

0803b314 <FLASH_EraseSector>:
 803b314:	f030 0318 	bics.w	r3, r0, #24
 803b318:	b570      	push	{r4, r5, r6, lr}
 803b31a:	4605      	mov	r5, r0
 803b31c:	460c      	mov	r4, r1
 803b31e:	d00e      	beq.n	803b33e <FLASH_EraseSector+0x2a>
 803b320:	2b20      	cmp	r3, #32
 803b322:	d00c      	beq.n	803b33e <FLASH_EraseSector+0x2a>
 803b324:	2b40      	cmp	r3, #64	; 0x40
 803b326:	d00a      	beq.n	803b33e <FLASH_EraseSector+0x2a>
 803b328:	2b80      	cmp	r3, #128	; 0x80
 803b32a:	d008      	beq.n	803b33e <FLASH_EraseSector+0x2a>
 803b32c:	2ba0      	cmp	r3, #160	; 0xa0
 803b32e:	d006      	beq.n	803b33e <FLASH_EraseSector+0x2a>
 803b330:	2bc0      	cmp	r3, #192	; 0xc0
 803b332:	d004      	beq.n	803b33e <FLASH_EraseSector+0x2a>
 803b334:	4820      	ldr	r0, [pc, #128]	; (803b3b8 <FLASH_EraseSector+0xa4>)
 803b336:	f240 11e1 	movw	r1, #481	; 0x1e1
 803b33a:	f7e7 faa7 	bl	802288c <assert_failed>
 803b33e:	2c03      	cmp	r4, #3
 803b340:	d825      	bhi.n	803b38e <FLASH_EraseSector+0x7a>
 803b342:	bb64      	cbnz	r4, 803b39e <FLASH_EraseSector+0x8a>
 803b344:	f7ff ffd4 	bl	803b2f0 <FLASH_WaitForLastOperation>
 803b348:	2809      	cmp	r0, #9
 803b34a:	d000      	beq.n	803b34e <FLASH_EraseSector+0x3a>
 803b34c:	bd70      	pop	{r4, r5, r6, pc}
 803b34e:	4e1b      	ldr	r6, [pc, #108]	; (803b3bc <FLASH_EraseSector+0xa8>)
 803b350:	6933      	ldr	r3, [r6, #16]
 803b352:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 803b356:	6133      	str	r3, [r6, #16]
 803b358:	6933      	ldr	r3, [r6, #16]
 803b35a:	431c      	orrs	r4, r3
 803b35c:	6134      	str	r4, [r6, #16]
 803b35e:	6933      	ldr	r3, [r6, #16]
 803b360:	f023 03f8 	bic.w	r3, r3, #248	; 0xf8
 803b364:	6133      	str	r3, [r6, #16]
 803b366:	6930      	ldr	r0, [r6, #16]
 803b368:	4305      	orrs	r5, r0
 803b36a:	f045 0502 	orr.w	r5, r5, #2
 803b36e:	6135      	str	r5, [r6, #16]
 803b370:	6933      	ldr	r3, [r6, #16]
 803b372:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 803b376:	6133      	str	r3, [r6, #16]
 803b378:	f7ff ffba 	bl	803b2f0 <FLASH_WaitForLastOperation>
 803b37c:	6933      	ldr	r3, [r6, #16]
 803b37e:	f023 0302 	bic.w	r3, r3, #2
 803b382:	6133      	str	r3, [r6, #16]
 803b384:	6933      	ldr	r3, [r6, #16]
 803b386:	f023 03f8 	bic.w	r3, r3, #248	; 0xf8
 803b38a:	6133      	str	r3, [r6, #16]
 803b38c:	bd70      	pop	{r4, r5, r6, pc}
 803b38e:	480a      	ldr	r0, [pc, #40]	; (803b3b8 <FLASH_EraseSector+0xa4>)
 803b390:	f44f 71f1 	mov.w	r1, #482	; 0x1e2
 803b394:	f7e7 fa7a 	bl	802288c <assert_failed>
 803b398:	f44f 7440 	mov.w	r4, #768	; 0x300
 803b39c:	e7d2      	b.n	803b344 <FLASH_EraseSector+0x30>
 803b39e:	2c01      	cmp	r4, #1
 803b3a0:	d102      	bne.n	803b3a8 <FLASH_EraseSector+0x94>
 803b3a2:	f44f 7480 	mov.w	r4, #256	; 0x100
 803b3a6:	e7cd      	b.n	803b344 <FLASH_EraseSector+0x30>
 803b3a8:	2c02      	cmp	r4, #2
 803b3aa:	bf0c      	ite	eq
 803b3ac:	f44f 7400 	moveq.w	r4, #512	; 0x200
 803b3b0:	f44f 7440 	movne.w	r4, #768	; 0x300
 803b3b4:	e7c6      	b.n	803b344 <FLASH_EraseSector+0x30>
 803b3b6:	bf00      	nop
 803b3b8:	08048c4c 	.word	0x08048c4c
 803b3bc:	40023c00 	.word	0x40023c00

0803b3c0 <FLASH_ProgramByte>:
 803b3c0:	f100 4378 	add.w	r3, r0, #4160749568	; 0xf8000000
 803b3c4:	f5b3 1f00 	cmp.w	r3, #2097152	; 0x200000
 803b3c8:	b570      	push	{r4, r5, r6, lr}
 803b3ca:	4604      	mov	r4, r0
 803b3cc:	460d      	mov	r5, r1
 803b3ce:	d306      	bcc.n	803b3de <FLASH_ProgramByte+0x1e>
 803b3d0:	f100 4360 	add.w	r3, r0, #3758096384	; 0xe0000000
 803b3d4:	f503 4308 	add.w	r3, r3, #34816	; 0x8800
 803b3d8:	f5b3 7f04 	cmp.w	r3, #528	; 0x210
 803b3dc:	d217      	bcs.n	803b40e <FLASH_ProgramByte+0x4e>
 803b3de:	f7ff ff87 	bl	803b2f0 <FLASH_WaitForLastOperation>
 803b3e2:	2809      	cmp	r0, #9
 803b3e4:	d000      	beq.n	803b3e8 <FLASH_ProgramByte+0x28>
 803b3e6:	bd70      	pop	{r4, r5, r6, pc}
 803b3e8:	4e0e      	ldr	r6, [pc, #56]	; (803b424 <FLASH_ProgramByte+0x64>)
 803b3ea:	6933      	ldr	r3, [r6, #16]
 803b3ec:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 803b3f0:	6133      	str	r3, [r6, #16]
 803b3f2:	6933      	ldr	r3, [r6, #16]
 803b3f4:	6133      	str	r3, [r6, #16]
 803b3f6:	6933      	ldr	r3, [r6, #16]
 803b3f8:	f043 0301 	orr.w	r3, r3, #1
 803b3fc:	6133      	str	r3, [r6, #16]
 803b3fe:	7025      	strb	r5, [r4, #0]
 803b400:	f7ff ff76 	bl	803b2f0 <FLASH_WaitForLastOperation>
 803b404:	6933      	ldr	r3, [r6, #16]
 803b406:	f023 0301 	bic.w	r3, r3, #1
 803b40a:	6133      	str	r3, [r6, #16]
 803b40c:	bd70      	pop	{r4, r5, r6, pc}
 803b40e:	4806      	ldr	r0, [pc, #24]	; (803b428 <FLASH_ProgramByte+0x68>)
 803b410:	f44f 715c 	mov.w	r1, #880	; 0x370
 803b414:	f7e7 fa3a 	bl	802288c <assert_failed>
 803b418:	f7ff ff6a 	bl	803b2f0 <FLASH_WaitForLastOperation>
 803b41c:	2809      	cmp	r0, #9
 803b41e:	d1e2      	bne.n	803b3e6 <FLASH_ProgramByte+0x26>
 803b420:	e7e2      	b.n	803b3e8 <FLASH_ProgramByte+0x28>
 803b422:	bf00      	nop
 803b424:	40023c00 	.word	0x40023c00
 803b428:	08048c4c 	.word	0x08048c4c

0803b42c <GPIO_Init>:
 803b42c:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 803b430:	4b50      	ldr	r3, [pc, #320]	; (803b574 <GPIO_Init+0x148>)
 803b432:	4298      	cmp	r0, r3
 803b434:	4605      	mov	r5, r0
 803b436:	460e      	mov	r6, r1
 803b438:	d02b      	beq.n	803b492 <GPIO_Init+0x66>
 803b43a:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 803b43e:	4298      	cmp	r0, r3
 803b440:	d027      	beq.n	803b492 <GPIO_Init+0x66>
 803b442:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 803b446:	4298      	cmp	r0, r3
 803b448:	d023      	beq.n	803b492 <GPIO_Init+0x66>
 803b44a:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 803b44e:	4298      	cmp	r0, r3
 803b450:	d01f      	beq.n	803b492 <GPIO_Init+0x66>
 803b452:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 803b456:	4298      	cmp	r0, r3
 803b458:	d01b      	beq.n	803b492 <GPIO_Init+0x66>
 803b45a:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 803b45e:	4298      	cmp	r0, r3
 803b460:	d017      	beq.n	803b492 <GPIO_Init+0x66>
 803b462:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 803b466:	4298      	cmp	r0, r3
 803b468:	d013      	beq.n	803b492 <GPIO_Init+0x66>
 803b46a:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 803b46e:	4298      	cmp	r0, r3
 803b470:	d00f      	beq.n	803b492 <GPIO_Init+0x66>
 803b472:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 803b476:	4298      	cmp	r0, r3
 803b478:	d00b      	beq.n	803b492 <GPIO_Init+0x66>
 803b47a:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 803b47e:	4298      	cmp	r0, r3
 803b480:	d007      	beq.n	803b492 <GPIO_Init+0x66>
 803b482:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 803b486:	4298      	cmp	r0, r3
 803b488:	d003      	beq.n	803b492 <GPIO_Init+0x66>
 803b48a:	483b      	ldr	r0, [pc, #236]	; (803b578 <GPIO_Init+0x14c>)
 803b48c:	21cf      	movs	r1, #207	; 0xcf
 803b48e:	f7e7 f9fd 	bl	802288c <assert_failed>
 803b492:	8833      	ldrh	r3, [r6, #0]
 803b494:	2b00      	cmp	r3, #0
 803b496:	d068      	beq.n	803b56a <GPIO_Init+0x13e>
 803b498:	7933      	ldrb	r3, [r6, #4]
 803b49a:	2b03      	cmp	r3, #3
 803b49c:	d860      	bhi.n	803b560 <GPIO_Init+0x134>
 803b49e:	79f3      	ldrb	r3, [r6, #7]
 803b4a0:	2b02      	cmp	r3, #2
 803b4a2:	d858      	bhi.n	803b556 <GPIO_Init+0x12a>
 803b4a4:	f8df 90d0 	ldr.w	r9, [pc, #208]	; 803b578 <GPIO_Init+0x14c>
 803b4a8:	2400      	movs	r4, #0
 803b4aa:	2701      	movs	r7, #1
 803b4ac:	f04f 0803 	mov.w	r8, #3
 803b4b0:	e002      	b.n	803b4b8 <GPIO_Init+0x8c>
 803b4b2:	3401      	adds	r4, #1
 803b4b4:	2c10      	cmp	r4, #16
 803b4b6:	d026      	beq.n	803b506 <GPIO_Init+0xda>
 803b4b8:	6832      	ldr	r2, [r6, #0]
 803b4ba:	fa07 f304 	lsl.w	r3, r7, r4
 803b4be:	4393      	bics	r3, r2
 803b4c0:	d1f7      	bne.n	803b4b2 <GPIO_Init+0x86>
 803b4c2:	682b      	ldr	r3, [r5, #0]
 803b4c4:	ea4f 0a44 	mov.w	sl, r4, lsl #1
 803b4c8:	fa08 fb0a 	lsl.w	fp, r8, sl
 803b4cc:	ea23 030b 	bic.w	r3, r3, fp
 803b4d0:	602b      	str	r3, [r5, #0]
 803b4d2:	7933      	ldrb	r3, [r6, #4]
 803b4d4:	6829      	ldr	r1, [r5, #0]
 803b4d6:	fa03 f20a 	lsl.w	r2, r3, sl
 803b4da:	3b01      	subs	r3, #1
 803b4dc:	430a      	orrs	r2, r1
 803b4de:	2b01      	cmp	r3, #1
 803b4e0:	ea6f 0b0b 	mvn.w	fp, fp
 803b4e4:	602a      	str	r2, [r5, #0]
 803b4e6:	d910      	bls.n	803b50a <GPIO_Init+0xde>
 803b4e8:	68eb      	ldr	r3, [r5, #12]
 803b4ea:	fa08 f20a 	lsl.w	r2, r8, sl
 803b4ee:	ea23 0302 	bic.w	r3, r3, r2
 803b4f2:	60eb      	str	r3, [r5, #12]
 803b4f4:	79f3      	ldrb	r3, [r6, #7]
 803b4f6:	68ea      	ldr	r2, [r5, #12]
 803b4f8:	fa03 f30a 	lsl.w	r3, r3, sl
 803b4fc:	3401      	adds	r4, #1
 803b4fe:	4313      	orrs	r3, r2
 803b500:	2c10      	cmp	r4, #16
 803b502:	60eb      	str	r3, [r5, #12]
 803b504:	d1d8      	bne.n	803b4b8 <GPIO_Init+0x8c>
 803b506:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 803b50a:	7973      	ldrb	r3, [r6, #5]
 803b50c:	2b03      	cmp	r3, #3
 803b50e:	d81c      	bhi.n	803b54a <GPIO_Init+0x11e>
 803b510:	68aa      	ldr	r2, [r5, #8]
 803b512:	ea0b 0202 	and.w	r2, fp, r2
 803b516:	60aa      	str	r2, [r5, #8]
 803b518:	68aa      	ldr	r2, [r5, #8]
 803b51a:	fa03 f30a 	lsl.w	r3, r3, sl
 803b51e:	4313      	orrs	r3, r2
 803b520:	60ab      	str	r3, [r5, #8]
 803b522:	79b3      	ldrb	r3, [r6, #6]
 803b524:	2b01      	cmp	r3, #1
 803b526:	d904      	bls.n	803b532 <GPIO_Init+0x106>
 803b528:	21eb      	movs	r1, #235	; 0xeb
 803b52a:	4648      	mov	r0, r9
 803b52c:	f7e7 f9ae 	bl	802288c <assert_failed>
 803b530:	79b3      	ldrb	r3, [r6, #6]
 803b532:	686a      	ldr	r2, [r5, #4]
 803b534:	fa07 f104 	lsl.w	r1, r7, r4
 803b538:	ea22 0201 	bic.w	r2, r2, r1
 803b53c:	606a      	str	r2, [r5, #4]
 803b53e:	686a      	ldr	r2, [r5, #4]
 803b540:	40a3      	lsls	r3, r4
 803b542:	b29b      	uxth	r3, r3
 803b544:	4313      	orrs	r3, r2
 803b546:	606b      	str	r3, [r5, #4]
 803b548:	e7ce      	b.n	803b4e8 <GPIO_Init+0xbc>
 803b54a:	21e4      	movs	r1, #228	; 0xe4
 803b54c:	4648      	mov	r0, r9
 803b54e:	f7e7 f99d 	bl	802288c <assert_failed>
 803b552:	7973      	ldrb	r3, [r6, #5]
 803b554:	e7dc      	b.n	803b510 <GPIO_Init+0xe4>
 803b556:	4808      	ldr	r0, [pc, #32]	; (803b578 <GPIO_Init+0x14c>)
 803b558:	21d2      	movs	r1, #210	; 0xd2
 803b55a:	f7e7 f997 	bl	802288c <assert_failed>
 803b55e:	e7a1      	b.n	803b4a4 <GPIO_Init+0x78>
 803b560:	4805      	ldr	r0, [pc, #20]	; (803b578 <GPIO_Init+0x14c>)
 803b562:	21d1      	movs	r1, #209	; 0xd1
 803b564:	f7e7 f992 	bl	802288c <assert_failed>
 803b568:	e799      	b.n	803b49e <GPIO_Init+0x72>
 803b56a:	4803      	ldr	r0, [pc, #12]	; (803b578 <GPIO_Init+0x14c>)
 803b56c:	21d0      	movs	r1, #208	; 0xd0
 803b56e:	f7e7 f98d 	bl	802288c <assert_failed>
 803b572:	e791      	b.n	803b498 <GPIO_Init+0x6c>
 803b574:	40020000 	.word	0x40020000
 803b578:	08048cd0 	.word	0x08048cd0

0803b57c <GPIO_ReadInputDataBit>:
 803b57c:	b538      	push	{r3, r4, r5, lr}
 803b57e:	4b31      	ldr	r3, [pc, #196]	; (803b644 <GPIO_ReadInputDataBit+0xc8>)
 803b580:	4298      	cmp	r0, r3
 803b582:	4604      	mov	r4, r0
 803b584:	460d      	mov	r5, r1
 803b586:	d02c      	beq.n	803b5e2 <GPIO_ReadInputDataBit+0x66>
 803b588:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 803b58c:	4298      	cmp	r0, r3
 803b58e:	d028      	beq.n	803b5e2 <GPIO_ReadInputDataBit+0x66>
 803b590:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 803b594:	4298      	cmp	r0, r3
 803b596:	d024      	beq.n	803b5e2 <GPIO_ReadInputDataBit+0x66>
 803b598:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 803b59c:	4298      	cmp	r0, r3
 803b59e:	d020      	beq.n	803b5e2 <GPIO_ReadInputDataBit+0x66>
 803b5a0:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 803b5a4:	4298      	cmp	r0, r3
 803b5a6:	d01c      	beq.n	803b5e2 <GPIO_ReadInputDataBit+0x66>
 803b5a8:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 803b5ac:	4298      	cmp	r0, r3
 803b5ae:	d018      	beq.n	803b5e2 <GPIO_ReadInputDataBit+0x66>
 803b5b0:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 803b5b4:	4298      	cmp	r0, r3
 803b5b6:	d014      	beq.n	803b5e2 <GPIO_ReadInputDataBit+0x66>
 803b5b8:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 803b5bc:	4298      	cmp	r0, r3
 803b5be:	d010      	beq.n	803b5e2 <GPIO_ReadInputDataBit+0x66>
 803b5c0:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 803b5c4:	4298      	cmp	r0, r3
 803b5c6:	d00c      	beq.n	803b5e2 <GPIO_ReadInputDataBit+0x66>
 803b5c8:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 803b5cc:	4298      	cmp	r0, r3
 803b5ce:	d008      	beq.n	803b5e2 <GPIO_ReadInputDataBit+0x66>
 803b5d0:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 803b5d4:	4298      	cmp	r0, r3
 803b5d6:	d004      	beq.n	803b5e2 <GPIO_ReadInputDataBit+0x66>
 803b5d8:	481b      	ldr	r0, [pc, #108]	; (803b648 <GPIO_ReadInputDataBit+0xcc>)
 803b5da:	f44f 71a4 	mov.w	r1, #328	; 0x148
 803b5de:	f7e7 f955 	bl	802288c <assert_failed>
 803b5e2:	1e6b      	subs	r3, r5, #1
 803b5e4:	b29b      	uxth	r3, r3
 803b5e6:	2b1f      	cmp	r3, #31
 803b5e8:	d921      	bls.n	803b62e <GPIO_ReadInputDataBit+0xb2>
 803b5ea:	2d40      	cmp	r5, #64	; 0x40
 803b5ec:	d019      	beq.n	803b622 <GPIO_ReadInputDataBit+0xa6>
 803b5ee:	2d80      	cmp	r5, #128	; 0x80
 803b5f0:	d017      	beq.n	803b622 <GPIO_ReadInputDataBit+0xa6>
 803b5f2:	f5b5 7f80 	cmp.w	r5, #256	; 0x100
 803b5f6:	d014      	beq.n	803b622 <GPIO_ReadInputDataBit+0xa6>
 803b5f8:	f5b5 7f00 	cmp.w	r5, #512	; 0x200
 803b5fc:	d011      	beq.n	803b622 <GPIO_ReadInputDataBit+0xa6>
 803b5fe:	f5b5 6f80 	cmp.w	r5, #1024	; 0x400
 803b602:	d00e      	beq.n	803b622 <GPIO_ReadInputDataBit+0xa6>
 803b604:	f5b5 6f00 	cmp.w	r5, #2048	; 0x800
 803b608:	d00b      	beq.n	803b622 <GPIO_ReadInputDataBit+0xa6>
 803b60a:	f5b5 5f80 	cmp.w	r5, #4096	; 0x1000
 803b60e:	d008      	beq.n	803b622 <GPIO_ReadInputDataBit+0xa6>
 803b610:	f5b5 5f00 	cmp.w	r5, #8192	; 0x2000
 803b614:	d005      	beq.n	803b622 <GPIO_ReadInputDataBit+0xa6>
 803b616:	f5b5 4f80 	cmp.w	r5, #16384	; 0x4000
 803b61a:	d002      	beq.n	803b622 <GPIO_ReadInputDataBit+0xa6>
 803b61c:	f5b5 4f00 	cmp.w	r5, #32768	; 0x8000
 803b620:	d10a      	bne.n	803b638 <GPIO_ReadInputDataBit+0xbc>
 803b622:	6923      	ldr	r3, [r4, #16]
 803b624:	421d      	tst	r5, r3
 803b626:	bf14      	ite	ne
 803b628:	2001      	movne	r0, #1
 803b62a:	2000      	moveq	r0, #0
 803b62c:	bd38      	pop	{r3, r4, r5, pc}
 803b62e:	4a07      	ldr	r2, [pc, #28]	; (803b64c <GPIO_ReadInputDataBit+0xd0>)
 803b630:	fa22 f303 	lsr.w	r3, r2, r3
 803b634:	07db      	lsls	r3, r3, #31
 803b636:	d4f4      	bmi.n	803b622 <GPIO_ReadInputDataBit+0xa6>
 803b638:	4803      	ldr	r0, [pc, #12]	; (803b648 <GPIO_ReadInputDataBit+0xcc>)
 803b63a:	f240 1149 	movw	r1, #329	; 0x149
 803b63e:	f7e7 f925 	bl	802288c <assert_failed>
 803b642:	e7ee      	b.n	803b622 <GPIO_ReadInputDataBit+0xa6>
 803b644:	40020000 	.word	0x40020000
 803b648:	08048cd0 	.word	0x08048cd0
 803b64c:	8000808b 	.word	0x8000808b

0803b650 <GPIO_SetBits>:
 803b650:	b538      	push	{r3, r4, r5, lr}
 803b652:	4b1e      	ldr	r3, [pc, #120]	; (803b6cc <GPIO_SetBits+0x7c>)
 803b654:	4298      	cmp	r0, r3
 803b656:	4604      	mov	r4, r0
 803b658:	460d      	mov	r5, r1
 803b65a:	d02c      	beq.n	803b6b6 <GPIO_SetBits+0x66>
 803b65c:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 803b660:	4298      	cmp	r0, r3
 803b662:	d028      	beq.n	803b6b6 <GPIO_SetBits+0x66>
 803b664:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 803b668:	4298      	cmp	r0, r3
 803b66a:	d024      	beq.n	803b6b6 <GPIO_SetBits+0x66>
 803b66c:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 803b670:	4298      	cmp	r0, r3
 803b672:	d020      	beq.n	803b6b6 <GPIO_SetBits+0x66>
 803b674:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 803b678:	4298      	cmp	r0, r3
 803b67a:	d01c      	beq.n	803b6b6 <GPIO_SetBits+0x66>
 803b67c:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 803b680:	4298      	cmp	r0, r3
 803b682:	d018      	beq.n	803b6b6 <GPIO_SetBits+0x66>
 803b684:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 803b688:	4298      	cmp	r0, r3
 803b68a:	d014      	beq.n	803b6b6 <GPIO_SetBits+0x66>
 803b68c:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 803b690:	4298      	cmp	r0, r3
 803b692:	d010      	beq.n	803b6b6 <GPIO_SetBits+0x66>
 803b694:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 803b698:	4298      	cmp	r0, r3
 803b69a:	d00c      	beq.n	803b6b6 <GPIO_SetBits+0x66>
 803b69c:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 803b6a0:	4298      	cmp	r0, r3
 803b6a2:	d008      	beq.n	803b6b6 <GPIO_SetBits+0x66>
 803b6a4:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 803b6a8:	4298      	cmp	r0, r3
 803b6aa:	d004      	beq.n	803b6b6 <GPIO_SetBits+0x66>
 803b6ac:	4808      	ldr	r0, [pc, #32]	; (803b6d0 <GPIO_SetBits+0x80>)
 803b6ae:	f240 119f 	movw	r1, #415	; 0x19f
 803b6b2:	f7e7 f8eb 	bl	802288c <assert_failed>
 803b6b6:	b10d      	cbz	r5, 803b6bc <GPIO_SetBits+0x6c>
 803b6b8:	8325      	strh	r5, [r4, #24]
 803b6ba:	bd38      	pop	{r3, r4, r5, pc}
 803b6bc:	4804      	ldr	r0, [pc, #16]	; (803b6d0 <GPIO_SetBits+0x80>)
 803b6be:	f44f 71d0 	mov.w	r1, #416	; 0x1a0
 803b6c2:	f7e7 f8e3 	bl	802288c <assert_failed>
 803b6c6:	8325      	strh	r5, [r4, #24]
 803b6c8:	bd38      	pop	{r3, r4, r5, pc}
 803b6ca:	bf00      	nop
 803b6cc:	40020000 	.word	0x40020000
 803b6d0:	08048cd0 	.word	0x08048cd0

0803b6d4 <GPIO_ResetBits>:
 803b6d4:	b538      	push	{r3, r4, r5, lr}
 803b6d6:	4b1e      	ldr	r3, [pc, #120]	; (803b750 <GPIO_ResetBits+0x7c>)
 803b6d8:	4298      	cmp	r0, r3
 803b6da:	4604      	mov	r4, r0
 803b6dc:	460d      	mov	r5, r1
 803b6de:	d02c      	beq.n	803b73a <GPIO_ResetBits+0x66>
 803b6e0:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 803b6e4:	4298      	cmp	r0, r3
 803b6e6:	d028      	beq.n	803b73a <GPIO_ResetBits+0x66>
 803b6e8:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 803b6ec:	4298      	cmp	r0, r3
 803b6ee:	d024      	beq.n	803b73a <GPIO_ResetBits+0x66>
 803b6f0:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 803b6f4:	4298      	cmp	r0, r3
 803b6f6:	d020      	beq.n	803b73a <GPIO_ResetBits+0x66>
 803b6f8:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 803b6fc:	4298      	cmp	r0, r3
 803b6fe:	d01c      	beq.n	803b73a <GPIO_ResetBits+0x66>
 803b700:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 803b704:	4298      	cmp	r0, r3
 803b706:	d018      	beq.n	803b73a <GPIO_ResetBits+0x66>
 803b708:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 803b70c:	4298      	cmp	r0, r3
 803b70e:	d014      	beq.n	803b73a <GPIO_ResetBits+0x66>
 803b710:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 803b714:	4298      	cmp	r0, r3
 803b716:	d010      	beq.n	803b73a <GPIO_ResetBits+0x66>
 803b718:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 803b71c:	4298      	cmp	r0, r3
 803b71e:	d00c      	beq.n	803b73a <GPIO_ResetBits+0x66>
 803b720:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 803b724:	4298      	cmp	r0, r3
 803b726:	d008      	beq.n	803b73a <GPIO_ResetBits+0x66>
 803b728:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 803b72c:	4298      	cmp	r0, r3
 803b72e:	d004      	beq.n	803b73a <GPIO_ResetBits+0x66>
 803b730:	4808      	ldr	r0, [pc, #32]	; (803b754 <GPIO_ResetBits+0x80>)
 803b732:	f44f 71da 	mov.w	r1, #436	; 0x1b4
 803b736:	f7e7 f8a9 	bl	802288c <assert_failed>
 803b73a:	b10d      	cbz	r5, 803b740 <GPIO_ResetBits+0x6c>
 803b73c:	8365      	strh	r5, [r4, #26]
 803b73e:	bd38      	pop	{r3, r4, r5, pc}
 803b740:	4804      	ldr	r0, [pc, #16]	; (803b754 <GPIO_ResetBits+0x80>)
 803b742:	f240 11b5 	movw	r1, #437	; 0x1b5
 803b746:	f7e7 f8a1 	bl	802288c <assert_failed>
 803b74a:	8365      	strh	r5, [r4, #26]
 803b74c:	bd38      	pop	{r3, r4, r5, pc}
 803b74e:	bf00      	nop
 803b750:	40020000 	.word	0x40020000
 803b754:	08048cd0 	.word	0x08048cd0

0803b758 <GPIO_WriteBit>:
 803b758:	b530      	push	{r4, r5, lr}
 803b75a:	4b38      	ldr	r3, [pc, #224]	; (803b83c <GPIO_WriteBit+0xe4>)
 803b75c:	4298      	cmp	r0, r3
 803b75e:	b083      	sub	sp, #12
 803b760:	4604      	mov	r4, r0
 803b762:	460d      	mov	r5, r1
 803b764:	d02e      	beq.n	803b7c4 <GPIO_WriteBit+0x6c>
 803b766:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 803b76a:	4298      	cmp	r0, r3
 803b76c:	d02a      	beq.n	803b7c4 <GPIO_WriteBit+0x6c>
 803b76e:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 803b772:	4298      	cmp	r0, r3
 803b774:	d026      	beq.n	803b7c4 <GPIO_WriteBit+0x6c>
 803b776:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 803b77a:	4298      	cmp	r0, r3
 803b77c:	d022      	beq.n	803b7c4 <GPIO_WriteBit+0x6c>
 803b77e:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 803b782:	4298      	cmp	r0, r3
 803b784:	d01e      	beq.n	803b7c4 <GPIO_WriteBit+0x6c>
 803b786:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 803b78a:	4298      	cmp	r0, r3
 803b78c:	d01a      	beq.n	803b7c4 <GPIO_WriteBit+0x6c>
 803b78e:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 803b792:	4298      	cmp	r0, r3
 803b794:	d016      	beq.n	803b7c4 <GPIO_WriteBit+0x6c>
 803b796:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 803b79a:	4298      	cmp	r0, r3
 803b79c:	d012      	beq.n	803b7c4 <GPIO_WriteBit+0x6c>
 803b79e:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 803b7a2:	4298      	cmp	r0, r3
 803b7a4:	d00e      	beq.n	803b7c4 <GPIO_WriteBit+0x6c>
 803b7a6:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 803b7aa:	4298      	cmp	r0, r3
 803b7ac:	d00a      	beq.n	803b7c4 <GPIO_WriteBit+0x6c>
 803b7ae:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 803b7b2:	4298      	cmp	r0, r3
 803b7b4:	d006      	beq.n	803b7c4 <GPIO_WriteBit+0x6c>
 803b7b6:	4822      	ldr	r0, [pc, #136]	; (803b840 <GPIO_WriteBit+0xe8>)
 803b7b8:	9201      	str	r2, [sp, #4]
 803b7ba:	f44f 71e5 	mov.w	r1, #458	; 0x1ca
 803b7be:	f7e7 f865 	bl	802288c <assert_failed>
 803b7c2:	9a01      	ldr	r2, [sp, #4]
 803b7c4:	1e6b      	subs	r3, r5, #1
 803b7c6:	b29b      	uxth	r3, r3
 803b7c8:	2b1f      	cmp	r3, #31
 803b7ca:	d921      	bls.n	803b810 <GPIO_WriteBit+0xb8>
 803b7cc:	2d40      	cmp	r5, #64	; 0x40
 803b7ce:	d019      	beq.n	803b804 <GPIO_WriteBit+0xac>
 803b7d0:	2d80      	cmp	r5, #128	; 0x80
 803b7d2:	d017      	beq.n	803b804 <GPIO_WriteBit+0xac>
 803b7d4:	f5b5 7f80 	cmp.w	r5, #256	; 0x100
 803b7d8:	d014      	beq.n	803b804 <GPIO_WriteBit+0xac>
 803b7da:	f5b5 7f00 	cmp.w	r5, #512	; 0x200
 803b7de:	d011      	beq.n	803b804 <GPIO_WriteBit+0xac>
 803b7e0:	f5b5 6f80 	cmp.w	r5, #1024	; 0x400
 803b7e4:	d00e      	beq.n	803b804 <GPIO_WriteBit+0xac>
 803b7e6:	f5b5 6f00 	cmp.w	r5, #2048	; 0x800
 803b7ea:	d00b      	beq.n	803b804 <GPIO_WriteBit+0xac>
 803b7ec:	f5b5 5f80 	cmp.w	r5, #4096	; 0x1000
 803b7f0:	d008      	beq.n	803b804 <GPIO_WriteBit+0xac>
 803b7f2:	f5b5 5f00 	cmp.w	r5, #8192	; 0x2000
 803b7f6:	d005      	beq.n	803b804 <GPIO_WriteBit+0xac>
 803b7f8:	f5b5 4f80 	cmp.w	r5, #16384	; 0x4000
 803b7fc:	d002      	beq.n	803b804 <GPIO_WriteBit+0xac>
 803b7fe:	f5b5 4f00 	cmp.w	r5, #32768	; 0x8000
 803b802:	d10a      	bne.n	803b81a <GPIO_WriteBit+0xc2>
 803b804:	2a01      	cmp	r2, #1
 803b806:	d810      	bhi.n	803b82a <GPIO_WriteBit+0xd2>
 803b808:	b9a2      	cbnz	r2, 803b834 <GPIO_WriteBit+0xdc>
 803b80a:	8365      	strh	r5, [r4, #26]
 803b80c:	b003      	add	sp, #12
 803b80e:	bd30      	pop	{r4, r5, pc}
 803b810:	490c      	ldr	r1, [pc, #48]	; (803b844 <GPIO_WriteBit+0xec>)
 803b812:	fa21 f303 	lsr.w	r3, r1, r3
 803b816:	07db      	lsls	r3, r3, #31
 803b818:	d4f4      	bmi.n	803b804 <GPIO_WriteBit+0xac>
 803b81a:	4809      	ldr	r0, [pc, #36]	; (803b840 <GPIO_WriteBit+0xe8>)
 803b81c:	9201      	str	r2, [sp, #4]
 803b81e:	f240 11cb 	movw	r1, #459	; 0x1cb
 803b822:	f7e7 f833 	bl	802288c <assert_failed>
 803b826:	9a01      	ldr	r2, [sp, #4]
 803b828:	e7ec      	b.n	803b804 <GPIO_WriteBit+0xac>
 803b82a:	4805      	ldr	r0, [pc, #20]	; (803b840 <GPIO_WriteBit+0xe8>)
 803b82c:	f44f 71e6 	mov.w	r1, #460	; 0x1cc
 803b830:	f7e7 f82c 	bl	802288c <assert_failed>
 803b834:	8325      	strh	r5, [r4, #24]
 803b836:	b003      	add	sp, #12
 803b838:	bd30      	pop	{r4, r5, pc}
 803b83a:	bf00      	nop
 803b83c:	40020000 	.word	0x40020000
 803b840:	08048cd0 	.word	0x08048cd0
 803b844:	8000808b 	.word	0x8000808b

0803b848 <GPIO_PinAFConfig>:
 803b848:	4b2a      	ldr	r3, [pc, #168]	; (803b8f4 <GPIO_PinAFConfig+0xac>)
 803b84a:	4298      	cmp	r0, r3
 803b84c:	b570      	push	{r4, r5, r6, lr}
 803b84e:	4604      	mov	r4, r0
 803b850:	460d      	mov	r5, r1
 803b852:	4616      	mov	r6, r2
 803b854:	d02c      	beq.n	803b8b0 <GPIO_PinAFConfig+0x68>
 803b856:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 803b85a:	4298      	cmp	r0, r3
 803b85c:	d028      	beq.n	803b8b0 <GPIO_PinAFConfig+0x68>
 803b85e:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 803b862:	4298      	cmp	r0, r3
 803b864:	d024      	beq.n	803b8b0 <GPIO_PinAFConfig+0x68>
 803b866:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 803b86a:	4298      	cmp	r0, r3
 803b86c:	d020      	beq.n	803b8b0 <GPIO_PinAFConfig+0x68>
 803b86e:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 803b872:	4298      	cmp	r0, r3
 803b874:	d01c      	beq.n	803b8b0 <GPIO_PinAFConfig+0x68>
 803b876:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 803b87a:	4298      	cmp	r0, r3
 803b87c:	d018      	beq.n	803b8b0 <GPIO_PinAFConfig+0x68>
 803b87e:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 803b882:	4298      	cmp	r0, r3
 803b884:	d014      	beq.n	803b8b0 <GPIO_PinAFConfig+0x68>
 803b886:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 803b88a:	4298      	cmp	r0, r3
 803b88c:	d010      	beq.n	803b8b0 <GPIO_PinAFConfig+0x68>
 803b88e:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 803b892:	4298      	cmp	r0, r3
 803b894:	d00c      	beq.n	803b8b0 <GPIO_PinAFConfig+0x68>
 803b896:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 803b89a:	4298      	cmp	r0, r3
 803b89c:	d008      	beq.n	803b8b0 <GPIO_PinAFConfig+0x68>
 803b89e:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 803b8a2:	4298      	cmp	r0, r3
 803b8a4:	d004      	beq.n	803b8b0 <GPIO_PinAFConfig+0x68>
 803b8a6:	4814      	ldr	r0, [pc, #80]	; (803b8f8 <GPIO_PinAFConfig+0xb0>)
 803b8a8:	f240 2149 	movw	r1, #585	; 0x249
 803b8ac:	f7e6 ffee 	bl	802288c <assert_failed>
 803b8b0:	2d0f      	cmp	r5, #15
 803b8b2:	d818      	bhi.n	803b8e6 <GPIO_PinAFConfig+0x9e>
 803b8b4:	2e0f      	cmp	r6, #15
 803b8b6:	d904      	bls.n	803b8c2 <GPIO_PinAFConfig+0x7a>
 803b8b8:	480f      	ldr	r0, [pc, #60]	; (803b8f8 <GPIO_PinAFConfig+0xb0>)
 803b8ba:	f240 214b 	movw	r1, #587	; 0x24b
 803b8be:	f7e6 ffe5 	bl	802288c <assert_failed>
 803b8c2:	08e8      	lsrs	r0, r5, #3
 803b8c4:	eb04 0480 	add.w	r4, r4, r0, lsl #2
 803b8c8:	f005 0507 	and.w	r5, r5, #7
 803b8cc:	6a23      	ldr	r3, [r4, #32]
 803b8ce:	00ad      	lsls	r5, r5, #2
 803b8d0:	220f      	movs	r2, #15
 803b8d2:	40aa      	lsls	r2, r5
 803b8d4:	ea23 0302 	bic.w	r3, r3, r2
 803b8d8:	6223      	str	r3, [r4, #32]
 803b8da:	6a22      	ldr	r2, [r4, #32]
 803b8dc:	fa06 f505 	lsl.w	r5, r6, r5
 803b8e0:	4315      	orrs	r5, r2
 803b8e2:	6225      	str	r5, [r4, #32]
 803b8e4:	bd70      	pop	{r4, r5, r6, pc}
 803b8e6:	4804      	ldr	r0, [pc, #16]	; (803b8f8 <GPIO_PinAFConfig+0xb0>)
 803b8e8:	f240 214a 	movw	r1, #586	; 0x24a
 803b8ec:	f7e6 ffce 	bl	802288c <assert_failed>
 803b8f0:	e7e0      	b.n	803b8b4 <GPIO_PinAFConfig+0x6c>
 803b8f2:	bf00      	nop
 803b8f4:	40020000 	.word	0x40020000
 803b8f8:	08048cd0 	.word	0x08048cd0

0803b8fc <RCC_GetClocksFreq>:
 803b8fc:	4a1f      	ldr	r2, [pc, #124]	; (803b97c <RCC_GetClocksFreq+0x80>)
 803b8fe:	6893      	ldr	r3, [r2, #8]
 803b900:	f003 030c 	and.w	r3, r3, #12
 803b904:	2b04      	cmp	r3, #4
 803b906:	b410      	push	{r4}
 803b908:	d01b      	beq.n	803b942 <RCC_GetClocksFreq+0x46>
 803b90a:	2b08      	cmp	r3, #8
 803b90c:	d01c      	beq.n	803b948 <RCC_GetClocksFreq+0x4c>
 803b90e:	4b1c      	ldr	r3, [pc, #112]	; (803b980 <RCC_GetClocksFreq+0x84>)
 803b910:	6003      	str	r3, [r0, #0]
 803b912:	4a1a      	ldr	r2, [pc, #104]	; (803b97c <RCC_GetClocksFreq+0x80>)
 803b914:	491b      	ldr	r1, [pc, #108]	; (803b984 <RCC_GetClocksFreq+0x88>)
 803b916:	6894      	ldr	r4, [r2, #8]
 803b918:	f3c4 1403 	ubfx	r4, r4, #4, #4
 803b91c:	5d0c      	ldrb	r4, [r1, r4]
 803b91e:	40e3      	lsrs	r3, r4
 803b920:	6043      	str	r3, [r0, #4]
 803b922:	6894      	ldr	r4, [r2, #8]
 803b924:	f3c4 2482 	ubfx	r4, r4, #10, #3
 803b928:	5d0c      	ldrb	r4, [r1, r4]
 803b92a:	fa23 f404 	lsr.w	r4, r3, r4
 803b92e:	6084      	str	r4, [r0, #8]
 803b930:	6892      	ldr	r2, [r2, #8]
 803b932:	f85d 4b04 	ldr.w	r4, [sp], #4
 803b936:	f3c2 3242 	ubfx	r2, r2, #13, #3
 803b93a:	5c8a      	ldrb	r2, [r1, r2]
 803b93c:	40d3      	lsrs	r3, r2
 803b93e:	60c3      	str	r3, [r0, #12]
 803b940:	4770      	bx	lr
 803b942:	4b11      	ldr	r3, [pc, #68]	; (803b988 <RCC_GetClocksFreq+0x8c>)
 803b944:	6003      	str	r3, [r0, #0]
 803b946:	e7e4      	b.n	803b912 <RCC_GetClocksFreq+0x16>
 803b948:	6854      	ldr	r4, [r2, #4]
 803b94a:	6851      	ldr	r1, [r2, #4]
 803b94c:	6852      	ldr	r2, [r2, #4]
 803b94e:	0263      	lsls	r3, r4, #9
 803b950:	f3c2 1288 	ubfx	r2, r2, #6, #9
 803b954:	bf4c      	ite	mi
 803b956:	4b0c      	ldrmi	r3, [pc, #48]	; (803b988 <RCC_GetClocksFreq+0x8c>)
 803b958:	4b09      	ldrpl	r3, [pc, #36]	; (803b980 <RCC_GetClocksFreq+0x84>)
 803b95a:	f001 013f 	and.w	r1, r1, #63	; 0x3f
 803b95e:	fbb3 f3f1 	udiv	r3, r3, r1
 803b962:	fb03 f302 	mul.w	r3, r3, r2
 803b966:	4a05      	ldr	r2, [pc, #20]	; (803b97c <RCC_GetClocksFreq+0x80>)
 803b968:	6852      	ldr	r2, [r2, #4]
 803b96a:	f3c2 4201 	ubfx	r2, r2, #16, #2
 803b96e:	3201      	adds	r2, #1
 803b970:	0052      	lsls	r2, r2, #1
 803b972:	fbb3 f3f2 	udiv	r3, r3, r2
 803b976:	6003      	str	r3, [r0, #0]
 803b978:	e7cb      	b.n	803b912 <RCC_GetClocksFreq+0x16>
 803b97a:	bf00      	nop
 803b97c:	40023800 	.word	0x40023800
 803b980:	00f42400 	.word	0x00f42400
 803b984:	200024cc 	.word	0x200024cc
 803b988:	007a1200 	.word	0x007a1200

0803b98c <RCC_AHB1PeriphClockCmd>:
 803b98c:	b538      	push	{r3, r4, r5, lr}
 803b98e:	4b10      	ldr	r3, [pc, #64]	; (803b9d0 <RCC_AHB1PeriphClockCmd+0x44>)
 803b990:	4218      	tst	r0, r3
 803b992:	4604      	mov	r4, r0
 803b994:	460d      	mov	r5, r1
 803b996:	d109      	bne.n	803b9ac <RCC_AHB1PeriphClockCmd+0x20>
 803b998:	b140      	cbz	r0, 803b9ac <RCC_AHB1PeriphClockCmd+0x20>
 803b99a:	2d01      	cmp	r5, #1
 803b99c:	d80d      	bhi.n	803b9ba <RCC_AHB1PeriphClockCmd+0x2e>
 803b99e:	b98d      	cbnz	r5, 803b9c4 <RCC_AHB1PeriphClockCmd+0x38>
 803b9a0:	4b0c      	ldr	r3, [pc, #48]	; (803b9d4 <RCC_AHB1PeriphClockCmd+0x48>)
 803b9a2:	6b18      	ldr	r0, [r3, #48]	; 0x30
 803b9a4:	ea20 0404 	bic.w	r4, r0, r4
 803b9a8:	631c      	str	r4, [r3, #48]	; 0x30
 803b9aa:	bd38      	pop	{r3, r4, r5, pc}
 803b9ac:	480a      	ldr	r0, [pc, #40]	; (803b9d8 <RCC_AHB1PeriphClockCmd+0x4c>)
 803b9ae:	f640 013b 	movw	r1, #2107	; 0x83b
 803b9b2:	f7e6 ff6b 	bl	802288c <assert_failed>
 803b9b6:	2d01      	cmp	r5, #1
 803b9b8:	d9f1      	bls.n	803b99e <RCC_AHB1PeriphClockCmd+0x12>
 803b9ba:	4807      	ldr	r0, [pc, #28]	; (803b9d8 <RCC_AHB1PeriphClockCmd+0x4c>)
 803b9bc:	f640 013d 	movw	r1, #2109	; 0x83d
 803b9c0:	f7e6 ff64 	bl	802288c <assert_failed>
 803b9c4:	4b03      	ldr	r3, [pc, #12]	; (803b9d4 <RCC_AHB1PeriphClockCmd+0x48>)
 803b9c6:	6b18      	ldr	r0, [r3, #48]	; 0x30
 803b9c8:	4304      	orrs	r4, r0
 803b9ca:	631c      	str	r4, [r3, #48]	; 0x30
 803b9cc:	bd38      	pop	{r3, r4, r5, pc}
 803b9ce:	bf00      	nop
 803b9d0:	010be800 	.word	0x010be800
 803b9d4:	40023800 	.word	0x40023800
 803b9d8:	08048d54 	.word	0x08048d54

0803b9dc <RCC_APB1PeriphClockCmd>:
 803b9dc:	f410 5f58 	tst.w	r0, #13824	; 0x3600
 803b9e0:	b538      	push	{r3, r4, r5, lr}
 803b9e2:	4604      	mov	r4, r0
 803b9e4:	460d      	mov	r5, r1
 803b9e6:	d109      	bne.n	803b9fc <RCC_APB1PeriphClockCmd+0x20>
 803b9e8:	b140      	cbz	r0, 803b9fc <RCC_APB1PeriphClockCmd+0x20>
 803b9ea:	2d01      	cmp	r5, #1
 803b9ec:	d80d      	bhi.n	803ba0a <RCC_APB1PeriphClockCmd+0x2e>
 803b9ee:	b98d      	cbnz	r5, 803ba14 <RCC_APB1PeriphClockCmd+0x38>
 803b9f0:	4b0b      	ldr	r3, [pc, #44]	; (803ba20 <RCC_APB1PeriphClockCmd+0x44>)
 803b9f2:	6c18      	ldr	r0, [r3, #64]	; 0x40
 803b9f4:	ea20 0404 	bic.w	r4, r0, r4
 803b9f8:	641c      	str	r4, [r3, #64]	; 0x40
 803b9fa:	bd38      	pop	{r3, r4, r5, pc}
 803b9fc:	4809      	ldr	r0, [pc, #36]	; (803ba24 <RCC_APB1PeriphClockCmd+0x48>)
 803b9fe:	f640 01b2 	movw	r1, #2226	; 0x8b2
 803ba02:	f7e6 ff43 	bl	802288c <assert_failed>
 803ba06:	2d01      	cmp	r5, #1
 803ba08:	d9f1      	bls.n	803b9ee <RCC_APB1PeriphClockCmd+0x12>
 803ba0a:	4806      	ldr	r0, [pc, #24]	; (803ba24 <RCC_APB1PeriphClockCmd+0x48>)
 803ba0c:	f640 01b3 	movw	r1, #2227	; 0x8b3
 803ba10:	f7e6 ff3c 	bl	802288c <assert_failed>
 803ba14:	4b02      	ldr	r3, [pc, #8]	; (803ba20 <RCC_APB1PeriphClockCmd+0x44>)
 803ba16:	6c18      	ldr	r0, [r3, #64]	; 0x40
 803ba18:	4304      	orrs	r4, r0
 803ba1a:	641c      	str	r4, [r3, #64]	; 0x40
 803ba1c:	bd38      	pop	{r3, r4, r5, pc}
 803ba1e:	bf00      	nop
 803ba20:	40023800 	.word	0x40023800
 803ba24:	08048d54 	.word	0x08048d54

0803ba28 <RCC_APB2PeriphClockCmd>:
 803ba28:	b538      	push	{r3, r4, r5, lr}
 803ba2a:	4b10      	ldr	r3, [pc, #64]	; (803ba6c <RCC_APB2PeriphClockCmd+0x44>)
 803ba2c:	4003      	ands	r3, r0
 803ba2e:	4604      	mov	r4, r0
 803ba30:	460d      	mov	r5, r1
 803ba32:	b94b      	cbnz	r3, 803ba48 <RCC_APB2PeriphClockCmd+0x20>
 803ba34:	b140      	cbz	r0, 803ba48 <RCC_APB2PeriphClockCmd+0x20>
 803ba36:	2d01      	cmp	r5, #1
 803ba38:	d80d      	bhi.n	803ba56 <RCC_APB2PeriphClockCmd+0x2e>
 803ba3a:	b98d      	cbnz	r5, 803ba60 <RCC_APB2PeriphClockCmd+0x38>
 803ba3c:	4b0c      	ldr	r3, [pc, #48]	; (803ba70 <RCC_APB2PeriphClockCmd+0x48>)
 803ba3e:	6c58      	ldr	r0, [r3, #68]	; 0x44
 803ba40:	ea20 0404 	bic.w	r4, r0, r4
 803ba44:	645c      	str	r4, [r3, #68]	; 0x44
 803ba46:	bd38      	pop	{r3, r4, r5, pc}
 803ba48:	480a      	ldr	r0, [pc, #40]	; (803ba74 <RCC_APB2PeriphClockCmd+0x4c>)
 803ba4a:	f640 01e6 	movw	r1, #2278	; 0x8e6
 803ba4e:	f7e6 ff1d 	bl	802288c <assert_failed>
 803ba52:	2d01      	cmp	r5, #1
 803ba54:	d9f1      	bls.n	803ba3a <RCC_APB2PeriphClockCmd+0x12>
 803ba56:	4807      	ldr	r0, [pc, #28]	; (803ba74 <RCC_APB2PeriphClockCmd+0x4c>)
 803ba58:	f640 01e7 	movw	r1, #2279	; 0x8e7
 803ba5c:	f7e6 ff16 	bl	802288c <assert_failed>
 803ba60:	4b03      	ldr	r3, [pc, #12]	; (803ba70 <RCC_APB2PeriphClockCmd+0x48>)
 803ba62:	6c58      	ldr	r0, [r3, #68]	; 0x44
 803ba64:	4304      	orrs	r4, r0
 803ba66:	645c      	str	r4, [r3, #68]	; 0x44
 803ba68:	bd38      	pop	{r3, r4, r5, pc}
 803ba6a:	bf00      	nop
 803ba6c:	f008000c 	.word	0xf008000c
 803ba70:	40023800 	.word	0x40023800
 803ba74:	08048d54 	.word	0x08048d54

0803ba78 <RCC_AHB1PeriphResetCmd>:
 803ba78:	b538      	push	{r3, r4, r5, lr}
 803ba7a:	4b10      	ldr	r3, [pc, #64]	; (803babc <RCC_AHB1PeriphResetCmd+0x44>)
 803ba7c:	4218      	tst	r0, r3
 803ba7e:	4604      	mov	r4, r0
 803ba80:	460d      	mov	r5, r1
 803ba82:	d109      	bne.n	803ba98 <RCC_AHB1PeriphResetCmd+0x20>
 803ba84:	b140      	cbz	r0, 803ba98 <RCC_AHB1PeriphResetCmd+0x20>
 803ba86:	2d01      	cmp	r5, #1
 803ba88:	d80d      	bhi.n	803baa6 <RCC_AHB1PeriphResetCmd+0x2e>
 803ba8a:	b98d      	cbnz	r5, 803bab0 <RCC_AHB1PeriphResetCmd+0x38>
 803ba8c:	4b0c      	ldr	r3, [pc, #48]	; (803bac0 <RCC_AHB1PeriphResetCmd+0x48>)
 803ba8e:	6918      	ldr	r0, [r3, #16]
 803ba90:	ea20 0404 	bic.w	r4, r0, r4
 803ba94:	611c      	str	r4, [r3, #16]
 803ba96:	bd38      	pop	{r3, r4, r5, pc}
 803ba98:	480a      	ldr	r0, [pc, #40]	; (803bac4 <RCC_AHB1PeriphResetCmd+0x4c>)
 803ba9a:	f44f 6111 	mov.w	r1, #2320	; 0x910
 803ba9e:	f7e6 fef5 	bl	802288c <assert_failed>
 803baa2:	2d01      	cmp	r5, #1
 803baa4:	d9f1      	bls.n	803ba8a <RCC_AHB1PeriphResetCmd+0x12>
 803baa6:	4807      	ldr	r0, [pc, #28]	; (803bac4 <RCC_AHB1PeriphResetCmd+0x4c>)
 803baa8:	f640 1111 	movw	r1, #2321	; 0x911
 803baac:	f7e6 feee 	bl	802288c <assert_failed>
 803bab0:	4b03      	ldr	r3, [pc, #12]	; (803bac0 <RCC_AHB1PeriphResetCmd+0x48>)
 803bab2:	6918      	ldr	r0, [r3, #16]
 803bab4:	4304      	orrs	r4, r0
 803bab6:	611c      	str	r4, [r3, #16]
 803bab8:	bd38      	pop	{r3, r4, r5, pc}
 803baba:	bf00      	nop
 803babc:	051fe800 	.word	0x051fe800
 803bac0:	40023800 	.word	0x40023800
 803bac4:	08048d54 	.word	0x08048d54

0803bac8 <SPI_Init>:
 803bac8:	4b52      	ldr	r3, [pc, #328]	; (803bc14 <SPI_Init+0x14c>)
 803baca:	4298      	cmp	r0, r3
 803bacc:	b570      	push	{r4, r5, r6, lr}
 803bace:	4605      	mov	r5, r0
 803bad0:	460c      	mov	r4, r1
 803bad2:	d018      	beq.n	803bb06 <SPI_Init+0x3e>
 803bad4:	f5a3 4378 	sub.w	r3, r3, #63488	; 0xf800
 803bad8:	4298      	cmp	r0, r3
 803bada:	d014      	beq.n	803bb06 <SPI_Init+0x3e>
 803badc:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 803bae0:	4298      	cmp	r0, r3
 803bae2:	d010      	beq.n	803bb06 <SPI_Init+0x3e>
 803bae4:	f503 4378 	add.w	r3, r3, #63488	; 0xf800
 803bae8:	4298      	cmp	r0, r3
 803baea:	d00c      	beq.n	803bb06 <SPI_Init+0x3e>
 803baec:	f503 53e0 	add.w	r3, r3, #7168	; 0x1c00
 803baf0:	4298      	cmp	r0, r3
 803baf2:	d008      	beq.n	803bb06 <SPI_Init+0x3e>
 803baf4:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 803baf8:	4298      	cmp	r0, r3
 803bafa:	d004      	beq.n	803bb06 <SPI_Init+0x3e>
 803bafc:	4846      	ldr	r0, [pc, #280]	; (803bc18 <SPI_Init+0x150>)
 803bafe:	f240 1121 	movw	r1, #289	; 0x121
 803bb02:	f7e6 fec3 	bl	802288c <assert_failed>
 803bb06:	8823      	ldrh	r3, [r4, #0]
 803bb08:	f423 6280 	bic.w	r2, r3, #1024	; 0x400
 803bb0c:	b14a      	cbz	r2, 803bb22 <SPI_Init+0x5a>
 803bb0e:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 803bb12:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 803bb16:	d004      	beq.n	803bb22 <SPI_Init+0x5a>
 803bb18:	483f      	ldr	r0, [pc, #252]	; (803bc18 <SPI_Init+0x150>)
 803bb1a:	f44f 7192 	mov.w	r1, #292	; 0x124
 803bb1e:	f7e6 feb5 	bl	802288c <assert_failed>
 803bb22:	8863      	ldrh	r3, [r4, #2]
 803bb24:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 803bb28:	d001      	beq.n	803bb2e <SPI_Init+0x66>
 803bb2a:	2b00      	cmp	r3, #0
 803bb2c:	d153      	bne.n	803bbd6 <SPI_Init+0x10e>
 803bb2e:	88a3      	ldrh	r3, [r4, #4]
 803bb30:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 803bb34:	b29b      	uxth	r3, r3
 803bb36:	2b00      	cmp	r3, #0
 803bb38:	d158      	bne.n	803bbec <SPI_Init+0x124>
 803bb3a:	88e3      	ldrh	r3, [r4, #6]
 803bb3c:	f023 0302 	bic.w	r3, r3, #2
 803bb40:	b29b      	uxth	r3, r3
 803bb42:	b123      	cbz	r3, 803bb4e <SPI_Init+0x86>
 803bb44:	4834      	ldr	r0, [pc, #208]	; (803bc18 <SPI_Init+0x150>)
 803bb46:	f240 1127 	movw	r1, #295	; 0x127
 803bb4a:	f7e6 fe9f 	bl	802288c <assert_failed>
 803bb4e:	8923      	ldrh	r3, [r4, #8]
 803bb50:	2b01      	cmp	r3, #1
 803bb52:	d904      	bls.n	803bb5e <SPI_Init+0x96>
 803bb54:	4830      	ldr	r0, [pc, #192]	; (803bc18 <SPI_Init+0x150>)
 803bb56:	f44f 7194 	mov.w	r1, #296	; 0x128
 803bb5a:	f7e6 fe97 	bl	802288c <assert_failed>
 803bb5e:	8963      	ldrh	r3, [r4, #10]
 803bb60:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 803bb64:	b29b      	uxth	r3, r3
 803bb66:	2b00      	cmp	r3, #0
 803bb68:	d14d      	bne.n	803bc06 <SPI_Init+0x13e>
 803bb6a:	89a3      	ldrh	r3, [r4, #12]
 803bb6c:	f023 0318 	bic.w	r3, r3, #24
 803bb70:	b29b      	uxth	r3, r3
 803bb72:	b133      	cbz	r3, 803bb82 <SPI_Init+0xba>
 803bb74:	2b20      	cmp	r3, #32
 803bb76:	d004      	beq.n	803bb82 <SPI_Init+0xba>
 803bb78:	4827      	ldr	r0, [pc, #156]	; (803bc18 <SPI_Init+0x150>)
 803bb7a:	f44f 7195 	mov.w	r1, #298	; 0x12a
 803bb7e:	f7e6 fe85 	bl	802288c <assert_failed>
 803bb82:	89e3      	ldrh	r3, [r4, #14]
 803bb84:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 803bb88:	b29b      	uxth	r3, r3
 803bb8a:	b123      	cbz	r3, 803bb96 <SPI_Init+0xce>
 803bb8c:	4822      	ldr	r0, [pc, #136]	; (803bc18 <SPI_Init+0x150>)
 803bb8e:	f240 112b 	movw	r1, #299	; 0x12b
 803bb92:	f7e6 fe7b 	bl	802288c <assert_failed>
 803bb96:	8a22      	ldrh	r2, [r4, #16]
 803bb98:	2a00      	cmp	r2, #0
 803bb9a:	d02d      	beq.n	803bbf8 <SPI_Init+0x130>
 803bb9c:	8861      	ldrh	r1, [r4, #2]
 803bb9e:	8823      	ldrh	r3, [r4, #0]
 803bba0:	88a0      	ldrh	r0, [r4, #4]
 803bba2:	89a6      	ldrh	r6, [r4, #12]
 803bba4:	430b      	orrs	r3, r1
 803bba6:	88e1      	ldrh	r1, [r4, #6]
 803bba8:	4303      	orrs	r3, r0
 803bbaa:	8920      	ldrh	r0, [r4, #8]
 803bbac:	430b      	orrs	r3, r1
 803bbae:	8961      	ldrh	r1, [r4, #10]
 803bbb0:	4303      	orrs	r3, r0
 803bbb2:	430b      	orrs	r3, r1
 803bbb4:	89e0      	ldrh	r0, [r4, #14]
 803bbb6:	8829      	ldrh	r1, [r5, #0]
 803bbb8:	4333      	orrs	r3, r6
 803bbba:	4303      	orrs	r3, r0
 803bbbc:	f401 5141 	and.w	r1, r1, #12352	; 0x3040
 803bbc0:	430b      	orrs	r3, r1
 803bbc2:	b29b      	uxth	r3, r3
 803bbc4:	802b      	strh	r3, [r5, #0]
 803bbc6:	8bab      	ldrh	r3, [r5, #28]
 803bbc8:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 803bbcc:	041b      	lsls	r3, r3, #16
 803bbce:	0c1b      	lsrs	r3, r3, #16
 803bbd0:	83ab      	strh	r3, [r5, #28]
 803bbd2:	822a      	strh	r2, [r5, #16]
 803bbd4:	bd70      	pop	{r4, r5, r6, pc}
 803bbd6:	4810      	ldr	r0, [pc, #64]	; (803bc18 <SPI_Init+0x150>)
 803bbd8:	f240 1125 	movw	r1, #293	; 0x125
 803bbdc:	f7e6 fe56 	bl	802288c <assert_failed>
 803bbe0:	88a3      	ldrh	r3, [r4, #4]
 803bbe2:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 803bbe6:	b29b      	uxth	r3, r3
 803bbe8:	2b00      	cmp	r3, #0
 803bbea:	d0a6      	beq.n	803bb3a <SPI_Init+0x72>
 803bbec:	480a      	ldr	r0, [pc, #40]	; (803bc18 <SPI_Init+0x150>)
 803bbee:	f44f 7193 	mov.w	r1, #294	; 0x126
 803bbf2:	f7e6 fe4b 	bl	802288c <assert_failed>
 803bbf6:	e7a0      	b.n	803bb3a <SPI_Init+0x72>
 803bbf8:	4807      	ldr	r0, [pc, #28]	; (803bc18 <SPI_Init+0x150>)
 803bbfa:	f44f 7196 	mov.w	r1, #300	; 0x12c
 803bbfe:	f7e6 fe45 	bl	802288c <assert_failed>
 803bc02:	8a22      	ldrh	r2, [r4, #16]
 803bc04:	e7ca      	b.n	803bb9c <SPI_Init+0xd4>
 803bc06:	4804      	ldr	r0, [pc, #16]	; (803bc18 <SPI_Init+0x150>)
 803bc08:	f240 1129 	movw	r1, #297	; 0x129
 803bc0c:	f7e6 fe3e 	bl	802288c <assert_failed>
 803bc10:	e7ab      	b.n	803bb6a <SPI_Init+0xa2>
 803bc12:	bf00      	nop
 803bc14:	40013000 	.word	0x40013000
 803bc18:	08048dd8 	.word	0x08048dd8

0803bc1c <SPI_StructInit>:
 803bc1c:	2300      	movs	r3, #0
 803bc1e:	2207      	movs	r2, #7
 803bc20:	8202      	strh	r2, [r0, #16]
 803bc22:	8003      	strh	r3, [r0, #0]
 803bc24:	8043      	strh	r3, [r0, #2]
 803bc26:	8083      	strh	r3, [r0, #4]
 803bc28:	80c3      	strh	r3, [r0, #6]
 803bc2a:	8103      	strh	r3, [r0, #8]
 803bc2c:	8143      	strh	r3, [r0, #10]
 803bc2e:	8183      	strh	r3, [r0, #12]
 803bc30:	81c3      	strh	r3, [r0, #14]
 803bc32:	4770      	bx	lr

0803bc34 <SPI_Cmd>:
 803bc34:	b538      	push	{r3, r4, r5, lr}
 803bc36:	4b19      	ldr	r3, [pc, #100]	; (803bc9c <SPI_Cmd+0x68>)
 803bc38:	4298      	cmp	r0, r3
 803bc3a:	4604      	mov	r4, r0
 803bc3c:	460d      	mov	r5, r1
 803bc3e:	d018      	beq.n	803bc72 <SPI_Cmd+0x3e>
 803bc40:	f5a3 4378 	sub.w	r3, r3, #63488	; 0xf800
 803bc44:	4298      	cmp	r0, r3
 803bc46:	d014      	beq.n	803bc72 <SPI_Cmd+0x3e>
 803bc48:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 803bc4c:	4298      	cmp	r0, r3
 803bc4e:	d010      	beq.n	803bc72 <SPI_Cmd+0x3e>
 803bc50:	f503 4378 	add.w	r3, r3, #63488	; 0xf800
 803bc54:	4298      	cmp	r0, r3
 803bc56:	d00c      	beq.n	803bc72 <SPI_Cmd+0x3e>
 803bc58:	f503 53e0 	add.w	r3, r3, #7168	; 0x1c00
 803bc5c:	4298      	cmp	r0, r3
 803bc5e:	d008      	beq.n	803bc72 <SPI_Cmd+0x3e>
 803bc60:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 803bc64:	4298      	cmp	r0, r3
 803bc66:	d004      	beq.n	803bc72 <SPI_Cmd+0x3e>
 803bc68:	480d      	ldr	r0, [pc, #52]	; (803bca0 <SPI_Cmd+0x6c>)
 803bc6a:	f240 212b 	movw	r1, #555	; 0x22b
 803bc6e:	f7e6 fe0d 	bl	802288c <assert_failed>
 803bc72:	2d01      	cmp	r5, #1
 803bc74:	d807      	bhi.n	803bc86 <SPI_Cmd+0x52>
 803bc76:	b95d      	cbnz	r5, 803bc90 <SPI_Cmd+0x5c>
 803bc78:	8823      	ldrh	r3, [r4, #0]
 803bc7a:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 803bc7e:	041b      	lsls	r3, r3, #16
 803bc80:	0c1b      	lsrs	r3, r3, #16
 803bc82:	8023      	strh	r3, [r4, #0]
 803bc84:	bd38      	pop	{r3, r4, r5, pc}
 803bc86:	4806      	ldr	r0, [pc, #24]	; (803bca0 <SPI_Cmd+0x6c>)
 803bc88:	f44f 710b 	mov.w	r1, #556	; 0x22c
 803bc8c:	f7e6 fdfe 	bl	802288c <assert_failed>
 803bc90:	8823      	ldrh	r3, [r4, #0]
 803bc92:	b29b      	uxth	r3, r3
 803bc94:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 803bc98:	8023      	strh	r3, [r4, #0]
 803bc9a:	bd38      	pop	{r3, r4, r5, pc}
 803bc9c:	40013000 	.word	0x40013000
 803bca0:	08048dd8 	.word	0x08048dd8

0803bca4 <SYSCFG_EXTILineConfig>:
 803bca4:	280a      	cmp	r0, #10
 803bca6:	b538      	push	{r3, r4, r5, lr}
 803bca8:	4605      	mov	r5, r0
 803bcaa:	460c      	mov	r4, r1
 803bcac:	d816      	bhi.n	803bcdc <SYSCFG_EXTILineConfig+0x38>
 803bcae:	2c0f      	cmp	r4, #15
 803bcb0:	d81a      	bhi.n	803bce8 <SYSCFG_EXTILineConfig+0x44>
 803bcb2:	f004 03fc 	and.w	r3, r4, #252	; 0xfc
 803bcb6:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 803bcba:	f503 339c 	add.w	r3, r3, #79872	; 0x13800
 803bcbe:	f004 0403 	and.w	r4, r4, #3
 803bcc2:	689a      	ldr	r2, [r3, #8]
 803bcc4:	00a4      	lsls	r4, r4, #2
 803bcc6:	210f      	movs	r1, #15
 803bcc8:	40a1      	lsls	r1, r4
 803bcca:	ea22 0201 	bic.w	r2, r2, r1
 803bcce:	609a      	str	r2, [r3, #8]
 803bcd0:	6898      	ldr	r0, [r3, #8]
 803bcd2:	fa05 f404 	lsl.w	r4, r5, r4
 803bcd6:	4304      	orrs	r4, r0
 803bcd8:	609c      	str	r4, [r3, #8]
 803bcda:	bd38      	pop	{r3, r4, r5, pc}
 803bcdc:	4805      	ldr	r0, [pc, #20]	; (803bcf4 <SYSCFG_EXTILineConfig+0x50>)
 803bcde:	21ad      	movs	r1, #173	; 0xad
 803bce0:	f7e6 fdd4 	bl	802288c <assert_failed>
 803bce4:	2c0f      	cmp	r4, #15
 803bce6:	d9e4      	bls.n	803bcb2 <SYSCFG_EXTILineConfig+0xe>
 803bce8:	4802      	ldr	r0, [pc, #8]	; (803bcf4 <SYSCFG_EXTILineConfig+0x50>)
 803bcea:	21ae      	movs	r1, #174	; 0xae
 803bcec:	f7e6 fdce 	bl	802288c <assert_failed>
 803bcf0:	e7df      	b.n	803bcb2 <SYSCFG_EXTILineConfig+0xe>
 803bcf2:	bf00      	nop
 803bcf4:	08048e5c 	.word	0x08048e5c

0803bcf8 <SYSCFG_ETH_MediaInterfaceConfig>:
 803bcf8:	2801      	cmp	r0, #1
 803bcfa:	b510      	push	{r4, lr}
 803bcfc:	4604      	mov	r4, r0
 803bcfe:	d903      	bls.n	803bd08 <SYSCFG_ETH_MediaInterfaceConfig+0x10>
 803bd00:	4803      	ldr	r0, [pc, #12]	; (803bd10 <SYSCFG_ETH_MediaInterfaceConfig+0x18>)
 803bd02:	21bf      	movs	r1, #191	; 0xbf
 803bd04:	f7e6 fdc2 	bl	802288c <assert_failed>
 803bd08:	4b02      	ldr	r3, [pc, #8]	; (803bd14 <SYSCFG_ETH_MediaInterfaceConfig+0x1c>)
 803bd0a:	601c      	str	r4, [r3, #0]
 803bd0c:	bd10      	pop	{r4, pc}
 803bd0e:	bf00      	nop
 803bd10:	08048e5c 	.word	0x08048e5c
 803bd14:	422700dc 	.word	0x422700dc

0803bd18 <USART_Init>:
 803bd18:	b570      	push	{r4, r5, r6, lr}
 803bd1a:	4b75      	ldr	r3, [pc, #468]	; (803bef0 <USART_Init+0x1d8>)
 803bd1c:	4298      	cmp	r0, r3
 803bd1e:	b084      	sub	sp, #16
 803bd20:	4604      	mov	r4, r0
 803bd22:	460d      	mov	r5, r1
 803bd24:	d027      	beq.n	803bd76 <USART_Init+0x5e>
 803bd26:	f5a3 434c 	sub.w	r3, r3, #52224	; 0xcc00
 803bd2a:	4298      	cmp	r0, r3
 803bd2c:	d023      	beq.n	803bd76 <USART_Init+0x5e>
 803bd2e:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 803bd32:	4298      	cmp	r0, r3
 803bd34:	d01f      	beq.n	803bd76 <USART_Init+0x5e>
 803bd36:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 803bd3a:	4298      	cmp	r0, r3
 803bd3c:	d01b      	beq.n	803bd76 <USART_Init+0x5e>
 803bd3e:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 803bd42:	4298      	cmp	r0, r3
 803bd44:	d017      	beq.n	803bd76 <USART_Init+0x5e>
 803bd46:	f503 4344 	add.w	r3, r3, #50176	; 0xc400
 803bd4a:	4298      	cmp	r0, r3
 803bd4c:	d013      	beq.n	803bd76 <USART_Init+0x5e>
 803bd4e:	f5a3 431c 	sub.w	r3, r3, #39936	; 0x9c00
 803bd52:	4298      	cmp	r0, r3
 803bd54:	d00f      	beq.n	803bd76 <USART_Init+0x5e>
 803bd56:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 803bd5a:	4298      	cmp	r0, r3
 803bd5c:	d00b      	beq.n	803bd76 <USART_Init+0x5e>
 803bd5e:	f503 431c 	add.w	r3, r3, #39936	; 0x9c00
 803bd62:	4298      	cmp	r0, r3
 803bd64:	d007      	beq.n	803bd76 <USART_Init+0x5e>
 803bd66:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 803bd6a:	4298      	cmp	r0, r3
 803bd6c:	d003      	beq.n	803bd76 <USART_Init+0x5e>
 803bd6e:	4861      	ldr	r0, [pc, #388]	; (803bef4 <USART_Init+0x1dc>)
 803bd70:	21fe      	movs	r1, #254	; 0xfe
 803bd72:	f7e6 fd8b 	bl	802288c <assert_failed>
 803bd76:	682b      	ldr	r3, [r5, #0]
 803bd78:	4a5f      	ldr	r2, [pc, #380]	; (803bef8 <USART_Init+0x1e0>)
 803bd7a:	3b01      	subs	r3, #1
 803bd7c:	4293      	cmp	r3, r2
 803bd7e:	f200 80ab 	bhi.w	803bed8 <USART_Init+0x1c0>
 803bd82:	88ab      	ldrh	r3, [r5, #4]
 803bd84:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 803bd88:	b29b      	uxth	r3, r3
 803bd8a:	b123      	cbz	r3, 803bd96 <USART_Init+0x7e>
 803bd8c:	4859      	ldr	r0, [pc, #356]	; (803bef4 <USART_Init+0x1dc>)
 803bd8e:	f44f 7180 	mov.w	r1, #256	; 0x100
 803bd92:	f7e6 fd7b 	bl	802288c <assert_failed>
 803bd96:	88eb      	ldrh	r3, [r5, #6]
 803bd98:	f423 5340 	bic.w	r3, r3, #12288	; 0x3000
 803bd9c:	b29b      	uxth	r3, r3
 803bd9e:	b123      	cbz	r3, 803bdaa <USART_Init+0x92>
 803bda0:	4854      	ldr	r0, [pc, #336]	; (803bef4 <USART_Init+0x1dc>)
 803bda2:	f240 1101 	movw	r1, #257	; 0x101
 803bda6:	f7e6 fd71 	bl	802288c <assert_failed>
 803bdaa:	892b      	ldrh	r3, [r5, #8]
 803bdac:	f423 6280 	bic.w	r2, r3, #1024	; 0x400
 803bdb0:	b11a      	cbz	r2, 803bdba <USART_Init+0xa2>
 803bdb2:	f5b3 6fc0 	cmp.w	r3, #1536	; 0x600
 803bdb6:	f040 8094 	bne.w	803bee2 <USART_Init+0x1ca>
 803bdba:	896b      	ldrh	r3, [r5, #10]
 803bdbc:	f023 020c 	bic.w	r2, r3, #12
 803bdc0:	2a00      	cmp	r2, #0
 803bdc2:	d150      	bne.n	803be66 <USART_Init+0x14e>
 803bdc4:	2b00      	cmp	r3, #0
 803bdc6:	d04e      	beq.n	803be66 <USART_Init+0x14e>
 803bdc8:	89ab      	ldrh	r3, [r5, #12]
 803bdca:	4619      	mov	r1, r3
 803bdcc:	b31b      	cbz	r3, 803be16 <USART_Init+0xfe>
 803bdce:	f423 7200 	bic.w	r2, r3, #512	; 0x200
 803bdd2:	f5b2 7f80 	cmp.w	r2, #256	; 0x100
 803bdd6:	d00a      	beq.n	803bdee <USART_Init+0xd6>
 803bdd8:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 803bddc:	d007      	beq.n	803bdee <USART_Init+0xd6>
 803bdde:	f44f 7182 	mov.w	r1, #260	; 0x104
 803bde2:	4844      	ldr	r0, [pc, #272]	; (803bef4 <USART_Init+0x1dc>)
 803bde4:	f7e6 fd52 	bl	802288c <assert_failed>
 803bde8:	89ab      	ldrh	r3, [r5, #12]
 803bdea:	4619      	mov	r1, r3
 803bdec:	b19b      	cbz	r3, 803be16 <USART_Init+0xfe>
 803bdee:	4a40      	ldr	r2, [pc, #256]	; (803bef0 <USART_Init+0x1d8>)
 803bdf0:	4294      	cmp	r4, r2
 803bdf2:	d063      	beq.n	803bebc <USART_Init+0x1a4>
 803bdf4:	4a41      	ldr	r2, [pc, #260]	; (803befc <USART_Init+0x1e4>)
 803bdf6:	4294      	cmp	r4, r2
 803bdf8:	d060      	beq.n	803bebc <USART_Init+0x1a4>
 803bdfa:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 803bdfe:	4294      	cmp	r4, r2
 803be00:	d05c      	beq.n	803bebc <USART_Init+0x1a4>
 803be02:	f502 424c 	add.w	r2, r2, #52224	; 0xcc00
 803be06:	4294      	cmp	r4, r2
 803be08:	d058      	beq.n	803bebc <USART_Init+0x1a4>
 803be0a:	f240 1109 	movw	r1, #265	; 0x109
 803be0e:	4839      	ldr	r0, [pc, #228]	; (803bef4 <USART_Init+0x1dc>)
 803be10:	f7e6 fd3c 	bl	802288c <assert_failed>
 803be14:	89a9      	ldrh	r1, [r5, #12]
 803be16:	8a22      	ldrh	r2, [r4, #16]
 803be18:	88e8      	ldrh	r0, [r5, #6]
 803be1a:	88ab      	ldrh	r3, [r5, #4]
 803be1c:	892e      	ldrh	r6, [r5, #8]
 803be1e:	b292      	uxth	r2, r2
 803be20:	f422 5240 	bic.w	r2, r2, #12288	; 0x3000
 803be24:	4302      	orrs	r2, r0
 803be26:	8222      	strh	r2, [r4, #16]
 803be28:	89a2      	ldrh	r2, [r4, #12]
 803be2a:	8968      	ldrh	r0, [r5, #10]
 803be2c:	f422 52b0 	bic.w	r2, r2, #5632	; 0x1600
 803be30:	f022 020c 	bic.w	r2, r2, #12
 803be34:	4333      	orrs	r3, r6
 803be36:	4303      	orrs	r3, r0
 803be38:	0412      	lsls	r2, r2, #16
 803be3a:	0c12      	lsrs	r2, r2, #16
 803be3c:	b29b      	uxth	r3, r3
 803be3e:	4313      	orrs	r3, r2
 803be40:	81a3      	strh	r3, [r4, #12]
 803be42:	8aa3      	ldrh	r3, [r4, #20]
 803be44:	b29b      	uxth	r3, r3
 803be46:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 803be4a:	430b      	orrs	r3, r1
 803be4c:	82a3      	strh	r3, [r4, #20]
 803be4e:	4668      	mov	r0, sp
 803be50:	f7ff fd54 	bl	803b8fc <RCC_GetClocksFreq>
 803be54:	4b26      	ldr	r3, [pc, #152]	; (803bef0 <USART_Init+0x1d8>)
 803be56:	429c      	cmp	r4, r3
 803be58:	d00b      	beq.n	803be72 <USART_Init+0x15a>
 803be5a:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 803be5e:	429c      	cmp	r4, r3
 803be60:	d007      	beq.n	803be72 <USART_Init+0x15a>
 803be62:	9a02      	ldr	r2, [sp, #8]
 803be64:	e006      	b.n	803be74 <USART_Init+0x15c>
 803be66:	4823      	ldr	r0, [pc, #140]	; (803bef4 <USART_Init+0x1dc>)
 803be68:	f240 1103 	movw	r1, #259	; 0x103
 803be6c:	f7e6 fd0e 	bl	802288c <assert_failed>
 803be70:	e7aa      	b.n	803bdc8 <USART_Init+0xb0>
 803be72:	9a03      	ldr	r2, [sp, #12]
 803be74:	89a3      	ldrh	r3, [r4, #12]
 803be76:	f413 4f00 	tst.w	r3, #32768	; 0x8000
 803be7a:	682b      	ldr	r3, [r5, #0]
 803be7c:	4d20      	ldr	r5, [pc, #128]	; (803bf00 <USART_Init+0x1e8>)
 803be7e:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 803be82:	bf14      	ite	ne
 803be84:	005b      	lslne	r3, r3, #1
 803be86:	009b      	lsleq	r3, r3, #2
 803be88:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 803be8c:	fbb2 f0f3 	udiv	r0, r2, r3
 803be90:	89a2      	ldrh	r2, [r4, #12]
 803be92:	fba5 3100 	umull	r3, r1, r5, r0
 803be96:	0949      	lsrs	r1, r1, #5
 803be98:	2364      	movs	r3, #100	; 0x64
 803be9a:	0412      	lsls	r2, r2, #16
 803be9c:	fb03 0311 	mls	r3, r3, r1, r0
 803bea0:	ea4f 1101 	mov.w	r1, r1, lsl #4
 803bea4:	d40c      	bmi.n	803bec0 <USART_Init+0x1a8>
 803bea6:	011b      	lsls	r3, r3, #4
 803bea8:	3332      	adds	r3, #50	; 0x32
 803beaa:	fba5 2303 	umull	r2, r3, r5, r3
 803beae:	f3c3 1343 	ubfx	r3, r3, #5, #4
 803beb2:	430b      	orrs	r3, r1
 803beb4:	b29b      	uxth	r3, r3
 803beb6:	8123      	strh	r3, [r4, #8]
 803beb8:	b004      	add	sp, #16
 803beba:	bd70      	pop	{r4, r5, r6, pc}
 803bebc:	4619      	mov	r1, r3
 803bebe:	e7aa      	b.n	803be16 <USART_Init+0xfe>
 803bec0:	00da      	lsls	r2, r3, #3
 803bec2:	3232      	adds	r2, #50	; 0x32
 803bec4:	fba5 3202 	umull	r3, r2, r5, r2
 803bec8:	f3c2 1242 	ubfx	r2, r2, #5, #3
 803becc:	ea42 0301 	orr.w	r3, r2, r1
 803bed0:	b29b      	uxth	r3, r3
 803bed2:	8123      	strh	r3, [r4, #8]
 803bed4:	b004      	add	sp, #16
 803bed6:	bd70      	pop	{r4, r5, r6, pc}
 803bed8:	4806      	ldr	r0, [pc, #24]	; (803bef4 <USART_Init+0x1dc>)
 803beda:	21ff      	movs	r1, #255	; 0xff
 803bedc:	f7e6 fcd6 	bl	802288c <assert_failed>
 803bee0:	e74f      	b.n	803bd82 <USART_Init+0x6a>
 803bee2:	4804      	ldr	r0, [pc, #16]	; (803bef4 <USART_Init+0x1dc>)
 803bee4:	f44f 7181 	mov.w	r1, #258	; 0x102
 803bee8:	f7e6 fcd0 	bl	802288c <assert_failed>
 803beec:	e765      	b.n	803bdba <USART_Init+0xa2>
 803beee:	bf00      	nop
 803bef0:	40011000 	.word	0x40011000
 803bef4:	08048ee4 	.word	0x08048ee4
 803bef8:	007270df 	.word	0x007270df
 803befc:	40004400 	.word	0x40004400
 803bf00:	51eb851f 	.word	0x51eb851f

0803bf04 <USART_Cmd>:
 803bf04:	b538      	push	{r3, r4, r5, lr}
 803bf06:	4b21      	ldr	r3, [pc, #132]	; (803bf8c <USART_Cmd+0x88>)
 803bf08:	4298      	cmp	r0, r3
 803bf0a:	4604      	mov	r4, r0
 803bf0c:	460d      	mov	r5, r1
 803bf0e:	d028      	beq.n	803bf62 <USART_Cmd+0x5e>
 803bf10:	f5a3 434c 	sub.w	r3, r3, #52224	; 0xcc00
 803bf14:	4298      	cmp	r0, r3
 803bf16:	d024      	beq.n	803bf62 <USART_Cmd+0x5e>
 803bf18:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 803bf1c:	4298      	cmp	r0, r3
 803bf1e:	d020      	beq.n	803bf62 <USART_Cmd+0x5e>
 803bf20:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 803bf24:	4298      	cmp	r0, r3
 803bf26:	d01c      	beq.n	803bf62 <USART_Cmd+0x5e>
 803bf28:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 803bf2c:	4298      	cmp	r0, r3
 803bf2e:	d018      	beq.n	803bf62 <USART_Cmd+0x5e>
 803bf30:	f503 4344 	add.w	r3, r3, #50176	; 0xc400
 803bf34:	4298      	cmp	r0, r3
 803bf36:	d014      	beq.n	803bf62 <USART_Cmd+0x5e>
 803bf38:	f5a3 431c 	sub.w	r3, r3, #39936	; 0x9c00
 803bf3c:	4298      	cmp	r0, r3
 803bf3e:	d010      	beq.n	803bf62 <USART_Cmd+0x5e>
 803bf40:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 803bf44:	4298      	cmp	r0, r3
 803bf46:	d00c      	beq.n	803bf62 <USART_Cmd+0x5e>
 803bf48:	f503 431c 	add.w	r3, r3, #39936	; 0x9c00
 803bf4c:	4298      	cmp	r0, r3
 803bf4e:	d008      	beq.n	803bf62 <USART_Cmd+0x5e>
 803bf50:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 803bf54:	4298      	cmp	r0, r3
 803bf56:	d004      	beq.n	803bf62 <USART_Cmd+0x5e>
 803bf58:	480d      	ldr	r0, [pc, #52]	; (803bf90 <USART_Cmd+0x8c>)
 803bf5a:	f44f 71d7 	mov.w	r1, #430	; 0x1ae
 803bf5e:	f7e6 fc95 	bl	802288c <assert_failed>
 803bf62:	2d01      	cmp	r5, #1
 803bf64:	d807      	bhi.n	803bf76 <USART_Cmd+0x72>
 803bf66:	b95d      	cbnz	r5, 803bf80 <USART_Cmd+0x7c>
 803bf68:	89a3      	ldrh	r3, [r4, #12]
 803bf6a:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 803bf6e:	041b      	lsls	r3, r3, #16
 803bf70:	0c1b      	lsrs	r3, r3, #16
 803bf72:	81a3      	strh	r3, [r4, #12]
 803bf74:	bd38      	pop	{r3, r4, r5, pc}
 803bf76:	4806      	ldr	r0, [pc, #24]	; (803bf90 <USART_Cmd+0x8c>)
 803bf78:	f240 11af 	movw	r1, #431	; 0x1af
 803bf7c:	f7e6 fc86 	bl	802288c <assert_failed>
 803bf80:	89a3      	ldrh	r3, [r4, #12]
 803bf82:	b29b      	uxth	r3, r3
 803bf84:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 803bf88:	81a3      	strh	r3, [r4, #12]
 803bf8a:	bd38      	pop	{r3, r4, r5, pc}
 803bf8c:	40011000 	.word	0x40011000
 803bf90:	08048ee4 	.word	0x08048ee4

0803bf94 <USART_SendData>:
 803bf94:	b538      	push	{r3, r4, r5, lr}
 803bf96:	4b1f      	ldr	r3, [pc, #124]	; (803c014 <USART_SendData+0x80>)
 803bf98:	4298      	cmp	r0, r3
 803bf9a:	4604      	mov	r4, r0
 803bf9c:	460d      	mov	r5, r1
 803bf9e:	d028      	beq.n	803bff2 <USART_SendData+0x5e>
 803bfa0:	f5a3 434c 	sub.w	r3, r3, #52224	; 0xcc00
 803bfa4:	4298      	cmp	r0, r3
 803bfa6:	d024      	beq.n	803bff2 <USART_SendData+0x5e>
 803bfa8:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 803bfac:	4298      	cmp	r0, r3
 803bfae:	d020      	beq.n	803bff2 <USART_SendData+0x5e>
 803bfb0:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 803bfb4:	4298      	cmp	r0, r3
 803bfb6:	d01c      	beq.n	803bff2 <USART_SendData+0x5e>
 803bfb8:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 803bfbc:	4298      	cmp	r0, r3
 803bfbe:	d018      	beq.n	803bff2 <USART_SendData+0x5e>
 803bfc0:	f503 4344 	add.w	r3, r3, #50176	; 0xc400
 803bfc4:	4298      	cmp	r0, r3
 803bfc6:	d014      	beq.n	803bff2 <USART_SendData+0x5e>
 803bfc8:	f5a3 431c 	sub.w	r3, r3, #39936	; 0x9c00
 803bfcc:	4298      	cmp	r0, r3
 803bfce:	d010      	beq.n	803bff2 <USART_SendData+0x5e>
 803bfd0:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 803bfd4:	4298      	cmp	r0, r3
 803bfd6:	d00c      	beq.n	803bff2 <USART_SendData+0x5e>
 803bfd8:	f503 431c 	add.w	r3, r3, #39936	; 0x9c00
 803bfdc:	4298      	cmp	r0, r3
 803bfde:	d008      	beq.n	803bff2 <USART_SendData+0x5e>
 803bfe0:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 803bfe4:	4298      	cmp	r0, r3
 803bfe6:	d004      	beq.n	803bff2 <USART_SendData+0x5e>
 803bfe8:	480b      	ldr	r0, [pc, #44]	; (803c018 <USART_SendData+0x84>)
 803bfea:	f44f 710c 	mov.w	r1, #560	; 0x230
 803bfee:	f7e6 fc4d 	bl	802288c <assert_failed>
 803bff2:	f5b5 7f00 	cmp.w	r5, #512	; 0x200
 803bff6:	d203      	bcs.n	803c000 <USART_SendData+0x6c>
 803bff8:	f3c5 0508 	ubfx	r5, r5, #0, #9
 803bffc:	80a5      	strh	r5, [r4, #4]
 803bffe:	bd38      	pop	{r3, r4, r5, pc}
 803c000:	4805      	ldr	r0, [pc, #20]	; (803c018 <USART_SendData+0x84>)
 803c002:	f240 2131 	movw	r1, #561	; 0x231
 803c006:	f3c5 0508 	ubfx	r5, r5, #0, #9
 803c00a:	f7e6 fc3f 	bl	802288c <assert_failed>
 803c00e:	80a5      	strh	r5, [r4, #4]
 803c010:	bd38      	pop	{r3, r4, r5, pc}
 803c012:	bf00      	nop
 803c014:	40011000 	.word	0x40011000
 803c018:	08048ee4 	.word	0x08048ee4

0803c01c <USART_ReceiveData>:
 803c01c:	4b18      	ldr	r3, [pc, #96]	; (803c080 <USART_ReceiveData+0x64>)
 803c01e:	4298      	cmp	r0, r3
 803c020:	b510      	push	{r4, lr}
 803c022:	4604      	mov	r4, r0
 803c024:	d028      	beq.n	803c078 <USART_ReceiveData+0x5c>
 803c026:	f5a3 434c 	sub.w	r3, r3, #52224	; 0xcc00
 803c02a:	4298      	cmp	r0, r3
 803c02c:	d024      	beq.n	803c078 <USART_ReceiveData+0x5c>
 803c02e:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 803c032:	4298      	cmp	r0, r3
 803c034:	d020      	beq.n	803c078 <USART_ReceiveData+0x5c>
 803c036:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 803c03a:	4298      	cmp	r0, r3
 803c03c:	d01c      	beq.n	803c078 <USART_ReceiveData+0x5c>
 803c03e:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 803c042:	4298      	cmp	r0, r3
 803c044:	d018      	beq.n	803c078 <USART_ReceiveData+0x5c>
 803c046:	f503 4344 	add.w	r3, r3, #50176	; 0xc400
 803c04a:	4298      	cmp	r0, r3
 803c04c:	d014      	beq.n	803c078 <USART_ReceiveData+0x5c>
 803c04e:	f5a3 431c 	sub.w	r3, r3, #39936	; 0x9c00
 803c052:	4298      	cmp	r0, r3
 803c054:	d010      	beq.n	803c078 <USART_ReceiveData+0x5c>
 803c056:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 803c05a:	4298      	cmp	r0, r3
 803c05c:	d00c      	beq.n	803c078 <USART_ReceiveData+0x5c>
 803c05e:	f503 431c 	add.w	r3, r3, #39936	; 0x9c00
 803c062:	4298      	cmp	r0, r3
 803c064:	d008      	beq.n	803c078 <USART_ReceiveData+0x5c>
 803c066:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 803c06a:	4298      	cmp	r0, r3
 803c06c:	d004      	beq.n	803c078 <USART_ReceiveData+0x5c>
 803c06e:	4805      	ldr	r0, [pc, #20]	; (803c084 <USART_ReceiveData+0x68>)
 803c070:	f44f 7110 	mov.w	r1, #576	; 0x240
 803c074:	f7e6 fc0a 	bl	802288c <assert_failed>
 803c078:	88a0      	ldrh	r0, [r4, #4]
 803c07a:	f3c0 0008 	ubfx	r0, r0, #0, #9
 803c07e:	bd10      	pop	{r4, pc}
 803c080:	40011000 	.word	0x40011000
 803c084:	08048ee4 	.word	0x08048ee4

0803c088 <USART_ITConfig>:
 803c088:	4b4e      	ldr	r3, [pc, #312]	; (803c1c4 <USART_ITConfig+0x13c>)
 803c08a:	4298      	cmp	r0, r3
 803c08c:	b570      	push	{r4, r5, r6, lr}
 803c08e:	4604      	mov	r4, r0
 803c090:	460d      	mov	r5, r1
 803c092:	4616      	mov	r6, r2
 803c094:	d028      	beq.n	803c0e8 <USART_ITConfig+0x60>
 803c096:	f5a3 434c 	sub.w	r3, r3, #52224	; 0xcc00
 803c09a:	4298      	cmp	r0, r3
 803c09c:	d024      	beq.n	803c0e8 <USART_ITConfig+0x60>
 803c09e:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 803c0a2:	4298      	cmp	r0, r3
 803c0a4:	d020      	beq.n	803c0e8 <USART_ITConfig+0x60>
 803c0a6:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 803c0aa:	4298      	cmp	r0, r3
 803c0ac:	d01c      	beq.n	803c0e8 <USART_ITConfig+0x60>
 803c0ae:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 803c0b2:	4298      	cmp	r0, r3
 803c0b4:	d018      	beq.n	803c0e8 <USART_ITConfig+0x60>
 803c0b6:	f503 4344 	add.w	r3, r3, #50176	; 0xc400
 803c0ba:	4298      	cmp	r0, r3
 803c0bc:	d014      	beq.n	803c0e8 <USART_ITConfig+0x60>
 803c0be:	f5a3 431c 	sub.w	r3, r3, #39936	; 0x9c00
 803c0c2:	4298      	cmp	r0, r3
 803c0c4:	d010      	beq.n	803c0e8 <USART_ITConfig+0x60>
 803c0c6:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 803c0ca:	4298      	cmp	r0, r3
 803c0cc:	d00c      	beq.n	803c0e8 <USART_ITConfig+0x60>
 803c0ce:	f503 431c 	add.w	r3, r3, #39936	; 0x9c00
 803c0d2:	4298      	cmp	r0, r3
 803c0d4:	d008      	beq.n	803c0e8 <USART_ITConfig+0x60>
 803c0d6:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 803c0da:	4298      	cmp	r0, r3
 803c0dc:	d004      	beq.n	803c0e8 <USART_ITConfig+0x60>
 803c0de:	483a      	ldr	r0, [pc, #232]	; (803c1c8 <USART_ITConfig+0x140>)
 803c0e0:	f240 41d4 	movw	r1, #1236	; 0x4d4
 803c0e4:	f7e6 fbd2 	bl	802288c <assert_failed>
 803c0e8:	2d28      	cmp	r5, #40	; 0x28
 803c0ea:	d02d      	beq.n	803c148 <USART_ITConfig+0xc0>
 803c0ec:	f240 7327 	movw	r3, #1831	; 0x727
 803c0f0:	429d      	cmp	r5, r3
 803c0f2:	d029      	beq.n	803c148 <USART_ITConfig+0xc0>
 803c0f4:	f240 6326 	movw	r3, #1574	; 0x626
 803c0f8:	429d      	cmp	r5, r3
 803c0fa:	d025      	beq.n	803c148 <USART_ITConfig+0xc0>
 803c0fc:	f240 5325 	movw	r3, #1317	; 0x525
 803c100:	429d      	cmp	r5, r3
 803c102:	d00d      	beq.n	803c120 <USART_ITConfig+0x98>
 803c104:	f240 4324 	movw	r3, #1060	; 0x424
 803c108:	429d      	cmp	r5, r3
 803c10a:	d009      	beq.n	803c120 <USART_ITConfig+0x98>
 803c10c:	f640 0346 	movw	r3, #2118	; 0x846
 803c110:	429d      	cmp	r5, r3
 803c112:	d005      	beq.n	803c120 <USART_ITConfig+0x98>
 803c114:	f640 136a 	movw	r3, #2410	; 0x96a
 803c118:	429d      	cmp	r5, r3
 803c11a:	d04b      	beq.n	803c1b4 <USART_ITConfig+0x12c>
 803c11c:	2d60      	cmp	r5, #96	; 0x60
 803c11e:	d143      	bne.n	803c1a8 <USART_ITConfig+0x120>
 803c120:	2e01      	cmp	r6, #1
 803c122:	d813      	bhi.n	803c14c <USART_ITConfig+0xc4>
 803c124:	f005 011f 	and.w	r1, r5, #31
 803c128:	f3c5 1542 	ubfx	r5, r5, #5, #3
 803c12c:	2301      	movs	r3, #1
 803c12e:	2d01      	cmp	r5, #1
 803c130:	fa03 f301 	lsl.w	r3, r3, r1
 803c134:	d031      	beq.n	803c19a <USART_ITConfig+0x112>
 803c136:	2d02      	cmp	r5, #2
 803c138:	d129      	bne.n	803c18e <USART_ITConfig+0x106>
 803c13a:	3410      	adds	r4, #16
 803c13c:	6825      	ldr	r5, [r4, #0]
 803c13e:	bb86      	cbnz	r6, 803c1a2 <USART_ITConfig+0x11a>
 803c140:	ea25 0303 	bic.w	r3, r5, r3
 803c144:	6023      	str	r3, [r4, #0]
 803c146:	bd70      	pop	{r4, r5, r6, pc}
 803c148:	2e01      	cmp	r6, #1
 803c14a:	d922      	bls.n	803c192 <USART_ITConfig+0x10a>
 803c14c:	481e      	ldr	r0, [pc, #120]	; (803c1c8 <USART_ITConfig+0x140>)
 803c14e:	f240 41d6 	movw	r1, #1238	; 0x4d6
 803c152:	f7e6 fb9b 	bl	802288c <assert_failed>
 803c156:	f640 136a 	movw	r3, #2410	; 0x96a
 803c15a:	429d      	cmp	r5, r3
 803c15c:	d1e2      	bne.n	803c124 <USART_ITConfig+0x9c>
 803c15e:	4b19      	ldr	r3, [pc, #100]	; (803c1c4 <USART_ITConfig+0x13c>)
 803c160:	429c      	cmp	r4, r3
 803c162:	d010      	beq.n	803c186 <USART_ITConfig+0xfe>
 803c164:	f5a3 434c 	sub.w	r3, r3, #52224	; 0xcc00
 803c168:	429c      	cmp	r4, r3
 803c16a:	d00c      	beq.n	803c186 <USART_ITConfig+0xfe>
 803c16c:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 803c170:	429c      	cmp	r4, r3
 803c172:	d008      	beq.n	803c186 <USART_ITConfig+0xfe>
 803c174:	f503 434c 	add.w	r3, r3, #52224	; 0xcc00
 803c178:	429c      	cmp	r4, r3
 803c17a:	d004      	beq.n	803c186 <USART_ITConfig+0xfe>
 803c17c:	4812      	ldr	r0, [pc, #72]	; (803c1c8 <USART_ITConfig+0x140>)
 803c17e:	f240 41db 	movw	r1, #1243	; 0x4db
 803c182:	f7e6 fb83 	bl	802288c <assert_failed>
 803c186:	f005 051f 	and.w	r5, r5, #31
 803c18a:	2301      	movs	r3, #1
 803c18c:	40ab      	lsls	r3, r5
 803c18e:	3414      	adds	r4, #20
 803c190:	e004      	b.n	803c19c <USART_ITConfig+0x114>
 803c192:	f005 051f 	and.w	r5, r5, #31
 803c196:	2301      	movs	r3, #1
 803c198:	40ab      	lsls	r3, r5
 803c19a:	340c      	adds	r4, #12
 803c19c:	6825      	ldr	r5, [r4, #0]
 803c19e:	2e00      	cmp	r6, #0
 803c1a0:	d0ce      	beq.n	803c140 <USART_ITConfig+0xb8>
 803c1a2:	432b      	orrs	r3, r5
 803c1a4:	6023      	str	r3, [r4, #0]
 803c1a6:	bd70      	pop	{r4, r5, r6, pc}
 803c1a8:	4807      	ldr	r0, [pc, #28]	; (803c1c8 <USART_ITConfig+0x140>)
 803c1aa:	f240 41d5 	movw	r1, #1237	; 0x4d5
 803c1ae:	f7e6 fb6d 	bl	802288c <assert_failed>
 803c1b2:	e7b5      	b.n	803c120 <USART_ITConfig+0x98>
 803c1b4:	2e01      	cmp	r6, #1
 803c1b6:	d9d2      	bls.n	803c15e <USART_ITConfig+0xd6>
 803c1b8:	4803      	ldr	r0, [pc, #12]	; (803c1c8 <USART_ITConfig+0x140>)
 803c1ba:	f240 41d6 	movw	r1, #1238	; 0x4d6
 803c1be:	f7e6 fb65 	bl	802288c <assert_failed>
 803c1c2:	e7cc      	b.n	803c15e <USART_ITConfig+0xd6>
 803c1c4:	40011000 	.word	0x40011000
 803c1c8:	08048ee4 	.word	0x08048ee4

0803c1cc <USART_GetFlagStatus>:
 803c1cc:	b538      	push	{r3, r4, r5, lr}
 803c1ce:	4b34      	ldr	r3, [pc, #208]	; (803c2a0 <USART_GetFlagStatus+0xd4>)
 803c1d0:	4298      	cmp	r0, r3
 803c1d2:	4604      	mov	r4, r0
 803c1d4:	460d      	mov	r5, r1
 803c1d6:	d028      	beq.n	803c22a <USART_GetFlagStatus+0x5e>
 803c1d8:	f5a3 434c 	sub.w	r3, r3, #52224	; 0xcc00
 803c1dc:	4298      	cmp	r0, r3
 803c1de:	d024      	beq.n	803c22a <USART_GetFlagStatus+0x5e>
 803c1e0:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 803c1e4:	4298      	cmp	r0, r3
 803c1e6:	d020      	beq.n	803c22a <USART_GetFlagStatus+0x5e>
 803c1e8:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 803c1ec:	4298      	cmp	r0, r3
 803c1ee:	d01c      	beq.n	803c22a <USART_GetFlagStatus+0x5e>
 803c1f0:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 803c1f4:	4298      	cmp	r0, r3
 803c1f6:	d018      	beq.n	803c22a <USART_GetFlagStatus+0x5e>
 803c1f8:	f503 4344 	add.w	r3, r3, #50176	; 0xc400
 803c1fc:	4298      	cmp	r0, r3
 803c1fe:	d014      	beq.n	803c22a <USART_GetFlagStatus+0x5e>
 803c200:	f5a3 431c 	sub.w	r3, r3, #39936	; 0x9c00
 803c204:	4298      	cmp	r0, r3
 803c206:	d010      	beq.n	803c22a <USART_GetFlagStatus+0x5e>
 803c208:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 803c20c:	4298      	cmp	r0, r3
 803c20e:	d00c      	beq.n	803c22a <USART_GetFlagStatus+0x5e>
 803c210:	f503 431c 	add.w	r3, r3, #39936	; 0x9c00
 803c214:	4298      	cmp	r0, r3
 803c216:	d008      	beq.n	803c22a <USART_GetFlagStatus+0x5e>
 803c218:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 803c21c:	4298      	cmp	r0, r3
 803c21e:	d004      	beq.n	803c22a <USART_GetFlagStatus+0x5e>
 803c220:	4820      	ldr	r0, [pc, #128]	; (803c2a4 <USART_GetFlagStatus+0xd8>)
 803c222:	f240 5113 	movw	r1, #1299	; 0x513
 803c226:	f7e6 fb31 	bl	802288c <assert_failed>
 803c22a:	1e6b      	subs	r3, r5, #1
 803c22c:	b29b      	uxth	r3, r3
 803c22e:	2b1f      	cmp	r3, #31
 803c230:	d80a      	bhi.n	803c248 <USART_GetFlagStatus+0x7c>
 803c232:	4a1d      	ldr	r2, [pc, #116]	; (803c2a8 <USART_GetFlagStatus+0xdc>)
 803c234:	fa22 f303 	lsr.w	r3, r2, r3
 803c238:	07da      	lsls	r2, r3, #31
 803c23a:	d505      	bpl.n	803c248 <USART_GetFlagStatus+0x7c>
 803c23c:	8823      	ldrh	r3, [r4, #0]
 803c23e:	421d      	tst	r5, r3
 803c240:	bf14      	ite	ne
 803c242:	2001      	movne	r0, #1
 803c244:	2000      	moveq	r0, #0
 803c246:	bd38      	pop	{r3, r4, r5, pc}
 803c248:	2d80      	cmp	r5, #128	; 0x80
 803c24a:	d0f7      	beq.n	803c23c <USART_GetFlagStatus+0x70>
 803c24c:	2d40      	cmp	r5, #64	; 0x40
 803c24e:	d0f5      	beq.n	803c23c <USART_GetFlagStatus+0x70>
 803c250:	f5b5 7f80 	cmp.w	r5, #256	; 0x100
 803c254:	d0f2      	beq.n	803c23c <USART_GetFlagStatus+0x70>
 803c256:	f5b5 7f00 	cmp.w	r5, #512	; 0x200
 803c25a:	d00c      	beq.n	803c276 <USART_GetFlagStatus+0xaa>
 803c25c:	2d08      	cmp	r5, #8
 803c25e:	d804      	bhi.n	803c26a <USART_GetFlagStatus+0x9e>
 803c260:	f44f 738a 	mov.w	r3, #276	; 0x114
 803c264:	40eb      	lsrs	r3, r5
 803c266:	07db      	lsls	r3, r3, #31
 803c268:	d4e8      	bmi.n	803c23c <USART_GetFlagStatus+0x70>
 803c26a:	480e      	ldr	r0, [pc, #56]	; (803c2a4 <USART_GetFlagStatus+0xd8>)
 803c26c:	f240 5114 	movw	r1, #1300	; 0x514
 803c270:	f7e6 fb0c 	bl	802288c <assert_failed>
 803c274:	e7e2      	b.n	803c23c <USART_GetFlagStatus+0x70>
 803c276:	4b0a      	ldr	r3, [pc, #40]	; (803c2a0 <USART_GetFlagStatus+0xd4>)
 803c278:	429c      	cmp	r4, r3
 803c27a:	d0df      	beq.n	803c23c <USART_GetFlagStatus+0x70>
 803c27c:	4b0b      	ldr	r3, [pc, #44]	; (803c2ac <USART_GetFlagStatus+0xe0>)
 803c27e:	429c      	cmp	r4, r3
 803c280:	d0dc      	beq.n	803c23c <USART_GetFlagStatus+0x70>
 803c282:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 803c286:	429c      	cmp	r4, r3
 803c288:	d0d8      	beq.n	803c23c <USART_GetFlagStatus+0x70>
 803c28a:	f503 434c 	add.w	r3, r3, #52224	; 0xcc00
 803c28e:	429c      	cmp	r4, r3
 803c290:	d0d4      	beq.n	803c23c <USART_GetFlagStatus+0x70>
 803c292:	4804      	ldr	r0, [pc, #16]	; (803c2a4 <USART_GetFlagStatus+0xd8>)
 803c294:	f240 5119 	movw	r1, #1305	; 0x519
 803c298:	f7e6 faf8 	bl	802288c <assert_failed>
 803c29c:	e7ce      	b.n	803c23c <USART_GetFlagStatus+0x70>
 803c29e:	bf00      	nop
 803c2a0:	40011000 	.word	0x40011000
 803c2a4:	08048ee4 	.word	0x08048ee4
 803c2a8:	80008001 	.word	0x80008001
 803c2ac:	40004400 	.word	0x40004400

0803c2b0 <FIFO_initBuffer>:
 803c2b0:	2300      	movs	r3, #0
 803c2b2:	3101      	adds	r1, #1
 803c2b4:	e9c0 1300 	strd	r1, r3, [r0]
 803c2b8:	6083      	str	r3, [r0, #8]
 803c2ba:	4770      	bx	lr

0803c2bc <FIFO_addData>:
 803c2bc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 803c2c0:	4604      	mov	r4, r0
 803c2c2:	460e      	mov	r6, r1
 803c2c4:	4615      	mov	r5, r2
 803c2c6:	f3ef 8110 	mrs	r1, PRIMASK
 803c2ca:	b672      	cpsid	i
 803c2cc:	e9d0 2301 	ldrd	r2, r3, [r0, #4]
 803c2d0:	429a      	cmp	r2, r3
 803c2d2:	d923      	bls.n	803c31c <FIFO_addData+0x60>
 803c2d4:	1ad3      	subs	r3, r2, r3
 803c2d6:	3b01      	subs	r3, #1
 803c2d8:	b901      	cbnz	r1, 803c2dc <FIFO_addData+0x20>
 803c2da:	b662      	cpsie	i
 803c2dc:	429d      	cmp	r5, r3
 803c2de:	d830      	bhi.n	803c342 <FIFO_addData+0x86>
 803c2e0:	f3ef 8710 	mrs	r7, PRIMASK
 803c2e4:	b672      	cpsid	i
 803c2e6:	e9d4 3001 	ldrd	r3, r0, [r4, #4]
 803c2ea:	4298      	cmp	r0, r3
 803c2ec:	d31b      	bcc.n	803c326 <FIFO_addData+0x6a>
 803c2ee:	6822      	ldr	r2, [r4, #0]
 803c2f0:	eba2 0800 	sub.w	r8, r2, r0
 803c2f4:	45a8      	cmp	r8, r5
 803c2f6:	bf28      	it	cs
 803c2f8:	46a8      	movcs	r8, r5
 803c2fa:	300c      	adds	r0, #12
 803c2fc:	4420      	add	r0, r4
 803c2fe:	4642      	mov	r2, r8
 803c300:	4631      	mov	r1, r6
 803c302:	f003 f97e 	bl	803f602 <__aeabi_memcpy>
 803c306:	ebb5 0508 	subs.w	r5, r5, r8
 803c30a:	d11d      	bne.n	803c348 <FIFO_addData+0x8c>
 803c30c:	68a2      	ldr	r2, [r4, #8]
 803c30e:	4442      	add	r2, r8
 803c310:	60a2      	str	r2, [r4, #8]
 803c312:	b99f      	cbnz	r7, 803c33c <FIFO_addData+0x80>
 803c314:	b662      	cpsie	i
 803c316:	2001      	movs	r0, #1
 803c318:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 803c31c:	6800      	ldr	r0, [r0, #0]
 803c31e:	4402      	add	r2, r0
 803c320:	1ad3      	subs	r3, r2, r3
 803c322:	d0d9      	beq.n	803c2d8 <FIFO_addData+0x1c>
 803c324:	e7d7      	b.n	803c2d6 <FIFO_addData+0x1a>
 803c326:	300c      	adds	r0, #12
 803c328:	462a      	mov	r2, r5
 803c32a:	4420      	add	r0, r4
 803c32c:	4631      	mov	r1, r6
 803c32e:	f003 f968 	bl	803f602 <__aeabi_memcpy>
 803c332:	68a2      	ldr	r2, [r4, #8]
 803c334:	442a      	add	r2, r5
 803c336:	60a2      	str	r2, [r4, #8]
 803c338:	2f00      	cmp	r7, #0
 803c33a:	d0eb      	beq.n	803c314 <FIFO_addData+0x58>
 803c33c:	2001      	movs	r0, #1
 803c33e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 803c342:	2000      	movs	r0, #0
 803c344:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 803c348:	eb06 0108 	add.w	r1, r6, r8
 803c34c:	462a      	mov	r2, r5
 803c34e:	f104 000c 	add.w	r0, r4, #12
 803c352:	f003 f956 	bl	803f602 <__aeabi_memcpy>
 803c356:	60a5      	str	r5, [r4, #8]
 803c358:	e7db      	b.n	803c312 <FIFO_addData+0x56>
 803c35a:	bf00      	nop

0803c35c <FIFO_getData>:
 803c35c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 803c360:	4604      	mov	r4, r0
 803c362:	468a      	mov	sl, r1
 803c364:	4615      	mov	r5, r2
 803c366:	f3ef 8710 	mrs	r7, PRIMASK
 803c36a:	b672      	cpsid	i
 803c36c:	f8d0 c000 	ldr.w	ip, [r0]
 803c370:	f3ef 8010 	mrs	r0, PRIMASK
 803c374:	b672      	cpsid	i
 803c376:	e9d4 2301 	ldrd	r2, r3, [r4, #4]
 803c37a:	429a      	cmp	r2, r3
 803c37c:	d926      	bls.n	803c3cc <FIFO_getData+0x70>
 803c37e:	1ad3      	subs	r3, r2, r3
 803c380:	ebac 0103 	sub.w	r1, ip, r3
 803c384:	b900      	cbnz	r0, 803c388 <FIFO_getData+0x2c>
 803c386:	b662      	cpsie	i
 803c388:	428d      	cmp	r5, r1
 803c38a:	d90c      	bls.n	803c3a6 <FIFO_getData+0x4a>
 803c38c:	6821      	ldr	r1, [r4, #0]
 803c38e:	1e4d      	subs	r5, r1, #1
 803c390:	f3ef 8010 	mrs	r0, PRIMASK
 803c394:	b672      	cpsid	i
 803c396:	e9d4 2301 	ldrd	r2, r3, [r4, #4]
 803c39a:	429a      	cmp	r2, r3
 803c39c:	d939      	bls.n	803c412 <FIFO_getData+0xb6>
 803c39e:	1ad3      	subs	r3, r2, r3
 803c3a0:	1acd      	subs	r5, r1, r3
 803c3a2:	b900      	cbnz	r0, 803c3a6 <FIFO_getData+0x4a>
 803c3a4:	b662      	cpsie	i
 803c3a6:	b165      	cbz	r5, 803c3c2 <FIFO_getData+0x66>
 803c3a8:	e9d4 1301 	ldrd	r1, r3, [r4, #4]
 803c3ac:	4299      	cmp	r1, r3
 803c3ae:	d214      	bcs.n	803c3da <FIFO_getData+0x7e>
 803c3b0:	310c      	adds	r1, #12
 803c3b2:	4421      	add	r1, r4
 803c3b4:	4650      	mov	r0, sl
 803c3b6:	462a      	mov	r2, r5
 803c3b8:	f003 f923 	bl	803f602 <__aeabi_memcpy>
 803c3bc:	6863      	ldr	r3, [r4, #4]
 803c3be:	442b      	add	r3, r5
 803c3c0:	6063      	str	r3, [r4, #4]
 803c3c2:	b907      	cbnz	r7, 803c3c6 <FIFO_getData+0x6a>
 803c3c4:	b662      	cpsie	i
 803c3c6:	4628      	mov	r0, r5
 803c3c8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 803c3cc:	6826      	ldr	r6, [r4, #0]
 803c3ce:	4432      	add	r2, r6
 803c3d0:	1ad3      	subs	r3, r2, r3
 803c3d2:	f10c 31ff 	add.w	r1, ip, #4294967295
 803c3d6:	d0d5      	beq.n	803c384 <FIFO_getData+0x28>
 803c3d8:	e7d2      	b.n	803c380 <FIFO_getData+0x24>
 803c3da:	6822      	ldr	r2, [r4, #0]
 803c3dc:	eba2 0801 	sub.w	r8, r2, r1
 803c3e0:	45a8      	cmp	r8, r5
 803c3e2:	bf28      	it	cs
 803c3e4:	46a8      	movcs	r8, r5
 803c3e6:	310c      	adds	r1, #12
 803c3e8:	4421      	add	r1, r4
 803c3ea:	4642      	mov	r2, r8
 803c3ec:	4650      	mov	r0, sl
 803c3ee:	f003 f908 	bl	803f602 <__aeabi_memcpy>
 803c3f2:	6863      	ldr	r3, [r4, #4]
 803c3f4:	ebb5 0908 	subs.w	r9, r5, r8
 803c3f8:	4443      	add	r3, r8
 803c3fa:	6063      	str	r3, [r4, #4]
 803c3fc:	d0e1      	beq.n	803c3c2 <FIFO_getData+0x66>
 803c3fe:	eb0a 0008 	add.w	r0, sl, r8
 803c402:	464a      	mov	r2, r9
 803c404:	f104 010c 	add.w	r1, r4, #12
 803c408:	f003 f8fb 	bl	803f602 <__aeabi_memcpy>
 803c40c:	f8c4 9004 	str.w	r9, [r4, #4]
 803c410:	e7d7      	b.n	803c3c2 <FIFO_getData+0x66>
 803c412:	6826      	ldr	r6, [r4, #0]
 803c414:	4432      	add	r2, r6
 803c416:	1ad3      	subs	r3, r2, r3
 803c418:	d0c3      	beq.n	803c3a2 <FIFO_getData+0x46>
 803c41a:	e7c1      	b.n	803c3a0 <FIFO_getData+0x44>

0803c41c <FRAM_init>:
 803c41c:	b5f0      	push	{r4, r5, r6, r7, lr}
 803c41e:	4d1b      	ldr	r5, [pc, #108]	; (803c48c <FRAM_init+0x70>)
 803c420:	2480      	movs	r4, #128	; 0x80
 803c422:	b083      	sub	sp, #12
 803c424:	2000      	movs	r0, #0
 803c426:	832c      	strh	r4, [r5, #24]
 803c428:	f7f8 ff32 	bl	8035290 <SPI_setup>
 803c42c:	4b18      	ldr	r3, [pc, #96]	; (803c490 <FRAM_init+0x74>)
 803c42e:	f44f 7000 	mov.w	r0, #512	; 0x200
 803c432:	2701      	movs	r7, #1
 803c434:	2106      	movs	r1, #6
 803c436:	2200      	movs	r2, #0
 803c438:	8318      	strh	r0, [r3, #24]
 803c43a:	f88d 1007 	strb.w	r1, [sp, #7]
 803c43e:	f88d 4006 	strb.w	r4, [sp, #6]
 803c442:	f88d 7005 	strb.w	r7, [sp, #5]
 803c446:	f10d 0107 	add.w	r1, sp, #7
 803c44a:	463b      	mov	r3, r7
 803c44c:	4610      	mov	r0, r2
 803c44e:	836c      	strh	r4, [r5, #26]
 803c450:	f7f9 f836 	bl	80354c0 <SPI_readWrite>
 803c454:	480f      	ldr	r0, [pc, #60]	; (803c494 <FRAM_init+0x78>)
 803c456:	832c      	strh	r4, [r5, #24]
 803c458:	f44f 71fa 	mov.w	r1, #500	; 0x1f4
 803c45c:	f7fd f904 	bl	8039668 <_tx_mutex_get>
 803c460:	b990      	cbnz	r0, 803c488 <FRAM_init+0x6c>
 803c462:	4606      	mov	r6, r0
 803c464:	463b      	mov	r3, r7
 803c466:	4602      	mov	r2, r0
 803c468:	f10d 0105 	add.w	r1, sp, #5
 803c46c:	836c      	strh	r4, [r5, #26]
 803c46e:	f7f9 f827 	bl	80354c0 <SPI_readWrite>
 803c472:	463b      	mov	r3, r7
 803c474:	4632      	mov	r2, r6
 803c476:	4630      	mov	r0, r6
 803c478:	f10d 0106 	add.w	r1, sp, #6
 803c47c:	f7f9 f820 	bl	80354c0 <SPI_readWrite>
 803c480:	4804      	ldr	r0, [pc, #16]	; (803c494 <FRAM_init+0x78>)
 803c482:	832c      	strh	r4, [r5, #24]
 803c484:	f7fd fa66 	bl	8039954 <_tx_mutex_put>
 803c488:	b003      	add	sp, #12
 803c48a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 803c48c:	40020c00 	.word	0x40020c00
 803c490:	40021800 	.word	0x40021800
 803c494:	200123b4 	.word	0x200123b4

0803c498 <FRAM_read>:
 803c498:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 803c49c:	f5b0 5f00 	cmp.w	r0, #8192	; 0x2000
 803c4a0:	b084      	sub	sp, #16
 803c4a2:	4604      	mov	r4, r0
 803c4a4:	d232      	bcs.n	803c50c <FRAM_read+0x74>
 803c4a6:	ba44      	rev16	r4, r0
 803c4a8:	2303      	movs	r3, #3
 803c4aa:	4829      	ldr	r0, [pc, #164]	; (803c550 <FRAM_read+0xb8>)
 803c4ac:	f8ad 400c 	strh.w	r4, [sp, #12]
 803c4b0:	460d      	mov	r5, r1
 803c4b2:	f44f 71fa 	mov.w	r1, #500	; 0x1f4
 803c4b6:	4616      	mov	r6, r2
 803c4b8:	f88d 300b 	strb.w	r3, [sp, #11]
 803c4bc:	f7fd f8d4 	bl	8039668 <_tx_mutex_get>
 803c4c0:	4604      	mov	r4, r0
 803c4c2:	b118      	cbz	r0, 803c4cc <FRAM_read+0x34>
 803c4c4:	2000      	movs	r0, #0
 803c4c6:	b004      	add	sp, #16
 803c4c8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 803c4cc:	4f21      	ldr	r7, [pc, #132]	; (803c554 <FRAM_read+0xbc>)
 803c4ce:	f04f 0880 	mov.w	r8, #128	; 0x80
 803c4d2:	f10d 010b 	add.w	r1, sp, #11
 803c4d6:	f8a7 801a 	strh.w	r8, [r7, #26]
 803c4da:	2301      	movs	r3, #1
 803c4dc:	4602      	mov	r2, r0
 803c4de:	f7f8 ffef 	bl	80354c0 <SPI_readWrite>
 803c4e2:	4622      	mov	r2, r4
 803c4e4:	a903      	add	r1, sp, #12
 803c4e6:	2302      	movs	r3, #2
 803c4e8:	4620      	mov	r0, r4
 803c4ea:	f7f8 ffe9 	bl	80354c0 <SPI_readWrite>
 803c4ee:	4633      	mov	r3, r6
 803c4f0:	462a      	mov	r2, r5
 803c4f2:	4621      	mov	r1, r4
 803c4f4:	4620      	mov	r0, r4
 803c4f6:	f7f8 ffe3 	bl	80354c0 <SPI_readWrite>
 803c4fa:	f8a7 8018 	strh.w	r8, [r7, #24]
 803c4fe:	4814      	ldr	r0, [pc, #80]	; (803c550 <FRAM_read+0xb8>)
 803c500:	f7fd fa28 	bl	8039954 <_tx_mutex_put>
 803c504:	2001      	movs	r0, #1
 803c506:	b004      	add	sp, #16
 803c508:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 803c50c:	4812      	ldr	r0, [pc, #72]	; (803c558 <FRAM_read+0xc0>)
 803c50e:	212f      	movs	r1, #47	; 0x2f
 803c510:	f002 ff25 	bl	803f35e <strrchr>
 803c514:	b170      	cbz	r0, 803c534 <FRAM_read+0x9c>
 803c516:	212f      	movs	r1, #47	; 0x2f
 803c518:	480f      	ldr	r0, [pc, #60]	; (803c558 <FRAM_read+0xc0>)
 803c51a:	f002 ff20 	bl	803f35e <strrchr>
 803c51e:	1c41      	adds	r1, r0, #1
 803c520:	4b0e      	ldr	r3, [pc, #56]	; (803c55c <FRAM_read+0xc4>)
 803c522:	9400      	str	r4, [sp, #0]
 803c524:	2297      	movs	r2, #151	; 0x97
 803c526:	2000      	movs	r0, #0
 803c528:	f7e6 f936 	bl	8022798 <DEBUG_logMsg>
 803c52c:	2000      	movs	r0, #0
 803c52e:	b004      	add	sp, #16
 803c530:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 803c534:	4808      	ldr	r0, [pc, #32]	; (803c558 <FRAM_read+0xc0>)
 803c536:	215c      	movs	r1, #92	; 0x5c
 803c538:	f002 ff11 	bl	803f35e <strrchr>
 803c53c:	b128      	cbz	r0, 803c54a <FRAM_read+0xb2>
 803c53e:	215c      	movs	r1, #92	; 0x5c
 803c540:	4805      	ldr	r0, [pc, #20]	; (803c558 <FRAM_read+0xc0>)
 803c542:	f002 ff0c 	bl	803f35e <strrchr>
 803c546:	1c41      	adds	r1, r0, #1
 803c548:	e7ea      	b.n	803c520 <FRAM_read+0x88>
 803c54a:	4903      	ldr	r1, [pc, #12]	; (803c558 <FRAM_read+0xc0>)
 803c54c:	e7e8      	b.n	803c520 <FRAM_read+0x88>
 803c54e:	bf00      	nop
 803c550:	200123b4 	.word	0x200123b4
 803c554:	40020c00 	.word	0x40020c00
 803c558:	08048f68 	.word	0x08048f68
 803c55c:	08048fa0 	.word	0x08048fa0

0803c560 <FRAM_write>:
 803c560:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 803c564:	f5b0 5f00 	cmp.w	r0, #8192	; 0x2000
 803c568:	b086      	sub	sp, #24
 803c56a:	4604      	mov	r4, r0
 803c56c:	d240      	bcs.n	803c5f0 <FRAM_write+0x90>
 803c56e:	ba44      	rev16	r4, r0
 803c570:	460d      	mov	r5, r1
 803c572:	4830      	ldr	r0, [pc, #192]	; (803c634 <FRAM_write+0xd4>)
 803c574:	f8ad 4014 	strh.w	r4, [sp, #20]
 803c578:	2702      	movs	r7, #2
 803c57a:	f44f 71fa 	mov.w	r1, #500	; 0x1f4
 803c57e:	4616      	mov	r6, r2
 803c580:	f88d 7012 	strb.w	r7, [sp, #18]
 803c584:	f7fd f870 	bl	8039668 <_tx_mutex_get>
 803c588:	4602      	mov	r2, r0
 803c58a:	b118      	cbz	r0, 803c594 <FRAM_write+0x34>
 803c58c:	2000      	movs	r0, #0
 803c58e:	b006      	add	sp, #24
 803c590:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 803c594:	4c28      	ldr	r4, [pc, #160]	; (803c638 <FRAM_write+0xd8>)
 803c596:	f04f 0880 	mov.w	r8, #128	; 0x80
 803c59a:	2306      	movs	r3, #6
 803c59c:	f88d 3013 	strb.w	r3, [sp, #19]
 803c5a0:	f10d 0113 	add.w	r1, sp, #19
 803c5a4:	f8a4 801a 	strh.w	r8, [r4, #26]
 803c5a8:	2301      	movs	r3, #1
 803c5aa:	9003      	str	r0, [sp, #12]
 803c5ac:	f7f8 ff88 	bl	80354c0 <SPI_readWrite>
 803c5b0:	9a03      	ldr	r2, [sp, #12]
 803c5b2:	f8a4 8018 	strh.w	r8, [r4, #24]
 803c5b6:	f10d 0112 	add.w	r1, sp, #18
 803c5ba:	2301      	movs	r3, #1
 803c5bc:	f8a4 801a 	strh.w	r8, [r4, #26]
 803c5c0:	4610      	mov	r0, r2
 803c5c2:	f7f8 ff7d 	bl	80354c0 <SPI_readWrite>
 803c5c6:	9a03      	ldr	r2, [sp, #12]
 803c5c8:	463b      	mov	r3, r7
 803c5ca:	a905      	add	r1, sp, #20
 803c5cc:	4610      	mov	r0, r2
 803c5ce:	f7f8 ff77 	bl	80354c0 <SPI_readWrite>
 803c5d2:	9a03      	ldr	r2, [sp, #12]
 803c5d4:	4633      	mov	r3, r6
 803c5d6:	4629      	mov	r1, r5
 803c5d8:	4610      	mov	r0, r2
 803c5da:	f7f8 ff71 	bl	80354c0 <SPI_readWrite>
 803c5de:	f8a4 8018 	strh.w	r8, [r4, #24]
 803c5e2:	4814      	ldr	r0, [pc, #80]	; (803c634 <FRAM_write+0xd4>)
 803c5e4:	f7fd f9b6 	bl	8039954 <_tx_mutex_put>
 803c5e8:	2001      	movs	r0, #1
 803c5ea:	b006      	add	sp, #24
 803c5ec:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 803c5f0:	4812      	ldr	r0, [pc, #72]	; (803c63c <FRAM_write+0xdc>)
 803c5f2:	212f      	movs	r1, #47	; 0x2f
 803c5f4:	f002 feb3 	bl	803f35e <strrchr>
 803c5f8:	b170      	cbz	r0, 803c618 <FRAM_write+0xb8>
 803c5fa:	212f      	movs	r1, #47	; 0x2f
 803c5fc:	480f      	ldr	r0, [pc, #60]	; (803c63c <FRAM_write+0xdc>)
 803c5fe:	f002 feae 	bl	803f35e <strrchr>
 803c602:	1c41      	adds	r1, r0, #1
 803c604:	4b0e      	ldr	r3, [pc, #56]	; (803c640 <FRAM_write+0xe0>)
 803c606:	9400      	str	r4, [sp, #0]
 803c608:	22be      	movs	r2, #190	; 0xbe
 803c60a:	2000      	movs	r0, #0
 803c60c:	f7e6 f8c4 	bl	8022798 <DEBUG_logMsg>
 803c610:	2000      	movs	r0, #0
 803c612:	b006      	add	sp, #24
 803c614:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 803c618:	4808      	ldr	r0, [pc, #32]	; (803c63c <FRAM_write+0xdc>)
 803c61a:	215c      	movs	r1, #92	; 0x5c
 803c61c:	f002 fe9f 	bl	803f35e <strrchr>
 803c620:	b128      	cbz	r0, 803c62e <FRAM_write+0xce>
 803c622:	215c      	movs	r1, #92	; 0x5c
 803c624:	4805      	ldr	r0, [pc, #20]	; (803c63c <FRAM_write+0xdc>)
 803c626:	f002 fe9a 	bl	803f35e <strrchr>
 803c62a:	1c41      	adds	r1, r0, #1
 803c62c:	e7ea      	b.n	803c604 <FRAM_write+0xa4>
 803c62e:	4903      	ldr	r1, [pc, #12]	; (803c63c <FRAM_write+0xdc>)
 803c630:	e7e8      	b.n	803c604 <FRAM_write+0xa4>
 803c632:	bf00      	nop
 803c634:	200123b4 	.word	0x200123b4
 803c638:	40020c00 	.word	0x40020c00
 803c63c:	08048f68 	.word	0x08048f68
 803c640:	08048fcc 	.word	0x08048fcc

0803c644 <FRAM_writeTest>:
 803c644:	b5f0      	push	{r4, r5, r6, r7, lr}
 803c646:	240d      	movs	r4, #13
 803c648:	b083      	sub	sp, #12
 803c64a:	2501      	movs	r5, #1
 803c64c:	2600      	movs	r6, #0
 803c64e:	2201      	movs	r2, #1
 803c650:	4628      	mov	r0, r5
 803c652:	f10d 0107 	add.w	r1, sp, #7
 803c656:	f88d 6007 	strb.w	r6, [sp, #7]
 803c65a:	4095      	lsls	r5, r2
 803c65c:	f7ff ff80 	bl	803c560 <FRAM_write>
 803c660:	3c01      	subs	r4, #1
 803c662:	d1f4      	bne.n	803c64e <FRAM_writeTest+0xa>
 803c664:	260d      	movs	r6, #13
 803c666:	2501      	movs	r5, #1
 803c668:	2201      	movs	r2, #1
 803c66a:	f10d 0106 	add.w	r1, sp, #6
 803c66e:	4628      	mov	r0, r5
 803c670:	f7ff ff12 	bl	803c498 <FRAM_read>
 803c674:	f89d 3006 	ldrb.w	r3, [sp, #6]
 803c678:	b103      	cbz	r3, 803c67c <FRAM_writeTest+0x38>
 803c67a:	432c      	orrs	r4, r5
 803c67c:	3e01      	subs	r6, #1
 803c67e:	ea4f 0545 	mov.w	r5, r5, lsl #1
 803c682:	d1f1      	bne.n	803c668 <FRAM_writeTest+0x24>
 803c684:	bbbc      	cbnz	r4, 803c6f6 <FRAM_writeTest+0xb2>
 803c686:	4e1d      	ldr	r6, [pc, #116]	; (803c6fc <FRAM_writeTest+0xb8>)
 803c688:	2501      	movs	r5, #1
 803c68a:	4627      	mov	r7, r4
 803c68c:	fba6 2305 	umull	r2, r3, r6, r5
 803c690:	08db      	lsrs	r3, r3, #3
 803c692:	00ba      	lsls	r2, r7, #2
 803c694:	ebc3 1303 	rsb	r3, r3, r3, lsl #4
 803c698:	1aeb      	subs	r3, r5, r3
 803c69a:	f002 02f0 	and.w	r2, r2, #240	; 0xf0
 803c69e:	4313      	orrs	r3, r2
 803c6a0:	4628      	mov	r0, r5
 803c6a2:	2201      	movs	r2, #1
 803c6a4:	3701      	adds	r7, #1
 803c6a6:	f10d 0107 	add.w	r1, sp, #7
 803c6aa:	f88d 3007 	strb.w	r3, [sp, #7]
 803c6ae:	4095      	lsls	r5, r2
 803c6b0:	f7ff ff56 	bl	803c560 <FRAM_write>
 803c6b4:	2f0d      	cmp	r7, #13
 803c6b6:	d1e9      	bne.n	803c68c <FRAM_writeTest+0x48>
 803c6b8:	4e10      	ldr	r6, [pc, #64]	; (803c6fc <FRAM_writeTest+0xb8>)
 803c6ba:	2501      	movs	r5, #1
 803c6bc:	2700      	movs	r7, #0
 803c6be:	2201      	movs	r2, #1
 803c6c0:	4628      	mov	r0, r5
 803c6c2:	f10d 0106 	add.w	r1, sp, #6
 803c6c6:	f7ff fee7 	bl	803c498 <FRAM_read>
 803c6ca:	fba6 2305 	umull	r2, r3, r6, r5
 803c6ce:	08db      	lsrs	r3, r3, #3
 803c6d0:	00ba      	lsls	r2, r7, #2
 803c6d2:	ebc3 1303 	rsb	r3, r3, r3, lsl #4
 803c6d6:	1aeb      	subs	r3, r5, r3
 803c6d8:	f002 02f0 	and.w	r2, r2, #240	; 0xf0
 803c6dc:	4313      	orrs	r3, r2
 803c6de:	f89d 2006 	ldrb.w	r2, [sp, #6]
 803c6e2:	b2db      	uxtb	r3, r3
 803c6e4:	429a      	cmp	r2, r3
 803c6e6:	f107 0701 	add.w	r7, r7, #1
 803c6ea:	bf18      	it	ne
 803c6ec:	432c      	orrne	r4, r5
 803c6ee:	2f0d      	cmp	r7, #13
 803c6f0:	ea4f 0545 	mov.w	r5, r5, lsl #1
 803c6f4:	d1e3      	bne.n	803c6be <FRAM_writeTest+0x7a>
 803c6f6:	4620      	mov	r0, r4
 803c6f8:	b003      	add	sp, #12
 803c6fa:	bdf0      	pop	{r4, r5, r6, r7, pc}
 803c6fc:	88888889 	.word	0x88888889

0803c700 <SRAM_read>:
 803c700:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 803c704:	f5b0 3f00 	cmp.w	r0, #131072	; 0x20000
 803c708:	b082      	sub	sp, #8
 803c70a:	4604      	mov	r4, r0
 803c70c:	d22f      	bcs.n	803c76e <SRAM_read+0x6e>
 803c70e:	0a03      	lsrs	r3, r0, #8
 803c710:	2703      	movs	r7, #3
 803c712:	4e1a      	ldr	r6, [pc, #104]	; (803c77c <SRAM_read+0x7c>)
 803c714:	f88d 4006 	strb.w	r4, [sp, #6]
 803c718:	4688      	mov	r8, r1
 803c71a:	4615      	mov	r5, r2
 803c71c:	f04f 31ff 	mov.w	r1, #4294967295
 803c720:	0c02      	lsrs	r2, r0, #16
 803c722:	4817      	ldr	r0, [pc, #92]	; (803c780 <SRAM_read+0x80>)
 803c724:	f88d 2004 	strb.w	r2, [sp, #4]
 803c728:	f88d 3005 	strb.w	r3, [sp, #5]
 803c72c:	2408      	movs	r4, #8
 803c72e:	f88d 7003 	strb.w	r7, [sp, #3]
 803c732:	f7fc ff99 	bl	8039668 <_tx_mutex_get>
 803c736:	2301      	movs	r3, #1
 803c738:	4618      	mov	r0, r3
 803c73a:	2200      	movs	r2, #0
 803c73c:	eb0d 0107 	add.w	r1, sp, r7
 803c740:	8374      	strh	r4, [r6, #26]
 803c742:	f7f8 febd 	bl	80354c0 <SPI_readWrite>
 803c746:	463b      	mov	r3, r7
 803c748:	2200      	movs	r2, #0
 803c74a:	a901      	add	r1, sp, #4
 803c74c:	2001      	movs	r0, #1
 803c74e:	f7f8 feb7 	bl	80354c0 <SPI_readWrite>
 803c752:	462b      	mov	r3, r5
 803c754:	4642      	mov	r2, r8
 803c756:	2100      	movs	r1, #0
 803c758:	2001      	movs	r0, #1
 803c75a:	f7f8 feb1 	bl	80354c0 <SPI_readWrite>
 803c75e:	4808      	ldr	r0, [pc, #32]	; (803c780 <SRAM_read+0x80>)
 803c760:	8334      	strh	r4, [r6, #24]
 803c762:	f7fd f8f7 	bl	8039954 <_tx_mutex_put>
 803c766:	2000      	movs	r0, #0
 803c768:	b002      	add	sp, #8
 803c76a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 803c76e:	4601      	mov	r1, r0
 803c770:	4804      	ldr	r0, [pc, #16]	; (803c784 <SRAM_read+0x84>)
 803c772:	f002 fc11 	bl	803ef98 <printf>
 803c776:	f04f 30ff 	mov.w	r0, #4294967295
 803c77a:	e7f5      	b.n	803c768 <SRAM_read+0x68>
 803c77c:	40021000 	.word	0x40021000
 803c780:	20012400 	.word	0x20012400
 803c784:	08048ff8 	.word	0x08048ff8

0803c788 <SRAM_write>:
 803c788:	b5f0      	push	{r4, r5, r6, r7, lr}
 803c78a:	f5b0 3f00 	cmp.w	r0, #131072	; 0x20000
 803c78e:	b083      	sub	sp, #12
 803c790:	4604      	mov	r4, r0
 803c792:	d22f      	bcs.n	803c7f4 <SRAM_write+0x6c>
 803c794:	f04f 0c02 	mov.w	ip, #2
 803c798:	0a03      	lsrs	r3, r0, #8
 803c79a:	4e1a      	ldr	r6, [pc, #104]	; (803c804 <SRAM_write+0x7c>)
 803c79c:	f88d c003 	strb.w	ip, [sp, #3]
 803c7a0:	460f      	mov	r7, r1
 803c7a2:	4615      	mov	r5, r2
 803c7a4:	f04f 31ff 	mov.w	r1, #4294967295
 803c7a8:	0c02      	lsrs	r2, r0, #16
 803c7aa:	4817      	ldr	r0, [pc, #92]	; (803c808 <SRAM_write+0x80>)
 803c7ac:	f88d 4006 	strb.w	r4, [sp, #6]
 803c7b0:	f88d 2004 	strb.w	r2, [sp, #4]
 803c7b4:	f88d 3005 	strb.w	r3, [sp, #5]
 803c7b8:	2408      	movs	r4, #8
 803c7ba:	f7fc ff55 	bl	8039668 <_tx_mutex_get>
 803c7be:	2301      	movs	r3, #1
 803c7c0:	4618      	mov	r0, r3
 803c7c2:	2200      	movs	r2, #0
 803c7c4:	f10d 0103 	add.w	r1, sp, #3
 803c7c8:	8374      	strh	r4, [r6, #26]
 803c7ca:	f7f8 fe79 	bl	80354c0 <SPI_readWrite>
 803c7ce:	2303      	movs	r3, #3
 803c7d0:	2200      	movs	r2, #0
 803c7d2:	a901      	add	r1, sp, #4
 803c7d4:	2001      	movs	r0, #1
 803c7d6:	f7f8 fe73 	bl	80354c0 <SPI_readWrite>
 803c7da:	462b      	mov	r3, r5
 803c7dc:	4639      	mov	r1, r7
 803c7de:	2200      	movs	r2, #0
 803c7e0:	2001      	movs	r0, #1
 803c7e2:	f7f8 fe6d 	bl	80354c0 <SPI_readWrite>
 803c7e6:	4808      	ldr	r0, [pc, #32]	; (803c808 <SRAM_write+0x80>)
 803c7e8:	8334      	strh	r4, [r6, #24]
 803c7ea:	f7fd f8b3 	bl	8039954 <_tx_mutex_put>
 803c7ee:	2000      	movs	r0, #0
 803c7f0:	b003      	add	sp, #12
 803c7f2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 803c7f4:	4601      	mov	r1, r0
 803c7f6:	4805      	ldr	r0, [pc, #20]	; (803c80c <SRAM_write+0x84>)
 803c7f8:	f002 fbce 	bl	803ef98 <printf>
 803c7fc:	f04f 30ff 	mov.w	r0, #4294967295
 803c800:	e7f6      	b.n	803c7f0 <SRAM_write+0x68>
 803c802:	bf00      	nop
 803c804:	40021000 	.word	0x40021000
 803c808:	20012400 	.word	0x20012400
 803c80c:	08049024 	.word	0x08049024

0803c810 <SRAM_init>:
 803c810:	b508      	push	{r3, lr}
 803c812:	4b04      	ldr	r3, [pc, #16]	; (803c824 <SRAM_init+0x14>)
 803c814:	2208      	movs	r2, #8
 803c816:	831a      	strh	r2, [r3, #24]
 803c818:	2001      	movs	r0, #1
 803c81a:	f7f8 fd39 	bl	8035290 <SPI_setup>
 803c81e:	2000      	movs	r0, #0
 803c820:	bd08      	pop	{r3, pc}
 803c822:	bf00      	nop
 803c824:	40021000 	.word	0x40021000

0803c828 <SRAM_setOpMode>:
 803c828:	b570      	push	{r4, r5, r6, lr}
 803c82a:	2801      	cmp	r0, #1
 803c82c:	b082      	sub	sp, #8
 803c82e:	d006      	beq.n	803c83e <SRAM_setOpMode+0x16>
 803c830:	2802      	cmp	r0, #2
 803c832:	d02a      	beq.n	803c88a <SRAM_setOpMode+0x62>
 803c834:	b330      	cbz	r0, 803c884 <SRAM_setOpMode+0x5c>
 803c836:	f04f 30ff 	mov.w	r0, #4294967295
 803c83a:	b002      	add	sp, #8
 803c83c:	bd70      	pop	{r4, r5, r6, pc}
 803c83e:	2380      	movs	r3, #128	; 0x80
 803c840:	f88d 3007 	strb.w	r3, [sp, #7]
 803c844:	4d13      	ldr	r5, [pc, #76]	; (803c894 <SRAM_setOpMode+0x6c>)
 803c846:	4814      	ldr	r0, [pc, #80]	; (803c898 <SRAM_setOpMode+0x70>)
 803c848:	2401      	movs	r4, #1
 803c84a:	2608      	movs	r6, #8
 803c84c:	f04f 31ff 	mov.w	r1, #4294967295
 803c850:	f88d 4006 	strb.w	r4, [sp, #6]
 803c854:	f7fc ff08 	bl	8039668 <_tx_mutex_get>
 803c858:	4623      	mov	r3, r4
 803c85a:	f10d 0106 	add.w	r1, sp, #6
 803c85e:	4620      	mov	r0, r4
 803c860:	836e      	strh	r6, [r5, #26]
 803c862:	2200      	movs	r2, #0
 803c864:	f7f8 fe2c 	bl	80354c0 <SPI_readWrite>
 803c868:	4623      	mov	r3, r4
 803c86a:	2200      	movs	r2, #0
 803c86c:	f10d 0107 	add.w	r1, sp, #7
 803c870:	4620      	mov	r0, r4
 803c872:	f7f8 fe25 	bl	80354c0 <SPI_readWrite>
 803c876:	832e      	strh	r6, [r5, #24]
 803c878:	4807      	ldr	r0, [pc, #28]	; (803c898 <SRAM_setOpMode+0x70>)
 803c87a:	f7fd f86b 	bl	8039954 <_tx_mutex_put>
 803c87e:	2000      	movs	r0, #0
 803c880:	b002      	add	sp, #8
 803c882:	bd70      	pop	{r4, r5, r6, pc}
 803c884:	f88d 0007 	strb.w	r0, [sp, #7]
 803c888:	e7dc      	b.n	803c844 <SRAM_setOpMode+0x1c>
 803c88a:	2340      	movs	r3, #64	; 0x40
 803c88c:	f88d 3007 	strb.w	r3, [sp, #7]
 803c890:	e7d8      	b.n	803c844 <SRAM_setOpMode+0x1c>
 803c892:	bf00      	nop
 803c894:	40021000 	.word	0x40021000
 803c898:	20012400 	.word	0x20012400

0803c89c <SRAM_getOpMode>:
 803c89c:	b530      	push	{r4, r5, lr}
 803c89e:	b083      	sub	sp, #12
 803c8a0:	2305      	movs	r3, #5
 803c8a2:	4c16      	ldr	r4, [pc, #88]	; (803c8fc <SRAM_getOpMode+0x60>)
 803c8a4:	4816      	ldr	r0, [pc, #88]	; (803c900 <SRAM_getOpMode+0x64>)
 803c8a6:	f88d 3006 	strb.w	r3, [sp, #6]
 803c8aa:	f04f 31ff 	mov.w	r1, #4294967295
 803c8ae:	f7fc fedb 	bl	8039668 <_tx_mutex_get>
 803c8b2:	2508      	movs	r5, #8
 803c8b4:	2301      	movs	r3, #1
 803c8b6:	4618      	mov	r0, r3
 803c8b8:	2200      	movs	r2, #0
 803c8ba:	f10d 0106 	add.w	r1, sp, #6
 803c8be:	8365      	strh	r5, [r4, #26]
 803c8c0:	f7f8 fdfe 	bl	80354c0 <SPI_readWrite>
 803c8c4:	2301      	movs	r3, #1
 803c8c6:	4618      	mov	r0, r3
 803c8c8:	f10d 0207 	add.w	r2, sp, #7
 803c8cc:	2100      	movs	r1, #0
 803c8ce:	f7f8 fdf7 	bl	80354c0 <SPI_readWrite>
 803c8d2:	480b      	ldr	r0, [pc, #44]	; (803c900 <SRAM_getOpMode+0x64>)
 803c8d4:	8325      	strh	r5, [r4, #24]
 803c8d6:	f7fd f83d 	bl	8039954 <_tx_mutex_put>
 803c8da:	f89d 0007 	ldrb.w	r0, [sp, #7]
 803c8de:	2840      	cmp	r0, #64	; 0x40
 803c8e0:	d009      	beq.n	803c8f6 <SRAM_getOpMode+0x5a>
 803c8e2:	2880      	cmp	r0, #128	; 0x80
 803c8e4:	d004      	beq.n	803c8f0 <SRAM_getOpMode+0x54>
 803c8e6:	2800      	cmp	r0, #0
 803c8e8:	bf18      	it	ne
 803c8ea:	2003      	movne	r0, #3
 803c8ec:	b003      	add	sp, #12
 803c8ee:	bd30      	pop	{r4, r5, pc}
 803c8f0:	2001      	movs	r0, #1
 803c8f2:	b003      	add	sp, #12
 803c8f4:	bd30      	pop	{r4, r5, pc}
 803c8f6:	2002      	movs	r0, #2
 803c8f8:	b003      	add	sp, #12
 803c8fa:	bd30      	pop	{r4, r5, pc}
 803c8fc:	40021000 	.word	0x40021000
 803c900:	20012400 	.word	0x20012400

0803c904 <SRAM_writeTest>:
 803c904:	b5f0      	push	{r4, r5, r6, r7, lr}
 803c906:	2411      	movs	r4, #17
 803c908:	b083      	sub	sp, #12
 803c90a:	2501      	movs	r5, #1
 803c90c:	2600      	movs	r6, #0
 803c90e:	2201      	movs	r2, #1
 803c910:	4628      	mov	r0, r5
 803c912:	f10d 0107 	add.w	r1, sp, #7
 803c916:	f88d 6007 	strb.w	r6, [sp, #7]
 803c91a:	4095      	lsls	r5, r2
 803c91c:	f7ff ff34 	bl	803c788 <SRAM_write>
 803c920:	3c01      	subs	r4, #1
 803c922:	d1f4      	bne.n	803c90e <SRAM_writeTest+0xa>
 803c924:	2611      	movs	r6, #17
 803c926:	2501      	movs	r5, #1
 803c928:	2201      	movs	r2, #1
 803c92a:	f10d 0106 	add.w	r1, sp, #6
 803c92e:	4628      	mov	r0, r5
 803c930:	f7ff fee6 	bl	803c700 <SRAM_read>
 803c934:	f89d 3006 	ldrb.w	r3, [sp, #6]
 803c938:	b103      	cbz	r3, 803c93c <SRAM_writeTest+0x38>
 803c93a:	432c      	orrs	r4, r5
 803c93c:	3e01      	subs	r6, #1
 803c93e:	ea4f 0545 	mov.w	r5, r5, lsl #1
 803c942:	d1f1      	bne.n	803c928 <SRAM_writeTest+0x24>
 803c944:	bbbc      	cbnz	r4, 803c9b6 <SRAM_writeTest+0xb2>
 803c946:	4e1d      	ldr	r6, [pc, #116]	; (803c9bc <SRAM_writeTest+0xb8>)
 803c948:	2501      	movs	r5, #1
 803c94a:	4627      	mov	r7, r4
 803c94c:	fba6 2305 	umull	r2, r3, r6, r5
 803c950:	08db      	lsrs	r3, r3, #3
 803c952:	00ba      	lsls	r2, r7, #2
 803c954:	ebc3 1303 	rsb	r3, r3, r3, lsl #4
 803c958:	1aeb      	subs	r3, r5, r3
 803c95a:	f002 02f0 	and.w	r2, r2, #240	; 0xf0
 803c95e:	4313      	orrs	r3, r2
 803c960:	4628      	mov	r0, r5
 803c962:	2201      	movs	r2, #1
 803c964:	3701      	adds	r7, #1
 803c966:	f10d 0107 	add.w	r1, sp, #7
 803c96a:	f88d 3007 	strb.w	r3, [sp, #7]
 803c96e:	4095      	lsls	r5, r2
 803c970:	f7ff ff0a 	bl	803c788 <SRAM_write>
 803c974:	2f11      	cmp	r7, #17
 803c976:	d1e9      	bne.n	803c94c <SRAM_writeTest+0x48>
 803c978:	4e10      	ldr	r6, [pc, #64]	; (803c9bc <SRAM_writeTest+0xb8>)
 803c97a:	2501      	movs	r5, #1
 803c97c:	2700      	movs	r7, #0
 803c97e:	2201      	movs	r2, #1
 803c980:	4628      	mov	r0, r5
 803c982:	f10d 0106 	add.w	r1, sp, #6
 803c986:	f7ff febb 	bl	803c700 <SRAM_read>
 803c98a:	fba6 2305 	umull	r2, r3, r6, r5
 803c98e:	08db      	lsrs	r3, r3, #3
 803c990:	00ba      	lsls	r2, r7, #2
 803c992:	ebc3 1303 	rsb	r3, r3, r3, lsl #4
 803c996:	1aeb      	subs	r3, r5, r3
 803c998:	f002 02f0 	and.w	r2, r2, #240	; 0xf0
 803c99c:	4313      	orrs	r3, r2
 803c99e:	f89d 2006 	ldrb.w	r2, [sp, #6]
 803c9a2:	b2db      	uxtb	r3, r3
 803c9a4:	429a      	cmp	r2, r3
 803c9a6:	f107 0701 	add.w	r7, r7, #1
 803c9aa:	bf18      	it	ne
 803c9ac:	432c      	orrne	r4, r5
 803c9ae:	2f11      	cmp	r7, #17
 803c9b0:	ea4f 0545 	mov.w	r5, r5, lsl #1
 803c9b4:	d1e3      	bne.n	803c97e <SRAM_writeTest+0x7a>
 803c9b6:	4620      	mov	r0, r4
 803c9b8:	b003      	add	sp, #12
 803c9ba:	bdf0      	pop	{r4, r5, r6, r7, pc}
 803c9bc:	88888889 	.word	0x88888889

0803c9c0 <COMM_BOOT_getErrorMsg>:
 803c9c0:	282f      	cmp	r0, #47	; 0x2f
 803c9c2:	bf9a      	itte	ls
 803c9c4:	4b02      	ldrls	r3, [pc, #8]	; (803c9d0 <COMM_BOOT_getErrorMsg+0x10>)
 803c9c6:	f853 0020 	ldrls.w	r0, [r3, r0, lsl #2]
 803c9ca:	4802      	ldrhi	r0, [pc, #8]	; (803c9d4 <COMM_BOOT_getErrorMsg+0x14>)
 803c9cc:	4770      	bx	lr
 803c9ce:	bf00      	nop
 803c9d0:	08049778 	.word	0x08049778
 803c9d4:	08049050 	.word	0x08049050

0803c9d8 <get_remapped_data>:
 803c9d8:	b410      	push	{r4}
 803c9da:	f891 3027 	ldrb.w	r3, [r1, #39]	; 0x27
 803c9de:	f9b0 4004 	ldrsh.w	r4, [r0, #4]
 803c9e2:	6802      	ldr	r2, [r0, #0]
 803c9e4:	b083      	sub	sp, #12
 803c9e6:	f8ad 4004 	strh.w	r4, [sp, #4]
 803c9ea:	9200      	str	r2, [sp, #0]
 803c9ec:	bb0b      	cbnz	r3, 803ca32 <get_remapped_data+0x5a>
 803c9ee:	f891 3024 	ldrb.w	r3, [r1, #36]	; 0x24
 803c9f2:	aa02      	add	r2, sp, #8
 803c9f4:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 803c9f8:	f933 3c08 	ldrsh.w	r3, [r3, #-8]
 803c9fc:	8003      	strh	r3, [r0, #0]
 803c9fe:	f891 3028 	ldrb.w	r3, [r1, #40]	; 0x28
 803ca02:	bb23      	cbnz	r3, 803ca4e <get_remapped_data+0x76>
 803ca04:	f891 3025 	ldrb.w	r3, [r1, #37]	; 0x25
 803ca08:	aa02      	add	r2, sp, #8
 803ca0a:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 803ca0e:	f933 3c08 	ldrsh.w	r3, [r3, #-8]
 803ca12:	8043      	strh	r3, [r0, #2]
 803ca14:	f891 3029 	ldrb.w	r3, [r1, #41]	; 0x29
 803ca18:	bb3b      	cbnz	r3, 803ca6a <get_remapped_data+0x92>
 803ca1a:	f891 3026 	ldrb.w	r3, [r1, #38]	; 0x26
 803ca1e:	aa02      	add	r2, sp, #8
 803ca20:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 803ca24:	f933 3c08 	ldrsh.w	r3, [r3, #-8]
 803ca28:	8083      	strh	r3, [r0, #4]
 803ca2a:	b003      	add	sp, #12
 803ca2c:	f85d 4b04 	ldr.w	r4, [sp], #4
 803ca30:	4770      	bx	lr
 803ca32:	f891 3024 	ldrb.w	r3, [r1, #36]	; 0x24
 803ca36:	aa02      	add	r2, sp, #8
 803ca38:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 803ca3c:	f833 3c08 	ldrh.w	r3, [r3, #-8]
 803ca40:	425b      	negs	r3, r3
 803ca42:	b21b      	sxth	r3, r3
 803ca44:	8003      	strh	r3, [r0, #0]
 803ca46:	f891 3028 	ldrb.w	r3, [r1, #40]	; 0x28
 803ca4a:	2b00      	cmp	r3, #0
 803ca4c:	d0da      	beq.n	803ca04 <get_remapped_data+0x2c>
 803ca4e:	f891 3025 	ldrb.w	r3, [r1, #37]	; 0x25
 803ca52:	aa02      	add	r2, sp, #8
 803ca54:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 803ca58:	f833 3c08 	ldrh.w	r3, [r3, #-8]
 803ca5c:	425b      	negs	r3, r3
 803ca5e:	b21b      	sxth	r3, r3
 803ca60:	8043      	strh	r3, [r0, #2]
 803ca62:	f891 3029 	ldrb.w	r3, [r1, #41]	; 0x29
 803ca66:	2b00      	cmp	r3, #0
 803ca68:	d0d7      	beq.n	803ca1a <get_remapped_data+0x42>
 803ca6a:	f891 3026 	ldrb.w	r3, [r1, #38]	; 0x26
 803ca6e:	aa02      	add	r2, sp, #8
 803ca70:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 803ca74:	f833 3c08 	ldrh.w	r3, [r3, #-8]
 803ca78:	425b      	negs	r3, r3
 803ca7a:	b21b      	sxth	r3, r3
 803ca7c:	8083      	strh	r3, [r0, #4]
 803ca7e:	b003      	add	sp, #12
 803ca80:	f85d 4b04 	ldr.w	r4, [sp], #4
 803ca84:	4770      	bx	lr
 803ca86:	bf00      	nop

0803ca88 <bmi2_get_regs>:
 803ca88:	2b00      	cmp	r3, #0
 803ca8a:	d04d      	beq.n	803cb28 <bmi2_get_regs+0xa0>
 803ca8c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 803ca90:	f8d3 a038 	ldr.w	sl, [r3, #56]	; 0x38
 803ca94:	af00      	add	r7, sp, #0
 803ca96:	461c      	mov	r4, r3
 803ca98:	f1ba 0f00 	cmp.w	sl, #0
 803ca9c:	d041      	beq.n	803cb22 <bmi2_get_regs+0x9a>
 803ca9e:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 803caa0:	2b00      	cmp	r3, #0
 803caa2:	d03e      	beq.n	803cb22 <bmi2_get_regs+0x9a>
 803caa4:	6c23      	ldr	r3, [r4, #64]	; 0x40
 803caa6:	2b00      	cmp	r3, #0
 803caa8:	d03b      	beq.n	803cb22 <bmi2_get_regs+0x9a>
 803caaa:	4689      	mov	r9, r1
 803caac:	2900      	cmp	r1, #0
 803caae:	d038      	beq.n	803cb22 <bmi2_get_regs+0x9a>
 803cab0:	4615      	mov	r5, r2
 803cab2:	7ae2      	ldrb	r2, [r4, #11]
 803cab4:	7a61      	ldrb	r1, [r4, #9]
 803cab6:	442a      	add	r2, r5
 803cab8:	b292      	uxth	r2, r2
 803caba:	1dd3      	adds	r3, r2, #7
 803cabc:	46e8      	mov	r8, sp
 803cabe:	08db      	lsrs	r3, r3, #3
 803cac0:	eba8 03c3 	sub.w	r3, r8, r3, lsl #3
 803cac4:	469d      	mov	sp, r3
 803cac6:	466e      	mov	r6, sp
 803cac8:	b909      	cbnz	r1, 803cace <bmi2_get_regs+0x46>
 803caca:	f040 0080 	orr.w	r0, r0, #128	; 0x80
 803cace:	6863      	ldr	r3, [r4, #4]
 803cad0:	4631      	mov	r1, r6
 803cad2:	47d0      	blx	sl
 803cad4:	f894 3047 	ldrb.w	r3, [r4, #71]	; 0x47
 803cad8:	72a0      	strb	r0, [r4, #10]
 803cada:	2b01      	cmp	r3, #1
 803cadc:	bf0c      	ite	eq
 803cade:	f44f 70e1 	moveq.w	r0, #450	; 0x1c2
 803cae2:	2002      	movne	r0, #2
 803cae4:	6c23      	ldr	r3, [r4, #64]	; 0x40
 803cae6:	6861      	ldr	r1, [r4, #4]
 803cae8:	4798      	blx	r3
 803caea:	f994 000a 	ldrsb.w	r0, [r4, #10]
 803caee:	b9a8      	cbnz	r0, 803cb1c <bmi2_get_regs+0x94>
 803caf0:	b185      	cbz	r5, 803cb14 <bmi2_get_regs+0x8c>
 803caf2:	3d01      	subs	r5, #1
 803caf4:	fa19 f585 	uxtah	r5, r9, r5
 803caf8:	f109 33ff 	add.w	r3, r9, #4294967295
 803cafc:	f1c9 0901 	rsb	r9, r9, #1
 803cb00:	18f2      	adds	r2, r6, r3
 803cb02:	f894 c00b 	ldrb.w	ip, [r4, #11]
 803cb06:	444a      	add	r2, r9
 803cb08:	f812 200c 	ldrb.w	r2, [r2, ip]
 803cb0c:	f803 2f01 	strb.w	r2, [r3, #1]!
 803cb10:	42ab      	cmp	r3, r5
 803cb12:	d1f5      	bne.n	803cb00 <bmi2_get_regs+0x78>
 803cb14:	46c5      	mov	sp, r8
 803cb16:	46bd      	mov	sp, r7
 803cb18:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 803cb1c:	f06f 0001 	mvn.w	r0, #1
 803cb20:	e7f8      	b.n	803cb14 <bmi2_get_regs+0x8c>
 803cb22:	f04f 30ff 	mov.w	r0, #4294967295
 803cb26:	e7f6      	b.n	803cb16 <bmi2_get_regs+0x8e>
 803cb28:	f04f 30ff 	mov.w	r0, #4294967295
 803cb2c:	4770      	bx	lr
 803cb2e:	bf00      	nop

0803cb30 <cfg_error_status>:
 803cb30:	b500      	push	{lr}
 803cb32:	b083      	sub	sp, #12
 803cb34:	4603      	mov	r3, r0
 803cb36:	2201      	movs	r2, #1
 803cb38:	f10d 0107 	add.w	r1, sp, #7
 803cb3c:	201b      	movs	r0, #27
 803cb3e:	f7ff ffa3 	bl	803ca88 <bmi2_get_regs>
 803cb42:	b948      	cbnz	r0, 803cb58 <cfg_error_status+0x28>
 803cb44:	f89d 3007 	ldrb.w	r3, [sp, #7]
 803cb48:	f3c3 0382 	ubfx	r3, r3, #2, #3
 803cb4c:	1e5a      	subs	r2, r3, #1
 803cb4e:	2a02      	cmp	r2, #2
 803cb50:	bf9c      	itt	ls
 803cb52:	f1c3 00fc 	rsbls	r0, r3, #252	; 0xfc
 803cb56:	b240      	sxtbls	r0, r0
 803cb58:	b003      	add	sp, #12
 803cb5a:	f85d fb04 	ldr.w	pc, [sp], #4
 803cb5e:	bf00      	nop

0803cb60 <bmi2_set_regs>:
 803cb60:	b38b      	cbz	r3, 803cbc6 <bmi2_set_regs+0x66>
 803cb62:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 803cb64:	461c      	mov	r4, r3
 803cb66:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 803cb68:	b353      	cbz	r3, 803cbc0 <bmi2_set_regs+0x60>
 803cb6a:	6be5      	ldr	r5, [r4, #60]	; 0x3c
 803cb6c:	b345      	cbz	r5, 803cbc0 <bmi2_set_regs+0x60>
 803cb6e:	6c23      	ldr	r3, [r4, #64]	; 0x40
 803cb70:	b333      	cbz	r3, 803cbc0 <bmi2_set_regs+0x60>
 803cb72:	460f      	mov	r7, r1
 803cb74:	b321      	cbz	r1, 803cbc0 <bmi2_set_regs+0x60>
 803cb76:	7a63      	ldrb	r3, [r4, #9]
 803cb78:	4606      	mov	r6, r0
 803cb7a:	b1f3      	cbz	r3, 803cbba <bmi2_set_regs+0x5a>
 803cb7c:	6863      	ldr	r3, [r4, #4]
 803cb7e:	4639      	mov	r1, r7
 803cb80:	4630      	mov	r0, r6
 803cb82:	47a8      	blx	r5
 803cb84:	f894 3047 	ldrb.w	r3, [r4, #71]	; 0x47
 803cb88:	72a0      	strb	r0, [r4, #10]
 803cb8a:	2b01      	cmp	r3, #1
 803cb8c:	bf0c      	ite	eq
 803cb8e:	f44f 70e1 	moveq.w	r0, #450	; 0x1c2
 803cb92:	2002      	movne	r0, #2
 803cb94:	6c23      	ldr	r3, [r4, #64]	; 0x40
 803cb96:	6861      	ldr	r1, [r4, #4]
 803cb98:	4798      	blx	r3
 803cb9a:	2e7c      	cmp	r6, #124	; 0x7c
 803cb9c:	d106      	bne.n	803cbac <bmi2_set_regs+0x4c>
 803cb9e:	783b      	ldrb	r3, [r7, #0]
 803cba0:	f013 0301 	ands.w	r3, r3, #1
 803cba4:	bf18      	it	ne
 803cba6:	2301      	movne	r3, #1
 803cba8:	f884 3047 	strb.w	r3, [r4, #71]	; 0x47
 803cbac:	f994 000a 	ldrsb.w	r0, [r4, #10]
 803cbb0:	2800      	cmp	r0, #0
 803cbb2:	bf18      	it	ne
 803cbb4:	f06f 0001 	mvnne.w	r0, #1
 803cbb8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 803cbba:	f000 067f 	and.w	r6, r0, #127	; 0x7f
 803cbbe:	e7dd      	b.n	803cb7c <bmi2_set_regs+0x1c>
 803cbc0:	f04f 30ff 	mov.w	r0, #4294967295
 803cbc4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 803cbc6:	f04f 30ff 	mov.w	r0, #4294967295
 803cbca:	4770      	bx	lr

0803cbcc <upload_file>:
 803cbcc:	b1d8      	cbz	r0, 803cc06 <upload_file+0x3a>
 803cbce:	b5f0      	push	{r4, r5, r6, r7, lr}
 803cbd0:	b083      	sub	sp, #12
 803cbd2:	4605      	mov	r5, r0
 803cbd4:	f3c1 0043 	ubfx	r0, r1, #1, #4
 803cbd8:	094c      	lsrs	r4, r1, #5
 803cbda:	4616      	mov	r6, r2
 803cbdc:	f88d 0004 	strb.w	r0, [sp, #4]
 803cbe0:	2202      	movs	r2, #2
 803cbe2:	a901      	add	r1, sp, #4
 803cbe4:	205b      	movs	r0, #91	; 0x5b
 803cbe6:	461f      	mov	r7, r3
 803cbe8:	f88d 4005 	strb.w	r4, [sp, #5]
 803cbec:	f7ff ffb8 	bl	803cb60 <bmi2_set_regs>
 803cbf0:	b108      	cbz	r0, 803cbf6 <upload_file+0x2a>
 803cbf2:	b003      	add	sp, #12
 803cbf4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 803cbf6:	463b      	mov	r3, r7
 803cbf8:	4632      	mov	r2, r6
 803cbfa:	4629      	mov	r1, r5
 803cbfc:	205e      	movs	r0, #94	; 0x5e
 803cbfe:	f7ff ffaf 	bl	803cb60 <bmi2_set_regs>
 803cc02:	b003      	add	sp, #12
 803cc04:	bdf0      	pop	{r4, r5, r6, r7, pc}
 803cc06:	f04f 30ff 	mov.w	r0, #4294967295
 803cc0a:	4770      	bx	lr

0803cc0c <set_config_load>:
 803cc0c:	b530      	push	{r4, r5, lr}
 803cc0e:	b085      	sub	sp, #20
 803cc10:	460b      	mov	r3, r1
 803cc12:	9101      	str	r1, [sp, #4]
 803cc14:	4604      	mov	r4, r0
 803cc16:	f10d 010f 	add.w	r1, sp, #15
 803cc1a:	2500      	movs	r5, #0
 803cc1c:	2201      	movs	r2, #1
 803cc1e:	2059      	movs	r0, #89	; 0x59
 803cc20:	f88d 500f 	strb.w	r5, [sp, #15]
 803cc24:	f7ff ff30 	bl	803ca88 <bmi2_get_regs>
 803cc28:	9b01      	ldr	r3, [sp, #4]
 803cc2a:	b108      	cbz	r0, 803cc30 <set_config_load+0x24>
 803cc2c:	b005      	add	sp, #20
 803cc2e:	bd30      	pop	{r4, r5, pc}
 803cc30:	f89d 200f 	ldrb.w	r2, [sp, #15]
 803cc34:	f022 0201 	bic.w	r2, r2, #1
 803cc38:	4314      	orrs	r4, r2
 803cc3a:	f10d 010f 	add.w	r1, sp, #15
 803cc3e:	2201      	movs	r2, #1
 803cc40:	2059      	movs	r0, #89	; 0x59
 803cc42:	f88d 400f 	strb.w	r4, [sp, #15]
 803cc46:	f7ff ff8b 	bl	803cb60 <bmi2_set_regs>
 803cc4a:	b005      	add	sp, #20
 803cc4c:	bd30      	pop	{r4, r5, pc}
 803cc4e:	bf00      	nop

0803cc50 <set_accel_config>:
 803cc50:	b530      	push	{r4, r5, lr}
 803cc52:	7882      	ldrb	r2, [r0, #2]
 803cc54:	2a01      	cmp	r2, #1
 803cc56:	b083      	sub	sp, #12
 803cc58:	460c      	mov	r4, r1
 803cc5a:	d940      	bls.n	803ccde <set_accel_config+0x8e>
 803cc5c:	2301      	movs	r3, #1
 803cc5e:	7083      	strb	r3, [r0, #2]
 803cc60:	7a0b      	ldrb	r3, [r1, #8]
 803cc62:	f043 0302 	orr.w	r3, r3, #2
 803cc66:	720b      	strb	r3, [r1, #8]
 803cc68:	7883      	ldrb	r3, [r0, #2]
 803cc6a:	2b01      	cmp	r3, #1
 803cc6c:	d138      	bne.n	803cce0 <set_accel_config+0x90>
 803cc6e:	7843      	ldrb	r3, [r0, #1]
 803cc70:	2b03      	cmp	r3, #3
 803cc72:	d83f      	bhi.n	803ccf4 <set_accel_config+0xa4>
 803cc74:	7803      	ldrb	r3, [r0, #0]
 803cc76:	b933      	cbnz	r3, 803cc86 <set_accel_config+0x36>
 803cc78:	2301      	movs	r3, #1
 803cc7a:	7003      	strb	r3, [r0, #0]
 803cc7c:	7a23      	ldrb	r3, [r4, #8]
 803cc7e:	f043 0301 	orr.w	r3, r3, #1
 803cc82:	7223      	strb	r3, [r4, #8]
 803cc84:	7803      	ldrb	r3, [r0, #0]
 803cc86:	2b0c      	cmp	r3, #12
 803cc88:	d905      	bls.n	803cc96 <set_accel_config+0x46>
 803cc8a:	230c      	movs	r3, #12
 803cc8c:	7003      	strb	r3, [r0, #0]
 803cc8e:	7a23      	ldrb	r3, [r4, #8]
 803cc90:	f043 0302 	orr.w	r3, r3, #2
 803cc94:	7223      	strb	r3, [r4, #8]
 803cc96:	78c2      	ldrb	r2, [r0, #3]
 803cc98:	2a03      	cmp	r2, #3
 803cc9a:	d906      	bls.n	803ccaa <set_accel_config+0x5a>
 803cc9c:	2303      	movs	r3, #3
 803cc9e:	70c3      	strb	r3, [r0, #3]
 803cca0:	7a23      	ldrb	r3, [r4, #8]
 803cca2:	f043 0302 	orr.w	r3, r3, #2
 803cca6:	7223      	strb	r3, [r4, #8]
 803cca8:	78c2      	ldrb	r2, [r0, #3]
 803ccaa:	7805      	ldrb	r5, [r0, #0]
 803ccac:	7843      	ldrb	r3, [r0, #1]
 803ccae:	7881      	ldrb	r1, [r0, #2]
 803ccb0:	f005 050f 	and.w	r5, r5, #15
 803ccb4:	011b      	lsls	r3, r3, #4
 803ccb6:	f002 0003 	and.w	r0, r2, #3
 803ccba:	ea45 15c1 	orr.w	r5, r5, r1, lsl #7
 803ccbe:	f003 0370 	and.w	r3, r3, #112	; 0x70
 803ccc2:	431d      	orrs	r5, r3
 803ccc4:	f88d 0005 	strb.w	r0, [sp, #5]
 803ccc8:	4623      	mov	r3, r4
 803ccca:	2202      	movs	r2, #2
 803cccc:	a901      	add	r1, sp, #4
 803ccce:	2040      	movs	r0, #64	; 0x40
 803ccd0:	f88d 5004 	strb.w	r5, [sp, #4]
 803ccd4:	f7ff ff44 	bl	803cb60 <bmi2_set_regs>
 803ccd8:	b198      	cbz	r0, 803cd02 <set_accel_config+0xb2>
 803ccda:	b003      	add	sp, #12
 803ccdc:	bd30      	pop	{r4, r5, pc}
 803ccde:	d0c6      	beq.n	803cc6e <set_accel_config+0x1e>
 803cce0:	7843      	ldrb	r3, [r0, #1]
 803cce2:	2b07      	cmp	r3, #7
 803cce4:	d9c6      	bls.n	803cc74 <set_accel_config+0x24>
 803cce6:	2307      	movs	r3, #7
 803cce8:	7043      	strb	r3, [r0, #1]
 803ccea:	7a23      	ldrb	r3, [r4, #8]
 803ccec:	f043 0302 	orr.w	r3, r3, #2
 803ccf0:	7223      	strb	r3, [r4, #8]
 803ccf2:	e7bf      	b.n	803cc74 <set_accel_config+0x24>
 803ccf4:	2303      	movs	r3, #3
 803ccf6:	7043      	strb	r3, [r0, #1]
 803ccf8:	7a23      	ldrb	r3, [r4, #8]
 803ccfa:	f043 0302 	orr.w	r3, r3, #2
 803ccfe:	7223      	strb	r3, [r4, #8]
 803cd00:	e7b8      	b.n	803cc74 <set_accel_config+0x24>
 803cd02:	4620      	mov	r0, r4
 803cd04:	f7ff ff14 	bl	803cb30 <cfg_error_status>
 803cd08:	b003      	add	sp, #12
 803cd0a:	bd30      	pop	{r4, r5, pc}

0803cd0c <set_gyro_config>:
 803cd0c:	b5f0      	push	{r4, r5, r6, r7, lr}
 803cd0e:	7882      	ldrb	r2, [r0, #2]
 803cd10:	2a01      	cmp	r2, #1
 803cd12:	b083      	sub	sp, #12
 803cd14:	460c      	mov	r4, r1
 803cd16:	d905      	bls.n	803cd24 <set_gyro_config+0x18>
 803cd18:	2301      	movs	r3, #1
 803cd1a:	7083      	strb	r3, [r0, #2]
 803cd1c:	7a0b      	ldrb	r3, [r1, #8]
 803cd1e:	f043 0302 	orr.w	r3, r3, #2
 803cd22:	720b      	strb	r3, [r1, #8]
 803cd24:	7843      	ldrb	r3, [r0, #1]
 803cd26:	2b03      	cmp	r3, #3
 803cd28:	d905      	bls.n	803cd36 <set_gyro_config+0x2a>
 803cd2a:	2303      	movs	r3, #3
 803cd2c:	7043      	strb	r3, [r0, #1]
 803cd2e:	7a23      	ldrb	r3, [r4, #8]
 803cd30:	f043 0302 	orr.w	r3, r3, #2
 803cd34:	7223      	strb	r3, [r4, #8]
 803cd36:	7943      	ldrb	r3, [r0, #5]
 803cd38:	2b01      	cmp	r3, #1
 803cd3a:	d905      	bls.n	803cd48 <set_gyro_config+0x3c>
 803cd3c:	2301      	movs	r3, #1
 803cd3e:	7143      	strb	r3, [r0, #5]
 803cd40:	7a23      	ldrb	r3, [r4, #8]
 803cd42:	f043 0302 	orr.w	r3, r3, #2
 803cd46:	7223      	strb	r3, [r4, #8]
 803cd48:	7803      	ldrb	r3, [r0, #0]
 803cd4a:	2b05      	cmp	r3, #5
 803cd4c:	d806      	bhi.n	803cd5c <set_gyro_config+0x50>
 803cd4e:	2306      	movs	r3, #6
 803cd50:	7003      	strb	r3, [r0, #0]
 803cd52:	7a23      	ldrb	r3, [r4, #8]
 803cd54:	f043 0301 	orr.w	r3, r3, #1
 803cd58:	7223      	strb	r3, [r4, #8]
 803cd5a:	7803      	ldrb	r3, [r0, #0]
 803cd5c:	2b0d      	cmp	r3, #13
 803cd5e:	d905      	bls.n	803cd6c <set_gyro_config+0x60>
 803cd60:	230d      	movs	r3, #13
 803cd62:	7003      	strb	r3, [r0, #0]
 803cd64:	7a23      	ldrb	r3, [r4, #8]
 803cd66:	f043 0302 	orr.w	r3, r3, #2
 803cd6a:	7223      	strb	r3, [r4, #8]
 803cd6c:	78c3      	ldrb	r3, [r0, #3]
 803cd6e:	2b01      	cmp	r3, #1
 803cd70:	d905      	bls.n	803cd7e <set_gyro_config+0x72>
 803cd72:	2301      	movs	r3, #1
 803cd74:	70c3      	strb	r3, [r0, #3]
 803cd76:	7a23      	ldrb	r3, [r4, #8]
 803cd78:	f043 0302 	orr.w	r3, r3, #2
 803cd7c:	7223      	strb	r3, [r4, #8]
 803cd7e:	7906      	ldrb	r6, [r0, #4]
 803cd80:	2e04      	cmp	r6, #4
 803cd82:	d906      	bls.n	803cd92 <set_gyro_config+0x86>
 803cd84:	2304      	movs	r3, #4
 803cd86:	7103      	strb	r3, [r0, #4]
 803cd88:	7a23      	ldrb	r3, [r4, #8]
 803cd8a:	f043 0302 	orr.w	r3, r3, #2
 803cd8e:	7223      	strb	r3, [r4, #8]
 803cd90:	7906      	ldrb	r6, [r0, #4]
 803cd92:	7805      	ldrb	r5, [r0, #0]
 803cd94:	7941      	ldrb	r1, [r0, #5]
 803cd96:	78c3      	ldrb	r3, [r0, #3]
 803cd98:	7842      	ldrb	r2, [r0, #1]
 803cd9a:	7887      	ldrb	r7, [r0, #2]
 803cd9c:	f005 050f 	and.w	r5, r5, #15
 803cda0:	00d8      	lsls	r0, r3, #3
 803cda2:	0189      	lsls	r1, r1, #6
 803cda4:	f001 0140 	and.w	r1, r1, #64	; 0x40
 803cda8:	0113      	lsls	r3, r2, #4
 803cdaa:	ea45 15c7 	orr.w	r5, r5, r7, lsl #7
 803cdae:	f006 0607 	and.w	r6, r6, #7
 803cdb2:	f000 0008 	and.w	r0, r0, #8
 803cdb6:	430d      	orrs	r5, r1
 803cdb8:	f003 0330 	and.w	r3, r3, #48	; 0x30
 803cdbc:	4330      	orrs	r0, r6
 803cdbe:	431d      	orrs	r5, r3
 803cdc0:	f88d 0005 	strb.w	r0, [sp, #5]
 803cdc4:	4623      	mov	r3, r4
 803cdc6:	2202      	movs	r2, #2
 803cdc8:	a901      	add	r1, sp, #4
 803cdca:	2042      	movs	r0, #66	; 0x42
 803cdcc:	f88d 5004 	strb.w	r5, [sp, #4]
 803cdd0:	f7ff fec6 	bl	803cb60 <bmi2_set_regs>
 803cdd4:	b108      	cbz	r0, 803cdda <set_gyro_config+0xce>
 803cdd6:	b003      	add	sp, #12
 803cdd8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 803cdda:	4620      	mov	r0, r4
 803cddc:	f7ff fea8 	bl	803cb30 <cfg_error_status>
 803cde0:	b003      	add	sp, #12
 803cde2:	bdf0      	pop	{r4, r5, r6, r7, pc}

0803cde4 <bmi2_set_adv_power_save>:
 803cde4:	b530      	push	{r4, r5, lr}
 803cde6:	b083      	sub	sp, #12
 803cde8:	2200      	movs	r2, #0
 803cdea:	f88d 2007 	strb.w	r2, [sp, #7]
 803cdee:	b351      	cbz	r1, 803ce46 <bmi2_set_adv_power_save+0x62>
 803cdf0:	6b8b      	ldr	r3, [r1, #56]	; 0x38
 803cdf2:	460c      	mov	r4, r1
 803cdf4:	b33b      	cbz	r3, 803ce46 <bmi2_set_adv_power_save+0x62>
 803cdf6:	6bcb      	ldr	r3, [r1, #60]	; 0x3c
 803cdf8:	b32b      	cbz	r3, 803ce46 <bmi2_set_adv_power_save+0x62>
 803cdfa:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 803cdfc:	b31b      	cbz	r3, 803ce46 <bmi2_set_adv_power_save+0x62>
 803cdfe:	4605      	mov	r5, r0
 803ce00:	f10d 0107 	add.w	r1, sp, #7
 803ce04:	4623      	mov	r3, r4
 803ce06:	2201      	movs	r2, #1
 803ce08:	207c      	movs	r0, #124	; 0x7c
 803ce0a:	f7ff fe3d 	bl	803ca88 <bmi2_get_regs>
 803ce0e:	b108      	cbz	r0, 803ce14 <bmi2_set_adv_power_save+0x30>
 803ce10:	b003      	add	sp, #12
 803ce12:	bd30      	pop	{r4, r5, pc}
 803ce14:	f89d 3007 	ldrb.w	r3, [sp, #7]
 803ce18:	f005 0001 	and.w	r0, r5, #1
 803ce1c:	f023 0501 	bic.w	r5, r3, #1
 803ce20:	4305      	orrs	r5, r0
 803ce22:	f10d 0107 	add.w	r1, sp, #7
 803ce26:	4623      	mov	r3, r4
 803ce28:	2201      	movs	r2, #1
 803ce2a:	207c      	movs	r0, #124	; 0x7c
 803ce2c:	f88d 5007 	strb.w	r5, [sp, #7]
 803ce30:	f7ff fe96 	bl	803cb60 <bmi2_set_regs>
 803ce34:	b950      	cbnz	r0, 803ce4c <bmi2_set_adv_power_save+0x68>
 803ce36:	f89d 3007 	ldrb.w	r3, [sp, #7]
 803ce3a:	f003 0301 	and.w	r3, r3, #1
 803ce3e:	f884 3047 	strb.w	r3, [r4, #71]	; 0x47
 803ce42:	b003      	add	sp, #12
 803ce44:	bd30      	pop	{r4, r5, pc}
 803ce46:	f04f 30ff 	mov.w	r0, #4294967295
 803ce4a:	e7e1      	b.n	803ce10 <bmi2_set_adv_power_save+0x2c>
 803ce4c:	f06f 000c 	mvn.w	r0, #12
 803ce50:	e7de      	b.n	803ce10 <bmi2_set_adv_power_save+0x2c>
 803ce52:	bf00      	nop

0803ce54 <bmi2_set_int_pin_config>:
 803ce54:	b570      	push	{r4, r5, r6, lr}
 803ce56:	4b3d      	ldr	r3, [pc, #244]	; (803cf4c <bmi2_set_int_pin_config+0xf8>)
 803ce58:	b082      	sub	sp, #8
 803ce5a:	881b      	ldrh	r3, [r3, #0]
 803ce5c:	f8ad 3004 	strh.w	r3, [sp, #4]
 803ce60:	2200      	movs	r2, #0
 803ce62:	f88d 2006 	strb.w	r2, [sp, #6]
 803ce66:	2900      	cmp	r1, #0
 803ce68:	d06a      	beq.n	803cf40 <bmi2_set_int_pin_config+0xec>
 803ce6a:	6b8b      	ldr	r3, [r1, #56]	; 0x38
 803ce6c:	460c      	mov	r4, r1
 803ce6e:	2b00      	cmp	r3, #0
 803ce70:	d066      	beq.n	803cf40 <bmi2_set_int_pin_config+0xec>
 803ce72:	6bcb      	ldr	r3, [r1, #60]	; 0x3c
 803ce74:	2b00      	cmp	r3, #0
 803ce76:	d063      	beq.n	803cf40 <bmi2_set_int_pin_config+0xec>
 803ce78:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 803ce7a:	2b00      	cmp	r3, #0
 803ce7c:	d060      	beq.n	803cf40 <bmi2_set_int_pin_config+0xec>
 803ce7e:	4605      	mov	r5, r0
 803ce80:	2800      	cmp	r0, #0
 803ce82:	d05d      	beq.n	803cf40 <bmi2_set_int_pin_config+0xec>
 803ce84:	7806      	ldrb	r6, [r0, #0]
 803ce86:	1e73      	subs	r3, r6, #1
 803ce88:	2b02      	cmp	r3, #2
 803ce8a:	d85c      	bhi.n	803cf46 <bmi2_set_int_pin_config+0xf2>
 803ce8c:	a901      	add	r1, sp, #4
 803ce8e:	4623      	mov	r3, r4
 803ce90:	2203      	movs	r2, #3
 803ce92:	2053      	movs	r0, #83	; 0x53
 803ce94:	f7ff fdf8 	bl	803ca88 <bmi2_get_regs>
 803ce98:	bb80      	cbnz	r0, 803cefc <bmi2_set_int_pin_config+0xa8>
 803ce9a:	f006 03fd 	and.w	r3, r6, #253	; 0xfd
 803ce9e:	2b01      	cmp	r3, #1
 803cea0:	d02e      	beq.n	803cf00 <bmi2_set_int_pin_config+0xac>
 803cea2:	79aa      	ldrb	r2, [r5, #6]
 803cea4:	f89d 3005 	ldrb.w	r3, [sp, #5]
 803cea8:	79e8      	ldrb	r0, [r5, #7]
 803ceaa:	7a29      	ldrb	r1, [r5, #8]
 803ceac:	0052      	lsls	r2, r2, #1
 803ceae:	f002 0202 	and.w	r2, r2, #2
 803ceb2:	f003 03f9 	and.w	r3, r3, #249	; 0xf9
 803ceb6:	0080      	lsls	r0, r0, #2
 803ceb8:	4313      	orrs	r3, r2
 803ceba:	f000 0004 	and.w	r0, r0, #4
 803cebe:	7a6a      	ldrb	r2, [r5, #9]
 803cec0:	4303      	orrs	r3, r0
 803cec2:	00c9      	lsls	r1, r1, #3
 803cec4:	f003 03e7 	and.w	r3, r3, #231	; 0xe7
 803cec8:	f001 0108 	and.w	r1, r1, #8
 803cecc:	0112      	lsls	r2, r2, #4
 803cece:	430b      	orrs	r3, r1
 803ced0:	f002 0210 	and.w	r2, r2, #16
 803ced4:	4313      	orrs	r3, r2
 803ced6:	f88d 3005 	strb.w	r3, [sp, #5]
 803ceda:	f89d 2006 	ldrb.w	r2, [sp, #6]
 803cede:	7868      	ldrb	r0, [r5, #1]
 803cee0:	f022 0201 	bic.w	r2, r2, #1
 803cee4:	f000 0001 	and.w	r0, r0, #1
 803cee8:	4623      	mov	r3, r4
 803ceea:	a901      	add	r1, sp, #4
 803ceec:	ea42 0400 	orr.w	r4, r2, r0
 803cef0:	2203      	movs	r2, #3
 803cef2:	2053      	movs	r0, #83	; 0x53
 803cef4:	f88d 4006 	strb.w	r4, [sp, #6]
 803cef8:	f7ff fe32 	bl	803cb60 <bmi2_set_regs>
 803cefc:	b002      	add	sp, #8
 803cefe:	bd70      	pop	{r4, r5, r6, pc}
 803cf00:	78aa      	ldrb	r2, [r5, #2]
 803cf02:	f89d 3004 	ldrb.w	r3, [sp, #4]
 803cf06:	78e8      	ldrb	r0, [r5, #3]
 803cf08:	7929      	ldrb	r1, [r5, #4]
 803cf0a:	0052      	lsls	r2, r2, #1
 803cf0c:	f002 0202 	and.w	r2, r2, #2
 803cf10:	f003 03f9 	and.w	r3, r3, #249	; 0xf9
 803cf14:	0080      	lsls	r0, r0, #2
 803cf16:	4313      	orrs	r3, r2
 803cf18:	f000 0004 	and.w	r0, r0, #4
 803cf1c:	796a      	ldrb	r2, [r5, #5]
 803cf1e:	4303      	orrs	r3, r0
 803cf20:	00c9      	lsls	r1, r1, #3
 803cf22:	f003 03e7 	and.w	r3, r3, #231	; 0xe7
 803cf26:	f001 0108 	and.w	r1, r1, #8
 803cf2a:	0112      	lsls	r2, r2, #4
 803cf2c:	430b      	orrs	r3, r1
 803cf2e:	f002 0210 	and.w	r2, r2, #16
 803cf32:	3e02      	subs	r6, #2
 803cf34:	4313      	orrs	r3, r2
 803cf36:	2e01      	cmp	r6, #1
 803cf38:	f88d 3004 	strb.w	r3, [sp, #4]
 803cf3c:	d8cd      	bhi.n	803ceda <bmi2_set_int_pin_config+0x86>
 803cf3e:	e7b0      	b.n	803cea2 <bmi2_set_int_pin_config+0x4e>
 803cf40:	f04f 30ff 	mov.w	r0, #4294967295
 803cf44:	e7da      	b.n	803cefc <bmi2_set_int_pin_config+0xa8>
 803cf46:	f06f 000b 	mvn.w	r0, #11
 803cf4a:	e7d7      	b.n	803cefc <bmi2_set_int_pin_config+0xa8>
 803cf4c:	08049834 	.word	0x08049834

0803cf50 <bmi2_get_status>:
 803cf50:	460b      	mov	r3, r1
 803cf52:	b159      	cbz	r1, 803cf6c <bmi2_get_status+0x1c>
 803cf54:	6b8a      	ldr	r2, [r1, #56]	; 0x38
 803cf56:	b14a      	cbz	r2, 803cf6c <bmi2_get_status+0x1c>
 803cf58:	6bca      	ldr	r2, [r1, #60]	; 0x3c
 803cf5a:	b13a      	cbz	r2, 803cf6c <bmi2_get_status+0x1c>
 803cf5c:	6c0a      	ldr	r2, [r1, #64]	; 0x40
 803cf5e:	b12a      	cbz	r2, 803cf6c <bmi2_get_status+0x1c>
 803cf60:	b120      	cbz	r0, 803cf6c <bmi2_get_status+0x1c>
 803cf62:	4601      	mov	r1, r0
 803cf64:	2201      	movs	r2, #1
 803cf66:	2003      	movs	r0, #3
 803cf68:	f7ff bd8e 	b.w	803ca88 <bmi2_get_regs>
 803cf6c:	f04f 30ff 	mov.w	r0, #4294967295
 803cf70:	4770      	bx	lr
 803cf72:	bf00      	nop

0803cf74 <bmi2_map_data_int>:
 803cf74:	b570      	push	{r4, r5, r6, lr}
 803cf76:	b084      	sub	sp, #16
 803cf78:	4613      	mov	r3, r2
 803cf7a:	4605      	mov	r5, r0
 803cf7c:	460c      	mov	r4, r1
 803cf7e:	9201      	str	r2, [sp, #4]
 803cf80:	2600      	movs	r6, #0
 803cf82:	f10d 010f 	add.w	r1, sp, #15
 803cf86:	2201      	movs	r2, #1
 803cf88:	2058      	movs	r0, #88	; 0x58
 803cf8a:	f88d 600f 	strb.w	r6, [sp, #15]
 803cf8e:	f7ff fd7b 	bl	803ca88 <bmi2_get_regs>
 803cf92:	b9b8      	cbnz	r0, 803cfc4 <bmi2_map_data_int+0x50>
 803cf94:	2c03      	cmp	r4, #3
 803cf96:	d83c      	bhi.n	803d012 <bmi2_map_data_int+0x9e>
 803cf98:	012a      	lsls	r2, r5, #4
 803cf9a:	2c02      	cmp	r4, #2
 803cf9c:	9b01      	ldr	r3, [sp, #4]
 803cf9e:	b2d2      	uxtb	r2, r2
 803cfa0:	d02b      	beq.n	803cffa <bmi2_map_data_int+0x86>
 803cfa2:	2c03      	cmp	r4, #3
 803cfa4:	d01c      	beq.n	803cfe0 <bmi2_map_data_int+0x6c>
 803cfa6:	2c01      	cmp	r4, #1
 803cfa8:	d00e      	beq.n	803cfc8 <bmi2_map_data_int+0x54>
 803cfaa:	f89d 100f 	ldrb.w	r1, [sp, #15]
 803cfae:	432a      	orrs	r2, r5
 803cfb0:	ea21 0202 	bic.w	r2, r1, r2
 803cfb4:	f88d 200f 	strb.w	r2, [sp, #15]
 803cfb8:	f10d 010f 	add.w	r1, sp, #15
 803cfbc:	2201      	movs	r2, #1
 803cfbe:	2058      	movs	r0, #88	; 0x58
 803cfc0:	f7ff fdce 	bl	803cb60 <bmi2_set_regs>
 803cfc4:	b004      	add	sp, #16
 803cfc6:	bd70      	pop	{r4, r5, r6, pc}
 803cfc8:	f89d 200f 	ldrb.w	r2, [sp, #15]
 803cfcc:	f10d 010f 	add.w	r1, sp, #15
 803cfd0:	4315      	orrs	r5, r2
 803cfd2:	2058      	movs	r0, #88	; 0x58
 803cfd4:	2201      	movs	r2, #1
 803cfd6:	f88d 500f 	strb.w	r5, [sp, #15]
 803cfda:	f7ff fdc1 	bl	803cb60 <bmi2_set_regs>
 803cfde:	e7f1      	b.n	803cfc4 <bmi2_map_data_int+0x50>
 803cfe0:	f89d 100f 	ldrb.w	r1, [sp, #15]
 803cfe4:	430d      	orrs	r5, r1
 803cfe6:	432a      	orrs	r2, r5
 803cfe8:	f88d 200f 	strb.w	r2, [sp, #15]
 803cfec:	f10d 010f 	add.w	r1, sp, #15
 803cff0:	2201      	movs	r2, #1
 803cff2:	2058      	movs	r0, #88	; 0x58
 803cff4:	f7ff fdb4 	bl	803cb60 <bmi2_set_regs>
 803cff8:	e7e4      	b.n	803cfc4 <bmi2_map_data_int+0x50>
 803cffa:	f89d 500f 	ldrb.w	r5, [sp, #15]
 803cffe:	432a      	orrs	r2, r5
 803d000:	f88d 200f 	strb.w	r2, [sp, #15]
 803d004:	f10d 010f 	add.w	r1, sp, #15
 803d008:	2201      	movs	r2, #1
 803d00a:	2058      	movs	r0, #88	; 0x58
 803d00c:	f7ff fda8 	bl	803cb60 <bmi2_set_regs>
 803d010:	e7d8      	b.n	803cfc4 <bmi2_map_data_int+0x50>
 803d012:	f06f 000b 	mvn.w	r0, #11
 803d016:	e7d5      	b.n	803cfc4 <bmi2_map_data_int+0x50>

0803d018 <bmi2_get_internal_status>:
 803d018:	b1c1      	cbz	r1, 803d04c <bmi2_get_internal_status+0x34>
 803d01a:	6b8b      	ldr	r3, [r1, #56]	; 0x38
 803d01c:	b570      	push	{r4, r5, r6, lr}
 803d01e:	460c      	mov	r4, r1
 803d020:	b18b      	cbz	r3, 803d046 <bmi2_get_internal_status+0x2e>
 803d022:	6bcb      	ldr	r3, [r1, #60]	; 0x3c
 803d024:	b17b      	cbz	r3, 803d046 <bmi2_get_internal_status+0x2e>
 803d026:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 803d028:	b16b      	cbz	r3, 803d046 <bmi2_get_internal_status+0x2e>
 803d02a:	4605      	mov	r5, r0
 803d02c:	b158      	cbz	r0, 803d046 <bmi2_get_internal_status+0x2e>
 803d02e:	6849      	ldr	r1, [r1, #4]
 803d030:	f644 6020 	movw	r0, #20000	; 0x4e20
 803d034:	4798      	blx	r3
 803d036:	4623      	mov	r3, r4
 803d038:	4629      	mov	r1, r5
 803d03a:	2201      	movs	r2, #1
 803d03c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 803d040:	2021      	movs	r0, #33	; 0x21
 803d042:	f7ff bd21 	b.w	803ca88 <bmi2_get_regs>
 803d046:	f04f 30ff 	mov.w	r0, #4294967295
 803d04a:	bd70      	pop	{r4, r5, r6, pc}
 803d04c:	f04f 30ff 	mov.w	r0, #4294967295
 803d050:	4770      	bx	lr
 803d052:	bf00      	nop

0803d054 <bmi2_write_config_file>:
 803d054:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 803d058:	b083      	sub	sp, #12
 803d05a:	2200      	movs	r2, #0
 803d05c:	f88d 2007 	strb.w	r2, [sp, #7]
 803d060:	2800      	cmp	r0, #0
 803d062:	f000 80a4 	beq.w	803d1ae <bmi2_write_config_file+0x15a>
 803d066:	6b83      	ldr	r3, [r0, #56]	; 0x38
 803d068:	4604      	mov	r4, r0
 803d06a:	2b00      	cmp	r3, #0
 803d06c:	f000 809f 	beq.w	803d1ae <bmi2_write_config_file+0x15a>
 803d070:	6bc3      	ldr	r3, [r0, #60]	; 0x3c
 803d072:	2b00      	cmp	r3, #0
 803d074:	f000 809b 	beq.w	803d1ae <bmi2_write_config_file+0x15a>
 803d078:	6c03      	ldr	r3, [r0, #64]	; 0x40
 803d07a:	2b00      	cmp	r3, #0
 803d07c:	f000 8097 	beq.w	803d1ae <bmi2_write_config_file+0x15a>
 803d080:	f8b0 704a 	ldrh.w	r7, [r0, #74]	; 0x4a
 803d084:	2f00      	cmp	r7, #0
 803d086:	f000 8092 	beq.w	803d1ae <bmi2_write_config_file+0x15a>
 803d08a:	f8b0 800e 	ldrh.w	r8, [r0, #14]
 803d08e:	f018 0f01 	tst.w	r8, #1
 803d092:	d15a      	bne.n	803d14a <bmi2_write_config_file+0xf6>
 803d094:	f1b8 0f01 	cmp.w	r8, #1
 803d098:	d802      	bhi.n	803d0a0 <bmi2_write_config_file+0x4c>
 803d09a:	2602      	movs	r6, #2
 803d09c:	81e6      	strh	r6, [r4, #14]
 803d09e:	46b0      	mov	r8, r6
 803d0a0:	4621      	mov	r1, r4
 803d0a2:	2000      	movs	r0, #0
 803d0a4:	f7ff fe9e 	bl	803cde4 <bmi2_set_adv_power_save>
 803d0a8:	4605      	mov	r5, r0
 803d0aa:	2800      	cmp	r0, #0
 803d0ac:	d149      	bne.n	803d142 <bmi2_write_config_file+0xee>
 803d0ae:	6c23      	ldr	r3, [r4, #64]	; 0x40
 803d0b0:	4621      	mov	r1, r4
 803d0b2:	f240 208a 	movw	r0, #650	; 0x28a
 803d0b6:	4798      	blx	r3
 803d0b8:	4628      	mov	r0, r5
 803d0ba:	4621      	mov	r1, r4
 803d0bc:	f7ff fda6 	bl	803cc0c <set_config_load>
 803d0c0:	4605      	mov	r5, r0
 803d0c2:	2800      	cmp	r0, #0
 803d0c4:	d13d      	bne.n	803d142 <bmi2_write_config_file+0xee>
 803d0c6:	fbb7 f6f8 	udiv	r6, r7, r8
 803d0ca:	fb08 7616 	mls	r6, r8, r6, r7
 803d0ce:	f016 06ff 	ands.w	r6, r6, #255	; 0xff
 803d0d2:	d041      	beq.n	803d158 <bmi2_write_config_file+0x104>
 803d0d4:	1bbe      	subs	r6, r7, r6
 803d0d6:	b2b6      	uxth	r6, r6
 803d0d8:	f8b4 900e 	ldrh.w	r9, [r4, #14]
 803d0dc:	b196      	cbz	r6, 803d104 <bmi2_write_config_file+0xb0>
 803d0de:	4680      	mov	r8, r0
 803d0e0:	e000      	b.n	803d0e4 <bmi2_write_config_file+0x90>
 803d0e2:	bb70      	cbnz	r0, 803d142 <bmi2_write_config_file+0xee>
 803d0e4:	6920      	ldr	r0, [r4, #16]
 803d0e6:	464a      	mov	r2, r9
 803d0e8:	4440      	add	r0, r8
 803d0ea:	4641      	mov	r1, r8
 803d0ec:	4623      	mov	r3, r4
 803d0ee:	f7ff fd6d 	bl	803cbcc <upload_file>
 803d0f2:	f8b4 900e 	ldrh.w	r9, [r4, #14]
 803d0f6:	44c8      	add	r8, r9
 803d0f8:	fa1f f888 	uxth.w	r8, r8
 803d0fc:	4546      	cmp	r6, r8
 803d0fe:	4605      	mov	r5, r0
 803d100:	d8ef      	bhi.n	803d0e2 <bmi2_write_config_file+0x8e>
 803d102:	b9f0      	cbnz	r0, 803d142 <bmi2_write_config_file+0xee>
 803d104:	2202      	movs	r2, #2
 803d106:	42b7      	cmp	r7, r6
 803d108:	81e2      	strh	r2, [r4, #14]
 803d10a:	d801      	bhi.n	803d110 <bmi2_write_config_file+0xbc>
 803d10c:	e052      	b.n	803d1b4 <bmi2_write_config_file+0x160>
 803d10e:	b958      	cbnz	r0, 803d128 <bmi2_write_config_file+0xd4>
 803d110:	6920      	ldr	r0, [r4, #16]
 803d112:	4631      	mov	r1, r6
 803d114:	4430      	add	r0, r6
 803d116:	4623      	mov	r3, r4
 803d118:	f7ff fd58 	bl	803cbcc <upload_file>
 803d11c:	89e2      	ldrh	r2, [r4, #14]
 803d11e:	4416      	add	r6, r2
 803d120:	b2b6      	uxth	r6, r6
 803d122:	42b7      	cmp	r7, r6
 803d124:	4605      	mov	r5, r0
 803d126:	d8f2      	bhi.n	803d10e <bmi2_write_config_file+0xba>
 803d128:	f8a4 900e 	strh.w	r9, [r4, #14]
 803d12c:	b94d      	cbnz	r5, 803d142 <bmi2_write_config_file+0xee>
 803d12e:	4621      	mov	r1, r4
 803d130:	2001      	movs	r0, #1
 803d132:	f7ff fd6b 	bl	803cc0c <set_config_load>
 803d136:	6c23      	ldr	r3, [r4, #64]	; 0x40
 803d138:	6861      	ldr	r1, [r4, #4]
 803d13a:	4605      	mov	r5, r0
 803d13c:	481f      	ldr	r0, [pc, #124]	; (803d1bc <bmi2_write_config_file+0x168>)
 803d13e:	4798      	blx	r3
 803d140:	b1dd      	cbz	r5, 803d17a <bmi2_write_config_file+0x126>
 803d142:	4628      	mov	r0, r5
 803d144:	b003      	add	sp, #12
 803d146:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 803d14a:	f108 36ff 	add.w	r6, r8, #4294967295
 803d14e:	fa1f f886 	uxth.w	r8, r6
 803d152:	f8a0 800e 	strh.w	r8, [r0, #14]
 803d156:	e79d      	b.n	803d094 <bmi2_write_config_file+0x40>
 803d158:	89e2      	ldrh	r2, [r4, #14]
 803d15a:	e001      	b.n	803d160 <bmi2_write_config_file+0x10c>
 803d15c:	2800      	cmp	r0, #0
 803d15e:	d1f0      	bne.n	803d142 <bmi2_write_config_file+0xee>
 803d160:	6920      	ldr	r0, [r4, #16]
 803d162:	4631      	mov	r1, r6
 803d164:	4430      	add	r0, r6
 803d166:	4623      	mov	r3, r4
 803d168:	f7ff fd30 	bl	803cbcc <upload_file>
 803d16c:	89e2      	ldrh	r2, [r4, #14]
 803d16e:	4416      	add	r6, r2
 803d170:	b2b6      	uxth	r6, r6
 803d172:	42b7      	cmp	r7, r6
 803d174:	4605      	mov	r5, r0
 803d176:	d8f1      	bhi.n	803d15c <bmi2_write_config_file+0x108>
 803d178:	e7d8      	b.n	803d12c <bmi2_write_config_file+0xd8>
 803d17a:	4621      	mov	r1, r4
 803d17c:	2001      	movs	r0, #1
 803d17e:	f7ff fe31 	bl	803cde4 <bmi2_set_adv_power_save>
 803d182:	4605      	mov	r5, r0
 803d184:	2800      	cmp	r0, #0
 803d186:	d1dc      	bne.n	803d142 <bmi2_write_config_file+0xee>
 803d188:	4621      	mov	r1, r4
 803d18a:	f10d 0007 	add.w	r0, sp, #7
 803d18e:	f7ff ff43 	bl	803d018 <bmi2_get_internal_status>
 803d192:	4605      	mov	r5, r0
 803d194:	2800      	cmp	r0, #0
 803d196:	d1d4      	bne.n	803d142 <bmi2_write_config_file+0xee>
 803d198:	f89d 3007 	ldrb.w	r3, [sp, #7]
 803d19c:	f013 0f01 	tst.w	r3, #1
 803d1a0:	bf08      	it	eq
 803d1a2:	f06f 0508 	mvneq.w	r5, #8
 803d1a6:	4628      	mov	r0, r5
 803d1a8:	b003      	add	sp, #12
 803d1aa:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 803d1ae:	f04f 35ff 	mov.w	r5, #4294967295
 803d1b2:	e7c6      	b.n	803d142 <bmi2_write_config_file+0xee>
 803d1b4:	f8a4 900e 	strh.w	r9, [r4, #14]
 803d1b8:	e7b9      	b.n	803d12e <bmi2_write_config_file+0xda>
 803d1ba:	bf00      	nop
 803d1bc:	000249f0 	.word	0x000249f0

0803d1c0 <bmi2_soft_reset>:
 803d1c0:	b530      	push	{r4, r5, lr}
 803d1c2:	b083      	sub	sp, #12
 803d1c4:	21b6      	movs	r1, #182	; 0xb6
 803d1c6:	2200      	movs	r2, #0
 803d1c8:	f88d 1006 	strb.w	r1, [sp, #6]
 803d1cc:	f88d 2007 	strb.w	r2, [sp, #7]
 803d1d0:	b378      	cbz	r0, 803d232 <bmi2_soft_reset+0x72>
 803d1d2:	6b83      	ldr	r3, [r0, #56]	; 0x38
 803d1d4:	4604      	mov	r4, r0
 803d1d6:	b363      	cbz	r3, 803d232 <bmi2_soft_reset+0x72>
 803d1d8:	6bc3      	ldr	r3, [r0, #60]	; 0x3c
 803d1da:	b353      	cbz	r3, 803d232 <bmi2_soft_reset+0x72>
 803d1dc:	6c03      	ldr	r3, [r0, #64]	; 0x40
 803d1de:	b343      	cbz	r3, 803d232 <bmi2_soft_reset+0x72>
 803d1e0:	4603      	mov	r3, r0
 803d1e2:	2201      	movs	r2, #1
 803d1e4:	f10d 0106 	add.w	r1, sp, #6
 803d1e8:	207e      	movs	r0, #126	; 0x7e
 803d1ea:	f7ff fcb9 	bl	803cb60 <bmi2_set_regs>
 803d1ee:	6c23      	ldr	r3, [r4, #64]	; 0x40
 803d1f0:	6861      	ldr	r1, [r4, #4]
 803d1f2:	4605      	mov	r5, r0
 803d1f4:	f44f 60fa 	mov.w	r0, #2000	; 0x7d0
 803d1f8:	4798      	blx	r3
 803d1fa:	2201      	movs	r2, #1
 803d1fc:	f884 2047 	strb.w	r2, [r4, #71]	; 0x47
 803d200:	b955      	cbnz	r5, 803d218 <bmi2_soft_reset+0x58>
 803d202:	7a63      	ldrb	r3, [r4, #9]
 803d204:	b15b      	cbz	r3, 803d21e <bmi2_soft_reset+0x5e>
 803d206:	4620      	mov	r0, r4
 803d208:	f7ff ff24 	bl	803d054 <bmi2_write_config_file>
 803d20c:	4605      	mov	r5, r0
 803d20e:	b918      	cbnz	r0, 803d218 <bmi2_soft_reset+0x58>
 803d210:	2200      	movs	r2, #0
 803d212:	2300      	movs	r3, #0
 803d214:	e9c4 230c 	strd	r2, r3, [r4, #48]	; 0x30
 803d218:	4628      	mov	r0, r5
 803d21a:	b003      	add	sp, #12
 803d21c:	bd30      	pop	{r4, r5, pc}
 803d21e:	4628      	mov	r0, r5
 803d220:	4623      	mov	r3, r4
 803d222:	f10d 0107 	add.w	r1, sp, #7
 803d226:	f7ff fc2f 	bl	803ca88 <bmi2_get_regs>
 803d22a:	4605      	mov	r5, r0
 803d22c:	2800      	cmp	r0, #0
 803d22e:	d1f3      	bne.n	803d218 <bmi2_soft_reset+0x58>
 803d230:	e7e9      	b.n	803d206 <bmi2_soft_reset+0x46>
 803d232:	f04f 35ff 	mov.w	r5, #4294967295
 803d236:	e7ef      	b.n	803d218 <bmi2_soft_reset+0x58>

0803d238 <bmi2_sec_init>:
 803d238:	b510      	push	{r4, lr}
 803d23a:	b082      	sub	sp, #8
 803d23c:	2200      	movs	r2, #0
 803d23e:	f88d 2007 	strb.w	r2, [sp, #7]
 803d242:	b328      	cbz	r0, 803d290 <bmi2_sec_init+0x58>
 803d244:	6b83      	ldr	r3, [r0, #56]	; 0x38
 803d246:	4604      	mov	r4, r0
 803d248:	b313      	cbz	r3, 803d290 <bmi2_sec_init+0x58>
 803d24a:	6bc3      	ldr	r3, [r0, #60]	; 0x3c
 803d24c:	b303      	cbz	r3, 803d290 <bmi2_sec_init+0x58>
 803d24e:	6c03      	ldr	r3, [r0, #64]	; 0x40
 803d250:	b1f3      	cbz	r3, 803d290 <bmi2_sec_init+0x58>
 803d252:	f7ff ffb5 	bl	803d1c0 <bmi2_soft_reset>
 803d256:	4603      	mov	r3, r0
 803d258:	b110      	cbz	r0, 803d260 <bmi2_sec_init+0x28>
 803d25a:	4618      	mov	r0, r3
 803d25c:	b002      	add	sp, #8
 803d25e:	bd10      	pop	{r4, pc}
 803d260:	4623      	mov	r3, r4
 803d262:	2201      	movs	r2, #1
 803d264:	f10d 0107 	add.w	r1, sp, #7
 803d268:	f7ff fc0e 	bl	803ca88 <bmi2_get_regs>
 803d26c:	4603      	mov	r3, r0
 803d26e:	2800      	cmp	r0, #0
 803d270:	d1f3      	bne.n	803d25a <bmi2_sec_init+0x22>
 803d272:	f89d 2007 	ldrb.w	r2, [sp, #7]
 803d276:	7821      	ldrb	r1, [r4, #0]
 803d278:	4291      	cmp	r1, r2
 803d27a:	d10c      	bne.n	803d296 <bmi2_sec_init+0x5e>
 803d27c:	4a08      	ldr	r2, [pc, #32]	; (803d2a0 <bmi2_sec_init+0x68>)
 803d27e:	8523      	strh	r3, [r4, #40]	; 0x28
 803d280:	2010      	movs	r0, #16
 803d282:	2101      	movs	r1, #1
 803d284:	7320      	strb	r0, [r4, #12]
 803d286:	4618      	mov	r0, r3
 803d288:	75e1      	strb	r1, [r4, #23]
 803d28a:	6262      	str	r2, [r4, #36]	; 0x24
 803d28c:	b002      	add	sp, #8
 803d28e:	bd10      	pop	{r4, pc}
 803d290:	f04f 33ff 	mov.w	r3, #4294967295
 803d294:	e7e1      	b.n	803d25a <bmi2_sec_init+0x22>
 803d296:	7022      	strb	r2, [r4, #0]
 803d298:	f06f 0302 	mvn.w	r3, #2
 803d29c:	e7dd      	b.n	803d25a <bmi2_sec_init+0x22>
 803d29e:	bf00      	nop
 803d2a0:	00020100 	.word	0x00020100

0803d2a4 <bmi2_get_feat_config>:
 803d2a4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 803d2a8:	b083      	sub	sp, #12
 803d2aa:	f88d 0007 	strb.w	r0, [sp, #7]
 803d2ae:	2900      	cmp	r1, #0
 803d2b0:	d052      	beq.n	803d358 <bmi2_get_feat_config+0xb4>
 803d2b2:	4615      	mov	r5, r2
 803d2b4:	2a00      	cmp	r2, #0
 803d2b6:	d04f      	beq.n	803d358 <bmi2_get_feat_config+0xb4>
 803d2b8:	7d12      	ldrb	r2, [r2, #20]
 803d2ba:	b2c3      	uxtb	r3, r0
 803d2bc:	429a      	cmp	r2, r3
 803d2be:	d948      	bls.n	803d352 <bmi2_get_feat_config+0xae>
 803d2c0:	4688      	mov	r8, r1
 803d2c2:	462b      	mov	r3, r5
 803d2c4:	2201      	movs	r2, #1
 803d2c6:	f10d 0107 	add.w	r1, sp, #7
 803d2ca:	202f      	movs	r0, #47	; 0x2f
 803d2cc:	f7ff fc48 	bl	803cb60 <bmi2_set_regs>
 803d2d0:	bb78      	cbnz	r0, 803d332 <bmi2_get_feat_config+0x8e>
 803d2d2:	89ea      	ldrh	r2, [r5, #14]
 803d2d4:	2a0f      	cmp	r2, #15
 803d2d6:	d82f      	bhi.n	803d338 <bmi2_get_feat_config+0x94>
 803d2d8:	07d3      	lsls	r3, r2, #31
 803d2da:	d436      	bmi.n	803d34a <bmi2_get_feat_config+0xa6>
 803d2dc:	f04f 0900 	mov.w	r9, #0
 803d2e0:	464f      	mov	r7, r9
 803d2e2:	2630      	movs	r6, #48	; 0x30
 803d2e4:	2410      	movs	r4, #16
 803d2e6:	e00f      	b.n	803d308 <bmi2_get_feat_config+0x64>
 803d2e8:	f7ff fbce 	bl	803ca88 <bmi2_get_regs>
 803d2ec:	7bac      	ldrb	r4, [r5, #14]
 803d2ee:	44a1      	add	r9, r4
 803d2f0:	fa5f f989 	uxtb.w	r9, r9
 803d2f4:	4427      	add	r7, r4
 803d2f6:	4426      	add	r6, r4
 803d2f8:	f1c9 0410 	rsb	r4, r9, #16
 803d2fc:	b2ff      	uxtb	r7, r7
 803d2fe:	b2f6      	uxtb	r6, r6
 803d300:	b2e4      	uxtb	r4, r4
 803d302:	b9b0      	cbnz	r0, 803d332 <bmi2_get_feat_config+0x8e>
 803d304:	b1ac      	cbz	r4, 803d332 <bmi2_get_feat_config+0x8e>
 803d306:	89ea      	ldrh	r2, [r5, #14]
 803d308:	4294      	cmp	r4, r2
 803d30a:	eb08 0107 	add.w	r1, r8, r7
 803d30e:	4630      	mov	r0, r6
 803d310:	462b      	mov	r3, r5
 803d312:	fa1f fc84 	uxth.w	ip, r4
 803d316:	d2e7      	bcs.n	803d2e8 <bmi2_get_feat_config+0x44>
 803d318:	4662      	mov	r2, ip
 803d31a:	eb08 0107 	add.w	r1, r8, r7
 803d31e:	44a1      	add	r9, r4
 803d320:	f7ff fbb2 	bl	803ca88 <bmi2_get_regs>
 803d324:	fa5f f989 	uxtb.w	r9, r9
 803d328:	f1c9 0410 	rsb	r4, r9, #16
 803d32c:	b2e4      	uxtb	r4, r4
 803d32e:	2800      	cmp	r0, #0
 803d330:	d0e8      	beq.n	803d304 <bmi2_get_feat_config+0x60>
 803d332:	b003      	add	sp, #12
 803d334:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 803d338:	462b      	mov	r3, r5
 803d33a:	4641      	mov	r1, r8
 803d33c:	2210      	movs	r2, #16
 803d33e:	2030      	movs	r0, #48	; 0x30
 803d340:	f7ff fba2 	bl	803ca88 <bmi2_get_regs>
 803d344:	b003      	add	sp, #12
 803d346:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 803d34a:	3a01      	subs	r2, #1
 803d34c:	b292      	uxth	r2, r2
 803d34e:	81ea      	strh	r2, [r5, #14]
 803d350:	e7c4      	b.n	803d2dc <bmi2_get_feat_config+0x38>
 803d352:	f06f 0009 	mvn.w	r0, #9
 803d356:	e7ec      	b.n	803d332 <bmi2_get_feat_config+0x8e>
 803d358:	f04f 30ff 	mov.w	r0, #4294967295
 803d35c:	e7e9      	b.n	803d332 <bmi2_get_feat_config+0x8e>
 803d35e:	bf00      	nop

0803d360 <get_gyro_gain_update_status>:
 803d360:	b570      	push	{r4, r5, r6, lr}
 803d362:	b084      	sub	sp, #16
 803d364:	7d8d      	ldrb	r5, [r1, #22]
 803d366:	2300      	movs	r3, #0
 803d368:	e9cd 3300 	strd	r3, r3, [sp]
 803d36c:	9302      	str	r3, [sp, #8]
 803d36e:	9303      	str	r3, [sp, #12]
 803d370:	b33d      	cbz	r5, 803d3c2 <get_gyro_gain_update_status+0x62>
 803d372:	6a0b      	ldr	r3, [r1, #32]
 803d374:	3d01      	subs	r5, #1
 803d376:	b2ec      	uxtb	r4, r5
 803d378:	1cda      	adds	r2, r3, #3
 803d37a:	2503      	movs	r5, #3
 803d37c:	4606      	mov	r6, r0
 803d37e:	fb15 2504 	smlabb	r5, r5, r4, r2
 803d382:	e002      	b.n	803d38a <get_gyro_gain_update_status+0x2a>
 803d384:	3303      	adds	r3, #3
 803d386:	42ab      	cmp	r3, r5
 803d388:	d01b      	beq.n	803d3c2 <get_gyro_gain_update_status+0x62>
 803d38a:	781c      	ldrb	r4, [r3, #0]
 803d38c:	2c09      	cmp	r4, #9
 803d38e:	d1f9      	bne.n	803d384 <get_gyro_gain_update_status+0x24>
 803d390:	460a      	mov	r2, r1
 803d392:	7858      	ldrb	r0, [r3, #1]
 803d394:	789c      	ldrb	r4, [r3, #2]
 803d396:	4669      	mov	r1, sp
 803d398:	f7ff ff84 	bl	803d2a4 <bmi2_get_feat_config>
 803d39c:	b998      	cbnz	r0, 803d3c6 <get_gyro_gain_update_status+0x66>
 803d39e:	ab04      	add	r3, sp, #16
 803d3a0:	441c      	add	r4, r3
 803d3a2:	f814 3c10 	ldrb.w	r3, [r4, #-16]
 803d3a6:	f003 0401 	and.w	r4, r3, #1
 803d3aa:	f3c3 0140 	ubfx	r1, r3, #1, #1
 803d3ae:	f3c3 0280 	ubfx	r2, r3, #2, #1
 803d3b2:	f3c3 03c2 	ubfx	r3, r3, #3, #3
 803d3b6:	7034      	strb	r4, [r6, #0]
 803d3b8:	7071      	strb	r1, [r6, #1]
 803d3ba:	70b2      	strb	r2, [r6, #2]
 803d3bc:	70f3      	strb	r3, [r6, #3]
 803d3be:	b004      	add	sp, #16
 803d3c0:	bd70      	pop	{r4, r5, r6, pc}
 803d3c2:	f06f 0007 	mvn.w	r0, #7
 803d3c6:	b004      	add	sp, #16
 803d3c8:	bd70      	pop	{r4, r5, r6, pc}
 803d3ca:	bf00      	nop

0803d3cc <bmi2_get_sensor_data>:
 803d3cc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 803d3d0:	b089      	sub	sp, #36	; 0x24
 803d3d2:	2a00      	cmp	r2, #0
 803d3d4:	f000 813a 	beq.w	803d64c <bmi2_get_sensor_data+0x280>
 803d3d8:	4693      	mov	fp, r2
 803d3da:	6b92      	ldr	r2, [r2, #56]	; 0x38
 803d3dc:	2a00      	cmp	r2, #0
 803d3de:	f000 8135 	beq.w	803d64c <bmi2_get_sensor_data+0x280>
 803d3e2:	f8db 203c 	ldr.w	r2, [fp, #60]	; 0x3c
 803d3e6:	2a00      	cmp	r2, #0
 803d3e8:	f000 8130 	beq.w	803d64c <bmi2_get_sensor_data+0x280>
 803d3ec:	f8db 2040 	ldr.w	r2, [fp, #64]	; 0x40
 803d3f0:	2a00      	cmp	r2, #0
 803d3f2:	f000 812b 	beq.w	803d64c <bmi2_get_sensor_data+0x280>
 803d3f6:	2800      	cmp	r0, #0
 803d3f8:	f000 8128 	beq.w	803d64c <bmi2_get_sensor_data+0x280>
 803d3fc:	f89b 7047 	ldrb.w	r7, [fp, #71]	; 0x47
 803d400:	2900      	cmp	r1, #0
 803d402:	f000 8126 	beq.w	803d652 <bmi2_get_sensor_data+0x286>
 803d406:	3901      	subs	r1, #1
 803d408:	2500      	movs	r5, #0
 803d40a:	b2c9      	uxtb	r1, r1
 803d40c:	f100 061b 	add.w	r6, r0, #27
 803d410:	eb06 1601 	add.w	r6, r6, r1, lsl #4
 803d414:	f100 040b 	add.w	r4, r0, #11
 803d418:	46a9      	mov	r9, r5
 803d41a:	46a8      	mov	r8, r5
 803d41c:	f04f 0a03 	mov.w	sl, #3
 803d420:	f814 2c0b 	ldrb.w	r2, [r4, #-11]
 803d424:	2a03      	cmp	r2, #3
 803d426:	d902      	bls.n	803d42e <bmi2_get_sensor_data+0x62>
 803d428:	2f01      	cmp	r7, #1
 803d42a:	f000 8095 	beq.w	803d558 <bmi2_get_sensor_data+0x18c>
 803d42e:	b1ad      	cbz	r5, 803d45c <bmi2_get_sensor_data+0x90>
 803d430:	3410      	adds	r4, #16
 803d432:	42b4      	cmp	r4, r6
 803d434:	d1f4      	bne.n	803d420 <bmi2_get_sensor_data+0x54>
 803d436:	4628      	mov	r0, r5
 803d438:	b009      	add	sp, #36	; 0x24
 803d43a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 803d43e:	4659      	mov	r1, fp
 803d440:	1fe0      	subs	r0, r4, #7
 803d442:	f7ff ff8d 	bl	803d360 <get_gyro_gain_update_status>
 803d446:	2800      	cmp	r0, #0
 803d448:	d158      	bne.n	803d4fc <bmi2_get_sensor_data+0x130>
 803d44a:	2f01      	cmp	r7, #1
 803d44c:	d044      	beq.n	803d4d8 <bmi2_get_sensor_data+0x10c>
 803d44e:	3410      	adds	r4, #16
 803d450:	42b4      	cmp	r4, r6
 803d452:	d023      	beq.n	803d49c <bmi2_get_sensor_data+0xd0>
 803d454:	f814 2c0b 	ldrb.w	r2, [r4, #-11]
 803d458:	2a03      	cmp	r2, #3
 803d45a:	d8e5      	bhi.n	803d428 <bmi2_get_sensor_data+0x5c>
 803d45c:	f814 2c0b 	ldrb.w	r2, [r4, #-11]
 803d460:	2a09      	cmp	r2, #9
 803d462:	d87f      	bhi.n	803d564 <bmi2_get_sensor_data+0x198>
 803d464:	2a09      	cmp	r2, #9
 803d466:	d817      	bhi.n	803d498 <bmi2_get_sensor_data+0xcc>
 803d468:	a301      	add	r3, pc, #4	; (adr r3, 803d470 <bmi2_get_sensor_data+0xa4>)
 803d46a:	f853 f022 	ldr.w	pc, [r3, r2, lsl #2]
 803d46e:	bf00      	nop
 803d470:	0803d507 	.word	0x0803d507
 803d474:	0803d4e5 	.word	0x0803d4e5
 803d478:	0803d4a5 	.word	0x0803d4a5
 803d47c:	0803d499 	.word	0x0803d499
 803d480:	0803d499 	.word	0x0803d499
 803d484:	0803d499 	.word	0x0803d499
 803d488:	0803d499 	.word	0x0803d499
 803d48c:	0803d499 	.word	0x0803d499
 803d490:	0803d499 	.word	0x0803d499
 803d494:	0803d43f 	.word	0x0803d43f
 803d498:	f06f 0507 	mvn.w	r5, #7
 803d49c:	4628      	mov	r0, r5
 803d49e:	b009      	add	sp, #36	; 0x24
 803d4a0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 803d4a4:	f89b 2017 	ldrb.w	r2, [fp, #23]
 803d4a8:	e9cd 8804 	strd	r8, r8, [sp, #16]
 803d4ac:	2a00      	cmp	r2, #0
 803d4ae:	f040 80d2 	bne.w	803d656 <bmi2_get_sensor_data+0x28a>
 803d4b2:	465b      	mov	r3, fp
 803d4b4:	2208      	movs	r2, #8
 803d4b6:	a904      	add	r1, sp, #16
 803d4b8:	2004      	movs	r0, #4
 803d4ba:	f7ff fae5 	bl	803ca88 <bmi2_get_regs>
 803d4be:	b9e8      	cbnz	r0, 803d4fc <bmi2_get_sensor_data+0x130>
 803d4c0:	f10d 010f 	add.w	r1, sp, #15
 803d4c4:	f1a4 0208 	sub.w	r2, r4, #8
 803d4c8:	f811 0f01 	ldrb.w	r0, [r1, #1]!
 803d4cc:	f802 0f01 	strb.w	r0, [r2, #1]!
 803d4d0:	42a2      	cmp	r2, r4
 803d4d2:	d1f9      	bne.n	803d4c8 <bmi2_get_sensor_data+0xfc>
 803d4d4:	2f01      	cmp	r7, #1
 803d4d6:	d1ba      	bne.n	803d44e <bmi2_get_sensor_data+0x82>
 803d4d8:	4659      	mov	r1, fp
 803d4da:	2001      	movs	r0, #1
 803d4dc:	f7ff fc82 	bl	803cde4 <bmi2_set_adv_power_save>
 803d4e0:	4605      	mov	r5, r0
 803d4e2:	e7a5      	b.n	803d430 <bmi2_get_sensor_data+0x64>
 803d4e4:	465b      	mov	r3, fp
 803d4e6:	2206      	movs	r2, #6
 803d4e8:	a904      	add	r1, sp, #16
 803d4ea:	2012      	movs	r0, #18
 803d4ec:	f8cd 8010 	str.w	r8, [sp, #16]
 803d4f0:	f8ad 9014 	strh.w	r9, [sp, #20]
 803d4f4:	f7ff fac8 	bl	803ca88 <bmi2_get_regs>
 803d4f8:	2800      	cmp	r0, #0
 803d4fa:	d079      	beq.n	803d5f0 <bmi2_get_sensor_data+0x224>
 803d4fc:	4605      	mov	r5, r0
 803d4fe:	4628      	mov	r0, r5
 803d500:	b009      	add	sp, #36	; 0x24
 803d502:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 803d506:	465b      	mov	r3, fp
 803d508:	2206      	movs	r2, #6
 803d50a:	a904      	add	r1, sp, #16
 803d50c:	200c      	movs	r0, #12
 803d50e:	f8cd 8010 	str.w	r8, [sp, #16]
 803d512:	f8ad 9014 	strh.w	r9, [sp, #20]
 803d516:	f7ff fab7 	bl	803ca88 <bmi2_get_regs>
 803d51a:	2800      	cmp	r0, #0
 803d51c:	d1ee      	bne.n	803d4fc <bmi2_get_sensor_data+0x130>
 803d51e:	f89d 2013 	ldrb.w	r2, [sp, #19]
 803d522:	f89d 1012 	ldrb.w	r1, [sp, #18]
 803d526:	f89d e011 	ldrb.w	lr, [sp, #17]
 803d52a:	f89d 0010 	ldrb.w	r0, [sp, #16]
 803d52e:	f89d c015 	ldrb.w	ip, [sp, #21]
 803d532:	ea41 2102 	orr.w	r1, r1, r2, lsl #8
 803d536:	f89d 2014 	ldrb.w	r2, [sp, #20]
 803d53a:	f824 1c05 	strh.w	r1, [r4, #-5]
 803d53e:	ea40 200e 	orr.w	r0, r0, lr, lsl #8
 803d542:	ea42 220c 	orr.w	r2, r2, ip, lsl #8
 803d546:	f824 0c07 	strh.w	r0, [r4, #-7]
 803d54a:	f824 2c03 	strh.w	r2, [r4, #-3]
 803d54e:	4659      	mov	r1, fp
 803d550:	1fe0      	subs	r0, r4, #7
 803d552:	f7ff fa41 	bl	803c9d8 <get_remapped_data>
 803d556:	e778      	b.n	803d44a <bmi2_get_sensor_data+0x7e>
 803d558:	4659      	mov	r1, fp
 803d55a:	2000      	movs	r0, #0
 803d55c:	f7ff fc42 	bl	803cde4 <bmi2_set_adv_power_save>
 803d560:	4605      	mov	r5, r0
 803d562:	e764      	b.n	803d42e <bmi2_get_sensor_data+0x62>
 803d564:	2a29      	cmp	r2, #41	; 0x29
 803d566:	d197      	bne.n	803d498 <bmi2_get_sensor_data+0xcc>
 803d568:	f8bb 2048 	ldrh.w	r2, [fp, #72]	; 0x48
 803d56c:	0690      	lsls	r0, r2, #26
 803d56e:	e9cd 8904 	strd	r8, r9, [sp, #16]
 803d572:	e9cd 9906 	strd	r9, r9, [sp, #24]
 803d576:	d42a      	bmi.n	803d5ce <bmi2_get_sensor_data+0x202>
 803d578:	f89b 1016 	ldrb.w	r1, [fp, #22]
 803d57c:	2900      	cmp	r1, #0
 803d57e:	d08b      	beq.n	803d498 <bmi2_get_sensor_data+0xcc>
 803d580:	f8db 3020 	ldr.w	r3, [fp, #32]
 803d584:	3901      	subs	r1, #1
 803d586:	b2c9      	uxtb	r1, r1
 803d588:	1cda      	adds	r2, r3, #3
 803d58a:	fb1a 2101 	smlabb	r1, sl, r1, r2
 803d58e:	e002      	b.n	803d596 <bmi2_get_sensor_data+0x1ca>
 803d590:	3303      	adds	r3, #3
 803d592:	4299      	cmp	r1, r3
 803d594:	d080      	beq.n	803d498 <bmi2_get_sensor_data+0xcc>
 803d596:	781a      	ldrb	r2, [r3, #0]
 803d598:	2a29      	cmp	r2, #41	; 0x29
 803d59a:	d1f9      	bne.n	803d590 <bmi2_get_sensor_data+0x1c4>
 803d59c:	7858      	ldrb	r0, [r3, #1]
 803d59e:	789b      	ldrb	r3, [r3, #2]
 803d5a0:	9301      	str	r3, [sp, #4]
 803d5a2:	465a      	mov	r2, fp
 803d5a4:	a904      	add	r1, sp, #16
 803d5a6:	f7ff fe7d 	bl	803d2a4 <bmi2_get_feat_config>
 803d5aa:	2800      	cmp	r0, #0
 803d5ac:	d1a6      	bne.n	803d4fc <bmi2_get_sensor_data+0x130>
 803d5ae:	9b01      	ldr	r3, [sp, #4]
 803d5b0:	aa08      	add	r2, sp, #32
 803d5b2:	4413      	add	r3, r2
 803d5b4:	f813 2c10 	ldrb.w	r2, [r3, #-16]
 803d5b8:	0653      	lsls	r3, r2, #25
 803d5ba:	f002 017f 	and.w	r1, r2, #127	; 0x7f
 803d5be:	d542      	bpl.n	803d646 <bmi2_get_sensor_data+0x27a>
 803d5c0:	3980      	subs	r1, #128	; 0x80
 803d5c2:	2f01      	cmp	r7, #1
 803d5c4:	f824 1c07 	strh.w	r1, [r4, #-7]
 803d5c8:	f47f af41 	bne.w	803d44e <bmi2_get_sensor_data+0x82>
 803d5cc:	e784      	b.n	803d4d8 <bmi2_get_sensor_data+0x10c>
 803d5ce:	465b      	mov	r3, fp
 803d5d0:	2201      	movs	r2, #1
 803d5d2:	f10d 010f 	add.w	r1, sp, #15
 803d5d6:	201e      	movs	r0, #30
 803d5d8:	f7ff fa56 	bl	803ca88 <bmi2_get_regs>
 803d5dc:	2800      	cmp	r0, #0
 803d5de:	d18d      	bne.n	803d4fc <bmi2_get_sensor_data+0x130>
 803d5e0:	f89d 200f 	ldrb.w	r2, [sp, #15]
 803d5e4:	0651      	lsls	r1, r2, #25
 803d5e6:	bf48      	it	mi
 803d5e8:	3a80      	submi	r2, #128	; 0x80
 803d5ea:	f824 2c07 	strh.w	r2, [r4, #-7]
 803d5ee:	e72c      	b.n	803d44a <bmi2_get_sensor_data+0x7e>
 803d5f0:	f89d 3011 	ldrb.w	r3, [sp, #17]
 803d5f4:	f89d 2010 	ldrb.w	r2, [sp, #16]
 803d5f8:	f89d e015 	ldrb.w	lr, [sp, #21]
 803d5fc:	f89d 1014 	ldrb.w	r1, [sp, #20]
 803d600:	f89d c013 	ldrb.w	ip, [sp, #19]
 803d604:	f89d 0012 	ldrb.w	r0, [sp, #18]
 803d608:	ea42 2203 	orr.w	r2, r2, r3, lsl #8
 803d60c:	ea41 210e 	orr.w	r1, r1, lr, lsl #8
 803d610:	b212      	sxth	r2, r2
 803d612:	ea40 200c 	orr.w	r0, r0, ip, lsl #8
 803d616:	b209      	sxth	r1, r1
 803d618:	f824 1c03 	strh.w	r1, [r4, #-3]
 803d61c:	f824 2c07 	strh.w	r2, [r4, #-7]
 803d620:	f824 0c05 	strh.w	r0, [r4, #-5]
 803d624:	f8bb 0044 	ldrh.w	r0, [fp, #68]	; 0x44
 803d628:	fb10 f101 	smulbb	r1, r0, r1
 803d62c:	2900      	cmp	r1, #0
 803d62e:	bfb8      	it	lt
 803d630:	f201 11ff 	addwlt	r1, r1, #511	; 0x1ff
 803d634:	4620      	mov	r0, r4
 803d636:	eba2 2161 	sub.w	r1, r2, r1, asr #9
 803d63a:	f820 1d07 	strh.w	r1, [r0, #-7]!
 803d63e:	4659      	mov	r1, fp
 803d640:	f7ff f9ca 	bl	803c9d8 <get_remapped_data>
 803d644:	e701      	b.n	803d44a <bmi2_get_sensor_data+0x7e>
 803d646:	f824 1c07 	strh.w	r1, [r4, #-7]
 803d64a:	e6fe      	b.n	803d44a <bmi2_get_sensor_data+0x7e>
 803d64c:	f04f 35ff 	mov.w	r5, #4294967295
 803d650:	e724      	b.n	803d49c <bmi2_get_sensor_data+0xd0>
 803d652:	460d      	mov	r5, r1
 803d654:	e722      	b.n	803d49c <bmi2_get_sensor_data+0xd0>
 803d656:	f06f 050d 	mvn.w	r5, #13
 803d65a:	e71f      	b.n	803d49c <bmi2_get_sensor_data+0xd0>

0803d65c <bmi2_get_gyro_cross_sense>:
 803d65c:	f8b0 3048 	ldrh.w	r3, [r0, #72]	; 0x48
 803d660:	f013 0302 	ands.w	r3, r3, #2
 803d664:	d017      	beq.n	803d696 <bmi2_get_gyro_cross_sense+0x3a>
 803d666:	b510      	push	{r4, lr}
 803d668:	6b83      	ldr	r3, [r0, #56]	; 0x38
 803d66a:	b084      	sub	sp, #16
 803d66c:	4604      	mov	r4, r0
 803d66e:	b1a3      	cbz	r3, 803d69a <bmi2_get_gyro_cross_sense+0x3e>
 803d670:	6bc3      	ldr	r3, [r0, #60]	; 0x3c
 803d672:	b193      	cbz	r3, 803d69a <bmi2_get_gyro_cross_sense+0x3e>
 803d674:	6c03      	ldr	r3, [r0, #64]	; 0x40
 803d676:	b183      	cbz	r3, 803d69a <bmi2_get_gyro_cross_sense+0x3e>
 803d678:	2329      	movs	r3, #41	; 0x29
 803d67a:	4602      	mov	r2, r0
 803d67c:	2101      	movs	r1, #1
 803d67e:	4668      	mov	r0, sp
 803d680:	f88d 3000 	strb.w	r3, [sp]
 803d684:	f7ff fea2 	bl	803d3cc <bmi2_get_sensor_data>
 803d688:	b918      	cbnz	r0, 803d692 <bmi2_get_gyro_cross_sense+0x36>
 803d68a:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 803d68e:	f8a4 3044 	strh.w	r3, [r4, #68]	; 0x44
 803d692:	b004      	add	sp, #16
 803d694:	bd10      	pop	{r4, pc}
 803d696:	4618      	mov	r0, r3
 803d698:	4770      	bx	lr
 803d69a:	f04f 30ff 	mov.w	r0, #4294967295
 803d69e:	e7f8      	b.n	803d692 <bmi2_get_gyro_cross_sense+0x36>

0803d6a0 <bmi2_set_sensor_config>:
 803d6a0:	2a00      	cmp	r2, #0
 803d6a2:	f000 81a3 	beq.w	803d9ec <bmi2_set_sensor_config+0x34c>
 803d6a6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 803d6aa:	6b93      	ldr	r3, [r2, #56]	; 0x38
 803d6ac:	b089      	sub	sp, #36	; 0x24
 803d6ae:	4615      	mov	r5, r2
 803d6b0:	2b00      	cmp	r3, #0
 803d6b2:	f000 8198 	beq.w	803d9e6 <bmi2_set_sensor_config+0x346>
 803d6b6:	6bd3      	ldr	r3, [r2, #60]	; 0x3c
 803d6b8:	2b00      	cmp	r3, #0
 803d6ba:	f000 8194 	beq.w	803d9e6 <bmi2_set_sensor_config+0x346>
 803d6be:	6c13      	ldr	r3, [r2, #64]	; 0x40
 803d6c0:	2b00      	cmp	r3, #0
 803d6c2:	f000 8190 	beq.w	803d9e6 <bmi2_set_sensor_config+0x346>
 803d6c6:	2800      	cmp	r0, #0
 803d6c8:	f000 818d 	beq.w	803d9e6 <bmi2_set_sensor_config+0x346>
 803d6cc:	f892 7047 	ldrb.w	r7, [r2, #71]	; 0x47
 803d6d0:	2900      	cmp	r1, #0
 803d6d2:	f000 808f 	beq.w	803d7f4 <bmi2_set_sensor_config+0x154>
 803d6d6:	3901      	subs	r1, #1
 803d6d8:	b2c9      	uxtb	r1, r1
 803d6da:	f100 0336 	add.w	r3, r0, #54	; 0x36
 803d6de:	2634      	movs	r6, #52	; 0x34
 803d6e0:	1c84      	adds	r4, r0, #2
 803d6e2:	fb16 3601 	smlabb	r6, r6, r1, r3
 803d6e6:	f04f 0900 	mov.w	r9, #0
 803d6ea:	f04f 0a03 	mov.w	sl, #3
 803d6ee:	2f01      	cmp	r7, #1
 803d6f0:	f000 8152 	beq.w	803d998 <bmi2_set_sensor_config+0x2f8>
 803d6f4:	f814 3c02 	ldrb.w	r3, [r4, #-2]
 803d6f8:	2b09      	cmp	r3, #9
 803d6fa:	d80b      	bhi.n	803d714 <bmi2_set_sensor_config+0x74>
 803d6fc:	e8df f013 	tbh	[pc, r3, lsl #1]
 803d700:	01400146 	.word	0x01400146
 803d704:	000a0082 	.word	0x000a0082
 803d708:	000a000a 	.word	0x000a000a
 803d70c:	000a000a 	.word	0x000a000a
 803d710:	0010000a 	.word	0x0010000a
 803d714:	f06f 0207 	mvn.w	r2, #7
 803d718:	4610      	mov	r0, r2
 803d71a:	b009      	add	sp, #36	; 0x24
 803d71c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 803d720:	7d69      	ldrb	r1, [r5, #21]
 803d722:	e9cd 9904 	strd	r9, r9, [sp, #16]
 803d726:	e9cd 9906 	strd	r9, r9, [sp, #24]
 803d72a:	2900      	cmp	r1, #0
 803d72c:	d0f2      	beq.n	803d714 <bmi2_set_sensor_config+0x74>
 803d72e:	69eb      	ldr	r3, [r5, #28]
 803d730:	3901      	subs	r1, #1
 803d732:	b2c9      	uxtb	r1, r1
 803d734:	1cda      	adds	r2, r3, #3
 803d736:	fb1a 2101 	smlabb	r1, sl, r1, r2
 803d73a:	e002      	b.n	803d742 <bmi2_set_sensor_config+0xa2>
 803d73c:	3303      	adds	r3, #3
 803d73e:	428b      	cmp	r3, r1
 803d740:	d0e8      	beq.n	803d714 <bmi2_set_sensor_config+0x74>
 803d742:	781a      	ldrb	r2, [r3, #0]
 803d744:	2a09      	cmp	r2, #9
 803d746:	d1f9      	bne.n	803d73c <bmi2_set_sensor_config+0x9c>
 803d748:	f10d 0810 	add.w	r8, sp, #16
 803d74c:	462a      	mov	r2, r5
 803d74e:	7858      	ldrb	r0, [r3, #1]
 803d750:	f893 b002 	ldrb.w	fp, [r3, #2]
 803d754:	4641      	mov	r1, r8
 803d756:	f7ff fda5 	bl	803d2a4 <bmi2_get_feat_config>
 803d75a:	4602      	mov	r2, r0
 803d75c:	2800      	cmp	r0, #0
 803d75e:	d1db      	bne.n	803d718 <bmi2_set_sensor_config+0x78>
 803d760:	ea4f 0c5b 	mov.w	ip, fp, lsr #1
 803d764:	8823      	ldrh	r3, [r4, #0]
 803d766:	f838 101c 	ldrh.w	r1, [r8, ip, lsl #1]
 803d76a:	8862      	ldrh	r2, [r4, #2]
 803d76c:	88a0      	ldrh	r0, [r4, #4]
 803d76e:	f421 61ff 	bic.w	r1, r1, #2040	; 0x7f8
 803d772:	f3c3 030a 	ubfx	r3, r3, #0, #11
 803d776:	f021 0107 	bic.w	r1, r1, #7
 803d77a:	4319      	orrs	r1, r3
 803d77c:	4663      	mov	r3, ip
 803d77e:	f828 101c 	strh.w	r1, [r8, ip, lsl #1]
 803d782:	1c59      	adds	r1, r3, #1
 803d784:	f3c2 0c0a 	ubfx	ip, r2, #0, #11
 803d788:	f838 2011 	ldrh.w	r2, [r8, r1, lsl #1]
 803d78c:	f422 62ff 	bic.w	r2, r2, #2040	; 0x7f8
 803d790:	f022 0207 	bic.w	r2, r2, #7
 803d794:	ea42 020c 	orr.w	r2, r2, ip
 803d798:	f828 2011 	strh.w	r2, [r8, r1, lsl #1]
 803d79c:	1c99      	adds	r1, r3, #2
 803d79e:	3303      	adds	r3, #3
 803d7a0:	f838 2011 	ldrh.w	r2, [r8, r1, lsl #1]
 803d7a4:	f422 62ff 	bic.w	r2, r2, #2040	; 0x7f8
 803d7a8:	f3c0 000a 	ubfx	r0, r0, #0, #11
 803d7ac:	f022 0207 	bic.w	r2, r2, #7
 803d7b0:	ebcb 0343 	rsb	r3, fp, r3, lsl #1
 803d7b4:	4302      	orrs	r2, r0
 803d7b6:	f013 03ff 	ands.w	r3, r3, #255	; 0xff
 803d7ba:	f828 2011 	strh.w	r2, [r8, r1, lsl #1]
 803d7be:	d00c      	beq.n	803d7da <bmi2_set_sensor_config+0x13a>
 803d7c0:	f10d 0211 	add.w	r2, sp, #17
 803d7c4:	445a      	add	r2, fp
 803d7c6:	3b01      	subs	r3, #1
 803d7c8:	fa52 f383 	uxtab	r3, r2, r3
 803d7cc:	44c3      	add	fp, r8
 803d7ce:	f89b 2000 	ldrb.w	r2, [fp]
 803d7d2:	f80b 2b01 	strb.w	r2, [fp], #1
 803d7d6:	459b      	cmp	fp, r3
 803d7d8:	d1f9      	bne.n	803d7ce <bmi2_set_sensor_config+0x12e>
 803d7da:	2210      	movs	r2, #16
 803d7dc:	4641      	mov	r1, r8
 803d7de:	462b      	mov	r3, r5
 803d7e0:	2030      	movs	r0, #48	; 0x30
 803d7e2:	f7ff f9bd 	bl	803cb60 <bmi2_set_regs>
 803d7e6:	4602      	mov	r2, r0
 803d7e8:	2a00      	cmp	r2, #0
 803d7ea:	d195      	bne.n	803d718 <bmi2_set_sensor_config+0x78>
 803d7ec:	3434      	adds	r4, #52	; 0x34
 803d7ee:	42a6      	cmp	r6, r4
 803d7f0:	f47f af7d 	bne.w	803d6ee <bmi2_set_sensor_config+0x4e>
 803d7f4:	2f01      	cmp	r7, #1
 803d7f6:	f000 80db 	beq.w	803d9b0 <bmi2_set_sensor_config+0x310>
 803d7fa:	2200      	movs	r2, #0
 803d7fc:	4610      	mov	r0, r2
 803d7fe:	b009      	add	sp, #36	; 0x24
 803d800:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 803d804:	7963      	ldrb	r3, [r4, #5]
 803d806:	b933      	cbnz	r3, 803d816 <bmi2_set_sensor_config+0x176>
 803d808:	2301      	movs	r3, #1
 803d80a:	7163      	strb	r3, [r4, #5]
 803d80c:	7a2b      	ldrb	r3, [r5, #8]
 803d80e:	f043 0301 	orr.w	r3, r3, #1
 803d812:	722b      	strb	r3, [r5, #8]
 803d814:	7963      	ldrb	r3, [r4, #5]
 803d816:	2b0b      	cmp	r3, #11
 803d818:	d905      	bls.n	803d826 <bmi2_set_sensor_config+0x186>
 803d81a:	230b      	movs	r3, #11
 803d81c:	7163      	strb	r3, [r4, #5]
 803d81e:	7a2b      	ldrb	r3, [r5, #8]
 803d820:	f043 0302 	orr.w	r3, r3, #2
 803d824:	722b      	strb	r3, [r5, #8]
 803d826:	f10d 0810 	add.w	r8, sp, #16
 803d82a:	2201      	movs	r2, #1
 803d82c:	4641      	mov	r1, r8
 803d82e:	462b      	mov	r3, r5
 803d830:	206b      	movs	r0, #107	; 0x6b
 803d832:	f7ff f929 	bl	803ca88 <bmi2_get_regs>
 803d836:	4602      	mov	r2, r0
 803d838:	2800      	cmp	r0, #0
 803d83a:	f47f af6d 	bne.w	803d718 <bmi2_set_sensor_config+0x78>
 803d83e:	f894 c000 	ldrb.w	ip, [r4]
 803d842:	f89d 3010 	ldrb.w	r3, [sp, #16]
 803d846:	ea4f 1c4c 	mov.w	ip, ip, lsl #5
 803d84a:	f023 0320 	bic.w	r3, r3, #32
 803d84e:	f00c 0c20 	and.w	ip, ip, #32
 803d852:	ea4c 0c03 	orr.w	ip, ip, r3
 803d856:	2201      	movs	r2, #1
 803d858:	462b      	mov	r3, r5
 803d85a:	4641      	mov	r1, r8
 803d85c:	206b      	movs	r0, #107	; 0x6b
 803d85e:	f88d c010 	strb.w	ip, [sp, #16]
 803d862:	f7ff f97d 	bl	803cb60 <bmi2_set_regs>
 803d866:	4684      	mov	ip, r0
 803d868:	4602      	mov	r2, r0
 803d86a:	2800      	cmp	r0, #0
 803d86c:	f47f af54 	bne.w	803d718 <bmi2_set_sensor_config+0x78>
 803d870:	2202      	movs	r2, #2
 803d872:	462b      	mov	r3, r5
 803d874:	4641      	mov	r1, r8
 803d876:	204b      	movs	r0, #75	; 0x4b
 803d878:	f8ad c010 	strh.w	ip, [sp, #16]
 803d87c:	f88d c00f 	strb.w	ip, [sp, #15]
 803d880:	f7ff f902 	bl	803ca88 <bmi2_get_regs>
 803d884:	4602      	mov	r2, r0
 803d886:	2800      	cmp	r0, #0
 803d888:	f47f af46 	bne.w	803d718 <bmi2_set_sensor_config+0x78>
 803d88c:	f89d 3011 	ldrb.w	r3, [sp, #17]
 803d890:	7861      	ldrb	r1, [r4, #1]
 803d892:	78a2      	ldrb	r2, [r4, #2]
 803d894:	7920      	ldrb	r0, [r4, #4]
 803d896:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 803d89a:	ea43 13c1 	orr.w	r3, r3, r1, lsl #7
 803d89e:	0192      	lsls	r2, r2, #6
 803d8a0:	78e1      	ldrb	r1, [r4, #3]
 803d8a2:	f002 0240 	and.w	r2, r2, #64	; 0x40
 803d8a6:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 803d8aa:	4313      	orrs	r3, r2
 803d8ac:	0089      	lsls	r1, r1, #2
 803d8ae:	f001 010c 	and.w	r1, r1, #12
 803d8b2:	f023 030c 	bic.w	r3, r3, #12
 803d8b6:	430b      	orrs	r3, r1
 803d8b8:	f89d 2010 	ldrb.w	r2, [sp, #16]
 803d8bc:	f000 0103 	and.w	r1, r0, #3
 803d8c0:	f023 0303 	bic.w	r3, r3, #3
 803d8c4:	430b      	orrs	r3, r1
 803d8c6:	79e1      	ldrb	r1, [r4, #7]
 803d8c8:	f88d 3011 	strb.w	r3, [sp, #17]
 803d8cc:	f002 0201 	and.w	r2, r2, #1
 803d8d0:	ea42 0341 	orr.w	r3, r2, r1, lsl #1
 803d8d4:	f88d 3010 	strb.w	r3, [sp, #16]
 803d8d8:	f04f 0b15 	mov.w	fp, #21
 803d8dc:	e007      	b.n	803d8ee <bmi2_set_sensor_config+0x24e>
 803d8de:	6c2b      	ldr	r3, [r5, #64]	; 0x40
 803d8e0:	6869      	ldr	r1, [r5, #4]
 803d8e2:	f10b 3bff 	add.w	fp, fp, #4294967295
 803d8e6:	4798      	blx	r3
 803d8e8:	f01b 0bff 	ands.w	fp, fp, #255	; 0xff
 803d8ec:	d066      	beq.n	803d9bc <bmi2_set_sensor_config+0x31c>
 803d8ee:	4629      	mov	r1, r5
 803d8f0:	f10d 000f 	add.w	r0, sp, #15
 803d8f4:	f7ff fb2c 	bl	803cf50 <bmi2_get_status>
 803d8f8:	f89d 200f 	ldrb.w	r2, [sp, #15]
 803d8fc:	4603      	mov	r3, r0
 803d8fe:	f002 0204 	and.w	r2, r2, #4
 803d902:	4313      	orrs	r3, r2
 803d904:	f013 0fff 	tst.w	r3, #255	; 0xff
 803d908:	f242 7010 	movw	r0, #10000	; 0x2710
 803d90c:	d1e7      	bne.n	803d8de <bmi2_set_sensor_config+0x23e>
 803d90e:	2202      	movs	r2, #2
 803d910:	462b      	mov	r3, r5
 803d912:	4641      	mov	r1, r8
 803d914:	204b      	movs	r0, #75	; 0x4b
 803d916:	f7ff f923 	bl	803cb60 <bmi2_set_regs>
 803d91a:	6c2b      	ldr	r3, [r5, #64]	; 0x40
 803d91c:	9001      	str	r0, [sp, #4]
 803d91e:	6869      	ldr	r1, [r5, #4]
 803d920:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 803d924:	4798      	blx	r3
 803d926:	9a01      	ldr	r2, [sp, #4]
 803d928:	2a00      	cmp	r2, #0
 803d92a:	f47f aef5 	bne.w	803d718 <bmi2_set_sensor_config+0x78>
 803d92e:	7863      	ldrb	r3, [r4, #1]
 803d930:	2b00      	cmp	r3, #0
 803d932:	d046      	beq.n	803d9c2 <bmi2_set_sensor_config+0x322>
 803d934:	2301      	movs	r3, #1
 803d936:	75eb      	strb	r3, [r5, #23]
 803d938:	78e3      	ldrb	r3, [r4, #3]
 803d93a:	762b      	strb	r3, [r5, #24]
 803d93c:	2201      	movs	r2, #1
 803d93e:	462b      	mov	r3, r5
 803d940:	4641      	mov	r1, r8
 803d942:	2044      	movs	r0, #68	; 0x44
 803d944:	f7ff f8a0 	bl	803ca88 <bmi2_get_regs>
 803d948:	4602      	mov	r2, r0
 803d94a:	2800      	cmp	r0, #0
 803d94c:	f47f aee4 	bne.w	803d718 <bmi2_set_sensor_config+0x78>
 803d950:	f894 c005 	ldrb.w	ip, [r4, #5]
 803d954:	79a3      	ldrb	r3, [r4, #6]
 803d956:	f00c 0c0f 	and.w	ip, ip, #15
 803d95a:	ea4c 1c03 	orr.w	ip, ip, r3, lsl #4
 803d95e:	4641      	mov	r1, r8
 803d960:	462b      	mov	r3, r5
 803d962:	2201      	movs	r2, #1
 803d964:	2044      	movs	r0, #68	; 0x44
 803d966:	f88d c010 	strb.w	ip, [sp, #16]
 803d96a:	f7ff f8f9 	bl	803cb60 <bmi2_set_regs>
 803d96e:	6c2b      	ldr	r3, [r5, #64]	; 0x40
 803d970:	6869      	ldr	r1, [r5, #4]
 803d972:	4602      	mov	r2, r0
 803d974:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 803d978:	9201      	str	r2, [sp, #4]
 803d97a:	4798      	blx	r3
 803d97c:	9a01      	ldr	r2, [sp, #4]
 803d97e:	e733      	b.n	803d7e8 <bmi2_set_sensor_config+0x148>
 803d980:	4629      	mov	r1, r5
 803d982:	4620      	mov	r0, r4
 803d984:	f7ff f9c2 	bl	803cd0c <set_gyro_config>
 803d988:	4602      	mov	r2, r0
 803d98a:	e72d      	b.n	803d7e8 <bmi2_set_sensor_config+0x148>
 803d98c:	4629      	mov	r1, r5
 803d98e:	4620      	mov	r0, r4
 803d990:	f7ff f95e 	bl	803cc50 <set_accel_config>
 803d994:	4602      	mov	r2, r0
 803d996:	e727      	b.n	803d7e8 <bmi2_set_sensor_config+0x148>
 803d998:	4629      	mov	r1, r5
 803d99a:	2000      	movs	r0, #0
 803d99c:	f7ff fa22 	bl	803cde4 <bmi2_set_adv_power_save>
 803d9a0:	4602      	mov	r2, r0
 803d9a2:	2800      	cmp	r0, #0
 803d9a4:	f43f aea6 	beq.w	803d6f4 <bmi2_set_sensor_config+0x54>
 803d9a8:	4610      	mov	r0, r2
 803d9aa:	b009      	add	sp, #36	; 0x24
 803d9ac:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 803d9b0:	4629      	mov	r1, r5
 803d9b2:	4638      	mov	r0, r7
 803d9b4:	f7ff fa16 	bl	803cde4 <bmi2_set_adv_power_save>
 803d9b8:	4602      	mov	r2, r0
 803d9ba:	e6ad      	b.n	803d718 <bmi2_set_sensor_config+0x78>
 803d9bc:	f06f 020e 	mvn.w	r2, #14
 803d9c0:	e6aa      	b.n	803d718 <bmi2_set_sensor_config+0x78>
 803d9c2:	75ea      	strb	r2, [r5, #23]
 803d9c4:	462b      	mov	r3, r5
 803d9c6:	2201      	movs	r2, #1
 803d9c8:	f104 0108 	add.w	r1, r4, #8
 803d9cc:	204d      	movs	r0, #77	; 0x4d
 803d9ce:	f7ff f8c7 	bl	803cb60 <bmi2_set_regs>
 803d9d2:	6c2b      	ldr	r3, [r5, #64]	; 0x40
 803d9d4:	9001      	str	r0, [sp, #4]
 803d9d6:	6869      	ldr	r1, [r5, #4]
 803d9d8:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 803d9dc:	4798      	blx	r3
 803d9de:	9a01      	ldr	r2, [sp, #4]
 803d9e0:	2a00      	cmp	r2, #0
 803d9e2:	d0ab      	beq.n	803d93c <bmi2_set_sensor_config+0x29c>
 803d9e4:	e698      	b.n	803d718 <bmi2_set_sensor_config+0x78>
 803d9e6:	f04f 32ff 	mov.w	r2, #4294967295
 803d9ea:	e695      	b.n	803d718 <bmi2_set_sensor_config+0x78>
 803d9ec:	f04f 32ff 	mov.w	r2, #4294967295
 803d9f0:	4610      	mov	r0, r2
 803d9f2:	4770      	bx	lr

0803d9f4 <bmi2_extract_input_feat_config>:
 803d9f4:	b430      	push	{r4, r5}
 803d9f6:	7d54      	ldrb	r4, [r2, #21]
 803d9f8:	b194      	cbz	r4, 803da20 <bmi2_extract_input_feat_config+0x2c>
 803d9fa:	69d3      	ldr	r3, [r2, #28]
 803d9fc:	3c01      	subs	r4, #1
 803d9fe:	b2e2      	uxtb	r2, r4
 803da00:	1cdd      	adds	r5, r3, #3
 803da02:	2403      	movs	r4, #3
 803da04:	fb14 5402 	smlabb	r4, r4, r2, r5
 803da08:	e002      	b.n	803da10 <bmi2_extract_input_feat_config+0x1c>
 803da0a:	3303      	adds	r3, #3
 803da0c:	42a3      	cmp	r3, r4
 803da0e:	d00a      	beq.n	803da26 <bmi2_extract_input_feat_config+0x32>
 803da10:	781a      	ldrb	r2, [r3, #0]
 803da12:	428a      	cmp	r2, r1
 803da14:	d1f9      	bne.n	803da0a <bmi2_extract_input_feat_config+0x16>
 803da16:	881a      	ldrh	r2, [r3, #0]
 803da18:	789b      	ldrb	r3, [r3, #2]
 803da1a:	7083      	strb	r3, [r0, #2]
 803da1c:	8002      	strh	r2, [r0, #0]
 803da1e:	2401      	movs	r4, #1
 803da20:	4620      	mov	r0, r4
 803da22:	bc30      	pop	{r4, r5}
 803da24:	4770      	bx	lr
 803da26:	2400      	movs	r4, #0
 803da28:	4620      	mov	r0, r4
 803da2a:	bc30      	pop	{r4, r5}
 803da2c:	4770      	bx	lr
 803da2e:	bf00      	nop

0803da30 <select_sensor>:
 803da30:	2900      	cmp	r1, #0
 803da32:	d06a      	beq.n	803db0a <select_sensor+0xda>
 803da34:	3901      	subs	r1, #1
 803da36:	b410      	push	{r4}
 803da38:	1e43      	subs	r3, r0, #1
 803da3a:	fa50 f481 	uxtab	r4, r0, r1
 803da3e:	2000      	movs	r0, #0
 803da40:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 803da44:	2922      	cmp	r1, #34	; 0x22
 803da46:	d813      	bhi.n	803da70 <select_sensor+0x40>
 803da48:	e8df f001 	tbb	[pc, r1]
 803da4c:	4b50555a 	.word	0x4b50555a
 803da50:	373c4146 	.word	0x373c4146
 803da54:	12122d32 	.word	0x12122d32
 803da58:	12121212 	.word	0x12121212
 803da5c:	28121212 	.word	0x28121212
 803da60:	12121223 	.word	0x12121223
 803da64:	12121212 	.word	0x12121212
 803da68:	12121212 	.word	0x12121212
 803da6c:	121e      	.short	0x121e
 803da6e:	19          	.byte	0x19
 803da6f:	00          	.byte	0x00
 803da70:	f06f 0007 	mvn.w	r0, #7
 803da74:	42a3      	cmp	r3, r4
 803da76:	d1e3      	bne.n	803da40 <select_sensor+0x10>
 803da78:	f85d 4b04 	ldr.w	r4, [sp], #4
 803da7c:	4770      	bx	lr
 803da7e:	6851      	ldr	r1, [r2, #4]
 803da80:	f041 0104 	orr.w	r1, r1, #4
 803da84:	6051      	str	r1, [r2, #4]
 803da86:	e7f5      	b.n	803da74 <select_sensor+0x44>
 803da88:	6851      	ldr	r1, [r2, #4]
 803da8a:	f041 0101 	orr.w	r1, r1, #1
 803da8e:	6051      	str	r1, [r2, #4]
 803da90:	e7f0      	b.n	803da74 <select_sensor+0x44>
 803da92:	6811      	ldr	r1, [r2, #0]
 803da94:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 803da98:	6011      	str	r1, [r2, #0]
 803da9a:	e7eb      	b.n	803da74 <select_sensor+0x44>
 803da9c:	6811      	ldr	r1, [r2, #0]
 803da9e:	f441 2100 	orr.w	r1, r1, #524288	; 0x80000
 803daa2:	6011      	str	r1, [r2, #0]
 803daa4:	e7e6      	b.n	803da74 <select_sensor+0x44>
 803daa6:	6811      	ldr	r1, [r2, #0]
 803daa8:	f441 7100 	orr.w	r1, r1, #512	; 0x200
 803daac:	6011      	str	r1, [r2, #0]
 803daae:	e7e1      	b.n	803da74 <select_sensor+0x44>
 803dab0:	6811      	ldr	r1, [r2, #0]
 803dab2:	f441 7180 	orr.w	r1, r1, #256	; 0x100
 803dab6:	6011      	str	r1, [r2, #0]
 803dab8:	e7dc      	b.n	803da74 <select_sensor+0x44>
 803daba:	6811      	ldr	r1, [r2, #0]
 803dabc:	f041 0180 	orr.w	r1, r1, #128	; 0x80
 803dac0:	6011      	str	r1, [r2, #0]
 803dac2:	e7d7      	b.n	803da74 <select_sensor+0x44>
 803dac4:	6811      	ldr	r1, [r2, #0]
 803dac6:	f041 0140 	orr.w	r1, r1, #64	; 0x40
 803daca:	6011      	str	r1, [r2, #0]
 803dacc:	e7d2      	b.n	803da74 <select_sensor+0x44>
 803dace:	6811      	ldr	r1, [r2, #0]
 803dad0:	f041 0120 	orr.w	r1, r1, #32
 803dad4:	6011      	str	r1, [r2, #0]
 803dad6:	e7cd      	b.n	803da74 <select_sensor+0x44>
 803dad8:	6811      	ldr	r1, [r2, #0]
 803dada:	f041 0110 	orr.w	r1, r1, #16
 803dade:	6011      	str	r1, [r2, #0]
 803dae0:	e7c8      	b.n	803da74 <select_sensor+0x44>
 803dae2:	6811      	ldr	r1, [r2, #0]
 803dae4:	f041 0108 	orr.w	r1, r1, #8
 803dae8:	6011      	str	r1, [r2, #0]
 803daea:	e7c3      	b.n	803da74 <select_sensor+0x44>
 803daec:	6811      	ldr	r1, [r2, #0]
 803daee:	f041 0104 	orr.w	r1, r1, #4
 803daf2:	6011      	str	r1, [r2, #0]
 803daf4:	e7be      	b.n	803da74 <select_sensor+0x44>
 803daf6:	6811      	ldr	r1, [r2, #0]
 803daf8:	f041 0102 	orr.w	r1, r1, #2
 803dafc:	6011      	str	r1, [r2, #0]
 803dafe:	e7b9      	b.n	803da74 <select_sensor+0x44>
 803db00:	6811      	ldr	r1, [r2, #0]
 803db02:	f041 0101 	orr.w	r1, r1, #1
 803db06:	6011      	str	r1, [r2, #0]
 803db08:	e7b4      	b.n	803da74 <select_sensor+0x44>
 803db0a:	4608      	mov	r0, r1
 803db0c:	4770      	bx	lr
 803db0e:	bf00      	nop

0803db10 <set_sig_motion>:
 803db10:	b570      	push	{r4, r5, r6, lr}
 803db12:	b086      	sub	sp, #24
 803db14:	2400      	movs	r4, #0
 803db16:	460d      	mov	r5, r1
 803db18:	460a      	mov	r2, r1
 803db1a:	4606      	mov	r6, r0
 803db1c:	2103      	movs	r1, #3
 803db1e:	a801      	add	r0, sp, #4
 803db20:	e9cd 4402 	strd	r4, r4, [sp, #8]
 803db24:	9404      	str	r4, [sp, #16]
 803db26:	9405      	str	r4, [sp, #20]
 803db28:	f8ad 4004 	strh.w	r4, [sp, #4]
 803db2c:	f88d 4006 	strb.w	r4, [sp, #6]
 803db30:	f7ff ff60 	bl	803d9f4 <bmi2_extract_input_feat_config>
 803db34:	b1e8      	cbz	r0, 803db72 <set_sig_motion+0x62>
 803db36:	f89d 0005 	ldrb.w	r0, [sp, #5]
 803db3a:	a902      	add	r1, sp, #8
 803db3c:	462a      	mov	r2, r5
 803db3e:	f7ff fbb1 	bl	803d2a4 <bmi2_get_feat_config>
 803db42:	b108      	cbz	r0, 803db48 <set_sig_motion+0x38>
 803db44:	b006      	add	sp, #24
 803db46:	bd70      	pop	{r4, r5, r6, pc}
 803db48:	f89d 4006 	ldrb.w	r4, [sp, #6]
 803db4c:	ab06      	add	r3, sp, #24
 803db4e:	340a      	adds	r4, #10
 803db50:	fa53 f484 	uxtab	r4, r3, r4
 803db54:	a902      	add	r1, sp, #8
 803db56:	f814 0c10 	ldrb.w	r0, [r4, #-16]
 803db5a:	f020 0001 	bic.w	r0, r0, #1
 803db5e:	4306      	orrs	r6, r0
 803db60:	462b      	mov	r3, r5
 803db62:	2210      	movs	r2, #16
 803db64:	2030      	movs	r0, #48	; 0x30
 803db66:	f804 6c10 	strb.w	r6, [r4, #-16]
 803db6a:	f7fe fff9 	bl	803cb60 <bmi2_set_regs>
 803db6e:	b006      	add	sp, #24
 803db70:	bd70      	pop	{r4, r5, r6, pc}
 803db72:	f06f 0007 	mvn.w	r0, #7
 803db76:	e7e5      	b.n	803db44 <set_sig_motion+0x34>

0803db78 <set_any_motion>:
 803db78:	b570      	push	{r4, r5, r6, lr}
 803db7a:	460a      	mov	r2, r1
 803db7c:	b086      	sub	sp, #24
 803db7e:	460d      	mov	r5, r1
 803db80:	2104      	movs	r1, #4
 803db82:	2400      	movs	r4, #0
 803db84:	4606      	mov	r6, r0
 803db86:	eb0d 0001 	add.w	r0, sp, r1
 803db8a:	e9cd 4402 	strd	r4, r4, [sp, #8]
 803db8e:	9404      	str	r4, [sp, #16]
 803db90:	9405      	str	r4, [sp, #20]
 803db92:	f8ad 4004 	strh.w	r4, [sp, #4]
 803db96:	f88d 4006 	strb.w	r4, [sp, #6]
 803db9a:	f7ff ff2b 	bl	803d9f4 <bmi2_extract_input_feat_config>
 803db9e:	b1f0      	cbz	r0, 803dbde <set_any_motion+0x66>
 803dba0:	f89d 0005 	ldrb.w	r0, [sp, #5]
 803dba4:	a902      	add	r1, sp, #8
 803dba6:	462a      	mov	r2, r5
 803dba8:	f7ff fb7c 	bl	803d2a4 <bmi2_get_feat_config>
 803dbac:	b108      	cbz	r0, 803dbb2 <set_any_motion+0x3a>
 803dbae:	b006      	add	sp, #24
 803dbb0:	bd70      	pop	{r4, r5, r6, pc}
 803dbb2:	f89d 4006 	ldrb.w	r4, [sp, #6]
 803dbb6:	ab06      	add	r3, sp, #24
 803dbb8:	3403      	adds	r4, #3
 803dbba:	fa53 f484 	uxtab	r4, r3, r4
 803dbbe:	a902      	add	r1, sp, #8
 803dbc0:	f814 0c10 	ldrb.w	r0, [r4, #-16]
 803dbc4:	f000 007f 	and.w	r0, r0, #127	; 0x7f
 803dbc8:	ea40 16c6 	orr.w	r6, r0, r6, lsl #7
 803dbcc:	462b      	mov	r3, r5
 803dbce:	2210      	movs	r2, #16
 803dbd0:	2030      	movs	r0, #48	; 0x30
 803dbd2:	f804 6c10 	strb.w	r6, [r4, #-16]
 803dbd6:	f7fe ffc3 	bl	803cb60 <bmi2_set_regs>
 803dbda:	b006      	add	sp, #24
 803dbdc:	bd70      	pop	{r4, r5, r6, pc}
 803dbde:	f06f 0007 	mvn.w	r0, #7
 803dbe2:	e7e4      	b.n	803dbae <set_any_motion+0x36>

0803dbe4 <set_no_motion>:
 803dbe4:	b570      	push	{r4, r5, r6, lr}
 803dbe6:	b086      	sub	sp, #24
 803dbe8:	2400      	movs	r4, #0
 803dbea:	460d      	mov	r5, r1
 803dbec:	460a      	mov	r2, r1
 803dbee:	4606      	mov	r6, r0
 803dbf0:	2105      	movs	r1, #5
 803dbf2:	a801      	add	r0, sp, #4
 803dbf4:	e9cd 4402 	strd	r4, r4, [sp, #8]
 803dbf8:	9404      	str	r4, [sp, #16]
 803dbfa:	9405      	str	r4, [sp, #20]
 803dbfc:	f8ad 4004 	strh.w	r4, [sp, #4]
 803dc00:	f88d 4006 	strb.w	r4, [sp, #6]
 803dc04:	f7ff fef6 	bl	803d9f4 <bmi2_extract_input_feat_config>
 803dc08:	b1f0      	cbz	r0, 803dc48 <set_no_motion+0x64>
 803dc0a:	f89d 0005 	ldrb.w	r0, [sp, #5]
 803dc0e:	a902      	add	r1, sp, #8
 803dc10:	462a      	mov	r2, r5
 803dc12:	f7ff fb47 	bl	803d2a4 <bmi2_get_feat_config>
 803dc16:	b108      	cbz	r0, 803dc1c <set_no_motion+0x38>
 803dc18:	b006      	add	sp, #24
 803dc1a:	bd70      	pop	{r4, r5, r6, pc}
 803dc1c:	f89d 4006 	ldrb.w	r4, [sp, #6]
 803dc20:	ab06      	add	r3, sp, #24
 803dc22:	3403      	adds	r4, #3
 803dc24:	fa53 f484 	uxtab	r4, r3, r4
 803dc28:	a902      	add	r1, sp, #8
 803dc2a:	f814 0c10 	ldrb.w	r0, [r4, #-16]
 803dc2e:	f000 007f 	and.w	r0, r0, #127	; 0x7f
 803dc32:	ea40 16c6 	orr.w	r6, r0, r6, lsl #7
 803dc36:	462b      	mov	r3, r5
 803dc38:	2210      	movs	r2, #16
 803dc3a:	2030      	movs	r0, #48	; 0x30
 803dc3c:	f804 6c10 	strb.w	r6, [r4, #-16]
 803dc40:	f7fe ff8e 	bl	803cb60 <bmi2_set_regs>
 803dc44:	b006      	add	sp, #24
 803dc46:	bd70      	pop	{r4, r5, r6, pc}
 803dc48:	f06f 0007 	mvn.w	r0, #7
 803dc4c:	e7e4      	b.n	803dc18 <set_no_motion+0x34>
 803dc4e:	bf00      	nop

0803dc50 <set_step_detector>:
 803dc50:	b570      	push	{r4, r5, r6, lr}
 803dc52:	b086      	sub	sp, #24
 803dc54:	2400      	movs	r4, #0
 803dc56:	460d      	mov	r5, r1
 803dc58:	460a      	mov	r2, r1
 803dc5a:	4606      	mov	r6, r0
 803dc5c:	2106      	movs	r1, #6
 803dc5e:	a801      	add	r0, sp, #4
 803dc60:	e9cd 4402 	strd	r4, r4, [sp, #8]
 803dc64:	9404      	str	r4, [sp, #16]
 803dc66:	9405      	str	r4, [sp, #20]
 803dc68:	f8ad 4004 	strh.w	r4, [sp, #4]
 803dc6c:	f88d 4006 	strb.w	r4, [sp, #6]
 803dc70:	f7ff fec0 	bl	803d9f4 <bmi2_extract_input_feat_config>
 803dc74:	b1f0      	cbz	r0, 803dcb4 <set_step_detector+0x64>
 803dc76:	f89d 0005 	ldrb.w	r0, [sp, #5]
 803dc7a:	a902      	add	r1, sp, #8
 803dc7c:	462a      	mov	r2, r5
 803dc7e:	f7ff fb11 	bl	803d2a4 <bmi2_get_feat_config>
 803dc82:	b108      	cbz	r0, 803dc88 <set_step_detector+0x38>
 803dc84:	b006      	add	sp, #24
 803dc86:	bd70      	pop	{r4, r5, r6, pc}
 803dc88:	f89d 4006 	ldrb.w	r4, [sp, #6]
 803dc8c:	ab06      	add	r3, sp, #24
 803dc8e:	3401      	adds	r4, #1
 803dc90:	fa53 f484 	uxtab	r4, r3, r4
 803dc94:	a902      	add	r1, sp, #8
 803dc96:	f814 0c10 	ldrb.w	r0, [r4, #-16]
 803dc9a:	f020 0008 	bic.w	r0, r0, #8
 803dc9e:	ea40 06c6 	orr.w	r6, r0, r6, lsl #3
 803dca2:	462b      	mov	r3, r5
 803dca4:	2210      	movs	r2, #16
 803dca6:	2030      	movs	r0, #48	; 0x30
 803dca8:	f804 6c10 	strb.w	r6, [r4, #-16]
 803dcac:	f7fe ff58 	bl	803cb60 <bmi2_set_regs>
 803dcb0:	b006      	add	sp, #24
 803dcb2:	bd70      	pop	{r4, r5, r6, pc}
 803dcb4:	f06f 0007 	mvn.w	r0, #7
 803dcb8:	e7e4      	b.n	803dc84 <set_step_detector+0x34>
 803dcba:	bf00      	nop

0803dcbc <set_step_counter>:
 803dcbc:	b570      	push	{r4, r5, r6, lr}
 803dcbe:	b086      	sub	sp, #24
 803dcc0:	2400      	movs	r4, #0
 803dcc2:	460d      	mov	r5, r1
 803dcc4:	460a      	mov	r2, r1
 803dcc6:	4606      	mov	r6, r0
 803dcc8:	2107      	movs	r1, #7
 803dcca:	a801      	add	r0, sp, #4
 803dccc:	e9cd 4402 	strd	r4, r4, [sp, #8]
 803dcd0:	9404      	str	r4, [sp, #16]
 803dcd2:	9405      	str	r4, [sp, #20]
 803dcd4:	f8ad 4004 	strh.w	r4, [sp, #4]
 803dcd8:	f88d 4006 	strb.w	r4, [sp, #6]
 803dcdc:	f7ff fe8a 	bl	803d9f4 <bmi2_extract_input_feat_config>
 803dce0:	b1f0      	cbz	r0, 803dd20 <set_step_counter+0x64>
 803dce2:	f89d 0005 	ldrb.w	r0, [sp, #5]
 803dce6:	a902      	add	r1, sp, #8
 803dce8:	462a      	mov	r2, r5
 803dcea:	f7ff fadb 	bl	803d2a4 <bmi2_get_feat_config>
 803dcee:	b108      	cbz	r0, 803dcf4 <set_step_counter+0x38>
 803dcf0:	b006      	add	sp, #24
 803dcf2:	bd70      	pop	{r4, r5, r6, pc}
 803dcf4:	f89d 4006 	ldrb.w	r4, [sp, #6]
 803dcf8:	ab06      	add	r3, sp, #24
 803dcfa:	3401      	adds	r4, #1
 803dcfc:	fa53 f484 	uxtab	r4, r3, r4
 803dd00:	a902      	add	r1, sp, #8
 803dd02:	f814 0c10 	ldrb.w	r0, [r4, #-16]
 803dd06:	f020 0010 	bic.w	r0, r0, #16
 803dd0a:	ea40 1606 	orr.w	r6, r0, r6, lsl #4
 803dd0e:	462b      	mov	r3, r5
 803dd10:	2210      	movs	r2, #16
 803dd12:	2030      	movs	r0, #48	; 0x30
 803dd14:	f804 6c10 	strb.w	r6, [r4, #-16]
 803dd18:	f7fe ff22 	bl	803cb60 <bmi2_set_regs>
 803dd1c:	b006      	add	sp, #24
 803dd1e:	bd70      	pop	{r4, r5, r6, pc}
 803dd20:	f06f 0007 	mvn.w	r0, #7
 803dd24:	e7e4      	b.n	803dcf0 <set_step_counter+0x34>
 803dd26:	bf00      	nop

0803dd28 <set_step_activity>:
 803dd28:	b570      	push	{r4, r5, r6, lr}
 803dd2a:	b086      	sub	sp, #24
 803dd2c:	2400      	movs	r4, #0
 803dd2e:	460d      	mov	r5, r1
 803dd30:	460a      	mov	r2, r1
 803dd32:	4606      	mov	r6, r0
 803dd34:	2108      	movs	r1, #8
 803dd36:	a801      	add	r0, sp, #4
 803dd38:	e9cd 4402 	strd	r4, r4, [sp, #8]
 803dd3c:	9404      	str	r4, [sp, #16]
 803dd3e:	9405      	str	r4, [sp, #20]
 803dd40:	f8ad 4004 	strh.w	r4, [sp, #4]
 803dd44:	f88d 4006 	strb.w	r4, [sp, #6]
 803dd48:	f7ff fe54 	bl	803d9f4 <bmi2_extract_input_feat_config>
 803dd4c:	b1f0      	cbz	r0, 803dd8c <set_step_activity+0x64>
 803dd4e:	f89d 0005 	ldrb.w	r0, [sp, #5]
 803dd52:	a902      	add	r1, sp, #8
 803dd54:	462a      	mov	r2, r5
 803dd56:	f7ff faa5 	bl	803d2a4 <bmi2_get_feat_config>
 803dd5a:	b108      	cbz	r0, 803dd60 <set_step_activity+0x38>
 803dd5c:	b006      	add	sp, #24
 803dd5e:	bd70      	pop	{r4, r5, r6, pc}
 803dd60:	f89d 4006 	ldrb.w	r4, [sp, #6]
 803dd64:	ab06      	add	r3, sp, #24
 803dd66:	3401      	adds	r4, #1
 803dd68:	fa53 f484 	uxtab	r4, r3, r4
 803dd6c:	a902      	add	r1, sp, #8
 803dd6e:	f814 0c10 	ldrb.w	r0, [r4, #-16]
 803dd72:	f020 0020 	bic.w	r0, r0, #32
 803dd76:	ea40 1646 	orr.w	r6, r0, r6, lsl #5
 803dd7a:	462b      	mov	r3, r5
 803dd7c:	2210      	movs	r2, #16
 803dd7e:	2030      	movs	r0, #48	; 0x30
 803dd80:	f804 6c10 	strb.w	r6, [r4, #-16]
 803dd84:	f7fe feec 	bl	803cb60 <bmi2_set_regs>
 803dd88:	b006      	add	sp, #24
 803dd8a:	bd70      	pop	{r4, r5, r6, pc}
 803dd8c:	f06f 0007 	mvn.w	r0, #7
 803dd90:	e7e4      	b.n	803dd5c <set_step_activity+0x34>
 803dd92:	bf00      	nop

0803dd94 <set_gyro_user_gain>:
 803dd94:	b570      	push	{r4, r5, r6, lr}
 803dd96:	b086      	sub	sp, #24
 803dd98:	2400      	movs	r4, #0
 803dd9a:	460d      	mov	r5, r1
 803dd9c:	460a      	mov	r2, r1
 803dd9e:	4606      	mov	r6, r0
 803dda0:	2109      	movs	r1, #9
 803dda2:	a801      	add	r0, sp, #4
 803dda4:	e9cd 4402 	strd	r4, r4, [sp, #8]
 803dda8:	9404      	str	r4, [sp, #16]
 803ddaa:	9405      	str	r4, [sp, #20]
 803ddac:	f8ad 4004 	strh.w	r4, [sp, #4]
 803ddb0:	f88d 4006 	strb.w	r4, [sp, #6]
 803ddb4:	f7ff fe1e 	bl	803d9f4 <bmi2_extract_input_feat_config>
 803ddb8:	b1f0      	cbz	r0, 803ddf8 <set_gyro_user_gain+0x64>
 803ddba:	f89d 0005 	ldrb.w	r0, [sp, #5]
 803ddbe:	a902      	add	r1, sp, #8
 803ddc0:	462a      	mov	r2, r5
 803ddc2:	f7ff fa6f 	bl	803d2a4 <bmi2_get_feat_config>
 803ddc6:	b108      	cbz	r0, 803ddcc <set_gyro_user_gain+0x38>
 803ddc8:	b006      	add	sp, #24
 803ddca:	bd70      	pop	{r4, r5, r6, pc}
 803ddcc:	f89d 4006 	ldrb.w	r4, [sp, #6]
 803ddd0:	ab06      	add	r3, sp, #24
 803ddd2:	3405      	adds	r4, #5
 803ddd4:	fa53 f484 	uxtab	r4, r3, r4
 803ddd8:	a902      	add	r1, sp, #8
 803ddda:	f814 0c10 	ldrb.w	r0, [r4, #-16]
 803ddde:	f020 0008 	bic.w	r0, r0, #8
 803dde2:	ea40 06c6 	orr.w	r6, r0, r6, lsl #3
 803dde6:	462b      	mov	r3, r5
 803dde8:	2210      	movs	r2, #16
 803ddea:	2030      	movs	r0, #48	; 0x30
 803ddec:	f804 6c10 	strb.w	r6, [r4, #-16]
 803ddf0:	f7fe feb6 	bl	803cb60 <bmi2_set_regs>
 803ddf4:	b006      	add	sp, #24
 803ddf6:	bd70      	pop	{r4, r5, r6, pc}
 803ddf8:	f06f 0007 	mvn.w	r0, #7
 803ddfc:	e7e4      	b.n	803ddc8 <set_gyro_user_gain+0x34>
 803ddfe:	bf00      	nop

0803de00 <set_gyro_self_offset_corr>:
 803de00:	b570      	push	{r4, r5, r6, lr}
 803de02:	b086      	sub	sp, #24
 803de04:	2400      	movs	r4, #0
 803de06:	460d      	mov	r5, r1
 803de08:	460a      	mov	r2, r1
 803de0a:	4606      	mov	r6, r0
 803de0c:	2122      	movs	r1, #34	; 0x22
 803de0e:	a801      	add	r0, sp, #4
 803de10:	e9cd 4402 	strd	r4, r4, [sp, #8]
 803de14:	9404      	str	r4, [sp, #16]
 803de16:	9405      	str	r4, [sp, #20]
 803de18:	f8ad 4004 	strh.w	r4, [sp, #4]
 803de1c:	f88d 4006 	strb.w	r4, [sp, #6]
 803de20:	f7ff fde8 	bl	803d9f4 <bmi2_extract_input_feat_config>
 803de24:	b1e0      	cbz	r0, 803de60 <set_gyro_self_offset_corr+0x60>
 803de26:	f89d 0005 	ldrb.w	r0, [sp, #5]
 803de2a:	a902      	add	r1, sp, #8
 803de2c:	462a      	mov	r2, r5
 803de2e:	f7ff fa39 	bl	803d2a4 <bmi2_get_feat_config>
 803de32:	b108      	cbz	r0, 803de38 <set_gyro_self_offset_corr+0x38>
 803de34:	b006      	add	sp, #24
 803de36:	bd70      	pop	{r4, r5, r6, pc}
 803de38:	f89d 4006 	ldrb.w	r4, [sp, #6]
 803de3c:	ab06      	add	r3, sp, #24
 803de3e:	441c      	add	r4, r3
 803de40:	a902      	add	r1, sp, #8
 803de42:	f814 0c10 	ldrb.w	r0, [r4, #-16]
 803de46:	f020 0002 	bic.w	r0, r0, #2
 803de4a:	ea40 0646 	orr.w	r6, r0, r6, lsl #1
 803de4e:	462b      	mov	r3, r5
 803de50:	2210      	movs	r2, #16
 803de52:	2030      	movs	r0, #48	; 0x30
 803de54:	f804 6c10 	strb.w	r6, [r4, #-16]
 803de58:	f7fe fe82 	bl	803cb60 <bmi2_set_regs>
 803de5c:	b006      	add	sp, #24
 803de5e:	bd70      	pop	{r4, r5, r6, pc}
 803de60:	f06f 0007 	mvn.w	r0, #7
 803de64:	e7e6      	b.n	803de34 <set_gyro_self_offset_corr+0x34>
 803de66:	bf00      	nop

0803de68 <set_wrist_gesture>:
 803de68:	b570      	push	{r4, r5, r6, lr}
 803de6a:	b086      	sub	sp, #24
 803de6c:	2400      	movs	r4, #0
 803de6e:	460d      	mov	r5, r1
 803de70:	460a      	mov	r2, r1
 803de72:	4606      	mov	r6, r0
 803de74:	2113      	movs	r1, #19
 803de76:	a801      	add	r0, sp, #4
 803de78:	e9cd 4402 	strd	r4, r4, [sp, #8]
 803de7c:	9404      	str	r4, [sp, #16]
 803de7e:	9405      	str	r4, [sp, #20]
 803de80:	f8ad 4004 	strh.w	r4, [sp, #4]
 803de84:	f88d 4006 	strb.w	r4, [sp, #6]
 803de88:	f7ff fdb4 	bl	803d9f4 <bmi2_extract_input_feat_config>
 803de8c:	b1e0      	cbz	r0, 803dec8 <set_wrist_gesture+0x60>
 803de8e:	f89d 0005 	ldrb.w	r0, [sp, #5]
 803de92:	a902      	add	r1, sp, #8
 803de94:	462a      	mov	r2, r5
 803de96:	f7ff fa05 	bl	803d2a4 <bmi2_get_feat_config>
 803de9a:	b108      	cbz	r0, 803dea0 <set_wrist_gesture+0x38>
 803de9c:	b006      	add	sp, #24
 803de9e:	bd70      	pop	{r4, r5, r6, pc}
 803dea0:	f89d 4006 	ldrb.w	r4, [sp, #6]
 803dea4:	ab06      	add	r3, sp, #24
 803dea6:	441c      	add	r4, r3
 803dea8:	a902      	add	r1, sp, #8
 803deaa:	f814 0c10 	ldrb.w	r0, [r4, #-16]
 803deae:	f020 0020 	bic.w	r0, r0, #32
 803deb2:	ea40 1646 	orr.w	r6, r0, r6, lsl #5
 803deb6:	462b      	mov	r3, r5
 803deb8:	2210      	movs	r2, #16
 803deba:	2030      	movs	r0, #48	; 0x30
 803debc:	f804 6c10 	strb.w	r6, [r4, #-16]
 803dec0:	f7fe fe4e 	bl	803cb60 <bmi2_set_regs>
 803dec4:	b006      	add	sp, #24
 803dec6:	bd70      	pop	{r4, r5, r6, pc}
 803dec8:	f06f 0007 	mvn.w	r0, #7
 803decc:	e7e6      	b.n	803de9c <set_wrist_gesture+0x34>
 803dece:	bf00      	nop

0803ded0 <set_wrist_wear_wake_up>:
 803ded0:	b570      	push	{r4, r5, r6, lr}
 803ded2:	b086      	sub	sp, #24
 803ded4:	2400      	movs	r4, #0
 803ded6:	460d      	mov	r5, r1
 803ded8:	460a      	mov	r2, r1
 803deda:	4606      	mov	r6, r0
 803dedc:	2114      	movs	r1, #20
 803dede:	a801      	add	r0, sp, #4
 803dee0:	e9cd 4402 	strd	r4, r4, [sp, #8]
 803dee4:	9404      	str	r4, [sp, #16]
 803dee6:	9405      	str	r4, [sp, #20]
 803dee8:	f8ad 4004 	strh.w	r4, [sp, #4]
 803deec:	f88d 4006 	strb.w	r4, [sp, #6]
 803def0:	f7ff fd80 	bl	803d9f4 <bmi2_extract_input_feat_config>
 803def4:	b1e0      	cbz	r0, 803df30 <set_wrist_wear_wake_up+0x60>
 803def6:	f89d 0005 	ldrb.w	r0, [sp, #5]
 803defa:	a902      	add	r1, sp, #8
 803defc:	462a      	mov	r2, r5
 803defe:	f7ff f9d1 	bl	803d2a4 <bmi2_get_feat_config>
 803df02:	b108      	cbz	r0, 803df08 <set_wrist_wear_wake_up+0x38>
 803df04:	b006      	add	sp, #24
 803df06:	bd70      	pop	{r4, r5, r6, pc}
 803df08:	f89d 4006 	ldrb.w	r4, [sp, #6]
 803df0c:	ab06      	add	r3, sp, #24
 803df0e:	441c      	add	r4, r3
 803df10:	a902      	add	r1, sp, #8
 803df12:	f814 0c10 	ldrb.w	r0, [r4, #-16]
 803df16:	f020 0010 	bic.w	r0, r0, #16
 803df1a:	ea40 1606 	orr.w	r6, r0, r6, lsl #4
 803df1e:	462b      	mov	r3, r5
 803df20:	2210      	movs	r2, #16
 803df22:	2030      	movs	r0, #48	; 0x30
 803df24:	f804 6c10 	strb.w	r6, [r4, #-16]
 803df28:	f7fe fe1a 	bl	803cb60 <bmi2_set_regs>
 803df2c:	b006      	add	sp, #24
 803df2e:	bd70      	pop	{r4, r5, r6, pc}
 803df30:	f06f 0007 	mvn.w	r0, #7
 803df34:	e7e6      	b.n	803df04 <set_wrist_wear_wake_up+0x34>
 803df36:	bf00      	nop

0803df38 <bmi270_init>:
 803df38:	2800      	cmp	r0, #0
 803df3a:	d030      	beq.n	803df9e <bmi270_init+0x66>
 803df3c:	b538      	push	{r3, r4, r5, lr}
 803df3e:	6b83      	ldr	r3, [r0, #56]	; 0x38
 803df40:	4604      	mov	r4, r0
 803df42:	b34b      	cbz	r3, 803df98 <bmi270_init+0x60>
 803df44:	6bc3      	ldr	r3, [r0, #60]	; 0x3c
 803df46:	b33b      	cbz	r3, 803df98 <bmi270_init+0x60>
 803df48:	6c03      	ldr	r3, [r0, #64]	; 0x40
 803df4a:	b32b      	cbz	r3, 803df98 <bmi270_init+0x60>
 803df4c:	7a43      	ldrb	r3, [r0, #9]
 803df4e:	4915      	ldr	r1, [pc, #84]	; (803dfa4 <bmi270_init+0x6c>)
 803df50:	6902      	ldr	r2, [r0, #16]
 803df52:	6481      	str	r1, [r0, #72]	; 0x48
 803df54:	fab3 f383 	clz	r3, r3
 803df58:	095b      	lsrs	r3, r3, #5
 803df5a:	2124      	movs	r1, #36	; 0x24
 803df5c:	72c3      	strb	r3, [r0, #11]
 803df5e:	7001      	strb	r1, [r0, #0]
 803df60:	b1ba      	cbz	r2, 803df92 <bmi270_init+0x5a>
 803df62:	4620      	mov	r0, r4
 803df64:	f7ff f968 	bl	803d238 <bmi2_sec_init>
 803df68:	b100      	cbz	r0, 803df6c <bmi270_init+0x34>
 803df6a:	bd38      	pop	{r3, r4, r5, pc}
 803df6c:	4b0e      	ldr	r3, [pc, #56]	; (803dfa8 <bmi270_init+0x70>)
 803df6e:	61e3      	str	r3, [r4, #28]
 803df70:	f241 1008 	movw	r0, #4360	; 0x1108
 803df74:	2308      	movs	r3, #8
 803df76:	2107      	movs	r1, #7
 803df78:	4d0c      	ldr	r5, [pc, #48]	; (803dfac <bmi270_init+0x74>)
 803df7a:	82a0      	strh	r0, [r4, #20]
 803df7c:	4a0c      	ldr	r2, [pc, #48]	; (803dfb0 <bmi270_init+0x78>)
 803df7e:	75a1      	strb	r1, [r4, #22]
 803df80:	f884 3060 	strb.w	r3, [r4, #96]	; 0x60
 803df84:	6225      	str	r5, [r4, #32]
 803df86:	65e2      	str	r2, [r4, #92]	; 0x5c
 803df88:	4620      	mov	r0, r4
 803df8a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 803df8e:	f7ff bb65 	b.w	803d65c <bmi2_get_gyro_cross_sense>
 803df92:	4b08      	ldr	r3, [pc, #32]	; (803dfb4 <bmi270_init+0x7c>)
 803df94:	6103      	str	r3, [r0, #16]
 803df96:	e7e4      	b.n	803df62 <bmi270_init+0x2a>
 803df98:	f04f 30ff 	mov.w	r0, #4294967295
 803df9c:	bd38      	pop	{r3, r4, r5, pc}
 803df9e:	f04f 30ff 	mov.w	r0, #4294967295
 803dfa2:	4770      	bx	lr
 803dfa4:	20000003 	.word	0x20000003
 803dfa8:	0804b838 	.word	0x0804b838
 803dfac:	0804b86c 	.word	0x0804b86c
 803dfb0:	200024dc 	.word	0x200024dc
 803dfb4:	08049838 	.word	0x08049838

0803dfb8 <bmi270_sensor_enable>:
 803dfb8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 803dfbc:	2600      	movs	r6, #0
 803dfbe:	b084      	sub	sp, #16
 803dfc0:	2700      	movs	r7, #0
 803dfc2:	e9cd 6702 	strd	r6, r7, [sp, #8]
 803dfc6:	2a00      	cmp	r2, #0
 803dfc8:	f000 8149 	beq.w	803e25e <bmi270_sensor_enable+0x2a6>
 803dfcc:	4614      	mov	r4, r2
 803dfce:	6b92      	ldr	r2, [r2, #56]	; 0x38
 803dfd0:	2a00      	cmp	r2, #0
 803dfd2:	f000 8144 	beq.w	803e25e <bmi270_sensor_enable+0x2a6>
 803dfd6:	6be2      	ldr	r2, [r4, #60]	; 0x3c
 803dfd8:	2a00      	cmp	r2, #0
 803dfda:	f000 8140 	beq.w	803e25e <bmi270_sensor_enable+0x2a6>
 803dfde:	6c22      	ldr	r2, [r4, #64]	; 0x40
 803dfe0:	2a00      	cmp	r2, #0
 803dfe2:	f000 813c 	beq.w	803e25e <bmi270_sensor_enable+0x2a6>
 803dfe6:	2800      	cmp	r0, #0
 803dfe8:	f000 8139 	beq.w	803e25e <bmi270_sensor_enable+0x2a6>
 803dfec:	aa02      	add	r2, sp, #8
 803dfee:	f7ff fd1f 	bl	803da30 <select_sensor>
 803dff2:	4605      	mov	r5, r0
 803dff4:	b118      	cbz	r0, 803dffe <bmi270_sensor_enable+0x46>
 803dff6:	4628      	mov	r0, r5
 803dff8:	b004      	add	sp, #16
 803dffa:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 803dffe:	f10d 0107 	add.w	r1, sp, #7
 803e002:	4623      	mov	r3, r4
 803e004:	2201      	movs	r2, #1
 803e006:	207d      	movs	r0, #125	; 0x7d
 803e008:	f88d 5007 	strb.w	r5, [sp, #7]
 803e00c:	e9dd 6702 	ldrd	r6, r7, [sp, #8]
 803e010:	f7fe fd3a 	bl	803ca88 <bmi2_get_regs>
 803e014:	4605      	mov	r5, r0
 803e016:	2800      	cmp	r0, #0
 803e018:	d1ed      	bne.n	803dff6 <bmi270_sensor_enable+0x3e>
 803e01a:	f006 0201 	and.w	r2, r6, #1
 803e01e:	4603      	mov	r3, r0
 803e020:	4313      	orrs	r3, r2
 803e022:	d005      	beq.n	803e030 <bmi270_sensor_enable+0x78>
 803e024:	f89d 3007 	ldrb.w	r3, [sp, #7]
 803e028:	f043 0304 	orr.w	r3, r3, #4
 803e02c:	f88d 3007 	strb.w	r3, [sp, #7]
 803e030:	f006 0202 	and.w	r2, r6, #2
 803e034:	2300      	movs	r3, #0
 803e036:	4313      	orrs	r3, r2
 803e038:	d005      	beq.n	803e046 <bmi270_sensor_enable+0x8e>
 803e03a:	f89d 3007 	ldrb.w	r3, [sp, #7]
 803e03e:	f043 0302 	orr.w	r3, r3, #2
 803e042:	f88d 3007 	strb.w	r3, [sp, #7]
 803e046:	f006 0204 	and.w	r2, r6, #4
 803e04a:	2300      	movs	r3, #0
 803e04c:	4313      	orrs	r3, r2
 803e04e:	d005      	beq.n	803e05c <bmi270_sensor_enable+0xa4>
 803e050:	f89d 3007 	ldrb.w	r3, [sp, #7]
 803e054:	f043 0301 	orr.w	r3, r3, #1
 803e058:	f88d 3007 	strb.w	r3, [sp, #7]
 803e05c:	2200      	movs	r2, #0
 803e05e:	f007 0301 	and.w	r3, r7, #1
 803e062:	4313      	orrs	r3, r2
 803e064:	d005      	beq.n	803e072 <bmi270_sensor_enable+0xba>
 803e066:	f89d 3007 	ldrb.w	r3, [sp, #7]
 803e06a:	f043 0308 	orr.w	r3, r3, #8
 803e06e:	f88d 3007 	strb.w	r3, [sp, #7]
 803e072:	f006 0207 	and.w	r2, r6, #7
 803e076:	f007 0301 	and.w	r3, r7, #1
 803e07a:	4313      	orrs	r3, r2
 803e07c:	f040 80e3 	bne.w	803e246 <bmi270_sensor_enable+0x28e>
 803e080:	f026 0207 	bic.w	r2, r6, #7
 803e084:	f027 0301 	bic.w	r3, r7, #1
 803e088:	4313      	orrs	r3, r2
 803e08a:	d0b4      	beq.n	803dff6 <bmi270_sensor_enable+0x3e>
 803e08c:	f894 8047 	ldrb.w	r8, [r4, #71]	; 0x47
 803e090:	f1b8 0f01 	cmp.w	r8, #1
 803e094:	f000 80ce 	beq.w	803e234 <bmi270_sensor_enable+0x27c>
 803e098:	f006 0208 	and.w	r2, r6, #8
 803e09c:	2300      	movs	r3, #0
 803e09e:	4313      	orrs	r3, r2
 803e0a0:	d144      	bne.n	803e12c <bmi270_sensor_enable+0x174>
 803e0a2:	f006 0210 	and.w	r2, r6, #16
 803e0a6:	2300      	movs	r3, #0
 803e0a8:	4313      	orrs	r3, r2
 803e0aa:	d14f      	bne.n	803e14c <bmi270_sensor_enable+0x194>
 803e0ac:	f006 0220 	and.w	r2, r6, #32
 803e0b0:	2300      	movs	r3, #0
 803e0b2:	4313      	orrs	r3, r2
 803e0b4:	d159      	bne.n	803e16a <bmi270_sensor_enable+0x1b2>
 803e0b6:	f006 0240 	and.w	r2, r6, #64	; 0x40
 803e0ba:	2300      	movs	r3, #0
 803e0bc:	4313      	orrs	r3, r2
 803e0be:	d163      	bne.n	803e188 <bmi270_sensor_enable+0x1d0>
 803e0c0:	f006 0280 	and.w	r2, r6, #128	; 0x80
 803e0c4:	2300      	movs	r3, #0
 803e0c6:	4313      	orrs	r3, r2
 803e0c8:	d16d      	bne.n	803e1a6 <bmi270_sensor_enable+0x1ee>
 803e0ca:	f406 7280 	and.w	r2, r6, #256	; 0x100
 803e0ce:	2300      	movs	r3, #0
 803e0d0:	4313      	orrs	r3, r2
 803e0d2:	d177      	bne.n	803e1c4 <bmi270_sensor_enable+0x20c>
 803e0d4:	f406 7200 	and.w	r2, r6, #512	; 0x200
 803e0d8:	2300      	movs	r3, #0
 803e0da:	4313      	orrs	r3, r2
 803e0dc:	f040 8082 	bne.w	803e1e4 <bmi270_sensor_enable+0x22c>
 803e0e0:	2200      	movs	r2, #0
 803e0e2:	f007 0304 	and.w	r3, r7, #4
 803e0e6:	4313      	orrs	r3, r2
 803e0e8:	f040 808b 	bne.w	803e202 <bmi270_sensor_enable+0x24a>
 803e0ec:	f406 2200 	and.w	r2, r6, #524288	; 0x80000
 803e0f0:	2300      	movs	r3, #0
 803e0f2:	4313      	orrs	r3, r2
 803e0f4:	f040 8094 	bne.w	803e220 <bmi270_sensor_enable+0x268>
 803e0f8:	f406 1280 	and.w	r2, r6, #1048576	; 0x100000
 803e0fc:	2300      	movs	r3, #0
 803e0fe:	4313      	orrs	r3, r2
 803e100:	d00a      	beq.n	803e118 <bmi270_sensor_enable+0x160>
 803e102:	4621      	mov	r1, r4
 803e104:	2001      	movs	r0, #1
 803e106:	f7ff fee3 	bl	803ded0 <set_wrist_wear_wake_up>
 803e10a:	2800      	cmp	r0, #0
 803e10c:	f040 8099 	bne.w	803e242 <bmi270_sensor_enable+0x28a>
 803e110:	6b23      	ldr	r3, [r4, #48]	; 0x30
 803e112:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 803e116:	6323      	str	r3, [r4, #48]	; 0x30
 803e118:	f1b8 0f01 	cmp.w	r8, #1
 803e11c:	f47f af6b 	bne.w	803dff6 <bmi270_sensor_enable+0x3e>
 803e120:	4621      	mov	r1, r4
 803e122:	4640      	mov	r0, r8
 803e124:	f7fe fe5e 	bl	803cde4 <bmi2_set_adv_power_save>
 803e128:	4605      	mov	r5, r0
 803e12a:	e764      	b.n	803dff6 <bmi270_sensor_enable+0x3e>
 803e12c:	4621      	mov	r1, r4
 803e12e:	2001      	movs	r0, #1
 803e130:	f7ff fcee 	bl	803db10 <set_sig_motion>
 803e134:	2800      	cmp	r0, #0
 803e136:	f040 8084 	bne.w	803e242 <bmi270_sensor_enable+0x28a>
 803e13a:	6b23      	ldr	r3, [r4, #48]	; 0x30
 803e13c:	f043 0308 	orr.w	r3, r3, #8
 803e140:	6323      	str	r3, [r4, #48]	; 0x30
 803e142:	f006 0210 	and.w	r2, r6, #16
 803e146:	2300      	movs	r3, #0
 803e148:	4313      	orrs	r3, r2
 803e14a:	d0af      	beq.n	803e0ac <bmi270_sensor_enable+0xf4>
 803e14c:	4621      	mov	r1, r4
 803e14e:	2001      	movs	r0, #1
 803e150:	f7ff fd12 	bl	803db78 <set_any_motion>
 803e154:	2800      	cmp	r0, #0
 803e156:	d174      	bne.n	803e242 <bmi270_sensor_enable+0x28a>
 803e158:	6b23      	ldr	r3, [r4, #48]	; 0x30
 803e15a:	f043 0310 	orr.w	r3, r3, #16
 803e15e:	6323      	str	r3, [r4, #48]	; 0x30
 803e160:	f006 0220 	and.w	r2, r6, #32
 803e164:	2300      	movs	r3, #0
 803e166:	4313      	orrs	r3, r2
 803e168:	d0a5      	beq.n	803e0b6 <bmi270_sensor_enable+0xfe>
 803e16a:	4621      	mov	r1, r4
 803e16c:	2001      	movs	r0, #1
 803e16e:	f7ff fd39 	bl	803dbe4 <set_no_motion>
 803e172:	2800      	cmp	r0, #0
 803e174:	d165      	bne.n	803e242 <bmi270_sensor_enable+0x28a>
 803e176:	6b23      	ldr	r3, [r4, #48]	; 0x30
 803e178:	f043 0320 	orr.w	r3, r3, #32
 803e17c:	6323      	str	r3, [r4, #48]	; 0x30
 803e17e:	f006 0240 	and.w	r2, r6, #64	; 0x40
 803e182:	2300      	movs	r3, #0
 803e184:	4313      	orrs	r3, r2
 803e186:	d09b      	beq.n	803e0c0 <bmi270_sensor_enable+0x108>
 803e188:	4621      	mov	r1, r4
 803e18a:	2001      	movs	r0, #1
 803e18c:	f7ff fd60 	bl	803dc50 <set_step_detector>
 803e190:	2800      	cmp	r0, #0
 803e192:	d156      	bne.n	803e242 <bmi270_sensor_enable+0x28a>
 803e194:	6b23      	ldr	r3, [r4, #48]	; 0x30
 803e196:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 803e19a:	6323      	str	r3, [r4, #48]	; 0x30
 803e19c:	f006 0280 	and.w	r2, r6, #128	; 0x80
 803e1a0:	2300      	movs	r3, #0
 803e1a2:	4313      	orrs	r3, r2
 803e1a4:	d091      	beq.n	803e0ca <bmi270_sensor_enable+0x112>
 803e1a6:	4621      	mov	r1, r4
 803e1a8:	2001      	movs	r0, #1
 803e1aa:	f7ff fd87 	bl	803dcbc <set_step_counter>
 803e1ae:	2800      	cmp	r0, #0
 803e1b0:	d147      	bne.n	803e242 <bmi270_sensor_enable+0x28a>
 803e1b2:	6b23      	ldr	r3, [r4, #48]	; 0x30
 803e1b4:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 803e1b8:	6323      	str	r3, [r4, #48]	; 0x30
 803e1ba:	f406 7280 	and.w	r2, r6, #256	; 0x100
 803e1be:	2300      	movs	r3, #0
 803e1c0:	4313      	orrs	r3, r2
 803e1c2:	d087      	beq.n	803e0d4 <bmi270_sensor_enable+0x11c>
 803e1c4:	4621      	mov	r1, r4
 803e1c6:	2001      	movs	r0, #1
 803e1c8:	f7ff fdae 	bl	803dd28 <set_step_activity>
 803e1cc:	2800      	cmp	r0, #0
 803e1ce:	d138      	bne.n	803e242 <bmi270_sensor_enable+0x28a>
 803e1d0:	6b23      	ldr	r3, [r4, #48]	; 0x30
 803e1d2:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 803e1d6:	6323      	str	r3, [r4, #48]	; 0x30
 803e1d8:	f406 7200 	and.w	r2, r6, #512	; 0x200
 803e1dc:	2300      	movs	r3, #0
 803e1de:	4313      	orrs	r3, r2
 803e1e0:	f43f af7e 	beq.w	803e0e0 <bmi270_sensor_enable+0x128>
 803e1e4:	4621      	mov	r1, r4
 803e1e6:	2001      	movs	r0, #1
 803e1e8:	f7ff fdd4 	bl	803dd94 <set_gyro_user_gain>
 803e1ec:	bb48      	cbnz	r0, 803e242 <bmi270_sensor_enable+0x28a>
 803e1ee:	6b23      	ldr	r3, [r4, #48]	; 0x30
 803e1f0:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 803e1f4:	6323      	str	r3, [r4, #48]	; 0x30
 803e1f6:	2200      	movs	r2, #0
 803e1f8:	f007 0304 	and.w	r3, r7, #4
 803e1fc:	4313      	orrs	r3, r2
 803e1fe:	f43f af75 	beq.w	803e0ec <bmi270_sensor_enable+0x134>
 803e202:	4621      	mov	r1, r4
 803e204:	2001      	movs	r0, #1
 803e206:	f7ff fdfb 	bl	803de00 <set_gyro_self_offset_corr>
 803e20a:	b9d0      	cbnz	r0, 803e242 <bmi270_sensor_enable+0x28a>
 803e20c:	6b63      	ldr	r3, [r4, #52]	; 0x34
 803e20e:	f043 0304 	orr.w	r3, r3, #4
 803e212:	6363      	str	r3, [r4, #52]	; 0x34
 803e214:	f406 2200 	and.w	r2, r6, #524288	; 0x80000
 803e218:	2300      	movs	r3, #0
 803e21a:	4313      	orrs	r3, r2
 803e21c:	f43f af6c 	beq.w	803e0f8 <bmi270_sensor_enable+0x140>
 803e220:	4621      	mov	r1, r4
 803e222:	2001      	movs	r0, #1
 803e224:	f7ff fe20 	bl	803de68 <set_wrist_gesture>
 803e228:	b958      	cbnz	r0, 803e242 <bmi270_sensor_enable+0x28a>
 803e22a:	6b23      	ldr	r3, [r4, #48]	; 0x30
 803e22c:	f443 2300 	orr.w	r3, r3, #524288	; 0x80000
 803e230:	6323      	str	r3, [r4, #48]	; 0x30
 803e232:	e761      	b.n	803e0f8 <bmi270_sensor_enable+0x140>
 803e234:	4621      	mov	r1, r4
 803e236:	2000      	movs	r0, #0
 803e238:	f7fe fdd4 	bl	803cde4 <bmi2_set_adv_power_save>
 803e23c:	2800      	cmp	r0, #0
 803e23e:	f43f af2b 	beq.w	803e098 <bmi270_sensor_enable+0xe0>
 803e242:	4605      	mov	r5, r0
 803e244:	e6d7      	b.n	803dff6 <bmi270_sensor_enable+0x3e>
 803e246:	f10d 0107 	add.w	r1, sp, #7
 803e24a:	4623      	mov	r3, r4
 803e24c:	2201      	movs	r2, #1
 803e24e:	207d      	movs	r0, #125	; 0x7d
 803e250:	f7fe fc86 	bl	803cb60 <bmi2_set_regs>
 803e254:	2800      	cmp	r0, #0
 803e256:	f43f af13 	beq.w	803e080 <bmi270_sensor_enable+0xc8>
 803e25a:	4605      	mov	r5, r0
 803e25c:	e6cb      	b.n	803dff6 <bmi270_sensor_enable+0x3e>
 803e25e:	f04f 35ff 	mov.w	r5, #4294967295
 803e262:	e6c8      	b.n	803dff6 <bmi270_sensor_enable+0x3e>

0803e264 <arm_abs_f32>:
 803e264:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 803e268:	ed2d 8b04 	vpush	{d8-d9}
 803e26c:	4681      	mov	r9, r0
 803e26e:	4688      	mov	r8, r1
 803e270:	4616      	mov	r6, r2
 803e272:	ea5f 0a92 	movs.w	sl, r2, lsr #2
 803e276:	d030      	beq.n	803e2da <arm_abs_f32+0x76>
 803e278:	f100 0510 	add.w	r5, r0, #16
 803e27c:	f101 0410 	add.w	r4, r1, #16
 803e280:	4657      	mov	r7, sl
 803e282:	ed55 8a03 	vldr	s17, [r5, #-12]
 803e286:	ed15 8a02 	vldr	s16, [r5, #-8]
 803e28a:	ed15 0a04 	vldr	s0, [r5, #-16]
 803e28e:	f000 fc53 	bl	803eb38 <fabs(float)>
 803e292:	eef0 9a40 	vmov.f32	s19, s0
 803e296:	ed15 9a01 	vldr	s18, [r5, #-4]
 803e29a:	eeb0 0a68 	vmov.f32	s0, s17
 803e29e:	f000 fc4b 	bl	803eb38 <fabs(float)>
 803e2a2:	eef0 8a40 	vmov.f32	s17, s0
 803e2a6:	ed44 9a04 	vstr	s19, [r4, #-16]
 803e2aa:	eeb0 0a48 	vmov.f32	s0, s16
 803e2ae:	f000 fc43 	bl	803eb38 <fabs(float)>
 803e2b2:	eeb0 8a40 	vmov.f32	s16, s0
 803e2b6:	eeb0 0a49 	vmov.f32	s0, s18
 803e2ba:	f000 fc3d 	bl	803eb38 <fabs(float)>
 803e2be:	ed44 8a03 	vstr	s17, [r4, #-12]
 803e2c2:	ed04 8a02 	vstr	s16, [r4, #-8]
 803e2c6:	ed04 0a01 	vstr	s0, [r4, #-4]
 803e2ca:	3510      	adds	r5, #16
 803e2cc:	3410      	adds	r4, #16
 803e2ce:	3f01      	subs	r7, #1
 803e2d0:	d1d7      	bne.n	803e282 <arm_abs_f32+0x1e>
 803e2d2:	ea4f 1a0a 	mov.w	sl, sl, lsl #4
 803e2d6:	44d1      	add	r9, sl
 803e2d8:	44d0      	add	r8, sl
 803e2da:	f016 0403 	ands.w	r4, r6, #3
 803e2de:	d008      	beq.n	803e2f2 <arm_abs_f32+0x8e>
 803e2e0:	4645      	mov	r5, r8
 803e2e2:	ecb9 0a01 	vldmia	r9!, {s0}
 803e2e6:	f000 fc27 	bl	803eb38 <fabs(float)>
 803e2ea:	eca5 0a01 	vstmia	r5!, {s0}
 803e2ee:	3c01      	subs	r4, #1
 803e2f0:	d1f7      	bne.n	803e2e2 <arm_abs_f32+0x7e>
 803e2f2:	ecbd 8b04 	vpop	{d8-d9}
 803e2f6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 803e2fa:	bf00      	nop

0803e2fc <arm_mean_f32>:
 803e2fc:	b430      	push	{r4, r5}
 803e2fe:	088d      	lsrs	r5, r1, #2
 803e300:	d01a      	beq.n	803e338 <arm_mean_f32+0x3c>
 803e302:	f100 0310 	add.w	r3, r0, #16
 803e306:	462c      	mov	r4, r5
 803e308:	eddf 7a16 	vldr	s15, [pc, #88]	; 803e364 <arm_mean_f32+0x68>
 803e30c:	ed13 7a04 	vldr	s14, [r3, #-16]
 803e310:	ee77 7a87 	vadd.f32	s15, s15, s14
 803e314:	ed13 7a03 	vldr	s14, [r3, #-12]
 803e318:	ee77 7a87 	vadd.f32	s15, s15, s14
 803e31c:	ed13 7a02 	vldr	s14, [r3, #-8]
 803e320:	ee77 7a87 	vadd.f32	s15, s15, s14
 803e324:	ed13 7a01 	vldr	s14, [r3, #-4]
 803e328:	ee77 7a87 	vadd.f32	s15, s15, s14
 803e32c:	3310      	adds	r3, #16
 803e32e:	3c01      	subs	r4, #1
 803e330:	d1ec      	bne.n	803e30c <arm_mean_f32+0x10>
 803e332:	eb00 1005 	add.w	r0, r0, r5, lsl #4
 803e336:	e001      	b.n	803e33c <arm_mean_f32+0x40>
 803e338:	eddf 7a0a 	vldr	s15, [pc, #40]	; 803e364 <arm_mean_f32+0x68>
 803e33c:	f011 0303 	ands.w	r3, r1, #3
 803e340:	d005      	beq.n	803e34e <arm_mean_f32+0x52>
 803e342:	ecb0 7a01 	vldmia	r0!, {s14}
 803e346:	ee77 7a87 	vadd.f32	s15, s15, s14
 803e34a:	3b01      	subs	r3, #1
 803e34c:	d1f9      	bne.n	803e342 <arm_mean_f32+0x46>
 803e34e:	ee07 1a10 	vmov	s14, r1
 803e352:	eeb8 7a47 	vcvt.f32.u32	s14, s14
 803e356:	eec7 7a87 	vdiv.f32	s15, s15, s14
 803e35a:	edc2 7a00 	vstr	s15, [r2]
 803e35e:	bc30      	pop	{r4, r5}
 803e360:	4770      	bx	lr
 803e362:	bf00      	nop
 803e364:	00000000 	.word	0x00000000

0803e368 <__aeabi_ui2d>:
 803e368:	4200      	tst	r0, r0
 803e36a:	bf04      	itt	eq
 803e36c:	4601      	moveq	r1, r0
 803e36e:	4770      	bxeq	lr
 803e370:	f44f 6280 	mov.w	r2, #1024	; 0x400
 803e374:	f042 021d 	orr.w	r2, r2, #29
 803e378:	fab0 f180 	clz	r1, r0
 803e37c:	4088      	lsls	r0, r1
 803e37e:	1a52      	subs	r2, r2, r1
 803e380:	0ac3      	lsrs	r3, r0, #11
 803e382:	0540      	lsls	r0, r0, #21
 803e384:	eb03 5102 	add.w	r1, r3, r2, lsl #20
 803e388:	4770      	bx	lr

0803e38a <__aeabi_l2f>:
 803e38a:	ea50 0301 	orrs.w	r3, r0, r1
 803e38e:	bf08      	it	eq
 803e390:	4770      	bxeq	lr
 803e392:	f011 4200 	ands.w	r2, r1, #2147483648	; 0x80000000
 803e396:	ea4f 52d2 	mov.w	r2, r2, lsr #23
 803e39a:	f042 02bd 	orr.w	r2, r2, #189	; 0xbd
 803e39e:	f140 8004 	bpl.w	803e3aa <__int64_to_float32_common>
 803e3a2:	2300      	movs	r3, #0
 803e3a4:	4240      	negs	r0, r0
 803e3a6:	eb63 0101 	sbc.w	r1, r3, r1

0803e3aa <__int64_to_float32_common>:
 803e3aa:	2900      	cmp	r1, #0
 803e3ac:	bf02      	ittt	eq
 803e3ae:	4601      	moveq	r1, r0
 803e3b0:	2000      	moveq	r0, #0
 803e3b2:	3a20      	subeq	r2, #32
 803e3b4:	f5b1 3f80 	cmp.w	r1, #65536	; 0x10000
 803e3b8:	bf3f      	itttt	cc
 803e3ba:	3a10      	subcc	r2, #16
 803e3bc:	0409      	lslcc	r1, r1, #16
 803e3be:	ea41 4110 	orrcc.w	r1, r1, r0, lsr #16
 803e3c2:	0400      	lslcc	r0, r0, #16
 803e3c4:	f1b1 7f80 	cmp.w	r1, #16777216	; 0x1000000
 803e3c8:	bf3f      	itttt	cc
 803e3ca:	3a08      	subcc	r2, #8
 803e3cc:	0209      	lslcc	r1, r1, #8
 803e3ce:	ea41 6110 	orrcc.w	r1, r1, r0, lsr #24
 803e3d2:	0200      	lslcc	r0, r0, #8
 803e3d4:	f1b1 5f80 	cmp.w	r1, #268435456	; 0x10000000
 803e3d8:	bf3f      	itttt	cc
 803e3da:	3a04      	subcc	r2, #4
 803e3dc:	0109      	lslcc	r1, r1, #4
 803e3de:	ea41 7110 	orrcc.w	r1, r1, r0, lsr #28
 803e3e2:	0100      	lslcc	r0, r0, #4
 803e3e4:	f011 4f40 	tst.w	r1, #3221225472	; 0xc0000000
 803e3e8:	bf01      	itttt	eq
 803e3ea:	3a02      	subeq	r2, #2
 803e3ec:	0089      	lsleq	r1, r1, #2
 803e3ee:	ea41 7190 	orreq.w	r1, r1, r0, lsr #30
 803e3f2:	0080      	lsleq	r0, r0, #2
 803e3f4:	4209      	tst	r1, r1
 803e3f6:	bf5e      	ittt	pl
 803e3f8:	0049      	lslpl	r1, r1, #1
 803e3fa:	ea41 71d0 	orrpl.w	r1, r1, r0, lsr #31
 803e3fe:	3a01      	subpl	r2, #1
 803e400:	2800      	cmp	r0, #0
 803e402:	bf18      	it	ne
 803e404:	f041 0101 	orrne.w	r1, r1, #1
 803e408:	0648      	lsls	r0, r1, #25
 803e40a:	ea4f 2111 	mov.w	r1, r1, lsr #8
 803e40e:	bf08      	it	eq
 803e410:	f011 0f01 	tsteq.w	r1, #1
 803e414:	eb01 50c2 	add.w	r0, r1, r2, lsl #23
 803e418:	bf88      	it	hi
 803e41a:	3001      	addhi	r0, #1
 803e41c:	4770      	bx	lr

0803e41e <__aeabi_ul2f>:
 803e41e:	ea50 0301 	orrs.w	r3, r0, r1
 803e422:	bf08      	it	eq
 803e424:	4770      	bxeq	lr
 803e426:	f04f 02bd 	mov.w	r2, #189	; 0xbd
 803e42a:	f7ff bfbe 	b.w	803e3aa <__int64_to_float32_common>

0803e42e <__aeabi_d2uiz>:
 803e42e:	004a      	lsls	r2, r1, #1
 803e430:	d20e      	bcs.n	803e450 <__aeabi_d2uiz+0x22>
 803e432:	0d52      	lsrs	r2, r2, #21
 803e434:	f5a2 7240 	sub.w	r2, r2, #768	; 0x300
 803e438:	3aff      	subs	r2, #255	; 0xff
 803e43a:	d409      	bmi.n	803e450 <__aeabi_d2uiz+0x22>
 803e43c:	f1d2 021f 	rsbs	r2, r2, #31
 803e440:	d408      	bmi.n	803e454 <__aeabi_d2uiz+0x26>
 803e442:	02c9      	lsls	r1, r1, #11
 803e444:	ea41 5050 	orr.w	r0, r1, r0, lsr #21
 803e448:	f040 4000 	orr.w	r0, r0, #2147483648	; 0x80000000
 803e44c:	40d0      	lsrs	r0, r2
 803e44e:	4770      	bx	lr
 803e450:	2000      	movs	r0, #0
 803e452:	4770      	bx	lr
 803e454:	f06f 0000 	mvn.w	r0, #0
 803e458:	4770      	bx	lr

0803e45a <__aeabi_f2d>:
 803e45a:	f3c0 51c7 	ubfx	r1, r0, #23, #8
 803e45e:	4209      	tst	r1, r1
 803e460:	bf08      	it	eq
 803e462:	f000 4000 	andeq.w	r0, r0, #2147483648	; 0x80000000
 803e466:	0042      	lsls	r2, r0, #1
 803e468:	ea4f 7040 	mov.w	r0, r0, lsl #29
 803e46c:	ea4f 1112 	mov.w	r1, r2, lsr #4
 803e470:	bf18      	it	ne
 803e472:	f101 5160 	addne.w	r1, r1, #939524096	; 0x38000000
 803e476:	bf28      	it	cs
 803e478:	f081 4100 	eorcs.w	r1, r1, #2147483648	; 0x80000000
 803e47c:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
 803e480:	42d3      	cmn	r3, r2
 803e482:	bf38      	it	cc
 803e484:	4770      	bxcc	lr
 803e486:	f101 5160 	add.w	r1, r1, #939524096	; 0x38000000
 803e48a:	bf18      	it	ne
 803e48c:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 803e490:	4770      	bx	lr

0803e492 <__aeabi_d2f>:
 803e492:	f44f 1300 	mov.w	r3, #2097152	; 0x200000
 803e496:	eb13 0f41 	cmn.w	r3, r1, lsl #1
 803e49a:	d224      	bcs.n	803e4e6 <__aeabi_d2f+0x54>
 803e49c:	ea4f 0241 	mov.w	r2, r1, lsl #1
 803e4a0:	f1b2 43e0 	subs.w	r3, r2, #1879048192	; 0x70000000
 803e4a4:	bf24      	itt	cs
 803e4a6:	f5b3 1c00 	subscs.w	ip, r3, #2097152	; 0x200000
 803e4aa:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	; 0x1fc00000
 803e4ae:	d90d      	bls.n	803e4cc <__aeabi_d2f+0x3a>
 803e4b0:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 803e4b4:	ea4f 02c0 	mov.w	r2, r0, lsl #3
 803e4b8:	ea41 7050 	orr.w	r0, r1, r0, lsr #29
 803e4bc:	f1b2 4f00 	cmp.w	r2, #2147483648	; 0x80000000
 803e4c0:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
 803e4c4:	bf08      	it	eq
 803e4c6:	f020 0001 	biceq.w	r0, r0, #1
 803e4ca:	4770      	bx	lr
 803e4cc:	f011 4f80 	tst.w	r1, #1073741824	; 0x40000000
 803e4d0:	bf04      	itt	eq
 803e4d2:	f001 4000 	andeq.w	r0, r1, #2147483648	; 0x80000000
 803e4d6:	4770      	bxeq	lr
 803e4d8:	f001 4000 	and.w	r0, r1, #2147483648	; 0x80000000
 803e4dc:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 803e4e0:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 803e4e4:	4770      	bx	lr
 803e4e6:	d101      	bne.n	803e4ec <__aeabi_d2f+0x5a>
 803e4e8:	4200      	tst	r0, r0
 803e4ea:	d0f5      	beq.n	803e4d8 <__aeabi_d2f+0x46>
 803e4ec:	0049      	lsls	r1, r1, #1
 803e4ee:	ea4f 01c1 	mov.w	r1, r1, lsl #3
 803e4f2:	ea41 7010 	orr.w	r0, r1, r0, lsr #28
 803e4f6:	ea4f 0030 	mov.w	r0, r0, rrx
 803e4fa:	f440 0080 	orr.w	r0, r0, #4194304	; 0x400000
 803e4fe:	4770      	bx	lr

0803e500 <__aeabi_dmul>:
 803e500:	b5f0      	push	{r4, r5, r6, r7, lr}
 803e502:	4f57      	ldr	r7, [pc, #348]	; (803e660 <__aeabi_dmul+0x160>)
 803e504:	ea81 0503 	eor.w	r5, r1, r3
 803e508:	ea17 0e01 	ands.w	lr, r7, r1
 803e50c:	bf1e      	ittt	ne
 803e50e:	ea9e 0f07 	teqne	lr, r7
 803e512:	ea17 0403 	andsne.w	r4, r7, r3
 803e516:	ea94 0f07 	teqne	r4, r7
 803e51a:	d064      	beq.n	803e5e6 <__aeabi_dmul+0xe6>
 803e51c:	ea4e 7ed5 	orr.w	lr, lr, r5, lsr #31
 803e520:	44a6      	add	lr, r4
 803e522:	ea21 0147 	bic.w	r1, r1, r7, lsl #1
 803e526:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 803e52a:	ea23 0347 	bic.w	r3, r3, r7, lsl #1
 803e52e:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 803e532:	fba1 4702 	umull	r4, r7, r1, r2
 803e536:	fba0 6503 	umull	r6, r5, r0, r3
 803e53a:	1936      	adds	r6, r6, r4
 803e53c:	417d      	adcs	r5, r7
 803e53e:	fba1 4703 	umull	r4, r7, r1, r3
 803e542:	f147 0300 	adc.w	r3, r7, #0
 803e546:	fba0 1702 	umull	r1, r7, r0, r2
 803e54a:	19f6      	adds	r6, r6, r7
 803e54c:	4165      	adcs	r5, r4
 803e54e:	f153 0300 	adcs.w	r3, r3, #0
 803e552:	4209      	tst	r1, r1
 803e554:	bf18      	it	ne
 803e556:	f046 0601 	orrne.w	r6, r6, #1
 803e55a:	2714      	movs	r7, #20
 803e55c:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 803e560:	f147 0700 	adc.w	r7, r7, #0
 803e564:	bf34      	ite	cc
 803e566:	4a3f      	ldrcc	r2, [pc, #252]	; (803e664 <__aeabi_dmul+0x164>)
 803e568:	4a3f      	ldrcs	r2, [pc, #252]	; (803e668 <__aeabi_dmul+0x168>)
 803e56a:	ebbe 0e02 	subs.w	lr, lr, r2
 803e56e:	d431      	bmi.n	803e5d4 <__aeabi_dmul+0xd4>
 803e570:	f1c7 0420 	rsb	r4, r7, #32
 803e574:	fa03 f104 	lsl.w	r1, r3, r4
 803e578:	fa05 f004 	lsl.w	r0, r5, r4
 803e57c:	fa25 f207 	lsr.w	r2, r5, r7
 803e580:	4311      	orrs	r1, r2
 803e582:	fa26 f207 	lsr.w	r2, r6, r7
 803e586:	4310      	orrs	r0, r2
 803e588:	fa16 f404 	lsls.w	r4, r6, r4
 803e58c:	f421 1180 	bic.w	r1, r1, #1048576	; 0x100000
 803e590:	ea4f 075e 	mov.w	r7, lr, lsr #1
 803e594:	ea41 0147 	orr.w	r1, r1, r7, lsl #1
 803e598:	d00a      	beq.n	803e5b0 <__aeabi_dmul+0xb0>
 803e59a:	f1b4 4f00 	cmp.w	r4, #2147483648	; 0x80000000
 803e59e:	f150 0000 	adcs.w	r0, r0, #0
 803e5a2:	f141 0100 	adc.w	r1, r1, #0
 803e5a6:	f1b4 4f00 	cmp.w	r4, #2147483648	; 0x80000000
 803e5aa:	bf08      	it	eq
 803e5ac:	f020 0001 	biceq.w	r0, r0, #1
 803e5b0:	4f2b      	ldr	r7, [pc, #172]	; (803e660 <__aeabi_dmul+0x160>)
 803e5b2:	ea1e 0f07 	tst.w	lr, r7
 803e5b6:	d010      	beq.n	803e5da <__aeabi_dmul+0xda>
 803e5b8:	ea41 71ce 	orr.w	r1, r1, lr, lsl #31
 803e5bc:	45be      	cmp	lr, r7
 803e5be:	bf3c      	itt	cc
 803e5c0:	e8bd 40f0 	ldmiacc.w	sp!, {r4, r5, r6, r7, lr}
 803e5c4:	4770      	bxcc	lr
 803e5c6:	4926      	ldr	r1, [pc, #152]	; (803e660 <__aeabi_dmul+0x160>)
 803e5c8:	2000      	movs	r0, #0
 803e5ca:	ea41 71ce 	orr.w	r1, r1, lr, lsl #31
 803e5ce:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 803e5d2:	4770      	bx	lr
 803e5d4:	eb1e 0e02 	adds.w	lr, lr, r2
 803e5d8:	d4f5      	bmi.n	803e5c6 <__aeabi_dmul+0xc6>
 803e5da:	ea4f 71ce 	mov.w	r1, lr, lsl #31
 803e5de:	2000      	movs	r0, #0
 803e5e0:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 803e5e4:	4770      	bx	lr
 803e5e6:	4239      	tst	r1, r7
 803e5e8:	bf04      	itt	eq
 803e5ea:	f001 4100 	andeq.w	r1, r1, #2147483648	; 0x80000000
 803e5ee:	2000      	moveq	r0, #0
 803e5f0:	4200      	tst	r0, r0
 803e5f2:	bf18      	it	ne
 803e5f4:	f041 0101 	orrne.w	r1, r1, #1
 803e5f8:	423b      	tst	r3, r7
 803e5fa:	bf04      	itt	eq
 803e5fc:	f003 4300 	andeq.w	r3, r3, #2147483648	; 0x80000000
 803e600:	2200      	moveq	r2, #0
 803e602:	4212      	tst	r2, r2
 803e604:	bf18      	it	ne
 803e606:	f043 0301 	orrne.w	r3, r3, #1
 803e60a:	ea07 0403 	and.w	r4, r7, r3
 803e60e:	42bc      	cmp	r4, r7
 803e610:	bf18      	it	ne
 803e612:	ea9e 0f07 	teqne	lr, r7
 803e616:	d005      	beq.n	803e624 <__aeabi_dmul+0x124>
 803e618:	f005 4100 	and.w	r1, r5, #2147483648	; 0x80000000
 803e61c:	2000      	movs	r0, #0
 803e61e:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 803e622:	4770      	bx	lr
 803e624:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 803e628:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 803e62c:	42b9      	cmp	r1, r7
 803e62e:	d80f      	bhi.n	803e650 <__aeabi_dmul+0x150>
 803e630:	42bb      	cmp	r3, r7
 803e632:	d80d      	bhi.n	803e650 <__aeabi_dmul+0x150>
 803e634:	2900      	cmp	r1, #0
 803e636:	bf18      	it	ne
 803e638:	2b00      	cmpne	r3, #0
 803e63a:	d009      	beq.n	803e650 <__aeabi_dmul+0x150>
 803e63c:	f005 4100 	and.w	r1, r5, #2147483648	; 0x80000000
 803e640:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 803e644:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 803e648:	2000      	movs	r0, #0
 803e64a:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 803e64e:	4770      	bx	lr
 803e650:	f04f 41fe 	mov.w	r1, #2130706432	; 0x7f000000
 803e654:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
 803e658:	2000      	movs	r0, #0
 803e65a:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 803e65e:	4770      	bx	lr
 803e660:	7ff00000 	.word	0x7ff00000
 803e664:	3ff00000 	.word	0x3ff00000
 803e668:	3fe00000 	.word	0x3fe00000

0803e66c <__aeabi_ddiv>:
 803e66c:	b5f0      	push	{r4, r5, r6, r7, lr}
 803e66e:	ea81 0e03 	eor.w	lr, r1, r3
 803e672:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
 803e676:	4f81      	ldr	r7, [pc, #516]	; (803e87c <__aeabi_ddiv+0x210>)
 803e678:	ea17 0541 	ands.w	r5, r7, r1, lsl #1
 803e67c:	bf1e      	ittt	ne
 803e67e:	ea95 0f07 	teqne	r5, r7
 803e682:	ea17 0443 	andsne.w	r4, r7, r3, lsl #1
 803e686:	ea94 0f07 	teqne	r4, r7
 803e68a:	f000 80c5 	beq.w	803e818 <__aeabi_ddiv+0x1ac>
 803e68e:	0d6d      	lsrs	r5, r5, #21
 803e690:	eba5 5754 	sub.w	r7, r5, r4, lsr #21
 803e694:	f507 6780 	add.w	r7, r7, #1024	; 0x400
 803e698:	f04f 4600 	mov.w	r6, #2147483648	; 0x80000000
 803e69c:	ea46 24c1 	orr.w	r4, r6, r1, lsl #11
 803e6a0:	ea44 5450 	orr.w	r4, r4, r0, lsr #21
 803e6a4:	02c0      	lsls	r0, r0, #11
 803e6a6:	ea46 23c3 	orr.w	r3, r6, r3, lsl #11
 803e6aa:	ea43 5352 	orr.w	r3, r3, r2, lsr #21
 803e6ae:	02d2      	lsls	r2, r2, #11
 803e6b0:	1a80      	subs	r0, r0, r2
 803e6b2:	419c      	sbcs	r4, r3
 803e6b4:	d204      	bcs.n	803e6c0 <__aeabi_ddiv+0x54>
 803e6b6:	1800      	adds	r0, r0, r0
 803e6b8:	4164      	adcs	r4, r4
 803e6ba:	1880      	adds	r0, r0, r2
 803e6bc:	415c      	adcs	r4, r3
 803e6be:	3f01      	subs	r7, #1
 803e6c0:	085b      	lsrs	r3, r3, #1
 803e6c2:	ea4f 0232 	mov.w	r2, r2, rrx
 803e6c6:	2500      	movs	r5, #0
 803e6c8:	2100      	movs	r1, #0
 803e6ca:	f040 0001 	orr.w	r0, r0, #1
 803e6ce:	f04f 0607 	mov.w	r6, #7
 803e6d2:	e004      	b.n	803e6de <__aeabi_ddiv+0x72>
 803e6d4:	1a80      	subs	r0, r0, r2
 803e6d6:	419c      	sbcs	r4, r3
 803e6d8:	d336      	bcc.n	803e748 <__aeabi_ddiv+0xdc>
 803e6da:	4140      	adcs	r0, r0
 803e6dc:	4164      	adcs	r4, r4
 803e6de:	1a80      	subs	r0, r0, r2
 803e6e0:	419c      	sbcs	r4, r3
 803e6e2:	d336      	bcc.n	803e752 <__aeabi_ddiv+0xe6>
 803e6e4:	4140      	adcs	r0, r0
 803e6e6:	4164      	adcs	r4, r4
 803e6e8:	1a80      	subs	r0, r0, r2
 803e6ea:	419c      	sbcs	r4, r3
 803e6ec:	d336      	bcc.n	803e75c <__aeabi_ddiv+0xf0>
 803e6ee:	4140      	adcs	r0, r0
 803e6f0:	4164      	adcs	r4, r4
 803e6f2:	1a80      	subs	r0, r0, r2
 803e6f4:	419c      	sbcs	r4, r3
 803e6f6:	d336      	bcc.n	803e766 <__aeabi_ddiv+0xfa>
 803e6f8:	4140      	adcs	r0, r0
 803e6fa:	4164      	adcs	r4, r4
 803e6fc:	1a80      	subs	r0, r0, r2
 803e6fe:	419c      	sbcs	r4, r3
 803e700:	d336      	bcc.n	803e770 <__aeabi_ddiv+0x104>
 803e702:	4140      	adcs	r0, r0
 803e704:	4164      	adcs	r4, r4
 803e706:	3e01      	subs	r6, #1
 803e708:	d017      	beq.n	803e73a <__aeabi_ddiv+0xce>
 803e70a:	1a80      	subs	r0, r0, r2
 803e70c:	419c      	sbcs	r4, r3
 803e70e:	d336      	bcc.n	803e77e <__aeabi_ddiv+0x112>
 803e710:	4140      	adcs	r0, r0
 803e712:	4164      	adcs	r4, r4
 803e714:	1a80      	subs	r0, r0, r2
 803e716:	419c      	sbcs	r4, r3
 803e718:	d336      	bcc.n	803e788 <__aeabi_ddiv+0x11c>
 803e71a:	4140      	adcs	r0, r0
 803e71c:	4164      	adcs	r4, r4
 803e71e:	1a80      	subs	r0, r0, r2
 803e720:	419c      	sbcs	r4, r3
 803e722:	d336      	bcc.n	803e792 <__aeabi_ddiv+0x126>
 803e724:	4140      	adcs	r0, r0
 803e726:	4164      	adcs	r4, r4
 803e728:	0209      	lsls	r1, r1, #8
 803e72a:	eb01 6115 	add.w	r1, r1, r5, lsr #24
 803e72e:	022d      	lsls	r5, r5, #8
 803e730:	4045      	eors	r5, r0
 803e732:	f020 00ff 	bic.w	r0, r0, #255	; 0xff
 803e736:	4045      	eors	r5, r0
 803e738:	e7cc      	b.n	803e6d4 <__aeabi_ddiv+0x68>
 803e73a:	1a80      	subs	r0, r0, r2
 803e73c:	419c      	sbcs	r4, r3
 803e73e:	d356      	bcc.n	803e7ee <__aeabi_ddiv+0x182>
 803e740:	e035      	b.n	803e7ae <__aeabi_ddiv+0x142>
 803e742:	1880      	adds	r0, r0, r2
 803e744:	415c      	adcs	r4, r3
 803e746:	d2c8      	bcs.n	803e6da <__aeabi_ddiv+0x6e>
 803e748:	1800      	adds	r0, r0, r0
 803e74a:	4164      	adcs	r4, r4
 803e74c:	1880      	adds	r0, r0, r2
 803e74e:	415c      	adcs	r4, r3
 803e750:	d2c8      	bcs.n	803e6e4 <__aeabi_ddiv+0x78>
 803e752:	1800      	adds	r0, r0, r0
 803e754:	4164      	adcs	r4, r4
 803e756:	1880      	adds	r0, r0, r2
 803e758:	415c      	adcs	r4, r3
 803e75a:	d2c8      	bcs.n	803e6ee <__aeabi_ddiv+0x82>
 803e75c:	1800      	adds	r0, r0, r0
 803e75e:	4164      	adcs	r4, r4
 803e760:	1880      	adds	r0, r0, r2
 803e762:	415c      	adcs	r4, r3
 803e764:	d2c8      	bcs.n	803e6f8 <__aeabi_ddiv+0x8c>
 803e766:	1800      	adds	r0, r0, r0
 803e768:	4164      	adcs	r4, r4
 803e76a:	1880      	adds	r0, r0, r2
 803e76c:	415c      	adcs	r4, r3
 803e76e:	d2c8      	bcs.n	803e702 <__aeabi_ddiv+0x96>
 803e770:	1800      	adds	r0, r0, r0
 803e772:	4164      	adcs	r4, r4
 803e774:	3e01      	subs	r6, #1
 803e776:	d017      	beq.n	803e7a8 <__aeabi_ddiv+0x13c>
 803e778:	1880      	adds	r0, r0, r2
 803e77a:	415c      	adcs	r4, r3
 803e77c:	d2c8      	bcs.n	803e710 <__aeabi_ddiv+0xa4>
 803e77e:	1800      	adds	r0, r0, r0
 803e780:	4164      	adcs	r4, r4
 803e782:	1880      	adds	r0, r0, r2
 803e784:	415c      	adcs	r4, r3
 803e786:	d2c8      	bcs.n	803e71a <__aeabi_ddiv+0xae>
 803e788:	1800      	adds	r0, r0, r0
 803e78a:	4164      	adcs	r4, r4
 803e78c:	1880      	adds	r0, r0, r2
 803e78e:	415c      	adcs	r4, r3
 803e790:	d2c8      	bcs.n	803e724 <__aeabi_ddiv+0xb8>
 803e792:	1800      	adds	r0, r0, r0
 803e794:	4164      	adcs	r4, r4
 803e796:	0209      	lsls	r1, r1, #8
 803e798:	eb01 6115 	add.w	r1, r1, r5, lsr #24
 803e79c:	022d      	lsls	r5, r5, #8
 803e79e:	4045      	eors	r5, r0
 803e7a0:	f020 00ff 	bic.w	r0, r0, #255	; 0xff
 803e7a4:	4045      	eors	r5, r0
 803e7a6:	e7cc      	b.n	803e742 <__aeabi_ddiv+0xd6>
 803e7a8:	1880      	adds	r0, r0, r2
 803e7aa:	415c      	adcs	r4, r3
 803e7ac:	d31f      	bcc.n	803e7ee <__aeabi_ddiv+0x182>
 803e7ae:	0942      	lsrs	r2, r0, #5
 803e7b0:	bf18      	it	ne
 803e7b2:	f044 0401 	orrne.w	r4, r4, #1
 803e7b6:	0149      	lsls	r1, r1, #5
 803e7b8:	eb01 61d5 	add.w	r1, r1, r5, lsr #27
 803e7bc:	f000 001f 	and.w	r0, r0, #31
 803e7c0:	eb00 1045 	add.w	r0, r0, r5, lsl #5
 803e7c4:	f421 1180 	bic.w	r1, r1, #1048576	; 0x100000
 803e7c8:	ea41 010e 	orr.w	r1, r1, lr
 803e7cc:	3001      	adds	r0, #1
 803e7ce:	f141 0100 	adc.w	r1, r1, #0
 803e7d2:	4224      	tst	r4, r4
 803e7d4:	bf08      	it	eq
 803e7d6:	f020 0001 	biceq.w	r0, r0, #1
 803e7da:	f5b7 6f00 	cmp.w	r7, #2048	; 0x800
 803e7de:	da3e      	bge.n	803e85e <__aeabi_ddiv+0x1f2>
 803e7e0:	3f01      	subs	r7, #1
 803e7e2:	dd49      	ble.n	803e878 <__aeabi_ddiv+0x20c>
 803e7e4:	eb01 5107 	add.w	r1, r1, r7, lsl #20
 803e7e8:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 803e7ec:	4770      	bx	lr
 803e7ee:	0149      	lsls	r1, r1, #5
 803e7f0:	eb01 61d5 	add.w	r1, r1, r5, lsr #27
 803e7f4:	f000 001f 	and.w	r0, r0, #31
 803e7f8:	eb00 1045 	add.w	r0, r0, r5, lsl #5
 803e7fc:	f421 1180 	bic.w	r1, r1, #1048576	; 0x100000
 803e800:	ea41 010e 	orr.w	r1, r1, lr
 803e804:	f5b7 6f00 	cmp.w	r7, #2048	; 0x800
 803e808:	da29      	bge.n	803e85e <__aeabi_ddiv+0x1f2>
 803e80a:	3f01      	subs	r7, #1
 803e80c:	dd34      	ble.n	803e878 <__aeabi_ddiv+0x20c>
 803e80e:	eb01 5107 	add.w	r1, r1, r7, lsl #20
 803e812:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 803e816:	4770      	bx	lr
 803e818:	4200      	tst	r0, r0
 803e81a:	bf18      	it	ne
 803e81c:	f041 0101 	orrne.w	r1, r1, #1
 803e820:	4212      	tst	r2, r2
 803e822:	bf18      	it	ne
 803e824:	f043 0301 	orrne.w	r3, r3, #1
 803e828:	ebb7 0f41 	cmp.w	r7, r1, lsl #1
 803e82c:	bf2c      	ite	cs
 803e82e:	ebb7 0f43 	cmpcs.w	r7, r3, lsl #1
 803e832:	e01c      	bcc.n	803e86e <__aeabi_ddiv+0x202>
 803e834:	ebb7 0f41 	cmp.w	r7, r1, lsl #1
 803e838:	bf04      	itt	eq
 803e83a:	ebb7 0f43 	cmpeq.w	r7, r3, lsl #1
 803e83e:	e016      	beq.n	803e86e <__aeabi_ddiv+0x202>
 803e840:	ea17 0f41 	tst.w	r7, r1, lsl #1
 803e844:	bf04      	itt	eq
 803e846:	ea17 0f43 	tsteq.w	r7, r3, lsl #1
 803e84a:	e010      	beq.n	803e86e <__aeabi_ddiv+0x202>
 803e84c:	ea17 0f41 	tst.w	r7, r1, lsl #1
 803e850:	d012      	beq.n	803e878 <__aeabi_ddiv+0x20c>
 803e852:	ea17 0f43 	tst.w	r7, r3, lsl #1
 803e856:	d002      	beq.n	803e85e <__aeabi_ddiv+0x1f2>
 803e858:	ebb7 0f43 	cmp.w	r7, r3, lsl #1
 803e85c:	d00c      	beq.n	803e878 <__aeabi_ddiv+0x20c>
 803e85e:	f04e 41fe 	orr.w	r1, lr, #2130706432	; 0x7f000000
 803e862:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 803e866:	2000      	movs	r0, #0
 803e868:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 803e86c:	4770      	bx	lr
 803e86e:	f04f 41fe 	mov.w	r1, #2130706432	; 0x7f000000
 803e872:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
 803e876:	e7f6      	b.n	803e866 <__aeabi_ddiv+0x1fa>
 803e878:	4671      	mov	r1, lr
 803e87a:	e7f4      	b.n	803e866 <__aeabi_ddiv+0x1fa>
 803e87c:	ffe00000 	.word	0xffe00000

0803e880 <__float32_signbit>:
 803e880:	ee10 0a10 	vmov	r0, s0
 803e884:	f000 4000 	and.w	r0, r0, #2147483648	; 0x80000000
 803e888:	4770      	bx	lr

0803e88a <__float32_isinf>:
 803e88a:	ee10 0a10 	vmov	r0, s0
 803e88e:	ea4f 0040 	mov.w	r0, r0, lsl #1
 803e892:	f1b0 4f7f 	cmp.w	r0, #4278190080	; 0xff000000
 803e896:	bf0c      	ite	eq
 803e898:	2001      	moveq	r0, #1
 803e89a:	2000      	movne	r0, #0
 803e89c:	4770      	bx	lr

0803e89e <__float32_isnan>:
 803e89e:	ee10 0a10 	vmov	r0, s0
 803e8a2:	0041      	lsls	r1, r0, #1
 803e8a4:	2000      	movs	r0, #0
 803e8a6:	f1b1 4f7f 	cmp.w	r1, #4278190080	; 0xff000000
 803e8aa:	bf18      	it	ne
 803e8ac:	eb50 0000 	adcsne.w	r0, r0, r0
 803e8b0:	4770      	bx	lr
	...

0803e8b4 <atan(float)>:
 803e8b4:	b510      	push	{r4, lr}
 803e8b6:	ed2d 8b02 	vpush	{d8}
 803e8ba:	eef0 8a40 	vmov.f32	s17, s0
 803e8be:	f000 f93b 	bl	803eb38 <fabs(float)>
 803e8c2:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 803e8c6:	eeb4 0ae7 	vcmpe.f32	s0, s15
 803e8ca:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 803e8ce:	eeb0 8a40 	vmov.f32	s16, s0
 803e8d2:	dd6a      	ble.n	803e9aa <atan(float)+0xf6>
 803e8d4:	ee87 8a80 	vdiv.f32	s16, s15, s0
 803e8d8:	2303      	movs	r3, #3
 803e8da:	2402      	movs	r4, #2
 803e8dc:	eddf 7a34 	vldr	s15, [pc, #208]	; 803e9b0 <atan(float)+0xfc>
 803e8e0:	eeb4 8ae7 	vcmpe.f32	s16, s15
 803e8e4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 803e8e8:	dd12      	ble.n	803e910 <atan(float)+0x5c>
 803e8ea:	eddf 6a32 	vldr	s13, [pc, #200]	; 803e9b4 <atan(float)+0x100>
 803e8ee:	ed9f 7a32 	vldr	s14, [pc, #200]	; 803e9b8 <atan(float)+0x104>
 803e8f2:	eefe 7a00 	vmov.f32	s15, #224	; 0xbf000000 -0.5
 803e8f6:	eee8 7a26 	vfma.f32	s15, s16, s13
 803e8fa:	461c      	mov	r4, r3
 803e8fc:	eef6 6a00 	vmov.f32	s13, #96	; 0x3f000000  0.5
 803e900:	ee77 7ae6 	vsub.f32	s15, s15, s13
 803e904:	ee38 7a07 	vadd.f32	s14, s16, s14
 803e908:	ee77 7a88 	vadd.f32	s15, s15, s16
 803e90c:	ee87 8a87 	vdiv.f32	s16, s15, s14
 803e910:	eeb0 0a48 	vmov.f32	s0, s16
 803e914:	f000 f910 	bl	803eb38 <fabs(float)>
 803e918:	eddf 7a28 	vldr	s15, [pc, #160]	; 803e9bc <atan(float)+0x108>
 803e91c:	eeb4 0ae7 	vcmpe.f32	s0, s15
 803e920:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 803e924:	dd27      	ble.n	803e976 <atan(float)+0xc2>
 803e926:	ee68 7a08 	vmul.f32	s15, s16, s16
 803e92a:	eddf 4a25 	vldr	s9, [pc, #148]	; 803e9c0 <atan(float)+0x10c>
 803e92e:	eddf 3a25 	vldr	s7, [pc, #148]	; 803e9c4 <atan(float)+0x110>
 803e932:	ed9f 4a25 	vldr	s8, [pc, #148]	; 803e9c8 <atan(float)+0x114>
 803e936:	eddf 5a25 	vldr	s11, [pc, #148]	; 803e9cc <atan(float)+0x118>
 803e93a:	ed9f 5a25 	vldr	s10, [pc, #148]	; 803e9d0 <atan(float)+0x11c>
 803e93e:	ed9f 6a25 	vldr	s12, [pc, #148]	; 803e9d4 <atan(float)+0x120>
 803e942:	ed9f 7a25 	vldr	s14, [pc, #148]	; 803e9d8 <atan(float)+0x124>
 803e946:	eddf 6a25 	vldr	s13, [pc, #148]	; 803e9dc <atan(float)+0x128>
 803e94a:	ee77 4aa4 	vadd.f32	s9, s15, s9
 803e94e:	eea7 4aa3 	vfma.f32	s8, s15, s7
 803e952:	eee7 5aa4 	vfma.f32	s11, s15, s9
 803e956:	eea7 5a84 	vfma.f32	s10, s15, s8
 803e95a:	eea7 6aa5 	vfma.f32	s12, s15, s11
 803e95e:	eea7 7a85 	vfma.f32	s14, s15, s10
 803e962:	eee7 6a86 	vfma.f32	s13, s15, s12
 803e966:	ee27 7a87 	vmul.f32	s14, s15, s14
 803e96a:	eef0 7a66 	vmov.f32	s15, s13
 803e96e:	eec7 6a27 	vdiv.f32	s13, s14, s15
 803e972:	eea6 8a88 	vfma.f32	s16, s13, s16
 803e976:	2c01      	cmp	r4, #1
 803e978:	dd14      	ble.n	803e9a4 <atan(float)+0xf0>
 803e97a:	eeb1 8a48 	vneg.f32	s16, s16
 803e97e:	4b18      	ldr	r3, [pc, #96]	; (803e9e0 <atan(float)+0x12c>)
 803e980:	eb03 0484 	add.w	r4, r3, r4, lsl #2
 803e984:	edd4 7a00 	vldr	s15, [r4]
 803e988:	ee38 8a27 	vadd.f32	s16, s16, s15
 803e98c:	eef5 8ac0 	vcmpe.f32	s17, #0.0
 803e990:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 803e994:	bf48      	it	mi
 803e996:	eeb1 8a48 	vnegmi.f32	s16, s16
 803e99a:	eeb0 0a48 	vmov.f32	s0, s16
 803e99e:	ecbd 8b02 	vpop	{d8}
 803e9a2:	bd10      	pop	{r4, pc}
 803e9a4:	2c00      	cmp	r4, #0
 803e9a6:	d0f1      	beq.n	803e98c <atan(float)+0xd8>
 803e9a8:	e7e9      	b.n	803e97e <atan(float)+0xca>
 803e9aa:	2301      	movs	r3, #1
 803e9ac:	2400      	movs	r4, #0
 803e9ae:	e795      	b.n	803e8dc <atan(float)+0x28>
 803e9b0:	3e8930a3 	.word	0x3e8930a3
 803e9b4:	3f3b67af 	.word	0x3f3b67af
 803e9b8:	3fddb3d7 	.word	0x3fddb3d7
 803e9bc:	2edbe6ff 	.word	0x2edbe6ff
 803e9c0:	4170624f 	.word	0x4170624f
 803e9c4:	bf566bd7 	.word	0xbf566bd7
 803e9c8:	c107e9fb 	.word	0xc107e9fb
 803e9cc:	426e5052 	.word	0x426e5052
 803e9d0:	c1a40bfe 	.word	0xc1a40bfe
 803e9d4:	42ac5090 	.word	0x42ac5090
 803e9d8:	c15b0533 	.word	0xc15b0533
 803e9dc:	422443e6 	.word	0x422443e6
 803e9e0:	0804b884 	.word	0x0804b884

0803e9e4 <modf(float, float*)>:
 803e9e4:	eddf 7a13 	vldr	s15, [pc, #76]	; 803ea34 <modf(float, float*)+0x50>
 803e9e8:	eeb4 0a67 	vcmp.f32	s0, s15
 803e9ec:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 803e9f0:	d012      	beq.n	803ea18 <modf(float, float*)+0x34>
 803e9f2:	ee10 2a10 	vmov	r2, s0
 803e9f6:	f3c2 53c7 	ubfx	r3, r2, #23, #8
 803e9fa:	3b7f      	subs	r3, #127	; 0x7f
 803e9fc:	d411      	bmi.n	803ea22 <modf(float, float*)+0x3e>
 803e9fe:	2b16      	cmp	r3, #22
 803ea00:	dc12      	bgt.n	803ea28 <modf(float, float*)+0x44>
 803ea02:	490d      	ldr	r1, [pc, #52]	; (803ea38 <modf(float, float*)+0x54>)
 803ea04:	fa21 f303 	lsr.w	r3, r1, r3
 803ea08:	ea22 0203 	bic.w	r2, r2, r3
 803ea0c:	ee07 2a90 	vmov	s15, r2
 803ea10:	6002      	str	r2, [r0, #0]
 803ea12:	ee30 0a67 	vsub.f32	s0, s0, s15
 803ea16:	4770      	bx	lr
 803ea18:	edc0 7a00 	vstr	s15, [r0]
 803ea1c:	eeb0 0a67 	vmov.f32	s0, s15
 803ea20:	4770      	bx	lr
 803ea22:	edc0 7a00 	vstr	s15, [r0]
 803ea26:	4770      	bx	lr
 803ea28:	ed80 0a00 	vstr	s0, [r0]
 803ea2c:	eeb0 0a67 	vmov.f32	s0, s15
 803ea30:	4770      	bx	lr
 803ea32:	bf00      	nop
 803ea34:	00000000 	.word	0x00000000
 803ea38:	007fffff 	.word	0x007fffff

0803ea3c <fmod(float, float)>:
 803ea3c:	b500      	push	{lr}
 803ea3e:	ed2d 8b02 	vpush	{d8}
 803ea42:	eef5 0a40 	vcmp.f32	s1, #0.0
 803ea46:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 803ea4a:	b083      	sub	sp, #12
 803ea4c:	d04b      	beq.n	803eae6 <fmod(float, float)+0xaa>
 803ea4e:	eeb0 8a60 	vmov.f32	s16, s1
 803ea52:	eef0 8a40 	vmov.f32	s17, s0
 803ea56:	f7ff ff22 	bl	803e89e <__float32_isnan>
 803ea5a:	b130      	cbz	r0, 803ea6a <fmod(float, float)+0x2e>
 803ea5c:	eeb0 0a68 	vmov.f32	s0, s17
 803ea60:	b003      	add	sp, #12
 803ea62:	ecbd 8b02 	vpop	{d8}
 803ea66:	f85d fb04 	ldr.w	pc, [sp], #4
 803ea6a:	eeb0 0a48 	vmov.f32	s0, s16
 803ea6e:	f7ff ff16 	bl	803e89e <__float32_isnan>
 803ea72:	2800      	cmp	r0, #0
 803ea74:	d143      	bne.n	803eafe <fmod(float, float)+0xc2>
 803ea76:	eef5 8a40 	vcmp.f32	s17, #0.0
 803ea7a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 803ea7e:	d0ed      	beq.n	803ea5c <fmod(float, float)+0x20>
 803ea80:	eeb0 0a68 	vmov.f32	s0, s17
 803ea84:	f7ff ff01 	bl	803e88a <__float32_isinf>
 803ea88:	2800      	cmp	r0, #0
 803ea8a:	d13f      	bne.n	803eb0c <fmod(float, float)+0xd0>
 803ea8c:	eeb0 0a48 	vmov.f32	s0, s16
 803ea90:	f7ff fefb 	bl	803e88a <__float32_isinf>
 803ea94:	2800      	cmp	r0, #0
 803ea96:	d1e1      	bne.n	803ea5c <fmod(float, float)+0x20>
 803ea98:	eeb0 0a48 	vmov.f32	s0, s16
 803ea9c:	f000 f84c 	bl	803eb38 <fabs(float)>
 803eaa0:	eeb0 8a40 	vmov.f32	s16, s0
 803eaa4:	ee88 0a88 	vdiv.f32	s0, s17, s16
 803eaa8:	a801      	add	r0, sp, #4
 803eaaa:	f7ff ff9b 	bl	803e9e4 <modf(float, float*)>
 803eaae:	eddd 7a01 	vldr	s15, [sp, #4]
 803eab2:	eef5 8ac0 	vcmpe.f32	s17, #0.0
 803eab6:	eeb0 0a68 	vmov.f32	s0, s17
 803eaba:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 803eabe:	eea8 0a67 	vfms.f32	s0, s16, s15
 803eac2:	eeb1 7a48 	vneg.f32	s14, s16
 803eac6:	dd24      	ble.n	803eb12 <fmod(float, float)+0xd6>
 803eac8:	eeb4 8ac0 	vcmpe.f32	s16, s0
 803eacc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 803ead0:	bf98      	it	ls
 803ead2:	ee30 0a48 	vsubls.f32	s0, s0, s16
 803ead6:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 803eada:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 803eade:	d5bf      	bpl.n	803ea60 <fmod(float, float)+0x24>
 803eae0:	ee30 0a08 	vadd.f32	s0, s0, s16
 803eae4:	e7bc      	b.n	803ea60 <fmod(float, float)+0x24>
 803eae6:	f000 f9df 	bl	803eea8 <__aeabi_errno_addr>
 803eaea:	4b11      	ldr	r3, [pc, #68]	; (803eb30 <fmod(float, float)+0xf4>)
 803eaec:	ed9f 0a11 	vldr	s0, [pc, #68]	; 803eb34 <fmod(float, float)+0xf8>
 803eaf0:	681b      	ldr	r3, [r3, #0]
 803eaf2:	6003      	str	r3, [r0, #0]
 803eaf4:	b003      	add	sp, #12
 803eaf6:	ecbd 8b02 	vpop	{d8}
 803eafa:	f85d fb04 	ldr.w	pc, [sp], #4
 803eafe:	eeb0 0a48 	vmov.f32	s0, s16
 803eb02:	b003      	add	sp, #12
 803eb04:	ecbd 8b02 	vpop	{d8}
 803eb08:	f85d fb04 	ldr.w	pc, [sp], #4
 803eb0c:	ed9f 0a09 	vldr	s0, [pc, #36]	; 803eb34 <fmod(float, float)+0xf8>
 803eb10:	e7a6      	b.n	803ea60 <fmod(float, float)+0x24>
 803eb12:	eeb4 0ac7 	vcmpe.f32	s0, s14
 803eb16:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 803eb1a:	bf98      	it	ls
 803eb1c:	ee30 0a08 	vaddls.f32	s0, s0, s16
 803eb20:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 803eb24:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 803eb28:	dd9a      	ble.n	803ea60 <fmod(float, float)+0x24>
 803eb2a:	ee30 0a48 	vsub.f32	s0, s0, s16
 803eb2e:	e797      	b.n	803ea60 <fmod(float, float)+0x24>
 803eb30:	0804baf0 	.word	0x0804baf0
 803eb34:	7fc00000 	.word	0x7fc00000

0803eb38 <fabs(float)>:
 803eb38:	eeb0 0ac0 	vabs.f32	s0, s0
 803eb3c:	4770      	bx	lr
	...

0803eb40 <floor(float)>:
 803eb40:	b500      	push	{lr}
 803eb42:	ee10 0a10 	vmov	r0, s0
 803eb46:	f000 f803 	bl	803eb50 <floor(float)+0x10>
 803eb4a:	ee00 0a10 	vmov	s0, r0
 803eb4e:	bd00      	pop	{pc}
 803eb50:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 803eb54:	ebb3 0f40 	cmp.w	r3, r0, lsl #1
 803eb58:	d91f      	bls.n	803eb9a <floor(float)+0x5a>
 803eb5a:	0041      	lsls	r1, r0, #1
 803eb5c:	bf08      	it	eq
 803eb5e:	4770      	bxeq	lr
 803eb60:	ea03 0240 	and.w	r2, r3, r0, lsl #1
 803eb64:	0e12      	lsrs	r2, r2, #24
 803eb66:	3a7f      	subs	r2, #127	; 0x7f
 803eb68:	db11      	blt.n	803eb8e <floor(float)+0x4e>
 803eb6a:	2a17      	cmp	r2, #23
 803eb6c:	bfa8      	it	ge
 803eb6e:	4770      	bxge	lr
 803eb70:	4b0b      	ldr	r3, [pc, #44]	; (803eba0 <floor(float)+0x60>)
 803eb72:	40d3      	lsrs	r3, r2
 803eb74:	4218      	tst	r0, r3
 803eb76:	ea20 0003 	bic.w	r0, r0, r3
 803eb7a:	bf18      	it	ne
 803eb7c:	f010 4f00 	tstne.w	r0, #2147483648	; 0x80000000
 803eb80:	bf08      	it	eq
 803eb82:	4770      	bxeq	lr
 803eb84:	f44f 0100 	mov.w	r1, #8388608	; 0x800000
 803eb88:	40d1      	lsrs	r1, r2
 803eb8a:	1840      	adds	r0, r0, r1
 803eb8c:	4770      	bx	lr
 803eb8e:	f010 4f00 	tst.w	r0, #2147483648	; 0x80000000
 803eb92:	bf0c      	ite	eq
 803eb94:	2000      	moveq	r0, #0
 803eb96:	4803      	ldrne	r0, [pc, #12]	; (803eba4 <floor(float)+0x64>)
 803eb98:	4770      	bx	lr
 803eb9a:	bf18      	it	ne
 803eb9c:	4802      	ldrne	r0, [pc, #8]	; (803eba8 <floor(float)+0x68>)
 803eb9e:	4770      	bx	lr
 803eba0:	007fffff 	.word	0x007fffff
 803eba4:	bf800000 	.word	0xbf800000
 803eba8:	7fc00000 	.word	0x7fc00000

0803ebac <ldexp(float, int)>:
 803ebac:	b500      	push	{lr}
 803ebae:	4601      	mov	r1, r0
 803ebb0:	ee10 0a10 	vmov	r0, s0
 803ebb4:	f000 f803 	bl	803ebbe <ldexp(float, int)+0x12>
 803ebb8:	ee00 0a10 	vmov	s0, r0
 803ebbc:	bd00      	pop	{pc}
 803ebbe:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 803ebc2:	ebb3 0f40 	cmp.w	r3, r0, lsl #1
 803ebc6:	bf98      	it	ls
 803ebc8:	4770      	bxls	lr
 803ebca:	ea13 0240 	ands.w	r2, r3, r0, lsl #1
 803ebce:	bf04      	itt	eq
 803ebd0:	f000 4000 	andeq.w	r0, r0, #2147483648	; 0x80000000
 803ebd4:	4770      	bxeq	lr
 803ebd6:	eb11 6212 	adds.w	r2, r1, r2, lsr #24
 803ebda:	bfdc      	itt	le
 803ebdc:	f000 4000 	andle.w	r0, r0, #2147483648	; 0x80000000
 803ebe0:	4770      	bxle	lr
 803ebe2:	2aff      	cmp	r2, #255	; 0xff
 803ebe4:	bf3c      	itt	cc
 803ebe6:	eb00 50c1 	addcc.w	r0, r0, r1, lsl #23
 803ebea:	4770      	bxcc	lr
 803ebec:	0040      	lsls	r0, r0, #1
 803ebee:	ea4f 0033 	mov.w	r0, r3, rrx
 803ebf2:	4770      	bx	lr

0803ebf4 <frexp(float, int*)>:
 803ebf4:	b500      	push	{lr}
 803ebf6:	4601      	mov	r1, r0
 803ebf8:	ee10 0a10 	vmov	r0, s0
 803ebfc:	f000 f803 	bl	803ec06 <frexp(float, int*)+0x12>
 803ec00:	ee00 0a10 	vmov	s0, r0
 803ec04:	bd00      	pop	{pc}
 803ec06:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 803ec0a:	ebb3 0f40 	cmp.w	r3, r0, lsl #1
 803ec0e:	bf98      	it	ls
 803ec10:	4770      	bxls	lr
 803ec12:	ea13 0240 	ands.w	r2, r3, r0, lsl #1
 803ec16:	d007      	beq.n	803ec28 <frexp(float, int*)+0x34>
 803ec18:	0e12      	lsrs	r2, r2, #24
 803ec1a:	3a7e      	subs	r2, #126	; 0x7e
 803ec1c:	600a      	str	r2, [r1, #0]
 803ec1e:	ea20 0053 	bic.w	r0, r0, r3, lsr #1
 803ec22:	f040 507c 	orr.w	r0, r0, #1056964608	; 0x3f000000
 803ec26:	4770      	bx	lr
 803ec28:	600a      	str	r2, [r1, #0]
 803ec2a:	f000 4000 	and.w	r0, r0, #2147483648	; 0x80000000
 803ec2e:	4770      	bx	lr

0803ec30 <sqrt(float)>:
 803ec30:	eeb1 0ac0 	vsqrt.f32	s0, s0
 803ec34:	4770      	bx	lr
	...

0803ec38 <round(float)>:
 803ec38:	ee10 3a10 	vmov	r3, s0
 803ec3c:	f3c3 52c7 	ubfx	r2, r3, #23, #8
 803ec40:	3a7f      	subs	r2, #127	; 0x7f
 803ec42:	2a16      	cmp	r2, #22
 803ec44:	ee10 1a10 	vmov	r1, s0
 803ec48:	dc0e      	bgt.n	803ec68 <round(float)+0x30>
 803ec4a:	2a00      	cmp	r2, #0
 803ec4c:	db11      	blt.n	803ec72 <round(float)+0x3a>
 803ec4e:	480c      	ldr	r0, [pc, #48]	; (803ec80 <round(float)+0x48>)
 803ec50:	4110      	asrs	r0, r2
 803ec52:	4203      	tst	r3, r0
 803ec54:	d005      	beq.n	803ec62 <round(float)+0x2a>
 803ec56:	f44f 0380 	mov.w	r3, #4194304	; 0x400000
 803ec5a:	4113      	asrs	r3, r2
 803ec5c:	440b      	add	r3, r1
 803ec5e:	ea23 0300 	bic.w	r3, r3, r0
 803ec62:	ee00 3a10 	vmov	s0, r3
 803ec66:	4770      	bx	lr
 803ec68:	2a80      	cmp	r2, #128	; 0x80
 803ec6a:	d1fa      	bne.n	803ec62 <round(float)+0x2a>
 803ec6c:	ee30 0a00 	vadd.f32	s0, s0, s0
 803ec70:	4770      	bx	lr
 803ec72:	3201      	adds	r2, #1
 803ec74:	f003 4300 	and.w	r3, r3, #2147483648	; 0x80000000
 803ec78:	d1f3      	bne.n	803ec62 <round(float)+0x2a>
 803ec7a:	f043 537e 	orr.w	r3, r3, #1065353216	; 0x3f800000
 803ec7e:	e7f0      	b.n	803ec62 <round(float)+0x2a>
 803ec80:	007fffff 	.word	0x007fffff

0803ec84 <__RAL_ascii_isctype>:
 803ec84:	287f      	cmp	r0, #127	; 0x7f
 803ec86:	d805      	bhi.n	803ec94 <__RAL_ascii_isctype+0x10>
 803ec88:	4b03      	ldr	r3, [pc, #12]	; (803ec98 <__RAL_ascii_isctype+0x14>)
 803ec8a:	5c18      	ldrb	r0, [r3, r0]
 803ec8c:	4b03      	ldr	r3, [pc, #12]	; (803ec9c <__RAL_ascii_isctype+0x18>)
 803ec8e:	5c5b      	ldrb	r3, [r3, r1]
 803ec90:	4018      	ands	r0, r3
 803ec92:	4770      	bx	lr
 803ec94:	2000      	movs	r0, #0
 803ec96:	4770      	bx	lr
 803ec98:	0804b89c 	.word	0x0804b89c
 803ec9c:	0804b91c 	.word	0x0804b91c

0803eca0 <__RAL_ascii_toupper>:
 803eca0:	f1a0 0361 	sub.w	r3, r0, #97	; 0x61
 803eca4:	2b19      	cmp	r3, #25
 803eca6:	bf98      	it	ls
 803eca8:	3820      	subls	r0, #32
 803ecaa:	4770      	bx	lr

0803ecac <__RAL_ascii_tolower>:
 803ecac:	f1a0 0341 	sub.w	r3, r0, #65	; 0x41
 803ecb0:	2b19      	cmp	r3, #25
 803ecb2:	bf98      	it	ls
 803ecb4:	3020      	addls	r0, #32
 803ecb6:	4770      	bx	lr

0803ecb8 <__RAL_ascii_iswctype>:
 803ecb8:	287f      	cmp	r0, #127	; 0x7f
 803ecba:	d805      	bhi.n	803ecc8 <__RAL_ascii_iswctype+0x10>
 803ecbc:	4b03      	ldr	r3, [pc, #12]	; (803eccc <__RAL_ascii_iswctype+0x14>)
 803ecbe:	5c18      	ldrb	r0, [r3, r0]
 803ecc0:	4b03      	ldr	r3, [pc, #12]	; (803ecd0 <__RAL_ascii_iswctype+0x18>)
 803ecc2:	5c5b      	ldrb	r3, [r3, r1]
 803ecc4:	4018      	ands	r0, r3
 803ecc6:	4770      	bx	lr
 803ecc8:	2000      	movs	r0, #0
 803ecca:	4770      	bx	lr
 803eccc:	0804b89c 	.word	0x0804b89c
 803ecd0:	0804b91c 	.word	0x0804b91c

0803ecd4 <__RAL_ascii_towupper>:
 803ecd4:	f1a0 0361 	sub.w	r3, r0, #97	; 0x61
 803ecd8:	2b19      	cmp	r3, #25
 803ecda:	bf98      	it	ls
 803ecdc:	3820      	subls	r0, #32
 803ecde:	4770      	bx	lr

0803ece0 <__RAL_ascii_towlower>:
 803ece0:	f1a0 0341 	sub.w	r3, r0, #65	; 0x41
 803ece4:	2b19      	cmp	r3, #25
 803ece6:	bf98      	it	ls
 803ece8:	3020      	addls	r0, #32
 803ecea:	4770      	bx	lr

0803ecec <__RAL_ascii_wctomb>:
 803ecec:	297f      	cmp	r1, #127	; 0x7f
 803ecee:	bf9a      	itte	ls
 803ecf0:	7001      	strbls	r1, [r0, #0]
 803ecf2:	2001      	movls	r0, #1
 803ecf4:	f06f 002e 	mvnhi.w	r0, #46	; 0x2e
 803ecf8:	4770      	bx	lr

0803ecfa <__RAL_ascii_mbtowc>:
 803ecfa:	b15a      	cbz	r2, 803ed14 <__RAL_ascii_mbtowc+0x1a>
 803ecfc:	780a      	ldrb	r2, [r1, #0]
 803ecfe:	2a7f      	cmp	r2, #127	; 0x7f
 803ed00:	d80a      	bhi.n	803ed18 <__RAL_ascii_mbtowc+0x1e>
 803ed02:	b100      	cbz	r0, 803ed06 <__RAL_ascii_mbtowc+0xc>
 803ed04:	6002      	str	r2, [r0, #0]
 803ed06:	2100      	movs	r1, #0
 803ed08:	6019      	str	r1, [r3, #0]
 803ed0a:	6059      	str	r1, [r3, #4]
 803ed0c:	1a50      	subs	r0, r2, r1
 803ed0e:	bf18      	it	ne
 803ed10:	2001      	movne	r0, #1
 803ed12:	4770      	bx	lr
 803ed14:	2000      	movs	r0, #0
 803ed16:	4770      	bx	lr
 803ed18:	f06f 002e 	mvn.w	r0, #46	; 0x2e
 803ed1c:	4770      	bx	lr
	...

0803ed20 <__RAL_pow10f>:
 803ed20:	2800      	cmp	r0, #0
 803ed22:	db16      	blt.n	803ed52 <__RAL_pow10f+0x32>
 803ed24:	2800      	cmp	r0, #0
 803ed26:	dd17      	ble.n	803ed58 <__RAL_pow10f+0x38>
 803ed28:	2200      	movs	r2, #0
 803ed2a:	eeb7 0a00 	vmov.f32	s0, #112	; 0x3f800000  1.0
 803ed2e:	4b0c      	ldr	r3, [pc, #48]	; (803ed60 <__RAL_pow10f+0x40>)
 803ed30:	f010 0f01 	tst.w	r0, #1
 803ed34:	bf1c      	itt	ne
 803ed36:	edd3 7a00 	vldrne	s15, [r3]
 803ed3a:	ee20 0a27 	vmulne.f32	s0, s0, s15
 803ed3e:	1040      	asrs	r0, r0, #1
 803ed40:	3304      	adds	r3, #4
 803ed42:	2800      	cmp	r0, #0
 803ed44:	dcf4      	bgt.n	803ed30 <__RAL_pow10f+0x10>
 803ed46:	b14a      	cbz	r2, 803ed5c <__RAL_pow10f+0x3c>
 803ed48:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 803ed4c:	ee87 0a80 	vdiv.f32	s0, s15, s0
 803ed50:	4770      	bx	lr
 803ed52:	4240      	negs	r0, r0
 803ed54:	2201      	movs	r2, #1
 803ed56:	e7e8      	b.n	803ed2a <__RAL_pow10f+0xa>
 803ed58:	eeb7 0a00 	vmov.f32	s0, #112	; 0x3f800000  1.0
 803ed5c:	4770      	bx	lr
 803ed5e:	bf00      	nop
 803ed60:	0804baf4 	.word	0x0804baf4

0803ed64 <__putc>:
 803ed64:	b538      	push	{r3, r4, r5, lr}
 803ed66:	4604      	mov	r4, r0
 803ed68:	4608      	mov	r0, r1
 803ed6a:	68a2      	ldr	r2, [r4, #8]
 803ed6c:	b142      	cbz	r2, 803ed80 <__putc+0x1c>
 803ed6e:	6823      	ldr	r3, [r4, #0]
 803ed70:	6861      	ldr	r1, [r4, #4]
 803ed72:	1c5d      	adds	r5, r3, #1
 803ed74:	428d      	cmp	r5, r1
 803ed76:	bf08      	it	eq
 803ed78:	2000      	moveq	r0, #0
 803ed7a:	428b      	cmp	r3, r1
 803ed7c:	d208      	bcs.n	803ed90 <__putc+0x2c>
 803ed7e:	54d0      	strb	r0, [r2, r3]
 803ed80:	68e3      	ldr	r3, [r4, #12]
 803ed82:	b12b      	cbz	r3, 803ed90 <__putc+0x2c>
 803ed84:	6821      	ldr	r1, [r4, #0]
 803ed86:	6862      	ldr	r2, [r4, #4]
 803ed88:	4291      	cmp	r1, r2
 803ed8a:	d201      	bcs.n	803ed90 <__putc+0x2c>
 803ed8c:	4621      	mov	r1, r4
 803ed8e:	4798      	blx	r3
 803ed90:	6823      	ldr	r3, [r4, #0]
 803ed92:	3301      	adds	r3, #1
 803ed94:	6023      	str	r3, [r4, #0]
 803ed96:	bd38      	pop	{r3, r4, r5, pc}

0803ed98 <__RAL_print_padding>:
 803ed98:	b570      	push	{r4, r5, r6, lr}
 803ed9a:	1e4c      	subs	r4, r1, #1
 803ed9c:	d409      	bmi.n	803edb2 <__RAL_print_padding+0x1a>
 803ed9e:	4616      	mov	r6, r2
 803eda0:	b2c5      	uxtb	r5, r0
 803eda2:	4629      	mov	r1, r5
 803eda4:	4630      	mov	r0, r6
 803eda6:	f7ff ffdd 	bl	803ed64 <__putc>
 803edaa:	3c01      	subs	r4, #1
 803edac:	f1b4 3fff 	cmp.w	r4, #4294967295
 803edb0:	d1f7      	bne.n	803eda2 <__RAL_print_padding+0xa>
 803edb2:	bd70      	pop	{r4, r5, r6, pc}

0803edb4 <__RAL_pre_padding>:
 803edb4:	f010 0f10 	tst.w	r0, #16
 803edb8:	d108      	bne.n	803edcc <__RAL_pre_padding+0x18>
 803edba:	b508      	push	{r3, lr}
 803edbc:	f410 7f00 	tst.w	r0, #512	; 0x200
 803edc0:	bf14      	ite	ne
 803edc2:	2030      	movne	r0, #48	; 0x30
 803edc4:	2020      	moveq	r0, #32
 803edc6:	f7ff ffe7 	bl	803ed98 <__RAL_print_padding>
 803edca:	bd08      	pop	{r3, pc}
 803edcc:	4770      	bx	lr

0803edce <abs>:
 803edce:	2800      	cmp	r0, #0
 803edd0:	bfb8      	it	lt
 803edd2:	4240      	neglt	r0, r0
 803edd4:	4770      	bx	lr
	...

0803edd8 <atexit>:
 803edd8:	4b06      	ldr	r3, [pc, #24]	; (803edf4 <atexit+0x1c>)
 803edda:	681b      	ldr	r3, [r3, #0]
 803eddc:	2b1f      	cmp	r3, #31
 803edde:	d901      	bls.n	803ede4 <atexit+0xc>
 803ede0:	2001      	movs	r0, #1
 803ede2:	4770      	bx	lr
 803ede4:	4a04      	ldr	r2, [pc, #16]	; (803edf8 <atexit+0x20>)
 803ede6:	f842 0023 	str.w	r0, [r2, r3, lsl #2]
 803edea:	3301      	adds	r3, #1
 803edec:	4a01      	ldr	r2, [pc, #4]	; (803edf4 <atexit+0x1c>)
 803edee:	6013      	str	r3, [r2, #0]
 803edf0:	2000      	movs	r0, #0
 803edf2:	4770      	bx	lr
 803edf4:	200124d4 	.word	0x200124d4
 803edf8:	2001244c 	.word	0x2001244c

0803edfc <__aeabi_atexit>:
 803edfc:	b508      	push	{r3, lr}
 803edfe:	4608      	mov	r0, r1
 803ee00:	f7ff ffea 	bl	803edd8 <atexit>
 803ee04:	bd08      	pop	{r3, pc}
	...

0803ee08 <__RAL_isctype>:
 803ee08:	b508      	push	{r3, lr}
 803ee0a:	4b03      	ldr	r3, [pc, #12]	; (803ee18 <__RAL_isctype+0x10>)
 803ee0c:	685b      	ldr	r3, [r3, #4]
 803ee0e:	689b      	ldr	r3, [r3, #8]
 803ee10:	681b      	ldr	r3, [r3, #0]
 803ee12:	4798      	blx	r3
 803ee14:	bd08      	pop	{r3, pc}
 803ee16:	bf00      	nop
 803ee18:	200024ec 	.word	0x200024ec

0803ee1c <isupper>:
 803ee1c:	b508      	push	{r3, lr}
 803ee1e:	2107      	movs	r1, #7
 803ee20:	f7ff fff2 	bl	803ee08 <__RAL_isctype>
 803ee24:	bd08      	pop	{r3, pc}

0803ee26 <islower>:
 803ee26:	b508      	push	{r3, lr}
 803ee28:	2106      	movs	r1, #6
 803ee2a:	f7ff ffed 	bl	803ee08 <__RAL_isctype>
 803ee2e:	bd08      	pop	{r3, pc}

0803ee30 <isdigit>:
 803ee30:	b508      	push	{r3, lr}
 803ee32:	2104      	movs	r1, #4
 803ee34:	f7ff ffe8 	bl	803ee08 <__RAL_isctype>
 803ee38:	bd08      	pop	{r3, pc}

0803ee3a <__digit>:
 803ee3a:	b538      	push	{r3, r4, r5, lr}
 803ee3c:	4604      	mov	r4, r0
 803ee3e:	460d      	mov	r5, r1
 803ee40:	f7ff fff6 	bl	803ee30 <isdigit>
 803ee44:	b130      	cbz	r0, 803ee54 <__digit+0x1a>
 803ee46:	f1a4 0030 	sub.w	r0, r4, #48	; 0x30
 803ee4a:	42a8      	cmp	r0, r5
 803ee4c:	bfa8      	it	ge
 803ee4e:	f04f 30ff 	movge.w	r0, #4294967295
 803ee52:	bd38      	pop	{r3, r4, r5, pc}
 803ee54:	4620      	mov	r0, r4
 803ee56:	f7ff ffe6 	bl	803ee26 <islower>
 803ee5a:	b110      	cbz	r0, 803ee62 <__digit+0x28>
 803ee5c:	f1a4 0057 	sub.w	r0, r4, #87	; 0x57
 803ee60:	e7f3      	b.n	803ee4a <__digit+0x10>
 803ee62:	4620      	mov	r0, r4
 803ee64:	f7ff ffda 	bl	803ee1c <isupper>
 803ee68:	b110      	cbz	r0, 803ee70 <__digit+0x36>
 803ee6a:	f1a4 0037 	sub.w	r0, r4, #55	; 0x37
 803ee6e:	e7ec      	b.n	803ee4a <__digit+0x10>
 803ee70:	f04f 30ff 	mov.w	r0, #4294967295
 803ee74:	e7e9      	b.n	803ee4a <__digit+0x10>

0803ee76 <isspace>:
 803ee76:	b508      	push	{r3, lr}
 803ee78:	2108      	movs	r1, #8
 803ee7a:	f7ff ffc5 	bl	803ee08 <__RAL_isctype>
 803ee7e:	bd08      	pop	{r3, pc}

0803ee80 <tolower>:
 803ee80:	b508      	push	{r3, lr}
 803ee82:	4b03      	ldr	r3, [pc, #12]	; (803ee90 <tolower+0x10>)
 803ee84:	685b      	ldr	r3, [r3, #4]
 803ee86:	689b      	ldr	r3, [r3, #8]
 803ee88:	689b      	ldr	r3, [r3, #8]
 803ee8a:	4798      	blx	r3
 803ee8c:	bd08      	pop	{r3, pc}
 803ee8e:	bf00      	nop
 803ee90:	200024ec 	.word	0x200024ec

0803ee94 <toupper>:
 803ee94:	b508      	push	{r3, lr}
 803ee96:	4b03      	ldr	r3, [pc, #12]	; (803eea4 <toupper+0x10>)
 803ee98:	685b      	ldr	r3, [r3, #4]
 803ee9a:	689b      	ldr	r3, [r3, #8]
 803ee9c:	685b      	ldr	r3, [r3, #4]
 803ee9e:	4798      	blx	r3
 803eea0:	bd08      	pop	{r3, pc}
 803eea2:	bf00      	nop
 803eea4:	200024ec 	.word	0x200024ec

0803eea8 <__aeabi_errno_addr>:
 803eea8:	b500      	push	{lr}
 803eeaa:	f7fa f827 	bl	8038efc <__aeabi_read_tp>
 803eeae:	4b02      	ldr	r3, [pc, #8]	; (803eeb8 <__aeabi_errno_addr+0x10>)
 803eeb0:	4418      	add	r0, r3
 803eeb2:	f85d fb04 	ldr.w	pc, [sp], #4
 803eeb6:	bf00      	nop
 803eeb8:	00000008 	.word	0x00000008

0803eebc <__strtoul>:
 803eebc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 803eec0:	b083      	sub	sp, #12
 803eec2:	9001      	str	r0, [sp, #4]
 803eec4:	468b      	mov	fp, r1
 803eec6:	4692      	mov	sl, r2
 803eec8:	4604      	mov	r4, r0
 803eeca:	4626      	mov	r6, r4
 803eecc:	f814 5b01 	ldrb.w	r5, [r4], #1
 803eed0:	b1e5      	cbz	r5, 803ef0c <__strtoul+0x50>
 803eed2:	4628      	mov	r0, r5
 803eed4:	f7ff ffcf 	bl	803ee76 <isspace>
 803eed8:	2800      	cmp	r0, #0
 803eeda:	d1f6      	bne.n	803eeca <__strtoul+0xe>
 803eedc:	2d30      	cmp	r5, #48	; 0x30
 803eede:	d115      	bne.n	803ef0c <__strtoul+0x50>
 803eee0:	1cb3      	adds	r3, r6, #2
 803eee2:	7825      	ldrb	r5, [r4, #0]
 803eee4:	f005 02df 	and.w	r2, r5, #223	; 0xdf
 803eee8:	2a58      	cmp	r2, #88	; 0x58
 803eeea:	d006      	beq.n	803eefa <__strtoul+0x3e>
 803eeec:	f1ba 0f00 	cmp.w	sl, #0
 803eef0:	d14e      	bne.n	803ef90 <__strtoul+0xd4>
 803eef2:	f04f 0a01 	mov.w	sl, #1
 803eef6:	2608      	movs	r6, #8
 803eef8:	e006      	b.n	803ef08 <__strtoul+0x4c>
 803eefa:	f03a 0210 	bics.w	r2, sl, #16
 803eefe:	d143      	bne.n	803ef88 <__strtoul+0xcc>
 803ef00:	1ca3      	adds	r3, r4, #2
 803ef02:	7865      	ldrb	r5, [r4, #1]
 803ef04:	4692      	mov	sl, r2
 803ef06:	2610      	movs	r6, #16
 803ef08:	461c      	mov	r4, r3
 803ef0a:	e003      	b.n	803ef14 <__strtoul+0x58>
 803ef0c:	f1ba 0f00 	cmp.w	sl, #0
 803ef10:	d105      	bne.n	803ef1e <__strtoul+0x62>
 803ef12:	260a      	movs	r6, #10
 803ef14:	f04f 0800 	mov.w	r8, #0
 803ef18:	4647      	mov	r7, r8
 803ef1a:	46c1      	mov	r9, r8
 803ef1c:	e014      	b.n	803ef48 <__strtoul+0x8c>
 803ef1e:	4656      	mov	r6, sl
 803ef20:	f04f 0a00 	mov.w	sl, #0
 803ef24:	e7f6      	b.n	803ef14 <__strtoul+0x58>
 803ef26:	fb08 0806 	mla	r8, r8, r6, r0
 803ef2a:	ea4f 4318 	mov.w	r3, r8, lsr #16
 803ef2e:	fb07 3706 	mla	r7, r7, r6, r3
 803ef32:	fa1f f888 	uxth.w	r8, r8
 803ef36:	f5b7 3f80 	cmp.w	r7, #65536	; 0x10000
 803ef3a:	bf28      	it	cs
 803ef3c:	f04f 0901 	movcs.w	r9, #1
 803ef40:	f814 5b01 	ldrb.w	r5, [r4], #1
 803ef44:	f04f 0a01 	mov.w	sl, #1
 803ef48:	4631      	mov	r1, r6
 803ef4a:	4628      	mov	r0, r5
 803ef4c:	f7ff ff75 	bl	803ee3a <__digit>
 803ef50:	2800      	cmp	r0, #0
 803ef52:	dae8      	bge.n	803ef26 <__strtoul+0x6a>
 803ef54:	f1bb 0f00 	cmp.w	fp, #0
 803ef58:	d007      	beq.n	803ef6a <__strtoul+0xae>
 803ef5a:	f1ba 0f00 	cmp.w	sl, #0
 803ef5e:	d001      	beq.n	803ef64 <__strtoul+0xa8>
 803ef60:	1e63      	subs	r3, r4, #1
 803ef62:	9301      	str	r3, [sp, #4]
 803ef64:	9b01      	ldr	r3, [sp, #4]
 803ef66:	f8cb 3000 	str.w	r3, [fp]
 803ef6a:	f1b9 0f00 	cmp.w	r9, #0
 803ef6e:	d104      	bne.n	803ef7a <__strtoul+0xbe>
 803ef70:	ea48 4007 	orr.w	r0, r8, r7, lsl #16
 803ef74:	b003      	add	sp, #12
 803ef76:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 803ef7a:	f7ff ff95 	bl	803eea8 <__aeabi_errno_addr>
 803ef7e:	2322      	movs	r3, #34	; 0x22
 803ef80:	6003      	str	r3, [r0, #0]
 803ef82:	f04f 30ff 	mov.w	r0, #4294967295
 803ef86:	e7f5      	b.n	803ef74 <__strtoul+0xb8>
 803ef88:	4656      	mov	r6, sl
 803ef8a:	f04f 0a01 	mov.w	sl, #1
 803ef8e:	e7bb      	b.n	803ef08 <__strtoul+0x4c>
 803ef90:	4656      	mov	r6, sl
 803ef92:	f04f 0a01 	mov.w	sl, #1
 803ef96:	e7b7      	b.n	803ef08 <__strtoul+0x4c>

0803ef98 <printf>:
 803ef98:	b40f      	push	{r0, r1, r2, r3}
 803ef9a:	b510      	push	{r4, lr}
 803ef9c:	b086      	sub	sp, #24
 803ef9e:	ab08      	add	r3, sp, #32
 803efa0:	f853 4b04 	ldr.w	r4, [r3], #4
 803efa4:	9305      	str	r3, [sp, #20]
 803efa6:	2300      	movs	r3, #0
 803efa8:	9303      	str	r3, [sp, #12]
 803efaa:	f06f 4300 	mvn.w	r3, #2147483648	; 0x80000000
 803efae:	9302      	str	r3, [sp, #8]
 803efb0:	4b08      	ldr	r3, [pc, #32]	; (803efd4 <printf+0x3c>)
 803efb2:	9304      	str	r3, [sp, #16]
 803efb4:	f000 fbd8 	bl	803f768 <__printf_lock>
 803efb8:	9a05      	ldr	r2, [sp, #20]
 803efba:	4621      	mov	r1, r4
 803efbc:	a801      	add	r0, sp, #4
 803efbe:	f002 f981 	bl	80412c4 <__vfprintf_short_float_long>
 803efc2:	4604      	mov	r4, r0
 803efc4:	f000 fbd1 	bl	803f76a <__printf_unlock>
 803efc8:	4620      	mov	r0, r4
 803efca:	b006      	add	sp, #24
 803efcc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 803efd0:	b004      	add	sp, #16
 803efd2:	4770      	bx	lr
 803efd4:	080228d1 	.word	0x080228d1

0803efd8 <qsort>:
 803efd8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 803efdc:	b0c5      	sub	sp, #276	; 0x114
 803efde:	9002      	str	r0, [sp, #8]
 803efe0:	9103      	str	r1, [sp, #12]
 803efe2:	2a00      	cmp	r2, #0
 803efe4:	f000 8106 	beq.w	803f1f4 <qsort+0x21c>
 803efe8:	469a      	mov	sl, r3
 803efea:	4617      	mov	r7, r2
 803efec:	290a      	cmp	r1, #10
 803efee:	d813      	bhi.n	803f018 <qsort+0x40>
 803eff0:	9b03      	ldr	r3, [sp, #12]
 803eff2:	f103 3bff 	add.w	fp, r3, #4294967295
 803eff6:	9b02      	ldr	r3, [sp, #8]
 803eff8:	fb07 3b0b 	mla	fp, r7, fp, r3
 803effc:	455b      	cmp	r3, fp
 803effe:	f080 80f9 	bcs.w	803f1f4 <qsort+0x21c>
 803f002:	9300      	str	r3, [sp, #0]
 803f004:	1e79      	subs	r1, r7, #1
 803f006:	9101      	str	r1, [sp, #4]
 803f008:	eb03 0907 	add.w	r9, r3, r7
 803f00c:	4489      	add	r9, r1
 803f00e:	427d      	negs	r5, r7
 803f010:	f8cd b008 	str.w	fp, [sp, #8]
 803f014:	469b      	mov	fp, r3
 803f016:	e0d6      	b.n	803f1c6 <qsort+0x1ee>
 803f018:	9004      	str	r0, [sp, #16]
 803f01a:	9124      	str	r1, [sp, #144]	; 0x90
 803f01c:	2301      	movs	r3, #1
 803f01e:	9301      	str	r3, [sp, #4]
 803f020:	f1c2 0800 	rsb	r8, r2, #0
 803f024:	e0aa      	b.n	803f17c <qsort+0x1a4>
 803f026:	9b00      	ldr	r3, [sp, #0]
 803f028:	19de      	adds	r6, r3, r7
 803f02a:	4622      	mov	r2, r4
 803f02c:	7819      	ldrb	r1, [r3, #0]
 803f02e:	7810      	ldrb	r0, [r2, #0]
 803f030:	f803 0b01 	strb.w	r0, [r3], #1
 803f034:	f802 1b01 	strb.w	r1, [r2], #1
 803f038:	42b3      	cmp	r3, r6
 803f03a:	d1f7      	bne.n	803f02c <qsort+0x54>
 803f03c:	4620      	mov	r0, r4
 803f03e:	9e00      	ldr	r6, [sp, #0]
 803f040:	e06d      	b.n	803f11e <qsort+0x146>
 803f042:	4629      	mov	r1, r5
 803f044:	4630      	mov	r0, r6
 803f046:	47d0      	blx	sl
 803f048:	2800      	cmp	r0, #0
 803f04a:	dc0b      	bgt.n	803f064 <qsort+0x8c>
 803f04c:	19e6      	adds	r6, r4, r7
 803f04e:	462a      	mov	r2, r5
 803f050:	4623      	mov	r3, r4
 803f052:	7819      	ldrb	r1, [r3, #0]
 803f054:	7810      	ldrb	r0, [r2, #0]
 803f056:	f803 0b01 	strb.w	r0, [r3], #1
 803f05a:	f802 1b01 	strb.w	r1, [r2], #1
 803f05e:	42b3      	cmp	r3, r6
 803f060:	d1f7      	bne.n	803f052 <qsort+0x7a>
 803f062:	e060      	b.n	803f126 <qsort+0x14e>
 803f064:	9b00      	ldr	r3, [sp, #0]
 803f066:	19de      	adds	r6, r3, r7
 803f068:	462a      	mov	r2, r5
 803f06a:	7819      	ldrb	r1, [r3, #0]
 803f06c:	7810      	ldrb	r0, [r2, #0]
 803f06e:	f803 0b01 	strb.w	r0, [r3], #1
 803f072:	f802 1b01 	strb.w	r1, [r2], #1
 803f076:	42b3      	cmp	r3, r6
 803f078:	d1f7      	bne.n	803f06a <qsort+0x92>
 803f07a:	e7e7      	b.n	803f04c <qsort+0x74>
 803f07c:	eb09 0408 	add.w	r4, r9, r8
 803f080:	443e      	add	r6, r7
 803f082:	4629      	mov	r1, r5
 803f084:	4630      	mov	r0, r6
 803f086:	47d0      	blx	sl
 803f088:	2800      	cmp	r0, #0
 803f08a:	dbf9      	blt.n	803f080 <qsort+0xa8>
 803f08c:	46a1      	mov	r9, r4
 803f08e:	4444      	add	r4, r8
 803f090:	4629      	mov	r1, r5
 803f092:	4620      	mov	r0, r4
 803f094:	47d0      	blx	sl
 803f096:	2800      	cmp	r0, #0
 803f098:	dcf8      	bgt.n	803f08c <qsort+0xb4>
 803f09a:	42a6      	cmp	r6, r4
 803f09c:	d20a      	bcs.n	803f0b4 <qsort+0xdc>
 803f09e:	19f2      	adds	r2, r6, r7
 803f0a0:	4633      	mov	r3, r6
 803f0a2:	7819      	ldrb	r1, [r3, #0]
 803f0a4:	7820      	ldrb	r0, [r4, #0]
 803f0a6:	f803 0b01 	strb.w	r0, [r3], #1
 803f0aa:	f804 1b01 	strb.w	r1, [r4], #1
 803f0ae:	4293      	cmp	r3, r2
 803f0b0:	d1f7      	bne.n	803f0a2 <qsort+0xca>
 803f0b2:	e7e3      	b.n	803f07c <qsort+0xa4>
 803f0b4:	19f0      	adds	r0, r6, r7
 803f0b6:	4633      	mov	r3, r6
 803f0b8:	781a      	ldrb	r2, [r3, #0]
 803f0ba:	7829      	ldrb	r1, [r5, #0]
 803f0bc:	f803 1b01 	strb.w	r1, [r3], #1
 803f0c0:	f805 2b01 	strb.w	r2, [r5], #1
 803f0c4:	4283      	cmp	r3, r0
 803f0c6:	d1f7      	bne.n	803f0b8 <qsort+0xe0>
 803f0c8:	9900      	ldr	r1, [sp, #0]
 803f0ca:	1a73      	subs	r3, r6, r1
 803f0cc:	fbb3 f3f7 	udiv	r3, r3, r7
 803f0d0:	1e5a      	subs	r2, r3, #1
 803f0d2:	ebab 0b03 	sub.w	fp, fp, r3
 803f0d6:	455a      	cmp	r2, fp
 803f0d8:	dd38      	ble.n	803f14c <qsort+0x174>
 803f0da:	f1bb 0f0a 	cmp.w	fp, #10
 803f0de:	dd31      	ble.n	803f144 <qsort+0x16c>
 803f0e0:	9b01      	ldr	r3, [sp, #4]
 803f0e2:	ac04      	add	r4, sp, #16
 803f0e4:	f844 1023 	str.w	r1, [r4, r3, lsl #2]
 803f0e8:	a844      	add	r0, sp, #272	; 0x110
 803f0ea:	4619      	mov	r1, r3
 803f0ec:	eb00 0383 	add.w	r3, r0, r3, lsl #2
 803f0f0:	f843 2c80 	str.w	r2, [r3, #-128]
 803f0f4:	9600      	str	r6, [sp, #0]
 803f0f6:	1c4b      	adds	r3, r1, #1
 803f0f8:	9301      	str	r3, [sp, #4]
 803f0fa:	ea4f 056b 	mov.w	r5, fp, asr #1
 803f0fe:	fb07 f505 	mul.w	r5, r7, r5
 803f102:	9b00      	ldr	r3, [sp, #0]
 803f104:	195c      	adds	r4, r3, r5
 803f106:	f01b 0f01 	tst.w	fp, #1
 803f10a:	bf08      	it	eq
 803f10c:	1bed      	subeq	r5, r5, r7
 803f10e:	4425      	add	r5, r4
 803f110:	4621      	mov	r1, r4
 803f112:	9800      	ldr	r0, [sp, #0]
 803f114:	47d0      	blx	sl
 803f116:	2800      	cmp	r0, #0
 803f118:	dc85      	bgt.n	803f026 <qsort+0x4e>
 803f11a:	4620      	mov	r0, r4
 803f11c:	9e00      	ldr	r6, [sp, #0]
 803f11e:	4629      	mov	r1, r5
 803f120:	47d0      	blx	sl
 803f122:	2800      	cmp	r0, #0
 803f124:	dc8d      	bgt.n	803f042 <qsort+0x6a>
 803f126:	eb05 0308 	add.w	r3, r5, r8
 803f12a:	19e0      	adds	r0, r4, r7
 803f12c:	7822      	ldrb	r2, [r4, #0]
 803f12e:	7819      	ldrb	r1, [r3, #0]
 803f130:	f804 1b01 	strb.w	r1, [r4], #1
 803f134:	f803 2b01 	strb.w	r2, [r3], #1
 803f138:	4284      	cmp	r4, r0
 803f13a:	d1f7      	bne.n	803f12c <qsort+0x154>
 803f13c:	4445      	add	r5, r8
 803f13e:	462c      	mov	r4, r5
 803f140:	9e00      	ldr	r6, [sp, #0]
 803f142:	e79d      	b.n	803f080 <qsort+0xa8>
 803f144:	2a0a      	cmp	r2, #10
 803f146:	dd15      	ble.n	803f174 <qsort+0x19c>
 803f148:	4693      	mov	fp, r2
 803f14a:	e7d6      	b.n	803f0fa <qsort+0x122>
 803f14c:	2a0a      	cmp	r2, #10
 803f14e:	dd0c      	ble.n	803f16a <qsort+0x192>
 803f150:	9901      	ldr	r1, [sp, #4]
 803f152:	a804      	add	r0, sp, #16
 803f154:	f840 6021 	str.w	r6, [r0, r1, lsl #2]
 803f158:	a844      	add	r0, sp, #272	; 0x110
 803f15a:	eb00 0381 	add.w	r3, r0, r1, lsl #2
 803f15e:	f843 bc80 	str.w	fp, [r3, #-128]
 803f162:	4693      	mov	fp, r2
 803f164:	1c4b      	adds	r3, r1, #1
 803f166:	9301      	str	r3, [sp, #4]
 803f168:	e7c7      	b.n	803f0fa <qsort+0x122>
 803f16a:	f1bb 0f0a 	cmp.w	fp, #10
 803f16e:	dd01      	ble.n	803f174 <qsort+0x19c>
 803f170:	9600      	str	r6, [sp, #0]
 803f172:	e7c2      	b.n	803f0fa <qsort+0x122>
 803f174:	9b01      	ldr	r3, [sp, #4]
 803f176:	2b00      	cmp	r3, #0
 803f178:	f43f af3a 	beq.w	803eff0 <qsort+0x18>
 803f17c:	9b01      	ldr	r3, [sp, #4]
 803f17e:	3b01      	subs	r3, #1
 803f180:	9301      	str	r3, [sp, #4]
 803f182:	a904      	add	r1, sp, #16
 803f184:	f851 2023 	ldr.w	r2, [r1, r3, lsl #2]
 803f188:	9200      	str	r2, [sp, #0]
 803f18a:	aa44      	add	r2, sp, #272	; 0x110
 803f18c:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 803f190:	f853 bc80 	ldr.w	fp, [r3, #-128]
 803f194:	e7b1      	b.n	803f0fa <qsort+0x122>
 803f196:	462b      	mov	r3, r5
 803f198:	4655      	mov	r5, sl
 803f19a:	469a      	mov	sl, r3
 803f19c:	443c      	add	r4, r7
 803f19e:	9b01      	ldr	r3, [sp, #4]
 803f1a0:	1999      	adds	r1, r3, r6
 803f1a2:	f811 0f01 	ldrb.w	r0, [r1, #1]!
 803f1a6:	4633      	mov	r3, r6
 803f1a8:	42b4      	cmp	r4, r6
 803f1aa:	d804      	bhi.n	803f1b6 <qsort+0x1de>
 803f1ac:	781a      	ldrb	r2, [r3, #0]
 803f1ae:	55da      	strb	r2, [r3, r7]
 803f1b0:	442b      	add	r3, r5
 803f1b2:	429c      	cmp	r4, r3
 803f1b4:	d9fa      	bls.n	803f1ac <qsort+0x1d4>
 803f1b6:	55d8      	strb	r0, [r3, r7]
 803f1b8:	3601      	adds	r6, #1
 803f1ba:	4549      	cmp	r1, r9
 803f1bc:	d1f1      	bne.n	803f1a2 <qsort+0x1ca>
 803f1be:	44b9      	add	r9, r7
 803f1c0:	9b02      	ldr	r3, [sp, #8]
 803f1c2:	4543      	cmp	r3, r8
 803f1c4:	d916      	bls.n	803f1f4 <qsort+0x21c>
 803f1c6:	9b00      	ldr	r3, [sp, #0]
 803f1c8:	461c      	mov	r4, r3
 803f1ca:	461e      	mov	r6, r3
 803f1cc:	443b      	add	r3, r7
 803f1ce:	9300      	str	r3, [sp, #0]
 803f1d0:	4698      	mov	r8, r3
 803f1d2:	45a3      	cmp	fp, r4
 803f1d4:	d8e2      	bhi.n	803f19c <qsort+0x1c4>
 803f1d6:	4653      	mov	r3, sl
 803f1d8:	46aa      	mov	sl, r5
 803f1da:	461d      	mov	r5, r3
 803f1dc:	4641      	mov	r1, r8
 803f1de:	4620      	mov	r0, r4
 803f1e0:	47a8      	blx	r5
 803f1e2:	2800      	cmp	r0, #0
 803f1e4:	ddd7      	ble.n	803f196 <qsort+0x1be>
 803f1e6:	1be4      	subs	r4, r4, r7
 803f1e8:	45a3      	cmp	fp, r4
 803f1ea:	d9f7      	bls.n	803f1dc <qsort+0x204>
 803f1ec:	462b      	mov	r3, r5
 803f1ee:	4655      	mov	r5, sl
 803f1f0:	469a      	mov	sl, r3
 803f1f2:	e7d3      	b.n	803f19c <qsort+0x1c4>
 803f1f4:	b045      	add	sp, #276	; 0x114
 803f1f6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

0803f1fc <rand>:
 803f1fc:	4b05      	ldr	r3, [pc, #20]	; (803f214 <rand+0x18>)
 803f1fe:	6818      	ldr	r0, [r3, #0]
 803f200:	4905      	ldr	r1, [pc, #20]	; (803f218 <rand+0x1c>)
 803f202:	f243 0239 	movw	r2, #12345	; 0x3039
 803f206:	fb01 2000 	mla	r0, r1, r0, r2
 803f20a:	6018      	str	r0, [r3, #0]
 803f20c:	f3c0 400e 	ubfx	r0, r0, #16, #15
 803f210:	4770      	bx	lr
 803f212:	bf00      	nop
 803f214:	20002500 	.word	0x20002500
 803f218:	41c64e6d 	.word	0x41c64e6d

0803f21c <snprintf>:
 803f21c:	b40c      	push	{r2, r3}
 803f21e:	b500      	push	{lr}
 803f220:	b087      	sub	sp, #28
 803f222:	aa08      	add	r2, sp, #32
 803f224:	f852 3b04 	ldr.w	r3, [r2], #4
 803f228:	9205      	str	r2, [sp, #20]
 803f22a:	9003      	str	r0, [sp, #12]
 803f22c:	2000      	movs	r0, #0
 803f22e:	9004      	str	r0, [sp, #16]
 803f230:	9102      	str	r1, [sp, #8]
 803f232:	4619      	mov	r1, r3
 803f234:	a801      	add	r0, sp, #4
 803f236:	f002 f845 	bl	80412c4 <__vfprintf_short_float_long>
 803f23a:	b007      	add	sp, #28
 803f23c:	f85d eb04 	ldr.w	lr, [sp], #4
 803f240:	b002      	add	sp, #8
 803f242:	4770      	bx	lr

0803f244 <strncasecmp>:
 803f244:	b342      	cbz	r2, 803f298 <strncasecmp+0x54>
 803f246:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 803f24a:	4680      	mov	r8, r0
 803f24c:	460f      	mov	r7, r1
 803f24e:	4691      	mov	r9, r2
 803f250:	2a01      	cmp	r2, #1
 803f252:	d016      	beq.n	803f282 <strncasecmp+0x3e>
 803f254:	460d      	mov	r5, r1
 803f256:	4604      	mov	r4, r0
 803f258:	4481      	add	r9, r0
 803f25a:	f109 39ff 	add.w	r9, r9, #4294967295
 803f25e:	462f      	mov	r7, r5
 803f260:	46a0      	mov	r8, r4
 803f262:	f814 0b01 	ldrb.w	r0, [r4], #1
 803f266:	b160      	cbz	r0, 803f282 <strncasecmp+0x3e>
 803f268:	f7ff fe0a 	bl	803ee80 <tolower>
 803f26c:	4606      	mov	r6, r0
 803f26e:	3501      	adds	r5, #1
 803f270:	7838      	ldrb	r0, [r7, #0]
 803f272:	f7ff fe05 	bl	803ee80 <tolower>
 803f276:	4286      	cmp	r6, r0
 803f278:	d103      	bne.n	803f282 <strncasecmp+0x3e>
 803f27a:	46a0      	mov	r8, r4
 803f27c:	462f      	mov	r7, r5
 803f27e:	45a1      	cmp	r9, r4
 803f280:	d1ed      	bne.n	803f25e <strncasecmp+0x1a>
 803f282:	f898 0000 	ldrb.w	r0, [r8]
 803f286:	f7ff fdfb 	bl	803ee80 <tolower>
 803f28a:	4604      	mov	r4, r0
 803f28c:	7838      	ldrb	r0, [r7, #0]
 803f28e:	f7ff fdf7 	bl	803ee80 <tolower>
 803f292:	1a20      	subs	r0, r4, r0
 803f294:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 803f298:	2000      	movs	r0, #0
 803f29a:	4770      	bx	lr

0803f29c <strncat>:
 803f29c:	b410      	push	{r4}
 803f29e:	7803      	ldrb	r3, [r0, #0]
 803f2a0:	b183      	cbz	r3, 803f2c4 <strncat+0x28>
 803f2a2:	4604      	mov	r4, r0
 803f2a4:	f814 3f01 	ldrb.w	r3, [r4, #1]!
 803f2a8:	2b00      	cmp	r3, #0
 803f2aa:	d1fb      	bne.n	803f2a4 <strncat+0x8>
 803f2ac:	4623      	mov	r3, r4
 803f2ae:	4414      	add	r4, r2
 803f2b0:	461a      	mov	r2, r3
 803f2b2:	42a3      	cmp	r3, r4
 803f2b4:	d008      	beq.n	803f2c8 <strncat+0x2c>
 803f2b6:	f811 2b01 	ldrb.w	r2, [r1], #1
 803f2ba:	f803 2b01 	strb.w	r2, [r3], #1
 803f2be:	2a00      	cmp	r2, #0
 803f2c0:	d1f6      	bne.n	803f2b0 <strncat+0x14>
 803f2c2:	e003      	b.n	803f2cc <strncat+0x30>
 803f2c4:	4604      	mov	r4, r0
 803f2c6:	e7f1      	b.n	803f2ac <strncat+0x10>
 803f2c8:	2300      	movs	r3, #0
 803f2ca:	7013      	strb	r3, [r2, #0]
 803f2cc:	f85d 4b04 	ldr.w	r4, [sp], #4
 803f2d0:	4770      	bx	lr

0803f2d2 <strncmp>:
 803f2d2:	b1ca      	cbz	r2, 803f308 <strncmp+0x36>
 803f2d4:	b470      	push	{r4, r5, r6}
 803f2d6:	4614      	mov	r4, r2
 803f2d8:	2a01      	cmp	r2, #1
 803f2da:	d010      	beq.n	803f2fe <strncmp+0x2c>
 803f2dc:	460a      	mov	r2, r1
 803f2de:	4603      	mov	r3, r0
 803f2e0:	4420      	add	r0, r4
 803f2e2:	1e46      	subs	r6, r0, #1
 803f2e4:	4611      	mov	r1, r2
 803f2e6:	4618      	mov	r0, r3
 803f2e8:	f813 4b01 	ldrb.w	r4, [r3], #1
 803f2ec:	b13c      	cbz	r4, 803f2fe <strncmp+0x2c>
 803f2ee:	3201      	adds	r2, #1
 803f2f0:	780d      	ldrb	r5, [r1, #0]
 803f2f2:	42a5      	cmp	r5, r4
 803f2f4:	d103      	bne.n	803f2fe <strncmp+0x2c>
 803f2f6:	4618      	mov	r0, r3
 803f2f8:	4611      	mov	r1, r2
 803f2fa:	429e      	cmp	r6, r3
 803f2fc:	d1f2      	bne.n	803f2e4 <strncmp+0x12>
 803f2fe:	7800      	ldrb	r0, [r0, #0]
 803f300:	780b      	ldrb	r3, [r1, #0]
 803f302:	1ac0      	subs	r0, r0, r3
 803f304:	bc70      	pop	{r4, r5, r6}
 803f306:	4770      	bx	lr
 803f308:	2000      	movs	r0, #0
 803f30a:	4770      	bx	lr

0803f30c <strncpy>:
 803f30c:	b1aa      	cbz	r2, 803f33a <strncpy+0x2e>
 803f30e:	b430      	push	{r4, r5}
 803f310:	4614      	mov	r4, r2
 803f312:	3901      	subs	r1, #1
 803f314:	4603      	mov	r3, r0
 803f316:	461d      	mov	r5, r3
 803f318:	f811 2f01 	ldrb.w	r2, [r1, #1]!
 803f31c:	f803 2b01 	strb.w	r2, [r3], #1
 803f320:	b11a      	cbz	r2, 803f32a <strncpy+0x1e>
 803f322:	3c01      	subs	r4, #1
 803f324:	d1f7      	bne.n	803f316 <strncpy+0xa>
 803f326:	bc30      	pop	{r4, r5}
 803f328:	4770      	bx	lr
 803f32a:	2c01      	cmp	r4, #1
 803f32c:	d9fb      	bls.n	803f326 <strncpy+0x1a>
 803f32e:	442c      	add	r4, r5
 803f330:	f803 2b01 	strb.w	r2, [r3], #1
 803f334:	42a3      	cmp	r3, r4
 803f336:	d1fb      	bne.n	803f330 <strncpy+0x24>
 803f338:	e7f5      	b.n	803f326 <strncpy+0x1a>
 803f33a:	4770      	bx	lr

0803f33c <strnlen>:
 803f33c:	7803      	ldrb	r3, [r0, #0]
 803f33e:	b153      	cbz	r3, 803f356 <strnlen+0x1a>
 803f340:	b159      	cbz	r1, 803f35a <strnlen+0x1e>
 803f342:	4401      	add	r1, r0
 803f344:	4603      	mov	r3, r0
 803f346:	f813 2f01 	ldrb.w	r2, [r3, #1]!
 803f34a:	b112      	cbz	r2, 803f352 <strnlen+0x16>
 803f34c:	428b      	cmp	r3, r1
 803f34e:	d1fa      	bne.n	803f346 <strnlen+0xa>
 803f350:	460b      	mov	r3, r1
 803f352:	1a18      	subs	r0, r3, r0
 803f354:	4770      	bx	lr
 803f356:	4603      	mov	r3, r0
 803f358:	e7fb      	b.n	803f352 <strnlen+0x16>
 803f35a:	4603      	mov	r3, r0
 803f35c:	e7f9      	b.n	803f352 <strnlen+0x16>

0803f35e <strrchr>:
 803f35e:	b430      	push	{r4, r5}
 803f360:	4602      	mov	r2, r0
 803f362:	4613      	mov	r3, r2
 803f364:	f812 4b01 	ldrb.w	r4, [r2], #1
 803f368:	2c00      	cmp	r4, #0
 803f36a:	d1fa      	bne.n	803f362 <strrchr+0x4>
 803f36c:	4604      	mov	r4, r0
 803f36e:	b2cd      	uxtb	r5, r1
 803f370:	4618      	mov	r0, r3
 803f372:	42a3      	cmp	r3, r4
 803f374:	d004      	beq.n	803f380 <strrchr+0x22>
 803f376:	3b01      	subs	r3, #1
 803f378:	7802      	ldrb	r2, [r0, #0]
 803f37a:	42aa      	cmp	r2, r5
 803f37c:	d1f8      	bne.n	803f370 <strrchr+0x12>
 803f37e:	e004      	b.n	803f38a <strrchr+0x2c>
 803f380:	781b      	ldrb	r3, [r3, #0]
 803f382:	b2c9      	uxtb	r1, r1
 803f384:	428b      	cmp	r3, r1
 803f386:	bf18      	it	ne
 803f388:	2000      	movne	r0, #0
 803f38a:	bc30      	pop	{r4, r5}
 803f38c:	4770      	bx	lr
	...

0803f390 <strtof>:
 803f390:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 803f394:	ed2d 8b04 	vpush	{d8-d9}
 803f398:	4681      	mov	r9, r0
 803f39a:	4688      	mov	r8, r1
 803f39c:	4606      	mov	r6, r0
 803f39e:	46b2      	mov	sl, r6
 803f3a0:	f816 7b01 	ldrb.w	r7, [r6], #1
 803f3a4:	463c      	mov	r4, r7
 803f3a6:	4638      	mov	r0, r7
 803f3a8:	f7ff fd65 	bl	803ee76 <isspace>
 803f3ac:	4605      	mov	r5, r0
 803f3ae:	2800      	cmp	r0, #0
 803f3b0:	d1f5      	bne.n	803f39e <strtof+0xe>
 803f3b2:	2f2b      	cmp	r7, #43	; 0x2b
 803f3b4:	d00e      	beq.n	803f3d4 <strtof+0x44>
 803f3b6:	2f2d      	cmp	r7, #45	; 0x2d
 803f3b8:	d10e      	bne.n	803f3d8 <strtof+0x48>
 803f3ba:	2704      	movs	r7, #4
 803f3bc:	7834      	ldrb	r4, [r6, #0]
 803f3be:	f10a 0602 	add.w	r6, sl, #2
 803f3c2:	ed9f 8a55 	vldr	s16, [pc, #340]	; 803f518 <strtof+0x188>
 803f3c6:	eef2 8a04 	vmov.f32	s17, #36	; 0x41200000  10.0
 803f3ca:	f04f 0b2e 	mov.w	fp, #46	; 0x2e
 803f3ce:	eeb0 9a00 	vmov.f32	s18, #0	; 0x40000000  2.0
 803f3d2:	e085      	b.n	803f4e0 <strtof+0x150>
 803f3d4:	4607      	mov	r7, r0
 803f3d6:	e7f1      	b.n	803f3bc <strtof+0x2c>
 803f3d8:	4607      	mov	r7, r0
 803f3da:	e7f2      	b.n	803f3c2 <strtof+0x32>
 803f3dc:	f017 0f01 	tst.w	r7, #1
 803f3e0:	d16f      	bne.n	803f4c2 <strtof+0x132>
 803f3e2:	f047 0701 	orr.w	r7, r7, #1
 803f3e6:	e079      	b.n	803f4dc <strtof+0x14c>
 803f3e8:	f024 0420 	bic.w	r4, r4, #32
 803f3ec:	2c45      	cmp	r4, #69	; 0x45
 803f3ee:	d021      	beq.n	803f434 <strtof+0xa4>
 803f3f0:	2d00      	cmp	r5, #0
 803f3f2:	dd4b      	ble.n	803f48c <strtof+0xfc>
 803f3f4:	eef2 7a04 	vmov.f32	s15, #36	; 0x41200000  10.0
 803f3f8:	ee28 8a27 	vmul.f32	s16, s16, s15
 803f3fc:	3d01      	subs	r5, #1
 803f3fe:	d1fb      	bne.n	803f3f8 <strtof+0x68>
 803f400:	eeb0 0a48 	vmov.f32	s0, s16
 803f404:	f7ff fa41 	bl	803e88a <__float32_isinf>
 803f408:	2800      	cmp	r0, #0
 803f40a:	d148      	bne.n	803f49e <strtof+0x10e>
 803f40c:	f017 0f04 	tst.w	r7, #4
 803f410:	bf18      	it	ne
 803f412:	eeb1 8a48 	vnegne.f32	s16, s16
 803f416:	f017 0f02 	tst.w	r7, #2
 803f41a:	d047      	beq.n	803f4ac <strtof+0x11c>
 803f41c:	f1b8 0f00 	cmp.w	r8, #0
 803f420:	d002      	beq.n	803f428 <strtof+0x98>
 803f422:	3e01      	subs	r6, #1
 803f424:	f8c8 6000 	str.w	r6, [r8]
 803f428:	eeb0 0a48 	vmov.f32	s0, s16
 803f42c:	ecbd 8b04 	vpop	{d8-d9}
 803f430:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 803f434:	f017 0f02 	tst.w	r7, #2
 803f438:	d0da      	beq.n	803f3f0 <strtof+0x60>
 803f43a:	f027 0702 	bic.w	r7, r7, #2
 803f43e:	7834      	ldrb	r4, [r6, #0]
 803f440:	2c2b      	cmp	r4, #43	; 0x2b
 803f442:	d005      	beq.n	803f450 <strtof+0xc0>
 803f444:	2c2d      	cmp	r4, #45	; 0x2d
 803f446:	d001      	beq.n	803f44c <strtof+0xbc>
 803f448:	3601      	adds	r6, #1
 803f44a:	e003      	b.n	803f454 <strtof+0xc4>
 803f44c:	f047 0708 	orr.w	r7, r7, #8
 803f450:	7874      	ldrb	r4, [r6, #1]
 803f452:	3602      	adds	r6, #2
 803f454:	f242 7b10 	movw	fp, #10000	; 0x2710
 803f458:	e00c      	b.n	803f474 <strtof+0xe4>
 803f45a:	f047 0702 	orr.w	r7, r7, #2
 803f45e:	f5ba 7f7a 	cmp.w	sl, #1000	; 0x3e8
 803f462:	bfdd      	ittte	le
 803f464:	eb0a 0a8a 	addle.w	sl, sl, sl, lsl #2
 803f468:	3c30      	suble	r4, #48	; 0x30
 803f46a:	eb04 0a4a 	addle.w	sl, r4, sl, lsl #1
 803f46e:	46da      	movgt	sl, fp
 803f470:	f816 4b01 	ldrb.w	r4, [r6], #1
 803f474:	4620      	mov	r0, r4
 803f476:	f7ff fcdb 	bl	803ee30 <isdigit>
 803f47a:	2800      	cmp	r0, #0
 803f47c:	d1ed      	bne.n	803f45a <strtof+0xca>
 803f47e:	f017 0f08 	tst.w	r7, #8
 803f482:	bf14      	ite	ne
 803f484:	eba5 050a 	subne.w	r5, r5, sl
 803f488:	4455      	addeq	r5, sl
 803f48a:	e7b1      	b.n	803f3f0 <strtof+0x60>
 803f48c:	2d00      	cmp	r5, #0
 803f48e:	dab7      	bge.n	803f400 <strtof+0x70>
 803f490:	eef2 7a04 	vmov.f32	s15, #36	; 0x41200000  10.0
 803f494:	ee88 8a27 	vdiv.f32	s16, s16, s15
 803f498:	3501      	adds	r5, #1
 803f49a:	d1fb      	bne.n	803f494 <strtof+0x104>
 803f49c:	e7b0      	b.n	803f400 <strtof+0x70>
 803f49e:	f7ff fd03 	bl	803eea8 <__aeabi_errno_addr>
 803f4a2:	2322      	movs	r3, #34	; 0x22
 803f4a4:	6003      	str	r3, [r0, #0]
 803f4a6:	ed9f 8a1d 	vldr	s16, [pc, #116]	; 803f51c <strtof+0x18c>
 803f4aa:	e7af      	b.n	803f40c <strtof+0x7c>
 803f4ac:	f1b8 0f00 	cmp.w	r8, #0
 803f4b0:	d004      	beq.n	803f4bc <strtof+0x12c>
 803f4b2:	f8c8 9000 	str.w	r9, [r8]
 803f4b6:	ed9f 8a18 	vldr	s16, [pc, #96]	; 803f518 <strtof+0x188>
 803f4ba:	e7b5      	b.n	803f428 <strtof+0x98>
 803f4bc:	ed9f 8a16 	vldr	s16, [pc, #88]	; 803f518 <strtof+0x188>
 803f4c0:	e7b2      	b.n	803f428 <strtof+0x98>
 803f4c2:	4658      	mov	r0, fp
 803f4c4:	f7ff fcb4 	bl	803ee30 <isdigit>
 803f4c8:	2800      	cmp	r0, #0
 803f4ca:	d091      	beq.n	803f3f0 <strtof+0x60>
 803f4cc:	f047 0302 	orr.w	r3, r7, #2
 803f4d0:	ee28 8a28 	vmul.f32	s16, s16, s17
 803f4d4:	ee38 8a49 	vsub.f32	s16, s16, s18
 803f4d8:	3d01      	subs	r5, #1
 803f4da:	461f      	mov	r7, r3
 803f4dc:	f816 4b01 	ldrb.w	r4, [r6], #1
 803f4e0:	2c2e      	cmp	r4, #46	; 0x2e
 803f4e2:	f43f af7b 	beq.w	803f3dc <strtof+0x4c>
 803f4e6:	4620      	mov	r0, r4
 803f4e8:	f7ff fca2 	bl	803ee30 <isdigit>
 803f4ec:	4682      	mov	sl, r0
 803f4ee:	2800      	cmp	r0, #0
 803f4f0:	f43f af7a 	beq.w	803f3e8 <strtof+0x58>
 803f4f4:	f047 0302 	orr.w	r3, r7, #2
 803f4f8:	ee68 7a28 	vmul.f32	s15, s16, s17
 803f4fc:	f1a4 0230 	sub.w	r2, r4, #48	; 0x30
 803f500:	ee08 2a10 	vmov	s16, r2
 803f504:	eeb8 8ac8 	vcvt.f32.s32	s16, s16
 803f508:	ee38 8a27 	vadd.f32	s16, s16, s15
 803f50c:	f017 0f01 	tst.w	r7, #1
 803f510:	d1e2      	bne.n	803f4d8 <strtof+0x148>
 803f512:	461f      	mov	r7, r3
 803f514:	e7e2      	b.n	803f4dc <strtof+0x14c>
 803f516:	bf00      	nop
 803f518:	00000000 	.word	0x00000000
 803f51c:	7f800000 	.word	0x7f800000

0803f520 <strtol>:
 803f520:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 803f524:	b082      	sub	sp, #8
 803f526:	4680      	mov	r8, r0
 803f528:	4689      	mov	r9, r1
 803f52a:	4692      	mov	sl, r2
 803f52c:	4604      	mov	r4, r0
 803f52e:	4627      	mov	r7, r4
 803f530:	f814 5b01 	ldrb.w	r5, [r4], #1
 803f534:	b355      	cbz	r5, 803f58c <strtol+0x6c>
 803f536:	4628      	mov	r0, r5
 803f538:	f7ff fc9d 	bl	803ee76 <isspace>
 803f53c:	4606      	mov	r6, r0
 803f53e:	2800      	cmp	r0, #0
 803f540:	d1f5      	bne.n	803f52e <strtol+0xe>
 803f542:	2d2b      	cmp	r5, #43	; 0x2b
 803f544:	d115      	bne.n	803f572 <strtol+0x52>
 803f546:	4652      	mov	r2, sl
 803f548:	a901      	add	r1, sp, #4
 803f54a:	4620      	mov	r0, r4
 803f54c:	f7ff fcb6 	bl	803eebc <__strtoul>
 803f550:	4603      	mov	r3, r0
 803f552:	f1b9 0f00 	cmp.w	r9, #0
 803f556:	d02c      	beq.n	803f5b2 <strtol+0x92>
 803f558:	9a01      	ldr	r2, [sp, #4]
 803f55a:	42a2      	cmp	r2, r4
 803f55c:	bf08      	it	eq
 803f55e:	4642      	moveq	r2, r8
 803f560:	f8c9 2000 	str.w	r2, [r9]
 803f564:	b32e      	cbz	r6, 803f5b2 <strtol+0x92>
 803f566:	2b00      	cmp	r3, #0
 803f568:	db1c      	blt.n	803f5a4 <strtol+0x84>
 803f56a:	4258      	negs	r0, r3
 803f56c:	b002      	add	sp, #8
 803f56e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 803f572:	2d2d      	cmp	r5, #45	; 0x2d
 803f574:	d10a      	bne.n	803f58c <strtol+0x6c>
 803f576:	4652      	mov	r2, sl
 803f578:	a901      	add	r1, sp, #4
 803f57a:	4620      	mov	r0, r4
 803f57c:	f7ff fc9e 	bl	803eebc <__strtoul>
 803f580:	4603      	mov	r3, r0
 803f582:	f1b9 0f00 	cmp.w	r9, #0
 803f586:	d0ee      	beq.n	803f566 <strtol+0x46>
 803f588:	2601      	movs	r6, #1
 803f58a:	e7e5      	b.n	803f558 <strtol+0x38>
 803f58c:	4652      	mov	r2, sl
 803f58e:	a901      	add	r1, sp, #4
 803f590:	4638      	mov	r0, r7
 803f592:	f7ff fc93 	bl	803eebc <__strtoul>
 803f596:	4603      	mov	r3, r0
 803f598:	f1b9 0f00 	cmp.w	r9, #0
 803f59c:	d009      	beq.n	803f5b2 <strtol+0x92>
 803f59e:	463c      	mov	r4, r7
 803f5a0:	2600      	movs	r6, #0
 803f5a2:	e7d9      	b.n	803f558 <strtol+0x38>
 803f5a4:	f7ff fc80 	bl	803eea8 <__aeabi_errno_addr>
 803f5a8:	2222      	movs	r2, #34	; 0x22
 803f5aa:	6002      	str	r2, [r0, #0]
 803f5ac:	f04f 4000 	mov.w	r0, #2147483648	; 0x80000000
 803f5b0:	e7dc      	b.n	803f56c <strtol+0x4c>
 803f5b2:	4618      	mov	r0, r3
 803f5b4:	2b00      	cmp	r3, #0
 803f5b6:	dad9      	bge.n	803f56c <strtol+0x4c>
 803f5b8:	f7ff fc76 	bl	803eea8 <__aeabi_errno_addr>
 803f5bc:	2322      	movs	r3, #34	; 0x22
 803f5be:	6003      	str	r3, [r0, #0]
 803f5c0:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 803f5c4:	e7d2      	b.n	803f56c <strtol+0x4c>

0803f5c6 <atoi>:
 803f5c6:	b538      	push	{r3, r4, r5, lr}
 803f5c8:	4604      	mov	r4, r0
 803f5ca:	f7ff fc6d 	bl	803eea8 <__aeabi_errno_addr>
 803f5ce:	6805      	ldr	r5, [r0, #0]
 803f5d0:	220a      	movs	r2, #10
 803f5d2:	2100      	movs	r1, #0
 803f5d4:	4620      	mov	r0, r4
 803f5d6:	f7ff ffa3 	bl	803f520 <strtol>
 803f5da:	4604      	mov	r4, r0
 803f5dc:	f7ff fc64 	bl	803eea8 <__aeabi_errno_addr>
 803f5e0:	6005      	str	r5, [r0, #0]
 803f5e2:	4620      	mov	r0, r4
 803f5e4:	bd38      	pop	{r3, r4, r5, pc}

0803f5e6 <vsnprintf>:
 803f5e6:	b510      	push	{r4, lr}
 803f5e8:	b084      	sub	sp, #16
 803f5ea:	460c      	mov	r4, r1
 803f5ec:	4611      	mov	r1, r2
 803f5ee:	9002      	str	r0, [sp, #8]
 803f5f0:	2200      	movs	r2, #0
 803f5f2:	9203      	str	r2, [sp, #12]
 803f5f4:	9401      	str	r4, [sp, #4]
 803f5f6:	461a      	mov	r2, r3
 803f5f8:	4668      	mov	r0, sp
 803f5fa:	f001 fe63 	bl	80412c4 <__vfprintf_short_float_long>
 803f5fe:	b004      	add	sp, #16
 803f600:	bd10      	pop	{r4, pc}

0803f602 <__aeabi_memcpy>:
 803f602:	4684      	mov	ip, r0
 803f604:	ea40 0301 	orr.w	r3, r0, r1
 803f608:	f013 0f03 	tst.w	r3, #3
 803f60c:	d118      	bne.n	803f640 <__aeabi_memcpy4+0x32>

0803f60e <__aeabi_memcpy4>:
 803f60e:	4684      	mov	ip, r0
 803f610:	2a20      	cmp	r2, #32
 803f612:	d30b      	bcc.n	803f62c <__aeabi_memcpy4+0x1e>
 803f614:	e92d 07f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl}
 803f618:	e8b1 07f8 	ldmia.w	r1!, {r3, r4, r5, r6, r7, r8, r9, sl}
 803f61c:	e8a0 07f8 	stmia.w	r0!, {r3, r4, r5, r6, r7, r8, r9, sl}
 803f620:	f1a2 0220 	sub.w	r2, r2, #32
 803f624:	2a20      	cmp	r2, #32
 803f626:	d2f7      	bcs.n	803f618 <__aeabi_memcpy4+0xa>
 803f628:	e8bd 07f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl}
 803f62c:	2a04      	cmp	r2, #4
 803f62e:	d307      	bcc.n	803f640 <__aeabi_memcpy4+0x32>
 803f630:	f851 3b04 	ldr.w	r3, [r1], #4
 803f634:	f840 3b04 	str.w	r3, [r0], #4
 803f638:	f1a2 0204 	sub.w	r2, r2, #4
 803f63c:	2a04      	cmp	r2, #4
 803f63e:	d2f7      	bcs.n	803f630 <__aeabi_memcpy4+0x22>
 803f640:	2a00      	cmp	r2, #0
 803f642:	d005      	beq.n	803f650 <__aeabi_memcpy4+0x42>
 803f644:	f811 3b01 	ldrb.w	r3, [r1], #1
 803f648:	f800 3b01 	strb.w	r3, [r0], #1
 803f64c:	3a01      	subs	r2, #1
 803f64e:	d1f9      	bne.n	803f644 <__aeabi_memcpy4+0x36>
 803f650:	4660      	mov	r0, ip
 803f652:	4770      	bx	lr

0803f654 <memset>:
 803f654:	4684      	mov	ip, r0
 803f656:	2a00      	cmp	r2, #0
 803f658:	d02d      	beq.n	803f6b6 <memset+0x62>
 803f65a:	f010 0f03 	tst.w	r0, #3
 803f65e:	d004      	beq.n	803f66a <memset+0x16>
 803f660:	f800 1b01 	strb.w	r1, [r0], #1
 803f664:	3a01      	subs	r2, #1
 803f666:	d026      	beq.n	803f6b6 <memset+0x62>
 803f668:	e7f7      	b.n	803f65a <memset+0x6>
 803f66a:	b2c9      	uxtb	r1, r1
 803f66c:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 803f670:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 803f674:	2a20      	cmp	r2, #32
 803f676:	d312      	bcc.n	803f69e <memset+0x4a>
 803f678:	f1a2 0220 	sub.w	r2, r2, #32
 803f67c:	e92d 03f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9}
 803f680:	460b      	mov	r3, r1
 803f682:	460c      	mov	r4, r1
 803f684:	460d      	mov	r5, r1
 803f686:	460e      	mov	r6, r1
 803f688:	460f      	mov	r7, r1
 803f68a:	4688      	mov	r8, r1
 803f68c:	4689      	mov	r9, r1
 803f68e:	e8a0 03fa 	stmia.w	r0!, {r1, r3, r4, r5, r6, r7, r8, r9}
 803f692:	3a20      	subs	r2, #32
 803f694:	d2fb      	bcs.n	803f68e <memset+0x3a>
 803f696:	e8bd 03f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9}
 803f69a:	3220      	adds	r2, #32
 803f69c:	d00b      	beq.n	803f6b6 <memset+0x62>
 803f69e:	2a04      	cmp	r2, #4
 803f6a0:	d305      	bcc.n	803f6ae <memset+0x5a>
 803f6a2:	f840 1b04 	str.w	r1, [r0], #4
 803f6a6:	3a04      	subs	r2, #4
 803f6a8:	d005      	beq.n	803f6b6 <memset+0x62>
 803f6aa:	2a04      	cmp	r2, #4
 803f6ac:	d2f9      	bcs.n	803f6a2 <memset+0x4e>
 803f6ae:	f800 1b01 	strb.w	r1, [r0], #1
 803f6b2:	3a01      	subs	r2, #1
 803f6b4:	d1fb      	bne.n	803f6ae <memset+0x5a>
 803f6b6:	4660      	mov	r0, ip
 803f6b8:	4770      	bx	lr

0803f6ba <strcmp>:
 803f6ba:	f010 0f03 	tst.w	r0, #3
 803f6be:	d119      	bne.n	803f6f4 <strcmp+0x3a>
 803f6c0:	f011 0f03 	tst.w	r1, #3
 803f6c4:	d116      	bne.n	803f6f4 <strcmp+0x3a>
 803f6c6:	e92d 0070 	stmdb	sp!, {r4, r5, r6}
 803f6ca:	f04f 3601 	mov.w	r6, #16843009	; 0x1010101
 803f6ce:	f04f 3380 	mov.w	r3, #2155905152	; 0x80808080
 803f6d2:	f850 4b04 	ldr.w	r4, [r0], #4
 803f6d6:	f851 5b04 	ldr.w	r5, [r1], #4
 803f6da:	42ac      	cmp	r4, r5
 803f6dc:	d105      	bne.n	803f6ea <strcmp+0x30>
 803f6de:	eba4 0506 	sub.w	r5, r4, r6
 803f6e2:	ea25 0504 	bic.w	r5, r5, r4
 803f6e6:	401d      	ands	r5, r3
 803f6e8:	d0f3      	beq.n	803f6d2 <strcmp+0x18>
 803f6ea:	f1a0 0004 	sub.w	r0, r0, #4
 803f6ee:	f1a1 0104 	sub.w	r1, r1, #4
 803f6f2:	bc70      	pop	{r4, r5, r6}
 803f6f4:	f810 2b01 	ldrb.w	r2, [r0], #1
 803f6f8:	f811 3b01 	ldrb.w	r3, [r1], #1
 803f6fc:	1ad2      	subs	r2, r2, r3
 803f6fe:	d101      	bne.n	803f704 <strcmp+0x4a>
 803f700:	2b00      	cmp	r3, #0
 803f702:	d1f7      	bne.n	803f6f4 <strcmp+0x3a>
 803f704:	4610      	mov	r0, r2
 803f706:	4770      	bx	lr

0803f708 <strlen>:
 803f708:	f100 0101 	add.w	r1, r0, #1
 803f70c:	f010 0f03 	tst.w	r0, #3
 803f710:	d011      	beq.n	803f736 <strlen+0x2e>
 803f712:	f810 2b01 	ldrb.w	r2, [r0], #1
 803f716:	2a00      	cmp	r2, #0
 803f718:	d023      	beq.n	803f762 <strlen+0x5a>
 803f71a:	f010 0f03 	tst.w	r0, #3
 803f71e:	d00a      	beq.n	803f736 <strlen+0x2e>
 803f720:	f810 2b01 	ldrb.w	r2, [r0], #1
 803f724:	2a00      	cmp	r2, #0
 803f726:	d01c      	beq.n	803f762 <strlen+0x5a>
 803f728:	f010 0f03 	tst.w	r0, #3
 803f72c:	d003      	beq.n	803f736 <strlen+0x2e>
 803f72e:	f810 2b01 	ldrb.w	r2, [r0], #1
 803f732:	2a00      	cmp	r2, #0
 803f734:	d015      	beq.n	803f762 <strlen+0x5a>
 803f736:	e92d 0070 	stmdb	sp!, {r4, r5, r6}
 803f73a:	f04f 3201 	mov.w	r2, #16843009	; 0x1010101
 803f73e:	f04f 3380 	mov.w	r3, #2155905152	; 0x80808080
 803f742:	f850 4b04 	ldr.w	r4, [r0], #4
 803f746:	eba4 0502 	sub.w	r5, r4, r2
 803f74a:	ea25 0504 	bic.w	r5, r5, r4
 803f74e:	401d      	ands	r5, r3
 803f750:	d100      	bne.n	803f754 <strlen+0x4c>
 803f752:	e7f6      	b.n	803f742 <strlen+0x3a>
 803f754:	f1a0 0004 	sub.w	r0, r0, #4
 803f758:	bc70      	pop	{r4, r5, r6}
 803f75a:	f810 2b01 	ldrb.w	r2, [r0], #1
 803f75e:	2a00      	cmp	r2, #0
 803f760:	d1fb      	bne.n	803f75a <strlen+0x52>
 803f762:	eba0 0001 	sub.w	r0, r0, r1
 803f766:	4770      	bx	lr

0803f768 <__printf_lock>:
 803f768:	4770      	bx	lr

0803f76a <__printf_unlock>:
 803f76a:	4770      	bx	lr

0803f76c <__cxa_end_cleanup>:
 803f76c:	b41e      	push	{r1, r2, r3, r4}
 803f76e:	f000 f833 	bl	803f7d8 <__cxa_end_cleanup_impl>
 803f772:	bc1e      	pop	{r1, r2, r3, r4}
 803f774:	f000 fd33 	bl	80401de <_Unwind_Resume>
 803f778:	f7f9 fbc4 	bl	8038f04 <abort>
 803f77c:	0000      	movs	r0, r0
	...

0803f780 <__cxa_begin_cleanup>:
 803f780:	b570      	push	{r4, r5, r6, lr}
 803f782:	4604      	mov	r4, r0
 803f784:	f000 f888 	bl	803f898 <__cxa_get_globals>
 803f788:	4605      	mov	r5, r0
 803f78a:	4626      	mov	r6, r4
 803f78c:	f856 1928 	ldr.w	r1, [r6], #-40
 803f790:	f021 02ff 	bic.w	r2, r1, #255	; 0xff
 803f794:	6863      	ldr	r3, [r4, #4]
 803f796:	a10e      	add	r1, pc, #56	; (adr r1, 803f7d0 <__cxa_begin_cleanup+0x50>)
 803f798:	e9d1 0100 	ldrd	r0, r1, [r1]
 803f79c:	428b      	cmp	r3, r1
 803f79e:	bf08      	it	eq
 803f7a0:	4282      	cmpeq	r2, r0
 803f7a2:	d10d      	bne.n	803f7c0 <__cxa_begin_cleanup+0x40>
 803f7a4:	f854 3c08 	ldr.w	r3, [r4, #-8]
 803f7a8:	b91b      	cbnz	r3, 803f7b2 <__cxa_begin_cleanup+0x32>
 803f7aa:	68ab      	ldr	r3, [r5, #8]
 803f7ac:	f844 3c0c 	str.w	r3, [r4, #-12]
 803f7b0:	60ae      	str	r6, [r5, #8]
 803f7b2:	f854 3c08 	ldr.w	r3, [r4, #-8]
 803f7b6:	3301      	adds	r3, #1
 803f7b8:	f844 3c08 	str.w	r3, [r4, #-8]
 803f7bc:	2001      	movs	r0, #1
 803f7be:	bd70      	pop	{r4, r5, r6, pc}
 803f7c0:	68ab      	ldr	r3, [r5, #8]
 803f7c2:	b10b      	cbz	r3, 803f7c8 <__cxa_begin_cleanup+0x48>
 803f7c4:	f000 f89c 	bl	803f900 <std::terminate()>
 803f7c8:	60ae      	str	r6, [r5, #8]
 803f7ca:	e7f7      	b.n	803f7bc <__cxa_begin_cleanup+0x3c>
 803f7cc:	f3af 8000 	nop.w
 803f7d0:	432b2b00 	.word	0x432b2b00
 803f7d4:	434c4e47 	.word	0x434c4e47

0803f7d8 <__cxa_end_cleanup_impl>:
 803f7d8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 803f7da:	f000 f85d 	bl	803f898 <__cxa_get_globals>
 803f7de:	4605      	mov	r5, r0
 803f7e0:	6884      	ldr	r4, [r0, #8]
 803f7e2:	b1ac      	cbz	r4, 803f810 <__cxa_end_cleanup_impl+0x38>
 803f7e4:	f104 0028 	add.w	r0, r4, #40	; 0x28
 803f7e8:	6aa1      	ldr	r1, [r4, #40]	; 0x28
 803f7ea:	f021 02ff 	bic.w	r2, r1, #255	; 0xff
 803f7ee:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 803f7f0:	a70b      	add	r7, pc, #44	; (adr r7, 803f820 <__cxa_end_cleanup_impl+0x48>)
 803f7f2:	e9d7 6700 	ldrd	r6, r7, [r7]
 803f7f6:	42bb      	cmp	r3, r7
 803f7f8:	bf08      	it	eq
 803f7fa:	42b2      	cmpeq	r2, r6
 803f7fc:	d10b      	bne.n	803f816 <__cxa_end_cleanup_impl+0x3e>
 803f7fe:	6a23      	ldr	r3, [r4, #32]
 803f800:	3b01      	subs	r3, #1
 803f802:	6223      	str	r3, [r4, #32]
 803f804:	b94b      	cbnz	r3, 803f81a <__cxa_end_cleanup_impl+0x42>
 803f806:	69e3      	ldr	r3, [r4, #28]
 803f808:	60ab      	str	r3, [r5, #8]
 803f80a:	2300      	movs	r3, #0
 803f80c:	61e3      	str	r3, [r4, #28]
 803f80e:	e004      	b.n	803f81a <__cxa_end_cleanup_impl+0x42>
 803f810:	f000 f876 	bl	803f900 <std::terminate()>
 803f814:	e7e6      	b.n	803f7e4 <__cxa_end_cleanup_impl+0xc>
 803f816:	2300      	movs	r3, #0
 803f818:	60ab      	str	r3, [r5, #8]
 803f81a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 803f81c:	f3af 8000 	nop.w
 803f820:	432b2b00 	.word	0x432b2b00
 803f824:	434c4e47 	.word	0x434c4e47

0803f828 <__cxa_begin_catch>:
 803f828:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 803f82c:	4604      	mov	r4, r0
 803f82e:	6803      	ldr	r3, [r0, #0]
 803f830:	f023 06ff 	bic.w	r6, r3, #255	; 0xff
 803f834:	6847      	ldr	r7, [r0, #4]
 803f836:	f000 f82f 	bl	803f898 <__cxa_get_globals>
 803f83a:	4605      	mov	r5, r0
 803f83c:	f1a4 0828 	sub.w	r8, r4, #40	; 0x28
 803f840:	a313      	add	r3, pc, #76	; (adr r3, 803f890 <__cxa_begin_catch+0x68>)
 803f842:	e9d3 2300 	ldrd	r2, r3, [r3]
 803f846:	429f      	cmp	r7, r3
 803f848:	bf08      	it	eq
 803f84a:	4296      	cmpeq	r6, r2
 803f84c:	d009      	beq.n	803f862 <__cxa_begin_catch+0x3a>
 803f84e:	6803      	ldr	r3, [r0, #0]
 803f850:	b10b      	cbz	r3, 803f856 <__cxa_begin_catch+0x2e>
 803f852:	f000 f855 	bl	803f900 <std::terminate()>
 803f856:	f8c5 8000 	str.w	r8, [r5]
 803f85a:	f104 0058 	add.w	r0, r4, #88	; 0x58
 803f85e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 803f862:	f854 3c10 	ldr.w	r3, [r4, #-16]
 803f866:	2b00      	cmp	r3, #0
 803f868:	bfb4      	ite	lt
 803f86a:	f1c3 0301 	rsblt	r3, r3, #1
 803f86e:	3301      	addge	r3, #1
 803f870:	f844 3c10 	str.w	r3, [r4, #-16]
 803f874:	6803      	ldr	r3, [r0, #0]
 803f876:	4543      	cmp	r3, r8
 803f878:	bf1c      	itt	ne
 803f87a:	f844 3c14 	strne.w	r3, [r4, #-20]
 803f87e:	f8c0 8000 	strne.w	r8, [r0]
 803f882:	6843      	ldr	r3, [r0, #4]
 803f884:	3b01      	subs	r3, #1
 803f886:	6043      	str	r3, [r0, #4]
 803f888:	6a60      	ldr	r0, [r4, #36]	; 0x24
 803f88a:	e7e8      	b.n	803f85e <__cxa_begin_catch+0x36>
 803f88c:	f3af 8000 	nop.w
 803f890:	432b2b00 	.word	0x432b2b00
 803f894:	434c4e47 	.word	0x434c4e47

0803f898 <__cxa_get_globals>:
 803f898:	4800      	ldr	r0, [pc, #0]	; (803f89c <__cxa_get_globals+0x4>)
 803f89a:	4770      	bx	lr
 803f89c:	200124d8 	.word	0x200124d8

0803f8a0 <__cxa_get_globals_fast>:
 803f8a0:	4800      	ldr	r0, [pc, #0]	; (803f8a4 <__cxa_get_globals_fast+0x4>)
 803f8a2:	4770      	bx	lr
 803f8a4:	200124d8 	.word	0x200124d8

0803f8a8 <std::get_terminate()>:
 803f8a8:	4b06      	ldr	r3, [pc, #24]	; (803f8c4 <std::get_terminate()+0x1c>)
 803f8aa:	f3bf 8f5b 	dmb	ish
 803f8ae:	e853 0f00 	ldrex	r0, [r3]
 803f8b2:	1c02      	adds	r2, r0, #0
 803f8b4:	e843 2100 	strex	r1, r2, [r3]
 803f8b8:	2900      	cmp	r1, #0
 803f8ba:	d1f8      	bne.n	803f8ae <std::get_terminate()+0x6>
 803f8bc:	f3bf 8f5b 	dmb	ish
 803f8c0:	4770      	bx	lr
 803f8c2:	bf00      	nop
 803f8c4:	200124e4 	.word	0x200124e4

0803f8c8 <std::__terminate(void (*)())>:
 803f8c8:	b508      	push	{r3, lr}
 803f8ca:	4780      	blx	r0
 803f8cc:	4803      	ldr	r0, [pc, #12]	; (803f8dc <std::__terminate(void (*)())+0x14>)
 803f8ce:	f000 ff5f 	bl	8040790 <abort_message>
 803f8d2:	f7ff ffa9 	bl	803f828 <__cxa_begin_catch>
 803f8d6:	4802      	ldr	r0, [pc, #8]	; (803f8e0 <std::__terminate(void (*)())+0x18>)
 803f8d8:	f000 ff5a 	bl	8040790 <abort_message>
 803f8dc:	0804bb0c 	.word	0x0804bb0c
 803f8e0:	0804bb34 	.word	0x0804bb34
 803f8e4:	0000060d 	.word	0x0000060d
 803f8e8:	01b10884 	.word	0x01b10884
 803f8ec:	00b0b0b0 	.word	0x00b0b0b0
 803f8f0:	010d10ff 	.word	0x010d10ff
 803f8f4:	0a080204 	.word	0x0a080204
 803f8f8:	00000101 	.word	0x00000101
 803f8fc:	00000000 	.word	0x00000000

0803f900 <std::terminate()>:
 803f900:	b508      	push	{r3, lr}
 803f902:	f7ff ffcd 	bl	803f8a0 <__cxa_get_globals_fast>
 803f906:	b160      	cbz	r0, 803f922 <std::terminate()+0x22>
 803f908:	6803      	ldr	r3, [r0, #0]
 803f90a:	b153      	cbz	r3, 803f922 <std::terminate()+0x22>
 803f90c:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 803f90e:	f022 00ff 	bic.w	r0, r2, #255	; 0xff
 803f912:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 803f914:	a506      	add	r5, pc, #24	; (adr r5, 803f930 <std::terminate()+0x30>)
 803f916:	e9d5 4500 	ldrd	r4, r5, [r5]
 803f91a:	42a9      	cmp	r1, r5
 803f91c:	bf08      	it	eq
 803f91e:	42a0      	cmpeq	r0, r4
 803f920:	d003      	beq.n	803f92a <std::terminate()+0x2a>
 803f922:	f7ff ffc1 	bl	803f8a8 <std::get_terminate()>
 803f926:	f7ff ffcf 	bl	803f8c8 <std::__terminate(void (*)())>
 803f92a:	6918      	ldr	r0, [r3, #16]
 803f92c:	f7ff ffcc 	bl	803f8c8 <std::__terminate(void (*)())>
 803f930:	432b2b00 	.word	0x432b2b00
 803f934:	434c4e47 	.word	0x434c4e47

0803f938 <readULEB128>:
 803f938:	b430      	push	{r4, r5}
 803f93a:	4605      	mov	r5, r0
 803f93c:	6804      	ldr	r4, [r0, #0]
 803f93e:	2200      	movs	r2, #0
 803f940:	4610      	mov	r0, r2
 803f942:	f814 1b01 	ldrb.w	r1, [r4], #1
 803f946:	f001 037f 	and.w	r3, r1, #127	; 0x7f
 803f94a:	4093      	lsls	r3, r2
 803f94c:	4318      	orrs	r0, r3
 803f94e:	3207      	adds	r2, #7
 803f950:	f011 0f80 	tst.w	r1, #128	; 0x80
 803f954:	d1f5      	bne.n	803f942 <readULEB128+0xa>
 803f956:	602c      	str	r4, [r5, #0]
 803f958:	bc30      	pop	{r4, r5}
 803f95a:	4770      	bx	lr

0803f95c <readSLEB128>:
 803f95c:	b430      	push	{r4, r5}
 803f95e:	4605      	mov	r5, r0
 803f960:	6804      	ldr	r4, [r0, #0]
 803f962:	2200      	movs	r2, #0
 803f964:	4610      	mov	r0, r2
 803f966:	f814 1b01 	ldrb.w	r1, [r4], #1
 803f96a:	f001 037f 	and.w	r3, r1, #127	; 0x7f
 803f96e:	4093      	lsls	r3, r2
 803f970:	4318      	orrs	r0, r3
 803f972:	3207      	adds	r2, #7
 803f974:	f011 0f80 	tst.w	r1, #128	; 0x80
 803f978:	d1f5      	bne.n	803f966 <readSLEB128+0xa>
 803f97a:	602c      	str	r4, [r5, #0]
 803f97c:	f011 0f40 	tst.w	r1, #64	; 0x40
 803f980:	d006      	beq.n	803f990 <readSLEB128+0x34>
 803f982:	2a1f      	cmp	r2, #31
 803f984:	d804      	bhi.n	803f990 <readSLEB128+0x34>
 803f986:	f04f 33ff 	mov.w	r3, #4294967295
 803f98a:	fa03 f202 	lsl.w	r2, r3, r2
 803f98e:	4310      	orrs	r0, r2
 803f990:	bc30      	pop	{r4, r5}
 803f992:	4770      	bx	lr
 803f994:	0000      	movs	r0, r0
	...

0803f998 <get_thrown_object_ptr>:
 803f998:	b430      	push	{r4, r5}
 803f99a:	e9d0 4500 	ldrd	r4, r5, [r0]
 803f99e:	a306      	add	r3, pc, #24	; (adr r3, 803f9b8 <get_thrown_object_ptr+0x20>)
 803f9a0:	e9d3 2300 	ldrd	r2, r3, [r3]
 803f9a4:	429d      	cmp	r5, r3
 803f9a6:	bf0a      	itet	eq
 803f9a8:	4294      	cmpeq	r4, r2
 803f9aa:	3058      	addne	r0, #88	; 0x58
 803f9ac:	f850 0c28 	ldreq.w	r0, [r0, #-40]
 803f9b0:	bc30      	pop	{r4, r5}
 803f9b2:	4770      	bx	lr
 803f9b4:	f3af 8000 	nop.w
 803f9b8:	432b2b01 	.word	0x432b2b01
 803f9bc:	434c4e47 	.word	0x434c4e47

0803f9c0 <call_terminate>:
 803f9c0:	b538      	push	{r3, r4, r5, lr}
 803f9c2:	4605      	mov	r5, r0
 803f9c4:	460c      	mov	r4, r1
 803f9c6:	4608      	mov	r0, r1
 803f9c8:	f7ff ff2e 	bl	803f828 <__cxa_begin_catch>
 803f9cc:	b915      	cbnz	r5, 803f9d4 <call_terminate+0x14>
 803f9ce:	f7ff ff97 	bl	803f900 <std::terminate()>
 803f9d2:	bd38      	pop	{r3, r4, r5, pc}
 803f9d4:	f854 0c18 	ldr.w	r0, [r4, #-24]
 803f9d8:	f7ff ff76 	bl	803f8c8 <std::__terminate(void (*)())>

0803f9dc <set_registers>:
 803f9dc:	b5f0      	push	{r4, r5, r6, r7, lr}
 803f9de:	b085      	sub	sp, #20
 803f9e0:	460d      	mov	r5, r1
 803f9e2:	4617      	mov	r7, r2
 803f9e4:	2400      	movs	r4, #0
 803f9e6:	9003      	str	r0, [sp, #12]
 803f9e8:	ae03      	add	r6, sp, #12
 803f9ea:	9600      	str	r6, [sp, #0]
 803f9ec:	4623      	mov	r3, r4
 803f9ee:	4622      	mov	r2, r4
 803f9f0:	4621      	mov	r1, r4
 803f9f2:	4628      	mov	r0, r5
 803f9f4:	f000 fc46 	bl	8040284 <_Unwind_VRS_Set>
 803f9f8:	683b      	ldr	r3, [r7, #0]
 803f9fa:	9303      	str	r3, [sp, #12]
 803f9fc:	9600      	str	r6, [sp, #0]
 803f9fe:	4623      	mov	r3, r4
 803fa00:	2201      	movs	r2, #1
 803fa02:	4621      	mov	r1, r4
 803fa04:	4628      	mov	r0, r5
 803fa06:	f000 fc3d 	bl	8040284 <_Unwind_VRS_Set>
 803fa0a:	693f      	ldr	r7, [r7, #16]
 803fa0c:	9403      	str	r4, [sp, #12]
 803fa0e:	9600      	str	r6, [sp, #0]
 803fa10:	4623      	mov	r3, r4
 803fa12:	220f      	movs	r2, #15
 803fa14:	4621      	mov	r1, r4
 803fa16:	4628      	mov	r0, r5
 803fa18:	f000 fc6c 	bl	80402f4 <_Unwind_VRS_Get>
 803fa1c:	9b03      	ldr	r3, [sp, #12]
 803fa1e:	f003 0301 	and.w	r3, r3, #1
 803fa22:	433b      	orrs	r3, r7
 803fa24:	9303      	str	r3, [sp, #12]
 803fa26:	9600      	str	r6, [sp, #0]
 803fa28:	4623      	mov	r3, r4
 803fa2a:	220f      	movs	r2, #15
 803fa2c:	4621      	mov	r1, r4
 803fa2e:	4628      	mov	r0, r5
 803fa30:	f000 fc28 	bl	8040284 <_Unwind_VRS_Set>
 803fa34:	b005      	add	sp, #20
 803fa36:	bdf0      	pop	{r4, r5, r6, r7, pc}

0803fa38 <readEncodedPointer>:
 803fa38:	b570      	push	{r4, r5, r6, lr}
 803fa3a:	b084      	sub	sp, #16
 803fa3c:	29ff      	cmp	r1, #255	; 0xff
 803fa3e:	d07d      	beq.n	803fb3c <readEncodedPointer+0x104>
 803fa40:	4606      	mov	r6, r0
 803fa42:	460c      	mov	r4, r1
 803fa44:	6801      	ldr	r1, [r0, #0]
 803fa46:	9103      	str	r1, [sp, #12]
 803fa48:	f004 030f 	and.w	r3, r4, #15
 803fa4c:	2b0c      	cmp	r3, #12
 803fa4e:	d85c      	bhi.n	803fb0a <readEncodedPointer+0xd2>
 803fa50:	e8df f003 	tbb	[pc, r3]
 803fa54:	2d231907 	.word	0x2d231907
 803fa58:	5b5b5b36 	.word	0x5b5b5b36
 803fa5c:	493f1e5b 	.word	0x493f1e5b
 803fa60:	52          	.byte	0x52
 803fa61:	00          	.byte	0x00
 803fa62:	2204      	movs	r2, #4
 803fa64:	4668      	mov	r0, sp
 803fa66:	f7ff fdcc 	bl	803f602 <__aeabi_memcpy>
 803fa6a:	9b03      	ldr	r3, [sp, #12]
 803fa6c:	3304      	adds	r3, #4
 803fa6e:	9303      	str	r3, [sp, #12]
 803fa70:	9d00      	ldr	r5, [sp, #0]
 803fa72:	f014 0370 	ands.w	r3, r4, #112	; 0x70
 803fa76:	d052      	beq.n	803fb1e <readEncodedPointer+0xe6>
 803fa78:	2b10      	cmp	r3, #16
 803fa7a:	d14e      	bne.n	803fb1a <readEncodedPointer+0xe2>
 803fa7c:	2d00      	cmp	r5, #0
 803fa7e:	d052      	beq.n	803fb26 <readEncodedPointer+0xee>
 803fa80:	6833      	ldr	r3, [r6, #0]
 803fa82:	441d      	add	r5, r3
 803fa84:	e04b      	b.n	803fb1e <readEncodedPointer+0xe6>
 803fa86:	a803      	add	r0, sp, #12
 803fa88:	f7ff ff56 	bl	803f938 <readULEB128>
 803fa8c:	4605      	mov	r5, r0
 803fa8e:	e7f0      	b.n	803fa72 <readEncodedPointer+0x3a>
 803fa90:	a803      	add	r0, sp, #12
 803fa92:	f7ff ff63 	bl	803f95c <readSLEB128>
 803fa96:	4605      	mov	r5, r0
 803fa98:	e7eb      	b.n	803fa72 <readEncodedPointer+0x3a>
 803fa9a:	2202      	movs	r2, #2
 803fa9c:	4668      	mov	r0, sp
 803fa9e:	f7ff fdb0 	bl	803f602 <__aeabi_memcpy>
 803faa2:	9b03      	ldr	r3, [sp, #12]
 803faa4:	3302      	adds	r3, #2
 803faa6:	9303      	str	r3, [sp, #12]
 803faa8:	f8bd 5000 	ldrh.w	r5, [sp]
 803faac:	e7e1      	b.n	803fa72 <readEncodedPointer+0x3a>
 803faae:	2204      	movs	r2, #4
 803fab0:	4668      	mov	r0, sp
 803fab2:	f7ff fda6 	bl	803f602 <__aeabi_memcpy>
 803fab6:	9b03      	ldr	r3, [sp, #12]
 803fab8:	3304      	adds	r3, #4
 803faba:	9303      	str	r3, [sp, #12]
 803fabc:	9d00      	ldr	r5, [sp, #0]
 803fabe:	e7d8      	b.n	803fa72 <readEncodedPointer+0x3a>
 803fac0:	2208      	movs	r2, #8
 803fac2:	4668      	mov	r0, sp
 803fac4:	f7ff fd9d 	bl	803f602 <__aeabi_memcpy>
 803fac8:	9b03      	ldr	r3, [sp, #12]
 803faca:	3308      	adds	r3, #8
 803facc:	9303      	str	r3, [sp, #12]
 803face:	9d00      	ldr	r5, [sp, #0]
 803fad0:	e7cf      	b.n	803fa72 <readEncodedPointer+0x3a>
 803fad2:	2202      	movs	r2, #2
 803fad4:	4668      	mov	r0, sp
 803fad6:	f7ff fd94 	bl	803f602 <__aeabi_memcpy>
 803fada:	9b03      	ldr	r3, [sp, #12]
 803fadc:	3302      	adds	r3, #2
 803fade:	9303      	str	r3, [sp, #12]
 803fae0:	f9bd 5000 	ldrsh.w	r5, [sp]
 803fae4:	e7c5      	b.n	803fa72 <readEncodedPointer+0x3a>
 803fae6:	2204      	movs	r2, #4
 803fae8:	4668      	mov	r0, sp
 803faea:	f7ff fd8a 	bl	803f602 <__aeabi_memcpy>
 803faee:	9b03      	ldr	r3, [sp, #12]
 803faf0:	3304      	adds	r3, #4
 803faf2:	9303      	str	r3, [sp, #12]
 803faf4:	9d00      	ldr	r5, [sp, #0]
 803faf6:	e7bc      	b.n	803fa72 <readEncodedPointer+0x3a>
 803faf8:	2208      	movs	r2, #8
 803fafa:	4668      	mov	r0, sp
 803fafc:	f7ff fd81 	bl	803f602 <__aeabi_memcpy>
 803fb00:	9b03      	ldr	r3, [sp, #12]
 803fb02:	3308      	adds	r3, #8
 803fb04:	9303      	str	r3, [sp, #12]
 803fb06:	9d00      	ldr	r5, [sp, #0]
 803fb08:	e7b3      	b.n	803fa72 <readEncodedPointer+0x3a>
 803fb0a:	f7f9 f9fb 	bl	8038f04 <abort>
 803fb0e:	f014 0370 	ands.w	r3, r4, #112	; 0x70
 803fb12:	d00f      	beq.n	803fb34 <readEncodedPointer+0xfc>
 803fb14:	2b10      	cmp	r3, #16
 803fb16:	d00f      	beq.n	803fb38 <readEncodedPointer+0x100>
 803fb18:	2500      	movs	r5, #0
 803fb1a:	f7f9 f9f3 	bl	8038f04 <abort>
 803fb1e:	b115      	cbz	r5, 803fb26 <readEncodedPointer+0xee>
 803fb20:	f014 0f80 	tst.w	r4, #128	; 0x80
 803fb24:	d104      	bne.n	803fb30 <readEncodedPointer+0xf8>
 803fb26:	9b03      	ldr	r3, [sp, #12]
 803fb28:	6033      	str	r3, [r6, #0]
 803fb2a:	4628      	mov	r0, r5
 803fb2c:	b004      	add	sp, #16
 803fb2e:	bd70      	pop	{r4, r5, r6, pc}
 803fb30:	682d      	ldr	r5, [r5, #0]
 803fb32:	e7f8      	b.n	803fb26 <readEncodedPointer+0xee>
 803fb34:	2500      	movs	r5, #0
 803fb36:	e7f6      	b.n	803fb26 <readEncodedPointer+0xee>
 803fb38:	2500      	movs	r5, #0
 803fb3a:	e7f4      	b.n	803fb26 <readEncodedPointer+0xee>
 803fb3c:	2500      	movs	r5, #0
 803fb3e:	e7f4      	b.n	803fb2a <readEncodedPointer+0xf2>

0803fb40 <exception_spec_can_catch>:
 803fb40:	b5f0      	push	{r4, r5, r6, r7, lr}
 803fb42:	b083      	sub	sp, #12
 803fb44:	4604      	mov	r4, r0
 803fb46:	9d08      	ldr	r5, [sp, #32]
 803fb48:	9e09      	ldr	r6, [sp, #36]	; 0x24
 803fb4a:	4617      	mov	r7, r2
 803fb4c:	b14a      	cbz	r2, 803fb62 <exception_spec_can_catch+0x22>
 803fb4e:	43e0      	mvns	r0, r4
 803fb50:	eb07 0380 	add.w	r3, r7, r0, lsl #2
 803fb54:	1d1c      	adds	r4, r3, #4
 803fb56:	f857 0020 	ldr.w	r0, [r7, r0, lsl #2]
 803fb5a:	b9a0      	cbnz	r0, 803fb86 <exception_spec_can_catch+0x46>
 803fb5c:	2001      	movs	r0, #1
 803fb5e:	b003      	add	sp, #12
 803fb60:	bdf0      	pop	{r4, r5, r6, r7, pc}
 803fb62:	990a      	ldr	r1, [sp, #40]	; 0x28
 803fb64:	2000      	movs	r0, #0
 803fb66:	f7ff ff2b 	bl	803f9c0 <call_terminate>
 803fb6a:	e7f0      	b.n	803fb4e <exception_spec_can_catch+0xe>
 803fb6c:	9601      	str	r6, [sp, #4]
 803fb6e:	6803      	ldr	r3, [r0, #0]
 803fb70:	691b      	ldr	r3, [r3, #16]
 803fb72:	aa01      	add	r2, sp, #4
 803fb74:	4629      	mov	r1, r5
 803fb76:	4798      	blx	r3
 803fb78:	b950      	cbnz	r0, 803fb90 <exception_spec_can_catch+0x50>
 803fb7a:	4623      	mov	r3, r4
 803fb7c:	f853 0b04 	ldr.w	r0, [r3], #4
 803fb80:	2800      	cmp	r0, #0
 803fb82:	d0eb      	beq.n	803fb5c <exception_spec_can_catch+0x1c>
 803fb84:	461c      	mov	r4, r3
 803fb86:	2800      	cmp	r0, #0
 803fb88:	d0f0      	beq.n	803fb6c <exception_spec_can_catch+0x2c>
 803fb8a:	1f23      	subs	r3, r4, #4
 803fb8c:	4418      	add	r0, r3
 803fb8e:	e7ed      	b.n	803fb6c <exception_spec_can_catch+0x2c>
 803fb90:	2000      	movs	r0, #0
 803fb92:	e7e4      	b.n	803fb5e <exception_spec_can_catch+0x1e>

0803fb94 <scan_eh_tab>:
 803fb94:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 803fb98:	b091      	sub	sp, #68	; 0x44
 803fb9a:	4681      	mov	r9, r0
 803fb9c:	468b      	mov	fp, r1
 803fb9e:	9205      	str	r2, [sp, #20]
 803fba0:	461f      	mov	r7, r3
 803fba2:	9c1a      	ldr	r4, [sp, #104]	; 0x68
 803fba4:	2200      	movs	r2, #0
 803fba6:	2300      	movs	r3, #0
 803fba8:	e9c0 2300 	strd	r2, r3, [r0]
 803fbac:	2300      	movs	r3, #0
 803fbae:	6083      	str	r3, [r0, #8]
 803fbb0:	60c3      	str	r3, [r0, #12]
 803fbb2:	6103      	str	r3, [r0, #16]
 803fbb4:	6143      	str	r3, [r0, #20]
 803fbb6:	2303      	movs	r3, #3
 803fbb8:	7603      	strb	r3, [r0, #24]
 803fbba:	f011 0301 	ands.w	r3, r1, #1
 803fbbe:	9306      	str	r3, [sp, #24]
 803fbc0:	d06b      	beq.n	803fc9a <scan_eh_tab+0x106>
 803fbc2:	f011 0f0e 	tst.w	r1, #14
 803fbc6:	f040 8190 	bne.w	803feea <scan_eh_tab+0x356>
 803fbca:	4620      	mov	r0, r4
 803fbcc:	f000 fb19 	bl	8040202 <_Unwind_GetLanguageSpecificData>
 803fbd0:	900f      	str	r0, [sp, #60]	; 0x3c
 803fbd2:	2800      	cmp	r0, #0
 803fbd4:	d06c      	beq.n	803fcb0 <scan_eh_tab+0x11c>
 803fbd6:	f8c9 000c 	str.w	r0, [r9, #12]
 803fbda:	2100      	movs	r1, #0
 803fbdc:	910d      	str	r1, [sp, #52]	; 0x34
 803fbde:	ab0d      	add	r3, sp, #52	; 0x34
 803fbe0:	9300      	str	r3, [sp, #0]
 803fbe2:	460b      	mov	r3, r1
 803fbe4:	220f      	movs	r2, #15
 803fbe6:	4620      	mov	r0, r4
 803fbe8:	f000 fb84 	bl	80402f4 <_Unwind_VRS_Get>
 803fbec:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 803fbee:	4620      	mov	r0, r4
 803fbf0:	f000 fd9b 	bl	804072a <_Unwind_GetRegionStart>
 803fbf4:	4604      	mov	r4, r0
 803fbf6:	f025 0801 	bic.w	r8, r5, #1
 803fbfa:	f108 38ff 	add.w	r8, r8, #4294967295
 803fbfe:	eba8 0800 	sub.w	r8, r8, r0
 803fc02:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 803fc04:	1c5a      	adds	r2, r3, #1
 803fc06:	920f      	str	r2, [sp, #60]	; 0x3c
 803fc08:	7819      	ldrb	r1, [r3, #0]
 803fc0a:	a80f      	add	r0, sp, #60	; 0x3c
 803fc0c:	f7ff ff14 	bl	803fa38 <readEncodedPointer>
 803fc10:	4603      	mov	r3, r0
 803fc12:	2800      	cmp	r0, #0
 803fc14:	bf08      	it	eq
 803fc16:	4623      	moveq	r3, r4
 803fc18:	9308      	str	r3, [sp, #32]
 803fc1a:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 803fc1c:	1c5a      	adds	r2, r3, #1
 803fc1e:	920f      	str	r2, [sp, #60]	; 0x3c
 803fc20:	781b      	ldrb	r3, [r3, #0]
 803fc22:	9307      	str	r3, [sp, #28]
 803fc24:	2bff      	cmp	r3, #255	; 0xff
 803fc26:	d147      	bne.n	803fcb8 <scan_eh_tab+0x124>
 803fc28:	2300      	movs	r3, #0
 803fc2a:	9309      	str	r3, [sp, #36]	; 0x24
 803fc2c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 803fc2e:	1c5a      	adds	r2, r3, #1
 803fc30:	920f      	str	r2, [sp, #60]	; 0x3c
 803fc32:	781e      	ldrb	r6, [r3, #0]
 803fc34:	a80f      	add	r0, sp, #60	; 0x3c
 803fc36:	f7ff fe7f 	bl	803f938 <readULEB128>
 803fc3a:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 803fc3c:	eb03 0a00 	add.w	sl, r3, r0
 803fc40:	930e      	str	r3, [sp, #56]	; 0x38
 803fc42:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 803fc44:	4553      	cmp	r3, sl
 803fc46:	f080 814c 	bcs.w	803fee2 <scan_eh_tab+0x34e>
 803fc4a:	4631      	mov	r1, r6
 803fc4c:	a80e      	add	r0, sp, #56	; 0x38
 803fc4e:	f7ff fef3 	bl	803fa38 <readEncodedPointer>
 803fc52:	4604      	mov	r4, r0
 803fc54:	4631      	mov	r1, r6
 803fc56:	a80e      	add	r0, sp, #56	; 0x38
 803fc58:	f7ff feee 	bl	803fa38 <readEncodedPointer>
 803fc5c:	4605      	mov	r5, r0
 803fc5e:	4631      	mov	r1, r6
 803fc60:	a80e      	add	r0, sp, #56	; 0x38
 803fc62:	f7ff fee9 	bl	803fa38 <readEncodedPointer>
 803fc66:	9004      	str	r0, [sp, #16]
 803fc68:	a80e      	add	r0, sp, #56	; 0x38
 803fc6a:	f7ff fe65 	bl	803f938 <readULEB128>
 803fc6e:	45a0      	cmp	r8, r4
 803fc70:	f0c0 8132 	bcc.w	803fed8 <scan_eh_tab+0x344>
 803fc74:	442c      	add	r4, r5
 803fc76:	4544      	cmp	r4, r8
 803fc78:	d9e3      	bls.n	803fc42 <scan_eh_tab+0xae>
 803fc7a:	9b04      	ldr	r3, [sp, #16]
 803fc7c:	b31b      	cbz	r3, 803fcc6 <scan_eh_tab+0x132>
 803fc7e:	9b08      	ldr	r3, [sp, #32]
 803fc80:	9a04      	ldr	r2, [sp, #16]
 803fc82:	4413      	add	r3, r2
 803fc84:	930a      	str	r3, [sp, #40]	; 0x28
 803fc86:	bb68      	cbnz	r0, 803fce4 <scan_eh_tab+0x150>
 803fc88:	f00b 0b06 	and.w	fp, fp, #6
 803fc8c:	f1bb 0f02 	cmp.w	fp, #2
 803fc90:	d01d      	beq.n	803fcce <scan_eh_tab+0x13a>
 803fc92:	2308      	movs	r3, #8
 803fc94:	f889 3018 	strb.w	r3, [r9, #24]
 803fc98:	e127      	b.n	803feea <scan_eh_tab+0x356>
 803fc9a:	f011 0f02 	tst.w	r1, #2
 803fc9e:	f000 8124 	beq.w	803feea <scan_eh_tab+0x356>
 803fca2:	f001 030c 	and.w	r3, r1, #12
 803fca6:	2b0c      	cmp	r3, #12
 803fca8:	d18f      	bne.n	803fbca <scan_eh_tab+0x36>
 803fcaa:	2302      	movs	r3, #2
 803fcac:	7603      	strb	r3, [r0, #24]
 803fcae:	e11c      	b.n	803feea <scan_eh_tab+0x356>
 803fcb0:	2308      	movs	r3, #8
 803fcb2:	f889 3018 	strb.w	r3, [r9, #24]
 803fcb6:	e118      	b.n	803feea <scan_eh_tab+0x356>
 803fcb8:	a80f      	add	r0, sp, #60	; 0x3c
 803fcba:	f7ff fe3d 	bl	803f938 <readULEB128>
 803fcbe:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 803fcc0:	4403      	add	r3, r0
 803fcc2:	9309      	str	r3, [sp, #36]	; 0x24
 803fcc4:	e7b2      	b.n	803fc2c <scan_eh_tab+0x98>
 803fcc6:	2308      	movs	r3, #8
 803fcc8:	f889 3018 	strb.w	r3, [r9, #24]
 803fccc:	e10d      	b.n	803feea <scan_eh_tab+0x356>
 803fcce:	2200      	movs	r2, #0
 803fcd0:	2300      	movs	r3, #0
 803fcd2:	e9c9 2300 	strd	r2, r3, [r9]
 803fcd6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 803fcd8:	f8c9 3010 	str.w	r3, [r9, #16]
 803fcdc:	2306      	movs	r3, #6
 803fcde:	f889 3018 	strb.w	r3, [r9, #24]
 803fce2:	e102      	b.n	803feea <scan_eh_tab+0x356>
 803fce4:	3801      	subs	r0, #1
 803fce6:	4450      	add	r0, sl
 803fce8:	900c      	str	r0, [sp, #48]	; 0x30
 803fcea:	f00b 0a06 	and.w	sl, fp, #6
 803fcee:	f8cd 902c 	str.w	r9, [sp, #44]	; 0x2c
 803fcf2:	46b8      	mov	r8, r7
 803fcf4:	9f09      	ldr	r7, [sp, #36]	; 0x24
 803fcf6:	f8cd a020 	str.w	sl, [sp, #32]
 803fcfa:	e03c      	b.n	803fd76 <scan_eh_tab+0x1e2>
 803fcfc:	b32f      	cbz	r7, 803fd4a <scan_eh_tab+0x1b6>
 803fcfe:	eba7 0484 	sub.w	r4, r7, r4, lsl #2
 803fd02:	6825      	ldr	r5, [r4, #0]
 803fd04:	b335      	cbz	r5, 803fd54 <scan_eh_tab+0x1c0>
 803fd06:	1963      	adds	r3, r4, r5
 803fd08:	9304      	str	r3, [sp, #16]
 803fd0a:	d023      	beq.n	803fd54 <scan_eh_tab+0x1c0>
 803fd0c:	9b05      	ldr	r3, [sp, #20]
 803fd0e:	b33b      	cbz	r3, 803fd60 <scan_eh_tab+0x1cc>
 803fd10:	4640      	mov	r0, r8
 803fd12:	f7ff fe41 	bl	803f998 <get_thrown_object_ptr>
 803fd16:	900d      	str	r0, [sp, #52]	; 0x34
 803fd18:	f858 3c24 	ldr.w	r3, [r8, #-36]
 803fd1c:	9309      	str	r3, [sp, #36]	; 0x24
 803fd1e:	2800      	cmp	r0, #0
 803fd20:	d067      	beq.n	803fdf2 <scan_eh_tab+0x25e>
 803fd22:	2b00      	cmp	r3, #0
 803fd24:	d065      	beq.n	803fdf2 <scan_eh_tab+0x25e>
 803fd26:	5963      	ldr	r3, [r4, r5]
 803fd28:	691b      	ldr	r3, [r3, #16]
 803fd2a:	aa0d      	add	r2, sp, #52	; 0x34
 803fd2c:	9909      	ldr	r1, [sp, #36]	; 0x24
 803fd2e:	9804      	ldr	r0, [sp, #16]
 803fd30:	4798      	blx	r3
 803fd32:	b1a8      	cbz	r0, 803fd60 <scan_eh_tab+0x1cc>
 803fd34:	9b06      	ldr	r3, [sp, #24]
 803fd36:	2b00      	cmp	r3, #0
 803fd38:	d160      	bne.n	803fdfc <scan_eh_tab+0x268>
 803fd3a:	f01b 0f08 	tst.w	fp, #8
 803fd3e:	d10f      	bne.n	803fd60 <scan_eh_tab+0x1cc>
 803fd40:	4641      	mov	r1, r8
 803fd42:	2001      	movs	r0, #1
 803fd44:	f7ff fe3c 	bl	803f9c0 <call_terminate>
 803fd48:	e00a      	b.n	803fd60 <scan_eh_tab+0x1cc>
 803fd4a:	4641      	mov	r1, r8
 803fd4c:	9805      	ldr	r0, [sp, #20]
 803fd4e:	f7ff fe37 	bl	803f9c0 <call_terminate>
 803fd52:	e7d4      	b.n	803fcfe <scan_eh_tab+0x16a>
 803fd54:	f01b 0f05 	tst.w	fp, #5
 803fd58:	d132      	bne.n	803fdc0 <scan_eh_tab+0x22c>
 803fd5a:	f01b 0f08 	tst.w	fp, #8
 803fd5e:	d043      	beq.n	803fde8 <scan_eh_tab+0x254>
 803fd60:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 803fd62:	930d      	str	r3, [sp, #52]	; 0x34
 803fd64:	a80d      	add	r0, sp, #52	; 0x34
 803fd66:	f7ff fdf9 	bl	803f95c <readSLEB128>
 803fd6a:	2800      	cmp	r0, #0
 803fd6c:	f000 80ae 	beq.w	803fecc <scan_eh_tab+0x338>
 803fd70:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 803fd72:	4403      	add	r3, r0
 803fd74:	930c      	str	r3, [sp, #48]	; 0x30
 803fd76:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 803fd78:	a80c      	add	r0, sp, #48	; 0x30
 803fd7a:	f7ff fdef 	bl	803f95c <readSLEB128>
 803fd7e:	4604      	mov	r4, r0
 803fd80:	4681      	mov	r9, r0
 803fd82:	ea4f 7ae0 	mov.w	sl, r0, asr #31
 803fd86:	2800      	cmp	r0, #0
 803fd88:	dcb8      	bgt.n	803fcfc <scan_eh_tab+0x168>
 803fd8a:	2800      	cmp	r0, #0
 803fd8c:	f17a 0300 	sbcs.w	r3, sl, #0
 803fd90:	db46      	blt.n	803fe20 <scan_eh_tab+0x28c>
 803fd92:	9b08      	ldr	r3, [sp, #32]
 803fd94:	2b02      	cmp	r3, #2
 803fd96:	d1e3      	bne.n	803fd60 <scan_eh_tab+0x1cc>
 803fd98:	f8dd 902c 	ldr.w	r9, [sp, #44]	; 0x2c
 803fd9c:	2200      	movs	r2, #0
 803fd9e:	2300      	movs	r3, #0
 803fda0:	e9c9 2300 	strd	r2, r3, [r9]
 803fda4:	f8c9 6008 	str.w	r6, [r9, #8]
 803fda8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 803fdaa:	f8c9 3010 	str.w	r3, [r9, #16]
 803fdae:	4640      	mov	r0, r8
 803fdb0:	f7ff fdf2 	bl	803f998 <get_thrown_object_ptr>
 803fdb4:	f8c9 0014 	str.w	r0, [r9, #20]
 803fdb8:	2306      	movs	r3, #6
 803fdba:	f889 3018 	strb.w	r3, [r9, #24]
 803fdbe:	e094      	b.n	803feea <scan_eh_tab+0x356>
 803fdc0:	464b      	mov	r3, r9
 803fdc2:	4654      	mov	r4, sl
 803fdc4:	f8dd 902c 	ldr.w	r9, [sp, #44]	; 0x2c
 803fdc8:	e9c9 3400 	strd	r3, r4, [r9]
 803fdcc:	f8c9 6008 	str.w	r6, [r9, #8]
 803fdd0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 803fdd2:	f8c9 3010 	str.w	r3, [r9, #16]
 803fdd6:	4640      	mov	r0, r8
 803fdd8:	f7ff fdde 	bl	803f998 <get_thrown_object_ptr>
 803fddc:	f8c9 0014 	str.w	r0, [r9, #20]
 803fde0:	2306      	movs	r3, #6
 803fde2:	f889 3018 	strb.w	r3, [r9, #24]
 803fde6:	e080      	b.n	803feea <scan_eh_tab+0x356>
 803fde8:	4641      	mov	r1, r8
 803fdea:	9805      	ldr	r0, [sp, #20]
 803fdec:	f7ff fde8 	bl	803f9c0 <call_terminate>
 803fdf0:	e7b6      	b.n	803fd60 <scan_eh_tab+0x1cc>
 803fdf2:	4641      	mov	r1, r8
 803fdf4:	2001      	movs	r0, #1
 803fdf6:	f7ff fde3 	bl	803f9c0 <call_terminate>
 803fdfa:	e794      	b.n	803fd26 <scan_eh_tab+0x192>
 803fdfc:	464b      	mov	r3, r9
 803fdfe:	4654      	mov	r4, sl
 803fe00:	f8dd 902c 	ldr.w	r9, [sp, #44]	; 0x2c
 803fe04:	e9c9 3400 	strd	r3, r4, [r9]
 803fe08:	f8c9 6008 	str.w	r6, [r9, #8]
 803fe0c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 803fe0e:	f8c9 3010 	str.w	r3, [r9, #16]
 803fe12:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 803fe14:	f8c9 3014 	str.w	r3, [r9, #20]
 803fe18:	2306      	movs	r3, #6
 803fe1a:	f889 3018 	strb.w	r3, [r9, #24]
 803fe1e:	e064      	b.n	803feea <scan_eh_tab+0x356>
 803fe20:	9b05      	ldr	r3, [sp, #20]
 803fe22:	b39b      	cbz	r3, 803fe8c <scan_eh_tab+0x2f8>
 803fe24:	4640      	mov	r0, r8
 803fe26:	f7ff fdb7 	bl	803f998 <get_thrown_object_ptr>
 803fe2a:	f858 4c24 	ldr.w	r4, [r8, #-36]
 803fe2e:	4605      	mov	r5, r0
 803fe30:	b1b0      	cbz	r0, 803fe60 <scan_eh_tab+0x2cc>
 803fe32:	b1ac      	cbz	r4, 803fe60 <scan_eh_tab+0x2cc>
 803fe34:	f8cd 8008 	str.w	r8, [sp, #8]
 803fe38:	9501      	str	r5, [sp, #4]
 803fe3a:	9400      	str	r4, [sp, #0]
 803fe3c:	9b07      	ldr	r3, [sp, #28]
 803fe3e:	463a      	mov	r2, r7
 803fe40:	4648      	mov	r0, r9
 803fe42:	4651      	mov	r1, sl
 803fe44:	f7ff fe7c 	bl	803fb40 <exception_spec_can_catch>
 803fe48:	2800      	cmp	r0, #0
 803fe4a:	d089      	beq.n	803fd60 <scan_eh_tab+0x1cc>
 803fe4c:	9b06      	ldr	r3, [sp, #24]
 803fe4e:	b963      	cbnz	r3, 803fe6a <scan_eh_tab+0x2d6>
 803fe50:	f01b 0f08 	tst.w	fp, #8
 803fe54:	d184      	bne.n	803fd60 <scan_eh_tab+0x1cc>
 803fe56:	4641      	mov	r1, r8
 803fe58:	2001      	movs	r0, #1
 803fe5a:	f7ff fdb1 	bl	803f9c0 <call_terminate>
 803fe5e:	e77f      	b.n	803fd60 <scan_eh_tab+0x1cc>
 803fe60:	4641      	mov	r1, r8
 803fe62:	2001      	movs	r0, #1
 803fe64:	f7ff fdac 	bl	803f9c0 <call_terminate>
 803fe68:	e7e4      	b.n	803fe34 <scan_eh_tab+0x2a0>
 803fe6a:	464b      	mov	r3, r9
 803fe6c:	4654      	mov	r4, sl
 803fe6e:	f8dd 902c 	ldr.w	r9, [sp, #44]	; 0x2c
 803fe72:	e9c9 3400 	strd	r3, r4, [r9]
 803fe76:	f8c9 6008 	str.w	r6, [r9, #8]
 803fe7a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 803fe7c:	f8c9 3010 	str.w	r3, [r9, #16]
 803fe80:	f8c9 5014 	str.w	r5, [r9, #20]
 803fe84:	2306      	movs	r3, #6
 803fe86:	f889 3018 	strb.w	r3, [r9, #24]
 803fe8a:	e02e      	b.n	803feea <scan_eh_tab+0x356>
 803fe8c:	f01b 0f05 	tst.w	fp, #5
 803fe90:	d108      	bne.n	803fea4 <scan_eh_tab+0x310>
 803fe92:	f01b 0f08 	tst.w	fp, #8
 803fe96:	f47f af63 	bne.w	803fd60 <scan_eh_tab+0x1cc>
 803fe9a:	4641      	mov	r1, r8
 803fe9c:	2000      	movs	r0, #0
 803fe9e:	f7ff fd8f 	bl	803f9c0 <call_terminate>
 803fea2:	e75d      	b.n	803fd60 <scan_eh_tab+0x1cc>
 803fea4:	4603      	mov	r3, r0
 803fea6:	4654      	mov	r4, sl
 803fea8:	f8dd 902c 	ldr.w	r9, [sp, #44]	; 0x2c
 803feac:	e9c9 3400 	strd	r3, r4, [r9]
 803feb0:	f8c9 6008 	str.w	r6, [r9, #8]
 803feb4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 803feb6:	f8c9 3010 	str.w	r3, [r9, #16]
 803feba:	4640      	mov	r0, r8
 803febc:	f7ff fd6c 	bl	803f998 <get_thrown_object_ptr>
 803fec0:	f8c9 0014 	str.w	r0, [r9, #20]
 803fec4:	2306      	movs	r3, #6
 803fec6:	f889 3018 	strb.w	r3, [r9, #24]
 803feca:	e00e      	b.n	803feea <scan_eh_tab+0x356>
 803fecc:	f8dd 902c 	ldr.w	r9, [sp, #44]	; 0x2c
 803fed0:	2308      	movs	r3, #8
 803fed2:	f889 3018 	strb.w	r3, [r9, #24]
 803fed6:	e008      	b.n	803feea <scan_eh_tab+0x356>
 803fed8:	4639      	mov	r1, r7
 803feda:	9805      	ldr	r0, [sp, #20]
 803fedc:	f7ff fd70 	bl	803f9c0 <call_terminate>
 803fee0:	e6af      	b.n	803fc42 <scan_eh_tab+0xae>
 803fee2:	4639      	mov	r1, r7
 803fee4:	9805      	ldr	r0, [sp, #20]
 803fee6:	f7ff fd6b 	bl	803f9c0 <call_terminate>
 803feea:	b011      	add	sp, #68	; 0x44
 803feec:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0803fef0 <__gxx_personality_v0>:
 803fef0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 803fef4:	b08d      	sub	sp, #52	; 0x34
 803fef6:	2900      	cmp	r1, #0
 803fef8:	f000 80d8 	beq.w	80400ac <__gxx_personality_v0+0x1bc>
 803fefc:	4680      	mov	r8, r0
 803fefe:	4614      	mov	r4, r2
 803ff00:	460d      	mov	r5, r1
 803ff02:	2a00      	cmp	r2, #0
 803ff04:	f000 80d5 	beq.w	80400b2 <__gxx_personality_v0+0x1c2>
 803ff08:	680b      	ldr	r3, [r1, #0]
 803ff0a:	f023 06ff 	bic.w	r6, r3, #255	; 0xff
 803ff0e:	684f      	ldr	r7, [r1, #4]
 803ff10:	a369      	add	r3, pc, #420	; (adr r3, 80400b8 <__gxx_personality_v0+0x1c8>)
 803ff12:	e9d3 2300 	ldrd	r2, r3, [r3]
 803ff16:	429f      	cmp	r7, r3
 803ff18:	bf06      	itte	eq
 803ff1a:	4296      	cmpeq	r6, r2
 803ff1c:	f04f 0901 	moveq.w	r9, #1
 803ff20:	f04f 0900 	movne.w	r9, #0
 803ff24:	9103      	str	r1, [sp, #12]
 803ff26:	ab03      	add	r3, sp, #12
 803ff28:	9300      	str	r3, [sp, #0]
 803ff2a:	2300      	movs	r3, #0
 803ff2c:	220c      	movs	r2, #12
 803ff2e:	4619      	mov	r1, r3
 803ff30:	4620      	mov	r0, r4
 803ff32:	f000 f9a7 	bl	8040284 <_Unwind_VRS_Set>
 803ff36:	f028 0308 	bic.w	r3, r8, #8
 803ff3a:	2b01      	cmp	r3, #1
 803ff3c:	d04c      	beq.n	803ffd8 <__gxx_personality_v0+0xe8>
 803ff3e:	2b02      	cmp	r3, #2
 803ff40:	f000 80a9 	beq.w	8040096 <__gxx_personality_v0+0x1a6>
 803ff44:	b12b      	cbz	r3, 803ff52 <__gxx_personality_v0+0x62>
 803ff46:	f04f 0803 	mov.w	r8, #3
 803ff4a:	4640      	mov	r0, r8
 803ff4c:	b00d      	add	sp, #52	; 0x34
 803ff4e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 803ff52:	f018 0f08 	tst.w	r8, #8
 803ff56:	d00a      	beq.n	803ff6e <__gxx_personality_v0+0x7e>
 803ff58:	4621      	mov	r1, r4
 803ff5a:	4628      	mov	r0, r5
 803ff5c:	f000 fbf1 	bl	8040742 <__gnu_unwind_frame>
 803ff60:	2800      	cmp	r0, #0
 803ff62:	bf0c      	ite	eq
 803ff64:	f04f 0808 	moveq.w	r8, #8
 803ff68:	f04f 0809 	movne.w	r8, #9
 803ff6c:	e7ed      	b.n	803ff4a <__gxx_personality_v0+0x5a>
 803ff6e:	9400      	str	r4, [sp, #0]
 803ff70:	462b      	mov	r3, r5
 803ff72:	464a      	mov	r2, r9
 803ff74:	2101      	movs	r1, #1
 803ff76:	a804      	add	r0, sp, #16
 803ff78:	f7ff fe0c 	bl	803fb94 <scan_eh_tab>
 803ff7c:	f89d 8028 	ldrb.w	r8, [sp, #40]	; 0x28
 803ff80:	f1b8 0f06 	cmp.w	r8, #6
 803ff84:	d00b      	beq.n	803ff9e <__gxx_personality_v0+0xae>
 803ff86:	f1b8 0f08 	cmp.w	r8, #8
 803ff8a:	d1de      	bne.n	803ff4a <__gxx_personality_v0+0x5a>
 803ff8c:	4621      	mov	r1, r4
 803ff8e:	4628      	mov	r0, r5
 803ff90:	f000 fbd7 	bl	8040742 <__gnu_unwind_frame>
 803ff94:	2800      	cmp	r0, #0
 803ff96:	bf18      	it	ne
 803ff98:	f04f 0809 	movne.w	r8, #9
 803ff9c:	e7d5      	b.n	803ff4a <__gxx_personality_v0+0x5a>
 803ff9e:	2100      	movs	r1, #0
 803ffa0:	9103      	str	r1, [sp, #12]
 803ffa2:	ab03      	add	r3, sp, #12
 803ffa4:	9300      	str	r3, [sp, #0]
 803ffa6:	460b      	mov	r3, r1
 803ffa8:	220d      	movs	r2, #13
 803ffaa:	4620      	mov	r0, r4
 803ffac:	f000 f9a2 	bl	80402f4 <_Unwind_VRS_Get>
 803ffb0:	9b03      	ldr	r3, [sp, #12]
 803ffb2:	622b      	str	r3, [r5, #32]
 803ffb4:	a340      	add	r3, pc, #256	; (adr r3, 80400b8 <__gxx_personality_v0+0x1c8>)
 803ffb6:	e9d3 2300 	ldrd	r2, r3, [r3]
 803ffba:	429f      	cmp	r7, r3
 803ffbc:	bf08      	it	eq
 803ffbe:	4296      	cmpeq	r6, r2
 803ffc0:	d1c3      	bne.n	803ff4a <__gxx_personality_v0+0x5a>
 803ffc2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 803ffc4:	626b      	str	r3, [r5, #36]	; 0x24
 803ffc6:	9b06      	ldr	r3, [sp, #24]
 803ffc8:	62ab      	str	r3, [r5, #40]	; 0x28
 803ffca:	9b07      	ldr	r3, [sp, #28]
 803ffcc:	62eb      	str	r3, [r5, #44]	; 0x2c
 803ffce:	9b08      	ldr	r3, [sp, #32]
 803ffd0:	632b      	str	r3, [r5, #48]	; 0x30
 803ffd2:	9b04      	ldr	r3, [sp, #16]
 803ffd4:	636b      	str	r3, [r5, #52]	; 0x34
 803ffd6:	e7b8      	b.n	803ff4a <__gxx_personality_v0+0x5a>
 803ffd8:	f8d5 8020 	ldr.w	r8, [r5, #32]
 803ffdc:	2100      	movs	r1, #0
 803ffde:	9103      	str	r1, [sp, #12]
 803ffe0:	ab03      	add	r3, sp, #12
 803ffe2:	9300      	str	r3, [sp, #0]
 803ffe4:	460b      	mov	r3, r1
 803ffe6:	220d      	movs	r2, #13
 803ffe8:	4620      	mov	r0, r4
 803ffea:	f000 f983 	bl	80402f4 <_Unwind_VRS_Get>
 803ffee:	9b03      	ldr	r3, [sp, #12]
 803fff0:	4598      	cmp	r8, r3
 803fff2:	d017      	beq.n	8040024 <__gxx_personality_v0+0x134>
 803fff4:	9400      	str	r4, [sp, #0]
 803fff6:	462b      	mov	r3, r5
 803fff8:	464a      	mov	r2, r9
 803fffa:	2102      	movs	r1, #2
 803fffc:	a804      	add	r0, sp, #16
 803fffe:	f7ff fdc9 	bl	803fb94 <scan_eh_tab>
 8040002:	f89d 8028 	ldrb.w	r8, [sp, #40]	; 0x28
 8040006:	f1b8 0f06 	cmp.w	r8, #6
 804000a:	d039      	beq.n	8040080 <__gxx_personality_v0+0x190>
 804000c:	f1b8 0f08 	cmp.w	r8, #8
 8040010:	d19b      	bne.n	803ff4a <__gxx_personality_v0+0x5a>
 8040012:	4621      	mov	r1, r4
 8040014:	4628      	mov	r0, r5
 8040016:	f000 fb94 	bl	8040742 <__gnu_unwind_frame>
 804001a:	2800      	cmp	r0, #0
 804001c:	bf18      	it	ne
 804001e:	f04f 0809 	movne.w	r8, #9
 8040022:	e792      	b.n	803ff4a <__gxx_personality_v0+0x5a>
 8040024:	a324      	add	r3, pc, #144	; (adr r3, 80400b8 <__gxx_personality_v0+0x1c8>)
 8040026:	e9d3 2300 	ldrd	r2, r3, [r3]
 804002a:	429f      	cmp	r7, r3
 804002c:	bf08      	it	eq
 804002e:	4296      	cmpeq	r6, r2
 8040030:	d00f      	beq.n	8040052 <__gxx_personality_v0+0x162>
 8040032:	9400      	str	r4, [sp, #0]
 8040034:	462b      	mov	r3, r5
 8040036:	2200      	movs	r2, #0
 8040038:	2106      	movs	r1, #6
 804003a:	a804      	add	r0, sp, #16
 804003c:	f7ff fdaa 	bl	803fb94 <scan_eh_tab>
 8040040:	f89d 3028 	ldrb.w	r3, [sp, #40]	; 0x28
 8040044:	2b06      	cmp	r3, #6
 8040046:	d013      	beq.n	8040070 <__gxx_personality_v0+0x180>
 8040048:	4629      	mov	r1, r5
 804004a:	2000      	movs	r0, #0
 804004c:	f7ff fcb8 	bl	803f9c0 <call_terminate>
 8040050:	e00e      	b.n	8040070 <__gxx_personality_v0+0x180>
 8040052:	6a6b      	ldr	r3, [r5, #36]	; 0x24
 8040054:	9309      	str	r3, [sp, #36]	; 0x24
 8040056:	6aab      	ldr	r3, [r5, #40]	; 0x28
 8040058:	9306      	str	r3, [sp, #24]
 804005a:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
 804005c:	9307      	str	r3, [sp, #28]
 804005e:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8040060:	9308      	str	r3, [sp, #32]
 8040062:	6b6a      	ldr	r2, [r5, #52]	; 0x34
 8040064:	17d3      	asrs	r3, r2, #31
 8040066:	e9cd 2304 	strd	r2, r3, [sp, #16]
 804006a:	2306      	movs	r3, #6
 804006c:	f88d 3028 	strb.w	r3, [sp, #40]	; 0x28
 8040070:	aa04      	add	r2, sp, #16
 8040072:	4621      	mov	r1, r4
 8040074:	4628      	mov	r0, r5
 8040076:	f7ff fcb1 	bl	803f9dc <set_registers>
 804007a:	f04f 0807 	mov.w	r8, #7
 804007e:	e764      	b.n	803ff4a <__gxx_personality_v0+0x5a>
 8040080:	4628      	mov	r0, r5
 8040082:	f7ff fb7d 	bl	803f780 <__cxa_begin_cleanup>
 8040086:	aa04      	add	r2, sp, #16
 8040088:	4621      	mov	r1, r4
 804008a:	4628      	mov	r0, r5
 804008c:	f7ff fca6 	bl	803f9dc <set_registers>
 8040090:	f04f 0807 	mov.w	r8, #7
 8040094:	e759      	b.n	803ff4a <__gxx_personality_v0+0x5a>
 8040096:	4621      	mov	r1, r4
 8040098:	4628      	mov	r0, r5
 804009a:	f000 fb52 	bl	8040742 <__gnu_unwind_frame>
 804009e:	2800      	cmp	r0, #0
 80400a0:	bf0c      	ite	eq
 80400a2:	f04f 0808 	moveq.w	r8, #8
 80400a6:	f04f 0809 	movne.w	r8, #9
 80400aa:	e74e      	b.n	803ff4a <__gxx_personality_v0+0x5a>
 80400ac:	f04f 0803 	mov.w	r8, #3
 80400b0:	e74b      	b.n	803ff4a <__gxx_personality_v0+0x5a>
 80400b2:	f04f 0803 	mov.w	r8, #3
 80400b6:	e748      	b.n	803ff4a <__gxx_personality_v0+0x5a>
 80400b8:	432b2b00 	.word	0x432b2b00
 80400bc:	434c4e47 	.word	0x434c4e47

080400c0 <__cxa_pure_virtual>:
 80400c0:	b508      	push	{r3, lr}
 80400c2:	4801      	ldr	r0, [pc, #4]	; (80400c8 <__cxa_pure_virtual+0x8>)
 80400c4:	f000 fb64 	bl	8040790 <abort_message>
 80400c8:	0804bb68 	.word	0x0804bb68

080400cc <operator new[](unsigned int)>:
 80400cc:	b508      	push	{r3, lr}
 80400ce:	f7f1 f877 	bl	80311c0 <operator new(unsigned int)>
 80400d2:	bd08      	pop	{r3, pc}
 80400d4:	8101b108 	.word	0x8101b108
 80400d8:	8400b0b0 	.word	0x8400b0b0
 80400dc:	00000000 	.word	0x00000000

080400e0 <unwind_phase2(unw_context_t*, unw_cursor_t*, _Unwind_Control_Block*, bool)>:
 80400e0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80400e4:	b08d      	sub	sp, #52	; 0x34
 80400e6:	460c      	mov	r4, r1
 80400e8:	4615      	mov	r5, r2
 80400ea:	461e      	mov	r6, r3
 80400ec:	4601      	mov	r1, r0
 80400ee:	4620      	mov	r0, r4
 80400f0:	f000 fef6 	bl	8040ee0 <unw_init_local>
 80400f4:	2700      	movs	r7, #0
 80400f6:	f04f 0802 	mov.w	r8, #2
 80400fa:	f04f 3aff 	mov.w	sl, #4294967295
 80400fe:	46b9      	mov	r9, r7
 8040100:	e00c      	b.n	804011c <unwind_phase2(unw_context_t*, unw_cursor_t*, _Unwind_Control_Block*, bool)+0x3c>
 8040102:	692a      	ldr	r2, [r5, #16]
 8040104:	4651      	mov	r1, sl
 8040106:	4620      	mov	r0, r4
 8040108:	f000 ff30 	bl	8040f6c <unw_set_reg>
 804010c:	46c3      	mov	fp, r8
 804010e:	464e      	mov	r6, r9
 8040110:	e008      	b.n	8040124 <unwind_phase2(unw_context_t*, unw_cursor_t*, _Unwind_Control_Block*, bool)+0x44>
 8040112:	6a2a      	ldr	r2, [r5, #32]
 8040114:	9b00      	ldr	r3, [sp, #0]
 8040116:	429a      	cmp	r2, r3
 8040118:	d026      	beq.n	8040168 <unwind_phase2(unw_context_t*, unw_cursor_t*, _Unwind_Control_Block*, bool)+0x88>
 804011a:	3701      	adds	r7, #1
 804011c:	2e00      	cmp	r6, #0
 804011e:	d135      	bne.n	804018c <unwind_phase2(unw_context_t*, unw_cursor_t*, _Unwind_Control_Block*, bool)+0xac>
 8040120:	f04f 0b01 	mov.w	fp, #1
 8040124:	466a      	mov	r2, sp
 8040126:	f06f 0101 	mvn.w	r1, #1
 804012a:	4620      	mov	r0, r4
 804012c:	f000 ff0a 	bl	8040f44 <unw_get_reg>
 8040130:	a902      	add	r1, sp, #8
 8040132:	4620      	mov	r0, r4
 8040134:	f000 ff6c 	bl	8041010 <unw_get_proc_info>
 8040138:	b990      	cbnz	r0, 8040160 <unwind_phase2(unw_context_t*, unw_cursor_t*, _Unwind_Control_Block*, bool)+0x80>
 804013a:	9b05      	ldr	r3, [sp, #20]
 804013c:	2b00      	cmp	r3, #0
 804013e:	d0ec      	beq.n	804011a <unwind_phase2(unw_context_t*, unw_cursor_t*, _Unwind_Control_Block*, bool)+0x3a>
 8040140:	9a02      	ldr	r2, [sp, #8]
 8040142:	64aa      	str	r2, [r5, #72]	; 0x48
 8040144:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8040146:	64ea      	str	r2, [r5, #76]	; 0x4c
 8040148:	9a07      	ldr	r2, [sp, #28]
 804014a:	652a      	str	r2, [r5, #80]	; 0x50
 804014c:	4622      	mov	r2, r4
 804014e:	4629      	mov	r1, r5
 8040150:	4658      	mov	r0, fp
 8040152:	4798      	blx	r3
 8040154:	2808      	cmp	r0, #8
 8040156:	d0dc      	beq.n	8040112 <unwind_phase2(unw_context_t*, unw_cursor_t*, _Unwind_Control_Block*, bool)+0x32>
 8040158:	2809      	cmp	r0, #9
 804015a:	d014      	beq.n	8040186 <unwind_phase2(unw_context_t*, unw_cursor_t*, _Unwind_Control_Block*, bool)+0xa6>
 804015c:	2807      	cmp	r0, #7
 804015e:	d006      	beq.n	804016e <unwind_phase2(unw_context_t*, unw_cursor_t*, _Unwind_Control_Block*, bool)+0x8e>
 8040160:	2002      	movs	r0, #2
 8040162:	b00d      	add	sp, #52	; 0x34
 8040164:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8040168:	f7f8 fecc 	bl	8038f04 <abort>
 804016c:	e7d5      	b.n	804011a <unwind_phase2(unw_context_t*, unw_cursor_t*, _Unwind_Control_Block*, bool)+0x3a>
 804016e:	aa01      	add	r2, sp, #4
 8040170:	f04f 31ff 	mov.w	r1, #4294967295
 8040174:	4620      	mov	r0, r4
 8040176:	f000 fee5 	bl	8040f44 <unw_get_reg>
 804017a:	9b01      	ldr	r3, [sp, #4]
 804017c:	612b      	str	r3, [r5, #16]
 804017e:	4620      	mov	r0, r4
 8040180:	f000 ff54 	bl	804102c <unw_resume>
 8040184:	e7ec      	b.n	8040160 <unwind_phase2(unw_context_t*, unw_cursor_t*, _Unwind_Control_Block*, bool)+0x80>
 8040186:	f7f8 febd 	bl	8038f04 <abort>
 804018a:	e7e9      	b.n	8040160 <unwind_phase2(unw_context_t*, unw_cursor_t*, _Unwind_Control_Block*, bool)+0x80>
 804018c:	2f01      	cmp	r7, #1
 804018e:	d0b8      	beq.n	8040102 <unwind_phase2(unw_context_t*, unw_cursor_t*, _Unwind_Control_Block*, bool)+0x22>
 8040190:	46c3      	mov	fp, r8
 8040192:	e7c7      	b.n	8040124 <unwind_phase2(unw_context_t*, unw_cursor_t*, _Unwind_Control_Block*, bool)+0x44>

08040194 <decode_eht_entry>:
 8040194:	6803      	ldr	r3, [r0, #0]
 8040196:	2b00      	cmp	r3, #0
 8040198:	db08      	blt.n	80401ac <decode_eht_entry+0x18>
 804019a:	2301      	movs	r3, #1
 804019c:	600b      	str	r3, [r1, #0]
 804019e:	f850 3f04 	ldr.w	r3, [r0, #4]!
 80401a2:	0e1b      	lsrs	r3, r3, #24
 80401a4:	3301      	adds	r3, #1
 80401a6:	009b      	lsls	r3, r3, #2
 80401a8:	6013      	str	r3, [r2, #0]
 80401aa:	4770      	bx	lr
 80401ac:	b430      	push	{r4, r5}
 80401ae:	0e1c      	lsrs	r4, r3, #24
 80401b0:	f3c3 6503 	ubfx	r5, r3, #24, #4
 80401b4:	f004 040d 	and.w	r4, r4, #13
 80401b8:	2c01      	cmp	r4, #1
 80401ba:	d008      	beq.n	80401ce <decode_eht_entry+0x3a>
 80401bc:	b115      	cbz	r5, 80401c4 <decode_eht_entry+0x30>
 80401be:	2000      	movs	r0, #0
 80401c0:	bc30      	pop	{r4, r5}
 80401c2:	4770      	bx	lr
 80401c4:	2304      	movs	r3, #4
 80401c6:	6013      	str	r3, [r2, #0]
 80401c8:	2301      	movs	r3, #1
 80401ca:	600b      	str	r3, [r1, #0]
 80401cc:	e7f8      	b.n	80401c0 <decode_eht_entry+0x2c>
 80401ce:	f3c3 4307 	ubfx	r3, r3, #16, #8
 80401d2:	3301      	adds	r3, #1
 80401d4:	009b      	lsls	r3, r3, #2
 80401d6:	6013      	str	r3, [r2, #0]
 80401d8:	2302      	movs	r3, #2
 80401da:	600b      	str	r3, [r1, #0]
 80401dc:	e7f0      	b.n	80401c0 <decode_eht_entry+0x2c>

080401de <_Unwind_Resume>:
 80401de:	b510      	push	{r4, lr}
 80401e0:	f5ad 7d36 	sub.w	sp, sp, #728	; 0x2d8
 80401e4:	4604      	mov	r4, r0
 80401e6:	a862      	add	r0, sp, #392	; 0x188
 80401e8:	f000 faba 	bl	8040760 <unw_getcontext>
 80401ec:	2301      	movs	r3, #1
 80401ee:	4622      	mov	r2, r4
 80401f0:	4669      	mov	r1, sp
 80401f2:	a862      	add	r0, sp, #392	; 0x188
 80401f4:	f7ff ff74 	bl	80400e0 <unwind_phase2(unw_context_t*, unw_cursor_t*, _Unwind_Control_Block*, bool)>
 80401f8:	f7f8 fe84 	bl	8038f04 <abort>
 80401fc:	f50d 7d36 	add.w	sp, sp, #728	; 0x2d8
 8040200:	bd10      	pop	{r4, pc}

08040202 <_Unwind_GetLanguageSpecificData>:
 8040202:	b500      	push	{lr}
 8040204:	b08b      	sub	sp, #44	; 0x2c
 8040206:	4669      	mov	r1, sp
 8040208:	f000 ff02 	bl	8041010 <unw_get_proc_info>
 804020c:	b918      	cbnz	r0, 8040216 <_Unwind_GetLanguageSpecificData+0x14>
 804020e:	9802      	ldr	r0, [sp, #8]
 8040210:	b00b      	add	sp, #44	; 0x2c
 8040212:	f85d fb04 	ldr.w	pc, [sp], #4
 8040216:	2000      	movs	r0, #0
 8040218:	e7fa      	b.n	8040210 <_Unwind_GetLanguageSpecificData+0xe>

0804021a <(anonymous namespace)::unwindOneFrame(unsigned int, _Unwind_Control_Block*, _Unwind_Context*)>:
 804021a:	b538      	push	{r3, r4, r5, lr}
 804021c:	460d      	mov	r5, r1
 804021e:	4614      	mov	r4, r2
 8040220:	4610      	mov	r0, r2
 8040222:	f7ff ffee 	bl	8040202 <_Unwind_GetLanguageSpecificData>
 8040226:	6d2b      	ldr	r3, [r5, #80]	; 0x50
 8040228:	f013 0f01 	tst.w	r3, #1
 804022c:	d007      	beq.n	804023e <(anonymous namespace)::unwindOneFrame(unsigned int, _Unwind_Control_Block*, _Unwind_Context*)+0x24>
 804022e:	4620      	mov	r0, r4
 8040230:	f000 fee8 	bl	8041004 <unw_step>
 8040234:	2801      	cmp	r0, #1
 8040236:	bf0c      	ite	eq
 8040238:	2008      	moveq	r0, #8
 804023a:	2009      	movne	r0, #9
 804023c:	bd38      	pop	{r3, r4, r5, pc}
 804023e:	6803      	ldr	r3, [r0, #0]
 8040240:	2b00      	cmp	r3, #0
 8040242:	d0f4      	beq.n	804022e <(anonymous namespace)::unwindOneFrame(unsigned int, _Unwind_Control_Block*, _Unwind_Context*)+0x14>
 8040244:	2009      	movs	r0, #9
 8040246:	e7f9      	b.n	804023c <(anonymous namespace)::unwindOneFrame(unsigned int, _Unwind_Control_Block*, _Unwind_Context*)+0x22>

08040248 <__aeabi_unwind_cpp_pr0>:
 8040248:	b508      	push	{r3, lr}
 804024a:	f7ff ffe6 	bl	804021a <(anonymous namespace)::unwindOneFrame(unsigned int, _Unwind_Control_Block*, _Unwind_Context*)>
 804024e:	bd08      	pop	{r3, pc}
 8040250:	8101b108 	.word	0x8101b108
 8040254:	8400b0b0 	.word	0x8400b0b0
 8040258:	00000000 	.word	0x00000000

0804025c <__aeabi_unwind_cpp_pr1>:
 804025c:	b508      	push	{r3, lr}
 804025e:	f7ff ffdc 	bl	804021a <(anonymous namespace)::unwindOneFrame(unsigned int, _Unwind_Control_Block*, _Unwind_Context*)>
 8040262:	bd08      	pop	{r3, pc}
 8040264:	8101b108 	.word	0x8101b108
 8040268:	8400b0b0 	.word	0x8400b0b0
 804026c:	00000000 	.word	0x00000000

08040270 <__aeabi_unwind_cpp_pr2>:
 8040270:	b508      	push	{r3, lr}
 8040272:	f7ff ffd2 	bl	804021a <(anonymous namespace)::unwindOneFrame(unsigned int, _Unwind_Control_Block*, _Unwind_Context*)>
 8040276:	bd08      	pop	{r3, pc}
 8040278:	8101b108 	.word	0x8101b108
 804027c:	8400b0b0 	.word	0x8400b0b0
 8040280:	00000000 	.word	0x00000000

08040284 <_Unwind_VRS_Set>:
 8040284:	b570      	push	{r4, r5, r6, lr}
 8040286:	4606      	mov	r6, r0
 8040288:	4615      	mov	r5, r2
 804028a:	461c      	mov	r4, r3
 804028c:	b1a1      	cbz	r1, 80402b8 <_Unwind_VRS_Set+0x34>
 804028e:	2901      	cmp	r1, #1
 8040290:	d124      	bne.n	80402dc <_Unwind_VRS_Set+0x58>
 8040292:	2c01      	cmp	r4, #1
 8040294:	d01d      	beq.n	80402d2 <_Unwind_VRS_Set+0x4e>
 8040296:	2c05      	cmp	r4, #5
 8040298:	d126      	bne.n	80402e8 <_Unwind_VRS_Set+0x64>
 804029a:	2a1f      	cmp	r2, #31
 804029c:	d828      	bhi.n	80402f0 <_Unwind_VRS_Set+0x6c>
 804029e:	9b04      	ldr	r3, [sp, #16]
 80402a0:	e9d3 2300 	ldrd	r2, r3, [r3]
 80402a4:	f505 7180 	add.w	r1, r5, #256	; 0x100
 80402a8:	4630      	mov	r0, r6
 80402aa:	f000 fe93 	bl	8040fd4 <unw_set_fpreg>
 80402ae:	2800      	cmp	r0, #0
 80402b0:	bf0c      	ite	eq
 80402b2:	2000      	moveq	r0, #0
 80402b4:	2002      	movne	r0, #2
 80402b6:	bd70      	pop	{r4, r5, r6, pc}
 80402b8:	b993      	cbnz	r3, 80402e0 <_Unwind_VRS_Set+0x5c>
 80402ba:	2a0f      	cmp	r2, #15
 80402bc:	d812      	bhi.n	80402e4 <_Unwind_VRS_Set+0x60>
 80402be:	9b04      	ldr	r3, [sp, #16]
 80402c0:	681a      	ldr	r2, [r3, #0]
 80402c2:	4629      	mov	r1, r5
 80402c4:	f000 fe52 	bl	8040f6c <unw_set_reg>
 80402c8:	2800      	cmp	r0, #0
 80402ca:	bf0c      	ite	eq
 80402cc:	4620      	moveq	r0, r4
 80402ce:	2002      	movne	r0, #2
 80402d0:	e7f1      	b.n	80402b6 <_Unwind_VRS_Set+0x32>
 80402d2:	2a0f      	cmp	r2, #15
 80402d4:	d80a      	bhi.n	80402ec <_Unwind_VRS_Set+0x68>
 80402d6:	f000 feb1 	bl	804103c <unw_save_vfp_as_X>
 80402da:	e7e0      	b.n	804029e <_Unwind_VRS_Set+0x1a>
 80402dc:	f7f8 fe12 	bl	8038f04 <abort>
 80402e0:	2002      	movs	r0, #2
 80402e2:	e7e8      	b.n	80402b6 <_Unwind_VRS_Set+0x32>
 80402e4:	2002      	movs	r0, #2
 80402e6:	e7e6      	b.n	80402b6 <_Unwind_VRS_Set+0x32>
 80402e8:	2002      	movs	r0, #2
 80402ea:	e7e4      	b.n	80402b6 <_Unwind_VRS_Set+0x32>
 80402ec:	2002      	movs	r0, #2
 80402ee:	e7e2      	b.n	80402b6 <_Unwind_VRS_Set+0x32>
 80402f0:	2002      	movs	r0, #2
 80402f2:	e7e0      	b.n	80402b6 <_Unwind_VRS_Set+0x32>

080402f4 <_Unwind_VRS_Get>:
 80402f4:	b570      	push	{r4, r5, r6, lr}
 80402f6:	4606      	mov	r6, r0
 80402f8:	4615      	mov	r5, r2
 80402fa:	461c      	mov	r4, r3
 80402fc:	b191      	cbz	r1, 8040324 <_Unwind_VRS_Get+0x30>
 80402fe:	2901      	cmp	r1, #1
 8040300:	d121      	bne.n	8040346 <_Unwind_VRS_Get+0x52>
 8040302:	2c01      	cmp	r4, #1
 8040304:	d01a      	beq.n	804033c <_Unwind_VRS_Get+0x48>
 8040306:	2c05      	cmp	r4, #5
 8040308:	d123      	bne.n	8040352 <_Unwind_VRS_Get+0x5e>
 804030a:	2a1f      	cmp	r2, #31
 804030c:	d825      	bhi.n	804035a <_Unwind_VRS_Get+0x66>
 804030e:	9a04      	ldr	r2, [sp, #16]
 8040310:	f505 7180 	add.w	r1, r5, #256	; 0x100
 8040314:	4630      	mov	r0, r6
 8040316:	f000 fe47 	bl	8040fa8 <unw_get_fpreg>
 804031a:	2800      	cmp	r0, #0
 804031c:	bf0c      	ite	eq
 804031e:	2000      	moveq	r0, #0
 8040320:	2002      	movne	r0, #2
 8040322:	bd70      	pop	{r4, r5, r6, pc}
 8040324:	b98b      	cbnz	r3, 804034a <_Unwind_VRS_Get+0x56>
 8040326:	2a0f      	cmp	r2, #15
 8040328:	d811      	bhi.n	804034e <_Unwind_VRS_Get+0x5a>
 804032a:	9a04      	ldr	r2, [sp, #16]
 804032c:	4629      	mov	r1, r5
 804032e:	f000 fe09 	bl	8040f44 <unw_get_reg>
 8040332:	2800      	cmp	r0, #0
 8040334:	bf0c      	ite	eq
 8040336:	4620      	moveq	r0, r4
 8040338:	2002      	movne	r0, #2
 804033a:	e7f2      	b.n	8040322 <_Unwind_VRS_Get+0x2e>
 804033c:	2a0f      	cmp	r2, #15
 804033e:	d80a      	bhi.n	8040356 <_Unwind_VRS_Get+0x62>
 8040340:	f000 fe7c 	bl	804103c <unw_save_vfp_as_X>
 8040344:	e7e3      	b.n	804030e <_Unwind_VRS_Get+0x1a>
 8040346:	f7f8 fddd 	bl	8038f04 <abort>
 804034a:	2002      	movs	r0, #2
 804034c:	e7e9      	b.n	8040322 <_Unwind_VRS_Get+0x2e>
 804034e:	2002      	movs	r0, #2
 8040350:	e7e7      	b.n	8040322 <_Unwind_VRS_Get+0x2e>
 8040352:	2002      	movs	r0, #2
 8040354:	e7e5      	b.n	8040322 <_Unwind_VRS_Get+0x2e>
 8040356:	2002      	movs	r0, #2
 8040358:	e7e3      	b.n	8040322 <_Unwind_VRS_Get+0x2e>
 804035a:	2002      	movs	r0, #2
 804035c:	e7e1      	b.n	8040322 <_Unwind_VRS_Get+0x2e>

0804035e <_Unwind_VRS_Pop>:
 804035e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8040362:	b087      	sub	sp, #28
 8040364:	4605      	mov	r5, r0
 8040366:	4690      	mov	r8, r2
 8040368:	461e      	mov	r6, r3
 804036a:	b159      	cbz	r1, 8040384 <_Unwind_VRS_Pop+0x26>
 804036c:	2901      	cmp	r1, #1
 804036e:	f040 808b 	bne.w	8040488 <_Unwind_VRS_Pop+0x12a>
 8040372:	f006 03fb 	and.w	r3, r6, #251	; 0xfb
 8040376:	2b01      	cmp	r3, #1
 8040378:	d042      	beq.n	8040400 <_Unwind_VRS_Pop+0xa2>
 804037a:	2602      	movs	r6, #2
 804037c:	4630      	mov	r0, r6
 804037e:	b007      	add	sp, #28
 8040380:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8040384:	b10b      	cbz	r3, 804038a <_Unwind_VRS_Pop+0x2c>
 8040386:	2602      	movs	r6, #2
 8040388:	e7f8      	b.n	804037c <_Unwind_VRS_Pop+0x1e>
 804038a:	ab03      	add	r3, sp, #12
 804038c:	9300      	str	r3, [sp, #0]
 804038e:	2300      	movs	r3, #0
 8040390:	220d      	movs	r2, #13
 8040392:	4619      	mov	r1, r3
 8040394:	f7ff ffae 	bl	80402f4 <_Unwind_VRS_Get>
 8040398:	4606      	mov	r6, r0
 804039a:	bb78      	cbnz	r0, 80403fc <_Unwind_VRS_Pop+0x9e>
 804039c:	2400      	movs	r4, #0
 804039e:	4627      	mov	r7, r4
 80403a0:	f04f 0901 	mov.w	r9, #1
 80403a4:	f10d 0b10 	add.w	fp, sp, #16
 80403a8:	46a2      	mov	sl, r4
 80403aa:	e002      	b.n	80403b2 <_Unwind_VRS_Pop+0x54>
 80403ac:	3401      	adds	r4, #1
 80403ae:	2c10      	cmp	r4, #16
 80403b0:	d018      	beq.n	80403e4 <_Unwind_VRS_Pop+0x86>
 80403b2:	fa09 f304 	lsl.w	r3, r9, r4
 80403b6:	ea13 0f08 	tst.w	r3, r8
 80403ba:	d0f7      	beq.n	80403ac <_Unwind_VRS_Pop+0x4e>
 80403bc:	9b03      	ldr	r3, [sp, #12]
 80403be:	1d1a      	adds	r2, r3, #4
 80403c0:	9203      	str	r2, [sp, #12]
 80403c2:	681b      	ldr	r3, [r3, #0]
 80403c4:	9304      	str	r3, [sp, #16]
 80403c6:	2c0d      	cmp	r4, #13
 80403c8:	bf08      	it	eq
 80403ca:	2701      	moveq	r7, #1
 80403cc:	f8cd b000 	str.w	fp, [sp]
 80403d0:	4653      	mov	r3, sl
 80403d2:	4622      	mov	r2, r4
 80403d4:	4651      	mov	r1, sl
 80403d6:	4628      	mov	r0, r5
 80403d8:	f7ff ff54 	bl	8040284 <_Unwind_VRS_Set>
 80403dc:	2800      	cmp	r0, #0
 80403de:	d0e5      	beq.n	80403ac <_Unwind_VRS_Pop+0x4e>
 80403e0:	2602      	movs	r6, #2
 80403e2:	e7cb      	b.n	804037c <_Unwind_VRS_Pop+0x1e>
 80403e4:	2f00      	cmp	r7, #0
 80403e6:	d1c9      	bne.n	804037c <_Unwind_VRS_Pop+0x1e>
 80403e8:	ab03      	add	r3, sp, #12
 80403ea:	9300      	str	r3, [sp, #0]
 80403ec:	2300      	movs	r3, #0
 80403ee:	220d      	movs	r2, #13
 80403f0:	4619      	mov	r1, r3
 80403f2:	4628      	mov	r0, r5
 80403f4:	f7ff ff46 	bl	8040284 <_Unwind_VRS_Set>
 80403f8:	4606      	mov	r6, r0
 80403fa:	e7bf      	b.n	804037c <_Unwind_VRS_Pop+0x1e>
 80403fc:	2602      	movs	r6, #2
 80403fe:	e7bd      	b.n	804037c <_Unwind_VRS_Pop+0x1e>
 8040400:	ab03      	add	r3, sp, #12
 8040402:	9300      	str	r3, [sp, #0]
 8040404:	2300      	movs	r3, #0
 8040406:	220d      	movs	r2, #13
 8040408:	4619      	mov	r1, r3
 804040a:	f7ff ff73 	bl	80402f4 <_Unwind_VRS_Get>
 804040e:	2800      	cmp	r0, #0
 8040410:	d138      	bne.n	8040484 <_Unwind_VRS_Pop+0x126>
 8040412:	ea4f 4418 	mov.w	r4, r8, lsr #16
 8040416:	fa1f f788 	uxth.w	r7, r8
 804041a:	eb07 4718 	add.w	r7, r7, r8, lsr #16
 804041e:	ebb7 4f18 	cmp.w	r7, r8, lsr #16
 8040422:	d91d      	bls.n	8040460 <_Unwind_VRS_Pop+0x102>
 8040424:	f04f 0a00 	mov.w	sl, #0
 8040428:	f10d 0910 	add.w	r9, sp, #16
 804042c:	f04f 0801 	mov.w	r8, #1
 8040430:	9a03      	ldr	r2, [sp, #12]
 8040432:	1d13      	adds	r3, r2, #4
 8040434:	9303      	str	r3, [sp, #12]
 8040436:	4613      	mov	r3, r2
 8040438:	f853 1b08 	ldr.w	r1, [r3], #8
 804043c:	9104      	str	r1, [sp, #16]
 804043e:	f8cd a014 	str.w	sl, [sp, #20]
 8040442:	9303      	str	r3, [sp, #12]
 8040444:	6853      	ldr	r3, [r2, #4]
 8040446:	9305      	str	r3, [sp, #20]
 8040448:	f8cd 9000 	str.w	r9, [sp]
 804044c:	4633      	mov	r3, r6
 804044e:	4622      	mov	r2, r4
 8040450:	4641      	mov	r1, r8
 8040452:	4628      	mov	r0, r5
 8040454:	f7ff ff16 	bl	8040284 <_Unwind_VRS_Set>
 8040458:	b970      	cbnz	r0, 8040478 <_Unwind_VRS_Pop+0x11a>
 804045a:	3401      	adds	r4, #1
 804045c:	42a7      	cmp	r7, r4
 804045e:	d1e7      	bne.n	8040430 <_Unwind_VRS_Pop+0xd2>
 8040460:	2e01      	cmp	r6, #1
 8040462:	d00b      	beq.n	804047c <_Unwind_VRS_Pop+0x11e>
 8040464:	ab03      	add	r3, sp, #12
 8040466:	9300      	str	r3, [sp, #0]
 8040468:	2300      	movs	r3, #0
 804046a:	220d      	movs	r2, #13
 804046c:	4619      	mov	r1, r3
 804046e:	4628      	mov	r0, r5
 8040470:	f7ff ff08 	bl	8040284 <_Unwind_VRS_Set>
 8040474:	4606      	mov	r6, r0
 8040476:	e781      	b.n	804037c <_Unwind_VRS_Pop+0x1e>
 8040478:	2602      	movs	r6, #2
 804047a:	e77f      	b.n	804037c <_Unwind_VRS_Pop+0x1e>
 804047c:	9b03      	ldr	r3, [sp, #12]
 804047e:	3304      	adds	r3, #4
 8040480:	9303      	str	r3, [sp, #12]
 8040482:	e7ef      	b.n	8040464 <_Unwind_VRS_Pop+0x106>
 8040484:	2602      	movs	r6, #2
 8040486:	e779      	b.n	804037c <_Unwind_VRS_Pop+0x1e>
 8040488:	f7f8 fd3c 	bl	8038f04 <abort>

0804048c <_Unwind_VRS_Interpret>:
 804048c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8040490:	b087      	sub	sp, #28
 8040492:	4680      	mov	r8, r0
 8040494:	429a      	cmp	r2, r3
 8040496:	f080 8127 	bcs.w	80406e8 <_Unwind_VRS_Interpret+0x25c>
 804049a:	460f      	mov	r7, r1
 804049c:	4615      	mov	r5, r2
 804049e:	4699      	mov	r9, r3
 80404a0:	2300      	movs	r3, #0
 80404a2:	9303      	str	r3, [sp, #12]
 80404a4:	f10d 0b14 	add.w	fp, sp, #20
 80404a8:	469a      	mov	sl, r3
 80404aa:	e01c      	b.n	80404e6 <_Unwind_VRS_Interpret+0x5a>
 80404ac:	f8cd b000 	str.w	fp, [sp]
 80404b0:	4653      	mov	r3, sl
 80404b2:	220d      	movs	r2, #13
 80404b4:	4651      	mov	r1, sl
 80404b6:	4640      	mov	r0, r8
 80404b8:	f7ff ff1c 	bl	80402f4 <_Unwind_VRS_Get>
 80404bc:	f014 0f40 	tst.w	r4, #64	; 0x40
 80404c0:	d035      	beq.n	804052e <_Unwind_VRS_Interpret+0xa2>
 80404c2:	9b05      	ldr	r3, [sp, #20]
 80404c4:	3b04      	subs	r3, #4
 80404c6:	00a4      	lsls	r4, r4, #2
 80404c8:	b2e4      	uxtb	r4, r4
 80404ca:	1b1c      	subs	r4, r3, r4
 80404cc:	9405      	str	r4, [sp, #20]
 80404ce:	f8cd b000 	str.w	fp, [sp]
 80404d2:	4653      	mov	r3, sl
 80404d4:	220d      	movs	r2, #13
 80404d6:	4651      	mov	r1, sl
 80404d8:	4640      	mov	r0, r8
 80404da:	f7ff fed3 	bl	8040284 <_Unwind_VRS_Set>
 80404de:	4635      	mov	r5, r6
 80404e0:	45a9      	cmp	r9, r5
 80404e2:	f240 80fd 	bls.w	80406e0 <_Unwind_VRS_Interpret+0x254>
 80404e6:	1c6e      	adds	r6, r5, #1
 80404e8:	f085 0303 	eor.w	r3, r5, #3
 80404ec:	5cfc      	ldrb	r4, [r7, r3]
 80404ee:	56fb      	ldrsb	r3, [r7, r3]
 80404f0:	2b00      	cmp	r3, #0
 80404f2:	dadb      	bge.n	80404ac <_Unwind_VRS_Interpret+0x20>
 80404f4:	f004 03f0 	and.w	r3, r4, #240	; 0xf0
 80404f8:	2bb0      	cmp	r3, #176	; 0xb0
 80404fa:	d06c      	beq.n	80405d6 <_Unwind_VRS_Interpret+0x14a>
 80404fc:	d83b      	bhi.n	8040576 <_Unwind_VRS_Interpret+0xea>
 80404fe:	2b90      	cmp	r3, #144	; 0x90
 8040500:	d050      	beq.n	80405a4 <_Unwind_VRS_Interpret+0x118>
 8040502:	2ba0      	cmp	r3, #160	; 0xa0
 8040504:	d118      	bne.n	8040538 <_Unwind_VRS_Interpret+0xac>
 8040506:	f004 0207 	and.w	r2, r4, #7
 804050a:	3201      	adds	r2, #1
 804050c:	2301      	movs	r3, #1
 804050e:	fa03 f202 	lsl.w	r2, r3, r2
 8040512:	3a01      	subs	r2, #1
 8040514:	0112      	lsls	r2, r2, #4
 8040516:	f014 0f08 	tst.w	r4, #8
 804051a:	bf18      	it	ne
 804051c:	f442 4280 	orrne.w	r2, r2, #16384	; 0x4000
 8040520:	4653      	mov	r3, sl
 8040522:	4651      	mov	r1, sl
 8040524:	4640      	mov	r0, r8
 8040526:	f7ff ff1a 	bl	804035e <_Unwind_VRS_Pop>
 804052a:	4635      	mov	r5, r6
 804052c:	e7d8      	b.n	80404e0 <_Unwind_VRS_Interpret+0x54>
 804052e:	9b05      	ldr	r3, [sp, #20]
 8040530:	3304      	adds	r3, #4
 8040532:	eb03 0484 	add.w	r4, r3, r4, lsl #2
 8040536:	e7c9      	b.n	80404cc <_Unwind_VRS_Interpret+0x40>
 8040538:	2b80      	cmp	r3, #128	; 0x80
 804053a:	d118      	bne.n	804056e <_Unwind_VRS_Interpret+0xe2>
 804053c:	45b1      	cmp	r9, r6
 804053e:	f240 80e4 	bls.w	804070a <_Unwind_VRS_Interpret+0x27e>
 8040542:	3502      	adds	r5, #2
 8040544:	f086 0603 	eor.w	r6, r6, #3
 8040548:	5dba      	ldrb	r2, [r7, r6]
 804054a:	0324      	lsls	r4, r4, #12
 804054c:	b2a4      	uxth	r4, r4
 804054e:	ea54 1202 	orrs.w	r2, r4, r2, lsl #4
 8040552:	f000 80dc 	beq.w	804070e <_Unwind_VRS_Interpret+0x282>
 8040556:	f412 4f00 	tst.w	r2, #32768	; 0x8000
 804055a:	9b03      	ldr	r3, [sp, #12]
 804055c:	bf18      	it	ne
 804055e:	2301      	movne	r3, #1
 8040560:	9303      	str	r3, [sp, #12]
 8040562:	4653      	mov	r3, sl
 8040564:	4651      	mov	r1, sl
 8040566:	4640      	mov	r0, r8
 8040568:	f7ff fef9 	bl	804035e <_Unwind_VRS_Pop>
 804056c:	e7b8      	b.n	80404e0 <_Unwind_VRS_Interpret+0x54>
 804056e:	2009      	movs	r0, #9
 8040570:	b007      	add	sp, #28
 8040572:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8040576:	2bc0      	cmp	r3, #192	; 0xc0
 8040578:	f000 8093 	beq.w	80406a2 <_Unwind_VRS_Interpret+0x216>
 804057c:	2bd0      	cmp	r3, #208	; 0xd0
 804057e:	d10f      	bne.n	80405a0 <_Unwind_VRS_Interpret+0x114>
 8040580:	f014 0f08 	tst.w	r4, #8
 8040584:	f040 80cf 	bne.w	8040726 <_Unwind_VRS_Interpret+0x29a>
 8040588:	f004 0207 	and.w	r2, r4, #7
 804058c:	3201      	adds	r2, #1
 804058e:	2305      	movs	r3, #5
 8040590:	f442 2200 	orr.w	r2, r2, #524288	; 0x80000
 8040594:	2101      	movs	r1, #1
 8040596:	4640      	mov	r0, r8
 8040598:	f7ff fee1 	bl	804035e <_Unwind_VRS_Pop>
 804059c:	4635      	mov	r5, r6
 804059e:	e79f      	b.n	80404e0 <_Unwind_VRS_Interpret+0x54>
 80405a0:	2009      	movs	r0, #9
 80405a2:	e7e5      	b.n	8040570 <_Unwind_VRS_Interpret+0xe4>
 80405a4:	f004 020f 	and.w	r2, r4, #15
 80405a8:	f004 040d 	and.w	r4, r4, #13
 80405ac:	2c0d      	cmp	r4, #13
 80405ae:	d010      	beq.n	80405d2 <_Unwind_VRS_Interpret+0x146>
 80405b0:	f8cd b000 	str.w	fp, [sp]
 80405b4:	4653      	mov	r3, sl
 80405b6:	4651      	mov	r1, sl
 80405b8:	4640      	mov	r0, r8
 80405ba:	f7ff fe9b 	bl	80402f4 <_Unwind_VRS_Get>
 80405be:	f8cd b000 	str.w	fp, [sp]
 80405c2:	4653      	mov	r3, sl
 80405c4:	220d      	movs	r2, #13
 80405c6:	4651      	mov	r1, sl
 80405c8:	4640      	mov	r0, r8
 80405ca:	f7ff fe5b 	bl	8040284 <_Unwind_VRS_Set>
 80405ce:	4635      	mov	r5, r6
 80405d0:	e786      	b.n	80404e0 <_Unwind_VRS_Interpret+0x54>
 80405d2:	2009      	movs	r0, #9
 80405d4:	e7cc      	b.n	8040570 <_Unwind_VRS_Interpret+0xe4>
 80405d6:	f1a4 03b0 	sub.w	r3, r4, #176	; 0xb0
 80405da:	2b07      	cmp	r3, #7
 80405dc:	d855      	bhi.n	804068a <_Unwind_VRS_Interpret+0x1fe>
 80405de:	e8df f003 	tbb	[pc, r3]
 80405e2:	047f      	.short	0x047f
 80405e4:	98984418 	.word	0x98984418
 80405e8:	9898      	.short	0x9898
 80405ea:	45b1      	cmp	r9, r6
 80405ec:	f240 8093 	bls.w	8040716 <_Unwind_VRS_Interpret+0x28a>
 80405f0:	3502      	adds	r5, #2
 80405f2:	f086 0603 	eor.w	r6, r6, #3
 80405f6:	5dba      	ldrb	r2, [r7, r6]
 80405f8:	f012 0ff0 	tst.w	r2, #240	; 0xf0
 80405fc:	f040 808d 	bne.w	804071a <_Unwind_VRS_Interpret+0x28e>
 8040600:	2a00      	cmp	r2, #0
 8040602:	f000 808c 	beq.w	804071e <_Unwind_VRS_Interpret+0x292>
 8040606:	4653      	mov	r3, sl
 8040608:	4651      	mov	r1, sl
 804060a:	4640      	mov	r0, r8
 804060c:	f7ff fea7 	bl	804035e <_Unwind_VRS_Pop>
 8040610:	e766      	b.n	80404e0 <_Unwind_VRS_Interpret+0x54>
 8040612:	45b1      	cmp	r9, r6
 8040614:	d90f      	bls.n	8040636 <_Unwind_VRS_Interpret+0x1aa>
 8040616:	2200      	movs	r2, #0
 8040618:	4614      	mov	r4, r2
 804061a:	f086 0303 	eor.w	r3, r6, #3
 804061e:	3601      	adds	r6, #1
 8040620:	5cf9      	ldrb	r1, [r7, r3]
 8040622:	f001 037f 	and.w	r3, r1, #127	; 0x7f
 8040626:	4093      	lsls	r3, r2
 8040628:	431c      	orrs	r4, r3
 804062a:	f011 0f80 	tst.w	r1, #128	; 0x80
 804062e:	d004      	beq.n	804063a <_Unwind_VRS_Interpret+0x1ae>
 8040630:	3207      	adds	r2, #7
 8040632:	45b1      	cmp	r9, r6
 8040634:	d8f1      	bhi.n	804061a <_Unwind_VRS_Interpret+0x18e>
 8040636:	2009      	movs	r0, #9
 8040638:	e79a      	b.n	8040570 <_Unwind_VRS_Interpret+0xe4>
 804063a:	f8cd b000 	str.w	fp, [sp]
 804063e:	4653      	mov	r3, sl
 8040640:	220d      	movs	r2, #13
 8040642:	4651      	mov	r1, sl
 8040644:	4640      	mov	r0, r8
 8040646:	f7ff fe55 	bl	80402f4 <_Unwind_VRS_Get>
 804064a:	9b05      	ldr	r3, [sp, #20]
 804064c:	f503 7301 	add.w	r3, r3, #516	; 0x204
 8040650:	eb03 0484 	add.w	r4, r3, r4, lsl #2
 8040654:	9405      	str	r4, [sp, #20]
 8040656:	f8cd b000 	str.w	fp, [sp]
 804065a:	4653      	mov	r3, sl
 804065c:	220d      	movs	r2, #13
 804065e:	4651      	mov	r1, sl
 8040660:	4640      	mov	r0, r8
 8040662:	f7ff fe0f 	bl	8040284 <_Unwind_VRS_Set>
 8040666:	4635      	mov	r5, r6
 8040668:	e73a      	b.n	80404e0 <_Unwind_VRS_Interpret+0x54>
 804066a:	3502      	adds	r5, #2
 804066c:	f086 0603 	eor.w	r6, r6, #3
 8040670:	5dbb      	ldrb	r3, [r7, r6]
 8040672:	1119      	asrs	r1, r3, #4
 8040674:	f003 030f 	and.w	r3, r3, #15
 8040678:	1c5a      	adds	r2, r3, #1
 804067a:	2301      	movs	r3, #1
 804067c:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 8040680:	4619      	mov	r1, r3
 8040682:	4640      	mov	r0, r8
 8040684:	f7ff fe6b 	bl	804035e <_Unwind_VRS_Pop>
 8040688:	e72a      	b.n	80404e0 <_Unwind_VRS_Interpret+0x54>
 804068a:	f004 0207 	and.w	r2, r4, #7
 804068e:	3201      	adds	r2, #1
 8040690:	2301      	movs	r3, #1
 8040692:	f442 2200 	orr.w	r2, r2, #524288	; 0x80000
 8040696:	4619      	mov	r1, r3
 8040698:	4640      	mov	r0, r8
 804069a:	f7ff fe60 	bl	804035e <_Unwind_VRS_Pop>
 804069e:	4635      	mov	r5, r6
 80406a0:	e71e      	b.n	80404e0 <_Unwind_VRS_Interpret+0x54>
 80406a2:	f1a4 03c8 	sub.w	r3, r4, #200	; 0xc8
 80406a6:	2b01      	cmp	r3, #1
 80406a8:	d83b      	bhi.n	8040722 <_Unwind_VRS_Interpret+0x296>
 80406aa:	3502      	adds	r5, #2
 80406ac:	f086 0603 	eor.w	r6, r6, #3
 80406b0:	5dbb      	ldrb	r3, [r7, r6]
 80406b2:	2cc8      	cmp	r4, #200	; 0xc8
 80406b4:	d00b      	beq.n	80406ce <_Unwind_VRS_Interpret+0x242>
 80406b6:	0919      	lsrs	r1, r3, #4
 80406b8:	f003 030f 	and.w	r3, r3, #15
 80406bc:	1c5a      	adds	r2, r3, #1
 80406be:	2305      	movs	r3, #5
 80406c0:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 80406c4:	2101      	movs	r1, #1
 80406c6:	4640      	mov	r0, r8
 80406c8:	f7ff fe49 	bl	804035e <_Unwind_VRS_Pop>
 80406cc:	e708      	b.n	80404e0 <_Unwind_VRS_Interpret+0x54>
 80406ce:	1119      	asrs	r1, r3, #4
 80406d0:	3110      	adds	r1, #16
 80406d2:	f003 030f 	and.w	r3, r3, #15
 80406d6:	18ca      	adds	r2, r1, r3
 80406d8:	2a1f      	cmp	r2, #31
 80406da:	ddef      	ble.n	80406bc <_Unwind_VRS_Interpret+0x230>
 80406dc:	2009      	movs	r0, #9
 80406de:	e747      	b.n	8040570 <_Unwind_VRS_Interpret+0xe4>
 80406e0:	9b03      	ldr	r3, [sp, #12]
 80406e2:	b10b      	cbz	r3, 80406e8 <_Unwind_VRS_Interpret+0x25c>
 80406e4:	2008      	movs	r0, #8
 80406e6:	e743      	b.n	8040570 <_Unwind_VRS_Interpret+0xe4>
 80406e8:	ac05      	add	r4, sp, #20
 80406ea:	9400      	str	r4, [sp, #0]
 80406ec:	2300      	movs	r3, #0
 80406ee:	220e      	movs	r2, #14
 80406f0:	4619      	mov	r1, r3
 80406f2:	4640      	mov	r0, r8
 80406f4:	f7ff fdfe 	bl	80402f4 <_Unwind_VRS_Get>
 80406f8:	9400      	str	r4, [sp, #0]
 80406fa:	2300      	movs	r3, #0
 80406fc:	220f      	movs	r2, #15
 80406fe:	4619      	mov	r1, r3
 8040700:	4640      	mov	r0, r8
 8040702:	f7ff fdbf 	bl	8040284 <_Unwind_VRS_Set>
 8040706:	2008      	movs	r0, #8
 8040708:	e732      	b.n	8040570 <_Unwind_VRS_Interpret+0xe4>
 804070a:	2009      	movs	r0, #9
 804070c:	e730      	b.n	8040570 <_Unwind_VRS_Interpret+0xe4>
 804070e:	2009      	movs	r0, #9
 8040710:	e72e      	b.n	8040570 <_Unwind_VRS_Interpret+0xe4>
 8040712:	2009      	movs	r0, #9
 8040714:	e72c      	b.n	8040570 <_Unwind_VRS_Interpret+0xe4>
 8040716:	2009      	movs	r0, #9
 8040718:	e72a      	b.n	8040570 <_Unwind_VRS_Interpret+0xe4>
 804071a:	2009      	movs	r0, #9
 804071c:	e728      	b.n	8040570 <_Unwind_VRS_Interpret+0xe4>
 804071e:	2009      	movs	r0, #9
 8040720:	e726      	b.n	8040570 <_Unwind_VRS_Interpret+0xe4>
 8040722:	2009      	movs	r0, #9
 8040724:	e724      	b.n	8040570 <_Unwind_VRS_Interpret+0xe4>
 8040726:	2009      	movs	r0, #9
 8040728:	e722      	b.n	8040570 <_Unwind_VRS_Interpret+0xe4>

0804072a <_Unwind_GetRegionStart>:
 804072a:	b500      	push	{lr}
 804072c:	b08b      	sub	sp, #44	; 0x2c
 804072e:	4669      	mov	r1, sp
 8040730:	f000 fc6e 	bl	8041010 <unw_get_proc_info>
 8040734:	b918      	cbnz	r0, 804073e <_Unwind_GetRegionStart+0x14>
 8040736:	9800      	ldr	r0, [sp, #0]
 8040738:	b00b      	add	sp, #44	; 0x2c
 804073a:	f85d fb04 	ldr.w	pc, [sp], #4
 804073e:	2000      	movs	r0, #0
 8040740:	e7fa      	b.n	8040738 <_Unwind_GetRegionStart+0xe>

08040742 <__gnu_unwind_frame>:
 8040742:	b508      	push	{r3, lr}
 8040744:	4608      	mov	r0, r1
 8040746:	f000 fc5d 	bl	8041004 <unw_step>
 804074a:	2801      	cmp	r0, #1
 804074c:	bf0c      	ite	eq
 804074e:	2000      	moveq	r0, #0
 8040750:	2009      	movne	r0, #9
 8040752:	bd08      	pop	{r3, pc}
 8040754:	8101b108 	.word	0x8101b108
 8040758:	8400b0b0 	.word	0x8400b0b0
 804075c:	00000000 	.word	0x00000000

08040760 <unw_getcontext>:
 8040760:	e880 1fff 	stmia.w	r0, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip}
 8040764:	f8c0 d034 	str.w	sp, [r0, #52]	; 0x34
 8040768:	f8c0 e038 	str.w	lr, [r0, #56]	; 0x38
 804076c:	f8c0 e03c 	str.w	lr, [r0, #60]	; 0x3c
 8040770:	f04f 0000 	mov.w	r0, #0
 8040774:	4770      	bx	lr
 8040776:	bf00      	nop

08040778 <libunwind::Registers_arm::saveVFPWithFSTMD(unsigned long long*)>:
 8040778:	ec80 0b20 	vstmia	r0, {d0-d15}
 804077c:	4770      	bx	lr
 804077e:	bf00      	nop

08040780 <libunwind::Registers_arm::saveVFPWithFSTMX(unsigned long long*)>:
 8040780:	ec80 0b20 	vstmia	r0, {d0-d15}
 8040784:	4770      	bx	lr
 8040786:	bf00      	nop

08040788 <libunwind::Registers_arm::saveVFPv3(unsigned long long*)>:
 8040788:	ecc0 0b20 	vstmia	r0, {d16-d31}
 804078c:	4770      	bx	lr
 804078e:	bf00      	nop

08040790 <abort_message>:
 8040790:	b40f      	push	{r0, r1, r2, r3}
 8040792:	b508      	push	{r3, lr}
 8040794:	f7f8 fbb6 	bl	8038f04 <abort>

08040798 <_GLOBAL__sub_I___cxa_terminate_handler>:
 8040798:	4b03      	ldr	r3, [pc, #12]	; (80407a8 <_GLOBAL__sub_I___cxa_terminate_handler+0x10>)
 804079a:	4a04      	ldr	r2, [pc, #16]	; (80407ac <_GLOBAL__sub_I___cxa_terminate_handler+0x14>)
 804079c:	601a      	str	r2, [r3, #0]
 804079e:	4b04      	ldr	r3, [pc, #16]	; (80407b0 <_GLOBAL__sub_I___cxa_terminate_handler+0x18>)
 80407a0:	4a04      	ldr	r2, [pc, #16]	; (80407b4 <_GLOBAL__sub_I___cxa_terminate_handler+0x1c>)
 80407a2:	601a      	str	r2, [r3, #0]
 80407a4:	4770      	bx	lr
 80407a6:	bf00      	nop
 80407a8:	200124e4 	.word	0x200124e4
 80407ac:	08038f05 	.word	0x08038f05
 80407b0:	200124e8 	.word	0x200124e8
 80407b4:	0803f901 	.word	0x0803f901

080407b8 <libunwind::UnwindCursor<libunwind::LocalAddressSpace, libunwind::Registers_arm>::~UnwindCursor()>:
 80407b8:	4770      	bx	lr

080407ba <libunwind::UnwindCursor<libunwind::LocalAddressSpace, libunwind::Registers_arm>::~UnwindCursor()>:
 80407ba:	4770      	bx	lr

080407bc <libunwind::UnwindCursor<libunwind::LocalAddressSpace, libunwind::Registers_arm>::validReg(int)>:
 80407bc:	1c88      	adds	r0, r1, #2
 80407be:	2811      	cmp	r0, #17
 80407c0:	bf8c      	ite	hi
 80407c2:	2000      	movhi	r0, #0
 80407c4:	2001      	movls	r0, #1
 80407c6:	4770      	bx	lr

080407c8 <libunwind::UnwindCursor<libunwind::LocalAddressSpace, libunwind::Registers_arm>::validFloatReg(int)>:
 80407c8:	f5a1 7080 	sub.w	r0, r1, #256	; 0x100
 80407cc:	281f      	cmp	r0, #31
 80407ce:	bf8c      	ite	hi
 80407d0:	2000      	movhi	r0, #0
 80407d2:	2001      	movls	r0, #1
 80407d4:	4770      	bx	lr

080407d6 <libunwind::UnwindCursor<libunwind::LocalAddressSpace, libunwind::Registers_arm>::getInfo(unw_proc_info_t*)>:
 80407d6:	b430      	push	{r4, r5}
 80407d8:	460c      	mov	r4, r1
 80407da:	f500 75ac 	add.w	r5, r0, #344	; 0x158
 80407de:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80407e0:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80407e2:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80407e4:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80407e6:	e895 0003 	ldmia.w	r5, {r0, r1}
 80407ea:	e884 0003 	stmia.w	r4, {r0, r1}
 80407ee:	bc30      	pop	{r4, r5}
 80407f0:	4770      	bx	lr

080407f2 <libunwind::UnwindCursor<libunwind::LocalAddressSpace, libunwind::Registers_arm>::isSignalFrame()>:
 80407f2:	f890 0181 	ldrb.w	r0, [r0, #385]	; 0x181
 80407f6:	4770      	bx	lr

080407f8 <libunwind::UnwindCursor<libunwind::LocalAddressSpace, libunwind::Registers_arm>::getFunctionName(char*, unsigned int, unsigned int*)>:
 80407f8:	b508      	push	{r3, lr}
 80407fa:	6803      	ldr	r3, [r0, #0]
 80407fc:	68db      	ldr	r3, [r3, #12]
 80407fe:	f04f 31ff 	mov.w	r1, #4294967295
 8040802:	4798      	blx	r3
 8040804:	2000      	movs	r0, #0
 8040806:	bd08      	pop	{r3, pc}

08040808 <libunwind::UnwindCursor<libunwind::LocalAddressSpace, libunwind::Registers_arm>::getRegisterName(int)>:
 8040808:	3102      	adds	r1, #2
 804080a:	f240 1321 	movw	r3, #289	; 0x121
 804080e:	4299      	cmp	r1, r3
 8040810:	f200 81c2 	bhi.w	8040b98 <libunwind::UnwindCursor<libunwind::LocalAddressSpace, libunwind::Registers_arm>::getRegisterName(int)+0x390>
 8040814:	e8df f011 	tbh	[pc, r1, lsl #1]
 8040818:	01c20124 	.word	0x01c20124
 804081c:	01280126 	.word	0x01280126
 8040820:	012c012a 	.word	0x012c012a
 8040824:	0130012e 	.word	0x0130012e
 8040828:	01340132 	.word	0x01340132
 804082c:	01380136 	.word	0x01380136
 8040830:	013c013a 	.word	0x013c013a
 8040834:	0124013e 	.word	0x0124013e
 8040838:	01c20122 	.word	0x01c20122
 804083c:	01c001c0 	.word	0x01c001c0
 8040840:	01c001c0 	.word	0x01c001c0
 8040844:	01c001c0 	.word	0x01c001c0
 8040848:	01c001c0 	.word	0x01c001c0
 804084c:	01c001c0 	.word	0x01c001c0
 8040850:	01c001c0 	.word	0x01c001c0
 8040854:	01c001c0 	.word	0x01c001c0
 8040858:	01c001c0 	.word	0x01c001c0
 804085c:	01c001c0 	.word	0x01c001c0
 8040860:	01c001c0 	.word	0x01c001c0
 8040864:	01c001c0 	.word	0x01c001c0
 8040868:	01c001c0 	.word	0x01c001c0
 804086c:	01c001c0 	.word	0x01c001c0
 8040870:	01c001c0 	.word	0x01c001c0
 8040874:	01c001c0 	.word	0x01c001c0
 8040878:	01c001c0 	.word	0x01c001c0
 804087c:	01c001c0 	.word	0x01c001c0
 8040880:	01c001c0 	.word	0x01c001c0
 8040884:	01c001c0 	.word	0x01c001c0
 8040888:	01c001c0 	.word	0x01c001c0
 804088c:	01c001c0 	.word	0x01c001c0
 8040890:	01c001c0 	.word	0x01c001c0
 8040894:	01c001c0 	.word	0x01c001c0
 8040898:	01c001c0 	.word	0x01c001c0
 804089c:	01420140 	.word	0x01420140
 80408a0:	01460144 	.word	0x01460144
 80408a4:	014a0148 	.word	0x014a0148
 80408a8:	014e014c 	.word	0x014e014c
 80408ac:	01520150 	.word	0x01520150
 80408b0:	01560154 	.word	0x01560154
 80408b4:	015a0158 	.word	0x015a0158
 80408b8:	015e015c 	.word	0x015e015c
 80408bc:	01620160 	.word	0x01620160
 80408c0:	01660164 	.word	0x01660164
 80408c4:	016a0168 	.word	0x016a0168
 80408c8:	016e016c 	.word	0x016e016c
 80408cc:	01720170 	.word	0x01720170
 80408d0:	01760174 	.word	0x01760174
 80408d4:	017a0178 	.word	0x017a0178
 80408d8:	017e017c 	.word	0x017e017c
 80408dc:	01c001c0 	.word	0x01c001c0
 80408e0:	01c001c0 	.word	0x01c001c0
 80408e4:	01c001c0 	.word	0x01c001c0
 80408e8:	01c001c0 	.word	0x01c001c0
 80408ec:	01c001c0 	.word	0x01c001c0
 80408f0:	01c001c0 	.word	0x01c001c0
 80408f4:	01c001c0 	.word	0x01c001c0
 80408f8:	01c001c0 	.word	0x01c001c0
 80408fc:	01c001c0 	.word	0x01c001c0
 8040900:	01c001c0 	.word	0x01c001c0
 8040904:	01c001c0 	.word	0x01c001c0
 8040908:	01c001c0 	.word	0x01c001c0
 804090c:	01c001c0 	.word	0x01c001c0
 8040910:	01c001c0 	.word	0x01c001c0
 8040914:	01c001c0 	.word	0x01c001c0
 8040918:	01c001c0 	.word	0x01c001c0
 804091c:	01c001c0 	.word	0x01c001c0
 8040920:	01c001c0 	.word	0x01c001c0
 8040924:	01c001c0 	.word	0x01c001c0
 8040928:	01c001c0 	.word	0x01c001c0
 804092c:	01c001c0 	.word	0x01c001c0
 8040930:	01c001c0 	.word	0x01c001c0
 8040934:	01c001c0 	.word	0x01c001c0
 8040938:	01c001c0 	.word	0x01c001c0
 804093c:	01c001c0 	.word	0x01c001c0
 8040940:	01c001c0 	.word	0x01c001c0
 8040944:	01c001c0 	.word	0x01c001c0
 8040948:	01c001c0 	.word	0x01c001c0
 804094c:	01c001c0 	.word	0x01c001c0
 8040950:	01c001c0 	.word	0x01c001c0
 8040954:	01c001c0 	.word	0x01c001c0
 8040958:	01c001c0 	.word	0x01c001c0
 804095c:	01c001c0 	.word	0x01c001c0
 8040960:	01c001c0 	.word	0x01c001c0
 8040964:	01c001c0 	.word	0x01c001c0
 8040968:	01c001c0 	.word	0x01c001c0
 804096c:	01c001c0 	.word	0x01c001c0
 8040970:	01c001c0 	.word	0x01c001c0
 8040974:	01c001c0 	.word	0x01c001c0
 8040978:	01c001c0 	.word	0x01c001c0
 804097c:	01c001c0 	.word	0x01c001c0
 8040980:	01c001c0 	.word	0x01c001c0
 8040984:	01c001c0 	.word	0x01c001c0
 8040988:	01c001c0 	.word	0x01c001c0
 804098c:	01c001c0 	.word	0x01c001c0
 8040990:	01c001c0 	.word	0x01c001c0
 8040994:	01c001c0 	.word	0x01c001c0
 8040998:	01c001c0 	.word	0x01c001c0
 804099c:	01c001c0 	.word	0x01c001c0
 80409a0:	01c001c0 	.word	0x01c001c0
 80409a4:	01c001c0 	.word	0x01c001c0
 80409a8:	01c001c0 	.word	0x01c001c0
 80409ac:	01c001c0 	.word	0x01c001c0
 80409b0:	01c001c0 	.word	0x01c001c0
 80409b4:	01c001c0 	.word	0x01c001c0
 80409b8:	01c001c0 	.word	0x01c001c0
 80409bc:	01c001c0 	.word	0x01c001c0
 80409c0:	01c001c0 	.word	0x01c001c0
 80409c4:	01c001c0 	.word	0x01c001c0
 80409c8:	01c001c0 	.word	0x01c001c0
 80409cc:	01c001c0 	.word	0x01c001c0
 80409d0:	01c001c0 	.word	0x01c001c0
 80409d4:	01c001c0 	.word	0x01c001c0
 80409d8:	01c001c0 	.word	0x01c001c0
 80409dc:	01c001c0 	.word	0x01c001c0
 80409e0:	01c001c0 	.word	0x01c001c0
 80409e4:	01c001c0 	.word	0x01c001c0
 80409e8:	01c001c0 	.word	0x01c001c0
 80409ec:	01c001c0 	.word	0x01c001c0
 80409f0:	01c001c0 	.word	0x01c001c0
 80409f4:	01c001c0 	.word	0x01c001c0
 80409f8:	01c001c0 	.word	0x01c001c0
 80409fc:	01c001c0 	.word	0x01c001c0
 8040a00:	01c001c0 	.word	0x01c001c0
 8040a04:	01c001c0 	.word	0x01c001c0
 8040a08:	01c001c0 	.word	0x01c001c0
 8040a0c:	01c001c0 	.word	0x01c001c0
 8040a10:	01c001c0 	.word	0x01c001c0
 8040a14:	01c001c0 	.word	0x01c001c0
 8040a18:	01c001c0 	.word	0x01c001c0
 8040a1c:	01820180 	.word	0x01820180
 8040a20:	01860184 	.word	0x01860184
 8040a24:	018a0188 	.word	0x018a0188
 8040a28:	018e018c 	.word	0x018e018c
 8040a2c:	01920190 	.word	0x01920190
 8040a30:	01960194 	.word	0x01960194
 8040a34:	019a0198 	.word	0x019a0198
 8040a38:	019e019c 	.word	0x019e019c
 8040a3c:	01a201a0 	.word	0x01a201a0
 8040a40:	01a601a4 	.word	0x01a601a4
 8040a44:	01aa01a8 	.word	0x01aa01a8
 8040a48:	01ae01ac 	.word	0x01ae01ac
 8040a4c:	01b201b0 	.word	0x01b201b0
 8040a50:	01b601b4 	.word	0x01b601b4
 8040a54:	01ba01b8 	.word	0x01ba01b8
 8040a58:	01be01bc 	.word	0x01be01bc
 8040a5c:	4850      	ldr	r0, [pc, #320]	; (8040ba0 <libunwind::UnwindCursor<libunwind::LocalAddressSpace, libunwind::Registers_arm>::getRegisterName(int)+0x398>)
 8040a5e:	4770      	bx	lr
 8040a60:	4850      	ldr	r0, [pc, #320]	; (8040ba4 <libunwind::UnwindCursor<libunwind::LocalAddressSpace, libunwind::Registers_arm>::getRegisterName(int)+0x39c>)
 8040a62:	4770      	bx	lr
 8040a64:	4850      	ldr	r0, [pc, #320]	; (8040ba8 <libunwind::UnwindCursor<libunwind::LocalAddressSpace, libunwind::Registers_arm>::getRegisterName(int)+0x3a0>)
 8040a66:	4770      	bx	lr
 8040a68:	4850      	ldr	r0, [pc, #320]	; (8040bac <libunwind::UnwindCursor<libunwind::LocalAddressSpace, libunwind::Registers_arm>::getRegisterName(int)+0x3a4>)
 8040a6a:	4770      	bx	lr
 8040a6c:	4850      	ldr	r0, [pc, #320]	; (8040bb0 <libunwind::UnwindCursor<libunwind::LocalAddressSpace, libunwind::Registers_arm>::getRegisterName(int)+0x3a8>)
 8040a6e:	4770      	bx	lr
 8040a70:	4850      	ldr	r0, [pc, #320]	; (8040bb4 <libunwind::UnwindCursor<libunwind::LocalAddressSpace, libunwind::Registers_arm>::getRegisterName(int)+0x3ac>)
 8040a72:	4770      	bx	lr
 8040a74:	4850      	ldr	r0, [pc, #320]	; (8040bb8 <libunwind::UnwindCursor<libunwind::LocalAddressSpace, libunwind::Registers_arm>::getRegisterName(int)+0x3b0>)
 8040a76:	4770      	bx	lr
 8040a78:	4850      	ldr	r0, [pc, #320]	; (8040bbc <libunwind::UnwindCursor<libunwind::LocalAddressSpace, libunwind::Registers_arm>::getRegisterName(int)+0x3b4>)
 8040a7a:	4770      	bx	lr
 8040a7c:	4850      	ldr	r0, [pc, #320]	; (8040bc0 <libunwind::UnwindCursor<libunwind::LocalAddressSpace, libunwind::Registers_arm>::getRegisterName(int)+0x3b8>)
 8040a7e:	4770      	bx	lr
 8040a80:	4850      	ldr	r0, [pc, #320]	; (8040bc4 <libunwind::UnwindCursor<libunwind::LocalAddressSpace, libunwind::Registers_arm>::getRegisterName(int)+0x3bc>)
 8040a82:	4770      	bx	lr
 8040a84:	4850      	ldr	r0, [pc, #320]	; (8040bc8 <libunwind::UnwindCursor<libunwind::LocalAddressSpace, libunwind::Registers_arm>::getRegisterName(int)+0x3c0>)
 8040a86:	4770      	bx	lr
 8040a88:	4850      	ldr	r0, [pc, #320]	; (8040bcc <libunwind::UnwindCursor<libunwind::LocalAddressSpace, libunwind::Registers_arm>::getRegisterName(int)+0x3c4>)
 8040a8a:	4770      	bx	lr
 8040a8c:	4850      	ldr	r0, [pc, #320]	; (8040bd0 <libunwind::UnwindCursor<libunwind::LocalAddressSpace, libunwind::Registers_arm>::getRegisterName(int)+0x3c8>)
 8040a8e:	4770      	bx	lr
 8040a90:	4850      	ldr	r0, [pc, #320]	; (8040bd4 <libunwind::UnwindCursor<libunwind::LocalAddressSpace, libunwind::Registers_arm>::getRegisterName(int)+0x3cc>)
 8040a92:	4770      	bx	lr
 8040a94:	4850      	ldr	r0, [pc, #320]	; (8040bd8 <libunwind::UnwindCursor<libunwind::LocalAddressSpace, libunwind::Registers_arm>::getRegisterName(int)+0x3d0>)
 8040a96:	4770      	bx	lr
 8040a98:	4850      	ldr	r0, [pc, #320]	; (8040bdc <libunwind::UnwindCursor<libunwind::LocalAddressSpace, libunwind::Registers_arm>::getRegisterName(int)+0x3d4>)
 8040a9a:	4770      	bx	lr
 8040a9c:	4850      	ldr	r0, [pc, #320]	; (8040be0 <libunwind::UnwindCursor<libunwind::LocalAddressSpace, libunwind::Registers_arm>::getRegisterName(int)+0x3d8>)
 8040a9e:	4770      	bx	lr
 8040aa0:	4850      	ldr	r0, [pc, #320]	; (8040be4 <libunwind::UnwindCursor<libunwind::LocalAddressSpace, libunwind::Registers_arm>::getRegisterName(int)+0x3dc>)
 8040aa2:	4770      	bx	lr
 8040aa4:	4850      	ldr	r0, [pc, #320]	; (8040be8 <libunwind::UnwindCursor<libunwind::LocalAddressSpace, libunwind::Registers_arm>::getRegisterName(int)+0x3e0>)
 8040aa6:	4770      	bx	lr
 8040aa8:	4850      	ldr	r0, [pc, #320]	; (8040bec <libunwind::UnwindCursor<libunwind::LocalAddressSpace, libunwind::Registers_arm>::getRegisterName(int)+0x3e4>)
 8040aaa:	4770      	bx	lr
 8040aac:	4850      	ldr	r0, [pc, #320]	; (8040bf0 <libunwind::UnwindCursor<libunwind::LocalAddressSpace, libunwind::Registers_arm>::getRegisterName(int)+0x3e8>)
 8040aae:	4770      	bx	lr
 8040ab0:	4850      	ldr	r0, [pc, #320]	; (8040bf4 <libunwind::UnwindCursor<libunwind::LocalAddressSpace, libunwind::Registers_arm>::getRegisterName(int)+0x3ec>)
 8040ab2:	4770      	bx	lr
 8040ab4:	4850      	ldr	r0, [pc, #320]	; (8040bf8 <libunwind::UnwindCursor<libunwind::LocalAddressSpace, libunwind::Registers_arm>::getRegisterName(int)+0x3f0>)
 8040ab6:	4770      	bx	lr
 8040ab8:	4850      	ldr	r0, [pc, #320]	; (8040bfc <libunwind::UnwindCursor<libunwind::LocalAddressSpace, libunwind::Registers_arm>::getRegisterName(int)+0x3f4>)
 8040aba:	4770      	bx	lr
 8040abc:	4850      	ldr	r0, [pc, #320]	; (8040c00 <libunwind::UnwindCursor<libunwind::LocalAddressSpace, libunwind::Registers_arm>::getRegisterName(int)+0x3f8>)
 8040abe:	4770      	bx	lr
 8040ac0:	4850      	ldr	r0, [pc, #320]	; (8040c04 <libunwind::UnwindCursor<libunwind::LocalAddressSpace, libunwind::Registers_arm>::getRegisterName(int)+0x3fc>)
 8040ac2:	4770      	bx	lr
 8040ac4:	4850      	ldr	r0, [pc, #320]	; (8040c08 <libunwind::UnwindCursor<libunwind::LocalAddressSpace, libunwind::Registers_arm>::getRegisterName(int)+0x400>)
 8040ac6:	4770      	bx	lr
 8040ac8:	4850      	ldr	r0, [pc, #320]	; (8040c0c <libunwind::UnwindCursor<libunwind::LocalAddressSpace, libunwind::Registers_arm>::getRegisterName(int)+0x404>)
 8040aca:	4770      	bx	lr
 8040acc:	4850      	ldr	r0, [pc, #320]	; (8040c10 <libunwind::UnwindCursor<libunwind::LocalAddressSpace, libunwind::Registers_arm>::getRegisterName(int)+0x408>)
 8040ace:	4770      	bx	lr
 8040ad0:	4850      	ldr	r0, [pc, #320]	; (8040c14 <libunwind::UnwindCursor<libunwind::LocalAddressSpace, libunwind::Registers_arm>::getRegisterName(int)+0x40c>)
 8040ad2:	4770      	bx	lr
 8040ad4:	4850      	ldr	r0, [pc, #320]	; (8040c18 <libunwind::UnwindCursor<libunwind::LocalAddressSpace, libunwind::Registers_arm>::getRegisterName(int)+0x410>)
 8040ad6:	4770      	bx	lr
 8040ad8:	4850      	ldr	r0, [pc, #320]	; (8040c1c <libunwind::UnwindCursor<libunwind::LocalAddressSpace, libunwind::Registers_arm>::getRegisterName(int)+0x414>)
 8040ada:	4770      	bx	lr
 8040adc:	4850      	ldr	r0, [pc, #320]	; (8040c20 <libunwind::UnwindCursor<libunwind::LocalAddressSpace, libunwind::Registers_arm>::getRegisterName(int)+0x418>)
 8040ade:	4770      	bx	lr
 8040ae0:	4850      	ldr	r0, [pc, #320]	; (8040c24 <libunwind::UnwindCursor<libunwind::LocalAddressSpace, libunwind::Registers_arm>::getRegisterName(int)+0x41c>)
 8040ae2:	4770      	bx	lr
 8040ae4:	4850      	ldr	r0, [pc, #320]	; (8040c28 <libunwind::UnwindCursor<libunwind::LocalAddressSpace, libunwind::Registers_arm>::getRegisterName(int)+0x420>)
 8040ae6:	4770      	bx	lr
 8040ae8:	4850      	ldr	r0, [pc, #320]	; (8040c2c <libunwind::UnwindCursor<libunwind::LocalAddressSpace, libunwind::Registers_arm>::getRegisterName(int)+0x424>)
 8040aea:	4770      	bx	lr
 8040aec:	4850      	ldr	r0, [pc, #320]	; (8040c30 <libunwind::UnwindCursor<libunwind::LocalAddressSpace, libunwind::Registers_arm>::getRegisterName(int)+0x428>)
 8040aee:	4770      	bx	lr
 8040af0:	4850      	ldr	r0, [pc, #320]	; (8040c34 <libunwind::UnwindCursor<libunwind::LocalAddressSpace, libunwind::Registers_arm>::getRegisterName(int)+0x42c>)
 8040af2:	4770      	bx	lr
 8040af4:	4850      	ldr	r0, [pc, #320]	; (8040c38 <libunwind::UnwindCursor<libunwind::LocalAddressSpace, libunwind::Registers_arm>::getRegisterName(int)+0x430>)
 8040af6:	4770      	bx	lr
 8040af8:	4850      	ldr	r0, [pc, #320]	; (8040c3c <libunwind::UnwindCursor<libunwind::LocalAddressSpace, libunwind::Registers_arm>::getRegisterName(int)+0x434>)
 8040afa:	4770      	bx	lr
 8040afc:	4850      	ldr	r0, [pc, #320]	; (8040c40 <libunwind::UnwindCursor<libunwind::LocalAddressSpace, libunwind::Registers_arm>::getRegisterName(int)+0x438>)
 8040afe:	4770      	bx	lr
 8040b00:	4850      	ldr	r0, [pc, #320]	; (8040c44 <libunwind::UnwindCursor<libunwind::LocalAddressSpace, libunwind::Registers_arm>::getRegisterName(int)+0x43c>)
 8040b02:	4770      	bx	lr
 8040b04:	4850      	ldr	r0, [pc, #320]	; (8040c48 <libunwind::UnwindCursor<libunwind::LocalAddressSpace, libunwind::Registers_arm>::getRegisterName(int)+0x440>)
 8040b06:	4770      	bx	lr
 8040b08:	4850      	ldr	r0, [pc, #320]	; (8040c4c <libunwind::UnwindCursor<libunwind::LocalAddressSpace, libunwind::Registers_arm>::getRegisterName(int)+0x444>)
 8040b0a:	4770      	bx	lr
 8040b0c:	4850      	ldr	r0, [pc, #320]	; (8040c50 <libunwind::UnwindCursor<libunwind::LocalAddressSpace, libunwind::Registers_arm>::getRegisterName(int)+0x448>)
 8040b0e:	4770      	bx	lr
 8040b10:	4850      	ldr	r0, [pc, #320]	; (8040c54 <libunwind::UnwindCursor<libunwind::LocalAddressSpace, libunwind::Registers_arm>::getRegisterName(int)+0x44c>)
 8040b12:	4770      	bx	lr
 8040b14:	4850      	ldr	r0, [pc, #320]	; (8040c58 <libunwind::UnwindCursor<libunwind::LocalAddressSpace, libunwind::Registers_arm>::getRegisterName(int)+0x450>)
 8040b16:	4770      	bx	lr
 8040b18:	4850      	ldr	r0, [pc, #320]	; (8040c5c <libunwind::UnwindCursor<libunwind::LocalAddressSpace, libunwind::Registers_arm>::getRegisterName(int)+0x454>)
 8040b1a:	4770      	bx	lr
 8040b1c:	4850      	ldr	r0, [pc, #320]	; (8040c60 <libunwind::UnwindCursor<libunwind::LocalAddressSpace, libunwind::Registers_arm>::getRegisterName(int)+0x458>)
 8040b1e:	4770      	bx	lr
 8040b20:	4850      	ldr	r0, [pc, #320]	; (8040c64 <libunwind::UnwindCursor<libunwind::LocalAddressSpace, libunwind::Registers_arm>::getRegisterName(int)+0x45c>)
 8040b22:	4770      	bx	lr
 8040b24:	4850      	ldr	r0, [pc, #320]	; (8040c68 <libunwind::UnwindCursor<libunwind::LocalAddressSpace, libunwind::Registers_arm>::getRegisterName(int)+0x460>)
 8040b26:	4770      	bx	lr
 8040b28:	4850      	ldr	r0, [pc, #320]	; (8040c6c <libunwind::UnwindCursor<libunwind::LocalAddressSpace, libunwind::Registers_arm>::getRegisterName(int)+0x464>)
 8040b2a:	4770      	bx	lr
 8040b2c:	4850      	ldr	r0, [pc, #320]	; (8040c70 <libunwind::UnwindCursor<libunwind::LocalAddressSpace, libunwind::Registers_arm>::getRegisterName(int)+0x468>)
 8040b2e:	4770      	bx	lr
 8040b30:	4850      	ldr	r0, [pc, #320]	; (8040c74 <libunwind::UnwindCursor<libunwind::LocalAddressSpace, libunwind::Registers_arm>::getRegisterName(int)+0x46c>)
 8040b32:	4770      	bx	lr
 8040b34:	4850      	ldr	r0, [pc, #320]	; (8040c78 <libunwind::UnwindCursor<libunwind::LocalAddressSpace, libunwind::Registers_arm>::getRegisterName(int)+0x470>)
 8040b36:	4770      	bx	lr
 8040b38:	4850      	ldr	r0, [pc, #320]	; (8040c7c <libunwind::UnwindCursor<libunwind::LocalAddressSpace, libunwind::Registers_arm>::getRegisterName(int)+0x474>)
 8040b3a:	4770      	bx	lr
 8040b3c:	4850      	ldr	r0, [pc, #320]	; (8040c80 <libunwind::UnwindCursor<libunwind::LocalAddressSpace, libunwind::Registers_arm>::getRegisterName(int)+0x478>)
 8040b3e:	4770      	bx	lr
 8040b40:	4850      	ldr	r0, [pc, #320]	; (8040c84 <libunwind::UnwindCursor<libunwind::LocalAddressSpace, libunwind::Registers_arm>::getRegisterName(int)+0x47c>)
 8040b42:	4770      	bx	lr
 8040b44:	4850      	ldr	r0, [pc, #320]	; (8040c88 <libunwind::UnwindCursor<libunwind::LocalAddressSpace, libunwind::Registers_arm>::getRegisterName(int)+0x480>)
 8040b46:	4770      	bx	lr
 8040b48:	4850      	ldr	r0, [pc, #320]	; (8040c8c <libunwind::UnwindCursor<libunwind::LocalAddressSpace, libunwind::Registers_arm>::getRegisterName(int)+0x484>)
 8040b4a:	4770      	bx	lr
 8040b4c:	4850      	ldr	r0, [pc, #320]	; (8040c90 <libunwind::UnwindCursor<libunwind::LocalAddressSpace, libunwind::Registers_arm>::getRegisterName(int)+0x488>)
 8040b4e:	4770      	bx	lr
 8040b50:	4850      	ldr	r0, [pc, #320]	; (8040c94 <libunwind::UnwindCursor<libunwind::LocalAddressSpace, libunwind::Registers_arm>::getRegisterName(int)+0x48c>)
 8040b52:	4770      	bx	lr
 8040b54:	4850      	ldr	r0, [pc, #320]	; (8040c98 <libunwind::UnwindCursor<libunwind::LocalAddressSpace, libunwind::Registers_arm>::getRegisterName(int)+0x490>)
 8040b56:	4770      	bx	lr
 8040b58:	4850      	ldr	r0, [pc, #320]	; (8040c9c <libunwind::UnwindCursor<libunwind::LocalAddressSpace, libunwind::Registers_arm>::getRegisterName(int)+0x494>)
 8040b5a:	4770      	bx	lr
 8040b5c:	4850      	ldr	r0, [pc, #320]	; (8040ca0 <libunwind::UnwindCursor<libunwind::LocalAddressSpace, libunwind::Registers_arm>::getRegisterName(int)+0x498>)
 8040b5e:	4770      	bx	lr
 8040b60:	4850      	ldr	r0, [pc, #320]	; (8040ca4 <libunwind::UnwindCursor<libunwind::LocalAddressSpace, libunwind::Registers_arm>::getRegisterName(int)+0x49c>)
 8040b62:	4770      	bx	lr
 8040b64:	4850      	ldr	r0, [pc, #320]	; (8040ca8 <libunwind::UnwindCursor<libunwind::LocalAddressSpace, libunwind::Registers_arm>::getRegisterName(int)+0x4a0>)
 8040b66:	4770      	bx	lr
 8040b68:	4850      	ldr	r0, [pc, #320]	; (8040cac <libunwind::UnwindCursor<libunwind::LocalAddressSpace, libunwind::Registers_arm>::getRegisterName(int)+0x4a4>)
 8040b6a:	4770      	bx	lr
 8040b6c:	4850      	ldr	r0, [pc, #320]	; (8040cb0 <libunwind::UnwindCursor<libunwind::LocalAddressSpace, libunwind::Registers_arm>::getRegisterName(int)+0x4a8>)
 8040b6e:	4770      	bx	lr
 8040b70:	4850      	ldr	r0, [pc, #320]	; (8040cb4 <libunwind::UnwindCursor<libunwind::LocalAddressSpace, libunwind::Registers_arm>::getRegisterName(int)+0x4ac>)
 8040b72:	4770      	bx	lr
 8040b74:	4850      	ldr	r0, [pc, #320]	; (8040cb8 <libunwind::UnwindCursor<libunwind::LocalAddressSpace, libunwind::Registers_arm>::getRegisterName(int)+0x4b0>)
 8040b76:	4770      	bx	lr
 8040b78:	4850      	ldr	r0, [pc, #320]	; (8040cbc <libunwind::UnwindCursor<libunwind::LocalAddressSpace, libunwind::Registers_arm>::getRegisterName(int)+0x4b4>)
 8040b7a:	4770      	bx	lr
 8040b7c:	4850      	ldr	r0, [pc, #320]	; (8040cc0 <libunwind::UnwindCursor<libunwind::LocalAddressSpace, libunwind::Registers_arm>::getRegisterName(int)+0x4b8>)
 8040b7e:	4770      	bx	lr
 8040b80:	4850      	ldr	r0, [pc, #320]	; (8040cc4 <libunwind::UnwindCursor<libunwind::LocalAddressSpace, libunwind::Registers_arm>::getRegisterName(int)+0x4bc>)
 8040b82:	4770      	bx	lr
 8040b84:	4850      	ldr	r0, [pc, #320]	; (8040cc8 <libunwind::UnwindCursor<libunwind::LocalAddressSpace, libunwind::Registers_arm>::getRegisterName(int)+0x4c0>)
 8040b86:	4770      	bx	lr
 8040b88:	4850      	ldr	r0, [pc, #320]	; (8040ccc <libunwind::UnwindCursor<libunwind::LocalAddressSpace, libunwind::Registers_arm>::getRegisterName(int)+0x4c4>)
 8040b8a:	4770      	bx	lr
 8040b8c:	4850      	ldr	r0, [pc, #320]	; (8040cd0 <libunwind::UnwindCursor<libunwind::LocalAddressSpace, libunwind::Registers_arm>::getRegisterName(int)+0x4c8>)
 8040b8e:	4770      	bx	lr
 8040b90:	4850      	ldr	r0, [pc, #320]	; (8040cd4 <libunwind::UnwindCursor<libunwind::LocalAddressSpace, libunwind::Registers_arm>::getRegisterName(int)+0x4cc>)
 8040b92:	4770      	bx	lr
 8040b94:	4850      	ldr	r0, [pc, #320]	; (8040cd8 <libunwind::UnwindCursor<libunwind::LocalAddressSpace, libunwind::Registers_arm>::getRegisterName(int)+0x4d0>)
 8040b96:	4770      	bx	lr
 8040b98:	4850      	ldr	r0, [pc, #320]	; (8040cdc <libunwind::UnwindCursor<libunwind::LocalAddressSpace, libunwind::Registers_arm>::getRegisterName(int)+0x4d4>)
 8040b9a:	4770      	bx	lr
 8040b9c:	4850      	ldr	r0, [pc, #320]	; (8040ce0 <libunwind::UnwindCursor<libunwind::LocalAddressSpace, libunwind::Registers_arm>::getRegisterName(int)+0x4d8>)
 8040b9e:	4770      	bx	lr
 8040ba0:	0804bcd8 	.word	0x0804bcd8
 8040ba4:	0804bba0 	.word	0x0804bba0
 8040ba8:	0804bba4 	.word	0x0804bba4
 8040bac:	0804bba8 	.word	0x0804bba8
 8040bb0:	0804bbac 	.word	0x0804bbac
 8040bb4:	0804bbb0 	.word	0x0804bbb0
 8040bb8:	0804bbb4 	.word	0x0804bbb4
 8040bbc:	0804bbb8 	.word	0x0804bbb8
 8040bc0:	0804bbbc 	.word	0x0804bbbc
 8040bc4:	0804bbc0 	.word	0x0804bbc0
 8040bc8:	0804bbc4 	.word	0x0804bbc4
 8040bcc:	0804bbc8 	.word	0x0804bbc8
 8040bd0:	0804bbcc 	.word	0x0804bbcc
 8040bd4:	0804bbd0 	.word	0x0804bbd0
 8040bd8:	0804bbd4 	.word	0x0804bbd4
 8040bdc:	0804bbd8 	.word	0x0804bbd8
 8040be0:	0804bbdc 	.word	0x0804bbdc
 8040be4:	0804bbe0 	.word	0x0804bbe0
 8040be8:	0804bbe4 	.word	0x0804bbe4
 8040bec:	0804bbe8 	.word	0x0804bbe8
 8040bf0:	0804bbec 	.word	0x0804bbec
 8040bf4:	0804bbf0 	.word	0x0804bbf0
 8040bf8:	0804bbf4 	.word	0x0804bbf4
 8040bfc:	0804bbf8 	.word	0x0804bbf8
 8040c00:	0804bbfc 	.word	0x0804bbfc
 8040c04:	0804bc00 	.word	0x0804bc00
 8040c08:	0804bc04 	.word	0x0804bc04
 8040c0c:	0804bc08 	.word	0x0804bc08
 8040c10:	0804bc0c 	.word	0x0804bc0c
 8040c14:	0804bc10 	.word	0x0804bc10
 8040c18:	0804bc14 	.word	0x0804bc14
 8040c1c:	0804bc18 	.word	0x0804bc18
 8040c20:	0804bc1c 	.word	0x0804bc1c
 8040c24:	0804bc20 	.word	0x0804bc20
 8040c28:	0804bc24 	.word	0x0804bc24
 8040c2c:	0804bc28 	.word	0x0804bc28
 8040c30:	0804bc2c 	.word	0x0804bc2c
 8040c34:	0804bc30 	.word	0x0804bc30
 8040c38:	0804bc34 	.word	0x0804bc34
 8040c3c:	0804bc38 	.word	0x0804bc38
 8040c40:	0804bc3c 	.word	0x0804bc3c
 8040c44:	0804bc40 	.word	0x0804bc40
 8040c48:	0804bc44 	.word	0x0804bc44
 8040c4c:	0804bc48 	.word	0x0804bc48
 8040c50:	0804bc4c 	.word	0x0804bc4c
 8040c54:	0804bc50 	.word	0x0804bc50
 8040c58:	0804bc54 	.word	0x0804bc54
 8040c5c:	0804bc58 	.word	0x0804bc58
 8040c60:	0804bc5c 	.word	0x0804bc5c
 8040c64:	0804bc60 	.word	0x0804bc60
 8040c68:	0804bc64 	.word	0x0804bc64
 8040c6c:	0804bc68 	.word	0x0804bc68
 8040c70:	0804bc6c 	.word	0x0804bc6c
 8040c74:	0804bc70 	.word	0x0804bc70
 8040c78:	0804bc74 	.word	0x0804bc74
 8040c7c:	0804bc78 	.word	0x0804bc78
 8040c80:	0804bc7c 	.word	0x0804bc7c
 8040c84:	0804bc80 	.word	0x0804bc80
 8040c88:	0804bc84 	.word	0x0804bc84
 8040c8c:	0804bc88 	.word	0x0804bc88
 8040c90:	0804bc8c 	.word	0x0804bc8c
 8040c94:	0804bc90 	.word	0x0804bc90
 8040c98:	0804bc94 	.word	0x0804bc94
 8040c9c:	0804bc98 	.word	0x0804bc98
 8040ca0:	0804bc9c 	.word	0x0804bc9c
 8040ca4:	0804bca0 	.word	0x0804bca0
 8040ca8:	0804bca4 	.word	0x0804bca4
 8040cac:	0804bca8 	.word	0x0804bca8
 8040cb0:	0804bcac 	.word	0x0804bcac
 8040cb4:	0804bcb0 	.word	0x0804bcb0
 8040cb8:	0804bcb4 	.word	0x0804bcb4
 8040cbc:	0804bcb8 	.word	0x0804bcb8
 8040cc0:	0804bcbc 	.word	0x0804bcbc
 8040cc4:	0804bcc0 	.word	0x0804bcc0
 8040cc8:	0804bcc4 	.word	0x0804bcc4
 8040ccc:	0804bcc8 	.word	0x0804bcc8
 8040cd0:	0804bccc 	.word	0x0804bccc
 8040cd4:	0804bcd0 	.word	0x0804bcd0
 8040cd8:	0804bcd4 	.word	0x0804bcd4
 8040cdc:	0804bb88 	.word	0x0804bb88
 8040ce0:	0804bb9c 	.word	0x0804bb9c

08040ce4 <libunwind::UnwindCursor<libunwind::LocalAddressSpace, libunwind::Registers_arm>::saveVFPAsX()>:
 8040ce4:	2301      	movs	r3, #1
 8040ce6:	f880 3048 	strb.w	r3, [r0, #72]	; 0x48
 8040cea:	4770      	bx	lr

08040cec <libunwind::UnwindCursor<libunwind::LocalAddressSpace, libunwind::Registers_arm>::setReg(int, unsigned int)>:
 8040cec:	f111 0f02 	cmn.w	r1, #2
 8040cf0:	d00e      	beq.n	8040d10 <libunwind::UnwindCursor<libunwind::LocalAddressSpace, libunwind::Registers_arm>::setReg(int, unsigned int)+0x24>
 8040cf2:	290d      	cmp	r1, #13
 8040cf4:	d00c      	beq.n	8040d10 <libunwind::UnwindCursor<libunwind::LocalAddressSpace, libunwind::Registers_arm>::setReg(int, unsigned int)+0x24>
 8040cf6:	290e      	cmp	r1, #14
 8040cf8:	d00c      	beq.n	8040d14 <libunwind::UnwindCursor<libunwind::LocalAddressSpace, libunwind::Registers_arm>::setReg(int, unsigned int)+0x28>
 8040cfa:	f1b1 3fff 	cmp.w	r1, #4294967295
 8040cfe:	d00b      	beq.n	8040d18 <libunwind::UnwindCursor<libunwind::LocalAddressSpace, libunwind::Registers_arm>::setReg(int, unsigned int)+0x2c>
 8040d00:	290f      	cmp	r1, #15
 8040d02:	d009      	beq.n	8040d18 <libunwind::UnwindCursor<libunwind::LocalAddressSpace, libunwind::Registers_arm>::setReg(int, unsigned int)+0x2c>
 8040d04:	290c      	cmp	r1, #12
 8040d06:	d809      	bhi.n	8040d1c <libunwind::UnwindCursor<libunwind::LocalAddressSpace, libunwind::Registers_arm>::setReg(int, unsigned int)+0x30>
 8040d08:	eb00 0081 	add.w	r0, r0, r1, lsl #2
 8040d0c:	6082      	str	r2, [r0, #8]
 8040d0e:	4770      	bx	lr
 8040d10:	63c2      	str	r2, [r0, #60]	; 0x3c
 8040d12:	4770      	bx	lr
 8040d14:	6402      	str	r2, [r0, #64]	; 0x40
 8040d16:	4770      	bx	lr
 8040d18:	6442      	str	r2, [r0, #68]	; 0x44
 8040d1a:	4770      	bx	lr
 8040d1c:	b508      	push	{r3, lr}
 8040d1e:	f7f8 f8f1 	bl	8038f04 <abort>
 8040d22:	bd08      	pop	{r3, pc}

08040d24 <libunwind::UnwindCursor<libunwind::LocalAddressSpace, libunwind::Registers_arm>::jumpto()>:
 8040d24:	b538      	push	{r3, r4, r5, lr}
 8040d26:	4604      	mov	r4, r0
 8040d28:	f100 0508 	add.w	r5, r0, #8
 8040d2c:	f890 3049 	ldrb.w	r3, [r0, #73]	; 0x49
 8040d30:	b12b      	cbz	r3, 8040d3e <libunwind::UnwindCursor<libunwind::LocalAddressSpace, libunwind::Registers_arm>::jumpto()+0x1a>
 8040d32:	f890 3048 	ldrb.w	r3, [r0, #72]	; 0x48
 8040d36:	b14b      	cbz	r3, 8040d4c <libunwind::UnwindCursor<libunwind::LocalAddressSpace, libunwind::Registers_arm>::jumpto()+0x28>
 8040d38:	3050      	adds	r0, #80	; 0x50
 8040d3a:	f000 fabb 	bl	80412b4 <libunwind::Registers_arm::restoreVFPWithFLDMX(unsigned long long*)>
 8040d3e:	f894 304a 	ldrb.w	r3, [r4, #74]	; 0x4a
 8040d42:	b93b      	cbnz	r3, 8040d54 <libunwind::UnwindCursor<libunwind::LocalAddressSpace, libunwind::Registers_arm>::jumpto()+0x30>
 8040d44:	4628      	mov	r0, r5
 8040d46:	f000 faa9 	bl	804129c <libunwind::Registers_arm::restoreCoreAndJumpTo()>
 8040d4a:	bd38      	pop	{r3, r4, r5, pc}
 8040d4c:	3050      	adds	r0, #80	; 0x50
 8040d4e:	f000 faad 	bl	80412ac <libunwind::Registers_arm::restoreVFPWithFLDMD(unsigned long long*)>
 8040d52:	e7f4      	b.n	8040d3e <libunwind::UnwindCursor<libunwind::LocalAddressSpace, libunwind::Registers_arm>::jumpto()+0x1a>
 8040d54:	f104 00d8 	add.w	r0, r4, #216	; 0xd8
 8040d58:	f000 fab0 	bl	80412bc <libunwind::Registers_arm::restoreVFPv3(unsigned long long*)>
 8040d5c:	e7f2      	b.n	8040d44 <libunwind::UnwindCursor<libunwind::LocalAddressSpace, libunwind::Registers_arm>::jumpto()+0x20>

08040d5e <libunwind::UnwindCursor<libunwind::LocalAddressSpace, libunwind::Registers_arm>::step()>:
 8040d5e:	f890 3180 	ldrb.w	r3, [r0, #384]	; 0x180
 8040d62:	b10b      	cbz	r3, 8040d68 <libunwind::UnwindCursor<libunwind::LocalAddressSpace, libunwind::Registers_arm>::step()+0xa>
 8040d64:	2000      	movs	r0, #0
 8040d66:	4770      	bx	lr
 8040d68:	b530      	push	{r4, r5, lr}
 8040d6a:	b083      	sub	sp, #12
 8040d6c:	4604      	mov	r4, r0
 8040d6e:	9300      	str	r3, [sp, #0]
 8040d70:	9301      	str	r3, [sp, #4]
 8040d72:	466a      	mov	r2, sp
 8040d74:	a901      	add	r1, sp, #4
 8040d76:	f8d0 0178 	ldr.w	r0, [r0, #376]	; 0x178
 8040d7a:	f7ff fa0b 	bl	8040194 <decode_eht_entry>
 8040d7e:	4601      	mov	r1, r0
 8040d80:	9b00      	ldr	r3, [sp, #0]
 8040d82:	9a01      	ldr	r2, [sp, #4]
 8040d84:	4620      	mov	r0, r4
 8040d86:	f7ff fb81 	bl	804048c <_Unwind_VRS_Interpret>
 8040d8a:	2808      	cmp	r0, #8
 8040d8c:	d002      	beq.n	8040d94 <libunwind::UnwindCursor<libunwind::LocalAddressSpace, libunwind::Registers_arm>::step()+0x36>
 8040d8e:	2000      	movs	r0, #0
 8040d90:	b003      	add	sp, #12
 8040d92:	bd30      	pop	{r4, r5, pc}
 8040d94:	6823      	ldr	r3, [r4, #0]
 8040d96:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8040d98:	2101      	movs	r1, #1
 8040d9a:	4620      	mov	r0, r4
 8040d9c:	4798      	blx	r3
 8040d9e:	f894 3180 	ldrb.w	r3, [r4, #384]	; 0x180
 8040da2:	b993      	cbnz	r3, 8040dca <libunwind::UnwindCursor<libunwind::LocalAddressSpace, libunwind::Registers_arm>::step()+0x6c>
 8040da4:	f8d4 3168 	ldr.w	r3, [r4, #360]	; 0x168
 8040da8:	b18b      	cbz	r3, 8040dce <libunwind::UnwindCursor<libunwind::LocalAddressSpace, libunwind::Registers_arm>::step()+0x70>
 8040daa:	6823      	ldr	r3, [r4, #0]
 8040dac:	691d      	ldr	r5, [r3, #16]
 8040dae:	68db      	ldr	r3, [r3, #12]
 8040db0:	f06f 0101 	mvn.w	r1, #1
 8040db4:	4620      	mov	r0, r4
 8040db6:	4798      	blx	r3
 8040db8:	f8d4 2168 	ldr.w	r2, [r4, #360]	; 0x168
 8040dbc:	4402      	add	r2, r0
 8040dbe:	f06f 0101 	mvn.w	r1, #1
 8040dc2:	4620      	mov	r0, r4
 8040dc4:	47a8      	blx	r5
 8040dc6:	2001      	movs	r0, #1
 8040dc8:	e7e2      	b.n	8040d90 <libunwind::UnwindCursor<libunwind::LocalAddressSpace, libunwind::Registers_arm>::step()+0x32>
 8040dca:	2000      	movs	r0, #0
 8040dcc:	e7e0      	b.n	8040d90 <libunwind::UnwindCursor<libunwind::LocalAddressSpace, libunwind::Registers_arm>::step()+0x32>
 8040dce:	2001      	movs	r0, #1
 8040dd0:	e7de      	b.n	8040d90 <libunwind::UnwindCursor<libunwind::LocalAddressSpace, libunwind::Registers_arm>::step()+0x32>

08040dd2 <libunwind::UnwindCursor<libunwind::LocalAddressSpace, libunwind::Registers_arm>::setFloatReg(int, unsigned long long)>:
 8040dd2:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8040dd4:	4605      	mov	r5, r0
 8040dd6:	460c      	mov	r4, r1
 8040dd8:	4616      	mov	r6, r2
 8040dda:	461f      	mov	r7, r3
 8040ddc:	f5a1 7180 	sub.w	r1, r1, #256	; 0x100
 8040de0:	290f      	cmp	r1, #15
 8040de2:	d90d      	bls.n	8040e00 <libunwind::UnwindCursor<libunwind::LocalAddressSpace, libunwind::Registers_arm>::setFloatReg(int, unsigned long long)+0x2e>
 8040de4:	f5a4 7388 	sub.w	r3, r4, #272	; 0x110
 8040de8:	2b0f      	cmp	r3, #15
 8040dea:	d826      	bhi.n	8040e3a <libunwind::UnwindCursor<libunwind::LocalAddressSpace, libunwind::Registers_arm>::setFloatReg(int, unsigned long long)+0x68>
 8040dec:	f890 304a 	ldrb.w	r3, [r0, #74]	; 0x4a
 8040df0:	b1e3      	cbz	r3, 8040e2c <libunwind::UnwindCursor<libunwind::LocalAddressSpace, libunwind::Registers_arm>::setFloatReg(int, unsigned long long)+0x5a>
 8040df2:	f1a4 01f6 	sub.w	r1, r4, #246	; 0xf6
 8040df6:	eb05 04c1 	add.w	r4, r5, r1, lsl #3
 8040dfa:	60a6      	str	r6, [r4, #8]
 8040dfc:	60e7      	str	r7, [r4, #12]
 8040dfe:	e010      	b.n	8040e22 <libunwind::UnwindCursor<libunwind::LocalAddressSpace, libunwind::Registers_arm>::setFloatReg(int, unsigned long long)+0x50>
 8040e00:	f890 3049 	ldrb.w	r3, [r0, #73]	; 0x49
 8040e04:	b943      	cbnz	r3, 8040e18 <libunwind::UnwindCursor<libunwind::LocalAddressSpace, libunwind::Registers_arm>::setFloatReg(int, unsigned long long)+0x46>
 8040e06:	2301      	movs	r3, #1
 8040e08:	f880 3049 	strb.w	r3, [r0, #73]	; 0x49
 8040e0c:	f890 3048 	ldrb.w	r3, [r0, #72]	; 0x48
 8040e10:	b143      	cbz	r3, 8040e24 <libunwind::UnwindCursor<libunwind::LocalAddressSpace, libunwind::Registers_arm>::setFloatReg(int, unsigned long long)+0x52>
 8040e12:	3050      	adds	r0, #80	; 0x50
 8040e14:	f7ff fcb4 	bl	8040780 <libunwind::Registers_arm::saveVFPWithFSTMX(unsigned long long*)>
 8040e18:	3cf7      	subs	r4, #247	; 0xf7
 8040e1a:	eb05 04c4 	add.w	r4, r5, r4, lsl #3
 8040e1e:	60a6      	str	r6, [r4, #8]
 8040e20:	60e7      	str	r7, [r4, #12]
 8040e22:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8040e24:	3050      	adds	r0, #80	; 0x50
 8040e26:	f7ff fca7 	bl	8040778 <libunwind::Registers_arm::saveVFPWithFSTMD(unsigned long long*)>
 8040e2a:	e7f5      	b.n	8040e18 <libunwind::UnwindCursor<libunwind::LocalAddressSpace, libunwind::Registers_arm>::setFloatReg(int, unsigned long long)+0x46>
 8040e2c:	2301      	movs	r3, #1
 8040e2e:	f880 304a 	strb.w	r3, [r0, #74]	; 0x4a
 8040e32:	30d8      	adds	r0, #216	; 0xd8
 8040e34:	f7ff fca8 	bl	8040788 <libunwind::Registers_arm::saveVFPv3(unsigned long long*)>
 8040e38:	e7db      	b.n	8040df2 <libunwind::UnwindCursor<libunwind::LocalAddressSpace, libunwind::Registers_arm>::setFloatReg(int, unsigned long long)+0x20>
 8040e3a:	f7f8 f863 	bl	8038f04 <abort>
 8040e3e:	e7f0      	b.n	8040e22 <libunwind::UnwindCursor<libunwind::LocalAddressSpace, libunwind::Registers_arm>::setFloatReg(int, unsigned long long)+0x50>

08040e40 <libunwind::UnwindCursor<libunwind::LocalAddressSpace, libunwind::Registers_arm>::getReg(int)>:
 8040e40:	f111 0f02 	cmn.w	r1, #2
 8040e44:	d00e      	beq.n	8040e64 <libunwind::UnwindCursor<libunwind::LocalAddressSpace, libunwind::Registers_arm>::getReg(int)+0x24>
 8040e46:	290d      	cmp	r1, #13
 8040e48:	d00c      	beq.n	8040e64 <libunwind::UnwindCursor<libunwind::LocalAddressSpace, libunwind::Registers_arm>::getReg(int)+0x24>
 8040e4a:	290e      	cmp	r1, #14
 8040e4c:	d00c      	beq.n	8040e68 <libunwind::UnwindCursor<libunwind::LocalAddressSpace, libunwind::Registers_arm>::getReg(int)+0x28>
 8040e4e:	f1b1 3fff 	cmp.w	r1, #4294967295
 8040e52:	d00b      	beq.n	8040e6c <libunwind::UnwindCursor<libunwind::LocalAddressSpace, libunwind::Registers_arm>::getReg(int)+0x2c>
 8040e54:	290f      	cmp	r1, #15
 8040e56:	d009      	beq.n	8040e6c <libunwind::UnwindCursor<libunwind::LocalAddressSpace, libunwind::Registers_arm>::getReg(int)+0x2c>
 8040e58:	290c      	cmp	r1, #12
 8040e5a:	d809      	bhi.n	8040e70 <libunwind::UnwindCursor<libunwind::LocalAddressSpace, libunwind::Registers_arm>::getReg(int)+0x30>
 8040e5c:	eb00 0081 	add.w	r0, r0, r1, lsl #2
 8040e60:	6880      	ldr	r0, [r0, #8]
 8040e62:	4770      	bx	lr
 8040e64:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 8040e66:	4770      	bx	lr
 8040e68:	6c00      	ldr	r0, [r0, #64]	; 0x40
 8040e6a:	4770      	bx	lr
 8040e6c:	6c40      	ldr	r0, [r0, #68]	; 0x44
 8040e6e:	4770      	bx	lr
 8040e70:	b508      	push	{r3, lr}
 8040e72:	f7f8 f847 	bl	8038f04 <abort>

08040e76 <libunwind::UnwindCursor<libunwind::LocalAddressSpace, libunwind::Registers_arm>::getFloatReg(int)>:
 8040e76:	b538      	push	{r3, r4, r5, lr}
 8040e78:	4605      	mov	r5, r0
 8040e7a:	460c      	mov	r4, r1
 8040e7c:	f5a1 7380 	sub.w	r3, r1, #256	; 0x100
 8040e80:	2b0f      	cmp	r3, #15
 8040e82:	d90c      	bls.n	8040e9e <libunwind::UnwindCursor<libunwind::LocalAddressSpace, libunwind::Registers_arm>::getFloatReg(int)+0x28>
 8040e84:	f5a1 7388 	sub.w	r3, r1, #272	; 0x110
 8040e88:	2b0f      	cmp	r3, #15
 8040e8a:	d826      	bhi.n	8040eda <libunwind::UnwindCursor<libunwind::LocalAddressSpace, libunwind::Registers_arm>::getFloatReg(int)+0x64>
 8040e8c:	f890 304a 	ldrb.w	r3, [r0, #74]	; 0x4a
 8040e90:	b1e3      	cbz	r3, 8040ecc <libunwind::UnwindCursor<libunwind::LocalAddressSpace, libunwind::Registers_arm>::getFloatReg(int)+0x56>
 8040e92:	3cf6      	subs	r4, #246	; 0xf6
 8040e94:	eb05 04c4 	add.w	r4, r5, r4, lsl #3
 8040e98:	e9d4 0102 	ldrd	r0, r1, [r4, #8]
 8040e9c:	bd38      	pop	{r3, r4, r5, pc}
 8040e9e:	f890 3049 	ldrb.w	r3, [r0, #73]	; 0x49
 8040ea2:	b943      	cbnz	r3, 8040eb6 <libunwind::UnwindCursor<libunwind::LocalAddressSpace, libunwind::Registers_arm>::getFloatReg(int)+0x40>
 8040ea4:	2301      	movs	r3, #1
 8040ea6:	f880 3049 	strb.w	r3, [r0, #73]	; 0x49
 8040eaa:	f890 3048 	ldrb.w	r3, [r0, #72]	; 0x48
 8040eae:	b14b      	cbz	r3, 8040ec4 <libunwind::UnwindCursor<libunwind::LocalAddressSpace, libunwind::Registers_arm>::getFloatReg(int)+0x4e>
 8040eb0:	3050      	adds	r0, #80	; 0x50
 8040eb2:	f7ff fc65 	bl	8040780 <libunwind::Registers_arm::saveVFPWithFSTMX(unsigned long long*)>
 8040eb6:	f1a4 00f7 	sub.w	r0, r4, #247	; 0xf7
 8040eba:	eb05 04c0 	add.w	r4, r5, r0, lsl #3
 8040ebe:	e9d4 0102 	ldrd	r0, r1, [r4, #8]
 8040ec2:	e7eb      	b.n	8040e9c <libunwind::UnwindCursor<libunwind::LocalAddressSpace, libunwind::Registers_arm>::getFloatReg(int)+0x26>
 8040ec4:	3050      	adds	r0, #80	; 0x50
 8040ec6:	f7ff fc57 	bl	8040778 <libunwind::Registers_arm::saveVFPWithFSTMD(unsigned long long*)>
 8040eca:	e7f4      	b.n	8040eb6 <libunwind::UnwindCursor<libunwind::LocalAddressSpace, libunwind::Registers_arm>::getFloatReg(int)+0x40>
 8040ecc:	2301      	movs	r3, #1
 8040ece:	f880 304a 	strb.w	r3, [r0, #74]	; 0x4a
 8040ed2:	30d8      	adds	r0, #216	; 0xd8
 8040ed4:	f7ff fc58 	bl	8040788 <libunwind::Registers_arm::saveVFPv3(unsigned long long*)>
 8040ed8:	e7db      	b.n	8040e92 <libunwind::UnwindCursor<libunwind::LocalAddressSpace, libunwind::Registers_arm>::getFloatReg(int)+0x1c>
 8040eda:	f7f8 f813 	bl	8038f04 <abort>
	...

08040ee0 <unw_init_local>:
 8040ee0:	b538      	push	{r3, r4, r5, lr}
 8040ee2:	4604      	mov	r4, r0
 8040ee4:	4b15      	ldr	r3, [pc, #84]	; (8040f3c <unw_init_local+0x5c>)
 8040ee6:	6003      	str	r3, [r0, #0]
 8040ee8:	4b15      	ldr	r3, [pc, #84]	; (8040f40 <unw_init_local+0x60>)
 8040eea:	6043      	str	r3, [r0, #4]
 8040eec:	2500      	movs	r5, #0
 8040eee:	f880 5048 	strb.w	r5, [r0, #72]	; 0x48
 8040ef2:	f880 5049 	strb.w	r5, [r0, #73]	; 0x49
 8040ef6:	f880 504a 	strb.w	r5, [r0, #74]	; 0x4a
 8040efa:	2240      	movs	r2, #64	; 0x40
 8040efc:	3008      	adds	r0, #8
 8040efe:	f7fe fb80 	bl	803f602 <__aeabi_memcpy>
 8040f02:	2288      	movs	r2, #136	; 0x88
 8040f04:	4629      	mov	r1, r5
 8040f06:	f104 0050 	add.w	r0, r4, #80	; 0x50
 8040f0a:	f7fe fba3 	bl	803f654 <memset>
 8040f0e:	2280      	movs	r2, #128	; 0x80
 8040f10:	4629      	mov	r1, r5
 8040f12:	f104 00d8 	add.w	r0, r4, #216	; 0xd8
 8040f16:	f7fe fb9d 	bl	803f654 <memset>
 8040f1a:	f884 5180 	strb.w	r5, [r4, #384]	; 0x180
 8040f1e:	f884 5181 	strb.w	r5, [r4, #385]	; 0x181
 8040f22:	2228      	movs	r2, #40	; 0x28
 8040f24:	4629      	mov	r1, r5
 8040f26:	f504 70ac 	add.w	r0, r4, #344	; 0x158
 8040f2a:	f7fe fb93 	bl	803f654 <memset>
 8040f2e:	6823      	ldr	r3, [r4, #0]
 8040f30:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8040f32:	4629      	mov	r1, r5
 8040f34:	4620      	mov	r0, r4
 8040f36:	4798      	blx	r3
 8040f38:	4628      	mov	r0, r5
 8040f3a:	bd38      	pop	{r3, r4, r5, pc}
 8040f3c:	0804bce4 	.word	0x0804bce4
 8040f40:	200124ec 	.word	0x200124ec

08040f44 <unw_get_reg>:
 8040f44:	b570      	push	{r4, r5, r6, lr}
 8040f46:	4604      	mov	r4, r0
 8040f48:	460e      	mov	r6, r1
 8040f4a:	4615      	mov	r5, r2
 8040f4c:	6803      	ldr	r3, [r0, #0]
 8040f4e:	689b      	ldr	r3, [r3, #8]
 8040f50:	4798      	blx	r3
 8040f52:	b138      	cbz	r0, 8040f64 <unw_get_reg+0x20>
 8040f54:	6823      	ldr	r3, [r4, #0]
 8040f56:	68db      	ldr	r3, [r3, #12]
 8040f58:	4631      	mov	r1, r6
 8040f5a:	4620      	mov	r0, r4
 8040f5c:	4798      	blx	r3
 8040f5e:	6028      	str	r0, [r5, #0]
 8040f60:	2000      	movs	r0, #0
 8040f62:	bd70      	pop	{r4, r5, r6, pc}
 8040f64:	4800      	ldr	r0, [pc, #0]	; (8040f68 <unw_get_reg+0x24>)
 8040f66:	e7fc      	b.n	8040f62 <unw_get_reg+0x1e>
 8040f68:	ffffe672 	.word	0xffffe672

08040f6c <unw_set_reg>:
 8040f6c:	b570      	push	{r4, r5, r6, lr}
 8040f6e:	4604      	mov	r4, r0
 8040f70:	460d      	mov	r5, r1
 8040f72:	4616      	mov	r6, r2
 8040f74:	6803      	ldr	r3, [r0, #0]
 8040f76:	689b      	ldr	r3, [r3, #8]
 8040f78:	4798      	blx	r3
 8040f7a:	b188      	cbz	r0, 8040fa0 <unw_set_reg+0x34>
 8040f7c:	6823      	ldr	r3, [r4, #0]
 8040f7e:	691b      	ldr	r3, [r3, #16]
 8040f80:	4632      	mov	r2, r6
 8040f82:	4629      	mov	r1, r5
 8040f84:	4620      	mov	r0, r4
 8040f86:	4798      	blx	r3
 8040f88:	f1b5 3fff 	cmp.w	r5, #4294967295
 8040f8c:	d001      	beq.n	8040f92 <unw_set_reg+0x26>
 8040f8e:	2000      	movs	r0, #0
 8040f90:	bd70      	pop	{r4, r5, r6, pc}
 8040f92:	6823      	ldr	r3, [r4, #0]
 8040f94:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8040f96:	2100      	movs	r1, #0
 8040f98:	4620      	mov	r0, r4
 8040f9a:	4798      	blx	r3
 8040f9c:	2000      	movs	r0, #0
 8040f9e:	e7f7      	b.n	8040f90 <unw_set_reg+0x24>
 8040fa0:	4800      	ldr	r0, [pc, #0]	; (8040fa4 <unw_set_reg+0x38>)
 8040fa2:	e7f5      	b.n	8040f90 <unw_set_reg+0x24>
 8040fa4:	ffffe672 	.word	0xffffe672

08040fa8 <unw_get_fpreg>:
 8040fa8:	b570      	push	{r4, r5, r6, lr}
 8040faa:	4604      	mov	r4, r0
 8040fac:	460e      	mov	r6, r1
 8040fae:	4615      	mov	r5, r2
 8040fb0:	6803      	ldr	r3, [r0, #0]
 8040fb2:	695b      	ldr	r3, [r3, #20]
 8040fb4:	4798      	blx	r3
 8040fb6:	b140      	cbz	r0, 8040fca <unw_get_fpreg+0x22>
 8040fb8:	6823      	ldr	r3, [r4, #0]
 8040fba:	699b      	ldr	r3, [r3, #24]
 8040fbc:	4631      	mov	r1, r6
 8040fbe:	4620      	mov	r0, r4
 8040fc0:	4798      	blx	r3
 8040fc2:	e9c5 0100 	strd	r0, r1, [r5]
 8040fc6:	2000      	movs	r0, #0
 8040fc8:	bd70      	pop	{r4, r5, r6, pc}
 8040fca:	4801      	ldr	r0, [pc, #4]	; (8040fd0 <unw_get_fpreg+0x28>)
 8040fcc:	e7fc      	b.n	8040fc8 <unw_get_fpreg+0x20>
 8040fce:	bf00      	nop
 8040fd0:	ffffe672 	.word	0xffffe672

08040fd4 <unw_set_fpreg>:
 8040fd4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8040fd8:	4604      	mov	r4, r0
 8040fda:	460d      	mov	r5, r1
 8040fdc:	4690      	mov	r8, r2
 8040fde:	461f      	mov	r7, r3
 8040fe0:	6806      	ldr	r6, [r0, #0]
 8040fe2:	6976      	ldr	r6, [r6, #20]
 8040fe4:	47b0      	blx	r6
 8040fe6:	b148      	cbz	r0, 8040ffc <unw_set_fpreg+0x28>
 8040fe8:	6823      	ldr	r3, [r4, #0]
 8040fea:	69de      	ldr	r6, [r3, #28]
 8040fec:	4642      	mov	r2, r8
 8040fee:	463b      	mov	r3, r7
 8040ff0:	4629      	mov	r1, r5
 8040ff2:	4620      	mov	r0, r4
 8040ff4:	47b0      	blx	r6
 8040ff6:	2000      	movs	r0, #0
 8040ff8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8040ffc:	4800      	ldr	r0, [pc, #0]	; (8041000 <unw_set_fpreg+0x2c>)
 8040ffe:	e7fb      	b.n	8040ff8 <unw_set_fpreg+0x24>
 8041000:	ffffe672 	.word	0xffffe672

08041004 <unw_step>:
 8041004:	b508      	push	{r3, lr}
 8041006:	6803      	ldr	r3, [r0, #0]
 8041008:	6a1b      	ldr	r3, [r3, #32]
 804100a:	4798      	blx	r3
 804100c:	bd08      	pop	{r3, pc}
	...

08041010 <unw_get_proc_info>:
 8041010:	b510      	push	{r4, lr}
 8041012:	460c      	mov	r4, r1
 8041014:	6803      	ldr	r3, [r0, #0]
 8041016:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8041018:	4798      	blx	r3
 804101a:	6863      	ldr	r3, [r4, #4]
 804101c:	2b00      	cmp	r3, #0
 804101e:	4802      	ldr	r0, [pc, #8]	; (8041028 <unw_get_proc_info+0x18>)
 8041020:	bf18      	it	ne
 8041022:	2000      	movne	r0, #0
 8041024:	bd10      	pop	{r4, pc}
 8041026:	bf00      	nop
 8041028:	ffffe66b 	.word	0xffffe66b

0804102c <unw_resume>:
 804102c:	b508      	push	{r3, lr}
 804102e:	6803      	ldr	r3, [r0, #0]
 8041030:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8041032:	4798      	blx	r3
 8041034:	4800      	ldr	r0, [pc, #0]	; (8041038 <unw_resume+0xc>)
 8041036:	bd08      	pop	{r3, pc}
 8041038:	ffffe674 	.word	0xffffe674

0804103c <unw_save_vfp_as_X>:
 804103c:	b508      	push	{r3, lr}
 804103e:	6803      	ldr	r3, [r0, #0]
 8041040:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8041042:	4798      	blx	r3
 8041044:	bd08      	pop	{r3, pc}
	...

08041048 <libunwind::UnwindCursor<libunwind::LocalAddressSpace, libunwind::Registers_arm>::getInfoFromEHABISection(unsigned int, libunwind::UnwindInfoSections const&)>:
 8041048:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 804104c:	6857      	ldr	r7, [r2, #4]
 804104e:	2f07      	cmp	r7, #7
 8041050:	d802      	bhi.n	8041058 <libunwind::UnwindCursor<libunwind::LocalAddressSpace, libunwind::Registers_arm>::getInfoFromEHABISection(unsigned int, libunwind::UnwindInfoSections const&)+0x10>
 8041052:	2000      	movs	r0, #0
 8041054:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8041058:	08ff      	lsrs	r7, r7, #3
 804105a:	6814      	ldr	r4, [r2, #0]
 804105c:	463a      	mov	r2, r7
 804105e:	2600      	movs	r6, #0
 8041060:	ea4f 0c52 	mov.w	ip, r2, lsr #1
 8041064:	eb06 0552 	add.w	r5, r6, r2, lsr #1
 8041068:	eb04 0ec5 	add.w	lr, r4, r5, lsl #3
 804106c:	f89e 8001 	ldrb.w	r8, [lr, #1]
 8041070:	f89e 3002 	ldrb.w	r3, [lr, #2]
 8041074:	041b      	lsls	r3, r3, #16
 8041076:	ea43 2308 	orr.w	r3, r3, r8, lsl #8
 804107a:	f814 8035 	ldrb.w	r8, [r4, r5, lsl #3]
 804107e:	ea43 0308 	orr.w	r3, r3, r8
 8041082:	f89e 8003 	ldrb.w	r8, [lr, #3]
 8041086:	ea43 6308 	orr.w	r3, r3, r8, lsl #24
 804108a:	ea4f 0843 	mov.w	r8, r3, lsl #1
 804108e:	f008 4800 	and.w	r8, r8, #2147483648	; 0x80000000
 8041092:	ea48 0303 	orr.w	r3, r8, r3
 8041096:	4473      	add	r3, lr
 8041098:	428b      	cmp	r3, r1
 804109a:	bf9d      	ittte	ls
 804109c:	1c6e      	addls	r6, r5, #1
 804109e:	f102 32ff 	addls.w	r2, r2, #4294967295
 80410a2:	eba2 020c 	subls.w	r2, r2, ip
 80410a6:	4662      	movhi	r2, ip
 80410a8:	2a00      	cmp	r2, #0
 80410aa:	d1d9      	bne.n	8041060 <libunwind::UnwindCursor<libunwind::LocalAddressSpace, libunwind::Registers_arm>::getInfoFromEHABISection(unsigned int, libunwind::UnwindInfoSections const&)+0x18>
 80410ac:	2e00      	cmp	r6, #0
 80410ae:	f000 80c5 	beq.w	804123c <libunwind::UnwindCursor<libunwind::LocalAddressSpace, libunwind::Registers_arm>::getInfoFromEHABISection(unsigned int, libunwind::UnwindInfoSections const&)+0x1f4>
 80410b2:	1e75      	subs	r5, r6, #1
 80410b4:	00e9      	lsls	r1, r5, #3
 80410b6:	42b7      	cmp	r7, r6
 80410b8:	d075      	beq.n	80411a6 <libunwind::UnwindCursor<libunwind::LocalAddressSpace, libunwind::Registers_arm>::getInfoFromEHABISection(unsigned int, libunwind::UnwindInfoSections const&)+0x15e>
 80410ba:	eb04 0cc6 	add.w	ip, r4, r6, lsl #3
 80410be:	f89c 7001 	ldrb.w	r7, [ip, #1]
 80410c2:	f89c 3002 	ldrb.w	r3, [ip, #2]
 80410c6:	041b      	lsls	r3, r3, #16
 80410c8:	ea43 2307 	orr.w	r3, r3, r7, lsl #8
 80410cc:	f814 6036 	ldrb.w	r6, [r4, r6, lsl #3]
 80410d0:	4333      	orrs	r3, r6
 80410d2:	f89c 6003 	ldrb.w	r6, [ip, #3]
 80410d6:	ea43 6306 	orr.w	r3, r3, r6, lsl #24
 80410da:	005f      	lsls	r7, r3, #1
 80410dc:	f007 4700 	and.w	r7, r7, #2147483648	; 0x80000000
 80410e0:	433b      	orrs	r3, r7
 80410e2:	eb03 070c 	add.w	r7, r3, ip
 80410e6:	f101 0c04 	add.w	ip, r1, #4
 80410ea:	eb1c 0604 	adds.w	r6, ip, r4
 80410ee:	f000 80a7 	beq.w	8041240 <libunwind::UnwindCursor<libunwind::LocalAddressSpace, libunwind::Registers_arm>::getInfoFromEHABISection(unsigned int, libunwind::UnwindInfoSections const&)+0x1f8>
 80410f2:	f896 e001 	ldrb.w	lr, [r6, #1]
 80410f6:	78b3      	ldrb	r3, [r6, #2]
 80410f8:	041b      	lsls	r3, r3, #16
 80410fa:	ea43 230e 	orr.w	r3, r3, lr, lsl #8
 80410fe:	f81c c004 	ldrb.w	ip, [ip, r4]
 8041102:	ea43 030c 	orr.w	r3, r3, ip
 8041106:	f896 c003 	ldrb.w	ip, [r6, #3]
 804110a:	ea43 630c 	orr.w	r3, r3, ip, lsl #24
 804110e:	469c      	mov	ip, r3
 8041110:	2b01      	cmp	r3, #1
 8041112:	f000 8097 	beq.w	8041244 <libunwind::UnwindCursor<libunwind::LocalAddressSpace, libunwind::Registers_arm>::getInfoFromEHABISection(unsigned int, libunwind::UnwindInfoSections const&)+0x1fc>
 8041116:	2b00      	cmp	r3, #0
 8041118:	db48      	blt.n	80411ac <libunwind::UnwindCursor<libunwind::LocalAddressSpace, libunwind::Registers_arm>::getInfoFromEHABISection(unsigned int, libunwind::UnwindInfoSections const&)+0x164>
 804111a:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 804111e:	f00c 4c00 	and.w	ip, ip, #2147483648	; 0x80000000
 8041122:	ea4c 0303 	orr.w	r3, ip, r3
 8041126:	441e      	add	r6, r3
 8041128:	7873      	ldrb	r3, [r6, #1]
 804112a:	f896 c002 	ldrb.w	ip, [r6, #2]
 804112e:	ea4f 4c0c 	mov.w	ip, ip, lsl #16
 8041132:	ea4c 2c03 	orr.w	ip, ip, r3, lsl #8
 8041136:	7833      	ldrb	r3, [r6, #0]
 8041138:	ea4c 0c03 	orr.w	ip, ip, r3
 804113c:	78f3      	ldrb	r3, [r6, #3]
 804113e:	ea4c 6c03 	orr.w	ip, ip, r3, lsl #24
 8041142:	f04f 0e00 	mov.w	lr, #0
 8041146:	4421      	add	r1, r4
 8041148:	f891 8002 	ldrb.w	r8, [r1, #2]
 804114c:	78cb      	ldrb	r3, [r1, #3]
 804114e:	061b      	lsls	r3, r3, #24
 8041150:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
 8041154:	f814 4035 	ldrb.w	r4, [r4, r5, lsl #3]
 8041158:	431c      	orrs	r4, r3
 804115a:	784b      	ldrb	r3, [r1, #1]
 804115c:	ea44 2403 	orr.w	r4, r4, r3, lsl #8
 8041160:	0063      	lsls	r3, r4, #1
 8041162:	f003 4300 	and.w	r3, r3, #2147483648	; 0x80000000
 8041166:	431c      	orrs	r4, r3
 8041168:	4421      	add	r1, r4
 804116a:	f1bc 0f00 	cmp.w	ip, #0
 804116e:	db20      	blt.n	80411b2 <libunwind::UnwindCursor<libunwind::LocalAddressSpace, libunwind::Registers_arm>::getInfoFromEHABISection(unsigned int, libunwind::UnwindInfoSections const&)+0x16a>
 8041170:	79f2      	ldrb	r2, [r6, #7]
 8041172:	eb06 0282 	add.w	r2, r6, r2, lsl #2
 8041176:	3208      	adds	r2, #8
 8041178:	f8c0 1158 	str.w	r1, [r0, #344]	; 0x158
 804117c:	f8c0 715c 	str.w	r7, [r0, #348]	; 0x15c
 8041180:	ea4f 034c 	mov.w	r3, ip, lsl #1
 8041184:	f003 4300 	and.w	r3, r3, #2147483648	; 0x80000000
 8041188:	ea43 0c0c 	orr.w	ip, r3, ip
 804118c:	eb0c 0306 	add.w	r3, ip, r6
 8041190:	f8c0 3164 	str.w	r3, [r0, #356]	; 0x164
 8041194:	f8c0 6178 	str.w	r6, [r0, #376]	; 0x178
 8041198:	f8c0 2160 	str.w	r2, [r0, #352]	; 0x160
 804119c:	4672      	mov	r2, lr
 804119e:	f8c0 216c 	str.w	r2, [r0, #364]	; 0x16c
 80411a2:	2001      	movs	r0, #1
 80411a4:	e756      	b.n	8041054 <libunwind::UnwindCursor<libunwind::LocalAddressSpace, libunwind::Registers_arm>::getInfoFromEHABISection(unsigned int, libunwind::UnwindInfoSections const&)+0xc>
 80411a6:	f04f 37ff 	mov.w	r7, #4294967295
 80411aa:	e79c      	b.n	80410e6 <libunwind::UnwindCursor<libunwind::LocalAddressSpace, libunwind::Registers_arm>::getInfoFromEHABISection(unsigned int, libunwind::UnwindInfoSections const&)+0x9e>
 80411ac:	f04f 0e01 	mov.w	lr, #1
 80411b0:	e7c9      	b.n	8041146 <libunwind::UnwindCursor<libunwind::LocalAddressSpace, libunwind::Registers_arm>::getInfoFromEHABISection(unsigned int, libunwind::UnwindInfoSections const&)+0xfe>
 80411b2:	f3cc 6303 	ubfx	r3, ip, #24, #4
 80411b6:	2b01      	cmp	r3, #1
 80411b8:	d01b      	beq.n	80411f2 <libunwind::UnwindCursor<libunwind::LocalAddressSpace, libunwind::Registers_arm>::getInfoFromEHABISection(unsigned int, libunwind::UnwindInfoSections const&)+0x1aa>
 80411ba:	2b02      	cmp	r3, #2
 80411bc:	d031      	beq.n	8041222 <libunwind::UnwindCursor<libunwind::LocalAddressSpace, libunwind::Registers_arm>::getInfoFromEHABISection(unsigned int, libunwind::UnwindInfoSections const&)+0x1da>
 80411be:	b11b      	cbz	r3, 80411c8 <libunwind::UnwindCursor<libunwind::LocalAddressSpace, libunwind::Registers_arm>::getInfoFromEHABISection(unsigned int, libunwind::UnwindInfoSections const&)+0x180>
 80411c0:	f7f7 fea0 	bl	8038f04 <abort>
 80411c4:	2000      	movs	r0, #0
 80411c6:	e745      	b.n	8041054 <libunwind::UnwindCursor<libunwind::LocalAddressSpace, libunwind::Registers_arm>::getInfoFromEHABISection(unsigned int, libunwind::UnwindInfoSections const&)+0xc>
 80411c8:	4c1f      	ldr	r4, [pc, #124]	; (8041248 <libunwind::UnwindCursor<libunwind::LocalAddressSpace, libunwind::Registers_arm>::getInfoFromEHABISection(unsigned int, libunwind::UnwindInfoSections const&)+0x200>)
 80411ca:	f1be 0f00 	cmp.w	lr, #0
 80411ce:	d11c      	bne.n	804120a <libunwind::UnwindCursor<libunwind::LocalAddressSpace, libunwind::Registers_arm>::getInfoFromEHABISection(unsigned int, libunwind::UnwindInfoSections const&)+0x1c2>
 80411d0:	1d33      	adds	r3, r6, #4
 80411d2:	46f4      	mov	ip, lr
 80411d4:	f8c0 1158 	str.w	r1, [r0, #344]	; 0x158
 80411d8:	f8c0 715c 	str.w	r7, [r0, #348]	; 0x15c
 80411dc:	f8c0 4164 	str.w	r4, [r0, #356]	; 0x164
 80411e0:	f8c0 6178 	str.w	r6, [r0, #376]	; 0x178
 80411e4:	f8c0 3160 	str.w	r3, [r0, #352]	; 0x160
 80411e8:	f1bc 0f00 	cmp.w	ip, #0
 80411ec:	bf18      	it	ne
 80411ee:	2202      	movne	r2, #2
 80411f0:	e7d5      	b.n	804119e <libunwind::UnwindCursor<libunwind::LocalAddressSpace, libunwind::Registers_arm>::getInfoFromEHABISection(unsigned int, libunwind::UnwindInfoSections const&)+0x156>
 80411f2:	4c16      	ldr	r4, [pc, #88]	; (804124c <libunwind::UnwindCursor<libunwind::LocalAddressSpace, libunwind::Registers_arm>::getInfoFromEHABISection(unsigned int, libunwind::UnwindInfoSections const&)+0x204>)
 80411f4:	f3cc 4507 	ubfx	r5, ip, #16, #8
 80411f8:	1c6b      	adds	r3, r5, #1
 80411fa:	eb06 0383 	add.w	r3, r6, r3, lsl #2
 80411fe:	f04f 0c00 	mov.w	ip, #0
 8041202:	f1be 0f00 	cmp.w	lr, #0
 8041206:	d0e5      	beq.n	80411d4 <libunwind::UnwindCursor<libunwind::LocalAddressSpace, libunwind::Registers_arm>::getInfoFromEHABISection(unsigned int, libunwind::UnwindInfoSections const&)+0x18c>
 8041208:	b9a5      	cbnz	r5, 8041234 <libunwind::UnwindCursor<libunwind::LocalAddressSpace, libunwind::Registers_arm>::getInfoFromEHABISection(unsigned int, libunwind::UnwindInfoSections const&)+0x1ec>
 804120a:	f8c0 1158 	str.w	r1, [r0, #344]	; 0x158
 804120e:	f8c0 715c 	str.w	r7, [r0, #348]	; 0x15c
 8041212:	f8c0 4164 	str.w	r4, [r0, #356]	; 0x164
 8041216:	f8c0 6178 	str.w	r6, [r0, #376]	; 0x178
 804121a:	f8c0 3160 	str.w	r3, [r0, #352]	; 0x160
 804121e:	2201      	movs	r2, #1
 8041220:	e7bd      	b.n	804119e <libunwind::UnwindCursor<libunwind::LocalAddressSpace, libunwind::Registers_arm>::getInfoFromEHABISection(unsigned int, libunwind::UnwindInfoSections const&)+0x156>
 8041222:	4c0b      	ldr	r4, [pc, #44]	; (8041250 <libunwind::UnwindCursor<libunwind::LocalAddressSpace, libunwind::Registers_arm>::getInfoFromEHABISection(unsigned int, libunwind::UnwindInfoSections const&)+0x208>)
 8041224:	f3cc 4507 	ubfx	r5, ip, #16, #8
 8041228:	1c6b      	adds	r3, r5, #1
 804122a:	eb06 0383 	add.w	r3, r6, r3, lsl #2
 804122e:	f04f 0c01 	mov.w	ip, #1
 8041232:	e7e6      	b.n	8041202 <libunwind::UnwindCursor<libunwind::LocalAddressSpace, libunwind::Registers_arm>::getInfoFromEHABISection(unsigned int, libunwind::UnwindInfoSections const&)+0x1ba>
 8041234:	f7f7 fe66 	bl	8038f04 <abort>
 8041238:	2000      	movs	r0, #0
 804123a:	e70b      	b.n	8041054 <libunwind::UnwindCursor<libunwind::LocalAddressSpace, libunwind::Registers_arm>::getInfoFromEHABISection(unsigned int, libunwind::UnwindInfoSections const&)+0xc>
 804123c:	2000      	movs	r0, #0
 804123e:	e709      	b.n	8041054 <libunwind::UnwindCursor<libunwind::LocalAddressSpace, libunwind::Registers_arm>::getInfoFromEHABISection(unsigned int, libunwind::UnwindInfoSections const&)+0xc>
 8041240:	2000      	movs	r0, #0
 8041242:	e707      	b.n	8041054 <libunwind::UnwindCursor<libunwind::LocalAddressSpace, libunwind::Registers_arm>::getInfoFromEHABISection(unsigned int, libunwind::UnwindInfoSections const&)+0xc>
 8041244:	2000      	movs	r0, #0
 8041246:	e705      	b.n	8041054 <libunwind::UnwindCursor<libunwind::LocalAddressSpace, libunwind::Registers_arm>::getInfoFromEHABISection(unsigned int, libunwind::UnwindInfoSections const&)+0xc>
 8041248:	08040249 	.word	0x08040249
 804124c:	0804025d 	.word	0x0804025d
 8041250:	08040271 	.word	0x08040271

08041254 <libunwind::UnwindCursor<libunwind::LocalAddressSpace, libunwind::Registers_arm>::setInfoBasedOnIPRegister(bool)>:
 8041254:	b530      	push	{r4, r5, lr}
 8041256:	b083      	sub	sp, #12
 8041258:	4604      	mov	r4, r0
 804125a:	460d      	mov	r5, r1
 804125c:	6803      	ldr	r3, [r0, #0]
 804125e:	68db      	ldr	r3, [r3, #12]
 8041260:	f04f 31ff 	mov.w	r1, #4294967295
 8041264:	4798      	blx	r3
 8041266:	f020 0101 	bic.w	r1, r0, #1
 804126a:	b105      	cbz	r5, 804126e <libunwind::UnwindCursor<libunwind::LocalAddressSpace, libunwind::Registers_arm>::setInfoBasedOnIPRegister(bool)+0x1a>
 804126c:	3901      	subs	r1, #1
 804126e:	4a09      	ldr	r2, [pc, #36]	; (8041294 <libunwind::UnwindCursor<libunwind::LocalAddressSpace, libunwind::Registers_arm>::setInfoBasedOnIPRegister(bool)+0x40>)
 8041270:	9200      	str	r2, [sp, #0]
 8041272:	4b09      	ldr	r3, [pc, #36]	; (8041298 <libunwind::UnwindCursor<libunwind::LocalAddressSpace, libunwind::Registers_arm>::setInfoBasedOnIPRegister(bool)+0x44>)
 8041274:	1a9b      	subs	r3, r3, r2
 8041276:	9301      	str	r3, [sp, #4]
 8041278:	b923      	cbnz	r3, 8041284 <libunwind::UnwindCursor<libunwind::LocalAddressSpace, libunwind::Registers_arm>::setInfoBasedOnIPRegister(bool)+0x30>
 804127a:	2301      	movs	r3, #1
 804127c:	f884 3180 	strb.w	r3, [r4, #384]	; 0x180
 8041280:	b003      	add	sp, #12
 8041282:	bd30      	pop	{r4, r5, pc}
 8041284:	466a      	mov	r2, sp
 8041286:	4620      	mov	r0, r4
 8041288:	f7ff fede 	bl	8041048 <libunwind::UnwindCursor<libunwind::LocalAddressSpace, libunwind::Registers_arm>::getInfoFromEHABISection(unsigned int, libunwind::UnwindInfoSections const&)>
 804128c:	2800      	cmp	r0, #0
 804128e:	d0f4      	beq.n	804127a <libunwind::UnwindCursor<libunwind::LocalAddressSpace, libunwind::Registers_arm>::setInfoBasedOnIPRegister(bool)+0x26>
 8041290:	e7f6      	b.n	8041280 <libunwind::UnwindCursor<libunwind::LocalAddressSpace, libunwind::Registers_arm>::setInfoBasedOnIPRegister(bool)+0x2c>
 8041292:	bf00      	nop
 8041294:	0804bdf8 	.word	0x0804bdf8
 8041298:	0804caa8 	.word	0x0804caa8

0804129c <libunwind::Registers_arm::restoreCoreAndJumpTo()>:
 804129c:	4686      	mov	lr, r0
 804129e:	e89e 1fff 	ldmia.w	lr, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip}
 80412a2:	f8de d034 	ldr.w	sp, [lr, #52]	; 0x34
 80412a6:	f8de e03c 	ldr.w	lr, [lr, #60]	; 0x3c
 80412aa:	4770      	bx	lr

080412ac <libunwind::Registers_arm::restoreVFPWithFLDMD(unsigned long long*)>:
 80412ac:	ec90 0b20 	vldmia	r0, {d0-d15}
 80412b0:	4770      	bx	lr
 80412b2:	bf00      	nop

080412b4 <libunwind::Registers_arm::restoreVFPWithFLDMX(unsigned long long*)>:
 80412b4:	ec90 0b20 	vldmia	r0, {d0-d15}
 80412b8:	4770      	bx	lr
 80412ba:	bf00      	nop

080412bc <libunwind::Registers_arm::restoreVFPv3(unsigned long long*)>:
 80412bc:	ecd0 0b20 	vldmia	r0, {d16-d31}
 80412c0:	4770      	bx	lr
 80412c2:	bf00      	nop

080412c4 <__vfprintf_short_float_long>:
 80412c4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80412c8:	ed2d 8b04 	vpush	{d8-d9}
 80412cc:	b089      	sub	sp, #36	; 0x24
 80412ce:	4683      	mov	fp, r0
 80412d0:	9203      	str	r2, [sp, #12]
 80412d2:	2300      	movs	r3, #0
 80412d4:	6003      	str	r3, [r0, #0]
 80412d6:	460d      	mov	r5, r1
 80412d8:	f815 1b01 	ldrb.w	r1, [r5], #1
 80412dc:	2900      	cmp	r1, #0
 80412de:	f000 86bf 	beq.w	8042060 <__vfprintf_short_float_long+0xd9c>
 80412e2:	eddf 8aa4 	vldr	s17, [pc, #656]	; 8041574 <__vfprintf_short_float_long+0x2b0>
 80412e6:	f000 beab 	b.w	8042040 <__vfprintf_short_float_long+0xd7c>
 80412ea:	2600      	movs	r6, #0
 80412ec:	e007      	b.n	80412fe <__vfprintf_short_float_long+0x3a>
 80412ee:	285e      	cmp	r0, #94	; 0x5e
 80412f0:	d166      	bne.n	80413c0 <__vfprintf_short_float_long+0xfc>
 80412f2:	f446 5680 	orr.w	r6, r6, #4096	; 0x1000
 80412f6:	e001      	b.n	80412fc <__vfprintf_short_float_long+0x38>
 80412f8:	f046 0640 	orr.w	r6, r6, #64	; 0x40
 80412fc:	4615      	mov	r5, r2
 80412fe:	462a      	mov	r2, r5
 8041300:	f812 0b01 	ldrb.w	r0, [r2], #1
 8041304:	2830      	cmp	r0, #48	; 0x30
 8041306:	d8f2      	bhi.n	80412ee <__vfprintf_short_float_long+0x2a>
 8041308:	281f      	cmp	r0, #31
 804130a:	d938      	bls.n	804137e <__vfprintf_short_float_long+0xba>
 804130c:	f1a0 0320 	sub.w	r3, r0, #32
 8041310:	2b10      	cmp	r3, #16
 8041312:	d834      	bhi.n	804137e <__vfprintf_short_float_long+0xba>
 8041314:	a101      	add	r1, pc, #4	; (adr r1, 804131c <__vfprintf_short_float_long+0x58>)
 8041316:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 804131a:	bf00      	nop
 804131c:	080412f9 	.word	0x080412f9
 8041320:	0804137f 	.word	0x0804137f
 8041324:	0804137f 	.word	0x0804137f
 8041328:	08041361 	.word	0x08041361
 804132c:	0804137f 	.word	0x0804137f
 8041330:	0804137f 	.word	0x0804137f
 8041334:	0804137f 	.word	0x0804137f
 8041338:	08041367 	.word	0x08041367
 804133c:	0804137f 	.word	0x0804137f
 8041340:	0804137f 	.word	0x0804137f
 8041344:	0804137f 	.word	0x0804137f
 8041348:	0804136d 	.word	0x0804136d
 804134c:	0804137f 	.word	0x0804137f
 8041350:	08041373 	.word	0x08041373
 8041354:	0804137f 	.word	0x0804137f
 8041358:	0804137f 	.word	0x0804137f
 804135c:	08041379 	.word	0x08041379
 8041360:	f046 0680 	orr.w	r6, r6, #128	; 0x80
 8041364:	e7ca      	b.n	80412fc <__vfprintf_short_float_long+0x38>
 8041366:	f446 4600 	orr.w	r6, r6, #32768	; 0x8000
 804136a:	e7c7      	b.n	80412fc <__vfprintf_short_float_long+0x38>
 804136c:	f046 0620 	orr.w	r6, r6, #32
 8041370:	e7c4      	b.n	80412fc <__vfprintf_short_float_long+0x38>
 8041372:	f046 0610 	orr.w	r6, r6, #16
 8041376:	e7c1      	b.n	80412fc <__vfprintf_short_float_long+0x38>
 8041378:	f446 7600 	orr.w	r6, r6, #512	; 0x200
 804137c:	e7be      	b.n	80412fc <__vfprintf_short_float_long+0x38>
 804137e:	282a      	cmp	r0, #42	; 0x2a
 8041380:	d11e      	bne.n	80413c0 <__vfprintf_short_float_long+0xfc>
 8041382:	9b03      	ldr	r3, [sp, #12]
 8041384:	1d19      	adds	r1, r3, #4
 8041386:	9103      	str	r1, [sp, #12]
 8041388:	681f      	ldr	r7, [r3, #0]
 804138a:	2f00      	cmp	r7, #0
 804138c:	bfbc      	itt	lt
 804138e:	427f      	neglt	r7, r7
 8041390:	f046 0610 	orrlt.w	r6, r6, #16
 8041394:	7810      	ldrb	r0, [r2, #0]
 8041396:	1caa      	adds	r2, r5, #2
 8041398:	ea27 75e7 	bic.w	r5, r7, r7, asr #31
 804139c:	282e      	cmp	r0, #46	; 0x2e
 804139e:	d024      	beq.n	80413ea <__vfprintf_short_float_long+0x126>
 80413a0:	2700      	movs	r7, #0
 80413a2:	2874      	cmp	r0, #116	; 0x74
 80413a4:	d045      	beq.n	8041432 <__vfprintf_short_float_long+0x16e>
 80413a6:	287a      	cmp	r0, #122	; 0x7a
 80413a8:	d043      	beq.n	8041432 <__vfprintf_short_float_long+0x16e>
 80413aa:	286c      	cmp	r0, #108	; 0x6c
 80413ac:	f000 80c2 	beq.w	8041534 <__vfprintf_short_float_long+0x270>
 80413b0:	284c      	cmp	r0, #76	; 0x4c
 80413b2:	f000 80c5 	beq.w	8041540 <__vfprintf_short_float_long+0x27c>
 80413b6:	2868      	cmp	r0, #104	; 0x68
 80413b8:	f000 80d3 	beq.w	8041562 <__vfprintf_short_float_long+0x29e>
 80413bc:	4691      	mov	r9, r2
 80413be:	e03b      	b.n	8041438 <__vfprintf_short_float_long+0x174>
 80413c0:	f1a0 0330 	sub.w	r3, r0, #48	; 0x30
 80413c4:	b2db      	uxtb	r3, r3
 80413c6:	2b09      	cmp	r3, #9
 80413c8:	bf88      	it	hi
 80413ca:	2700      	movhi	r7, #0
 80413cc:	d8e4      	bhi.n	8041398 <__vfprintf_short_float_long+0xd4>
 80413ce:	2700      	movs	r7, #0
 80413d0:	eb07 0787 	add.w	r7, r7, r7, lsl #2
 80413d4:	3830      	subs	r0, #48	; 0x30
 80413d6:	eb00 0747 	add.w	r7, r0, r7, lsl #1
 80413da:	f812 0b01 	ldrb.w	r0, [r2], #1
 80413de:	f1a0 0330 	sub.w	r3, r0, #48	; 0x30
 80413e2:	b2db      	uxtb	r3, r3
 80413e4:	2b09      	cmp	r3, #9
 80413e6:	d9f3      	bls.n	80413d0 <__vfprintf_short_float_long+0x10c>
 80413e8:	e7d6      	b.n	8041398 <__vfprintf_short_float_long+0xd4>
 80413ea:	7810      	ldrb	r0, [r2, #0]
 80413ec:	282a      	cmp	r0, #42	; 0x2a
 80413ee:	d10a      	bne.n	8041406 <__vfprintf_short_float_long+0x142>
 80413f0:	9b03      	ldr	r3, [sp, #12]
 80413f2:	1d19      	adds	r1, r3, #4
 80413f4:	9103      	str	r1, [sp, #12]
 80413f6:	681f      	ldr	r7, [r3, #0]
 80413f8:	7850      	ldrb	r0, [r2, #1]
 80413fa:	3202      	adds	r2, #2
 80413fc:	2f00      	cmp	r7, #0
 80413fe:	dbd0      	blt.n	80413a2 <__vfprintf_short_float_long+0xde>
 8041400:	f446 7680 	orr.w	r6, r6, #256	; 0x100
 8041404:	e7cd      	b.n	80413a2 <__vfprintf_short_float_long+0xde>
 8041406:	3201      	adds	r2, #1
 8041408:	f1a0 0330 	sub.w	r3, r0, #48	; 0x30
 804140c:	b2db      	uxtb	r3, r3
 804140e:	2b09      	cmp	r3, #9
 8041410:	bf88      	it	hi
 8041412:	2700      	movhi	r7, #0
 8041414:	d8f4      	bhi.n	8041400 <__vfprintf_short_float_long+0x13c>
 8041416:	2700      	movs	r7, #0
 8041418:	eb07 0787 	add.w	r7, r7, r7, lsl #2
 804141c:	3830      	subs	r0, #48	; 0x30
 804141e:	eb00 0747 	add.w	r7, r0, r7, lsl #1
 8041422:	f812 0b01 	ldrb.w	r0, [r2], #1
 8041426:	f1a0 0330 	sub.w	r3, r0, #48	; 0x30
 804142a:	b2db      	uxtb	r3, r3
 804142c:	2b09      	cmp	r3, #9
 804142e:	d9f3      	bls.n	8041418 <__vfprintf_short_float_long+0x154>
 8041430:	e7e4      	b.n	80413fc <__vfprintf_short_float_long+0x138>
 8041432:	4691      	mov	r9, r2
 8041434:	f819 0b01 	ldrb.w	r0, [r9], #1
 8041438:	2878      	cmp	r0, #120	; 0x78
 804143a:	f200 8084 	bhi.w	8041546 <__vfprintf_short_float_long+0x282>
 804143e:	e8df f010 	tbh	[pc, r0, lsl #1]
 8041442:	0621      	.short	0x0621
 8041444:	00820082 	.word	0x00820082
 8041448:	00820082 	.word	0x00820082
 804144c:	00820082 	.word	0x00820082
 8041450:	00820082 	.word	0x00820082
 8041454:	00820082 	.word	0x00820082
 8041458:	00820082 	.word	0x00820082
 804145c:	00820082 	.word	0x00820082
 8041460:	00820082 	.word	0x00820082
 8041464:	00820082 	.word	0x00820082
 8041468:	00820082 	.word	0x00820082
 804146c:	00820082 	.word	0x00820082
 8041470:	00820082 	.word	0x00820082
 8041474:	00820082 	.word	0x00820082
 8041478:	00820082 	.word	0x00820082
 804147c:	00820082 	.word	0x00820082
 8041480:	00820082 	.word	0x00820082
 8041484:	00820082 	.word	0x00820082
 8041488:	00820082 	.word	0x00820082
 804148c:	008200a3 	.word	0x008200a3
 8041490:	00820082 	.word	0x00820082
 8041494:	00820082 	.word	0x00820082
 8041498:	00820082 	.word	0x00820082
 804149c:	00820082 	.word	0x00820082
 80414a0:	00820082 	.word	0x00820082
 80414a4:	00820082 	.word	0x00820082
 80414a8:	00820082 	.word	0x00820082
 80414ac:	00820082 	.word	0x00820082
 80414b0:	00820082 	.word	0x00820082
 80414b4:	00820082 	.word	0x00820082
 80414b8:	00820082 	.word	0x00820082
 80414bc:	00820082 	.word	0x00820082
 80414c0:	00820082 	.word	0x00820082
 80414c4:	00820082 	.word	0x00820082
 80414c8:	00820082 	.word	0x00820082
 80414cc:	01e101c4 	.word	0x01e101c4
 80414d0:	008201e6 	.word	0x008201e6
 80414d4:	00820082 	.word	0x00820082
 80414d8:	00820082 	.word	0x00820082
 80414dc:	00820082 	.word	0x00820082
 80414e0:	00820082 	.word	0x00820082
 80414e4:	00820082 	.word	0x00820082
 80414e8:	00820082 	.word	0x00820082
 80414ec:	00820082 	.word	0x00820082
 80414f0:	011e0082 	.word	0x011e0082
 80414f4:	00820082 	.word	0x00820082
 80414f8:	00820082 	.word	0x00820082
 80414fc:	00820082 	.word	0x00820082
 8041500:	00820082 	.word	0x00820082
 8041504:	00820082 	.word	0x00820082
 8041508:	015300a9 	.word	0x015300a9
 804150c:	01e301c6 	.word	0x01e301c6
 8041510:	008201e8 	.word	0x008201e8
 8041514:	00820153 	.word	0x00820153
 8041518:	00820082 	.word	0x00820082
 804151c:	00b90082 	.word	0x00b90082
 8041520:	01040141 	.word	0x01040141
 8041524:	00820082 	.word	0x00820082
 8041528:	008200ce 	.word	0x008200ce
 804152c:	0082014c 	.word	0x0082014c
 8041530:	01200082 	.word	0x01200082
 8041534:	4691      	mov	r9, r2
 8041536:	f819 0b01 	ldrb.w	r0, [r9], #1
 804153a:	f046 0601 	orr.w	r6, r6, #1
 804153e:	e77b      	b.n	8041438 <__vfprintf_short_float_long+0x174>
 8041540:	f046 0601 	orr.w	r6, r6, #1
 8041544:	4691      	mov	r9, r2
 8041546:	4b0c      	ldr	r3, [pc, #48]	; (8041578 <__vfprintf_short_float_long+0x2b4>)
 8041548:	681c      	ldr	r4, [r3, #0]
 804154a:	2c00      	cmp	r4, #0
 804154c:	f000 8574 	beq.w	8042038 <__vfprintf_short_float_long+0xd74>
 8041550:	ab03      	add	r3, sp, #12
 8041552:	9301      	str	r3, [sp, #4]
 8041554:	9700      	str	r7, [sp, #0]
 8041556:	462b      	mov	r3, r5
 8041558:	4632      	mov	r2, r6
 804155a:	4659      	mov	r1, fp
 804155c:	47a0      	blx	r4
 804155e:	f000 bd6b 	b.w	8042038 <__vfprintf_short_float_long+0xd74>
 8041562:	7810      	ldrb	r0, [r2, #0]
 8041564:	2868      	cmp	r0, #104	; 0x68
 8041566:	d009      	beq.n	804157c <__vfprintf_short_float_long+0x2b8>
 8041568:	f102 0901 	add.w	r9, r2, #1
 804156c:	f046 0604 	orr.w	r6, r6, #4
 8041570:	e762      	b.n	8041438 <__vfprintf_short_float_long+0x174>
 8041572:	bf00      	nop
 8041574:	42c80000 	.word	0x42c80000
 8041578:	200124d0 	.word	0x200124d0
 804157c:	f046 0608 	orr.w	r6, r6, #8
 8041580:	f102 0902 	add.w	r9, r2, #2
 8041584:	7850      	ldrb	r0, [r2, #1]
 8041586:	e757      	b.n	8041438 <__vfprintf_short_float_long+0x174>
 8041588:	2125      	movs	r1, #37	; 0x25
 804158a:	4658      	mov	r0, fp
 804158c:	f7fd fbea 	bl	803ed64 <__putc>
 8041590:	f000 bd52 	b.w	8042038 <__vfprintf_short_float_long+0xd74>
 8041594:	9b03      	ldr	r3, [sp, #12]
 8041596:	1d1a      	adds	r2, r3, #4
 8041598:	9203      	str	r2, [sp, #12]
 804159a:	781c      	ldrb	r4, [r3, #0]
 804159c:	3d01      	subs	r5, #1
 804159e:	465a      	mov	r2, fp
 80415a0:	4629      	mov	r1, r5
 80415a2:	4630      	mov	r0, r6
 80415a4:	f7fd fc06 	bl	803edb4 <__RAL_pre_padding>
 80415a8:	4621      	mov	r1, r4
 80415aa:	4658      	mov	r0, fp
 80415ac:	f7fd fbda 	bl	803ed64 <__putc>
 80415b0:	46b0      	mov	r8, r6
 80415b2:	e03a      	b.n	804162a <__vfprintf_short_float_long+0x366>
 80415b4:	f016 0f08 	tst.w	r6, #8
 80415b8:	d008      	beq.n	80415cc <__vfprintf_short_float_long+0x308>
 80415ba:	f8db 2000 	ldr.w	r2, [fp]
 80415be:	9b03      	ldr	r3, [sp, #12]
 80415c0:	1d19      	adds	r1, r3, #4
 80415c2:	9103      	str	r1, [sp, #12]
 80415c4:	681b      	ldr	r3, [r3, #0]
 80415c6:	701a      	strb	r2, [r3, #0]
 80415c8:	f000 bd36 	b.w	8042038 <__vfprintf_short_float_long+0xd74>
 80415cc:	9b03      	ldr	r3, [sp, #12]
 80415ce:	1d1a      	adds	r2, r3, #4
 80415d0:	9203      	str	r2, [sp, #12]
 80415d2:	681b      	ldr	r3, [r3, #0]
 80415d4:	f8db 2000 	ldr.w	r2, [fp]
 80415d8:	601a      	str	r2, [r3, #0]
 80415da:	f000 bd2d 	b.w	8042038 <__vfprintf_short_float_long+0xd74>
 80415de:	9b03      	ldr	r3, [sp, #12]
 80415e0:	1d1a      	adds	r2, r3, #4
 80415e2:	9203      	str	r2, [sp, #12]
 80415e4:	681c      	ldr	r4, [r3, #0]
 80415e6:	4b8c      	ldr	r3, [pc, #560]	; (8041818 <__vfprintf_short_float_long+0x554>)
 80415e8:	2c00      	cmp	r4, #0
 80415ea:	bf08      	it	eq
 80415ec:	461c      	moveq	r4, r3
 80415ee:	f426 7800 	bic.w	r8, r6, #512	; 0x200
 80415f2:	f416 7f80 	tst.w	r6, #256	; 0x100
 80415f6:	d023      	beq.n	8041640 <__vfprintf_short_float_long+0x37c>
 80415f8:	4639      	mov	r1, r7
 80415fa:	4620      	mov	r0, r4
 80415fc:	f7fd fe9e 	bl	803f33c <strnlen>
 8041600:	4606      	mov	r6, r0
 8041602:	1bad      	subs	r5, r5, r6
 8041604:	465a      	mov	r2, fp
 8041606:	4629      	mov	r1, r5
 8041608:	4640      	mov	r0, r8
 804160a:	f7fd fbd3 	bl	803edb4 <__RAL_pre_padding>
 804160e:	f106 3aff 	add.w	sl, r6, #4294967295
 8041612:	b156      	cbz	r6, 804162a <__vfprintf_short_float_long+0x366>
 8041614:	4627      	mov	r7, r4
 8041616:	4434      	add	r4, r6
 8041618:	f817 1b01 	ldrb.w	r1, [r7], #1
 804161c:	4658      	mov	r0, fp
 804161e:	f7fd fba1 	bl	803ed64 <__putc>
 8041622:	42bc      	cmp	r4, r7
 8041624:	d1f8      	bne.n	8041618 <__vfprintf_short_float_long+0x354>
 8041626:	f04f 3aff 	mov.w	sl, #4294967295
 804162a:	f018 0f10 	tst.w	r8, #16
 804162e:	f000 8503 	beq.w	8042038 <__vfprintf_short_float_long+0xd74>
 8041632:	465a      	mov	r2, fp
 8041634:	4629      	mov	r1, r5
 8041636:	2020      	movs	r0, #32
 8041638:	f7fd fbae 	bl	803ed98 <__RAL_print_padding>
 804163c:	f000 bcfc 	b.w	8042038 <__vfprintf_short_float_long+0xd74>
 8041640:	4620      	mov	r0, r4
 8041642:	f7fe f861 	bl	803f708 <strlen>
 8041646:	4606      	mov	r6, r0
 8041648:	e7db      	b.n	8041602 <__vfprintf_short_float_long+0x33e>
 804164a:	9b03      	ldr	r3, [sp, #12]
 804164c:	1d1a      	adds	r2, r3, #4
 804164e:	9203      	str	r2, [sp, #12]
 8041650:	681b      	ldr	r3, [r3, #0]
 8041652:	f016 0f80 	tst.w	r6, #128	; 0x80
 8041656:	bf0c      	ite	eq
 8041658:	2400      	moveq	r4, #0
 804165a:	2423      	movne	r4, #35	; 0x23
 804165c:	f446 7680 	orr.w	r6, r6, #256	; 0x100
 8041660:	2708      	movs	r7, #8
 8041662:	461a      	mov	r2, r3
 8041664:	2b00      	cmp	r3, #0
 8041666:	f000 84b5 	beq.w	8041fd4 <__vfprintf_short_float_long+0xd10>
 804166a:	ab04      	add	r3, sp, #16
 804166c:	f04f 0800 	mov.w	r8, #0
 8041670:	f406 5000 	and.w	r0, r6, #8192	; 0x2000
 8041674:	f8df c1a4 	ldr.w	ip, [pc, #420]	; 804181c <__vfprintf_short_float_long+0x558>
 8041678:	46a6      	mov	lr, r4
 804167a:	f000 bc68 	b.w	8041f4e <__vfprintf_short_float_long+0xc8a>
 804167e:	f446 5600 	orr.w	r6, r6, #8192	; 0x2000
 8041682:	f016 0f80 	tst.w	r6, #128	; 0x80
 8041686:	d01b      	beq.n	80416c0 <__vfprintf_short_float_long+0x3fc>
 8041688:	f243 0478 	movw	r4, #12408	; 0x3078
 804168c:	f243 0358 	movw	r3, #12376	; 0x3058
 8041690:	2878      	cmp	r0, #120	; 0x78
 8041692:	bf18      	it	ne
 8041694:	461c      	movne	r4, r3
 8041696:	f416 7f80 	tst.w	r6, #256	; 0x100
 804169a:	d001      	beq.n	80416a0 <__vfprintf_short_float_long+0x3dc>
 804169c:	f426 7600 	bic.w	r6, r6, #512	; 0x200
 80416a0:	f416 4f80 	tst.w	r6, #16384	; 0x4000
 80416a4:	d032      	beq.n	804170c <__vfprintf_short_float_long+0x448>
 80416a6:	9b03      	ldr	r3, [sp, #12]
 80416a8:	1d1a      	adds	r2, r3, #4
 80416aa:	9203      	str	r2, [sp, #12]
 80416ac:	681b      	ldr	r3, [r3, #0]
 80416ae:	f016 0f04 	tst.w	r6, #4
 80416b2:	d01f      	beq.n	80416f4 <__vfprintf_short_float_long+0x430>
 80416b4:	b21b      	sxth	r3, r3
 80416b6:	2b00      	cmp	r3, #0
 80416b8:	da20      	bge.n	80416fc <__vfprintf_short_float_long+0x438>
 80416ba:	425b      	negs	r3, r3
 80416bc:	242d      	movs	r4, #45	; 0x2d
 80416be:	e02d      	b.n	804171c <__vfprintf_short_float_long+0x458>
 80416c0:	2400      	movs	r4, #0
 80416c2:	e7e8      	b.n	8041696 <__vfprintf_short_float_long+0x3d2>
 80416c4:	f016 0f80 	tst.w	r6, #128	; 0x80
 80416c8:	bf0c      	ite	eq
 80416ca:	2400      	moveq	r4, #0
 80416cc:	2430      	movne	r4, #48	; 0x30
 80416ce:	f416 7f80 	tst.w	r6, #256	; 0x100
 80416d2:	d0e5      	beq.n	80416a0 <__vfprintf_short_float_long+0x3dc>
 80416d4:	f426 7600 	bic.w	r6, r6, #512	; 0x200
 80416d8:	e7e2      	b.n	80416a0 <__vfprintf_short_float_long+0x3dc>
 80416da:	f416 7f80 	tst.w	r6, #256	; 0x100
 80416de:	d007      	beq.n	80416f0 <__vfprintf_short_float_long+0x42c>
 80416e0:	f426 7600 	bic.w	r6, r6, #512	; 0x200
 80416e4:	2400      	movs	r4, #0
 80416e6:	e7db      	b.n	80416a0 <__vfprintf_short_float_long+0x3dc>
 80416e8:	f446 4680 	orr.w	r6, r6, #16384	; 0x4000
 80416ec:	2400      	movs	r4, #0
 80416ee:	e7d7      	b.n	80416a0 <__vfprintf_short_float_long+0x3dc>
 80416f0:	2400      	movs	r4, #0
 80416f2:	e7d5      	b.n	80416a0 <__vfprintf_short_float_long+0x3dc>
 80416f4:	f016 0f08 	tst.w	r6, #8
 80416f8:	d0dd      	beq.n	80416b6 <__vfprintf_short_float_long+0x3f2>
 80416fa:	b2db      	uxtb	r3, r3
 80416fc:	f016 0f20 	tst.w	r6, #32
 8041700:	d161      	bne.n	80417c6 <__vfprintf_short_float_long+0x502>
 8041702:	f016 0f40 	tst.w	r6, #64	; 0x40
 8041706:	bf18      	it	ne
 8041708:	2420      	movne	r4, #32
 804170a:	e007      	b.n	804171c <__vfprintf_short_float_long+0x458>
 804170c:	9b03      	ldr	r3, [sp, #12]
 804170e:	1d1a      	adds	r2, r3, #4
 8041710:	9203      	str	r2, [sp, #12]
 8041712:	681b      	ldr	r3, [r3, #0]
 8041714:	f016 0f04 	tst.w	r6, #4
 8041718:	d050      	beq.n	80417bc <__vfprintf_short_float_long+0x4f8>
 804171a:	b29b      	uxth	r3, r3
 804171c:	f416 7f80 	tst.w	r6, #256	; 0x100
 8041720:	f000 83e4 	beq.w	8041eec <__vfprintf_short_float_long+0xc28>
 8041724:	f426 7600 	bic.w	r6, r6, #512	; 0x200
 8041728:	3858      	subs	r0, #88	; 0x58
 804172a:	2820      	cmp	r0, #32
 804172c:	f200 8439 	bhi.w	8041fa2 <__vfprintf_short_float_long+0xcde>
 8041730:	a201      	add	r2, pc, #4	; (adr r2, 8041738 <__vfprintf_short_float_long+0x474>)
 8041732:	f852 f020 	ldr.w	pc, [r2, r0, lsl #2]
 8041736:	bf00      	nop
 8041738:	08041663 	.word	0x08041663
 804173c:	08041fa3 	.word	0x08041fa3
 8041740:	08041fa3 	.word	0x08041fa3
 8041744:	08041fa3 	.word	0x08041fa3
 8041748:	08041fa3 	.word	0x08041fa3
 804174c:	08041fa3 	.word	0x08041fa3
 8041750:	08041fa3 	.word	0x08041fa3
 8041754:	08041fa3 	.word	0x08041fa3
 8041758:	08041fa3 	.word	0x08041fa3
 804175c:	08041fa3 	.word	0x08041fa3
 8041760:	08041fa3 	.word	0x08041fa3
 8041764:	08041fa3 	.word	0x08041fa3
 8041768:	08041f19 	.word	0x08041f19
 804176c:	08041fa3 	.word	0x08041fa3
 8041770:	08041fa3 	.word	0x08041fa3
 8041774:	08041fa3 	.word	0x08041fa3
 8041778:	08041fa3 	.word	0x08041fa3
 804177c:	08041f19 	.word	0x08041f19
 8041780:	08041fa3 	.word	0x08041fa3
 8041784:	08041fa3 	.word	0x08041fa3
 8041788:	08041fa3 	.word	0x08041fa3
 804178c:	08041fa3 	.word	0x08041fa3
 8041790:	08041fa3 	.word	0x08041fa3
 8041794:	08041ef1 	.word	0x08041ef1
 8041798:	08041663 	.word	0x08041663
 804179c:	08041fa3 	.word	0x08041fa3
 80417a0:	08041fa3 	.word	0x08041fa3
 80417a4:	08041fa3 	.word	0x08041fa3
 80417a8:	08041fa3 	.word	0x08041fa3
 80417ac:	08041f19 	.word	0x08041f19
 80417b0:	08041fa3 	.word	0x08041fa3
 80417b4:	08041fa3 	.word	0x08041fa3
 80417b8:	08041663 	.word	0x08041663
 80417bc:	f016 0f08 	tst.w	r6, #8
 80417c0:	d0ac      	beq.n	804171c <__vfprintf_short_float_long+0x458>
 80417c2:	b2db      	uxtb	r3, r3
 80417c4:	e7aa      	b.n	804171c <__vfprintf_short_float_long+0x458>
 80417c6:	242b      	movs	r4, #43	; 0x2b
 80417c8:	e7a8      	b.n	804171c <__vfprintf_short_float_long+0x458>
 80417ca:	f446 5600 	orr.w	r6, r6, #8192	; 0x2000
 80417ce:	f446 6680 	orr.w	r6, r6, #1024	; 0x400
 80417d2:	9b03      	ldr	r3, [sp, #12]
 80417d4:	3307      	adds	r3, #7
 80417d6:	f023 0307 	bic.w	r3, r3, #7
 80417da:	f103 0208 	add.w	r2, r3, #8
 80417de:	9203      	str	r2, [sp, #12]
 80417e0:	e9d3 0100 	ldrd	r0, r1, [r3]
 80417e4:	f7fc fe55 	bl	803e492 <__aeabi_d2f>
 80417e8:	ee08 0a10 	vmov	s16, r0
 80417ec:	f416 7f80 	tst.w	r6, #256	; 0x100
 80417f0:	d016      	beq.n	8041820 <__vfprintf_short_float_long+0x55c>
 80417f2:	b9b7      	cbnz	r7, 8041822 <__vfprintf_short_float_long+0x55e>
 80417f4:	f406 6740 	and.w	r7, r6, #3072	; 0xc00
 80417f8:	f5b7 6f40 	cmp.w	r7, #3072	; 0xc00
 80417fc:	bf14      	ite	ne
 80417fe:	2700      	movne	r7, #0
 8041800:	2701      	moveq	r7, #1
 8041802:	e00e      	b.n	8041822 <__vfprintf_short_float_long+0x55e>
 8041804:	f446 5600 	orr.w	r6, r6, #8192	; 0x2000
 8041808:	f446 6600 	orr.w	r6, r6, #2048	; 0x800
 804180c:	e7e1      	b.n	80417d2 <__vfprintf_short_float_long+0x50e>
 804180e:	f446 5600 	orr.w	r6, r6, #8192	; 0x2000
 8041812:	f446 6640 	orr.w	r6, r6, #3072	; 0xc00
 8041816:	e7dc      	b.n	80417d2 <__vfprintf_short_float_long+0x50e>
 8041818:	0804bd24 	.word	0x0804bd24
 804181c:	0804bae0 	.word	0x0804bae0
 8041820:	2706      	movs	r7, #6
 8041822:	eeb0 0a48 	vmov.f32	s0, s16
 8041826:	f7fd f830 	bl	803e88a <__float32_isinf>
 804182a:	2800      	cmp	r0, #0
 804182c:	f040 80b9 	bne.w	80419a2 <__vfprintf_short_float_long+0x6de>
 8041830:	eeb0 0a48 	vmov.f32	s0, s16
 8041834:	f7fd f833 	bl	803e89e <__float32_isnan>
 8041838:	4680      	mov	r8, r0
 804183a:	2800      	cmp	r0, #0
 804183c:	f040 80ca 	bne.w	80419d4 <__vfprintf_short_float_long+0x710>
 8041840:	eeb0 0a48 	vmov.f32	s0, s16
 8041844:	f7fd f81c 	bl	803e880 <__float32_signbit>
 8041848:	2800      	cmp	r0, #0
 804184a:	f040 80cc 	bne.w	80419e6 <__vfprintf_short_float_long+0x722>
 804184e:	ee18 3a10 	vmov	r3, s16
 8041852:	ee08 3a10 	vmov	s16, r3
 8041856:	a807      	add	r0, sp, #28
 8041858:	ee00 3a10 	vmov	s0, r3
 804185c:	f7fd f9ca 	bl	803ebf4 <frexp(float, int*)>
 8041860:	9b07      	ldr	r3, [sp, #28]
 8041862:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8041866:	4ac9      	ldr	r2, [pc, #804]	; (8041b8c <__vfprintf_short_float_long+0x8c8>)
 8041868:	fb82 1203 	smull	r1, r2, r2, r3
 804186c:	17db      	asrs	r3, r3, #31
 804186e:	ebc3 03a2 	rsb	r3, r3, r2, asr #2
 8041872:	9307      	str	r3, [sp, #28]
 8041874:	eeb5 8a40 	vcmp.f32	s16, #0.0
 8041878:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 804187c:	f040 80bd 	bne.w	80419fa <__vfprintf_short_float_long+0x736>
 8041880:	f406 6440 	and.w	r4, r6, #3072	; 0xc00
 8041884:	f5b4 6f80 	cmp.w	r4, #1024	; 0x400
 8041888:	d00a      	beq.n	80418a0 <__vfprintf_short_float_long+0x5dc>
 804188a:	f5b4 6f40 	cmp.w	r4, #3072	; 0xc00
 804188e:	f040 816c 	bne.w	8041b6a <__vfprintf_short_float_long+0x8a6>
 8041892:	9b07      	ldr	r3, [sp, #28]
 8041894:	42bb      	cmp	r3, r7
 8041896:	da03      	bge.n	80418a0 <__vfprintf_short_float_long+0x5dc>
 8041898:	f113 0f04 	cmn.w	r3, #4
 804189c:	f280 8165 	bge.w	8041b6a <__vfprintf_short_float_long+0x8a6>
 80418a0:	9807      	ldr	r0, [sp, #28]
 80418a2:	4240      	negs	r0, r0
 80418a4:	f7fd fa3c 	bl	803ed20 <__RAL_pow10f>
 80418a8:	ee28 8a00 	vmul.f32	s16, s16, s0
 80418ac:	ed8d 8a02 	vstr	s16, [sp, #8]
 80418b0:	eeb5 8a40 	vcmp.f32	s16, #0.0
 80418b4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80418b8:	d034      	beq.n	8041924 <__vfprintf_short_float_long+0x660>
 80418ba:	eeb0 0a48 	vmov.f32	s0, s16
 80418be:	f7fc ffe4 	bl	803e88a <__float32_isinf>
 80418c2:	2800      	cmp	r0, #0
 80418c4:	f040 80af 	bne.w	8041a26 <__vfprintf_short_float_long+0x762>
 80418c8:	eef2 7a04 	vmov.f32	s15, #36	; 0x41200000  10.0
 80418cc:	eeb4 8ae7 	vcmpe.f32	s16, s15
 80418d0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80418d4:	db0d      	blt.n	80418f2 <__vfprintf_short_float_long+0x62e>
 80418d6:	9b07      	ldr	r3, [sp, #28]
 80418d8:	eef2 7a04 	vmov.f32	s15, #36	; 0x41200000  10.0
 80418dc:	3301      	adds	r3, #1
 80418de:	ee88 8a27 	vdiv.f32	s16, s16, s15
 80418e2:	eeb4 8ae7 	vcmpe.f32	s16, s15
 80418e6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80418ea:	daf7      	bge.n	80418dc <__vfprintf_short_float_long+0x618>
 80418ec:	ed8d 8a02 	vstr	s16, [sp, #8]
 80418f0:	9307      	str	r3, [sp, #28]
 80418f2:	eddd 7a02 	vldr	s15, [sp, #8]
 80418f6:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80418fa:	eef4 7ac7 	vcmpe.f32	s15, s14
 80418fe:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8041902:	d50f      	bpl.n	8041924 <__vfprintf_short_float_long+0x660>
 8041904:	9b07      	ldr	r3, [sp, #28]
 8041906:	3b01      	subs	r3, #1
 8041908:	eef2 6a04 	vmov.f32	s13, #36	; 0x41200000  10.0
 804190c:	461a      	mov	r2, r3
 804190e:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8041912:	3b01      	subs	r3, #1
 8041914:	eef4 7ac7 	vcmpe.f32	s15, s14
 8041918:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 804191c:	d4f6      	bmi.n	804190c <__vfprintf_short_float_long+0x648>
 804191e:	edcd 7a02 	vstr	s15, [sp, #8]
 8041922:	9207      	str	r2, [sp, #28]
 8041924:	b127      	cbz	r7, 8041930 <__vfprintf_short_float_long+0x66c>
 8041926:	f5b4 6f40 	cmp.w	r4, #3072	; 0xc00
 804192a:	bf08      	it	eq
 804192c:	f107 37ff 	addeq.w	r7, r7, #4294967295
 8041930:	4278      	negs	r0, r7
 8041932:	f7fd f9f5 	bl	803ed20 <__RAL_pow10f>
 8041936:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 804193a:	ee60 7a27 	vmul.f32	s15, s0, s15
 804193e:	ed9d 7a02 	vldr	s14, [sp, #8]
 8041942:	ee77 7a87 	vadd.f32	s15, s15, s14
 8041946:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 804194a:	eef4 7ac7 	vcmpe.f32	s15, s14
 804194e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8041952:	f280 8081 	bge.w	8041a58 <__vfprintf_short_float_long+0x794>
 8041956:	eeb0 8a67 	vmov.f32	s16, s15
 804195a:	2f00      	cmp	r7, #0
 804195c:	f000 8091 	beq.w	8041a82 <__vfprintf_short_float_long+0x7be>
 8041960:	f406 6308 	and.w	r3, r6, #2176	; 0x880
 8041964:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 8041968:	d07e      	beq.n	8041a68 <__vfprintf_short_float_long+0x7a4>
 804196a:	f426 6300 	bic.w	r3, r6, #2048	; 0x800
 804196e:	9302      	str	r3, [sp, #8]
 8041970:	1d7b      	adds	r3, r7, #5
 8041972:	1aed      	subs	r5, r5, r3
 8041974:	3d01      	subs	r5, #1
 8041976:	f416 5f80 	tst.w	r6, #4096	; 0x1000
 804197a:	f000 80f3 	beq.w	8041b64 <__vfprintf_short_float_long+0x8a0>
 804197e:	9a07      	ldr	r2, [sp, #28]
 8041980:	4b83      	ldr	r3, [pc, #524]	; (8041b90 <__vfprintf_short_float_long+0x8cc>)
 8041982:	fb83 1302 	smull	r1, r3, r3, r2
 8041986:	eba3 73e2 	sub.w	r3, r3, r2, asr #31
 804198a:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 804198e:	1ad3      	subs	r3, r2, r3
 8041990:	3302      	adds	r3, #2
 8041992:	2b04      	cmp	r3, #4
 8041994:	f200 80e4 	bhi.w	8041b60 <__vfprintf_short_float_long+0x89c>
 8041998:	e8df f003 	tbb	[pc, r3]
 804199c:	9996da99 	.word	0x9996da99
 80419a0:	da          	.byte	0xda
 80419a1:	00          	.byte	0x00
 80419a2:	eeb5 8ac0 	vcmpe.f32	s16, #0.0
 80419a6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80419aa:	d40c      	bmi.n	80419c6 <__vfprintf_short_float_long+0x702>
 80419ac:	f416 5f00 	tst.w	r6, #8192	; 0x2000
 80419b0:	4c78      	ldr	r4, [pc, #480]	; (8041b94 <__vfprintf_short_float_long+0x8d0>)
 80419b2:	4b79      	ldr	r3, [pc, #484]	; (8041b98 <__vfprintf_short_float_long+0x8d4>)
 80419b4:	bf08      	it	eq
 80419b6:	461c      	moveq	r4, r3
 80419b8:	f016 0f20 	tst.w	r6, #32
 80419bc:	bf08      	it	eq
 80419be:	3401      	addeq	r4, #1
 80419c0:	f426 7680 	bic.w	r6, r6, #256	; 0x100
 80419c4:	e613      	b.n	80415ee <__vfprintf_short_float_long+0x32a>
 80419c6:	f416 5f00 	tst.w	r6, #8192	; 0x2000
 80419ca:	4c74      	ldr	r4, [pc, #464]	; (8041b9c <__vfprintf_short_float_long+0x8d8>)
 80419cc:	4b74      	ldr	r3, [pc, #464]	; (8041ba0 <__vfprintf_short_float_long+0x8dc>)
 80419ce:	bf08      	it	eq
 80419d0:	461c      	moveq	r4, r3
 80419d2:	e7f5      	b.n	80419c0 <__vfprintf_short_float_long+0x6fc>
 80419d4:	f416 5f00 	tst.w	r6, #8192	; 0x2000
 80419d8:	4c72      	ldr	r4, [pc, #456]	; (8041ba4 <__vfprintf_short_float_long+0x8e0>)
 80419da:	4b73      	ldr	r3, [pc, #460]	; (8041ba8 <__vfprintf_short_float_long+0x8e4>)
 80419dc:	bf08      	it	eq
 80419de:	461c      	moveq	r4, r3
 80419e0:	f426 7680 	bic.w	r6, r6, #256	; 0x100
 80419e4:	e603      	b.n	80415ee <__vfprintf_short_float_long+0x32a>
 80419e6:	f046 0660 	orr.w	r6, r6, #96	; 0x60
 80419ea:	eef1 7a48 	vneg.f32	s15, s16
 80419ee:	ee17 3a90 	vmov	r3, s15
 80419f2:	e72e      	b.n	8041852 <__vfprintf_short_float_long+0x58e>
 80419f4:	9b07      	ldr	r3, [sp, #28]
 80419f6:	3301      	adds	r3, #1
 80419f8:	9307      	str	r3, [sp, #28]
 80419fa:	9807      	ldr	r0, [sp, #28]
 80419fc:	3001      	adds	r0, #1
 80419fe:	f7fd f98f 	bl	803ed20 <__RAL_pow10f>
 8041a02:	eeb4 8ac0 	vcmpe.f32	s16, s0
 8041a06:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8041a0a:	dcf3      	bgt.n	80419f4 <__vfprintf_short_float_long+0x730>
 8041a0c:	e002      	b.n	8041a14 <__vfprintf_short_float_long+0x750>
 8041a0e:	9b07      	ldr	r3, [sp, #28]
 8041a10:	3b01      	subs	r3, #1
 8041a12:	9307      	str	r3, [sp, #28]
 8041a14:	9807      	ldr	r0, [sp, #28]
 8041a16:	f7fd f983 	bl	803ed20 <__RAL_pow10f>
 8041a1a:	eeb4 8ac0 	vcmpe.f32	s16, s0
 8041a1e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8041a22:	d4f4      	bmi.n	8041a0e <__vfprintf_short_float_long+0x74a>
 8041a24:	e72c      	b.n	8041880 <__vfprintf_short_float_long+0x5bc>
 8041a26:	eeb5 8ac0 	vcmpe.f32	s16, #0.0
 8041a2a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8041a2e:	d40c      	bmi.n	8041a4a <__vfprintf_short_float_long+0x786>
 8041a30:	f416 5f00 	tst.w	r6, #8192	; 0x2000
 8041a34:	4c57      	ldr	r4, [pc, #348]	; (8041b94 <__vfprintf_short_float_long+0x8d0>)
 8041a36:	4b58      	ldr	r3, [pc, #352]	; (8041b98 <__vfprintf_short_float_long+0x8d4>)
 8041a38:	bf08      	it	eq
 8041a3a:	461c      	moveq	r4, r3
 8041a3c:	f016 0f20 	tst.w	r6, #32
 8041a40:	bf08      	it	eq
 8041a42:	3401      	addeq	r4, #1
 8041a44:	f426 7680 	bic.w	r6, r6, #256	; 0x100
 8041a48:	e5d1      	b.n	80415ee <__vfprintf_short_float_long+0x32a>
 8041a4a:	f416 5f00 	tst.w	r6, #8192	; 0x2000
 8041a4e:	4c53      	ldr	r4, [pc, #332]	; (8041b9c <__vfprintf_short_float_long+0x8d8>)
 8041a50:	4b53      	ldr	r3, [pc, #332]	; (8041ba0 <__vfprintf_short_float_long+0x8dc>)
 8041a52:	bf08      	it	eq
 8041a54:	461c      	moveq	r4, r3
 8041a56:	e7f5      	b.n	8041a44 <__vfprintf_short_float_long+0x780>
 8041a58:	9b07      	ldr	r3, [sp, #28]
 8041a5a:	3301      	adds	r3, #1
 8041a5c:	9307      	str	r3, [sp, #28]
 8041a5e:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 8041a62:	ee87 8a87 	vdiv.f32	s16, s15, s14
 8041a66:	e778      	b.n	804195a <__vfprintf_short_float_long+0x696>
 8041a68:	2f09      	cmp	r7, #9
 8041a6a:	bfa8      	it	ge
 8041a6c:	2709      	movge	r7, #9
 8041a6e:	4638      	mov	r0, r7
 8041a70:	f7fd f956 	bl	803ed20 <__RAL_pow10f>
 8041a74:	ee60 7a08 	vmul.f32	s15, s0, s16
 8041a78:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8041a7c:	ee17 3a90 	vmov	r3, s15
 8041a80:	b94b      	cbnz	r3, 8041a96 <__vfprintf_short_float_long+0x7d2>
 8041a82:	f426 6300 	bic.w	r3, r6, #2048	; 0x800
 8041a86:	9302      	str	r3, [sp, #8]
 8041a88:	3d05      	subs	r5, #5
 8041a8a:	f016 0780 	ands.w	r7, r6, #128	; 0x80
 8041a8e:	f43f af72 	beq.w	8041976 <__vfprintf_short_float_long+0x6b2>
 8041a92:	4647      	mov	r7, r8
 8041a94:	e76e      	b.n	8041974 <__vfprintf_short_float_long+0x6b0>
 8041a96:	4a45      	ldr	r2, [pc, #276]	; (8041bac <__vfprintf_short_float_long+0x8e8>)
 8041a98:	fba2 1203 	umull	r1, r2, r2, r3
 8041a9c:	08d2      	lsrs	r2, r2, #3
 8041a9e:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 8041aa2:	ebb3 0f42 	cmp.w	r3, r2, lsl #1
 8041aa6:	f47f af60 	bne.w	804196a <__vfprintf_short_float_long+0x6a6>
 8041aaa:	4940      	ldr	r1, [pc, #256]	; (8041bac <__vfprintf_short_float_long+0x8e8>)
 8041aac:	fba1 2303 	umull	r2, r3, r1, r3
 8041ab0:	08db      	lsrs	r3, r3, #3
 8041ab2:	3f01      	subs	r7, #1
 8041ab4:	d0e5      	beq.n	8041a82 <__vfprintf_short_float_long+0x7be>
 8041ab6:	fba1 0203 	umull	r0, r2, r1, r3
 8041aba:	08d2      	lsrs	r2, r2, #3
 8041abc:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 8041ac0:	ebb3 0f42 	cmp.w	r3, r2, lsl #1
 8041ac4:	d0f2      	beq.n	8041aac <__vfprintf_short_float_long+0x7e8>
 8041ac6:	e750      	b.n	804196a <__vfprintf_short_float_long+0x6a6>
 8041ac8:	f04f 0801 	mov.w	r8, #1
 8041acc:	e008      	b.n	8041ae0 <__vfprintf_short_float_long+0x81c>
 8041ace:	eef2 7a04 	vmov.f32	s15, #36	; 0x41200000  10.0
 8041ad2:	ee27 8a88 	vmul.f32	s16, s15, s16
 8041ad6:	3a01      	subs	r2, #1
 8041ad8:	9207      	str	r2, [sp, #28]
 8041ada:	3d01      	subs	r5, #1
 8041adc:	f04f 0802 	mov.w	r8, #2
 8041ae0:	ea27 77e7 	bic.w	r7, r7, r7, asr #31
 8041ae4:	f016 0f60 	tst.w	r6, #96	; 0x60
 8041ae8:	bf18      	it	ne
 8041aea:	f105 35ff 	addne.w	r5, r5, #4294967295
 8041aee:	9807      	ldr	r0, [sp, #28]
 8041af0:	f7fd f96d 	bl	803edce <abs>
 8041af4:	2863      	cmp	r0, #99	; 0x63
 8041af6:	bfc8      	it	gt
 8041af8:	f105 35ff 	addgt.w	r5, r5, #4294967295
 8041afc:	eef0 7a48 	vmov.f32	s15, s16
 8041b00:	eebc 7ac8 	vcvt.u32.f32	s14, s16
 8041b04:	ee17 4a10 	vmov	r4, s14
 8041b08:	eeb8 8a47 	vcvt.f32.u32	s16, s14
 8041b0c:	ee37 8ac8 	vsub.f32	s16, s15, s16
 8041b10:	ea25 7ae5 	bic.w	sl, r5, r5, asr #31
 8041b14:	9b02      	ldr	r3, [sp, #8]
 8041b16:	f413 7f04 	tst.w	r3, #528	; 0x210
 8041b1a:	f000 80d5 	beq.w	8041cc8 <__vfprintf_short_float_long+0xa04>
 8041b1e:	9b02      	ldr	r3, [sp, #8]
 8041b20:	f013 0f20 	tst.w	r3, #32
 8041b24:	f000 80de 	beq.w	8041ce4 <__vfprintf_short_float_long+0xa20>
 8041b28:	f013 0f40 	tst.w	r3, #64	; 0x40
 8041b2c:	bf14      	ite	ne
 8041b2e:	212d      	movne	r1, #45	; 0x2d
 8041b30:	212b      	moveq	r1, #43	; 0x2b
 8041b32:	4658      	mov	r0, fp
 8041b34:	f7fd f916 	bl	803ed64 <__putc>
 8041b38:	9b02      	ldr	r3, [sp, #8]
 8041b3a:	f013 0f10 	tst.w	r3, #16
 8041b3e:	f000 80db 	beq.w	8041cf8 <__vfprintf_short_float_long+0xa34>
 8041b42:	4e1b      	ldr	r6, [pc, #108]	; (8041bb0 <__vfprintf_short_float_long+0x8ec>)
 8041b44:	f108 5500 	add.w	r5, r8, #536870912	; 0x20000000
 8041b48:	3d01      	subs	r5, #1
 8041b4a:	eb06 05c5 	add.w	r5, r6, r5, lsl #3
 8041b4e:	e0ea      	b.n	8041d26 <__vfprintf_short_float_long+0xa62>
 8041b50:	ee28 8a88 	vmul.f32	s16, s17, s16
 8041b54:	3a02      	subs	r2, #2
 8041b56:	9207      	str	r2, [sp, #28]
 8041b58:	3d02      	subs	r5, #2
 8041b5a:	f04f 0803 	mov.w	r8, #3
 8041b5e:	e7bf      	b.n	8041ae0 <__vfprintf_short_float_long+0x81c>
 8041b60:	46d0      	mov	r8, sl
 8041b62:	e7bd      	b.n	8041ae0 <__vfprintf_short_float_long+0x81c>
 8041b64:	f04f 0801 	mov.w	r8, #1
 8041b68:	e7bc      	b.n	8041ae4 <__vfprintf_short_float_long+0x820>
 8041b6a:	f416 6f80 	tst.w	r6, #1024	; 0x400
 8041b6e:	d03e      	beq.n	8041bee <__vfprintf_short_float_long+0x92a>
 8041b70:	9b07      	ldr	r3, [sp, #28]
 8041b72:	2b0e      	cmp	r3, #14
 8041b74:	dc3a      	bgt.n	8041bec <__vfprintf_short_float_long+0x928>
 8041b76:	3301      	adds	r3, #1
 8041b78:	1afc      	subs	r4, r7, r3
 8041b7a:	2c09      	cmp	r4, #9
 8041b7c:	bfa8      	it	ge
 8041b7e:	2409      	movge	r4, #9
 8041b80:	f016 0f80 	tst.w	r6, #128	; 0x80
 8041b84:	d016      	beq.n	8041bb4 <__vfprintf_short_float_long+0x8f0>
 8041b86:	4627      	mov	r7, r4
 8041b88:	e031      	b.n	8041bee <__vfprintf_short_float_long+0x92a>
 8041b8a:	bf00      	nop
 8041b8c:	66666667 	.word	0x66666667
 8041b90:	55555556 	.word	0x55555556
 8041b94:	0804bd3c 	.word	0x0804bd3c
 8041b98:	0804bd44 	.word	0x0804bd44
 8041b9c:	0804bd2c 	.word	0x0804bd2c
 8041ba0:	0804bd34 	.word	0x0804bd34
 8041ba4:	0804bd4c 	.word	0x0804bd4c
 8041ba8:	0804bd50 	.word	0x0804bd50
 8041bac:	cccccccd 	.word	0xcccccccd
 8041bb0:	0804bd58 	.word	0x0804bd58
 8041bb4:	42bb      	cmp	r3, r7
 8041bb6:	d06b      	beq.n	8041c90 <__vfprintf_short_float_long+0x9cc>
 8041bb8:	eef6 9a00 	vmov.f32	s19, #96	; 0x3f000000  0.5
 8041bbc:	eeb2 9a04 	vmov.f32	s18, #36	; 0x41200000  10.0
 8041bc0:	4620      	mov	r0, r4
 8041bc2:	f7fd f8ad 	bl	803ed20 <__RAL_pow10f>
 8041bc6:	ee28 0a00 	vmul.f32	s0, s16, s0
 8041bca:	ee30 0a29 	vadd.f32	s0, s0, s19
 8041bce:	f7fc ffb7 	bl	803eb40 <floor(float)>
 8041bd2:	eef0 0a49 	vmov.f32	s1, s18
 8041bd6:	f7fc ff31 	bl	803ea3c <fmod(float, float)>
 8041bda:	eeb5 0a40 	vcmp.f32	s0, #0.0
 8041bde:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8041be2:	d157      	bne.n	8041c94 <__vfprintf_short_float_long+0x9d0>
 8041be4:	3c01      	subs	r4, #1
 8041be6:	d1eb      	bne.n	8041bc0 <__vfprintf_short_float_long+0x8fc>
 8041be8:	4627      	mov	r7, r4
 8041bea:	e000      	b.n	8041bee <__vfprintf_short_float_long+0x92a>
 8041bec:	4647      	mov	r7, r8
 8041bee:	f426 6380 	bic.w	r3, r6, #1024	; 0x400
 8041bf2:	9302      	str	r3, [sp, #8]
 8041bf4:	9b07      	ldr	r3, [sp, #28]
 8041bf6:	4278      	negs	r0, r7
 8041bf8:	f1a3 0208 	sub.w	r2, r3, #8
 8041bfc:	4282      	cmp	r2, r0
 8041bfe:	bfc8      	it	gt
 8041c00:	f1a3 0009 	subgt.w	r0, r3, #9
 8041c04:	f7fd f88c 	bl	803ed20 <__RAL_pow10f>
 8041c08:	f04f 30ff 	mov.w	r0, #4294967295
 8041c0c:	f7fc ffce 	bl	803ebac <ldexp(float, int)>
 8041c10:	ee38 8a00 	vadd.f32	s16, s16, s0
 8041c14:	eeb0 9a48 	vmov.f32	s18, s16
 8041c18:	9807      	ldr	r0, [sp, #28]
 8041c1a:	3001      	adds	r0, #1
 8041c1c:	f7fd f880 	bl	803ed20 <__RAL_pow10f>
 8041c20:	eeb4 8ac0 	vcmpe.f32	s16, s0
 8041c24:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8041c28:	dd02      	ble.n	8041c30 <__vfprintf_short_float_long+0x96c>
 8041c2a:	9b07      	ldr	r3, [sp, #28]
 8041c2c:	3301      	adds	r3, #1
 8041c2e:	9307      	str	r3, [sp, #28]
 8041c30:	9807      	ldr	r0, [sp, #28]
 8041c32:	2800      	cmp	r0, #0
 8041c34:	db40      	blt.n	8041cb8 <__vfprintf_short_float_long+0x9f4>
 8041c36:	2809      	cmp	r0, #9
 8041c38:	dc2e      	bgt.n	8041c98 <__vfprintf_short_float_long+0x9d4>
 8041c3a:	eefc 7ac9 	vcvt.u32.f32	s15, s18
 8041c3e:	ee17 4a90 	vmov	r4, s15
 8041c42:	eeb8 8a67 	vcvt.f32.u32	s16, s15
 8041c46:	ee39 8a48 	vsub.f32	s16, s18, s16
 8041c4a:	2300      	movs	r3, #0
 8041c4c:	9307      	str	r3, [sp, #28]
 8041c4e:	4620      	mov	r0, r4
 8041c50:	2100      	movs	r1, #0
 8041c52:	2c09      	cmp	r4, #9
 8041c54:	d935      	bls.n	8041cc2 <__vfprintf_short_float_long+0x9fe>
 8041c56:	f8df c458 	ldr.w	ip, [pc, #1112]	; 80420b0 <__vfprintf_short_float_long+0xdec>
 8041c5a:	f04f 0801 	mov.w	r8, #1
 8041c5e:	f108 0801 	add.w	r8, r8, #1
 8041c62:	e9fc 2302 	ldrd	r2, r3, [ip, #8]!
 8041c66:	4299      	cmp	r1, r3
 8041c68:	bf08      	it	eq
 8041c6a:	4290      	cmpeq	r0, r2
 8041c6c:	d2f7      	bcs.n	8041c5e <__vfprintf_short_float_long+0x99a>
 8041c6e:	eb07 0308 	add.w	r3, r7, r8
 8041c72:	9a07      	ldr	r2, [sp, #28]
 8041c74:	4413      	add	r3, r2
 8041c76:	1aed      	subs	r5, r5, r3
 8041c78:	f006 0380 	and.w	r3, r6, #128	; 0x80
 8041c7c:	433b      	orrs	r3, r7
 8041c7e:	bf18      	it	ne
 8041c80:	f105 35ff 	addne.w	r5, r5, #4294967295
 8041c84:	f016 0f60 	tst.w	r6, #96	; 0x60
 8041c88:	bf18      	it	ne
 8041c8a:	f105 35ff 	addne.w	r5, r5, #4294967295
 8041c8e:	e73f      	b.n	8041b10 <__vfprintf_short_float_long+0x84c>
 8041c90:	4627      	mov	r7, r4
 8041c92:	e7ac      	b.n	8041bee <__vfprintf_short_float_long+0x92a>
 8041c94:	4627      	mov	r7, r4
 8041c96:	e7aa      	b.n	8041bee <__vfprintf_short_float_long+0x92a>
 8041c98:	f1a0 0309 	sub.w	r3, r0, #9
 8041c9c:	9307      	str	r3, [sp, #28]
 8041c9e:	f1c0 0009 	rsb	r0, r0, #9
 8041ca2:	f7fd f83d 	bl	803ed20 <__RAL_pow10f>
 8041ca6:	ee29 9a00 	vmul.f32	s18, s18, s0
 8041caa:	eefc 7ac9 	vcvt.u32.f32	s15, s18
 8041cae:	ee17 4a90 	vmov	r4, s15
 8041cb2:	ee08 8a10 	vmov	s16, r8
 8041cb6:	e7ca      	b.n	8041c4e <__vfprintf_short_float_long+0x98a>
 8041cb8:	2400      	movs	r4, #0
 8041cba:	9407      	str	r4, [sp, #28]
 8041cbc:	f04f 0801 	mov.w	r8, #1
 8041cc0:	e7d5      	b.n	8041c6e <__vfprintf_short_float_long+0x9aa>
 8041cc2:	f04f 0801 	mov.w	r8, #1
 8041cc6:	e7d2      	b.n	8041c6e <__vfprintf_short_float_long+0x9aa>
 8041cc8:	2d00      	cmp	r5, #0
 8041cca:	f77f af28 	ble.w	8041b1e <__vfprintf_short_float_long+0x85a>
 8041cce:	2520      	movs	r5, #32
 8041cd0:	4656      	mov	r6, sl
 8041cd2:	3e01      	subs	r6, #1
 8041cd4:	4629      	mov	r1, r5
 8041cd6:	4658      	mov	r0, fp
 8041cd8:	f7fd f844 	bl	803ed64 <__putc>
 8041cdc:	2e00      	cmp	r6, #0
 8041cde:	d1f8      	bne.n	8041cd2 <__vfprintf_short_float_long+0xa0e>
 8041ce0:	46b2      	mov	sl, r6
 8041ce2:	e71c      	b.n	8041b1e <__vfprintf_short_float_long+0x85a>
 8041ce4:	9b02      	ldr	r3, [sp, #8]
 8041ce6:	f013 0f40 	tst.w	r3, #64	; 0x40
 8041cea:	f43f af25 	beq.w	8041b38 <__vfprintf_short_float_long+0x874>
 8041cee:	2120      	movs	r1, #32
 8041cf0:	4658      	mov	r0, fp
 8041cf2:	f7fd f837 	bl	803ed64 <__putc>
 8041cf6:	e71f      	b.n	8041b38 <__vfprintf_short_float_long+0x874>
 8041cf8:	f1ba 0f00 	cmp.w	sl, #0
 8041cfc:	f43f af21 	beq.w	8041b42 <__vfprintf_short_float_long+0x87e>
 8041d00:	2530      	movs	r5, #48	; 0x30
 8041d02:	4656      	mov	r6, sl
 8041d04:	3e01      	subs	r6, #1
 8041d06:	4629      	mov	r1, r5
 8041d08:	4658      	mov	r0, fp
 8041d0a:	f7fd f82b 	bl	803ed64 <__putc>
 8041d0e:	2e00      	cmp	r6, #0
 8041d10:	d1f8      	bne.n	8041d04 <__vfprintf_short_float_long+0xa40>
 8041d12:	46b2      	mov	sl, r6
 8041d14:	e715      	b.n	8041b42 <__vfprintf_short_float_long+0x87e>
 8041d16:	f04f 0c30 	mov.w	ip, #48	; 0x30
 8041d1a:	4661      	mov	r1, ip
 8041d1c:	4658      	mov	r0, fp
 8041d1e:	f7fd f821 	bl	803ed64 <__putc>
 8041d22:	45b0      	cmp	r8, r6
 8041d24:	d015      	beq.n	8041d52 <__vfprintf_short_float_long+0xa8e>
 8041d26:	e9d5 2300 	ldrd	r2, r3, [r5]
 8041d2a:	46a8      	mov	r8, r5
 8041d2c:	3d08      	subs	r5, #8
 8041d2e:	2100      	movs	r1, #0
 8041d30:	4299      	cmp	r1, r3
 8041d32:	bf08      	it	eq
 8041d34:	4294      	cmpeq	r4, r2
 8041d36:	d3ee      	bcc.n	8041d16 <__vfprintf_short_float_long+0xa52>
 8041d38:	f04f 0c30 	mov.w	ip, #48	; 0x30
 8041d3c:	f10c 0c01 	add.w	ip, ip, #1
 8041d40:	fa5f fc8c 	uxtb.w	ip, ip
 8041d44:	1aa4      	subs	r4, r4, r2
 8041d46:	2100      	movs	r1, #0
 8041d48:	4299      	cmp	r1, r3
 8041d4a:	bf08      	it	eq
 8041d4c:	4294      	cmpeq	r4, r2
 8041d4e:	d2f5      	bcs.n	8041d3c <__vfprintf_short_float_long+0xa78>
 8041d50:	e7e3      	b.n	8041d1a <__vfprintf_short_float_long+0xa56>
 8041d52:	9b02      	ldr	r3, [sp, #8]
 8041d54:	f413 6400 	ands.w	r4, r3, #2048	; 0x800
 8041d58:	d149      	bne.n	8041dee <__vfprintf_short_float_long+0xb2a>
 8041d5a:	2f00      	cmp	r7, #0
 8041d5c:	d155      	bne.n	8041e0a <__vfprintf_short_float_long+0xb46>
 8041d5e:	9b02      	ldr	r3, [sp, #8]
 8041d60:	f013 0f80 	tst.w	r3, #128	; 0x80
 8041d64:	f040 8191 	bne.w	804208a <__vfprintf_short_float_long+0xdc6>
 8041d68:	9b02      	ldr	r3, [sp, #8]
 8041d6a:	f413 6f80 	tst.w	r3, #1024	; 0x400
 8041d6e:	d02f      	beq.n	8041dd0 <__vfprintf_short_float_long+0xb0c>
 8041d70:	f413 5f00 	tst.w	r3, #8192	; 0x2000
 8041d74:	bf14      	ite	ne
 8041d76:	2145      	movne	r1, #69	; 0x45
 8041d78:	2165      	moveq	r1, #101	; 0x65
 8041d7a:	4658      	mov	r0, fp
 8041d7c:	f7fc fff2 	bl	803ed64 <__putc>
 8041d80:	9b07      	ldr	r3, [sp, #28]
 8041d82:	2b00      	cmp	r3, #0
 8041d84:	f2c0 8094 	blt.w	8041eb0 <__vfprintf_short_float_long+0xbec>
 8041d88:	212b      	movs	r1, #43	; 0x2b
 8041d8a:	4658      	mov	r0, fp
 8041d8c:	f7fc ffea 	bl	803ed64 <__putc>
 8041d90:	9907      	ldr	r1, [sp, #28]
 8041d92:	2963      	cmp	r1, #99	; 0x63
 8041d94:	f300 8094 	bgt.w	8041ec0 <__vfprintf_short_float_long+0xbfc>
 8041d98:	9907      	ldr	r1, [sp, #28]
 8041d9a:	4cc1      	ldr	r4, [pc, #772]	; (80420a0 <__vfprintf_short_float_long+0xddc>)
 8041d9c:	fb84 3201 	smull	r3, r2, r4, r1
 8041da0:	17c9      	asrs	r1, r1, #31
 8041da2:	ebc1 01a2 	rsb	r1, r1, r2, asr #2
 8041da6:	3130      	adds	r1, #48	; 0x30
 8041da8:	b2c9      	uxtb	r1, r1
 8041daa:	4658      	mov	r0, fp
 8041dac:	f7fc ffda 	bl	803ed64 <__putc>
 8041db0:	9b07      	ldr	r3, [sp, #28]
 8041db2:	fb84 2403 	smull	r2, r4, r4, r3
 8041db6:	17d9      	asrs	r1, r3, #31
 8041db8:	ebc1 01a4 	rsb	r1, r1, r4, asr #2
 8041dbc:	eb01 0181 	add.w	r1, r1, r1, lsl #2
 8041dc0:	eba3 0341 	sub.w	r3, r3, r1, lsl #1
 8041dc4:	f103 0130 	add.w	r1, r3, #48	; 0x30
 8041dc8:	b2c9      	uxtb	r1, r1
 8041dca:	4658      	mov	r0, fp
 8041dcc:	f7fc ffca 	bl	803ed64 <__putc>
 8041dd0:	f1ba 0f00 	cmp.w	sl, #0
 8041dd4:	f000 8130 	beq.w	8042038 <__vfprintf_short_float_long+0xd74>
 8041dd8:	2420      	movs	r4, #32
 8041dda:	4655      	mov	r5, sl
 8041ddc:	3d01      	subs	r5, #1
 8041dde:	4621      	mov	r1, r4
 8041de0:	4658      	mov	r0, fp
 8041de2:	f7fc ffbf 	bl	803ed64 <__putc>
 8041de6:	2d00      	cmp	r5, #0
 8041de8:	d1f8      	bne.n	8041ddc <__vfprintf_short_float_long+0xb18>
 8041dea:	46aa      	mov	sl, r5
 8041dec:	e124      	b.n	8042038 <__vfprintf_short_float_long+0xd74>
 8041dee:	9b07      	ldr	r3, [sp, #28]
 8041df0:	2b00      	cmp	r3, #0
 8041df2:	ddb2      	ble.n	8041d5a <__vfprintf_short_float_long+0xa96>
 8041df4:	2530      	movs	r5, #48	; 0x30
 8041df6:	3b01      	subs	r3, #1
 8041df8:	9307      	str	r3, [sp, #28]
 8041dfa:	4629      	mov	r1, r5
 8041dfc:	4658      	mov	r0, fp
 8041dfe:	f7fc ffb1 	bl	803ed64 <__putc>
 8041e02:	9b07      	ldr	r3, [sp, #28]
 8041e04:	2b00      	cmp	r3, #0
 8041e06:	dcf6      	bgt.n	8041df6 <__vfprintf_short_float_long+0xb32>
 8041e08:	e7a7      	b.n	8041d5a <__vfprintf_short_float_long+0xa96>
 8041e0a:	212e      	movs	r1, #46	; 0x2e
 8041e0c:	4658      	mov	r0, fp
 8041e0e:	f7fc ffa9 	bl	803ed64 <__putc>
 8041e12:	463d      	mov	r5, r7
 8041e14:	2f09      	cmp	r7, #9
 8041e16:	bfa8      	it	ge
 8041e18:	2509      	movge	r5, #9
 8041e1a:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8041e1e:	1b7f      	subs	r7, r7, r5
 8041e20:	b18c      	cbz	r4, 8041e46 <__vfprintf_short_float_long+0xb82>
 8041e22:	9807      	ldr	r0, [sp, #28]
 8041e24:	1a28      	subs	r0, r5, r0
 8041e26:	f7fc ff7b 	bl	803ed20 <__RAL_pow10f>
 8041e2a:	ee20 8a08 	vmul.f32	s16, s0, s16
 8041e2e:	eefc 7ac8 	vcvt.u32.f32	s15, s16
 8041e32:	ee17 4a90 	vmov	r4, s15
 8041e36:	b37d      	cbz	r5, 8041e98 <__vfprintf_short_float_long+0xbd4>
 8041e38:	f105 5500 	add.w	r5, r5, #536870912	; 0x20000000
 8041e3c:	3d01      	subs	r5, #1
 8041e3e:	4b99      	ldr	r3, [pc, #612]	; (80420a4 <__vfprintf_short_float_long+0xde0>)
 8041e40:	eb03 05c5 	add.w	r5, r3, r5, lsl #3
 8041e44:	e019      	b.n	8041e7a <__vfprintf_short_float_long+0xbb6>
 8041e46:	4628      	mov	r0, r5
 8041e48:	f7fc ff6a 	bl	803ed20 <__RAL_pow10f>
 8041e4c:	ee20 8a08 	vmul.f32	s16, s0, s16
 8041e50:	eefc 7ac8 	vcvt.u32.f32	s15, s16
 8041e54:	ee17 4a90 	vmov	r4, s15
 8041e58:	e7ed      	b.n	8041e36 <__vfprintf_short_float_long+0xb72>
 8041e5a:	f10c 0c01 	add.w	ip, ip, #1
 8041e5e:	fa5f fc8c 	uxtb.w	ip, ip
 8041e62:	1aa4      	subs	r4, r4, r2
 8041e64:	2100      	movs	r1, #0
 8041e66:	4299      	cmp	r1, r3
 8041e68:	bf08      	it	eq
 8041e6a:	4294      	cmpeq	r4, r2
 8041e6c:	d2f5      	bcs.n	8041e5a <__vfprintf_short_float_long+0xb96>
 8041e6e:	4661      	mov	r1, ip
 8041e70:	4658      	mov	r0, fp
 8041e72:	f7fc ff77 	bl	803ed64 <__putc>
 8041e76:	45b0      	cmp	r8, r6
 8041e78:	d00e      	beq.n	8041e98 <__vfprintf_short_float_long+0xbd4>
 8041e7a:	e9d5 2300 	ldrd	r2, r3, [r5]
 8041e7e:	46a8      	mov	r8, r5
 8041e80:	3d08      	subs	r5, #8
 8041e82:	2100      	movs	r1, #0
 8041e84:	4299      	cmp	r1, r3
 8041e86:	bf08      	it	eq
 8041e88:	4294      	cmpeq	r4, r2
 8041e8a:	d302      	bcc.n	8041e92 <__vfprintf_short_float_long+0xbce>
 8041e8c:	f04f 0c30 	mov.w	ip, #48	; 0x30
 8041e90:	e7e3      	b.n	8041e5a <__vfprintf_short_float_long+0xb96>
 8041e92:	f04f 0c30 	mov.w	ip, #48	; 0x30
 8041e96:	e7ea      	b.n	8041e6e <__vfprintf_short_float_long+0xbaa>
 8041e98:	2f00      	cmp	r7, #0
 8041e9a:	f43f af65 	beq.w	8041d68 <__vfprintf_short_float_long+0xaa4>
 8041e9e:	2430      	movs	r4, #48	; 0x30
 8041ea0:	3f01      	subs	r7, #1
 8041ea2:	4621      	mov	r1, r4
 8041ea4:	4658      	mov	r0, fp
 8041ea6:	f7fc ff5d 	bl	803ed64 <__putc>
 8041eaa:	2f00      	cmp	r7, #0
 8041eac:	d1f8      	bne.n	8041ea0 <__vfprintf_short_float_long+0xbdc>
 8041eae:	e75b      	b.n	8041d68 <__vfprintf_short_float_long+0xaa4>
 8041eb0:	212d      	movs	r1, #45	; 0x2d
 8041eb2:	4658      	mov	r0, fp
 8041eb4:	f7fc ff56 	bl	803ed64 <__putc>
 8041eb8:	9b07      	ldr	r3, [sp, #28]
 8041eba:	425b      	negs	r3, r3
 8041ebc:	9307      	str	r3, [sp, #28]
 8041ebe:	e767      	b.n	8041d90 <__vfprintf_short_float_long+0xacc>
 8041ec0:	4c79      	ldr	r4, [pc, #484]	; (80420a8 <__vfprintf_short_float_long+0xde4>)
 8041ec2:	fb84 3201 	smull	r3, r2, r4, r1
 8041ec6:	17c9      	asrs	r1, r1, #31
 8041ec8:	ebc1 1162 	rsb	r1, r1, r2, asr #5
 8041ecc:	3130      	adds	r1, #48	; 0x30
 8041ece:	b2c9      	uxtb	r1, r1
 8041ed0:	4658      	mov	r0, fp
 8041ed2:	f7fc ff47 	bl	803ed64 <__putc>
 8041ed6:	9a07      	ldr	r2, [sp, #28]
 8041ed8:	fb84 3102 	smull	r3, r1, r4, r2
 8041edc:	17d3      	asrs	r3, r2, #31
 8041ede:	ebc3 1361 	rsb	r3, r3, r1, asr #5
 8041ee2:	2164      	movs	r1, #100	; 0x64
 8041ee4:	fb01 2313 	mls	r3, r1, r3, r2
 8041ee8:	9307      	str	r3, [sp, #28]
 8041eea:	e755      	b.n	8041d98 <__vfprintf_short_float_long+0xad4>
 8041eec:	2701      	movs	r7, #1
 8041eee:	e41b      	b.n	8041728 <__vfprintf_short_float_long+0x464>
 8041ef0:	461a      	mov	r2, r3
 8041ef2:	f04f 0800 	mov.w	r8, #0
 8041ef6:	2b00      	cmp	r3, #0
 8041ef8:	d055      	beq.n	8041fa6 <__vfprintf_short_float_long+0xce2>
 8041efa:	a904      	add	r1, sp, #16
 8041efc:	f04f 0800 	mov.w	r8, #0
 8041f00:	f003 0307 	and.w	r3, r3, #7
 8041f04:	3330      	adds	r3, #48	; 0x30
 8041f06:	f801 3b01 	strb.w	r3, [r1], #1
 8041f0a:	f108 0801 	add.w	r8, r8, #1
 8041f0e:	08d2      	lsrs	r2, r2, #3
 8041f10:	4613      	mov	r3, r2
 8041f12:	2a00      	cmp	r2, #0
 8041f14:	d1f4      	bne.n	8041f00 <__vfprintf_short_float_long+0xc3c>
 8041f16:	e046      	b.n	8041fa6 <__vfprintf_short_float_long+0xce2>
 8041f18:	4619      	mov	r1, r3
 8041f1a:	f04f 0800 	mov.w	r8, #0
 8041f1e:	2b00      	cmp	r3, #0
 8041f20:	d041      	beq.n	8041fa6 <__vfprintf_short_float_long+0xce2>
 8041f22:	f04f 0800 	mov.w	r8, #0
 8041f26:	f406 4e00 	and.w	lr, r6, #32768	; 0x8000
 8041f2a:	f04f 0a2c 	mov.w	sl, #44	; 0x2c
 8041f2e:	f8df c184 	ldr.w	ip, [pc, #388]	; 80420b4 <__vfprintf_short_float_long+0xdf0>
 8041f32:	4673      	mov	r3, lr
 8041f34:	46a6      	mov	lr, r4
 8041f36:	461c      	mov	r4, r3
 8041f38:	e024      	b.n	8041f84 <__vfprintf_short_float_long+0xcc0>
 8041f3a:	f002 010f 	and.w	r1, r2, #15
 8041f3e:	4c5b      	ldr	r4, [pc, #364]	; (80420ac <__vfprintf_short_float_long+0xde8>)
 8041f40:	5c61      	ldrb	r1, [r4, r1]
 8041f42:	f803 1b01 	strb.w	r1, [r3], #1
 8041f46:	f108 0801 	add.w	r8, r8, #1
 8041f4a:	0912      	lsrs	r2, r2, #4
 8041f4c:	d006      	beq.n	8041f5c <__vfprintf_short_float_long+0xc98>
 8041f4e:	2800      	cmp	r0, #0
 8041f50:	d0f3      	beq.n	8041f3a <__vfprintf_short_float_long+0xc76>
 8041f52:	f002 010f 	and.w	r1, r2, #15
 8041f56:	f81c 1001 	ldrb.w	r1, [ip, r1]
 8041f5a:	e7f2      	b.n	8041f42 <__vfprintf_short_float_long+0xc7e>
 8041f5c:	4674      	mov	r4, lr
 8041f5e:	e022      	b.n	8041fa6 <__vfprintf_short_float_long+0xce2>
 8041f60:	ab08      	add	r3, sp, #32
 8041f62:	eb03 0008 	add.w	r0, r3, r8
 8041f66:	fbac 3201 	umull	r3, r2, ip, r1
 8041f6a:	08d2      	lsrs	r2, r2, #3
 8041f6c:	eb02 0382 	add.w	r3, r2, r2, lsl #2
 8041f70:	eba1 0343 	sub.w	r3, r1, r3, lsl #1
 8041f74:	3330      	adds	r3, #48	; 0x30
 8041f76:	f800 3c10 	strb.w	r3, [r0, #-16]
 8041f7a:	f108 0801 	add.w	r8, r8, #1
 8041f7e:	2909      	cmp	r1, #9
 8041f80:	d90d      	bls.n	8041f9e <__vfprintf_short_float_long+0xcda>
 8041f82:	4611      	mov	r1, r2
 8041f84:	2c00      	cmp	r4, #0
 8041f86:	d0eb      	beq.n	8041f60 <__vfprintf_short_float_long+0xc9c>
 8041f88:	f008 0303 	and.w	r3, r8, #3
 8041f8c:	2b03      	cmp	r3, #3
 8041f8e:	d1e7      	bne.n	8041f60 <__vfprintf_short_float_long+0xc9c>
 8041f90:	ab08      	add	r3, sp, #32
 8041f92:	4443      	add	r3, r8
 8041f94:	f803 ac10 	strb.w	sl, [r3, #-16]
 8041f98:	f108 0801 	add.w	r8, r8, #1
 8041f9c:	e7e0      	b.n	8041f60 <__vfprintf_short_float_long+0xc9c>
 8041f9e:	4674      	mov	r4, lr
 8041fa0:	e001      	b.n	8041fa6 <__vfprintf_short_float_long+0xce2>
 8041fa2:	f04f 0800 	mov.w	r8, #0
 8041fa6:	eba7 0708 	sub.w	r7, r7, r8
 8041faa:	ea27 77e7 	bic.w	r7, r7, r7, asr #31
 8041fae:	1bed      	subs	r5, r5, r7
 8041fb0:	eba5 0508 	sub.w	r5, r5, r8
 8041fb4:	2cff      	cmp	r4, #255	; 0xff
 8041fb6:	d910      	bls.n	8041fda <__vfprintf_short_float_long+0xd16>
 8041fb8:	3d02      	subs	r5, #2
 8041fba:	f416 7f00 	tst.w	r6, #512	; 0x200
 8041fbe:	d011      	beq.n	8041fe4 <__vfprintf_short_float_long+0xd20>
 8041fc0:	f3c4 2107 	ubfx	r1, r4, #8, #8
 8041fc4:	4658      	mov	r0, fp
 8041fc6:	f7fc fecd 	bl	803ed64 <__putc>
 8041fca:	b2e1      	uxtb	r1, r4
 8041fcc:	4658      	mov	r0, fp
 8041fce:	f7fc fec9 	bl	803ed64 <__putc>
 8041fd2:	e012      	b.n	8041ffa <__vfprintf_short_float_long+0xd36>
 8041fd4:	f04f 0800 	mov.w	r8, #0
 8041fd8:	e7e5      	b.n	8041fa6 <__vfprintf_short_float_long+0xce2>
 8041fda:	2c00      	cmp	r4, #0
 8041fdc:	d15b      	bne.n	8042096 <__vfprintf_short_float_long+0xdd2>
 8041fde:	f416 7f00 	tst.w	r6, #512	; 0x200
 8041fe2:	d10a      	bne.n	8041ffa <__vfprintf_short_float_long+0xd36>
 8041fe4:	465a      	mov	r2, fp
 8041fe6:	4629      	mov	r1, r5
 8041fe8:	4630      	mov	r0, r6
 8041fea:	f7fc fee3 	bl	803edb4 <__RAL_pre_padding>
 8041fee:	2cff      	cmp	r4, #255	; 0xff
 8041ff0:	bf98      	it	ls
 8041ff2:	2500      	movls	r5, #0
 8041ff4:	d82c      	bhi.n	8042050 <__vfprintf_short_float_long+0xd8c>
 8041ff6:	2c00      	cmp	r4, #0
 8041ff8:	d1e7      	bne.n	8041fca <__vfprintf_short_float_long+0xd06>
 8041ffa:	465a      	mov	r2, fp
 8041ffc:	4629      	mov	r1, r5
 8041ffe:	4630      	mov	r0, r6
 8042000:	f7fc fed8 	bl	803edb4 <__RAL_pre_padding>
 8042004:	465a      	mov	r2, fp
 8042006:	4639      	mov	r1, r7
 8042008:	2030      	movs	r0, #48	; 0x30
 804200a:	f7fc fec5 	bl	803ed98 <__RAL_print_padding>
 804200e:	f1b8 0a01 	subs.w	sl, r8, #1
 8042012:	d40e      	bmi.n	8042032 <__vfprintf_short_float_long+0xd6e>
 8042014:	ab04      	add	r3, sp, #16
 8042016:	4654      	mov	r4, sl
 8042018:	441c      	add	r4, r3
 804201a:	4698      	mov	r8, r3
 804201c:	7821      	ldrb	r1, [r4, #0]
 804201e:	4627      	mov	r7, r4
 8042020:	4658      	mov	r0, fp
 8042022:	f7fc fe9f 	bl	803ed64 <__putc>
 8042026:	4544      	cmp	r4, r8
 8042028:	f104 34ff 	add.w	r4, r4, #4294967295
 804202c:	d1f6      	bne.n	804201c <__vfprintf_short_float_long+0xd58>
 804202e:	f04f 3aff 	mov.w	sl, #4294967295
 8042032:	f016 0f10 	tst.w	r6, #16
 8042036:	d10d      	bne.n	8042054 <__vfprintf_short_float_long+0xd90>
 8042038:	464d      	mov	r5, r9
 804203a:	f815 1b01 	ldrb.w	r1, [r5], #1
 804203e:	b179      	cbz	r1, 8042060 <__vfprintf_short_float_long+0xd9c>
 8042040:	2925      	cmp	r1, #37	; 0x25
 8042042:	f43f a952 	beq.w	80412ea <__vfprintf_short_float_long+0x26>
 8042046:	4658      	mov	r0, fp
 8042048:	f7fc fe8c 	bl	803ed64 <__putc>
 804204c:	46a9      	mov	r9, r5
 804204e:	e7f3      	b.n	8042038 <__vfprintf_short_float_long+0xd74>
 8042050:	2500      	movs	r5, #0
 8042052:	e7b5      	b.n	8041fc0 <__vfprintf_short_float_long+0xcfc>
 8042054:	465a      	mov	r2, fp
 8042056:	4629      	mov	r1, r5
 8042058:	2020      	movs	r0, #32
 804205a:	f7fc fe9d 	bl	803ed98 <__RAL_print_padding>
 804205e:	e7eb      	b.n	8042038 <__vfprintf_short_float_long+0xd74>
 8042060:	f8db 3008 	ldr.w	r3, [fp, #8]
 8042064:	b13b      	cbz	r3, 8042076 <__vfprintf_short_float_long+0xdb2>
 8042066:	f8db 2000 	ldr.w	r2, [fp]
 804206a:	f8db 1004 	ldr.w	r1, [fp, #4]
 804206e:	428a      	cmp	r2, r1
 8042070:	bf3c      	itt	cc
 8042072:	2100      	movcc	r1, #0
 8042074:	5499      	strbcc	r1, [r3, r2]
 8042076:	f8db 0000 	ldr.w	r0, [fp]
 804207a:	b009      	add	sp, #36	; 0x24
 804207c:	ecbd 8b04 	vpop	{d8-d9}
 8042080:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8042084:	f04f 30ff 	mov.w	r0, #4294967295
 8042088:	e7f7      	b.n	804207a <__vfprintf_short_float_long+0xdb6>
 804208a:	212e      	movs	r1, #46	; 0x2e
 804208c:	4658      	mov	r0, fp
 804208e:	f7fc fe69 	bl	803ed64 <__putc>
 8042092:	463d      	mov	r5, r7
 8042094:	e6c3      	b.n	8041e1e <__vfprintf_short_float_long+0xb5a>
 8042096:	3d01      	subs	r5, #1
 8042098:	f416 7f00 	tst.w	r6, #512	; 0x200
 804209c:	d1ab      	bne.n	8041ff6 <__vfprintf_short_float_long+0xd32>
 804209e:	e7a1      	b.n	8041fe4 <__vfprintf_short_float_long+0xd20>
 80420a0:	66666667 	.word	0x66666667
 80420a4:	0804bd58 	.word	0x0804bd58
 80420a8:	51eb851f 	.word	0x51eb851f
 80420ac:	0804bad0 	.word	0x0804bad0
 80420b0:	0804bd60 	.word	0x0804bd60
 80420b4:	cccccccd 	.word	0xcccccccd
